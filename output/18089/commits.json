[
  {
    "sha": "35dac18b7d0892d20744bb0217f3a7e21baa1193",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNWRhYzE4YjdkMDg5MmQyMDc0NGJiMDIxN2YzYTdlMjFiYWExMTkz",
    "commit": {
      "author": {
        "name": "Tim Horie",
        "email": "tak@thorie.com",
        "date": "2020-02-01T03:50:16Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2020-02-01T03:50:16Z"
      },
      "message": "Merge pull request #1 from bitcoin/master\n\nMerge from bitcoin/bitcoin",
      "tree": {
        "sha": "cad87e1bd74a33cb37c95929178a5b83941c4847",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cad87e1bd74a33cb37c95929178a5b83941c4847"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35dac18b7d0892d20744bb0217f3a7e21baa1193",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeNPV4CRBK7hj4Ov3rIwAAdHIIAJrgQotj3ZqIpv3rYngIRUR8\nRTRdUT44zUnqi4J5l7yi70UIWVi/ObzJP9P4Akh9VJ2JU3bRYXUrxVLNWVgJwZXy\nUqWecE3IgTwYxYqFYJ4n+ynTynFyP9FA/kKVeE6l++bkdWpjR4gJrv7a8utJnjtt\nNJr+tdRpt9uLhZdRgsnMOZCxW7iOKnQhpWydo0cnXd2JB1GccQkpUkSpaFhutoys\nKUuo6b+t0VHm536mATcA5pHTmqlO/pFjjglH2QAAKU/6TDWIrlT8rl8f/cefE4wN\nMtMcAJdjB5DoIT0nl2MAaYKJorWb8q1t2FyJG6P8erDzDGw7jLo6tA6BIq9xnYg=\n=XPQu\n-----END PGP SIGNATURE-----\n",
        "payload": "tree cad87e1bd74a33cb37c95929178a5b83941c4847\nparent bc94b87487824c6fba45788facf96faba97a4aa6\nparent d104aa0ace36f5c2a125d8ae80f2e7e746f9eab8\nauthor Tim Horie <tak@thorie.com> 1580529016 -0800\ncommitter GitHub <noreply@github.com> 1580529016 -0800\n\nMerge pull request #1 from bitcoin/master\n\nMerge from bitcoin/bitcoin"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35dac18b7d0892d20744bb0217f3a7e21baa1193",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35dac18b7d0892d20744bb0217f3a7e21baa1193",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35dac18b7d0892d20744bb0217f3a7e21baa1193/comments",
    "author": {
      "login": "thorie7912",
      "id": 869094,
      "node_id": "MDQ6VXNlcjg2OTA5NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/869094?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thorie7912",
      "html_url": "https://github.com/thorie7912",
      "followers_url": "https://api.github.com/users/thorie7912/followers",
      "following_url": "https://api.github.com/users/thorie7912/following{/other_user}",
      "gists_url": "https://api.github.com/users/thorie7912/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thorie7912/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thorie7912/subscriptions",
      "organizations_url": "https://api.github.com/users/thorie7912/orgs",
      "repos_url": "https://api.github.com/users/thorie7912/repos",
      "events_url": "https://api.github.com/users/thorie7912/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thorie7912/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bc94b87487824c6fba45788facf96faba97a4aa6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc94b87487824c6fba45788facf96faba97a4aa6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "d104aa0ace36f5c2a125d8ae80f2e7e746f9eab8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d104aa0ace36f5c2a125d8ae80f2e7e746f9eab8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d104aa0ace36f5c2a125d8ae80f2e7e746f9eab8"
      }
    ],
    "stats": {
      "total": 442196,
      "additions": 318129,
      "deletions": 124067
    },
    "files": [
      {
        "sha": "777eebd2c397e3c8e5cc8c6b664ae3486916c4ae",
        "filename": ".appveyor.yml",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,92 @@\n+version: '{branch}.{build}'\n+skip_tags: true\n+image: Visual Studio 2019\n+configuration: Release\n+platform: x64\n+clone_depth: 5\n+environment:\n+  APPVEYOR_SAVE_CACHE_ON_ERROR: true\n+  CLCACHE_SERVER: 1\n+  PATH: 'C:\\Python37-x64;C:\\Python37-x64\\Scripts;%PATH%'\n+  PYTHONUTF8: 1\n+  QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'\n+  QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n+  QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n+  VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n+  VCPKG_COMMIT_ID: 'ed0df8ecc4ed7e755ea03e18aaf285fd9b4b4a74'\n+cache:\n+- C:\\tools\\vcpkg\\installed -> build_msvc\\vcpkg-packages.txt\n+- C:\\Users\\appveyor\\clcache -> .appveyor.yml, build_msvc\\**, **\\Makefile.am, **\\*.vcxproj.in\n+- C:\\Qt5.9.8_x64_static_vs2019\n+install:\n+- cmd: pip install --quiet git+https://github.com/frerich/clcache.git@v4.2.0\n+# Disable zmq test for now since python zmq library on Windows would cause Access violation sometimes.\n+# - cmd: pip install zmq\n+# Powershell block below is to install the c++ dependencies via vcpkg. The pseudo code is:\n+# 1. Check whether the vcpkg install directory exists (note that updating the vcpkg-packages.txt file\n+#    will cause the appveyor cache rules to invalidate the directory)\n+# 2. If the directory is missing:\n+#    a. Checkout the vcpkg source (including port files) for the specific checkout and build the vcpkg binary,\n+#    b. Install the missing packages.\n+- ps: |\n+      $env:PACKAGES = Get-Content -Path build_msvc\\vcpkg-packages.txt\n+      Write-Host \"vcpkg list: $env:PACKAGES\"\n+      if(!(Test-Path -Path ($env:VCPKG_INSTALL_PATH))) {\n+          cd c:\\tools\\vcpkg\n+          $env:GIT_REDIRECT_STDERR = '2>&1' # git is writing non-errors to STDERR when doing git pull. Send to STDOUT instead.\n+          git pull origin master\n+          git checkout $env:VCPKG_COMMIT_ID\n+          .\\bootstrap-vcpkg.bat\n+          Add-Content \"C:\\tools\\vcpkg\\triplets\\$env:PLATFORM-windows-static.cmake\" \"set(VCPKG_BUILD_TYPE release)\"\n+          .\\vcpkg install --triplet $env:PLATFORM-windows-static $env:PACKAGES.split() > $null\n+          cd \"$env:APPVEYOR_BUILD_FOLDER\"\n+      }\n+      else {\n+        Write-Host \"required vcpkg packages already installed.\"\n+      }\n+      c:\\tools\\vcpkg\\vcpkg integrate install\n+before_build:\n+- ps:  clcache -M 536870912\n+# Powershell block below is to download and extract the Qt static libraries. The pseudo code is:\n+# 1. If the Qt destination directory exists assume it is correct and do nothing. To\n+#    force a fresh install of the packages delete the job's appveyor cache.\n+# 2. Otherwise:\n+#    a. Download the zip file with the prebuilt Qt static libraries.\n+#    b. Check that the downloaded file matches the expected hash.\n+#    c. Extract the zip file to the specific destination path expected by the msbuild projects.\n+- ps: |\n+      if(!(Test-Path -Path ($env:QT_LOCAL_PATH))) {\n+        Write-Host \"Downloading Qt binaries.\";\n+        Invoke-WebRequest -Uri $env:QT_DOWNLOAD_URL -Out qtdownload.zip;\n+        Write-Host \"Qt binaries successfully downloaded, checking hash against $env:QT_DOWNLOAD_HASH...\";\n+        if((Get-FileHash qtdownload.zip).Hash -eq $env:QT_DOWNLOAD_HASH) {\n+          Expand-Archive qtdownload.zip -DestinationPath $env:QT_LOCAL_PATH;\n+          Write-Host \"Qt binary download matched the expected hash.\";\n+        }\n+        else {\n+          Write-Host \"ERROR: Qt binary download did not match the expected hash.\";\n+          Exit-AppveyorBuild;\n+        }\n+      }\n+      else {\n+         Write-Host \"Qt binaries already present.\";\n+      }\n+- cmd: python build_msvc\\msvc-autogen.py\n+- ps:  Start-Process clcache-server\n+- ps:  fsutil behavior set disablelastaccess 0 # Enable Access time feature on Windows (for clcache)\n+build_script:\n+- cmd: msbuild /p:TrackFileAccess=false /p:CLToolExe=clcache.exe build_msvc\\bitcoin.sln /m /v:q /nologo\n+after_build:\n+- ps:  fsutil behavior set disablelastaccess 1 # Disable Access time feature on Windows (better performance)\n+- ps:  clcache -z\n+#- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n+test_script:\n+- cmd: src\\test_bitcoin.exe -k stdout -e stdout 2> NUL\n+- cmd: src\\bench_bitcoin.exe -evals=1 -scaling=0 > NUL\n+- ps:  python test\\util\\bitcoin-util-test.py\n+- cmd: python test\\util\\rpcauth-test.py\n+# Fee estimation test failing on appveyor with: WinError 10048] Only one usage of each socket address (protocol/network address/port) is normally permitted.\n+- cmd: python test\\functional\\test_runner.py --ci --quiet --combinedlogslen=4000 --failfast --exclude feature_fee_estimation\n+artifacts:\n+#- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n+deploy: off"
      },
      {
        "sha": "f4a3878ed8058bbc999a99a83c6873d82d5f3753",
        "filename": ".cirrus.yml",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,53 @@\n+task:\n+  name: \"FreeBsd 12.0 amd64  [GOAL: install]  [no depends, only system libs]\"\n+  freebsd_instance:\n+    image: freebsd-12-0-release-amd64\n+    cpu: 8\n+    memory: 8G\n+  timeout_in: 60m\n+  env:\n+    MAKEJOBS: \"-j9\"\n+    CONFIGURE_OPTS: \"--disable-dependency-tracking\"\n+    GOAL: \"install\"\n+    TEST_RUNNER_PORT_MIN: \"14000\"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache\n+    CCACHE_SIZE: \"200M\"\n+    CCACHE_COMPRESS: 1\n+    CCACHE_DIR: \"/tmp/ccache_dir\"\n+  ccache_cache:\n+    folder: \"/tmp/ccache_dir\"\n+  install_script:\n+    - pkg install -y autoconf automake boost-libs git gmake libevent libtool pkgconf python3 ccache\n+    - ./contrib/install_db4.sh $(pwd)\n+    - ccache --max-size=${CCACHE_SIZE}\n+  configure_script:\n+    - ./autogen.sh\n+    - ./configure ${CONFIGURE_OPTS} BDB_LIBS=\"-L$(pwd)/db4/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I$(pwd)/db4/include\" || ( cat config.log && false)\n+  make_script:\n+    - gmake ${MAKEJOBS} ${GOAL} || ( echo \"Build failure. Verbose build follows.\" && gmake ${GOAL} V=1 ; false )\n+  check_script:\n+    - gmake check ${MAKEJOBS} VERBOSE=1\n+  functional_test_script:\n+    - ./test/functional/test_runner.py --jobs 9 --ci --extended --exclude feature_dbcrash --combinedlogslen=1000 --quiet --failfast\n+task:\n+  name: \"x86_64 Linux  [GOAL: install]  [bionic]  [Using ./ci/ system]\"\n+  container:\n+    image: ubuntu:18.04\n+    cpu: 8\n+    memory: 8G\n+  timeout_in: 60m\n+  env:\n+    MAKEJOBS: \"-j9\"\n+    RUN_CI_ON_HOST: \"1\"\n+    TEST_RUNNER_PORT_MIN: \"14000\"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache\n+    CCACHE_SIZE: \"200M\"\n+    CCACHE_DIR: \"/tmp/ccache_dir\"\n+  ccache_cache:\n+    folder: \"/tmp/ccache_dir\"\n+  depends_built_cache:\n+    folder: \"/tmp/cirrus-ci-build/depends/built\"\n+  install_script:\n+    - apt-get update\n+    - apt-get -y install git bash ccache\n+    - ccache --max-size=${CCACHE_SIZE}\n+  ci_script:\n+    - ./ci/test_run_all.sh"
      },
      {
        "sha": "35b42424adb3fec05b52b44da20382f0b3abd5dc",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,23 @@\n+<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n+\n+General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n+\n+For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n+\n+If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\n+\n+<!-- Describe the issue -->\n+<!--- What behavior did you expect? -->\n+\n+<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n+\n+<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n+\n+<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n+\n+<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n+\n+<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n+\n+<!-- Any extra information that might be useful in the debugging process. -->\n+<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "fb91208954ea9698d5610a85a1a9b3efb7311142",
        "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/.github/ISSUE_TEMPLATE/bug_report.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/.github/ISSUE_TEMPLATE/bug_report.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/bug_report.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,41 @@\n+---\n+name: Bug report\n+about: Create a report to help us improve (use this for suspected bugs only, if not sure, open a regular issue below)\n+title: ''\n+labels: Bug\n+assignees: ''\n+\n+---\n+\n+<!-- This issue tracker is only for technical issues related to Bitcoin Core.\n+\n+General bitcoin questions and/or support requests are best directed to the Bitcoin StackExchange at https://bitcoin.stackexchange.com.\n+\n+For reporting security issues, please read instructions at https://bitcoincore.org/en/contact/.\n+\n+If the node is \"stuck\" during sync or giving \"block checksum mismatch\" errors, please ensure your hardware is stable by running memtest and observe CPU temperature with a load-test tool such as linpack before creating an issue! -->\n+\n+<!-- Describe the issue -->\n+\n+**Expected behavior**\n+\n+<!--- What behavior did you expect? -->\n+\n+**Actual behavior**\n+\n+<!--- What was the actual behavior (provide screenshots if the issue is GUI-related)? -->\n+\n+**To reproduce**\n+\n+<!--- How reliably can you reproduce the issue, what are the steps to do so? -->\n+\n+**System information**\n+\n+<!-- What version of Bitcoin Core are you using, where did you get it (website, self-compiled, etc)? -->\n+\n+<!-- What type of machine are you observing the error on (OS/CPU and disk type)? -->\n+\n+<!-- GUI-related issue? What is your operating system and its version? If Linux, what is your desktop environment and graphical shell? -->\n+\n+<!-- Any extra information that might be useful in the debugging process. -->\n+<!--- This is normally the contents of a `debug.log` or `config.log` file. Raw text or a link to a pastebin type site are preferred. -->"
      },
      {
        "sha": "2d5685185ea3621cb9c7d83e62a628468cb9f786",
        "filename": ".github/ISSUE_TEMPLATE/feature_request.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/.github/ISSUE_TEMPLATE/feature_request.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/.github/ISSUE_TEMPLATE/feature_request.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/feature_request.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,20 @@\n+---\n+name: Feature request\n+about: Suggest an idea for this project\n+title: ''\n+labels: Feature\n+assignees: ''\n+\n+---\n+\n+**Is your feature request related to a problem? Please describe.**\n+<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\n+\n+**Describe the solution you'd like**\n+<!-- A clear and concise description of what you want to happen. -->\n+\n+**Describe alternatives you've considered**\n+<!-- A clear and concise description of any alternative solutions or features you've considered. -->\n+\n+**Additional context**\n+<!-- Add any other context or screenshots about the feature request here. -->"
      },
      {
        "sha": "c441f7a307a97fb5be00e67267f60f63b51c6a90",
        "filename": ".github/ISSUE_TEMPLATE/good_first_issue.md",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/.github/ISSUE_TEMPLATE/good_first_issue.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE/good_first_issue.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,21 @@\n+---\n+name: Good first issue\n+about: '(Regular devs only): Suggest a new good first issue'\n+title: ''\n+labels: good first issue\n+assignees: ''\n+\n+---\n+\n+\n+#### Useful skills:\n+\n+<!-- (For example, \u201cC++11 std::thread\u201d, \u201cQt5 GUI and async GUI design\u201d or \u201cbasic understanding of Bitcoin mining and the Bitcoin Core RPC interface\u201d.) -->\n+\n+#### Want to work on this issue?\n+\n+The purpose of the `good first issue` label is to highlight which issues are suitable for a new contributor without a deep understanding of the codebase.\n+\n+You do not need to request permission to start working on this. You are encouraged to comment on the issue if you are planning to work on it. This will help other contributors monitor which issues are actively being addressed and is also an effective way to request assistance if and when you need it.\n+\n+For guidance on contributing, please read [CONTRIBUTING.md](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md) before opening your pull request."
      },
      {
        "sha": "d2c3b233751f8f0c189e143ba2c379cd0c35a631",
        "filename": ".github/PULL_REQUEST_TEMPLATE.md",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/.github/PULL_REQUEST_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/.github/PULL_REQUEST_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/PULL_REQUEST_TEMPLATE.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,39 @@\n+<!--\n+*** Please remove the following help text before submitting: ***\n+\n+Pull requests without a rationale and clear improvement may be closed\n+immediately.\n+-->\n+\n+<!--\n+Please provide clear motivation for your patch and explain how it improves\n+Bitcoin Core user experience or Bitcoin Core developer experience\n+significantly:\n+\n+* Any test improvements or new tests that improve coverage are always welcome.\n+* All other changes should have accompanying unit tests (see `src/test/`) or\n+  functional tests (see `test/`). Contributors should note which tests cover\n+  modified code. If no tests exist for a region of modified code, new tests\n+  should accompany the change.\n+* Bug fixes are most welcome when they come with steps to reproduce or an\n+  explanation of the potential issue as well as reasoning for the way the bug\n+  was fixed.\n+* Features are welcome, but might be rejected due to design or scope issues.\n+  If a feature is based on a lot of dependencies, contributors should first\n+  consider building the system outside of Bitcoin Core, if possible.\n+* Refactoring changes are only accepted if they are required for a feature or\n+  bug fix or otherwise improve developer experience significantly. For example,\n+  most \"code style\" refactoring changes require a thorough explanation why they\n+  are useful, what downsides they have and why they *significantly* improve\n+  developer experience or avoid serious programming bugs. Note that code style\n+  is often a subjective matter. Unless they are explicitly mentioned to be\n+  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\n+  changes are usually rejected.\n+-->\n+\n+<!--\n+Bitcoin Core has a thorough review process and even the most trivial change\n+needs to pass a lot of eyes and requires non-zero or even substantial time\n+effort to review. There is a huge lack of active reviewers on the project, so\n+patches often sit for a long time.\n+-->"
      },
      {
        "sha": "db493811c522accf37547ffe8a5d73880c0df32b",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 34,
        "deletions": 10,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,10 +1,14 @@\n *.tar.gz\n \n *.exe\n+*.pdb\n src/bitcoin\n src/bitcoind\n src/bitcoin-cli\n src/bitcoin-tx\n+src/bitcoin-wallet\n+src/test/fuzz\n+!src/test/fuzz/*.*\n src/test/test_bitcoin\n src/qt/test/test_bitcoin-qt\n \n@@ -25,13 +29,15 @@ build-aux/m4/ltversion.m4\n build-aux/missing\n build-aux/compile\n build-aux/test-driver\n+config.cache\n config.log\n config.status\n configure\n libtool\n src/config/bitcoin-config.h\n src/config/bitcoin-config.h.in\n src/config/stamp-h1\n+src/obj\n share/setup.nsi\n share/qt/Info.plist\n \n@@ -43,6 +49,12 @@ src/qt/forms/ui_*.h\n \n src/qt/test/moc*.cpp\n \n+src/qt/bitcoin-qt.config\n+src/qt/bitcoin-qt.creator\n+src/qt/bitcoin-qt.creator.user\n+src/qt/bitcoin-qt.files\n+src/qt/bitcoin-qt.includes\n+\n .deps\n .dirstamp\n .libs\n@@ -54,11 +66,10 @@ src/qt/test/moc*.cpp\n *.pyc\n *.o\n *.o-*\n-*.patch\n-.bitcoin\n *.a\n *.pb.cc\n *.pb.h\n+*.dat\n \n *.log\n *.trs\n@@ -67,20 +78,28 @@ src/qt/test/moc*.cpp\n *.json.h\n *.raw.h\n \n+# Only ignore unexpected patches\n+*.patch\n+!depends/patches/**/*.patch\n+\n #libtool object files\n *.lo\n *.la\n \n # Compilation and Qt preprocessor part\n *.qm\n Makefile\n+!depends/Makefile\n bitcoin-qt\n Bitcoin-Qt.app\n+background.tiff*\n+\n+# Qt Creator\n+Makefile.am.user\n \n # Unit-tests\n Makefile.test\n bitcoin-qt_test\n-src/test/buildenv.py\n \n # Resources cpp\n qrc_*.cpp\n@@ -101,17 +120,22 @@ coverage_percent.txt\n linux-coverage-build\n linux-build\n win32-build\n-qa/pull-tester/run-bitcoind-for-test.sh\n-qa/pull-tester/tests_config.py\n-qa/pull-tester/cache/*\n-qa/pull-tester/test.*/*\n-qa/tmp\n-cache/\n-share/BitcoindComparisonTool.jar\n+test/config.ini\n+test/cache/*\n \n !src/leveldb*/Makefile\n \n /doc/doxygen/\n \n libbitcoinconsensus.pc\n contrib/devtools/split-debug.sh\n+\n+# Output from running db4 installation\n+db4/\n+\n+# clang-check\n+*.plist\n+\n+osx_volname\n+dist/\n+*.background.tiff"
      },
      {
        "sha": "c49282585a030b902316d2b71a73b15b5840aaa2",
        "filename": ".python-version",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/.python-version",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/.python-version",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.python-version?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1 @@\n+3.5.6"
      },
      {
        "sha": "69d8c6aee417d6fd300990e3c34ae719f16406a2",
        "filename": ".style.yapf",
        "status": "added",
        "additions": 261,
        "deletions": 0,
        "changes": 261,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/.style.yapf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/.style.yapf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.style.yapf?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,261 @@\n+[style]\n+# Align closing bracket with visual indentation.\n+align_closing_bracket_with_visual_indent=True\n+\n+# Allow dictionary keys to exist on multiple lines. For example:\n+#\n+#   x = {\n+#       ('this is the first element of a tuple',\n+#        'this is the second element of a tuple'):\n+#            value,\n+#   }\n+allow_multiline_dictionary_keys=False\n+\n+# Allow lambdas to be formatted on more than one line.\n+allow_multiline_lambdas=False\n+\n+# Allow splits before the dictionary value.\n+allow_split_before_dict_value=True\n+\n+# Number of blank lines surrounding top-level function and class\n+# definitions.\n+blank_lines_around_top_level_definition=2\n+\n+# Insert a blank line before a class-level docstring.\n+blank_line_before_class_docstring=False\n+\n+# Insert a blank line before a module docstring.\n+blank_line_before_module_docstring=False\n+\n+# Insert a blank line before a 'def' or 'class' immediately nested\n+# within another 'def' or 'class'. For example:\n+#\n+#   class Foo:\n+#                      # <------ this blank line\n+#     def method():\n+#       ...\n+blank_line_before_nested_class_or_def=False\n+\n+# Do not split consecutive brackets. Only relevant when\n+# dedent_closing_brackets is set. For example:\n+#\n+#    call_func_that_takes_a_dict(\n+#        {\n+#            'key1': 'value1',\n+#            'key2': 'value2',\n+#        }\n+#    )\n+#\n+# would reformat to:\n+#\n+#    call_func_that_takes_a_dict({\n+#        'key1': 'value1',\n+#        'key2': 'value2',\n+#    })\n+coalesce_brackets=False\n+\n+# The column limit.\n+column_limit=160\n+\n+# The style for continuation alignment. Possible values are:\n+#\n+# - SPACE: Use spaces for continuation alignment. This is default behavior.\n+# - FIXED: Use fixed number (CONTINUATION_INDENT_WIDTH) of columns\n+#   (ie: CONTINUATION_INDENT_WIDTH/INDENT_WIDTH tabs) for continuation\n+#   alignment.\n+# - LESS: Slightly left if cannot vertically align continuation lines with\n+#   indent characters.\n+# - VALIGN-RIGHT: Vertically align continuation lines with indent\n+#   characters. Slightly right (one more indent character) if cannot\n+#   vertically align continuation lines with indent characters.\n+#\n+# For options FIXED, and VALIGN-RIGHT are only available when USE_TABS is\n+# enabled.\n+continuation_align_style=SPACE\n+\n+# Indent width used for line continuations.\n+continuation_indent_width=4\n+\n+# Put closing brackets on a separate line, dedented, if the bracketed\n+# expression can't fit in a single line. Applies to all kinds of brackets,\n+# including function definitions and calls. For example:\n+#\n+#   config = {\n+#       'key1': 'value1',\n+#       'key2': 'value2',\n+#   }        # <--- this bracket is dedented and on a separate line\n+#\n+#   time_series = self.remote_client.query_entity_counters(\n+#       entity='dev3246.region1',\n+#       key='dns.query_latency_tcp',\n+#       transform=Transformation.AVERAGE(window=timedelta(seconds=60)),\n+#       start_ts=now()-timedelta(days=3),\n+#       end_ts=now(),\n+#   )        # <--- this bracket is dedented and on a separate line\n+dedent_closing_brackets=False\n+\n+# Disable the heuristic which places each list element on a separate line\n+# if the list is comma-terminated.\n+disable_ending_comma_heuristic=False\n+\n+# Place each dictionary entry onto its own line.\n+each_dict_entry_on_separate_line=True\n+\n+# The regex for an i18n comment. The presence of this comment stops\n+# reformatting of that line, because the comments are required to be\n+# next to the string they translate.\n+i18n_comment=\n+\n+# The i18n function call names. The presence of this function stops\n+# reformattting on that line, because the string it has cannot be moved\n+# away from the i18n comment.\n+i18n_function_call=\n+\n+# Indent the dictionary value if it cannot fit on the same line as the\n+# dictionary key. For example:\n+#\n+#   config = {\n+#       'key1':\n+#           'value1',\n+#       'key2': value1 +\n+#               value2,\n+#   }\n+indent_dictionary_value=False\n+\n+# The number of columns to use for indentation.\n+indent_width=4\n+\n+# Join short lines into one line. E.g., single line 'if' statements.\n+join_multiple_lines=True\n+\n+# Do not include spaces around selected binary operators. For example:\n+#\n+#   1 + 2 * 3 - 4 / 5\n+#\n+# will be formatted as follows when configured with \"*,/\":\n+#\n+#   1 + 2*3 - 4/5\n+#\n+no_spaces_around_selected_binary_operators=\n+\n+# Use spaces around default or named assigns.\n+spaces_around_default_or_named_assign=False\n+\n+# Use spaces around the power operator.\n+spaces_around_power_operator=False\n+\n+# The number of spaces required before a trailing comment.\n+spaces_before_comment=2\n+\n+# Insert a space between the ending comma and closing bracket of a list,\n+# etc.\n+space_between_ending_comma_and_closing_bracket=True\n+\n+# Split before arguments\n+split_all_comma_separated_values=False\n+\n+# Split before arguments if the argument list is terminated by a\n+# comma.\n+split_arguments_when_comma_terminated=False\n+\n+# Set to True to prefer splitting before '&', '|' or '^' rather than\n+# after.\n+split_before_bitwise_operator=True\n+\n+# Split before the closing bracket if a list or dict literal doesn't fit on\n+# a single line.\n+split_before_closing_bracket=True\n+\n+# Split before a dictionary or set generator (comp_for). For example, note\n+# the split before the 'for':\n+#\n+#   foo = {\n+#       variable: 'Hello world, have a nice day!'\n+#       for variable in bar if variable != 42\n+#   }\n+split_before_dict_set_generator=True\n+\n+# Split before the '.' if we need to split a longer expression:\n+#\n+#   foo = ('This is a really long string: {}, {}, {}, {}'.format(a, b, c, d))\n+#\n+# would reformat to something like:\n+#\n+#   foo = ('This is a really long string: {}, {}, {}, {}'\n+#          .format(a, b, c, d))\n+split_before_dot=False\n+\n+# Split after the opening paren which surrounds an expression if it doesn't\n+# fit on a single line.\n+split_before_expression_after_opening_paren=False\n+\n+# If an argument / parameter list is going to be split, then split before\n+# the first argument.\n+split_before_first_argument=False\n+\n+# Set to True to prefer splitting before 'and' or 'or' rather than\n+# after.\n+split_before_logical_operator=True\n+\n+# Split named assignments onto individual lines.\n+split_before_named_assigns=True\n+\n+# Set to True to split list comprehensions and generators that have\n+# non-trivial expressions and multiple clauses before each of these\n+# clauses. For example:\n+#\n+#   result = [\n+#       a_long_var + 100 for a_long_var in xrange(1000)\n+#       if a_long_var % 10]\n+#\n+# would reformat to something like:\n+#\n+#   result = [\n+#       a_long_var + 100\n+#       for a_long_var in xrange(1000)\n+#       if a_long_var % 10]\n+split_complex_comprehension=False\n+\n+# The penalty for splitting right after the opening bracket.\n+split_penalty_after_opening_bracket=30\n+\n+# The penalty for splitting the line after a unary operator.\n+split_penalty_after_unary_operator=10000\n+\n+# The penalty for splitting right before an if expression.\n+split_penalty_before_if_expr=0\n+\n+# The penalty of splitting the line around the '&', '|', and '^'\n+# operators.\n+split_penalty_bitwise_operator=300\n+\n+# The penalty for splitting a list comprehension or generator\n+# expression.\n+split_penalty_comprehension=80\n+\n+# The penalty for characters over the column limit.\n+split_penalty_excess_character=7000\n+\n+# The penalty incurred by adding a line split to the unwrapped line. The\n+# more line splits added the higher the penalty.\n+split_penalty_for_added_line_split=30\n+\n+# The penalty of splitting a list of \"import as\" names. For example:\n+#\n+#   from a_very_long_or_indented_module_name_yada_yad import (long_argument_1,\n+#                                                             long_argument_2,\n+#                                                             long_argument_3)\n+#\n+# would reformat to something like:\n+#\n+#   from a_very_long_or_indented_module_name_yada_yad import (\n+#       long_argument_1, long_argument_2, long_argument_3)\n+split_penalty_import_names=0\n+\n+# The penalty of splitting the line around the 'and' and 'or'\n+# operators.\n+split_penalty_logical_operator=300\n+\n+# Use the Tab character for indentation.\n+use_tabs=False\n+"
      },
      {
        "sha": "fbc81b261420869ac2146295e422b41385d73b22",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 141,
        "deletions": 62,
        "changes": 203,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,73 +1,152 @@\n-sudo: required\n-dist: trusty\n-\n-#workaround for https://github.com/travis-ci/travis-ci/issues/5227\n-addons:\n-  hostname: bitcoin-tester\n+# The test build matrix (stage: test) is constructed to test a wide range of\n+# configurations, rather than a single pass/fail. This helps to catch build\n+# failures and logic errors that present on platforms other than the ones the\n+# author has tested.\n+#\n+# Some builders use the dependency-generator in `./depends`, rather than using\n+# apt-get to install build dependencies. This guarantees that the tester is\n+# using the same versions as Gitian, so the build results are nearly identical\n+# to what would be found in a final release.\n+#\n+# In order to avoid rebuilding all dependencies for each build, the binaries\n+# are cached and re-used when possible. Changes in the dependency-generator\n+# will trigger cache-invalidation and rebuilds as necessary.\n+#\n+# These caches can be manually removed if necessary. This is one of the very\n+# few manual operations that is possible with Travis, and it can be done by a\n+# Bitcoin Core GitHub member via the Travis web interface [0].\n+#\n+# Travis CI uploads the cache after the script phase of the build [1].\n+# However, the build is terminated without saving the cache if it takes over\n+# 50 minutes [2]. Thus, if we spent too much time in early build stages, fail\n+# with an error and save the cache.\n+#\n+# [0] https://travis-ci.org/bitcoin/bitcoin/caches\n+# [1] https://docs.travis-ci.com/user/caching/#build-phases\n+# [2] https://docs.travis-ci.com/user/customizing-the-build#build-timeouts\n \n+dist: xenial\n os: linux\n-language: generic\n+language: minimal\n+arch: amd64\n cache:\n+  ccache: true\n   directories:\n-  - depends/built\n-  - depends/sdk-sources\n-  - $HOME/.ccache\n+    - $TRAVIS_BUILD_DIR/depends/built\n+    - $TRAVIS_BUILD_DIR/depends/sdk-sources\n+    - $TRAVIS_BUILD_DIR/ci/scratch/.ccache\n+    # macOS\n+    - $HOME/Library/Caches/Homebrew\n+    - /usr/local/Homebrew\n+before_cache:\n+  - if [ \"${TRAVIS_OS_NAME}\" = \"osx\" ]; then brew cleanup; fi\n+stages:\n+  - lint\n+  - test\n env:\n   global:\n-    - MAKEJOBS=-j3\n-    - RUN_TESTS=false\n-    - CHECK_DOC=0\n-    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n-    - CCACHE_SIZE=100M\n-    - CCACHE_TEMPDIR=/tmp/.ccache-temp\n-    - CCACHE_COMPRESS=1\n-    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n-    - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n-    - PYTHON_DEBUG=1\n-    - WINEDEBUG=fixme-all\n-  matrix:\n-# ARM\n-    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-# Win32\n-    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6 bc openjdk-7-jre-headless\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n-# 32-bit + dash\n-    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python3-zmq openjdk-7-jre-headless\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n-# Win64\n-    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6 bc openjdk-7-jre-headless\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n-# bitcoind\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python3-zmq openjdk-7-jre-headless\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n-# No wallet\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\" openjdk-7-jre-headless python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-# Cross-Mac\n-    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\n-\n+    - CI_RETRY_EXE=\"travis_retry\"\n+    - CI_WAIT=\"while sleep 500; do echo .; done\"\n+    - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. See https://docs.travis-ci.com/user/customizing-the-build#build-timeouts . Please manually re-run this job by using the travis restart button. The next run should not time out because the build cache has been saved.\"\n before_install:\n-    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n+  - set -o errexit; source ./ci/test/00_setup_env.sh\n+  - set -o errexit; source ./ci/test/03_before_install.sh\n install:\n-    - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n-    - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n-    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n-    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n+  - set -o errexit; source ./ci/test/04_install.sh\n before_script:\n-    - unset CC; unset CXX\n-    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n-    - mkdir -p depends/SDKs depends/sdk-sources\n-    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+  - set -o errexit; source ./ci/test/05_before_script.sh\n script:\n-    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n-    - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n-    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n-    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n-    - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n-    - mkdir build && cd build\n-    - ../configure $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-    - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n-    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then make $MAKEJOBS check VERBOSE=1; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py --coverage; fi\n+  - export CONTINUE=1\n+  - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long\n+  - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # Whitelisted repo (90 minutes build time)\n+  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_a.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n+  - if [ $SECONDS -gt 2000 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left\n+  - if [ $TRAVIS_REPO_SLUG = \"bitcoin/bitcoin\" ]; then export CONTINUE=1; fi  # Whitelisted repo (90 minutes build time)\n+  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source ./ci/test/06_script_b.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n after_script:\n-    - echo $TRAVIS_COMMIT_RANGE\n-    - echo $TRAVIS_COMMIT_LOG\n+  - echo $TRAVIS_COMMIT_RANGE\n+jobs:\n+  include:\n+\n+    - stage: lint\n+      name: 'lint'\n+      env:\n+      cache: false\n+      language: python\n+      python: '3.5' # Oldest supported version according to doc/dependencies.md\n+      install:\n+        - set -o errexit; source ./ci/lint/04_install.sh\n+      before_script:\n+        - set -o errexit; source ./ci/lint/05_before_script.sh\n+      script:\n+        - set -o errexit; source ./ci/lint/06_script.sh\n+\n+    - stage: test\n+      name: 'ARM  [GOAL: install]  [buster]  [unit tests, functional tests]'\n+      arch: arm64\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n+        QEMU_USER_CMD=\"\"  # Can run the tests natively without qemu\n+\n+    - stage: test\n+      name: 'S390x  [GOAL: install]  [buster]  [unit tests, functional tests]'\n+      arch: s390x\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_s390x.sh\"\n+        QEMU_USER_CMD=\"\"  # Can run the tests natively without qemu\n+\n+    - stage: test\n+      name: 'Win64  [GOAL: deploy]  [unit tests, no gui, no functional tests]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_win64.sh\"\n+\n+    - stage: test\n+      name: '32-bit + dash  [GOAL: install]  [CentOS 7]  [gui]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_i686_centos.sh\"\n+\n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package and some depends packages] [unsigned char]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_native_qt5.sh\"\n+\n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no depends, only system libs, sanitizers: thread (TSan), no wallet]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_native_tsan.sh\"\n+        TEST_RUNNER_EXTRA=\"--exclude feature_block\"  # Not enough memory on travis machines\n+\n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_native_asan.sh\"\n+\n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, valgrind]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_native_valgrind.sh\"\n+\n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: fuzzer,address,undefined]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_native_fuzz.sh\"\n+\n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no wallet]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_native_nowallet.sh\"\n+\n+    - stage: test\n+      name: 'macOS 10.12  [GOAL: deploy] [no functional tests]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_mac.sh\"\n+\n+    - stage: test\n+      name: 'macOS 10.14 native [GOAL: install] [GUI] [no depends]'\n+      os: osx\n+      # Use the most recent version:\n+      # Xcode 11.2.1, macOS 10.14, JDK 13.0.1, SDK 10.15\n+      # https://docs.travis-ci.com/user/reference/osx/#macos-version\n+      osx_image: xcode11.2\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_mac_host.sh\""
      },
      {
        "sha": "0e18a0df981aba730704b7d59ef6bc64d2c070cf",
        "filename": ".tx/config",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,7 +1,7 @@\n [main]\n host = https://www.transifex.com\n \n-[bitcoin.qt-translation-013x]\n+[bitcoin.qt-translation-019x]\n file_filter = src/qt/locale/bitcoin_<lang>.ts\n source_file = src/qt/locale/bitcoin_en.ts\n source_lang = en"
      },
      {
        "sha": "33c797d7992cabc12e0f2ed967fccc6ad3dacf58",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 264,
        "deletions": 65,
        "changes": 329,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,124 +1,323 @@\n Contributing to Bitcoin Core\n ============================\n \n-The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n-\n-Firstly in terms of structure, there is no particular concept of \u201cCore developers\u201d in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repository \u201cmaintainers\u201d who are responsible for merging pull requests as well as a \u201clead maintainer\u201d who is responsible for the release cycle, overall merging, moderation and appointment of maintainers.\n+The Bitcoin Core project operates an open contributor model where anyone is\n+welcome to contribute towards development in the form of peer review, testing\n+and patches. This document explains the practical process and guidelines for\n+contributing.\n+\n+Firstly in terms of structure, there is no particular concept of \"Core\n+developers\" in the sense of privileged people. Open source often naturally\n+revolves around meritocracy where longer term contributors gain more trust from\n+the developer community. However, some hierarchy is necessary for practical\n+purposes. As such there are repository \"maintainers\" who are responsible for\n+merging pull requests as well as a \"lead maintainer\" who is responsible for the\n+release cycle, overall merging, moderation and appointment of maintainers.\n+\n+If you're looking for somewhere to start contributing, check out the\n+[good first issue](https://github.com/bitcoin/bitcoin/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)\n+list or participate in a weekly [Bitcoin Core PR Review Club](https://bitcoincore.reviews/) meeting.\n+\n+Communication Channels\n+----------------------\n+\n+Most communication about Bitcoin Core development happens on IRC, in the\n+#bitcoin-core-dev channel on Freenode. The easiest way to participate on IRC is\n+with the web client, [webchat.freenode.net](https://webchat.freenode.net/). Chat\n+history logs can be found\n+on [http://www.erisian.com.au/bitcoin-core-dev/](http://www.erisian.com.au/bitcoin-core-dev/)\n+and [http://gnusha.org/bitcoin-core-dev/](http://gnusha.org/bitcoin-core-dev/).\n+\n+Discussion about code base improvements happens in GitHub issues and on pull\n+requests.\n+\n+The developer\n+[mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+should be used to discuss complicated or controversial changes before working on\n+a patch set.\n \n \n Contributor Workflow\n --------------------\n \n-The codebase is maintained using the \u201ccontributor workflow\u201d where everyone without exception contributes patch proposals using \u201cpull requests\u201d. This facilitates social contribution, easy testing and peer review.\n+The codebase is maintained using the \"contributor workflow\" where everyone\n+without exception contributes patch proposals using \"pull requests\". This\n+facilitates social contribution, easy testing and peer review.\n \n To contribute a patch, the workflow is as follows:\n \n-  - Fork repository\n-  - Create topic branch\n-  - Commit patches\n+  1. Fork repository ([only the first time](https://help.github.com/en/articles/fork-a-repo)).\n+  1. Create topic branch\n+  1. Commit patches\n+\n+The project coding conventions in the [developer notes](doc/developer-notes.md)\n+must be adhered to.\n \n-The project coding conventions in the [developer notes](doc/developer-notes.md) must be adhered to.\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\n+and diffs should be easy to read. For this reason do not mix any formatting\n+fixes or code moves with actual code changes.\n \n-In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+Commit messages should be verbose by default consisting of a short subject line\n+(50 chars max), a blank line and detailed explanatory text as separate\n+paragraph(s), unless the title alone is self-explanatory (like \"Corrected typo\n+in init.cpp\") in which case a single title line is sufficient. Commit messages should be\n+helpful to people reading your code in the future, so explain the reasoning for\n+your decisions. Further explanation [here](https://chris.beams.io/posts/git-commit/).\n \n-Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+If a particular commit references another issue, please add the reference. For\n+example: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\n+will cause the corresponding issue to be closed when the pull request is merged.\n \n-If a particular commit references another issue, please add the reference, for example `refs #1234`, or `fixes #4321`. Using the `fixes` or `closes` keywords will cause the corresponding issue to be closed when the pull request is merged.\n+Commit messages should never contain any `@` mentions.\n \n-Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information\n+about Git.\n \n   - Push changes to your fork\n   - Create pull request\n \n-The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n-\n-    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n-    Net: Automatically create hidden service, listen on Tor\n-    Qt: Add feed bump button\n-    Trivial: Fix typo in main.cpp\n-\n-If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists) in the body of the pull request to indicate tasks are pending.\n-\n-The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n-\n-At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback.\n+The title of the pull request should be prefixed by the component or area that\n+the pull request affects. Valid areas as:\n+\n+  - `consensus` for changes to consensus critical code\n+  - `doc` for changes to the documentation\n+  - `qt` or `gui` for changes to bitcoin-qt\n+  - `log` for changes to log messages\n+  - `mining` for changes to the mining code\n+  - `net` or `p2p` for changes to the peer-to-peer network code\n+  - `refactor` for structural changes that do not change behavior\n+  - `rpc`, `rest` or `zmq` for changes to the RPC, REST or ZMQ APIs\n+  - `script` for changes to the scripts and tools\n+  - `test`, `qa` or `ci` for changes to the unit tests, QA tests or CI code\n+  - `util` or `lib` for changes to the utils or libraries\n+  - `wallet` for changes to the wallet code\n+  - `build` for changes to the GNU Autotools or reproducible builds\n+\n+Examples:\n+\n+    consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    net: Automatically create hidden service, listen on Tor\n+    qt: Add feed bump button\n+    log: Fix typo in log message\n+\n+Note that translations should not be submitted as pull requests, please see\n+[Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md)\n+for more information on helping with translations.\n+\n+If a pull request is not to be considered for merging (yet), please\n+prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n+in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the\n+patch does together with any justification/reasoning. You should include\n+references to any discussions (for example other tickets or mailing list\n+discussions).\n+\n+At this stage one should expect comments and review from other contributors. You\n+can add more commits to your pull request by committing them locally and pushing\n+to your fork until you have satisfied all feedback.\n+\n+Note: Code review is a burdensome but important part of the development process, and as such, certain types of pull requests are rejected. In general, if the **improvements** do not warrant the **review effort** required, the PR has a high chance of being rejected. It is up to the PR author to convince the reviewers that the changes warrant the review effort, and if reviewers are \"Concept NAK'ing\" the PR, the author may need to present arguments and/or do research backing their suggested changes.\n \n Squashing Commits\n ---------------------------\n-If your pull request is accepted for merging, you may be asked by a maintainer to squash and or [rebase](https://git-scm.com/docs/git-rebase) your commits before it will be merged. The basic squashing workflow is shown below.\n+If your pull request is accepted for merging, you may be asked by a maintainer\n+to squash and or [rebase](https://git-scm.com/docs/git-rebase) your commits\n+before it will be merged. The basic squashing workflow is shown below.\n \n     git checkout your_branch_name\n     git rebase -i HEAD~n\n-    # n is normally the number of commits in the pull\n-    # set commits from 'pick' to 'squash', save and quit\n-    # on the next screen, edit/refine commit messages\n-    # save and quit\n+    # n is normally the number of commits in the pull request.\n+    # Set commits (except the one in the first line) from 'pick' to 'squash', save and quit.\n+    # On the next screen, edit/refine commit messages.\n+    # Save and quit.\n     git push -f # (force push to GitHub)\n \n-The length of time required for peer review is unpredictable and will vary from pull request to pull request.\n+Please update the resulting commit message if needed, it should read as a\n+coherent message. In most cases this means that you should not just list the\n+interim commits.\n \n+If you have problems with squashing (or other workflows with `git`), you can\n+alternatively enable \"Allow edits from maintainers\" in the right GitHub\n+sidebar and ask for help in the pull request.\n \n-Pull Request Philosophy\n------------------------\n+Please refrain from creating several pull requests for the same change.\n+Use the pull request that is already open (or was created earlier) to amend\n+changes. This preserves the discussion and review that happened earlier for\n+the respective change set.\n \n-Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+The length of time required for peer review is unpredictable and will vary from\n+pull request to pull request.\n \n \n-###Features\n+Pull Request Philosophy\n+-----------------------\n \n-When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+Patchsets should always be focused. For example, a pull request could add a\n+feature, fix a bug, or refactor code; but not a mixture. Please also avoid super\n+pull requests which attempt to do too much, are overly large, or overly complex\n+as this makes review difficult.\n \n \n-###Refactoring\n+### Features\n \n-Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+When adding a new feature, thought must be given to the long term technical debt\n+and maintenance that feature may require after inclusion. Before proposing a new\n+feature that will require maintenance, please consider if you are willing to\n+maintain it (including bug fixing). If features get orphaned with no maintainer\n+in the future, they may be removed by the Repository Maintainer.\n \n-There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n \n-Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify.\n+### Refactoring\n \n+Refactoring is a necessary part of any software project's evolution. The\n+following guidelines cover refactoring pull requests for the project.\n \n-\"Decision Making\" Process\n--------------------------\n+There are three categories of refactoring, code only moves, code style fixes,\n+code refactoring. In general refactoring pull requests should not mix these\n+three kinds of activity in order to make refactoring pull requests easy to\n+review and uncontroversial. In all cases, refactoring PRs must not change the\n+behaviour of code within the pull request (bugs must be preserved as is).\n \n-The following applies to code changes to the Bitcoin Core project (and related projects such as libsecp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so\n+where possible keep them short, uncomplex and easy to verify.\n \n-Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead.\n+Pull requests that refactor the code should not be made by new contributors. It\n+requires a certain level of experience to know where the code belongs to and to\n+understand the full ramification (including rebase effort of open pull requests).\n \n-Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+Trivial pull requests or pull requests that refactor the code with no clear\n+benefits may be immediately closed by the maintainers to reduce unnecessary\n+workload on reviewing.\n \n-In general, all pull requests must:\n \n-  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n-  - be well peer reviewed;\n-  - have unit tests and functional tests where appropriate;\n-  - follow code style guidelines;\n-  - not break the existing test suite;\n-  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression.\n+\"Decision Making\" Process\n+-------------------------\n \n-Patches that change Bitcoin consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.\n+The following applies to code changes to the Bitcoin Core project (and related\n+projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n+Network Protocol consensus changes.\n \n+Whether a pull request is merged into Bitcoin Core rests with the project merge\n+maintainers and ultimately the project lead.\n \n-###Peer Review\n+Maintainers will take into consideration if a patch is in line with the general\n+principles of the project; meets the minimum standards for inclusion; and will\n+judge the general consensus of contributors.\n \n-Anyone may participate in peer review which is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:\n+In general, all pull requests must:\n \n-  - ACK means \"I have tested the code and I agree it should be merged\";\n-  - NACK means \"I disagree this should be merged\", and must be accompanied by sound technical justification. NACKs without accompanying reasoning may be disregarded;\n-  - utACK means \"I have not tested the code, but I have reviewed it and it looks OK, I agree it can be merged\";\n-  - Concept ACK means \"I agree in the general principle of this pull request\";\n+  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n+    the project (for example refactoring for modularisation);\n+  - Be well peer reviewed;\n+  - Have unit tests and functional tests where appropriate;\n+  - Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n+  - Not break the existing test suite;\n+  - Where bugs are fixed, where possible, there should be unit tests\n+    demonstrating the bug and also proving the fix. This helps prevent regression.\n+  - Change relevant comments and documentation when behaviour of code changes.\n+\n+Patches that change Bitcoin consensus rules are considerably more involved than\n+normal because they affect the entire ecosystem and so must be preceded by\n+extensive mailing list discussions and have a numbered BIP. While each case will\n+be different, one should be prepared to expend more time and effort than for\n+other kinds of patches because of increased peer review and consensus building\n+requirements.\n+\n+\n+### Peer Review\n+\n+Anyone may participate in peer review which is expressed by comments in the pull\n+request. Typically reviewers will review the code for obvious errors, as well as\n+test out the patch set and opine on the technical merits of the patch. Project\n+maintainers take into account the peer review when determining if there is\n+consensus to merge a pull request (remember that discussions may have been\n+spread out over GitHub, mailing list and IRC discussions).\n+\n+#### Conceptual Review\n+\n+A review can be a conceptual review, where the reviewer leaves a comment\n+ * `Concept (N)ACK`, meaning \"I do (not) agree in the general goal of this pull\n+   request\",\n+ * `Approach (N)ACK`, meaning `Concept ACK`, but \"I do (not) agree with the\n+   approach of this change\".\n+\n+A `NACK` needs to include a rationale why the change is not worthwhile.\n+NACKs without accompanying reasoning may be disregarded.\n+\n+#### Code Review\n+\n+After conceptual agreement on the change, code review can be provided. It is\n+starting with `ACK BRANCH_COMMIT`, where `BRANCH_COMMIT` is the top of the\n+topic branch. The review is followed by a description of how the reviewer did\n+the review. The following\n+language is used within pull-request comments:\n+\n+  - \"I have tested the code\", involving\n+    change-specific manual testing in addition to running the unit and functional\n+    tests, and in case it is not obvious how the manual testing was done, it should\n+    be described;\n+  - \"I have not tested the code, but I have reviewed it and it looks\n+    OK, I agree it can be merged\";\n   - Nit refers to trivial, often non-blocking issues.\n \n-Reviewers should include the commit hash which they reviewed in their comments.\n-\n-Project maintainers reserve the right to weigh the opinions of peer reviewers using common sense judgement and also may weight based on meritocracy: Those that have demonstrated a deeper commitment and understanding towards the project (over time) or have clear domain expertise may naturally have more weight, as one would expect in all walks of life.\n-\n-Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review requirements, keeping in mind that mistakes could be very costly to the wider community. This includes refactoring of consensus critical code.\n-\n-Where a patch set proposes to change the Bitcoin consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.\n+Project maintainers reserve the right to weigh the opinions of peer reviewers\n+using common sense judgement and also may weight based on meritocracy: Those\n+that have demonstrated a deeper commitment and understanding towards the project\n+(over time) or have clear domain expertise may naturally have more weight, as\n+one would expect in all walks of life.\n+\n+Where a patch set affects consensus critical code, the bar will be set much\n+higher in terms of discussion and peer review requirements, keeping in mind that\n+mistakes could be very costly to the wider community. This includes refactoring\n+of consensus critical code.\n+\n+Where a patch set proposes to change the Bitcoin consensus, it must have been\n+discussed extensively on the mailing list and IRC, be accompanied by a widely\n+discussed BIP and have a generally widely perceived technical consensus of being\n+a worthwhile change based on the judgement of the maintainers.\n+\n+### Finding Reviewers\n+\n+As most reviewers are themselves developers with their own projects, the review\n+process can be quite lengthy, and some amount of patience is required. If you find\n+that you've been waiting for a pull request to be given attention for several\n+months, there may be a number of reasons for this, some of which you can do something\n+about:\n+\n+  - It may be because of a feature freeze due to an upcoming release. During this time,\n+    only bug fixes are taken into consideration. If your pull request is a new feature,\n+    it will not be prioritized until the release is over. Wait for release.\n+  - It may be because the changes you are suggesting do not appeal to people. Rather than\n+    nits and critique, which require effort and means they care enough to spend time on your\n+    contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n+    (because people don't assume *others* won't actually like the proposal). Don't take\n+    that personally, though! Instead, take another critical look at what you are suggesting\n+    and see if it: changes too much, is too broad, doesn't adhere to the\n+    [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n+    Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n+    their opinion on the concept itself.\n+  - It may be because your code is too complex for all but a few people. And those people\n+    may not have realized your pull request even exists. A great way to find people who\n+    are qualified and care about the code you are touching is the\n+    [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n+    find the person touching the code you are touching before you and see if you can find\n+    them and give them a nudge. Don't be incessant about the nudging though.\n+  - Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n+    a look. If you think you've been waiting an unreasonably long amount of time (month+) for\n+    no particular reason (few lines changed, etc), this is totally fine. Try to return the favor\n+    when someone else is asking for feedback on their code, and universe balances out.\n \n \n Release Policy\n --------------\n \n The project leader is the release manager for each Bitcoin Core release.\n+\n+Copyright\n+---------\n+\n+By contributing to this repository, you agree to license your work under the\n+MIT license unless specified otherwise in `contrib/debian/copyright` or at\n+the top of the file itself. Any work contributed where you are not the original\n+author must contain its license header with the original author(s) and source."
      },
      {
        "sha": "461bc7310041c45132d6354aa2d87f23ac7a2faf",
        "filename": "COPYING",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,6 +1,7 @@\n The MIT License (MIT)\n \n-Copyright (c) 2009-2016 The Bitcoin Core developers\n+Copyright (c) 2009-2020 The Bitcoin Core developers\n+Copyright (c) 2009-2020 Bitcoin Developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "07ee48427cd056dadd0cbb3c0fc889c60c01f85c",
        "filename": "INSTALL",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/INSTALL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/INSTALL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,5 +0,0 @@\n-Building Bitcoin\n-\n-See doc/build-*.md for instructions on building bitcoind,\n-the intended-for-services, no-graphical-interface, reference\n-implementation of Bitcoin.\n\\ No newline at end of file"
      },
      {
        "sha": "520a47d96078dfa80cec83d03146c9349d6369c1",
        "filename": "INSTALL.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/INSTALL.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/INSTALL.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,5 @@\n+Building Bitcoin\n+================\n+\n+See doc/build-*.md for instructions on building the various\n+elements of the Bitcoin Core reference implementation of Bitcoin."
      },
      {
        "sha": "22b83e80ddcc8aa7e22a1a9f49c9be7e7297bcbf",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 163,
        "deletions": 65,
        "changes": 228,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,8 +1,18 @@\n+# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Pattern rule to print variables, e.g. make print-top_srcdir\n+print-%:\n+\t@echo $* = $($*)\n+\n ACLOCAL_AMFLAGS = -I build-aux/m4\n SUBDIRS = src\n+if ENABLE_MAN\n+SUBDIRS += doc/man\n+endif\n .PHONY: deploy FORCE\n \n-GZIP_ENV=\"-9n\"\n export PYTHONPATH\n \n if BUILD_BITCOIN_LIBS\n@@ -13,7 +23,9 @@ endif\n BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n+BITCOIN_TX_BIN=$(top_builddir)/src/$(BITCOIN_TX_NAME)$(EXEEXT)\n+BITCOIN_WALLET_BIN=$(top_builddir)/src/$(BITCOIN_WALLET_TOOL_NAME)$(EXEEXT)\n+BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win64-setup$(EXEEXT)\n \n empty :=\n space := $(empty) $(empty)\n@@ -31,7 +43,22 @@ OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n \n-DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n+DIST_DOCS = \\\n+  README.md \\\n+  $(wildcard doc/*.md) \\\n+  $(wildcard doc/release-notes/*.md)\n+DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n+\t       $(top_srcdir)/contrib/bitcoin-tx.bash-completion \\\n+\t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n+\t       $(top_srcdir)/contrib/debian/copyright \\\n+\t       $(top_srcdir)/contrib/init \\\n+\t       $(top_srcdir)/contrib/install_db4.sh \\\n+\t       $(top_srcdir)/contrib/linearize/linearize-data.py \\\n+\t       $(top_srcdir)/contrib/linearize/linearize-hashes.py\n+\n+DIST_SHARE = \\\n+  $(top_srcdir)/share/genbuild.sh \\\n+  $(top_srcdir)/share/rpcauth\n \n BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n            $(top_srcdir)/contrib/devtools/security-check.py\n@@ -47,10 +74,10 @@ OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n \n-COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n-  leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info block_test_filtered.info rpc_test.info rpc_test_filtered.info \\\n-  leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n+COVERAGE_INFO = baseline.info \\\n+  test_bitcoin_filtered.info total_coverage.info \\\n+  baseline_filtered.info functional_test.info functional_test_filtered.info \\\n+  test_bitcoin_coverage.info test_bitcoin.info\n \n dist-hook:\n \t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n@@ -60,20 +87,19 @@ $(BITCOIN_WIN_INSTALLER): all-recursive\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_TX_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_WALLET_BIN) $(top_builddir)/release\n \t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n \t  echo error: could not build $@\n \t@echo built $@\n \n-$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n-\t$(MAKE) -C src $(patsubst src/%,%,$@)\n-\n $(OSX_APP)/Contents/PkgInfo:\n \t$(MKDIR_P) $(@D)\n \t@echo \"APPL????\" > $@\n \n $(OSX_APP)/Contents/Resources/empty.lproj:\n \t$(MKDIR_P) $(@D)\n-\t@touch $@ \n+\t@touch $@\n \n $(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n \t$(MKDIR_P) $(@D)\n@@ -83,9 +109,9 @@ $(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL_DATA) $< $@\n \n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n+$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: all-recursive\n \t$(MKDIR_P) $(@D)\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $(BITCOIN_QT_BIN) $@\n \n $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n \t$(MKDIR_P) $(@D)\n@@ -99,9 +125,16 @@ osx_volname:\n \techo $(OSX_VOLNAME) >$@\n \n if BUILD_DARWIN\n-$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)\n \t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n \n+$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@\n+$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@\n+$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png\n+\ttiffutil -cathidpicheck $^ -out $@\n+\n deploydir: $(OSX_DMG)\n else\n APP_DIST_DIR=$(top_builddir)/dist\n@@ -149,86 +182,151 @@ $(BITCOIND_BIN): FORCE\n $(BITCOIN_CLI_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n+$(BITCOIN_TX_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+$(BITCOIN_WALLET_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n if USE_LCOV\n+LCOV_FILTER_PATTERN = \\\n+\t-p \"/usr/include/\" \\\n+\t-p \"/usr/lib/\" \\\n+\t-p \"/usr/lib64/\" \\\n+\t-p \"src/leveldb/\" \\\n+\t-p \"src/bench/\" \\\n+\t-p \"src/univalue\" \\\n+\t-p \"src/crypto/ctaes\" \\\n+\t-p \"src/secp256k1\" \\\n+\t-p \"depends\"\n \n baseline.info:\n \t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n \n baseline_filtered.info: baseline.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n-\n-leveldb_baseline.info: baseline_filtered.info\n-\t$(LCOV) -c -i -d $(abs_builddir)/src/leveldb -b $(abs_builddir)/src/leveldb -o $@\n-\n-leveldb_baseline_filtered.info: leveldb_baseline.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n-\n-baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n-\t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n-test_bitcoin.info: baseline_filtered_combined.info\n+test_bitcoin.info: baseline_filtered.info\n \t$(MAKE) -C src/ check\n-\t$(LCOV) -c -d $(abs_builddir)/src -t test_bitcoin -o $@\n-\t$(LCOV) -z -d $(abs_builddir)/src\n-\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitcoin -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n \n test_bitcoin_filtered.info: test_bitcoin.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n-block_test.info: test_bitcoin_filtered.info\n-\t$(MKDIR_P) qa/tmp\n-\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n-\t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n-\t$(LCOV) -z -d $(abs_builddir)/src\n-\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+functional_test.info: test_bitcoin_filtered.info\n+\t@TIMEOUT=15 test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t functional-tests -o $@\n+\t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n \n-block_test_filtered.info: block_test.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+functional_test_filtered.info: functional_test.info\n+\t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n+\t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n-rpc_test.info: test_bitcoin_filtered.info\n-\t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n-\t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n-\t$(LCOV) -z -d $(abs_builddir)/src\n-\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+test_bitcoin_coverage.info: baseline_filtered.info test_bitcoin_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n \n-rpc_test_filtered.info: rpc_test.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n-\n-test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n-\n-total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info rpc_test_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+total_coverage.info: test_bitcoin_filtered.info functional_test_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n-\t$(GENHTML) -s $< -o $(@D)\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n \t@touch $@\n \n total.coverage/.dirstamp: total_coverage.info\n-\t$(GENHTML) -s $< -o $(@D)\n+\t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n \t@touch $@\n \n cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n \n endif\n \n-if USE_COMPARISON_TOOL\n-check-local:\n-\t$(MKDIR_P) qa/tmp\n-\t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n-endif\n-\n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+EXTRA_DIST = $(DIST_SHARE) $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+\n+EXTRA_DIST += \\\n+    test/functional \\\n+    test/fuzz\n+\n+EXTRA_DIST += \\\n+    test/util/bitcoin-util-test.py \\\n+    test/util/data/bitcoin-util-test.json \\\n+    test/util/data/blanktxv1.hex \\\n+    test/util/data/blanktxv1.json \\\n+    test/util/data/blanktxv2.hex \\\n+    test/util/data/blanktxv2.json \\\n+    test/util/data/tt-delin1-out.hex \\\n+    test/util/data/tt-delin1-out.json \\\n+    test/util/data/tt-delout1-out.hex \\\n+    test/util/data/tt-delout1-out.json \\\n+    test/util/data/tt-locktime317000-out.hex \\\n+    test/util/data/tt-locktime317000-out.json \\\n+    test/util/data/tx394b54bb.hex \\\n+    test/util/data/txcreate1.hex \\\n+    test/util/data/txcreate1.json \\\n+    test/util/data/txcreate2.hex \\\n+    test/util/data/txcreate2.json \\\n+    test/util/data/txcreatedata1.hex \\\n+    test/util/data/txcreatedata1.json \\\n+    test/util/data/txcreatedata2.hex \\\n+    test/util/data/txcreatedata2.json \\\n+    test/util/data/txcreatedata_seq0.hex \\\n+    test/util/data/txcreatedata_seq0.json \\\n+    test/util/data/txcreatedata_seq1.hex \\\n+    test/util/data/txcreatedata_seq1.json \\\n+    test/util/data/txcreatemultisig1.hex \\\n+    test/util/data/txcreatemultisig1.json \\\n+    test/util/data/txcreatemultisig2.hex \\\n+    test/util/data/txcreatemultisig2.json \\\n+    test/util/data/txcreatemultisig3.hex \\\n+    test/util/data/txcreatemultisig3.json \\\n+    test/util/data/txcreatemultisig4.hex \\\n+    test/util/data/txcreatemultisig4.json \\\n+    test/util/data/txcreatemultisig5.json \\\n+    test/util/data/txcreateoutpubkey1.hex \\\n+    test/util/data/txcreateoutpubkey1.json \\\n+    test/util/data/txcreateoutpubkey2.hex \\\n+    test/util/data/txcreateoutpubkey2.json \\\n+    test/util/data/txcreateoutpubkey3.hex \\\n+    test/util/data/txcreateoutpubkey3.json \\\n+    test/util/data/txcreatescript1.hex \\\n+    test/util/data/txcreatescript1.json \\\n+    test/util/data/txcreatescript2.hex \\\n+    test/util/data/txcreatescript2.json \\\n+    test/util/data/txcreatescript3.hex \\\n+    test/util/data/txcreatescript3.json \\\n+    test/util/data/txcreatescript4.hex \\\n+    test/util/data/txcreatescript4.json \\\n+    test/util/data/txcreatesignv1.hex \\\n+    test/util/data/txcreatesignv1.json \\\n+    test/util/data/txcreatesignv2.hex \\\n+    test/util/rpcauth-test.py\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n \n-# This file is problematic for out-of-tree builds if it exists.\n-DISTCLEANFILES = qa/pull-tester/tests_config.pyc\n-\n .INTERMEDIATE: $(COVERAGE_INFO)\n \n-clean-local:\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)\n-\trm -rf qa/pull-tester/__pycache__\n+DISTCHECK_CONFIGURE_FLAGS = --enable-man\n+\n+doc/doxygen/.stamp: doc/Doxyfile FORCE\n+\t$(MKDIR_P) $(@D)\n+\t$(DOXYGEN) $^\n+\t$(AM_V_at) touch $@\n+\n+if HAVE_DOXYGEN\n+docs: doc/doxygen/.stamp\n+else\n+docs:\n+\t@echo \"error: doxygen not found\"\n+endif\n+\n+clean-docs:\n+\trm -rf doc/doxygen\n+\n+clean-local: clean-docs\n+\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n+\trm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache share/rpcauth/__pycache__\n+\trm -rf osx_volname dist/ dpi36.background.tiff dpi72.background.tiff"
      },
      {
        "sha": "400320dde016f37d0d3fb09a39d99a45338bc2c7",
        "filename": "README.md",
        "status": "modified",
        "additions": 11,
        "deletions": 17,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,8 +1,6 @@\n Bitcoin Core integration/staging tree\n =====================================\n \n-[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n-\n https://bitcoincore.org\n \n What is Bitcoin?\n@@ -14,8 +12,8 @@ with no central authority: managing transactions and issuing money are carried\n out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n-For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n+For more information, as well as an immediately usable, binary version of\n+the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n [original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n \n License\n@@ -31,13 +29,8 @@ The `master` branch is regularly built and tested, but is not guaranteed to be\n completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n regularly to indicate new official, stable release versions of Bitcoin Core.\n \n-The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n-\n-The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n-should be used to discuss complicated or controversial changes before working\n-on a patch set.\n-\n-Developer IRC can be found on Freenode at #bitcoin-core-dev.\n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md)\n+and useful hints for developers can be found in [doc/developer-notes.md](doc/developer-notes.md).\n \n Testing\n -------\n@@ -49,15 +42,16 @@ lots of money.\n \n ### Automated Testing\n \n-Developers are strongly encouraged to write [unit tests](/doc/unit-tests.md) for new code, and to\n+Developers are strongly encouraged to write [unit tests](src/test/README.md) for new code, and to\n submit new unit tests for old code. Unit tests can be compiled and run\n-(assuming they weren't disabled in configure) with: `make check`\n+(assuming they weren't disabled in configure) with: `make check`. Further details on running\n+and extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n \n-There are also [regression and integration tests](/qa) of the RPC interface, written\n+There are also [regression and integration tests](/test), written\n in Python, that are run automatically on the build server.\n-These tests can be run (if the [test dependencies](/qa) are installed) with: `qa/pull-tester/rpc-tests.py`\n+These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n \n-The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.\n+The Travis CI system makes sure that every pull request is built for Windows, Linux, and macOS, and that unit/sanity tests are run automatically.\n \n ### Manual Quality Assurance (QA) Testing\n \n@@ -70,7 +64,7 @@ Translations\n ------------\n \n Changes to translations as well as new translations can be submitted to\n-[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+[Bitcoin Core's Transifex page](https://www.transifex.com/bitcoin/bitcoin/).\n \n Translations are periodically pulled from Transifex and merged into the git repository. See the\n [translation process](doc/translation_process.md) for details on how this works."
      },
      {
        "sha": "7ed96c7cea392323b4b50245087794f5cc7810f7",
        "filename": "SECURITY.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/SECURITY.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/SECURITY.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/SECURITY.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,20 @@\n+# Security Policy\n+\n+## Supported Versions\n+\n+See our website for versions of Bitcoin Core that are currently supported with\n+security updates: https://bitcoincore.org/en/lifecycle/#schedule\n+\n+## Reporting a Vulnerability\n+\n+To report security issues send an email to security@bitcoincore.org (not for support).\n+\n+The following keys may be used to communicate sensitive information to developers:\n+\n+| Name | Fingerprint |\n+|------|-------------|\n+| Wladimir van der Laan | 71A3 B167 3540 5025 D447  E8F2 7481 0B01 2346 C9A6 |\n+| Jonas Schnelli | 32EE 5C4C 3FA1 5CCA DB46  ABE5 29D4 BCB6 416F 53EC |\n+| Pieter Wuille | 133E AC17 9436 F14A 5CF1  B794 860F EB80 4E66 9320 |\n+\n+You can import a key by running the following command with that individual\u2019s fingerprint: `gpg --recv-keys \"<fingerprint>\"` Ensure that you put quotes around fingerprints containing spaces."
      },
      {
        "sha": "de16260b563279aea0ae038ecd4250964e8bd540",
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,11 +1,16 @@\n #!/bin/sh\n+# Copyright (c) 2013-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n set -e\n-srcdir=\"$(dirname $0)\"\n+srcdir=\"$(dirname \"$0\")\"\n cd \"$srcdir\"\n-if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n+if [ -z \"${LIBTOOLIZE}\" ] && GLIBTOOLIZE=\"$(command -v glibtoolize)\"; then\n   LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n   export LIBTOOLIZE\n fi\n-which autoreconf >/dev/null || \\\n+command -v autoreconf >/dev/null || \\\n   (echo \"configuration failed, please install autoconf first\" && exit 1)\n autoreconf --install --force --warnings=all"
      },
      {
        "sha": "16fa69b41f5bba2b2f4bcb6f48f621ee85a0f680",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "modified",
        "additions": 132,
        "deletions": 121,
        "changes": 253,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n+#      https://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -33,7 +33,15 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 26\n+#serial 47\n+\n+# example boost program (need to pass version)\n+m4_define([_AX_BOOST_BASE_PROGRAM],\n+          [AC_LANG_PROGRAM([[\n+#include <boost/version.hpp>\n+]],[[\n+(void) ((void)sizeof(char[1 - 2*!!((BOOST_VERSION) < ($1))]));\n+]])])\n \n AC_DEFUN([AX_BOOST_BASE],\n [\n@@ -44,110 +52,122 @@ AC_ARG_WITH([boost],\n      or disable it (ARG=no)\n      @<:@ARG=yes@:>@ ])],\n     [\n-    if test \"$withval\" = \"no\"; then\n-        want_boost=\"no\"\n-    elif test \"$withval\" = \"yes\"; then\n-        want_boost=\"yes\"\n-        ac_boost_path=\"\"\n-    else\n-        want_boost=\"yes\"\n-        ac_boost_path=\"$withval\"\n-    fi\n+     AS_CASE([$withval],\n+       [no],[want_boost=\"no\";_AX_BOOST_BASE_boost_path=\"\"],\n+       [yes],[want_boost=\"yes\";_AX_BOOST_BASE_boost_path=\"\"],\n+       [want_boost=\"yes\";_AX_BOOST_BASE_boost_path=\"$withval\"])\n     ],\n     [want_boost=\"yes\"])\n \n \n AC_ARG_WITH([boost-libdir],\n-        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n-        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n-        [\n-        if test -d \"$withval\"\n-        then\n-                ac_boost_lib_path=\"$withval\"\n-        else\n-                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n-        fi\n-        ],\n-        [ac_boost_lib_path=\"\"]\n-)\n+  [AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n+    [Force given directory for boost libraries.\n+     Note that this will override library path detection,\n+     so use this parameter only if default library detection fails\n+     and you know exactly where your boost libraries are located.])],\n+  [\n+   AS_IF([test -d \"$withval\"],\n+         [_AX_BOOST_BASE_boost_lib_path=\"$withval\"],\n+    [AC_MSG_ERROR([--with-boost-libdir expected directory name])])\n+  ],\n+  [_AX_BOOST_BASE_boost_lib_path=\"\"])\n \n-if test \"x$want_boost\" = \"xyes\"; then\n-    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n-    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n-    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n-    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n-    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n-        boost_lib_version_req_sub_minor=\"0\"\n-        fi\n-    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n-    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n+BOOST_LDFLAGS=\"\"\n+BOOST_CPPFLAGS=\"\"\n+AS_IF([test \"x$want_boost\" = \"xyes\"],\n+      [_AX_BOOST_BASE_RUNDETECT([$1],[$2],[$3])])\n+AC_SUBST(BOOST_CPPFLAGS)\n+AC_SUBST(BOOST_LDFLAGS)\n+])\n+\n+\n+# convert a version string in $2 to numeric and affect to polymorphic var $1\n+AC_DEFUN([_AX_BOOST_BASE_TONUMERICVERSION],[\n+  AS_IF([test \"x$2\" = \"x\"],[_AX_BOOST_BASE_TONUMERICVERSION_req=\"1.20.0\"],[_AX_BOOST_BASE_TONUMERICVERSION_req=\"$2\"])\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_shorten=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_major=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '\\([[0-9]]*\\)'`\n+  AS_IF([test \"x$_AX_BOOST_BASE_TONUMERICVERSION_req_major\" = \"x\"],\n+        [AC_MSG_ERROR([You should at least specify libboost major version])])\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_minor=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n+  AS_IF([test \"x$_AX_BOOST_BASE_TONUMERICVERSION_req_minor\" = \"x\"],\n+        [_AX_BOOST_BASE_TONUMERICVERSION_req_minor=\"0\"])\n+  _AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n+  AS_IF([test \"X$_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor\" = \"X\"],\n+        [_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor=\"0\"])\n+  _AX_BOOST_BASE_TONUMERICVERSION_RET=`expr $_AX_BOOST_BASE_TONUMERICVERSION_req_major \\* 100000 \\+  $_AX_BOOST_BASE_TONUMERICVERSION_req_minor \\* 100 \\+ $_AX_BOOST_BASE_TONUMERICVERSION_req_sub_minor`\n+  AS_VAR_SET($1,$_AX_BOOST_BASE_TONUMERICVERSION_RET)\n+])\n+\n+dnl Run the detection of boost should be run only if $want_boost\n+AC_DEFUN([_AX_BOOST_BASE_RUNDETECT],[\n+    _AX_BOOST_BASE_TONUMERICVERSION(WANT_BOOST_VERSION,[$1])\n     succeeded=no\n \n+\n+    AC_REQUIRE([AC_CANONICAL_HOST])\n     dnl On 64-bit systems check for system libraries in both lib64 and lib.\n     dnl The former is specified by FHS, but e.g. Debian does not adhere to\n     dnl this (as it rises problems for generic multi-arch support).\n     dnl The last entry in the list is chosen by default when no libraries\n     dnl are found, e.g. when only header-only libraries are installed!\n-    libsubdirs=\"lib\"\n-    ax_arch=`uname -m`\n-    case $ax_arch in\n-      x86_64)\n-        libsubdirs=\"lib64 libx32 lib lib64\"\n-        ;;\n-      ppc64|s390x|sparc64|aarch64|ppc64le)\n-        libsubdirs=\"lib64 lib lib64 ppc64le\"\n-        ;;\n-    esac\n+    AS_CASE([${host_cpu}],\n+      [x86_64],[libsubdirs=\"lib64 libx32 lib lib64\"],\n+      [mips*64*],[libsubdirs=\"lib64 lib32 lib lib64\"],\n+      [ppc64|powerpc64|s390x|sparc64|aarch64|ppc64le|powerpc64le|riscv64],[libsubdirs=\"lib64 lib lib64\"],\n+      [libsubdirs=\"lib\"]\n+    )\n \n     dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n     dnl them priority over the other paths since, if libs are found there, they\n     dnl are almost assuredly the ones desired.\n-    AC_REQUIRE([AC_CANONICAL_HOST])\n-    libsubdirs=\"lib/${host_cpu}-${host_os} $libsubdirs\"\n-\n-    case ${host_cpu} in\n-      i?86)\n-        libsubdirs=\"lib/i386-${host_os} $libsubdirs\"\n-        ;;\n-    esac\n-\n-    dnl some arches may advertise a cpu type that doesn't line up with their\n-    dnl prefix's cpu type. For example, uname may report armv7l while libs are\n-    dnl installed to /usr/lib/arm-linux-gnueabihf. Try getting the compiler's\n-    dnl value for an extra chance of finding the correct path.\n-    libsubdirs=\"lib/`$CXX -dumpmachine 2>/dev/null` $libsubdirs\"\n+    AS_CASE([${host_cpu}],\n+      [i?86],[multiarch_libsubdir=\"lib/i386-${host_os}\"],\n+      [multiarch_libsubdir=\"lib/${host_cpu}-${host_os}\"]\n+    )\n \n     dnl first we check the system location for boost libraries\n     dnl this location ist chosen if boost libraries are installed with the --layout=system option\n     dnl or if you install boost with RPM\n-    if test \"$ac_boost_path\" != \"\"; then\n-        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n-        for ac_boost_path_tmp in $libsubdirs; do\n-                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n-                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n-                        break\n-                fi\n-        done\n-    elif test \"$cross_compiling\" != yes; then\n-        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n-            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n-                for libsubdir in $libsubdirs ; do\n-                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+    AS_IF([test \"x$_AX_BOOST_BASE_boost_path\" != \"x\"],[\n+        AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) includes in \"$_AX_BOOST_BASE_boost_path/include\"])\n+         AS_IF([test -d \"$_AX_BOOST_BASE_boost_path/include\" && test -r \"$_AX_BOOST_BASE_boost_path/include\"],[\n+           AC_MSG_RESULT([yes])\n+           BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path/include\"\n+           for _AX_BOOST_BASE_boost_path_tmp in $multiarch_libsubdir $libsubdirs; do\n+                AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION) lib path in \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\"])\n+                AS_IF([test -d \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\" && test -r \"$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\" ],[\n+                        AC_MSG_RESULT([yes])\n+                        BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path/$_AX_BOOST_BASE_boost_path_tmp\";\n+                        break;\n+                ],\n+      [AC_MSG_RESULT([no])])\n+           done],[\n+      AC_MSG_RESULT([no])])\n+    ],[\n+        if test X\"$cross_compiling\" = Xyes; then\n+            search_libsubdirs=$multiarch_libsubdir\n+        else\n+            search_libsubdirs=\"$multiarch_libsubdir $libsubdirs\"\n+        fi\n+        for _AX_BOOST_BASE_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n+            if test -d \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" && test -r \"$_AX_BOOST_BASE_boost_path_tmp/include/boost\" ; then\n+                for libsubdir in $search_libsubdirs ; do\n+                    if ls \"$_AX_BOOST_BASE_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n                 done\n-                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n-                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n+                BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path_tmp/$libsubdir\"\n+                BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path_tmp/include\"\n                 break;\n             fi\n         done\n-    fi\n+    ])\n \n     dnl overwrite ld flags if we have required special directory with\n     dnl --with-boost-libdir parameter\n-    if test \"$ac_boost_lib_path\" != \"\"; then\n-       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n-    fi\n+    AS_IF([test \"x$_AX_BOOST_BASE_boost_lib_path\" != \"x\"],\n+          [BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_lib_path\"])\n \n+    AC_MSG_CHECKING([for boostlib >= $1 ($WANT_BOOST_VERSION)])\n     CPPFLAGS_SAVED=\"$CPPFLAGS\"\n     CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n     export CPPFLAGS\n@@ -158,15 +178,7 @@ if test \"x$want_boost\" = \"xyes\"; then\n \n     AC_REQUIRE([AC_PROG_CXX])\n     AC_LANG_PUSH(C++)\n-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    @%:@include <boost/version.hpp>\n-    ]], [[\n-    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n-    // Everything is okay\n-    #else\n-    #  error Boost version is too old\n-    #endif\n-    ]])],[\n+        AC_COMPILE_IFELSE([_AX_BOOST_BASE_PROGRAM($WANT_BOOST_VERSION)],[\n         AC_MSG_RESULT(yes)\n     succeeded=yes\n     found_system=yes\n@@ -178,56 +190,66 @@ if test \"x$want_boost\" = \"xyes\"; then\n \n     dnl if we found no boost with system layout we search for boost libraries\n     dnl built and installed without the --layout=system option or for a staged(not installed) version\n-    if test \"x$succeeded\" != \"xyes\"; then\n+    if test \"x$succeeded\" != \"xyes\" ; then\n         CPPFLAGS=\"$CPPFLAGS_SAVED\"\n         LDFLAGS=\"$LDFLAGS_SAVED\"\n         BOOST_CPPFLAGS=\n-        BOOST_LDFLAGS=\n+        if test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n+            BOOST_LDFLAGS=\n+        fi\n         _version=0\n-        if test \"$ac_boost_path\" != \"\"; then\n-            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n-                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n-                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+        if test -n \"$_AX_BOOST_BASE_boost_path\" ; then\n+            if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\"; then\n+                for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n+                    _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n                     V_CHECK=`expr $_version_tmp \\> $_version`\n-                    if test \"$V_CHECK\" = \"1\" ; then\n+                    if test \"x$V_CHECK\" = \"x1\" ; then\n                         _version=$_version_tmp\n                     fi\n                     VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n+                    BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path/include/boost-$VERSION_UNDERSCORE\"\n                 done\n                 dnl if nothing found search for layout used in Windows distributions\n                 if test -z \"$BOOST_CPPFLAGS\"; then\n-                    if test -d \"$ac_boost_path/boost\" && test -r \"$ac_boost_path/boost\"; then\n-                        BOOST_CPPFLAGS=\"-I$ac_boost_path\"\n+                    if test -d \"$_AX_BOOST_BASE_boost_path/boost\" && test -r \"$_AX_BOOST_BASE_boost_path/boost\"; then\n+                        BOOST_CPPFLAGS=\"-I$_AX_BOOST_BASE_boost_path\"\n                     fi\n                 fi\n+                dnl if we found something and BOOST_LDFLAGS was unset before\n+                dnl (because \"$_AX_BOOST_BASE_boost_lib_path\" = \"\"), set it here.\n+                if test -n \"$BOOST_CPPFLAGS\" && test -z \"$BOOST_LDFLAGS\"; then\n+                    for libsubdir in $libsubdirs ; do\n+                        if ls \"$_AX_BOOST_BASE_boost_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                    done\n+                    BOOST_LDFLAGS=\"-L$_AX_BOOST_BASE_boost_path/$libsubdir\"\n+                fi\n             fi\n         else\n-            if test \"$cross_compiling\" != yes; then\n-                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n-                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n-                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n-                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+            if test \"x$cross_compiling\" != \"xyes\" ; then\n+                for _AX_BOOST_BASE_boost_path in /usr /usr/local /opt /opt/local ; do\n+                    if test -d \"$_AX_BOOST_BASE_boost_path\" && test -r \"$_AX_BOOST_BASE_boost_path\" ; then\n+                        for i in `ls -d $_AX_BOOST_BASE_boost_path/include/boost-* 2>/dev/null`; do\n+                            _version_tmp=`echo $i | sed \"s#$_AX_BOOST_BASE_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n                             V_CHECK=`expr $_version_tmp \\> $_version`\n-                            if test \"$V_CHECK\" = \"1\" ; then\n+                            if test \"x$V_CHECK\" = \"x1\" ; then\n                                 _version=$_version_tmp\n-                                best_path=$ac_boost_path\n+                                best_path=$_AX_BOOST_BASE_boost_path\n                             fi\n                         done\n                     fi\n                 done\n \n                 VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n                 BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n-                if test \"$ac_boost_lib_path\" = \"\"; then\n+                if test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n                     for libsubdir in $libsubdirs ; do\n                         if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n                     done\n                     BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n                 fi\n             fi\n \n-            if test \"x$BOOST_ROOT\" != \"x\"; then\n+            if test -n \"$BOOST_ROOT\" ; then\n                 for libsubdir in $libsubdirs ; do\n                     if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n                 done\n@@ -236,7 +258,7 @@ if test \"x$want_boost\" = \"xyes\"; then\n                     stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n                         stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n                     V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n-                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n+                    if test \"x$V_CHECK\" = \"x1\" && test -z \"$_AX_BOOST_BASE_boost_lib_path\" ; then\n                         AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n                         BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n                         BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n@@ -251,15 +273,7 @@ if test \"x$want_boost\" = \"xyes\"; then\n         export LDFLAGS\n \n         AC_LANG_PUSH(C++)\n-            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        @%:@include <boost/version.hpp>\n-        ]], [[\n-        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n-        // Everything is okay\n-        #else\n-        #  error Boost version is too old\n-        #endif\n-        ]])],[\n+            AC_COMPILE_IFELSE([_AX_BOOST_BASE_PROGRAM($WANT_BOOST_VERSION)],[\n             AC_MSG_RESULT(yes)\n         succeeded=yes\n         found_system=yes\n@@ -268,24 +282,21 @@ if test \"x$want_boost\" = \"xyes\"; then\n         AC_LANG_POP([C++])\n     fi\n \n-    if test \"$succeeded\" != \"yes\" ; then\n-        if test \"$_version\" = \"0\" ; then\n-            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n+    if test \"x$succeeded\" != \"xyes\" ; then\n+        if test \"x$_version\" = \"x0\" ; then\n+            AC_MSG_NOTICE([[We could not detect the boost libraries (version $1 or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n         else\n             AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n         fi\n         # execute ACTION-IF-NOT-FOUND (if present):\n         ifelse([$3], , :, [$3])\n     else\n-        AC_SUBST(BOOST_CPPFLAGS)\n-        AC_SUBST(BOOST_LDFLAGS)\n         AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n         # execute ACTION-IF-FOUND (if present):\n         ifelse([$2], , :, [$2])\n     fi\n \n     CPPFLAGS=\"$CPPFLAGS_SAVED\"\n     LDFLAGS=\"$LDFLAGS_SAVED\"\n-fi\n \n ])"
      },
      {
        "sha": "4cd3b860410f83d28d9174c0d16e53e93b098334",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -8,7 +8,7 @@\n #\n # DESCRIPTION\n #\n-#   Test for System library from the Boost C++ libraries. The macro requires\n+#   Test for Chrono library from the Boost C++ libraries. The macro requires\n #   a preceding call to AX_BOOST_BASE. Further documentation is available at\n #   <http://randspringer.de/boost/index.html>.\n #\n@@ -29,7 +29,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 1\n+#serial 5\n \n AC_DEFUN([AX_BOOST_CHRONO],\n [\n@@ -68,7 +68,7 @@ AC_DEFUN([AX_BOOST_CHRONO],\n \t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n \n \t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n-                                   [[boost::chrono::system_clock::time_point time;]])],\n+                                   [[boost::chrono::system_clock::time_point* time = new boost::chrono::system_clock::time_point; delete time;]])],\n                    ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n \t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n              AC_LANG_POP([C++])\n@@ -81,7 +81,6 @@ AC_DEFUN([AX_BOOST_CHRONO],\n \n \t\t\tLDFLAGS_SAVE=$LDFLAGS\n             if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n-                ax_lib=\n                 for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n                      ax_lib=${libextension}\n \t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n@@ -106,7 +105,7 @@ AC_DEFUN([AX_BOOST_CHRONO],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_chrono library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Chrono library!)\n             fi\n \t\t\tif test \"x$link_chrono\" = \"xno\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "12f7bc5e2ebc18f70537f3d271802e107bfacdad",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n+#   https://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -31,7 +31,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 26\n+#serial 28\n \n AC_DEFUN([AX_BOOST_FILESYSTEM],\n [\n@@ -80,7 +80,6 @@ AC_DEFUN([AX_BOOST_FILESYSTEM],\n \t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n \t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n             BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-            ax_lib=\n             if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n                      ax_lib=${libextension}\n@@ -105,7 +104,7 @@ AC_DEFUN([AX_BOOST_FILESYSTEM],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_filesystem library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Filesystem library!)\n             fi\n \t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "2bdb5937162e4207cf0f96586bc343653ae30da1",
        "filename": "build-aux/m4/ax_boost_program_options.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 108,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/build-aux/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/build-aux/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_program_options.m4?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,108 +0,0 @@\n-# ============================================================================\n-#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n-# ============================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_PROGRAM_OPTIONS\n-#\n-# DESCRIPTION\n-#\n-#   Test for program options library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_PROGRAM_OPTIONS\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 24\n-\n-AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n-[\n-\tAC_ARG_WITH([boost-program-options],\n-\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n-                       [use the program options library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_program_options_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_program_options_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t    export want_boost\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n-\t\t\t\t\t   ax_cv_boost_program_options,\n-\t\t\t\t\t   [AC_LANG_PUSH(C++)\n-\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options/errors.hpp>\n-                                                          ]],\n-                                  [[boost::program_options::error err(\"Error message\");\n-                                   return 0;]])],\n-                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n-\t\t\t\t\tAC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n-\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n-                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n-                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.dylib* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.dylib.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_program_options\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                fi\n-                else\n-                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n-                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                   [link_program_options=\"no\"])\n-                  done\n-                fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_program_options library!)\n-            fi\n-\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n-\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n-\t\t\t\tfi\n-\t\tfi\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "323e2a676a8e0428008dd4563416ce141e278f33",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -31,7 +31,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 18\n+#serial 20\n \n AC_DEFUN([AX_BOOST_SYSTEM],\n [\n@@ -84,7 +84,6 @@ AC_DEFUN([AX_BOOST_SYSTEM],\n \n \t\t\tLDFLAGS_SAVE=$LDFLAGS\n             if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n-                ax_lib=\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n                      ax_lib=${libextension}\n \t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n@@ -109,7 +108,7 @@ AC_DEFUN([AX_BOOST_SYSTEM],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_system library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::System library!)\n             fi\n \t\t\tif test \"x$link_system\" = \"xno\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "e9dea4353556e1a4135122bac13561ed88a95743",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "modified",
        "additions": 83,
        "deletions": 70,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n+#     https://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -30,121 +30,134 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 27\n+#serial 32\n \n AC_DEFUN([AX_BOOST_THREAD],\n [\n-\tAC_ARG_WITH([boost-thread],\n-\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n-                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n+    AC_ARG_WITH([boost-thread],\n+    AS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n+                   [use the Thread library from boost -\n+                    it is possible to specify a certain library for the linker\n+                    e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n         [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n+        if test \"$withval\" = \"yes\"; then\n             want_boost=\"yes\"\n             ax_boost_user_thread_lib=\"\"\n         else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_thread_lib=\"$withval\"\n-\t\tfi\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"$withval\"\n+        fi\n         ],\n         [want_boost=\"yes\"]\n-\t)\n+    )\n \n-\tif test \"x$want_boost\" = \"xyes\"; then\n+    if test \"x$want_boost\" = \"xyes\"; then\n         AC_REQUIRE([AC_PROG_CC])\n         AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n+        CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n \n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n+        LDFLAGS_SAVED=\"$LDFLAGS\"\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n \n         AC_CACHE_CHECK(whether the Boost::Thread library is available,\n-\t\t\t\t\t   ax_cv_boost_thread,\n+                       ax_cv_boost_thread,\n         [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+             CXXFLAGS_SAVE=$CXXFLAGS\n \n-\t\t\t if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t\t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n-\t\t\t elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t\t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n-\t\t\t else\n-\t\t\t\tCXXFLAGS=\"-pthread $CXXFLAGS\"\n-\t\t\t fi\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n-                                   [[boost::thread_group thrds;\n-                                   return 0;]])],\n-                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             if test \"x$host_os\" = \"xsolaris\" ; then\n+                 CXXFLAGS=\"-pthreads $CXXFLAGS\"\n+             elif test \"x$host_os\" = \"xmingw32\" ; then\n+                 CXXFLAGS=\"-mthreads $CXXFLAGS\"\n+             else\n+                CXXFLAGS=\"-pthread $CXXFLAGS\"\n+             fi\n+             AC_COMPILE_IFELSE([\n+                 AC_LANG_PROGRAM(\n+                     [[@%:@include <boost/thread/thread.hpp>]],\n+                     [[boost::thread_group thrds;\n+                       return 0;]])],\n+                 ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n+             CXXFLAGS=$CXXFLAGS_SAVE\n              AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n+        ])\n+        if test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n            if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n-\t\t   elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n-\t\t   else\n-\t\t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n-\t\t   fi\n+              BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n+           elif test \"x$host_os\" = \"xmingw32\" ; then\n+              BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n+           else\n+              BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n+           fi\n \n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+            AC_SUBST(BOOST_CPPFLAGS)\n \n-\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n+            AC_DEFINE(HAVE_BOOST_THREAD,,\n+                      [define if the Boost::Thread library is available])\n             BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n \n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            LDFLAGS_SAVE=$LDFLAGS\n                         case \"x$host_os\" in\n                           *bsd* )\n                                LDFLAGS=\"-pthread $LDFLAGS\"\n                           break;\n                           ;;\n                         esac\n             if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n-                ax_lib=\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n                      ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                    AC_CHECK_LIB($ax_lib, exit,\n+                                 [link_thread=\"yes\"; break],\n                                  [link_thread=\"no\"])\n-\t\t\t\tdone\n+                done\n                 if test \"x$link_thread\" != \"xyes\"; then\n                 for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n                      ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                    AC_CHECK_LIB($ax_lib, exit,\n+                                 [link_thread=\"yes\"; break],\n                                  [link_thread=\"no\"])\n-\t\t\t\tdone\n+                done\n                 fi\n \n             else\n                for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                      AC_CHECK_LIB($ax_lib, exit,\n+                                   [link_thread=\"yes\"; break],\n                                    [link_thread=\"no\"])\n                   done\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_thread library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Thread library!)\n             fi\n-\t\t\tif test \"x$link_thread\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-                        else\n-                           case \"x$host_os\" in\n-                              *bsd* )\n-\t\t\t\tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n-                              break;\n-                              ;;\n-                           esac\n-\n-\t\t\tfi\n-\t\tfi\n+            if test \"x$link_thread\" = \"xno\"; then\n+                AC_MSG_ERROR(Could not link against $ax_lib !)\n+            else\n+                BOOST_THREAD_LIB=\"-l$ax_lib\"\n+                case \"x$host_os\" in\n+                    *bsd* )\n+                        BOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n+                        break;\n+                        ;;\n+                    xsolaris )\n+                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n+                        break;\n+                        ;;\n+                    xmingw32 )\n+                        break;\n+                        ;;\n+                    * )\n+                        BOOST_THREAD_LIB=\"$BOOST_THREAD_LIB -lpthread\"\n+                        break;\n+                        ;;\n+                esac\n+                AC_SUBST(BOOST_THREAD_LIB)\n+            fi\n+        fi\n \n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n+        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+        LDFLAGS=\"$LDFLAGS_SAVED\"\n+    fi\n ])"
      },
      {
        "sha": "4cca32fcfd6539b53e0a55c02544342d1d03ae75",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,6 +1,6 @@\n-# ================================================================================\n-#  http://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n-# ================================================================================\n+# =================================================================================\n+#  https://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n+# =================================================================================\n #\n # SYNOPSIS\n #\n@@ -29,7 +29,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 19\n+#serial 22\n \n AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n [\n@@ -66,7 +66,7 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n         [AC_LANG_PUSH([C++])\n \t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n                                     [[using boost::unit_test::test_suite;\n-\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); return 0;]])],\n+\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); if (test == NULL) { return 1; } else { return 0; }]])],\n                    ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n          AC_LANG_POP([C++])\n \t\t])\n@@ -76,7 +76,6 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n \n             if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n \t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                ax_lib=\n                 for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n                     if test -r $monitor_library ; then\n                        libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n@@ -125,7 +124,7 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n                done\n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_unit_test_framework library!)\n+                AC_MSG_ERROR(Could not find a version of the Boost::Unit_Test_Framework library!)\n             fi\n \t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)"
      },
      {
        "sha": "f147cee3b117f80b22544976385e267b26f46dd9",
        "filename": "build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_cxx_compile_stdcxx.m4?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -57,16 +57,22 @@ AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n         [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],\n         [$3], [optional], [ax_cxx_compile_cxx$1_required=false],\n         [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])\n+  m4_if([$4], [], [ax_cxx_compile_cxx$1_try_default=true],\n+        [$4], [default], [ax_cxx_compile_cxx$1_try_default=true],\n+        [$4], [nodefault], [ax_cxx_compile_cxx$1_try_default=false],\n+        [m4_fatal([invalid fourth argument `$4' to AX_CXX_COMPILE_STDCXX])])\n   AC_LANG_PUSH([C++])dnl\n   ac_success=no\n+\n+  m4_if([$4], [nodefault], [], [dnl\n   AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,\n   ax_cv_cxx_compile_cxx$1,\n   [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n     [ax_cv_cxx_compile_cxx$1=yes],\n     [ax_cv_cxx_compile_cxx$1=no])])\n   if test x$ax_cv_cxx_compile_cxx$1 = xyes; then\n     ac_success=yes\n-  fi\n+  fi])\n \n   m4_if([$2], [noext], [], [dnl\n   if test x$ac_success = xno; then"
      },
      {
        "sha": "aa0111e5a20f0c2bfd7c8de310dd0102ee1a2c6d",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "modified",
        "additions": 69,
        "deletions": 57,
        "changes": 126,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,66 +1,78 @@\n+dnl Copyright (c) 2013-2015 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n AC_DEFUN([BITCOIN_FIND_BDB48],[\n-  AC_MSG_CHECKING([for Berkeley DB C++ headers])\n-  BDB_CPPFLAGS=\n-  BDB_LIBS=\n-  bdbpath=X\n-  bdb48path=X\n-  bdbdirlist=\n-  for _vn in 4.8 48 4 5 ''; do\n-    for _pfx in b lib ''; do\n-      bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n+  AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])\n+  AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])\n+\n+  if test \"x$BDB_CFLAGS\" = \"x\"; then\n+    AC_MSG_CHECKING([for Berkeley DB C++ headers])\n+    BDB_CPPFLAGS=\n+    bdbpath=X\n+    bdb48path=X\n+    bdbdirlist=\n+    for _vn in 4.8 48 4 5 5.3 ''; do\n+      for _pfx in b lib ''; do\n+        bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n+      done\n     done\n-  done\n-  for searchpath in $bdbdirlist ''; do\n-    test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-      #include <${searchpath}db_cxx.h>\n-    ]],[[\n-      #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n-        #error \"failed to find bdb 4.8+\"\n-      #endif\n-    ]])],[\n-      if test \"x$bdbpath\" = \"xX\"; then\n-        bdbpath=\"${searchpath}\"\n-      fi\n-    ],[\n-      continue\n-    ])\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-      #include <${searchpath}db_cxx.h>\n-    ]],[[\n-      #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n-        #error \"failed to find bdb 4.8\"\n-      #endif\n-    ]])],[\n-      bdb48path=\"${searchpath}\"\n-      break\n-    ],[])\n-  done\n-  if test \"x$bdbpath\" = \"xX\"; then\n-    AC_MSG_RESULT([no])\n-    AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-  elif test \"x$bdb48path\" = \"xX\"; then\n-    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n-    AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n-      AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n-    ],[\n-      AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n-    ])\n+    for searchpath in $bdbdirlist ''; do\n+      test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <${searchpath}db_cxx.h>\n+      ]],[[\n+        #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n+          #error \"failed to find bdb 4.8+\"\n+        #endif\n+      ]])],[\n+        if test \"x$bdbpath\" = \"xX\"; then\n+          bdbpath=\"${searchpath}\"\n+        fi\n+      ],[\n+        continue\n+      ])\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <${searchpath}db_cxx.h>\n+      ]],[[\n+        #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n+          #error \"failed to find bdb 4.8\"\n+        #endif\n+      ]])],[\n+        bdb48path=\"${searchpath}\"\n+        break\n+      ],[])\n+    done\n+    if test \"x$bdbpath\" = \"xX\"; then\n+      AC_MSG_RESULT([no])\n+      AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    elif test \"x$bdb48path\" = \"xX\"; then\n+      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n+      AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n+        AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n+      ],[\n+        AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n+      ])\n+    else\n+      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n+      bdbpath=\"${bdb48path}\"\n+    fi\n   else\n-    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n-    bdbpath=\"${bdb48path}\"\n+    BDB_CPPFLAGS=${BDB_CFLAGS}\n   fi\n   AC_SUBST(BDB_CPPFLAGS)\n-  \n-  # TODO: Ideally this could find the library version and make sure it matches the headers being used\n-  for searchlib in db_cxx-4.8 db_cxx; do\n-    AC_CHECK_LIB([$searchlib],[main],[\n-      BDB_LIBS=\"-l${searchlib}\"\n-      break\n-    ])\n-  done\n+\n   if test \"x$BDB_LIBS\" = \"x\"; then\n-      AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    # TODO: Ideally this could find the library version and make sure it matches the headers being used\n+    for searchlib in db_cxx-4.8 db_cxx db4_cxx; do\n+      AC_CHECK_LIB([$searchlib],[main],[\n+        BDB_LIBS=\"-l${searchlib}\"\n+        break\n+      ])\n+    done\n+    if test \"x$BDB_LIBS\" = \"x\"; then\n+        AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+    fi\n   fi\n   AC_SUBST(BDB_LIBS)\n ])"
      },
      {
        "sha": "83d054af5ff2ebdd5f4fefd05bc265a09411ea24",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 197,
        "deletions": 185,
        "changes": 382,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,8 +1,12 @@\n+dnl Copyright (c) 2013-2016 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n dnl Helper for cases where a qt dependency is not met.\n dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n-    if test x$bitcoin_enable_qt != xno; then\n+  if test \"x$bitcoin_qt_want_version\" = xauto && test \"x$bitcoin_qt_force\" != xyes; then\n+    if test \"x$bitcoin_enable_qt\" != xno; then\n       AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n     fi\n     bitcoin_enable_qt=no\n@@ -13,7 +17,7 @@ AC_DEFUN([BITCOIN_QT_FAIL],[\n ])\n \n AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n+  if test \"x$bitcoin_enable_qt\" != xno && test \"x$bitcoin_qt_want_version\" != xno; then\n     true\n     $1\n   else\n@@ -31,12 +35,12 @@ dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n   BITCOIN_QT_CHECK([\n-    if test \"x$3\" != \"x\"; then\n+    if test \"x$3\" != x; then\n       AC_PATH_PROGS($1,$2,,$3)\n     else\n       AC_PATH_PROGS($1,$2)\n     fi\n-    if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n+    if test \"x$$1\" = x && test \"x$4\" != xyes; then\n       BITCOIN_QT_FAIL([$1 not found])\n     fi\n   ])\n@@ -49,11 +53,11 @@ dnl CAUTION: Do not use this inside of a conditional.\n AC_DEFUN([BITCOIN_QT_INIT],[\n   dnl enable qt support\n   AC_ARG_WITH([gui],\n-    [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n+    [AS_HELP_STRING([--with-gui@<:@=no|qt5|auto@:>@],\n+    [build bitcoin-qt GUI (default=auto)])],\n     [\n      bitcoin_qt_want_version=$withval\n-     if test x$bitcoin_qt_want_version = xyes; then\n+     if test \"x$bitcoin_qt_want_version\" = xyes; then\n        bitcoin_qt_force=yes\n        bitcoin_qt_want_version=auto\n      fi\n@@ -85,93 +89,77 @@ dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   use_pkgconfig=$1\n \n-  if test x$use_pkgconfig = x; then\n+  if test \"x$use_pkgconfig\" = x; then\n     use_pkgconfig=yes\n   fi\n \n-  if test x$use_pkgconfig = xyes; then\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n+  if test \"x$use_pkgconfig\" = xyes; then\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG])\n   else\n     BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n   fi\n \n   dnl This is ugly and complicated. Yuck. Works as follows:\n-  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n-  dnl check a header to find out. When Qt is built statically, some plugins must\n-  dnl be linked into the final binary as well. These plugins have changed between\n-  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n-  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n-  dnl assumed for windows builds.\n+  dnl For Qt5, we can check a header to find out whether Qt is build\n+  dnl statically. When Qt is built statically, some plugins must be linked into\n+  dnl the final binary as well.\n+  dnl With Qt5, languages moved into core and the WindowsIntegration plugin was\n+  dnl added.\n   dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n   dnl results to QT_LIBS.\n   BITCOIN_QT_CHECK([\n   TEMP_CPPFLAGS=$CPPFLAGS\n   TEMP_CXXFLAGS=$CXXFLAGS\n   CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    _BITCOIN_QT_IS_STATIC\n-    if test x$bitcoin_cv_static_qt = xyes; then\n-      _BITCOIN_QT_FIND_STATIC_PLUGINS\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-          [[#include <QtCore>]],[[\n-          #if QT_VERSION >= 0x050400\n-          choke;\n-          #endif\n-          ]])],\n-        [bitcoin_cv_need_acc_widget=yes],\n-        [bitcoin_cv_need_acc_widget=no])\n-      ])\n-      if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n-      fi\n-      if test x$TARGET_OS = xwindows; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n-        AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n-      elif test x$TARGET_OS = xlinux; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n-        AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n-      elif test x$TARGET_OS = xdarwin; then\n-        AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n-        AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n-      fi\n+  _BITCOIN_QT_IS_STATIC\n+  if test \"x$bitcoin_cv_static_qt\" = xyes; then\n+    _BITCOIN_QT_FIND_STATIC_PLUGINS\n+    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+    if test \"x$TARGET_OS\" != xandroid; then\n+       _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+       AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n     fi\n-  else\n-    if test x$TARGET_OS = xwindows; then\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n-         Q_IMPORT_PLUGIN(qcncodecs)\n-         Q_IMPORT_PLUGIN(qjpcodecs)\n-         Q_IMPORT_PLUGIN(qtwcodecs)\n-         Q_IMPORT_PLUGIN(qkrcodecs)\n-         Q_IMPORT_PLUGIN(AccessibleFactory)],\n-         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n+    if test \"x$TARGET_OS\" = xwindows; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+      AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n+    elif test \"x$TARGET_OS\" = xlinux; then\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n+      AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n+    elif test \"x$TARGET_OS\" = xdarwin; then\n+      AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+      AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n+    elif test \"x$TARGET_OS\" = xandroid; then\n+      QT_LIBS=\"-Wl,--export-dynamic,--undefined=JNI_OnLoad -lqtforandroid -ljnigraphics -landroid -lqtfreetype -lQt5EglSupport $QT_LIBS\"\n+      AC_DEFINE(QT_QPA_PLATFORM_ANDROID, 1, [Define this symbol if the qt platform is android])\n     fi\n   fi\n   CPPFLAGS=$TEMP_CPPFLAGS\n   CXXFLAGS=$TEMP_CXXFLAGS\n   ])\n \n-  if test x$use_pkgconfig$qt_bin_path = xyes; then\n-    if test x$bitcoin_qt_got_major_vers = x5; then\n-      qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n-    fi\n+  if test \"x$use_pkgconfig$qt_bin_path\" = xyes; then\n+    qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n   fi\n \n-  if test x$use_hardening != xno; then\n+  if test \"x$use_hardening\" != xno; then\n     BITCOIN_QT_CHECK([\n     AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n     TEMP_CPPFLAGS=$CPPFLAGS\n     TEMP_CXXFLAGS=$CXXFLAGS\n     CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n     CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n       [[\n-          #if defined(QT_REDUCE_RELOCATIONS)\n-              choke;\n-          #endif\n+        #if defined(QT_REDUCE_RELOCATIONS)\n+        choke\n+        #endif\n       ]])],\n       [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n       [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n@@ -184,11 +172,16 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n     TEMP_CPPFLAGS=$CPPFLAGS\n     CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n       [[\n-          #if defined(QT_REDUCE_RELOCATIONS)\n-              choke;\n-          #endif\n+        #if defined(QT_REDUCE_RELOCATIONS)\n+        choke\n+        #endif\n       ]])],\n       [ AC_MSG_RESULT(no)],\n       [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n@@ -197,11 +190,11 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     ])\n   fi\n \n-  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n+  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt5 moc5 moc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt5 uic5 uic], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt5 rcc5 rcc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt5 lrelease5 lrelease], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt5 lupdate5 lupdate],$qt_bin_path, yes)\n \n   MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n   case $host in\n@@ -224,23 +217,27 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   BITCOIN_QT_CHECK([\n     bitcoin_enable_qt=yes\n     bitcoin_enable_qt_test=yes\n-    if test x$have_qt_test = xno; then\n+    if test \"x$have_qt_test\" = xno; then\n       bitcoin_enable_qt_test=no\n     fi\n     bitcoin_enable_qt_dbus=no\n-    if test x$use_dbus != xno && test x$have_qt_dbus = xyes; then\n+    if test \"x$use_dbus\" != xno && test \"x$have_qt_dbus\" = xyes; then\n       bitcoin_enable_qt_dbus=yes\n     fi\n-    if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n-      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n+    if test \"x$use_dbus\" = xyes && test \"x$have_qt_dbus\" = xno; then\n+      AC_MSG_ERROR([libQtDBus not found. Install libQtDBus or remove --with-qtdbus.])\n     fi\n-    if test x$LUPDATE = x; then\n-      AC_MSG_WARN(\"lupdate is required to update qt translations\")\n+    if test \"x$LUPDATE\" = x; then\n+      AC_MSG_WARN([lupdate is required to update qt translations])\n     fi\n   ],[\n     bitcoin_enable_qt=no\n   ])\n-  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n+  if test x$bitcoin_enable_qt = xyes; then\n+    AC_MSG_RESULT([$bitcoin_enable_qt ($QT_LIB_PREFIX)])\n+  else\n+    AC_MSG_RESULT([$bitcoin_enable_qt])\n+  fi\n \n   AC_SUBST(QT_PIE_FLAGS)\n   AC_SUBST(QT_INCLUDES)\n@@ -250,52 +247,77 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   AC_SUBST(QT_DBUS_LIBS)\n   AC_SUBST(QT_TEST_INCLUDES)\n   AC_SUBST(QT_TEST_LIBS)\n-  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+  AC_SUBST(QT_SELECT, qt5)\n   AC_SUBST(MOC_DEFS)\n ])\n \n dnl All macros below are internal and should _not_ be used from the main\n dnl configure.ac.\n dnl ----\n \n-dnl Internal. Check if the included version of Qt is Qt5.\n+dnl Internal. Check included version of Qt against minimum specified in doc/dependencies.md\n dnl Requires: INCLUDES must be populated as necessary.\n dnl Output: bitcoin_cv_qt5=yes|no\n AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n   AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-    [[#include <QtCore>]],\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+      #include <QtCore/qconfig.h>\n+      #ifndef QT_VERSION\n+      #  include <QtCore/qglobal.h>\n+      #endif\n+    ]],\n     [[\n-      #if QT_VERSION < 0x050000\n-      choke me\n-      #else\n-      return 0;\n+      #if QT_VERSION < 0x050501\n+      choke\n       #endif\n     ]])],\n     [bitcoin_cv_qt5=yes],\n     [bitcoin_cv_qt5=no])\n ])])\n \n+dnl Internal. Check if the included version of Qt is greater than Qt58.\n+dnl Requires: INCLUDES must be populated as necessary.\n+dnl Output: bitcoin_cv_qt58=yes|no\n+AC_DEFUN([_BITCOIN_QT_CHECK_QT58],[\n+  AC_CACHE_CHECK(for > Qt 5.7, bitcoin_cv_qt58,[\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+      #include <QtCore/qconfig.h>\n+      #ifndef QT_VERSION\n+      #  include <QtCore/qglobal.h>\n+      #endif\n+    ]],\n+    [[\n+      #if QT_VERSION_MINOR < 8\n+      choke\n+      #endif\n+    ]])],\n+    [bitcoin_cv_qt58=yes],\n+    [bitcoin_cv_qt58=no])\n+])])\n+\n+\n dnl Internal. Check if the linked version of Qt was built as static libs.\n-dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n+dnl Requires: Qt5.\n dnl Requires: INCLUDES and LIBS must be populated as necessary.\n dnl Output: bitcoin_cv_static_qt=yes|no\n dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n   AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-    [[#include <QtCore>]],\n-    [[\n-      #if defined(QT_STATIC)\n-      return 0;\n-      #else\n-      choke me\n-      #endif\n-    ]])],\n-    [bitcoin_cv_static_qt=yes],\n-    [bitcoin_cv_static_qt=no])\n-  ])\n-  if test xbitcoin_cv_static_qt = xyes; then\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION OR QT_VERSION_STR\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n+      [[\n+        #if !defined(QT_STATIC)\n+        choke\n+        #endif\n+      ]])],\n+      [bitcoin_cv_static_qt=yes],\n+      [bitcoin_cv_static_qt=no])\n+    ])\n+  if test \"x$bitcoin_cv_static_qt\" = xyes; then\n     AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n   fi\n ])\n@@ -320,52 +342,71 @@ AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n ])\n \n dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n dnl Inputs: qt_plugin_path. optional.\n dnl Outputs: QT_LIBS is appended\n AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-      if test x$qt_plugin_path != x; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n-        if test -d \"$qt_plugin_path/accessible\"; then\n-          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-        fi\n+    if test \"x$qt_plugin_path\" != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+      if test -d \"$qt_plugin_path/accessible\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+      fi\n+      if test -d \"$qt_plugin_path/platforms/android\"; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms/android -lqtfreetype -lEGL\"\n       fi\n-     if test x$use_pkgconfig = xyes; then\n+     if test \"x$use_pkgconfig\" = xyes; then\n      : dnl\n      m4_ifdef([PKG_CHECK_MODULES],[\n-       PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n-       if test x$TARGET_OS = xlinux; then\n-         PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n-         if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n-           PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n-         fi\n-       elif test x$TARGET_OS = xdarwin; then\n-         PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n+       if test x$bitcoin_cv_qt58 = xno; then\n+         PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n+       else\n+         PKG_CHECK_MODULES([QTFONTDATABASE], [Qt5FontDatabaseSupport], [QT_LIBS=\"-lQt5FontDatabaseSupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTEVENTDISPATCHER], [Qt5EventDispatcherSupport], [QT_LIBS=\"-lQt5EventDispatcherSupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTTHEME], [Qt5ThemeSupport], [QT_LIBS=\"-lQt5ThemeSupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTDEVICEDISCOVERY], [Qt5DeviceDiscoverySupport], [QT_LIBS=\"-lQt5DeviceDiscoverySupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTACCESSIBILITY], [Qt5AccessibilitySupport], [QT_LIBS=\"-lQt5AccessibilitySupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTFB], [Qt5FbSupport], [QT_LIBS=\"-lQt5FbSupport $QT_LIBS\"])\n+                fi\n+       if test \"x$TARGET_OS\" = xlinux; then\n+         PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n+       elif test \"x$TARGET_OS\" = xdarwin; then\n+         PKG_CHECK_MODULES([QTCLIPBOARD], [Qt5ClipboardSupport], [QT_LIBS=\"-lQt5ClipboardSupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTGRAPHICS], [Qt5GraphicsSupport], [QT_LIBS=\"-lQt5GraphicsSupport $QT_LIBS\"])\n+         PKG_CHECK_MODULES([QTCGL], [Qt5CglSupport], [QT_LIBS=\"-lQt5CglSupport $QT_LIBS\"])\n        fi\n      ])\n      else\n-       if test x$TARGET_OS = xwindows; then\n-         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-             [[#include <QtCore>]],[[\n-             #if QT_VERSION < 0x050600\n-             choke;\n-             #endif\n+       if test \"x$TARGET_OS\" = xwindows; then\n+         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[\n+           AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+               #include <QtCore/qconfig.h>\n+               #ifndef QT_VERSION\n+               #  include <QtCore/qglobal.h>\n+               #endif\n+             ]],\n+             [[\n+               #if QT_VERSION < 0x050600 || QT_VERSION_MINOR < 6\n+               choke\n+               #endif\n              ]])],\n            [bitcoin_cv_need_platformsupport=yes],\n            [bitcoin_cv_need_platformsupport=no])\n          ])\n-         if test x$bitcoin_cv_need_platformsupport = xyes; then\n-           BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n+         if test \"x$bitcoin_cv_need_platformsupport\" = xyes; then\n+           if test x$bitcoin_cv_qt58 = xno; then\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n+           else\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}FontDatabaseSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXFontDatabaseSupport not found)))\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}EventDispatcherSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXEventDispatcherSupport not found)))\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}ThemeSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXThemeSupport not found)))\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}FbSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXFbSupport not found)))\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}DeviceDiscoverySupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXDeviceDiscoverySupport not found)))\n+             BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}AccessibilitySupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXAccessibilitySupport not found)))\n+             QT_LIBS=\"$QT_LIBS -lversion -ldwmapi -luxtheme\"\n+           fi\n          fi\n        fi\n      fi\n-  else\n-    if test x$qt_plugin_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-    fi\n-  fi\n+   fi\n ])\n \n dnl Internal. Find Qt libraries using pkg-config.\n@@ -374,46 +415,22 @@ dnl         first.\n dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n dnl         first.\n dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n   m4_ifdef([PKG_CHECK_MODULES],[\n-  auto_priority_version=$1\n-  if test x$auto_priority_version = x; then\n-    auto_priority_version=qt5\n-  fi\n-    if test x$bitcoin_qt_want_version = xqt5 ||  ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n+    QT_LIB_PREFIX=Qt5\n     qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n-    qt4_modules=\"QtCore QtGui QtNetwork\"\n     BITCOIN_QT_CHECK([\n-      if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n-        PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n-      elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n-        PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n-      fi\n+      PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" have_qt=yes],[have_qt=no])\n \n-      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n-      if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n-        if test x$auto_priority_version = xqt5; then\n-          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n-        else\n-          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n-        fi\n-      fi\n-      if test x$have_qt != xyes; then\n+      if test \"x$have_qt\" != xyes; then\n         have_qt=no\n         BITCOIN_QT_FAIL([Qt dependencies not found])\n       fi\n     ])\n     BITCOIN_QT_CHECK([\n       PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-      if test x$use_dbus != xno; then\n+      if test \"x$use_dbus\" != xno; then\n         PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n       fi\n     ])\n@@ -426,15 +443,14 @@ dnl from the discovered headers.\n dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   TEMP_CPPFLAGS=\"$CPPFLAGS\"\n   TEMP_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   TEMP_LIBS=\"$LIBS\"\n   BITCOIN_QT_CHECK([\n-    if test x$qt_include_path != x; then\n+    if test \"x$qt_include_path\" != x; then\n       QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n       CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n     fi\n@@ -445,54 +461,51 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n \n   BITCOIN_QT_CHECK([\n-    if test x$bitcoin_qt_want_version = xauto; then\n+    if test \"x$bitcoin_qt_want_version\" = xauto; then\n       _BITCOIN_QT_CHECK_QT5\n+      _BITCOIN_QT_CHECK_QT58\n     fi\n-    if test x$bitcoin_cv_qt5 = xyes || test x$bitcoin_qt_want_version = xqt5; then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n+    QT_LIB_PREFIX=Qt5\n   ])\n \n   BITCOIN_QT_CHECK([\n     LIBS=\n-    if test x$qt_lib_path != x; then\n+    if test \"x$qt_lib_path\" != x; then\n       LIBS=\"$LIBS -L$qt_lib_path\"\n     fi\n \n-    if test x$TARGET_OS = xwindows; then\n+    if test \"x$TARGET_OS\" = xwindows; then\n       AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n     fi\n   ])\n \n   BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([jpeg] ,[main],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+  if test x$bitcoin_cv_qt58 = xno; then\n+    BITCOIN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n+    BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n+  else\n+    BITCOIN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtlibpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n+    BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre2_match_16], [qtpcre2 libqtpcre2],,AC_MSG_WARN([libqtpcre2 not found. Assuming qt has it built-in])))\n   fi\n+  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng qtharfbuzz harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Core not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Gui not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Network not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Widgets not found)))\n   QT_LIBS=\"$LIBS\"\n   LIBS=\"$TEMP_LIBS\"\n \n   BITCOIN_QT_CHECK([\n     LIBS=\n-    if test x$qt_lib_path != x; then\n+    if test \"x$qt_lib_path\" != x; then\n       LIBS=\"-L$qt_lib_path\"\n     fi\n     AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n     AC_CHECK_HEADER([QTest],, have_qt_test=no)\n     QT_TEST_LIBS=\"$LIBS\"\n-    if test x$use_dbus != xno; then\n+    if test \"x$use_dbus\" != xno; then\n       LIBS=\n-      if test x$qt_lib_path != x; then\n+      if test \"x$qt_lib_path\" != x; then\n         LIBS=\"-L$qt_lib_path\"\n       fi\n       AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)\n@@ -504,4 +517,3 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   CXXFLAGS=\"$TEMP_CXXFLAGS\"\n   LIBS=\"$TEMP_LIBS\"\n ])\n-"
      },
      {
        "sha": "7841042ac877b20ea8b35e634f1b4088aae1647f",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,3 +1,7 @@\n+dnl Copyright (c) 2013-2014 The Bitcoin Core developers\n+dnl Distributed under the MIT software license, see the accompanying\n+dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n dnl SUBDIRECTORY-NAME must end with a path separator\n AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],["
      },
      {
        "sha": "75c43f9a92d3d6ac2a5d1aee89e97bab7a89f545",
        "filename": "build-aux/m4/l_atomic.m4",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/l_atomic.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build-aux/m4/l_atomic.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/l_atomic.m4?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,46 @@\n+dnl Copyright (c) 2015 Tim Kosse <tim.kosse@filezilla-project.org>\n+dnl Copying and distribution of this file, with or without modification, are\n+dnl permitted in any medium without royalty provided the copyright notice\n+dnl and this notice are preserved. This file is offered as-is, without any\n+dnl warranty.\n+\n+# Some versions of gcc/libstdc++ require linking with -latomic if\n+# using the C++ atomic library.\n+#\n+# Sourced from http://bugs.debian.org/797228\n+\n+m4_define([_CHECK_ATOMIC_testbody], [[\n+  #include <atomic>\n+  #include <cstdint>\n+\n+  int main() {\n+    std::atomic<int64_t> a{};\n+\n+    int64_t v = 5;\n+    int64_t r = a.fetch_add(v);\n+    return static_cast<int>(r);\n+  }\n+]])\n+\n+AC_DEFUN([CHECK_ATOMIC], [\n+\n+  AC_LANG_PUSH(C++)\n+\n+  AC_MSG_CHECKING([whether std::atomic can be used without link library])\n+\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n+      AC_MSG_RESULT([yes])\n+    ],[\n+      AC_MSG_RESULT([no])\n+      LIBS=\"$LIBS -latomic\"\n+      AC_MSG_CHECKING([whether std::atomic needs -latomic])\n+      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_ATOMIC_testbody])],[\n+          AC_MSG_RESULT([yes])\n+        ],[\n+          AC_MSG_RESULT([no])\n+          AC_MSG_FAILURE([cannot figure out how to use std::atomic])\n+        ])\n+    ])\n+\n+  AC_LANG_POP\n+])"
      },
      {
        "sha": "4d4aef7e35f20efaf6836832d91e52a63254320a",
        "filename": "build_msvc/.gitignore",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/.gitignore?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,14 @@\n+# Build directories\n+Debug/*\n+Release/*\n+.vs\n+packages/*\n+*/Obj\n+*/Debug\n+*/Release\n+*/x64\n+*.vcxproj.user\n+*.vcxproj\n+*/Win32\n+libbitcoin_qt/QtGeneratedFiles/*\n+test_bitcoin-qt/QtGeneratedFiles/*"
      },
      {
        "sha": "e5aaf57abf19fab254d8be154287247a81d5d84f",
        "filename": "build_msvc/README.md",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,92 @@\n+Building Bitcoin Core with Visual Studio\n+========================================\n+\n+Introduction\n+---------------------\n+Solution and project files to build the Bitcoin Core applications `msbuild` or Visual Studio can be found in the build_msvc directory. The build has been tested with Visual Studio 2017 and 2019.\n+\n+Building with Visual Studio is an alternative to the Linux based [cross-compiler build](https://github.com/bitcoin/bitcoin/blob/master/doc/build-windows.md).\n+\n+Quick Start\n+---------------------\n+The minimal steps required to build Bitcoin Core with the msbuild toolchain are below. More detailed instructions are contained in the following sections.\n+\n+```\n+vcpkg install --triplet x64-windows-static berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent[thread] rapidcheck zeromq double-conversion\n+py -3 build_msvc\\msvc-autogen.py\n+msbuild /m build_msvc\\bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n+```\n+\n+Dependencies\n+---------------------\n+A number of [open source libraries](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) are required in order to be able to build Bitcoin Core.\n+\n+Options for installing the dependencies in a Visual Studio compatible manner are:\n+\n+- Use Microsoft's [vcpkg](https://docs.microsoft.com/en-us/cpp/vcpkg) to download the source packages and build locally. This is the recommended approach.\n+- Download the source code, build each dependency, add the required include paths, link libraries and binary tools to the Visual Studio project files.\n+- Use [nuget](https://www.nuget.org/) packages with the understanding that any binary files have been compiled by an untrusted third party.\n+\n+The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) required for building are:\n+\n+- Berkeley DB\n+- Boost\n+- DoubleConversion\n+- libevent\n+- Qt5\n+- RapidCheck\n+- ZeroMQ\n+\n+Qt\n+---------------------\n+In order to build the Bitcoin Core a static build of Qt is required. The runtime library version (e.g. v141, v142) and platform type (x86 or x64) must also match.\n+\n+Some prebuilt x64 versions of Qt can be downloaded from [here](https://github.com/sipsorcery/qt_win_binary/releases). Please be aware these downloads are NOT officially sanctioned by Bitcoin Core and are provided for developer convenience only. They should NOT be used for builds that will be used in a production environment or with real funds.\n+\n+To determine which Qt prebuilt version to download open the `.appveyor.yml` file and note the `QT_DOWNLOAD_URL`. When extracting the zip file the destination path must be set to `C:\\`. This is due to the way that Qt includes, libraries and tools use internal paths.\n+\n+To build Bitcoin Core without Qt unload or disable the `bitcoin-qt`, `libbitcoin_qt` and `test_bitcoin-qt` projects.\n+\n+Building\n+---------------------\n+The instructions below use `vcpkg` to install the dependencies.\n+\n+- Install [`vcpkg`](https://github.com/Microsoft/vcpkg).\n+- Install the required packages (replace x64 with x86 as required). The list of required packages can be found in the `build_msvc\\vcpkg-packages.txt` file. The PowerShell command below will work if run from the repository root directory and `vcpkg` is in the path. Alternatively the contents of the packages text file can be pasted in place of the `Get-Content` cmdlet.\n+\n+```\n+PS >.\\vcpkg install --triplet x64-windows-static $(Get-Content -Path build_msvc\\vcpkg-packages.txt).split()\n+```\n+\n+- Use Python to generate `*.vcxproj` from Makefile\n+\n+```\n+PS >py -3 msvc-autogen.py\n+```\n+\n+- An optional step is to adjust the settings in the build_msvc directory and the common.init.vcxproj file. This project file contains settings that are common to all projects such as the runtime library version and target Windows SDK version. The Qt directories can also be set.\n+\n+- To build from the command line with the Visual Studio 2017 toolchain use:\n+\n+```\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /p:PlatformToolset=v141 /t:build\n+```\n+\n+- To build from the command line with the Visual Studio 2019 toolchain use:\n+\n+```\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n+```\n+\n+- Alternatively open the `build_msvc\\bitcoin.sln` file in Visual Studio.\n+\n+AppVeyor\n+---------------------\n+The .appveyor.yml in the root directory is suitable to perform builds on [AppVeyor](https://www.appveyor.com/) Continuous Integration servers. The simplest way to perform an AppVeyor build is to fork Bitcoin Core and then configure a new AppVeyor Project pointing to the forked repository.\n+\n+For safety reasons the Bitcoin Core .appveyor.yml file has the artifact options disabled. The build will be performed but no executable files will be available. To enable artifacts on a forked repository uncomment the lines shown below:\n+\n+```\n+    #- 7z a bitcoin-%APPVEYOR_BUILD_VERSION%.zip %APPVEYOR_BUILD_FOLDER%\\build_msvc\\%platform%\\%configuration%\\*.exe\n+    #- path: bitcoin-%APPVEYOR_BUILD_VERSION%.zip\n+```"
      },
      {
        "sha": "128c1bd8e7b6bd0622eefee3b5be73c47907b1e8",
        "filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,62 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{1125654E-E1B2-4431-8B5C-62EA9A2FEECB}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n+      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the raw bench header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <ItemGroup>\n+      <RawBenchFile Include=\"..\\..\\src\\bench\\data\\*.raw\" />\n+    </ItemGroup>\n+    <HeaderFromHexdump RawFilePath=\"%(RawBenchFile.FullPath)\" HeaderFilePath=\"%(RawBenchFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawBenchFile.Filename)_raw[] = {\" SourceFooter=\"};\" />\n+  </Target>\n+  <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "e5e0e978f89819af98f55803da8e8368f2815d86",
        "filename": "build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-cli/bitcoin-cli.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{0B2D7431-F876-4A58-87BF-F748338CD3BF}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoin-cli.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "17cd31a52ef27db296d34fd810a98d7dc515ad61",
        "filename": "build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-qt/bitcoin-qt.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,83 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}</ProjectGuid>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\qt\\main.cpp\" />\n+    <ResourceCompile Include=\"..\\..\\src\\qt\\res\\bitcoin-qt-res.rc\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n+      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+    <ResourceCompile>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ResourceCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+    <ResourceCompile>\n+      <AdditionalIncludeDirectories>..\\..\\src;</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+    </ResourceCompile>\n+  </ItemDefinitionGroup>\n+\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+</Project>"
      },
      {
        "sha": "4e9b4916a0fc9e909ff06662ca28d1bf502736af",
        "filename": "build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-tx/bitcoin-tx.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoin-tx.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "40c5db5522881ef14b9090009e50d9b90b394395",
        "filename": "build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{84DE8790-EDE3-4483-81AC-C32F15E861F4}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoin-wallet.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet_tool\\libbitcoin_wallet_tool.vcxproj\">\n+      <Project>{f91ac55e-6f5e-4c58-9ac5-b40db7deef93}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "5e9715451f5a9309ae2d4989cfed2e5ec337e929",
        "filename": "build_msvc/bitcoin.sln",
        "status": "added",
        "additions": 252,
        "deletions": 0,
        "changes": 252,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoin.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoin.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin.sln?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,252 @@\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio Version 16\n+VisualStudioVersion = 16.0.28803.452\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoinconsensus\", \"libbitcoinconsensus\\libbitcoinconsensus.vcxproj\", \"{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"testconsensus\", \"testconsensus\\testconsensus.vcxproj\", \"{E78473E9-B850-456C-9120-276301E04C06}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoind\", \"bitcoind\\bitcoind.vcxproj\", \"{D4513DDF-6013-44DC-ADCC-12EAF6D1F038}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_util\", \"libbitcoin_util\\libbitcoin_util.vcxproj\", \"{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_common\", \"libbitcoin_common\\libbitcoin_common.vcxproj\", \"{7C87E378-DF58-482E-AA2F-1BC129BC19CE}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_crypto\", \"libbitcoin_crypto\\libbitcoin_crypto.vcxproj\", \"{6190199C-6CF4-4DAD-BFBD-93FA72A760C1}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_server\", \"libbitcoin_server\\libbitcoin_server.vcxproj\", \"{460FEE33-1FE1-483F-B3BF-931FF8E969A5}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libunivalue\", \"libunivalue\\libunivalue.vcxproj\", \"{5724BA7D-A09A-4BA8-800B-C4C1561B3D69}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_wallet\", \"libbitcoin_wallet\\libbitcoin_wallet.vcxproj\", \"{93B86837-B543-48A5-A89B-7C87ABB77DF2}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_zmq\", \"libbitcoin_zmq\\libbitcoin_zmq.vcxproj\", \"{792D487F-F14C-49FC-A9DE-3FC150F31C3F}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_bitcoin\", \"test_bitcoin\\test_bitcoin.vcxproj\", \"{A56B73DB-D46D-4882-8374-1FE3FFA08F07}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_cli\", \"libbitcoin_cli\\libbitcoin_cli.vcxproj\", \"{0667528C-D734-4009-ADF9-C0D6C4A5A5A6}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-cli\", \"bitcoin-cli\\bitcoin-cli.vcxproj\", \"{0B2D7431-F876-4A58-87BF-F748338CD3BF}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bench_bitcoin\", \"bench_bitcoin\\bench_bitcoin.vcxproj\", \"{1125654E-E1B2-4431-8B5C-62EA9A2FEECB}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-tx\", \"bitcoin-tx\\bitcoin-tx.vcxproj\", \"{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-wallet\", \"bitcoin-wallet\\bitcoin-wallet.vcxproj\", \"{84DE8790-EDE3-4483-81AC-C32F15E861F4}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_wallet_tool\", \"libbitcoin_wallet_tool\\libbitcoin_wallet_tool.vcxproj\", \"{F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libsecp256k1\", \"libsecp256k1\\libsecp256k1.vcxproj\", \"{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libleveldb\", \"libleveldb\\libleveldb.vcxproj\", \"{18430FEF-6B61-4C53-B396-718E02850F1B}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_qt\", \"libbitcoin_qt\\libbitcoin_qt.vcxproj\", \"{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-qt\", \"bitcoin-qt\\bitcoin-qt.vcxproj\", \"{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libtest_util\", \"libtest_util\\libtest_util.vcxproj\", \"{868474FD-35F6-4400-8EED-30A33E7521D4}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"test_bitcoin-qt\", \"test_bitcoin-qt\\test_bitcoin-qt.vcxproj\", \"{51201D5E-D939-4854-AE9D-008F03FF518E}\"\n+EndProject\n+Global\n+    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n+        Debug|x64 = Debug|x64\n+        Debug|x86 = Debug|x86\n+        Release|x64 = Release|x64\n+        Release|x86 = Release|x86\n+    EndGlobalSection\n+    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x64.ActiveCfg = Debug|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x64.Build.0 = Debug|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x86.ActiveCfg = Debug|Win32\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Debug|x86.Build.0 = Debug|Win32\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x64.ActiveCfg = Release|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x64.Build.0 = Release|x64\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x86.ActiveCfg = Release|Win32\n+        {2B384FA8-9EE1-4544-93CB-0D733C25E8CE}.Release|x86.Build.0 = Release|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x64.ActiveCfg = Debug|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x64.Build.0 = Debug|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x86.ActiveCfg = Debug|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Debug|x86.Build.0 = Debug|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x64.ActiveCfg = Release|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x64.Build.0 = Release|x64\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x86.ActiveCfg = Release|Win32\n+        {E78473E9-B850-456C-9120-276301E04C06}.Release|x86.Build.0 = Release|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x64.ActiveCfg = Debug|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x64.Build.0 = Debug|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x86.ActiveCfg = Debug|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Debug|x86.Build.0 = Debug|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x64.ActiveCfg = Release|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x64.Build.0 = Release|x64\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x86.ActiveCfg = Release|Win32\n+        {D4513DDF-6013-44DC-ADCC-12EAF6D1F038}.Release|x86.Build.0 = Release|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x64.ActiveCfg = Debug|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x64.Build.0 = Debug|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x86.ActiveCfg = Debug|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Debug|x86.Build.0 = Debug|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x64.ActiveCfg = Release|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x64.Build.0 = Release|x64\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x86.ActiveCfg = Release|Win32\n+        {B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}.Release|x86.Build.0 = Release|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x64.ActiveCfg = Debug|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x64.Build.0 = Debug|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x86.ActiveCfg = Debug|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Debug|x86.Build.0 = Debug|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x64.ActiveCfg = Release|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x64.Build.0 = Release|x64\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x86.ActiveCfg = Release|Win32\n+        {7C87E378-DF58-482E-AA2F-1BC129BC19CE}.Release|x86.Build.0 = Release|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x64.ActiveCfg = Debug|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x64.Build.0 = Debug|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x86.ActiveCfg = Debug|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Debug|x86.Build.0 = Debug|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x64.ActiveCfg = Release|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x64.Build.0 = Release|x64\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x86.ActiveCfg = Release|Win32\n+        {6190199C-6CF4-4DAD-BFBD-93FA72A760C1}.Release|x86.Build.0 = Release|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x64.ActiveCfg = Debug|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x64.Build.0 = Debug|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x86.ActiveCfg = Debug|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Debug|x86.Build.0 = Debug|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x64.ActiveCfg = Release|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x64.Build.0 = Release|x64\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x86.ActiveCfg = Release|Win32\n+        {460FEE33-1FE1-483F-B3BF-931FF8E969A5}.Release|x86.Build.0 = Release|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x64.ActiveCfg = Debug|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x64.Build.0 = Debug|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x86.ActiveCfg = Debug|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Debug|x86.Build.0 = Debug|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x64.ActiveCfg = Release|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x64.Build.0 = Release|x64\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x86.ActiveCfg = Release|Win32\n+        {5724BA7D-A09A-4BA8-800B-C4C1561B3D69}.Release|x86.Build.0 = Release|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x64.ActiveCfg = Debug|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x64.Build.0 = Debug|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x86.ActiveCfg = Debug|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Debug|x86.Build.0 = Debug|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x64.ActiveCfg = Release|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x64.Build.0 = Release|x64\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x86.ActiveCfg = Release|Win32\n+        {93B86837-B543-48A5-A89B-7C87ABB77DF2}.Release|x86.Build.0 = Release|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x64.ActiveCfg = Debug|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x64.Build.0 = Debug|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x86.ActiveCfg = Debug|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Debug|x86.Build.0 = Debug|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x64.ActiveCfg = Release|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x64.Build.0 = Release|x64\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x86.ActiveCfg = Release|Win32\n+        {792D487F-F14C-49FC-A9DE-3FC150F31C3F}.Release|x86.Build.0 = Release|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x64.ActiveCfg = Debug|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x64.Build.0 = Debug|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x86.ActiveCfg = Debug|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Debug|x86.Build.0 = Debug|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x64.ActiveCfg = Release|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x64.Build.0 = Release|x64\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x86.ActiveCfg = Release|Win32\n+        {A56B73DB-D46D-4882-8374-1FE3FFA08F07}.Release|x86.Build.0 = Release|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x64.ActiveCfg = Debug|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x64.Build.0 = Debug|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x86.ActiveCfg = Debug|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Debug|x86.Build.0 = Debug|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x64.ActiveCfg = Release|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x64.Build.0 = Release|x64\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x86.ActiveCfg = Release|Win32\n+        {0667528C-D734-4009-ADF9-C0D6C4A5A5A6}.Release|x86.Build.0 = Release|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x64.ActiveCfg = Debug|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x64.Build.0 = Debug|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Debug|x86.Build.0 = Debug|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x64.ActiveCfg = Release|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x64.Build.0 = Release|x64\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x86.ActiveCfg = Release|Win32\n+        {0B2D7431-F876-4A58-87BF-F748338CD3BF}.Release|x86.Build.0 = Release|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x64.ActiveCfg = Debug|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x64.Build.0 = Debug|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x86.ActiveCfg = Debug|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Debug|x86.Build.0 = Debug|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x64.ActiveCfg = Release|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x64.Build.0 = Release|x64\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x86.ActiveCfg = Release|Win32\n+        {1125654E-E1B2-4431-8B5C-62EA9A2FEECB}.Release|x86.Build.0 = Release|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x64.ActiveCfg = Debug|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x64.Build.0 = Debug|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Debug|x86.Build.0 = Debug|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.ActiveCfg = Release|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.Build.0 = Release|x64\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.ActiveCfg = Release|Win32\n+        {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.Build.0 = Release|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x64.ActiveCfg = Debug|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x64.Build.0 = Debug|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x86.ActiveCfg = Debug|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x86.Build.0 = Debug|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x64.ActiveCfg = Release|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x64.Build.0 = Release|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x86.ActiveCfg = Release|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x86.Build.0 = Release|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x64.ActiveCfg = Debug|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x64.Build.0 = Debug|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x86.ActiveCfg = Debug|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x86.Build.0 = Debug|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x64.ActiveCfg = Release|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x64.Build.0 = Release|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x86.ActiveCfg = Release|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x86.Build.0 = Release|Win32\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x64.ActiveCfg = Debug|x64\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x64.Build.0 = Debug|x64\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x86.ActiveCfg = Debug|Win32\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Debug|x86.Build.0 = Debug|Win32\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x64.ActiveCfg = Release|x64\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x64.Build.0 = Release|x64\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x86.ActiveCfg = Release|Win32\n+        {BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}.Release|x86.Build.0 = Release|Win32\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x64.ActiveCfg = Debug|x64\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x64.Build.0 = Debug|x64\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x86.ActiveCfg = Debug|Win32\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Debug|x86.Build.0 = Debug|Win32\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x64.ActiveCfg = Release|x64\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x64.Build.0 = Release|x64\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.ActiveCfg = Release|Win32\n+        {18430FEF-6B61-4C53-B396-718E02850F1B}.Release|x86.Build.0 = Release|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.ActiveCfg = Debug|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x64.Build.0 = Debug|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.ActiveCfg = Debug|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Debug|x86.Build.0 = Debug|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.ActiveCfg = Release|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x64.Build.0 = Release|x64\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.ActiveCfg = Release|Win32\n+        {2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}.Release|x86.Build.0 = Release|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.ActiveCfg = Debug|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x64.Build.0 = Debug|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.ActiveCfg = Debug|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Debug|x86.Build.0 = Debug|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.ActiveCfg = Release|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.Build.0 = Release|x64\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.ActiveCfg = Release|Win32\n+        {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.Build.0 = Release|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.ActiveCfg = Debug|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.Build.0 = Debug|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.ActiveCfg = Debug|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.Build.0 = Debug|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.ActiveCfg = Release|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.Build.0 = Release|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.ActiveCfg = Release|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.Build.0 = Release|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x64.ActiveCfg = Debug|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x64.Build.0 = Debug|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x86.ActiveCfg = Debug|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Debug|x86.Build.0 = Debug|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x64.ActiveCfg = Release|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x64.Build.0 = Release|x64\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x86.ActiveCfg = Release|Win32\n+        {51201D5E-D939-4854-AE9D-008F03FF518E}.Release|x86.Build.0 = Release|Win32\n+    EndGlobalSection\n+    GlobalSection(SolutionProperties) = preSolution\n+        HideSolutionNode = FALSE\n+    EndGlobalSection\n+    GlobalSection(ExtensibilityGlobals) = postSolution\n+                        SolutionGuid = {8AA72EDA-2CD4-4564-B1E4-688B760EEEE9}\n+                SolutionGuid = {8607C0F4-F33D-41B8-8D51-18E366A0F8DF}\n+        SolutionGuid = {58AAB032-7274-49BD-845E-5EF4DBB69B70}\n+    EndGlobalSection\n+EndGlobal"
      },
      {
        "sha": "3178f2a3d8d4847c407ec9bca52da49b2f3783a5",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "added",
        "additions": 362,
        "deletions": 0,
        "changes": 362,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,362 @@\n+// Copyright (c) 2018-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BITCOIN_CONFIG_H\n+#define BITCOIN_BITCOIN_CONFIG_H\n+\n+/* Define if building universal (internal helper macro) */\n+/* #undef AC_APPLE_UNIVERSAL_BUILD */\n+\n+/* Version Build */\n+#define CLIENT_VERSION_BUILD 0\n+\n+/* Version is release */\n+#define CLIENT_VERSION_IS_RELEASE false\n+\n+/* Major version */\n+#define CLIENT_VERSION_MAJOR 0\n+\n+/* Minor version */\n+#define CLIENT_VERSION_MINOR 19\n+\n+/* Build revision */\n+#define CLIENT_VERSION_REVISION 99\n+\n+/* Copyright holder(s) before %s replacement */\n+#define COPYRIGHT_HOLDERS \"The %s developers\"\n+\n+/* Copyright holder(s) */\n+#define COPYRIGHT_HOLDERS_FINAL \"The Bitcoin Core developers\"\n+\n+/* Replacement for %s in copyright holders string */\n+#define COPYRIGHT_HOLDERS_SUBSTITUTION \"Bitcoin Core\"\n+\n+/* Copyright year */\n+#define COPYRIGHT_YEAR 2019\n+\n+/* Define to 1 to enable wallet functions */\n+#define ENABLE_WALLET 1\n+\n+/* Define to 1 to enable ZMQ functions */\n+#define ENABLE_ZMQ 1\n+\n+/* parameter and return value type for __fdelt_chk */\n+/* #undef FDELT_TYPE */\n+\n+/* define if the Boost library is available */\n+#define HAVE_BOOST /**/\n+\n+/* define if the Boost::Chrono library is available */\n+#define HAVE_BOOST_CHRONO /**/\n+\n+/* define if the Boost::Filesystem library is available */\n+#define HAVE_BOOST_FILESYSTEM /**/\n+\n+/* define if the Boost::System library is available */\n+#define HAVE_BOOST_SYSTEM /**/\n+\n+/* define if the Boost::Thread library is available */\n+#define HAVE_BOOST_THREAD /**/\n+\n+/* define if the Boost::Unit_Test_Framework library is available */\n+#define HAVE_BOOST_UNIT_TEST_FRAMEWORK /**/\n+\n+/* Define to 1 if you have the <byteswap.h> header file. */\n+/* #undef HAVE_BYTESWAP_H */\n+\n+/* Define this symbol if the consensus lib has been built */\n+#define HAVE_CONSENSUS_LIB 1\n+\n+/* define if the compiler supports basic C++11 syntax */\n+#define HAVE_CXX11 1\n+\n+/* Define to 1 if you have the declaration of `be16toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE16TOH 0\n+\n+/* Define to 1 if you have the declaration of `be32toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE32TOH 0\n+\n+/* Define to 1 if you have the declaration of `be64toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BE64TOH 0\n+\n+/* Define to 1 if you have the declaration of `bswap_16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_16 0\n+\n+/* Define to 1 if you have the declaration of `bswap_32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_32 0\n+\n+/* Define to 1 if you have the declaration of `bswap_64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_BSWAP_64 0\n+\n+/* Define to 1 if you have the declaration of `daemon', and to 0 if you don't.\n+   */\n+#define HAVE_DECL_DAEMON 0\n+\n+/* Define to 1 if you have the declaration of `htobe16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE16 0\n+\n+/* Define to 1 if you have the declaration of `htobe32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE32 0\n+\n+/* Define to 1 if you have the declaration of `htobe64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOBE64 0\n+\n+/* Define to 1 if you have the declaration of `htole16', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE16 0\n+\n+/* Define to 1 if you have the declaration of `htole32', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE32 0\n+\n+/* Define to 1 if you have the declaration of `htole64', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_HTOLE64 0\n+\n+/* Define to 1 if you have the declaration of `le16toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE16TOH 0\n+\n+/* Define to 1 if you have the declaration of `le32toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE32TOH 0\n+\n+/* Define to 1 if you have the declaration of `le64toh', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_LE64TOH 0\n+\n+/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_STRERROR_R 0\n+\n+/* Define to 1 if you have the declaration of `strnlen', and to 0 if you\n+   don't. */\n+#define HAVE_DECL_STRNLEN 1\n+\n+/* Define to 1 if you have the declaration of `__builtin_clz', and to 0 if you\n+   don't. */\n+//#define HAVE_DECL___BUILTIN_CLZ 1\n+\n+/* Define to 1 if you have the declaration of `__builtin_clzl', and to 0 if\n+   you don't. */\n+//#define HAVE_DECL___BUILTIN_CLZL 1\n+\n+/* Define to 1 if you have the declaration of `__builtin_clzll', and to 0 if\n+   you don't. */\n+//#define HAVE_DECL___BUILTIN_CLZLL 1\n+\n+/* Define to 1 if you have the <dlfcn.h> header file. */\n+/* #undef HAVE_DLFCN_H */\n+\n+/* Define to 1 if you have the <endian.h> header file. */\n+/* #undef HAVE_ENDIAN_H */\n+\n+/* Define to 1 if the system has the `dllexport' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_DLLEXPORT 1\n+\n+/* Define to 1 if the system has the `dllimport' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_DLLIMPORT 1\n+\n+/* Define to 1 if the system has the `visibility' function attribute */\n+#define HAVE_FUNC_ATTRIBUTE_VISIBILITY 1\n+\n+/* Define this symbol if the BSD getentropy system call is available */\n+/* #undef HAVE_GETENTROPY */\n+\n+/* Define this symbol if the BSD getentropy system call is available with\n+   sys/random.h */\n+/* #undef HAVE_GETENTROPY_RAND */\n+\n+/* Define to 1 if you have the <inttypes.h> header file. */\n+#define HAVE_INTTYPES_H 1\n+\n+/* Define this symbol if you have malloc_info */\n+/* #undef HAVE_MALLOC_INFO */\n+\n+/* Define this symbol if you have mallopt with M_ARENA_MAX */\n+/* #undef HAVE_MALLOPT_ARENA_MAX */\n+\n+/* Define to 1 if you have the <memory.h> header file. */\n+#define HAVE_MEMORY_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/miniupnpc.h> header file. */\n+#define HAVE_MINIUPNPC_MINIUPNPC_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/miniwget.h> header file. */\n+#define HAVE_MINIUPNPC_MINIWGET_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/upnpcommands.h> header file. */\n+#define HAVE_MINIUPNPC_UPNPCOMMANDS_H 1\n+\n+/* Define to 1 if you have the <miniupnpc/upnperrors.h> header file. */\n+#define HAVE_MINIUPNPC_UPNPERRORS_H 1\n+\n+/* Define this symbol if you have MSG_DONTWAIT */\n+/* #undef HAVE_MSG_DONTWAIT */\n+\n+/* Define this symbol if you have MSG_NOSIGNAL */\n+/* #undef HAVE_MSG_NOSIGNAL */\n+\n+/* Define if you have POSIX threads libraries and header files. */\n+//#define HAVE_PTHREAD 1\n+\n+/* Have PTHREAD_PRIO_INHERIT. */\n+//#define HAVE_PTHREAD_PRIO_INHERIT 1\n+\n+/* Define to 1 if you have the <stdint.h> header file. */\n+#define HAVE_STDINT_H 1\n+\n+/* Define to 1 if you have the <stdio.h> header file. */\n+#define HAVE_STDIO_H 1\n+\n+/* Define to 1 if you have the <stdlib.h> header file. */\n+#define HAVE_STDLIB_H 1\n+\n+/* Define to 1 if you have the `strerror_r' function. */\n+/* #undef HAVE_STRERROR_R */\n+\n+/* Define to 1 if you have the <strings.h> header file. */\n+#define HAVE_STRINGS_H 1\n+\n+/* Define to 1 if you have the <string.h> header file. */\n+#define HAVE_STRING_H 1\n+\n+/* Define this symbol if the BSD sysctl(KERN_ARND) is available */\n+/* #undef HAVE_SYSCTL_ARND */\n+\n+/* Define to 1 if you have the <sys/endian.h> header file. */\n+/* #undef HAVE_SYS_ENDIAN_H */\n+\n+/* Define this symbol if the Linux getrandom system call is available */\n+/* #undef HAVE_SYS_GETRANDOM */\n+\n+/* Define to 1 if you have the <sys/prctl.h> header file. */\n+/* #undef HAVE_SYS_PRCTL_H */\n+\n+/* Define to 1 if you have the <sys/select.h> header file. */\n+/* #undef HAVE_SYS_SELECT_H */\n+\n+/* Define to 1 if you have the <sys/stat.h> header file. */\n+#define HAVE_SYS_STAT_H 1\n+\n+/* Define to 1 if you have the <sys/types.h> header file. */\n+#define HAVE_SYS_TYPES_H 1\n+\n+/* Define to 1 if you have the <unistd.h> header file. */\n+//#define HAVE_UNISTD_H 1\n+\n+/* Define if the visibility attribute is supported. */\n+#define HAVE_VISIBILITY_ATTRIBUTE 1\n+\n+/* Define this symbol if boost sleep works */\n+/* #undef HAVE_WORKING_BOOST_SLEEP */\n+\n+/* Define this symbol if boost sleep_for works */\n+#define HAVE_WORKING_BOOST_SLEEP_FOR 1\n+\n+/* Define to the sub-directory where libtool stores uninstalled libraries. */\n+#define LT_OBJDIR \".libs/\"\n+\n+/* Define to the address where bug reports for this package should be sent. */\n+#define PACKAGE_BUGREPORT \"https://github.com/bitcoin/bitcoin/issues\"\n+\n+/* Define to the full name of this package. */\n+#define PACKAGE_NAME \"Bitcoin Core\"\n+\n+/* Define to the full name and version of this package. */\n+#define PACKAGE_STRING \"Bitcoin Core 0.19.99\"\n+\n+/* Define to the one symbol short name of this package. */\n+#define PACKAGE_TARNAME \"bitcoin\"\n+\n+/* Define to the home page for this package. */\n+#define PACKAGE_URL \"https://bitcoincore.org/\"\n+\n+/* Define to the version of this package. */\n+#define PACKAGE_VERSION \"0.19.99\"\n+\n+/* Define to necessary symbol if this constant uses a non-standard name on\n+   your system. */\n+/* #undef PTHREAD_CREATE_JOINABLE */\n+\n+/* Define this symbol if the qt platform is cocoa */\n+/* #undef QT_QPA_PLATFORM_COCOA */\n+\n+/* Define this symbol if the minimal qt platform exists */\n+#define QT_QPA_PLATFORM_MINIMAL 1\n+\n+/* Define this symbol if the qt platform is windows */\n+#define QT_QPA_PLATFORM_WINDOWS 1\n+\n+/* Define this symbol if the qt platform is xcb */\n+/* #undef QT_QPA_PLATFORM_XCB */\n+\n+/* Define this symbol if qt plugins are static */\n+#define QT_STATICPLUGIN 1\n+\n+/* Define to 1 if you have the ANSI C header files. */\n+#define STDC_HEADERS 1\n+\n+/* Define to 1 if strerror_r returns char *. */\n+/* #undef STRERROR_R_CHAR_P */\n+\n+/* Define this symbol to build in assembly routines */\n+//#define USE_ASM 1\n+\n+/* Define this symbol if coverage is enabled */\n+/* #undef USE_COVERAGE */\n+\n+/* Define if dbus support should be compiled in */\n+/* #undef USE_DBUS */\n+\n+/* Define if QR support should be compiled in */\n+//#define USE_QRCODE 1\n+\n+/* UPnP support not compiled if undefined, otherwise value (0 or 1) determines\n+   default state */\n+//#define USE_UPNP 0\n+\n+/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n+   significant byte first (like Motorola and SPARC, unlike Intel). */\n+#if defined AC_APPLE_UNIVERSAL_BUILD\n+# if defined __BIG_ENDIAN__\n+#  define WORDS_BIGENDIAN 1\n+# endif\n+#else\n+# ifndef WORDS_BIGENDIAN\n+/* #  undef WORDS_BIGENDIAN */\n+# endif\n+#endif\n+\n+/* Enable large inode numbers on Mac OS X 10.5.  */\n+#ifndef _DARWIN_USE_64_BIT_INODE\n+# define _DARWIN_USE_64_BIT_INODE 1\n+#endif\n+\n+/* Number of bits in a file offset, on hosts where this is settable. */\n+#define _FILE_OFFSET_BITS 64\n+\n+/* Define for large files, on AIX-style hosts. */\n+/* #undef _LARGE_FILES */\n+\n+/* Windows Universal Platform constraints */\n+#if !defined(WINAPI_FAMILY) || (WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)\n+/* Either a desktop application without API restrictions, or and older system\n+   before these macros were defined. */\n+\n+/* ::wsystem is available */\n+#define HAVE_SYSTEM 1\n+\n+#endif // !WINAPI_FAMILY || WINAPI_FAMILY_DESKTOP_APP\n+\n+#endif //BITCOIN_BITCOIN_CONFIG_H"
      },
      {
        "sha": "ae24cb100e68fc465bd612517d47ed8a96c6bfe2",
        "filename": "build_msvc/bitcoind/bitcoind.vcxproj",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoind/bitcoind.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/bitcoind/bitcoind.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoind/bitcoind.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,75 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{D4513DDF-6013-44DC-ADCC-12EAF6D1F038}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoind.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Label=\"ReplaceInFile\" Project=\"..\\msbuild\\tasks\\replaceinfile.targets\" />\n+  <PropertyGroup>\n+    <ConfigIniIn>..\\..\\test\\config.ini.in</ConfigIniIn>\n+    <ConfigIniOut>..\\..\\test\\config.ini</ConfigIniOut>\n+  </PropertyGroup>\n+  <Target Name=\"AfterBuild\">\n+    <Copy SourceFiles=\"$(ConfigIniIn)\" DestinationFiles=\"$(ConfigIniOut)\" ></Copy>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                   Replace=\"@PACKAGE_NAME@\" By=\"Bitcoin Core\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                   Replace=\"@abs_top_srcdir@\" By=\"..\\..\" ToFullPath=\"true\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                   Replace=\"@abs_top_builddir@\" By=\"..\\..\" ToFullPath=\"true\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                   Replace=\"@EXEEXT@\" By=\".exe\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@ENABLE_WALLET_TRUE@\" By=\"\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@BUILD_BITCOIN_CLI_TRUE@\" By=\"\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@BUILD_BITCOIND_TRUE@\" By=\"\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@ENABLE_FUZZ_TRUE@\" By=\"\"></ReplaceInFile>\n+    <ReplaceInFile FilePath=\"$(ConfigIniOut)\"\n+                  Replace=\"@ENABLE_ZMQ_TRUE@\" By=\"\"></ReplaceInFile>\n+  </Target>\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "c09997d39d6ab97e0db1be8859b2c69339c6c9af",
        "filename": "build_msvc/common.init.vcxproj",
        "status": "added",
        "additions": 126,
        "deletions": 0,
        "changes": 126,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/common.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/common.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.init.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,126 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+<Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>16.0</VCProjectVersion>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+    <UseNativeEnvironment>true</UseNativeEnvironment>\n+   </PropertyGroup>\n+\n+  <PropertyGroup Condition=\"'$(WindowsTargetPlatformVersion)'=='' and !Exists('$(WindowsSdkDir)\\DesignTime\\CommonConfiguration\\Neutral\\Windows.props')\">\n+     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n+     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n+     <!-- Sometimes the version in the registry has to .0 suffix, and sometimes it doesn't. Check and add it -->\n+     <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' != '' and !$(WindowsTargetPlatformVersion_10.EndsWith('.0'))\">$(WindowsTargetPlatformVersion_10).0</WindowsTargetPlatformVersion_10>\n+     <WindowsTargetPlatformVersion>$(WindowsTargetPlatformVersion_10)</WindowsTargetPlatformVersion>\n+   </PropertyGroup>\n+\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+\n+  <PropertyGroup Condition=\"'$(Configuration)'=='Debug'\" Label=\"Configuration\">\n+    <LinkIncremental>true</LinkIncremental>\n+    <WholeProgramOptimization>false</WholeProgramOptimization>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n+    <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)'=='Release'\" Label=\"Configuration\">\n+    <LinkIncremental>false</LinkIncremental>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\$(ProjectName)\\</OutDir>\n+    <IntDir>$(Platform)\\$(Configuration)\\$(ProjectName)\\</IntDir>\n+  </PropertyGroup>\n+\n+<ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <SDLCheck>true</SDLCheck>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+    </Link>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <SDLCheck>true</SDLCheck>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+    </Link>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <AdditionalOptions>/bigobj %(AdditionalOptions)</AdditionalOptions>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup>\n+    <ClCompile>\n+      <WarningLevel>Level3</WarningLevel>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <AdditionalOptions>/utf-8 %(AdditionalOptions)</AdditionalOptions>\n+      <DisableSpecificWarnings>4018;4221;4244;4267;4334;4715;4805;4834</DisableSpecificWarnings>\n+      <TreatWarningAsError>true</TreatWarningAsError>\n+      <PreprocessorDefinitions>ZMQ_STATIC;NOMINMAX;WIN32;HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;_CONSOLE;_WIN32_WINNT=0x0601;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;..\\..\\src\\secp256k1\\include;..\\..\\src\\leveldb\\include;..\\..\\src\\leveldb\\helpers\\memenv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+    <Lib>\n+      <AdditionalOptions>/ignore:4221</AdditionalOptions>\n+    </Lib>\n+  </ItemDefinitionGroup>\n+  <Import Project=\"common.init.vcxproj.user\" Condition=\"Exists('common.init.vcxproj.user')\" />\n+</Project>"
      },
      {
        "sha": "42150a23103773a96de2f25f86de7ccb589e821e",
        "filename": "build_msvc/common.qt.init.vcxproj",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/common.qt.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/common.qt.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.qt.init.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+\n+  <PropertyGroup Label=\"QtGlobals\">\n+    <QtBaseDir>C:\\Qt5.9.8_x64_static_vs2019</QtBaseDir>\n+    <QtPluginsLibraryDir>$(QtBaseDir)\\plugins</QtPluginsLibraryDir>\n+    <QtLibraryDir>$(QtBaseDir)\\lib</QtLibraryDir>\n+    <QtIncludeDir>$(QtBaseDir)\\include</QtIncludeDir>\n+    <QtIncludes>$(QtIncludeDir);$(QtIncludeDir)\\QtNetwork;$(QtIncludeDir)\\QtCore;$(QtIncludeDir)\\QtWidgets;$(QtIncludeDir)\\QtGui;</QtIncludes>\n+    <GeneratedFilesOutDir>.\\QtGeneratedFiles\\qt</GeneratedFilesOutDir>\n+    <QtToolsDir>$(QtBaseDir)\\bin</QtToolsDir>\n+    <QtReleaseLibraries>$(QtPluginsLibraryDir)\\platforms\\qminimal.lib;$(QtPluginsLibraryDir)\\platforms\\qwindows.lib;$(QtLibraryDir)\\qtfreetype.lib;$(QtLibraryDir)\\qtharfbuzz.lib;$(QtLibraryDir)\\qtlibpng.lib;$(QtLibraryDir)\\qtpcre2.lib;$(QtLibraryDir)\\Qt5AccessibilitySupport.lib;$(QtLibraryDir)\\Qt5Core.lib;$(QtLibraryDir)\\Qt5Concurrent.lib;$(QtLibraryDir)\\Qt5EventDispatcherSupport.lib;$(QtLibraryDir)\\Qt5FontDatabaseSupport.lib;$(QtLibraryDir)\\Qt5Gui.lib;$(QtLibraryDir)\\Qt5Network.lib;$(QtLibraryDir)\\Qt5PlatformCompositorSupport.lib;$(QtLibraryDir)\\Qt5ThemeSupport.lib;$(QtLibraryDir)\\Qt5Widgets.lib;$(QtLibraryDir)\\Qt5WinExtras.lib;$(QtLibraryDir)\\qtmain.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtReleaseLibraries>\n+    <QtDebugLibraries>$(QtPluginsLibraryDir)\\platforms\\qwindowsd.lib;$(QtPluginsLibraryDir)\\platforms\\qminimald.lib;$(QtLibraryDir)\\*d.lib;crypt32.lib;userenv.lib;netapi32.lib;imm32.lib;Dwmapi.lib;version.lib;winmm.lib;UxTheme.lib</QtDebugLibraries>\n+  </PropertyGroup>\n+\n+</Project>"
      },
      {
        "sha": "4bbcc3767f63b23225a70f672764947637d9666c",
        "filename": "build_msvc/common.vcxproj",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/common.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/common.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+<PropertyGroup><BuildDependsOn>$(BuildDependsOn);CopyBuildArtifacts</BuildDependsOn></PropertyGroup>\n+  <Target Name=\"CopyBuildArtifacts\" Condition=\"'$(ConfigurationType)' != 'StaticLibrary'\">\n+    <ItemGroup>\n+      <BuildArtifacts Include=\"$(OutDir)$(TargetName)$(TargetExt)\"></BuildArtifacts>\n+      <BuildArtifacts Include=\"$(OutDir)$(TargetName).pdb\"></BuildArtifacts>\n+    </ItemGroup>\n+    <Copy SourceFiles=\"@(BuildArtifacts)\" SkipUnchangedFiles=\"true\" DestinationFolder=\"..\\..\\src\\\" Condition=\"'$(OutDir)' != ''\"></Copy>\n+  </Target>\n+  <Import Project=\"common.vcxproj.user\" Condition=\"Exists('common.vcxproj.user')\" />\n+</Project>"
      },
      {
        "sha": "620df72a2f76480b7645befdb8e889bf8c779046",
        "filename": "build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_cli/libbitcoin_cli.vcxproj.in?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{0667528C-D734-4009-ADF9-C0D6C4A5A5A6}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "b47d62b29587ee85536232e599c1c9c4a1429b9a",
        "filename": "build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_common/libbitcoin_common.vcxproj.in?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{7C87E378-DF58-482E-AA2F-1BC129BC19CE}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "32cb75bf871c180dafb4a0b5c0fbd4a0722fa18f",
        "filename": "build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_crypto/libbitcoin_crypto.vcxproj.in?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{6190199C-6CF4-4DAD-BFBD-93FA72A760C1}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "992f64ec2e01dce5b2844dfe48b70757ced6a0ae",
        "filename": "build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "status": "added",
        "additions": 230,
        "deletions": 0,
        "changes": 230,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,230 @@\n+\ufeff<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{2B4ABFF8-D1FD-4845-88C9-1F3C0A6512BF}</ProjectGuid>\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\qt\\addressbookpage.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\addresstablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\askpassphrasedialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bantablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoin.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinaddressvalidator.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoingui.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinstrings.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\bitcoinunits.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\clientmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\coincontroldialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\coincontroltreewidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\createwalletdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\csvmodelwriter.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\editaddressdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\guiutil.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\intro.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\modaloverlay.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\networkstyle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\notificator.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\openuridialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\optionsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\optionsmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\paymentserver.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\peertablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\platformstyle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qrimagewidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qvalidatedlineedit.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\qvaluecombobox.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\receivecoinsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\receiverequestdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\recentrequeststablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\sendcoinsentry.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\signverifymessagedialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\splashscreen.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\trafficgraphwidget.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiondesc.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiondescdialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionfilterproxy.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionrecord.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactiontablemodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\transactionview.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\utilitydialog.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletcontroller.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletframe.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletmodel.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletmodeltransaction.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\walletview.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\winshutdownmonitor.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbookpage.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addresstablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_askpassphrasedialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bantablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoin.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinaddressvalidator.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinamountfield.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoingui.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_bitcoinunits.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_clientmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroldialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_coincontroltreewidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_createwalletdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_csvmodelwriter.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_editaddressdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_guiutil.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_intro.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_modaloverlay.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_networkstyle.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_notificator.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_openuridialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_optionsmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_overviewpage.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_paymentserver.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_peertablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_platformstyle.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qrimagewidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvalidatedlineedit.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_qvaluecombobox.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receivecoinsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_receiverequestdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_recentrequeststablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcconsole.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_sendcoinsentry.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_signverifymessagedialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_splashscreen.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_trafficgraphwidget.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondesc.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiondescdialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionfilterproxy.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionrecord.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactiontablemodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_transactionview.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_utilitydialog.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletcontroller.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletframe.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodel.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletmodeltransaction.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_walletview.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_winshutdownmonitor.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\rcc\\qrc_bitcoin_locale.cpp\" />\n+  </ItemGroup>\n+\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PreprocessorDefinitions>_AMD64_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PreprocessorDefinitions>_X86_;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <AdditionalIncludeDirectories>$(QtIncludes);$(GeneratedFilesOutDir)\\..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+  </ItemDefinitionGroup>\n+\n+  <ItemGroup>\n+    <QT_MOC Include=\"..\\..\\src\\qt\\bitcoinamountfield.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\intro.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\overviewpage.cpp\" />\n+    <QT_MOC Include=\"..\\..\\src\\qt\\rpcconsole.cpp\" />\n+    <MocHeaderFiles Include=\"..\\..\\src\\qt\\*.h\" />\n+    <ResourceTemplates Include=\"..\\..\\src\\qt\\*.qrc\" />\n+    <UiFormFiles Include=\"..\\..\\src\\qt\\forms\\*.ui\" />\n+    <TranslationFiles Include=\"..\\..\\src\\qt\\locale\\*.ts\" />\n+  </ItemGroup>\n+\n+  <Target Name=\"moccode\" Inputs=\"@(QT_MOC)\" Outputs=\"@(QT_MOC->'$(GeneratedFilesOutDir)\\%(Filename).moc')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt moc code include generation task.</ErrorText>\n+    </PropertyGroup>\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\" />\n+    <Exec Command=\"echo Performing libbitcoin_qt moc code include generation task, output path $(GeneratedFilesOutDir).\" />\n+    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc.\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(QT_MOC.Identity)&quot; -o $(GeneratedFilesOutDir)\\%(Filename).moc\" />\n+  </Target>\n+\n+  <Target Name=\"mocheader\" Inputs=\"@(MocHeaderFiles)\" Outputs=\"@(MocHeaderFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt moc header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt moc header generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n+    <Exec Command=\"echo $(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocHeaderFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n+  </Target>\n+\n+  <Target Name=\"forms\" Inputs=\"@(UiFormFiles)\" Outputs=\"@(UiFormFiles->'$(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt forms header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt forms header generation task, output path $(GeneratedFilesOutDir)\\forms.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\forms\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\uic.exe &quot;%(UiFormFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\forms\\ui_%(Filename).h\" />\n+  </Target>\n+\n+  <Target Name=\"translation\" Inputs=\"@(TranslationFiles)\" Outputs=\"@(TranslationFiles->'..\\..\\src\\qt\\locale\\%(Filename).qm')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt translation file generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt translation file generation task.\" />\n+    <Exec Command=\"$(QtToolsDir)\\lrelease.exe &quot;%(TranslationFiles.Identity)&quot; -qm ..\\..\\src\\qt\\locale\\%(Filename).qm\" />\n+  </Target>\n+\n+  <Target Name=\"resource\" Inputs=\"@(ResourceTemplates)\" Outputs=\"@(ResourceTemplates->'$(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp')\" DependsOnTargets=\"translation\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the libbitcoin_qt resource code generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing libbitcoin_qt resource code generation task, output path $(GeneratedFilesOutDir)\\rcc.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\rcc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\rcc.exe --verbose --name %(Filename) &quot;%(ResourceTemplates.Identity)&quot; -o $(GeneratedFilesOutDir)\\rcc\\qrc_%(Filename).cpp\" />\n+  </Target>\n+\n+  <Target Name=\"qtclean\">\n+    <Exec Command=\"echo Clean libbitcoin_qt generated files from $(GeneratedFilesOutDir).\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\forms;$(GeneratedFilesOutDir)\\moc;$(GeneratedFilesOutDir)\\rcc;\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\" />\n+  </Target>\n+\n+  <PropertyGroup>\n+    <BuildDependsOn>\n+        moccode;\n+        mocheader;\n+        forms;\n+        translation;\n+        resource;\n+        $(BuildDependsOn);\n+    </BuildDependsOn>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <CleanDependsOn>\n+        qtclean;\n+        $(CleanDependsOn);\n+    </CleanDependsOn>\n+  </PropertyGroup>\n+\n+</Project>"
      },
      {
        "sha": "58e90dbaeb438623922423bfd1890d16e84543cc",
        "filename": "build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_server/libbitcoin_server.vcxproj.in?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{460FEE33-1FE1-483F-B3BF-931FF8E969A5}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+    <ItemGroup>\n+@SOURCE_FILES@\n+    <ClCompile Include=\"..\\..\\src\\wallet\\init.cpp\">\n+      <ObjectFileName>$(IntDir)wallet_init.obj</ObjectFileName>\n+    </ClCompile>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "adf4fa03540fb0e516d030d476387a26d70bb015",
        "filename": "build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_util/libbitcoin_util.vcxproj.in?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "9c8279c72abad60972a59d19cd663765e590cd01",
        "filename": "build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet/libbitcoin_wallet.vcxproj.in?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{93B86837-B543-48A5-A89B-7C87ABB77DF2}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "1a6b7b6b92670f31d4ae6ad79685744e85358b9f",
        "filename": "build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "e86eea81e6567b0306577ddc761a66b0221f2442",
        "filename": "build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_zmq/libbitcoin_zmq.vcxproj.in?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{792D487F-F14C-49FC-A9DE-3FC150F31C3F}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "4cb0bdc90218add3a0cbfb365e15a7ba8d955e5c",
        "filename": "build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoinconsensus/libbitcoinconsensus.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\arith_uint256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\consensus\\merkle.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\consensus\\tx_check.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\aes.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\chacha20.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\hmac_sha512.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\ripemd160.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha1.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha256_sse4.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\crypto\\sha512.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\hash.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\primitives\\block.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\primitives\\transaction.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\pubkey.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\bitcoinconsensus.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\interpreter.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\script.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\script\\script_error.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\uint256.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\util\\strencodings.cpp\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "f855923c62da7351706a87a67ded8a04445aa354",
        "filename": "build_msvc/libleveldb/libleveldb.vcxproj",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libleveldb/libleveldb.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libleveldb/libleveldb.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libleveldb/libleveldb.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,63 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{18430FEF-6B61-4C53-B396-718E02850F1B}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\builder.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\c.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\dbformat.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\db_impl.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\db_iter.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\dumpfile.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\filename.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\log_reader.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\log_writer.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\memtable.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\repair.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\table_cache.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\version_edit.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\version_set.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\db\\write_batch.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\helpers\\memenv\\memenv.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\port\\port_posix_sse.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\port\\port_win.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\block.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\block_builder.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\filter_block.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\format.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\iterator.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\merger.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\table.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\table_builder.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\table\\two_level_iterator.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\arena.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\bloom.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\cache.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\coding.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\comparator.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\crc32c.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\env_win.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\filter_policy.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\hash.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\histogram.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\logging.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\options.cc\" />\n+    <ClCompile Include=\"..\\..\\src\\leveldb\\util\\status.cc\" />\n+  </ItemGroup>\n+  <ItemDefinitionGroup>\n+    <ClCompile>\n+\t <PreprocessorDefinitions>_CRT_NONSTDC_NO_DEPRECATE;LEVELDB_PLATFORM_WINDOWS;LEVELDB_ATOMIC_PRESENT;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+\t <DisableSpecificWarnings>4244;4267;4312;</DisableSpecificWarnings>\n+\t <AdditionalIncludeDirectories>..\\..\\src\\leveldb;..\\..\\src\\leveldb\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+\t</ClCompile>\n+  </ItemDefinitionGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "99fb63fb0262ae1699480890e7986654bd199cac",
        "filename": "build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libsecp256k1/libsecp256k1.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\secp256k1\\src\\secp256k1.c\" />\n+  </ItemGroup>\n+    <ItemDefinitionGroup>\n+    <ClCompile>\n+      <PreprocessorDefinitions>ENABLE_MODULE_ECDH;ENABLE_MODULE_RECOVERY;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+       <AdditionalIncludeDirectories>..\\..\\src\\secp256k1;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+     </ClCompile>\n+  </ItemDefinitionGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "5187c946a0d0fb4f49c392bbc881c416bfd763b8",
        "filename": "build_msvc/libsecp256k1_config.h",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libsecp256k1_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libsecp256k1_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libsecp256k1_config.h?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,29 @@\n+/**********************************************************************\n+ * Copyright (c) 2013, 2014 Pieter Wuille                             *\n+ * Distributed under the MIT software license, see the accompanying   *\n+ * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n+ **********************************************************************/\n+\n+#ifndef BITCOIN_LIBSECP256K1_CONFIG_H\n+#define BITCOIN_LIBSECP256K1_CONFIG_H\n+\n+#undef USE_ASM_X86_64\n+#undef USE_ENDOMORPHISM\n+#undef USE_FIELD_10X26\n+#undef USE_FIELD_5X52\n+#undef USE_FIELD_INV_BUILTIN\n+#undef USE_FIELD_INV_NUM\n+#undef USE_NUM_GMP\n+#undef USE_NUM_NONE\n+#undef USE_SCALAR_4X64\n+#undef USE_SCALAR_8X32\n+#undef USE_SCALAR_INV_BUILTIN\n+#undef USE_SCALAR_INV_NUM\n+\n+#define USE_NUM_NONE 1\n+#define USE_FIELD_INV_BUILTIN 1\n+#define USE_SCALAR_INV_BUILTIN 1\n+#define USE_FIELD_10X26 1\n+#define USE_SCALAR_8X32 1\n+\n+#endif /* BITCOIN_LIBSECP256K1_CONFIG_H */"
      },
      {
        "sha": "b5e844010e9197706dc0d75582fe2d3983bebfb5",
        "filename": "build_msvc/libtest_util/libtest_util.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libtest_util/libtest_util.vcxproj.in?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{868474FD-35F6-4400-8EED-30A33E7521D4}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "0f13a57241350d9bb8a37def99f0d5b2f91ad589",
        "filename": "build_msvc/libunivalue/libunivalue.vcxproj",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libunivalue/libunivalue.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/libunivalue/libunivalue.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libunivalue/libunivalue.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{5724BA7D-A09A-4BA8-800B-C4C1561B3D69}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_get.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_read.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\univalue\\lib\\univalue_write.cpp\" />\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "12868a987418158684c5aa5dd6eceef6b7116ba3",
        "filename": "build_msvc/msbuild/tasks/hexdump.targets",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/msbuild/tasks/hexdump.targets",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/msbuild/tasks/hexdump.targets",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msbuild/tasks/hexdump.targets?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,53 @@\n+<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <UsingTask\n+    TaskName=\"HeaderFromHexdump\"\n+    TaskFactory=\"CodeTaskFactory\"\n+    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\n+    <ParameterGroup>\n+        <RawFilePath Required=\"true\" />\n+        <HeaderFilePath Required=\"true\" />\n+        <SourceHeader Required=\"true\" />\n+        <SourceFooter Required=\"true\" />\n+    </ParameterGroup>\n+    <Task>\n+      <Using Namespace=\"System\"/>\n+      <Using Namespace=\"System.IO\"/>\n+      <Code Type=\"Fragment\" Language=\"cs\">\n+<![CDATA[\n+Log.LogMessage(\"msbuild inline hexdump task for \" + RawFilePath + \".\");\n+if(File.Exists(RawFilePath) == false) {\n+    Log.LogError(\"hexdump task could not locate \" + RawFilePath + \".\");\n+}\n+else {\n+    FileInfo inFileInfo = new FileInfo(RawFilePath);\n+    FileInfo outFileInfo = new FileInfo(HeaderFilePath);\n+\n+    if (outFileInfo.Exists == false || inFileInfo.LastWriteTime > outFileInfo.LastWriteTime)\n+    {\n+      using (Stream inStm = File.OpenRead(RawFilePath))\n+      {\n+          using (StreamWriter sw = new StreamWriter(HeaderFilePath))\n+          {\n+              sw.WriteLine(SourceHeader);\n+              int count = 0;\n+              int rawChar = inStm.ReadByte();\n+              while(rawChar != -1)\n+              {\n+                  sw.Write(\"0x{0:x2}, \", rawChar);\n+                  count++;\n+                  if(count % 8 == 0)\n+                  {\n+                      sw.WriteLine();\n+                  }\n+                  rawChar = inStm.ReadByte();\n+              }\n+              sw.WriteLine(SourceFooter);\n+          }\n+      }\n+   }\n+}\n+]]>\n+      </Code>\n+    </Task>\n+  </UsingTask>\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "2ccb8b30e053f425e2b590a2ae5ee6d51523a957",
        "filename": "build_msvc/msbuild/tasks/replaceinfile.targets",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/msbuild/tasks/replaceinfile.targets",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/msbuild/tasks/replaceinfile.targets",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msbuild/tasks/replaceinfile.targets?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,35 @@\n+<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <UsingTask\n+    TaskName=\"ReplaceInFile\"\n+    TaskFactory=\"CodeTaskFactory\"\n+    AssemblyFile=\"$(MSBuildToolsPath)\\Microsoft.Build.Tasks.Core.dll\" >\n+    <ParameterGroup>\n+        <FilePath Required=\"true\" />\n+        <Replace Required=\"true\" />\n+        <By Required=\"false\" />\n+        <ToFullPath Required=\"false\" />\n+    </ParameterGroup>\n+    <Task>\n+      <Using Namespace=\"System\"/>\n+      <Using Namespace=\"System.IO\"/>\n+      <Code Type=\"Fragment\" Language=\"cs\">\n+<![CDATA[\n+if(File.Exists(FilePath) == false) {\n+    Log.LogError(\"replaceinfile task could not locate \" + FilePath + \".\");\n+}\n+else {\n+    var data = File.ReadAllText(FilePath);\n+    var by = By;\n+    if (ToFullPath == \"true\")\n+    {\n+       by = Path.GetFullPath(by);\n+    }\n+    data = data.Replace(Replace, by);\n+    Log.LogMessage(\"Replace '\" + Replace + \"' by '\" + by + \"' in \" + FilePath);\n+    File.WriteAllText(FilePath, data, new System.Text.UTF8Encoding(false));\n+}\n+]]>\n+      </Code>\n+    </Task>\n+  </UsingTask>\n+</Project>\n\\ No newline at end of file"
      },
      {
        "sha": "d99b17d38127bec2623a42552f461979cee61531",
        "filename": "build_msvc/msvc-autogen.py",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,86 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import os\n+import re\n+import argparse\n+from shutil import copyfile\n+\n+SOURCE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src'))\n+DEFAULT_PLATFORM_TOOLSET = R'v141'\n+\n+libs = [\n+    'libbitcoin_cli',\n+    'libbitcoin_common',\n+    'libbitcoin_crypto',\n+    'libbitcoin_server',\n+    'libbitcoin_util',\n+    'libbitcoin_wallet_tool',\n+    'libbitcoin_wallet',\n+    'libbitcoin_zmq',\n+    'bench_bitcoin',\n+    'libtest_util',\n+]\n+\n+ignore_list = [\n+]\n+\n+lib_sources = {}\n+\n+\n+def parse_makefile(makefile):\n+    with open(makefile, 'r', encoding='utf-8') as file:\n+        current_lib = ''\n+        for line in file.read().splitlines():\n+            if current_lib:\n+                source = line.split()[0]\n+                if source.endswith('.cpp') and not source.startswith('$') and source not in ignore_list:\n+                    source_filename = source.replace('/', '\\\\')\n+                    object_filename = source.replace('/', '_')[:-4] + \".obj\"\n+                    lib_sources[current_lib].append((source_filename, object_filename))\n+                if not line.endswith('\\\\'):\n+                    current_lib = ''\n+                continue\n+            for lib in libs:\n+                _lib = lib.replace('-', '_')\n+                if re.search(_lib + '.*_SOURCES \\\\= \\\\\\\\', line):\n+                    current_lib = lib\n+                    lib_sources[current_lib] = []\n+                    break\n+\n+def set_common_properties(toolset):\n+    with open(os.path.join(SOURCE_DIR, '../build_msvc/common.init.vcxproj'), 'r', encoding='utf-8') as rfile:\n+        s = rfile.read()\n+        s = re.sub('<PlatformToolset>.*?</PlatformToolset>', '<PlatformToolset>'+toolset+'</PlatformToolset>', s)\n+    with open(os.path.join(SOURCE_DIR, '../build_msvc/common.init.vcxproj'), 'w', encoding='utf-8',newline='\\n') as wfile:\n+        wfile.write(s)\n+\n+def main():\n+    parser = argparse.ArgumentParser(description='Bitcoin-core msbuild configuration initialiser.')\n+    parser.add_argument('-toolset', nargs='?',help='Optionally sets the msbuild platform toolset, e.g. v142 for Visual Studio 2019.'\n+         ' default is %s.'%DEFAULT_PLATFORM_TOOLSET)\n+    args = parser.parse_args()\n+    if args.toolset:\n+        set_common_properties(args.toolset)\n+\n+    for makefile_name in os.listdir(SOURCE_DIR):\n+        if 'Makefile' in makefile_name:\n+            parse_makefile(os.path.join(SOURCE_DIR, makefile_name))\n+    for key, value in lib_sources.items():\n+        vcxproj_filename = os.path.abspath(os.path.join(os.path.dirname(__file__), key, key + '.vcxproj'))\n+        content = ''\n+        for source_filename, object_filename in value:\n+            content += '    <ClCompile Include=\"..\\\\..\\\\src\\\\' + source_filename + '\">\\n'\n+            content += '      <ObjectFileName>$(IntDir)' + object_filename + '</ObjectFileName>\\n'\n+            content += '    </ClCompile>\\n'\n+        with open(vcxproj_filename + '.in', 'r', encoding='utf-8') as vcxproj_in_file:\n+            with open(vcxproj_filename, 'w', encoding='utf-8') as vcxproj_file:\n+                vcxproj_file.write(vcxproj_in_file.read().replace(\n+                    '@SOURCE_FILES@\\n', content))\n+    copyfile(os.path.join(SOURCE_DIR,'../build_msvc/bitcoin_config.h'), os.path.join(SOURCE_DIR, 'config/bitcoin-config.h'))\n+    copyfile(os.path.join(SOURCE_DIR,'../build_msvc/libsecp256k1_config.h'), os.path.join(SOURCE_DIR, 'secp256k1/src/libsecp256k1-config.h'))\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "2095c0c3213513510eb6106852943fc991d8e2b1",
        "filename": "build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "status": "added",
        "additions": 122,
        "deletions": 0,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin-qt/test_bitcoin-qt.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,122 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <Import Project=\"..\\common.qt.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{51201D5E-D939-4854-AE9D-008F03FF518E}</ProjectGuid>\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\test\\util\\setup_common.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\addressbooktests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\apptests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\compattests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\test_main.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\uritests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\util.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\qt\\test\\wallettests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\wallet_test_fixture.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_addressbooktests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_apptests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_compattests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_rpcnestedtests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_uritests.cpp\" />\n+    <ClCompile Include=\"$(GeneratedFilesOutDir)\\moc\\moc_wallettests.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_qt\\libbitcoin_qt.vcxproj\">\n+      <Project>{2b4abff8-d1fd-4845-88c9-1f3c0a6512bf}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Release'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtLibraryDir)\\Qt5Test.lib;$(QtReleaseLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+  </ItemDefinitionGroup>\n+\n+    <ItemDefinitionGroup Condition=\"'$(Configuration)'=='Debug'\">\n+    <ClCompile>\n+      <AdditionalIncludeDirectories>..\\libbitcoin_qt\\$(GeneratedFilesOutDir)\\..\\;$(QtIncludeDir)\\QtTest;$(QtIncludes);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>$(QtDebugLibraries);%(AdditionalDependencies)</AdditionalDependencies>\n+\t  <AdditionalOptions>/ignore:4206</AdditionalOptions>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\addressbooktests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\apptests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\compattests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\rpcnestedtests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\uritests.h\" />\n+    <MocTestFiles Include=\"..\\..\\src\\qt\\test\\wallettests.h\" />\n+  </ItemGroup>\n+  <Target Name=\"moccode\" Inputs=\"@(MocTestFiles)\" Outputs=\"@(MocTestFiles->'$(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp')\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the test_bitcoin-qt moc code generation task.</ErrorText>\n+    </PropertyGroup>\n+    <Exec Command=\"echo Performing test_bitcoin-qt moc generation task, output path $(GeneratedFilesOutDir)\\moc.\" />\n+    <MakeDir Directories=\"$(GeneratedFilesOutDir)\\moc\\\" />\n+    <Exec Command=\"$(QtToolsDir)\\moc.exe $(MOC_DEFINES) &quot;%(MocTestFiles.Identity)&quot; -o $(GeneratedFilesOutDir)\\moc\\moc_%(Filename).cpp\" />\n+  </Target>\n+  <Target Name=\"QtTestCleanGeneratedFiles\">\n+    <Exec Command=\"echo Clean test_bitcoin-qt generated files from $(GeneratedFilesOutDir).\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\\*\" />\n+    <RemoveDir Directories=\"$(GeneratedFilesOutDir)\\moc\" />\n+  </Target>\n+  <PropertyGroup>\n+    <BuildDependsOn>\n+       moccode;\n+       $(BuildDependsOn);\n+    </BuildDependsOn>\n+  </PropertyGroup>\n+  <PropertyGroup>\n+    <CleanDependsOn>\n+        QtTestCleanGeneratedFiles;\n+        $(CleanDependsOn);\n+    </CleanDependsOn>\n+  </PropertyGroup>\n+</Project>"
      },
      {
        "sha": "5c4b777d5164bbc3354b26f262310e9a385a99cd",
        "filename": "build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "status": "added",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin/test_bitcoin.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,73 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{A56B73DB-D46D-4882-8374-1FE3FFA08F07}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\test\\*_properties.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\*_tests.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\gen\\*_gen.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\main.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\test\\util\\*.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_fixture.cpp\" />\n+    <ClCompile Include=\"..\\..\\src\\wallet\\test\\*_tests.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n+      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{bb493552-3b8c-4a8c-bf69-a6e7a51d2ea6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n+      <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n+    <PropertyGroup>\n+      <ErrorText>There was an error executing the JSON test header generation task.</ErrorText>\n+    </PropertyGroup>\n+    <ItemGroup>\n+      <JsonTestFile Include=\"..\\..\\src\\test\\data\\*.json\" />\n+      <RawTestFile Include=\"..\\..\\src\\test\\data\\*.raw\" />\n+    </ItemGroup>\n+    <HeaderFromHexdump RawFilePath=\"%(RawTestFile.FullPath)\" HeaderFilePath=\"%(RawTestFile.FullPath).h\" SourceHeader=\"static unsigned const char %(RawTestFile.Filename)_raw[] = {\" SourceFooter=\"};\" />\n+    <HeaderFromHexdump RawFilePath=\"%(JsonTestFile.FullPath)\" HeaderFilePath=\"%(JsonTestFile.FullPath).h\" SourceHeader=\"namespace json_tests{ static unsigned const char %(JsonTestFile.Filename)[] = {\" SourceFooter=\"};}\" />\n+  </Target>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Label=\"hexdumpTarget\" Project=\"..\\msbuild\\tasks\\hexdump.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "571d19957f9fdaec2fc8528ab633b2ac87541879",
        "filename": "build_msvc/testconsensus/testconsensus.cpp",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/testconsensus/testconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/testconsensus/testconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.cpp?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,54 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <iostream>\n+\n+// bitcoin includes.\n+#include <..\\src\\script\\bitcoinconsensus.h>\n+#include <..\\src\\primitives\\transaction.h>\n+#include <..\\src\\script\\script.h>\n+#include <..\\src\\streams.h>\n+#include <..\\src\\version.h>\n+\n+CMutableTransaction BuildSpendingTransaction(const CScript& scriptSig, const CScriptWitness& scriptWitness, int nValue = 0)\n+{\n+    CMutableTransaction txSpend;\n+    txSpend.nVersion = 1;\n+    txSpend.nLockTime = 0;\n+    txSpend.vin.resize(1);\n+    txSpend.vout.resize(1);\n+    txSpend.vin[0].scriptWitness = scriptWitness;\n+    txSpend.vin[0].prevout.hash = uint256();\n+    txSpend.vin[0].prevout.n = 0;\n+    txSpend.vin[0].scriptSig = scriptSig;\n+    txSpend.vin[0].nSequence = CTxIn::SEQUENCE_FINAL;\n+    txSpend.vout[0].scriptPubKey = CScript();\n+    txSpend.vout[0].nValue = nValue;\n+\n+    return txSpend;\n+}\n+\n+int main()\n+{\n+    std::cout << \"bitcoinconsensus version: \" << bitcoinconsensus_version() << std::endl;\n+\n+    CScript pubKeyScript;\n+    pubKeyScript << OP_1 << OP_0 << OP_1;\n+\n+    int amount = 0; // 600000000;\n+\n+    CScript scriptSig;\n+    CScriptWitness scriptWitness;\n+    CTransaction vanillaSpendTx = BuildSpendingTransaction(scriptSig, scriptWitness, amount);\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << vanillaSpendTx;\n+\n+    bitcoinconsensus_error err;\n+    auto op0Result = bitcoinconsensus_verify_script_with_amount(pubKeyScript.data(), pubKeyScript.size(), amount, (const unsigned char*)&stream[0], stream.size(), 0, bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL, &err);\n+    std::cout << \"Op0 result: \" << op0Result << \", error code \" << err << std::endl;\n+\n+    getchar();\n+\n+    return 0;\n+}"
      },
      {
        "sha": "776c40920abdd43ca179132ad31c77dd3b2685a3",
        "filename": "build_msvc/testconsensus/testconsensus.vcxproj",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/testconsensus/testconsensus.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/testconsensus/testconsensus.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/testconsensus/testconsensus.vcxproj?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{E78473E9-B850-456C-9120-276301E04C06}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"testconsensus.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2B384FA8-9EE1-4544-93CB-0D733C25E8CE}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{B53A5535-EE9D-4C6F-9A26-F79EE3BC3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libsecp256k1\\libsecp256k1.vcxproj\">\n+      <Project>{BB493552-3B8C-4A8C-BF69-A6E7A51D2EA6}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "27e2bbdcde9236c07c92e3752870306fe254d288",
        "filename": "build_msvc/vcpkg-packages.txt",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/vcpkg-packages.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/build_msvc/vcpkg-packages.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg-packages.txt?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1 @@\n+berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent[thread] rapidcheck zeromq double-conversion\n\\ No newline at end of file"
      },
      {
        "sha": "880e49b4595a3fcb92ffd580d56ebe173af2575b",
        "filename": "ci/README.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,38 @@\n+## ci scripts\n+\n+This directory contains scripts for each build step in each build stage.\n+\n+Currently three stages `lint`, `extended_lint` and `test` are defined. Each stage has its own lifecycle, similar to the\n+[Travis CI lifecycle](https://docs.travis-ci.com/user/job-lifecycle#the-job-lifecycle). Every script in here is named\n+and numbered according to which stage and lifecycle step it belongs to.\n+\n+### Running a stage locally\n+\n+Be aware that the tests will be built and run in-place, so please run at your own risk.\n+If the repository is not a fresh git clone, you might have to clean files from previous builds or test runs first.\n+\n+The ci needs to perform various sysadmin tasks such as installing packages or writing to the user's home directory.\n+While most of the actions are done inside a docker container, this is not possible for all. Thus, cache directories,\n+such as the depends cache or ccache, are mounted as read-write into the docker container. While it should be fine to run\n+the ci system locally on you development box, the ci scripts can generally be assumed to have received less review and\n+testing compared to other parts of the codebase. If you want to keep the work tree clean, you might want to run the ci\n+system in a virtual machine with a Linux operating system of your choice.\n+\n+To allow for a wide range of tested environments, but also ensure reproducibility to some extent, the test stage\n+requires `docker` to be installed. To install all requirements on Ubuntu, run\n+\n+```\n+sudo apt install docker.io bash\n+```\n+\n+To run the default test stage,\n+\n+```\n+./ci/test_run_all.sh\n+```\n+\n+To run the test stage with a specific configuration,\n+\n+```\n+FILE_ENV=\"./ci/test/00_setup_env_arm.sh\" ./ci/test_run_all.sh\n+```"
      },
      {
        "sha": "8b2d609504d5c0980b128ba28e4da4ee466e01f2",
        "filename": "ci/lint/04_install.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/04_install.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+\n+travis_retry pip3 install codespell==1.15.0\n+travis_retry pip3 install flake8==3.7.8\n+travis_retry pip3 install yq\n+\n+SHELLCHECK_VERSION=v0.6.0\n+curl -s \"https://storage.googleapis.com/shellcheck/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" | tar --xz -xf - --directory /tmp/\n+export PATH=\"/tmp/shellcheck-${SHELLCHECK_VERSION}:${PATH}\""
      },
      {
        "sha": "2987812c8e64bab1648a3dc04492b1d338cdf047",
        "filename": "ci/lint/05_before_script.sh",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/lint/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/lint/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/05_before_script.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,9 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+\n+git fetch --unshallow"
      },
      {
        "sha": "ae8122f9af9642f0b4aa3bbc9a71c46ca6deca8a",
        "filename": "ci/lint/06_script.sh",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/06_script.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,25 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+\n+if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then\n+  test/lint/commit-script-check.sh $TRAVIS_COMMIT_RANGE\n+fi\n+\n+test/lint/git-subtree-check.sh src/crypto/ctaes\n+test/lint/git-subtree-check.sh src/secp256k1\n+test/lint/git-subtree-check.sh src/univalue\n+test/lint/git-subtree-check.sh src/leveldb\n+test/lint/check-doc.py\n+test/lint/check-rpc-mappings.py .\n+test/lint/lint-all.sh\n+\n+if [ \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" ] && [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then\n+    git log --merges --before=\"2 days ago\" -1 --format='%H' > ./contrib/verify-commits/trusted-sha512-root-commit\n+    travis_retry gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys $(<contrib/verify-commits/trusted-keys) &&\n+    ./contrib/verify-commits/verify-commits.py --clean-merge=2;\n+fi"
      },
      {
        "sha": "1b03c652dbbf5b51f8c05e85090ad6b3ce4a1a85",
        "filename": "ci/retry/README.md",
        "status": "added",
        "additions": 123,
        "deletions": 0,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/retry/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/retry/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,123 @@\n+retry - The command line retry tool\n+------------------------------------------\n+\n+Retry any shell command with exponential backoff or constant delay.\n+\n+### Instructions\n+\n+Install:\n+\n+retry is a shell script, so drop it somewhere and make sure it's added to your $PATH. Or you can use the following one-liner:\n+\n+```sh\n+sudo sh -c \"curl https://raw.githubusercontent.com/kadwanev/retry/master/retry -o /usr/local/bin/retry && chmod +x /usr/local/bin/retry\"\n+```\n+\n+If you're on OS X, retry is also on Homebrew:\n+\n+```\n+brew pull 27283\n+brew install retry\n+```\n+Not popular enough for homebrew-core. Please star this project to help.\n+\n+### Usage\n+\n+Help:\n+\n+`retry -?`\n+\n+    Usage: retry [options] -- execute command\n+        -h, -?, --help\n+        -v, --verbose                    Verbose output\n+        -t, --tries=#                    Set max retries: Default 10\n+        -s, --sleep=secs                 Constant sleep amount (seconds)\n+        -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n+        -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n+        -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n+\n+### Examples\n+\n+No problem:\n+\n+`retry echo u work good`\n+\n+    u work good\n+\n+Test functionality:\n+\n+`retry 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Before retry #4: sleeping 2.4 seconds\n+    y u no work\n+    Before retry #5: sleeping 4.8 seconds\n+    y u no work\n+    Before retry #6: sleeping 9.6 seconds\n+    y u no work\n+    Before retry #7: sleeping 19.2 seconds\n+    y u no work\n+    Before retry #8: sleeping 38.4 seconds\n+    y u no work\n+    Before retry #9: sleeping 60.0 seconds\n+    y u no work\n+    Before retry #10: sleeping 60.0 seconds\n+    y u no work\n+    etc..\n+\n+Limit retries:\n+\n+`retry -t 4 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Before retry #4: sleeping 2.4 seconds\n+    y u no work\n+    Retries exhausted\n+\n+Bad command:\n+\n+`retry poop`\n+\n+    bash: poop: command not found\n+\n+Fail command:\n+\n+`retry -t 3 -f 'echo \"oh poopsickles\"' 'echo \"y u no work\"; false'`\n+\n+    y u no work\n+    Before retry #1: sleeping 0.3 seconds\n+    y u no work\n+    Before retry #2: sleeping 0.6 seconds\n+    y u no work\n+    Before retry #3: sleeping 1.2 seconds\n+    y u no work\n+    Retries exhausted, running fail script\n+    oh poopsickles\n+\n+Last attempt passed:\n+\n+`retry -t 3 -- 'if [ $RETRY_ATTEMPT -eq 3 ]; then echo Passed at attempt $RETRY_ATTEMPT; true; else echo Failed at attempt $RETRY_ATTEMPT; false; fi;'`\n+\n+    Failed at attempt 0\n+    Before retry #1: sleeping 0.3 seconds\n+    Failed at attempt 1\n+    Before retry #2: sleeping 0.6 seconds\n+    Failed at attempt 2\n+    Before retry #3: sleeping 1.2 seconds\n+    Passed at attempt 3\n+\n+### License\n+\n+Apache 2.0 - go nuts"
      },
      {
        "sha": "3c06519dbdfebececdfe030cc60cab72d62658a2",
        "filename": "ci/retry/retry",
        "status": "added",
        "additions": 163,
        "deletions": 0,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/retry/retry",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/retry/retry",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/retry/retry?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,163 @@\n+#!/usr/bin/env bash\n+\n+GETOPT_BIN=$IN_GETOPT_BIN\n+GETOPT_BIN=${GETOPT_BIN:-getopt}\n+\n+__sleep_amount() {\n+  if [ -n \"$constant_sleep\" ]; then\n+    sleep_time=$constant_sleep\n+  else\n+    #TODO: check for awk\n+    #TODO: check if user would rather use one of the other possible dependencies: python, ruby, bc, dc\n+    sleep_time=`awk \"BEGIN {t = $min_sleep * $(( (1<<($attempts -1)) )); print (t > $max_sleep ? $max_sleep : t)}\"`\n+  fi\n+}\n+\n+__log_out() {\n+  echo \"$1\" 1>&2\n+}\n+\n+# Parameters: max_tries min_sleep max_sleep constant_sleep fail_script EXECUTION_COMMAND\n+retry()\n+{\n+  local max_tries=\"$1\"; shift\n+  local min_sleep=\"$1\"; shift\n+  local max_sleep=\"$1\"; shift\n+  local constant_sleep=\"$1\"; shift\n+  local fail_script=\"$1\"; shift\n+  if [ -n \"$VERBOSE\" ]; then\n+    __log_out \"Retry Parameters: max_tries=$max_tries min_sleep=$min_sleep max_sleep=$max_sleep constant_sleep=$constant_sleep\"\n+    if [ -n \"$fail_script\" ]; then __log_out \"Fail script: $fail_script\"; fi\n+    __log_out \"\"\n+    __log_out \"Execution Command: $*\"\n+    __log_out \"\"\n+  fi\n+\n+  local attempts=0\n+  local return_code=1\n+\n+\n+  while [[ $return_code -ne 0 && $attempts -le $max_tries ]]; do\n+    if [ $attempts -gt 0 ]; then\n+      __sleep_amount\n+      __log_out \"Before retry #$attempts: sleeping $sleep_time seconds\"\n+      sleep $sleep_time\n+    fi\n+\n+    P=\"$1\"\n+    for param in \"${@:2}\"; do P=\"$P '$param'\"; done\n+    #TODO: replace single quotes in each arg with '\"'\"' ?\n+    export RETRY_ATTEMPT=$attempts\n+    bash -c \"$P\"\n+    return_code=$?\n+    #__log_out \"Process returned $return_code on attempt $attempts\"\n+    if [ $return_code -eq 127 ]; then\n+      # command not found\n+      exit $return_code\n+    elif [ $return_code -ne 0 ]; then\n+      attempts=$[$attempts +1]\n+    fi\n+  done\n+\n+  if [ $attempts -gt $max_tries ]; then\n+    if [ -n \"$fail_script\" ]; then\n+      __log_out \"Retries exhausted, running fail script\"\n+      eval $fail_script\n+    else\n+      __log_out \"Retries exhausted\"\n+    fi\n+  fi\n+\n+  exit $return_code\n+}\n+\n+# If we're being sourced, don't worry about such things\n+if [ \"$BASH_SOURCE\" == \"$0\" ]; then\n+  # Prints the help text\n+  help()\n+  {\n+    local retry=$(basename $0)\n+    cat <<EOF\n+Usage: $retry [options] -- execute command\n+    -h, -?, --help\n+    -v, --verbose                    Verbose output\n+    -t, --tries=#                    Set max retries: Default 10\n+    -s, --sleep=secs                 Constant sleep amount (seconds)\n+    -m, --min=secs                   Exponential Backoff: minimum sleep amount (seconds): Default 0.3\n+    -x, --max=secs                   Exponential Backoff: maximum sleep amount (seconds): Default 60\n+    -f, --fail=\"script +cmds\"        Fail Script: run in case of final failure\n+EOF\n+  }\n+\n+  # show help for no arguments if stdin is a terminal\n+  if { [ -z \"$1\" ] && [ -t 0 ] ; } || [ \"$1\" == '-h' ] || [ \"$1\" == '-?' ] || [ \"$1\" == '--help' ]\n+  then\n+    help\n+    exit 0\n+  fi\n+\n+  $GETOPT_BIN --test > /dev/null\n+  if [[ $? -ne 4 ]]; then\n+      echo \"I\u2019m sorry, 'getopt --test' failed in this environment. Please load GNU getopt.\"\n+      exit 1\n+  fi\n+\n+  OPTIONS=vt:s:m:x:f:\n+  LONGOPTIONS=verbose,tries:,sleep:,min:,max:,fail:\n+\n+  PARSED=$($GETOPT_BIN --options=\"$OPTIONS\" --longoptions=\"$LONGOPTIONS\" --name \"$0\" -- \"$@\")\n+  if [[ $? -ne 0 ]]; then\n+    # e.g. $? == 1\n+    #  then getopt has complained about wrong arguments to stdout\n+    exit 2\n+  fi\n+  # read getopt\u2019s output this way to handle the quoting right:\n+  eval set -- \"$PARSED\"\n+\n+  max_tries=10\n+  min_sleep=0.3\n+  max_sleep=60.0\n+  constant_sleep=\n+  fail_script=\n+\n+  # now enjoy the options in order and nicely split until we see --\n+  while true; do\n+      case \"$1\" in\n+          -v|--verbose)\n+              VERBOSE=true\n+              shift\n+              ;;\n+          -t|--tries)\n+              max_tries=\"$2\"\n+              shift 2\n+              ;;\n+          -s|--sleep)\n+              constant_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -m|--min)\n+              min_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -x|--max)\n+              max_sleep=\"$2\"\n+              shift 2\n+              ;;\n+          -f|--fail)\n+              fail_script=\"$2\"\n+              shift 2\n+              ;;\n+          --)\n+              shift\n+              break\n+              ;;\n+          *)\n+              echo \"Programming error\"\n+              exit 3\n+              ;;\n+      esac\n+  done\n+\n+  retry \"$max_tries\" \"$min_sleep\" \"$max_sleep\" \"$constant_sleep\" \"$fail_script\" \"$@\"\n+\n+fi"
      },
      {
        "sha": "a008d515236dc566570d62bf5829e75c2db00afc",
        "filename": "ci/test/00_setup_env.sh",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,58 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+# The root dir.\n+# The ci system copies this folder.\n+# This is where the build is done (depends and dist).\n+BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n+export BASE_ROOT_DIR\n+\n+echo \"Setting specific values in env\"\n+if [ -n \"${FILE_ENV}\" ]; then\n+  set -o errexit;\n+  # shellcheck disable=SC1090\n+  source \"${FILE_ENV}\"\n+fi\n+\n+echo \"Fallback to default values in env (if not yet set)\"\n+# The number of parallel jobs to pass down to make and test_runner.py\n+export MAKEJOBS=${MAKEJOBS:--j4}\n+# A folder for the ci system to put temporary files (ccache, datadirs for tests, ...)\n+# This folder only exists on the ci host.\n+export BASE_SCRATCH_DIR=${BASE_SCRATCH_DIR:-$BASE_ROOT_DIR/ci/scratch/}\n+# What host to compile for. See also ./depends/README.md\n+# Tests that need cross-compilation export the appropriate HOST.\n+# Tests that run natively guess the host\n+export HOST=${HOST:-$(\"$BASE_ROOT_DIR/depends/config.guess\")}\n+# Whether to prefer BusyBox over GNU utilities\n+export USE_BUSY_BOX=${USE_BUSY_BOX:-false}\n+export RUN_UNIT_TESTS=${RUN_UNIT_TESTS:-true}\n+export RUN_FUNCTIONAL_TESTS=${RUN_FUNCTIONAL_TESTS:-true}\n+export RUN_FUZZ_TESTS=${RUN_FUZZ_TESTS:-false}\n+export DOCKER_NAME_TAG=${DOCKER_NAME_TAG:-ubuntu:18.04}\n+# Randomize test order.\n+# See https://www.boost.org/doc/libs/1_71_0/libs/test/doc/html/boost_test/utf_reference/rt_param_reference/random.html\n+export BOOST_TEST_RANDOM=${BOOST_TEST_RANDOM:-1}\n+export CCACHE_SIZE=${CCACHE_SIZE:-100M}\n+export CCACHE_TEMPDIR=${CCACHE_TEMPDIR:-/tmp/.ccache-temp}\n+export CCACHE_COMPRESS=${CCACHE_COMPRESS:-1}\n+# The cache dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n+export CCACHE_DIR=${CCACHE_DIR:-$BASE_SCRATCH_DIR/.ccache}\n+# The depends dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n+export DEPENDS_DIR=${DEPENDS_DIR:-$BASE_ROOT_DIR/depends}\n+# Folder where the build is done (bin and lib).\n+export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_SCRATCH_DIR/out/$HOST}\n+export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n+export WINEDEBUG=${WINEDEBUG:-fixme-all}\n+export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps}\n+export GOAL=${GOAL:-install}\n+export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_SCRATCH_DIR}/qa-assets}\n+export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH\n+export CI_RETRY_EXE=${CI_RETRY_EXE:retry}"
      },
      {
        "sha": "2a522f5a8f05c56da10b6c12c08dd50d41f262ba",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,27 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=arm-linux-gnueabihf\n+# The host arch is unknown, so we run the tests through qemu.\n+# If the host is arm and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n+if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-arm -L /usr/arm-linux-gnueabihf/\"}\"; fi\n+export DPKG_ADD_ARCH=\"armhf\"\n+export PACKAGES=\"python3-zmq g++-arm-linux-gnueabihf busybox libc6:armhf libstdc++6:armhf libfontconfig1:armhf libxcb1:armhf\"\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  # Likely cross-compiling, so install the needed gcc and qemu-user\n+  export PACKAGES=\"$PACKAGES qemu-user\"\n+fi\n+# Use debian to avoid 404 apt errors when cross compiling\n+export DOCKER_NAME_TAG=\"debian:buster\"\n+export USE_BUSY_BOX=true\n+export RUN_UNIT_TESTS=true\n+export RUN_FUNCTIONAL_TESTS=true\n+export GOAL=\"install\"\n+# -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n+# This could be removed once the ABI change warning does not show up by default\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi\""
      },
      {
        "sha": "b875dceef0a1a1d0c459d6d66f885e1f2f10c056",
        "filename": "ci/test/00_setup_env_i686_centos.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_i686_centos.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_i686_centos.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_i686_centos.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=i686-pc-linux-gnu\n+export DOCKER_NAME_TAG=centos:7\n+export DOCKER_PACKAGES=\"gcc-c++ glibc-devel.x86_64 libstdc++-devel.x86_64 glibc-devel.i686 libstdc++-devel.i686 ccache libtool make git python3 python36-zmq which patch lbzip2 dash\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-reduce-exports\"\n+export CONFIG_SHELL=\"/bin/dash\""
      },
      {
        "sha": "af166b6ca7cf21336d24a1663dee549b6b85edbb",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=x86_64-apple-darwin16\n+export PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n+export OSX_SDK=10.11\n+export RUN_UNIT_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"deploy\"\n+export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\""
      },
      {
        "sha": "0b437a723f045c094af7324182b48ac37a9ead0c",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,19 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=x86_64-apple-darwin16\n+export BREW_PACKAGES=\"automake berkeley-db4 libtool boost miniupnpc pkg-config qt qrencode python3 ccache zeromq\"\n+export PIP_PACKAGES=\"zmq\"\n+export RUN_CI_ON_HOST=true\n+export RUN_UNIT_TESTS=true\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\"\n+# Run without depends\n+export NO_DEPENDS=1\n+export OSX_SDK=\"\""
      },
      {
        "sha": "2ffd3c51078bdc7b29c9db68d2571b4a08e96fa4",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,13 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export PACKAGES=\"clang-8 llvm-8 python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+# Use clang-8 instead of default clang (which is clang-6 on Bionic) to avoid spurious segfaults when running on ppc64le\n+export NO_DEPENDS=1\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang-8 CXX=clang++-8\""
      },
      {
        "sha": "b0405bb7623f3f054a2ac33812f6a53c8f7f6f94",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,16 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export PACKAGES=\"clang-8 llvm-8 python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n+export NO_DEPENDS=1\n+export RUN_UNIT_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=false\n+export RUN_FUZZ_TESTS=true\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang-8 CXX=clang++-8\"\n+# Use clang-8, instead of default clang on bionic, which is clang-6 and does not come with libfuzzer on aarch64"
      },
      {
        "sha": "53348559beaa5e86f9c68630b28ad856092ed55d",
        "filename": "ci/test/00_setup_env_native_nowallet.sh",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_native_nowallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_native_nowallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_nowallet.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,12 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export PACKAGES=\"python3-zmq\"\n+export DEP_OPTS=\"NO_WALLET=1\"\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\""
      },
      {
        "sha": "622ec3cfe1731252b4a3a8793ddf4bb9a63e6187",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,13 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev\"\n+export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n+export TEST_RUNNER_EXTRA=\"--coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\"\""
      },
      {
        "sha": "e9b7a7bba1fc81c4f995e51b6fe61197ba5ed0c2",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,17 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=ubuntu:16.04\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export NO_DEPENDS=1\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\"\n+\n+# xenial comes with old clang versions that can not parse the sanitizer suppressions files\n+# Remove unparseable lines as a hacky workaround\n+sed -i '/^implicit-/d' \"${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan\""
      },
      {
        "sha": "906ffd7d7966bf40087db07bfdc05b971c30d737",
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,15 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev\"\n+export USE_VALGRIND=1\n+export NO_DEPENDS=1\n+export TEST_RUNNER_EXTRA=\"p2p_segwit.py\"  # Only run one test for now. TODO enable all and bump timeouts\n+export RUN_FUNCTIONAL_TESTS=true\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no CC=clang CXX=clang++\"  # TODO enable GUI"
      },
      {
        "sha": "6452feb5f2c9dcd8d489929f3d77c276b6ff9e44",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,24 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=s390x-linux-gnu\n+# The host arch is unknown, so we run the tests through qemu.\n+# If the host is s390x and wants to run the tests natively, it can set QEMU_USER_CMD to the empty string.\n+if [ -z ${QEMU_USER_CMD+x} ]; then export QEMU_USER_CMD=\"${QEMU_USER_CMD:-\"qemu-s390x\"}\"; fi\n+export PACKAGES=\"python3-zmq\"\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  # Likely cross-compiling, so install the needed gcc and qemu-user\n+  export DPKG_ADD_ARCH=\"s390x\"\n+  export PACKAGES=\"$PACKAGES g++-s390x-linux-gnu qemu-user libc6:s390x libstdc++6:s390x libfontconfig1:s390x libxcb1:s390x\"\n+fi\n+# Use debian to avoid 404 apt errors\n+export DOCKER_NAME_TAG=\"debian:buster\"\n+export RUN_UNIT_TESTS=true\n+export RUN_FUNCTIONAL_TESTS=true\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb\""
      },
      {
        "sha": "1e04c4287af1de65da686d3e8ab0565cd7ec705d",
        "filename": "ci/test/00_setup_env_win64.sh",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_win64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/00_setup_env_win64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_win64.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,13 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=x86_64-w64-mingw32\n+export PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"deploy\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests\""
      },
      {
        "sha": "e939b9eeeb2963f65223a4a47a1663c0d47b41fe",
        "filename": "ci/test/03_before_install.sh",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/03_before_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/03_before_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/03_before_install.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,26 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+# Add llvm-symbolizer directory to PATH. Needed to get symbolized stack traces from the sanitizers.\n+PATH=$PATH:/usr/lib/llvm-6.0/bin/\n+export PATH\n+\n+BEGIN_FOLD () {\n+  echo \"\"\n+  CURRENT_FOLD_NAME=$1\n+  echo \"travis_fold:start:${CURRENT_FOLD_NAME}\"\n+}\n+\n+END_FOLD () {\n+  RET=$?\n+  echo \"travis_fold:end:${CURRENT_FOLD_NAME}\"\n+  if [ $RET != 0 ]; then\n+    echo \"${CURRENT_FOLD_NAME} failed with status code ${RET}\"\n+  fi\n+}\n+"
      },
      {
        "sha": "4d5859e4d34af63d59f3a84fea2018281f8bdedd",
        "filename": "ci/test/04_install.sh",
        "status": "added",
        "additions": 123,
        "deletions": 0,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,123 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+  export LC_ALL=en_US.utf8\n+fi\n+if [[ $QEMU_USER_CMD == qemu-s390* ]]; then\n+  export LC_ALL=C\n+fi\n+\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  set +o errexit\n+  pushd /usr/local/Homebrew || exit 1\n+  git reset --hard origin/master\n+  popd || exit 1\n+  set -o errexit\n+  ${CI_RETRY_EXE} brew unlink python@2\n+  ${CI_RETRY_EXE} brew update\n+  # brew upgrade returns an error if any of the packages is already up to date\n+  # Failure is safe to ignore, unless we really need an update.\n+  brew upgrade $BREW_PACKAGES || true\n+\n+  # install new packages (brew install returns an error if already installed)\n+  for i in $BREW_PACKAGES; do\n+    if ! brew list | grep -q $i; then\n+      ${CI_RETRY_EXE} brew install $i\n+    fi\n+  done\n+\n+  export PATH=\"/usr/local/opt/ccache/libexec:$PATH\"\n+\n+  ${CI_RETRY_EXE} pip3 install $PIP_PACKAGES\n+\n+fi\n+\n+mkdir -p \"${BASE_SCRATCH_DIR}\"\n+mkdir -p \"${CCACHE_DIR}\"\n+\n+export ASAN_OPTIONS=\"detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1\"\n+export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n+export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n+export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\"\n+env | grep -E '^(BITCOIN_CONFIG|BASE_|QEMU_|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n+if [[ $HOST = *-mingw32 ]]; then\n+  DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n+elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n+  DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n+fi\n+\n+export P_CI_DIR=\"$PWD\"\n+\n+if [ -z \"$RUN_CI_ON_HOST\" ]; then\n+  echo \"Creating $DOCKER_NAME_TAG container to run in\"\n+  ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n+\n+  DOCKER_ID=$(docker run $DOCKER_ADMIN -idt \\\n+                  --mount type=bind,src=$BASE_ROOT_DIR,dst=/ro_base,readonly \\\n+                  --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR \\\n+                  --mount type=bind,src=$DEPENDS_DIR,dst=$DEPENDS_DIR \\\n+                  -w $BASE_ROOT_DIR \\\n+                  --env-file /tmp/env \\\n+                  $DOCKER_NAME_TAG)\n+\n+  DOCKER_EXEC () {\n+    docker exec $DOCKER_ID bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n+  }\n+else\n+  echo \"Running on host system without docker wrapper\"\n+  DOCKER_EXEC () {\n+    bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n+  }\n+fi\n+\n+if [ -n \"$DPKG_ADD_ARCH\" ]; then\n+  DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\"\n+fi\n+\n+if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install epel-release\n+  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install $DOCKER_PACKAGES $PACKAGES\n+elif [ \"$TRAVIS_OS_NAME\" != \"osx\" ]; then\n+  ${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n+  ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n+fi\n+\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  top -l 1 -s 0 | awk ' /PhysMem/ {print}'\n+  echo \"Number of CPUs: $(sysctl -n hw.logicalcpu)\"\n+else\n+  DOCKER_EXEC free -m -h\n+  DOCKER_EXEC echo \"Number of CPUs \\(nproc\\):\" \\$\\(nproc\\)\n+  DOCKER_EXEC echo \"Free disk space:\"\n+  DOCKER_EXEC df -h\n+fi\n+\n+if [ ! -d ${DIR_QA_ASSETS} ]; then\n+  DOCKER_EXEC git clone https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n+fi\n+export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n+\n+DOCKER_EXEC mkdir -p \"${BASE_SCRATCH_DIR}/sanitizer-output/\"\n+\n+if [ -z \"$RUN_CI_ON_HOST\" ]; then\n+  echo \"Create $BASE_ROOT_DIR\"\n+  DOCKER_EXEC rsync -a /ro_base/ $BASE_ROOT_DIR\n+fi\n+\n+if [ \"$USE_BUSY_BOX\" = \"true\" ]; then\n+  echo \"Setup to use BusyBox utils\"\n+  DOCKER_EXEC mkdir -p $BASE_SCRATCH_DIR/bins/\n+  # tar excluded for now because it requires passing in the exact archive type in ./depends (fixed in later BusyBox version)\n+  # find excluded for now because it does not recognize the -delete option in ./depends (fixed in later BusyBox version)\n+  # ar excluded for now because it does not recognize the -q option in ./depends (unknown if fixed)\n+  # shellcheck disable=SC1010\n+  DOCKER_EXEC for util in \\$\\(busybox --list \\| grep -v \"^ar$\" \\| grep -v \"^tar$\" \\| grep -v \"^find$\"\\)\\; do ln -s \\$\\(command -v busybox\\) $BASE_SCRATCH_DIR/bins/\\$util\\; done\n+  # Print BusyBox version\n+  DOCKER_EXEC patch --help\n+fi"
      },
      {
        "sha": "d8aa5c87a22f24aa7b26f7a8b39fd7bcba748be7",
        "filename": "ci/test/05_before_script.sh",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,37 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+# Make sure default datadir does not exist and is never read by creating a dummy file\n+if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n+  echo > $HOME/Library/Application\\ Support/Bitcoin\n+else\n+  DOCKER_EXEC echo \\> \\$HOME/.bitcoin\n+fi\n+\n+DOCKER_EXEC mkdir -p ${DEPENDS_DIR}/SDKs ${DEPENDS_DIR}/sdk-sources\n+\n+if [ -n \"$OSX_SDK\" ] && [ ! -f ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n+  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n+fi\n+if [ -n \"$OSX_SDK\" ] && [ -f ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n+  DOCKER_EXEC tar -C ${DEPENDS_DIR}/SDKs -xf ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n+fi\n+if [[ $HOST = *-mingw32 ]]; then\n+  DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)\n+fi\n+if [ -z \"$NO_DEPENDS\" ]; then\n+  if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+    # CentOS has problems building the depends if the config shell is not explicitely set\n+    # (i.e. for libevent a Makefile with an empty SHELL variable is generated, leading to\n+    #  an error as the first command is executed)\n+    SHELL_OPTS=\"CONFIG_SHELL=/bin/bash\"\n+  else\n+    SHELL_OPTS=\"CONFIG_SHELL=\"\n+  fi\n+  DOCKER_EXEC $SHELL_OPTS make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+fi"
      },
      {
        "sha": "b6043cd61ecb31aa8e02295d18f431b6e373310b",
        "filename": "ci/test/06_script_a.sh",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,46 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$DEPENDS_DIR/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n+if [ -z \"$NO_DEPENDS\" ]; then\n+  DOCKER_EXEC ccache --max-size=$CCACHE_SIZE\n+fi\n+\n+BEGIN_FOLD autogen\n+if [ -n \"$CONFIG_SHELL\" ]; then\n+  DOCKER_EXEC \"$CONFIG_SHELL\" -c \"./autogen.sh\"\n+else\n+  DOCKER_EXEC ./autogen.sh\n+fi\n+END_FOLD\n+\n+DOCKER_EXEC mkdir -p build\n+export P_CI_DIR=\"$P_CI_DIR/build\"\n+\n+BEGIN_FOLD configure\n+DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n+END_FOLD\n+\n+BEGIN_FOLD distdir\n+# Create folder on host and docker, so that `cd` works\n+mkdir -p \"bitcoin-$HOST\"\n+DOCKER_EXEC make distdir VERSION=$HOST\n+END_FOLD\n+\n+export P_CI_DIR=\"$P_CI_DIR/bitcoin-$HOST\"\n+\n+BEGIN_FOLD configure\n+DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n+END_FOLD\n+\n+set -o errtrace\n+trap 'DOCKER_EXEC \"cat ${BASE_SCRATCH_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n+\n+BEGIN_FOLD build\n+DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n+END_FOLD"
      },
      {
        "sha": "537493a7103633306022c5f2028621b4359d7819",
        "filename": "ci/test/06_script_b.sh",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,41 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+if [ -n \"$QEMU_USER_CMD\" ]; then\n+  BEGIN_FOLD wrap-qemu\n+  # Generate all binaries, so that they can be wrapped\n+  DOCKER_EXEC make $MAKEJOBS -C src/secp256k1 VERBOSE=1\n+  DOCKER_EXEC make $MAKEJOBS -C src/univalue VERBOSE=1\n+  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-qemu.sh\"\n+  END_FOLD\n+fi\n+\n+if [ -n \"$USE_VALGRIND\" ]; then\n+  BEGIN_FOLD wrap-valgrind\n+  DOCKER_EXEC \"${BASE_ROOT_DIR}/ci/test/wrap-valgrind.sh\"\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD unit-tests\n+  bash -c \"${CI_WAIT}\" &  # Print dots in case the unit tests take a long time to run\n+  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib make $MAKEJOBS check VERBOSE=1\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_FUNCTIONAL_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD functional-tests\n+  DOCKER_EXEC test/functional/test_runner.py --ci $MAKEJOBS --tmpdirprefix \"${BASE_SCRATCH_DIR}/test_runner/\" --ansi --combinedlogslen=4000 ${TEST_RUNNER_EXTRA} --quiet --failfast\n+  END_FOLD\n+fi\n+\n+if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n+  BEGIN_FOLD fuzz-tests\n+  DOCKER_EXEC test/fuzz/test_runner.py -l DEBUG ${DIR_FUZZ_IN}\n+  END_FOLD\n+fi"
      },
      {
        "sha": "f1d30887482a5b374c2ef3ec50eb70b5d943b8fe",
        "filename": "ci/test/wrap-qemu.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/wrap-qemu.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/wrap-qemu.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-qemu.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+for b_name in {\"${BASE_OUTDIR}/bin\"/*,src/secp256k1/*tests,src/univalue/{no_nul,test_json,unitester,object}}; do\n+    # shellcheck disable=SC2044\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+      echo \"Wrap $b ...\"\n+      mv \"$b\" \"${b}_orig\"\n+      echo '#!/usr/bin/env bash' > \"$b\"\n+      echo \"$QEMU_USER_CMD \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n+      chmod +x \"$b\"\n+    done\n+done"
      },
      {
        "sha": "6b3e6eb7e7412f1f4d1fe5de4bdfb0eeb97a1fba",
        "filename": "ci/test/wrap-valgrind.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/wrap-valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test/wrap-valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/wrap-valgrind.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+for b_name in \"${BASE_OUTDIR}/bin\"/*; do\n+    # shellcheck disable=SC2044\n+    for b in $(find \"${BASE_ROOT_DIR}\" -executable -type f -name $(basename $b_name)); do\n+      echo \"Wrap $b ...\"\n+      mv \"$b\" \"${b}_orig\"\n+      echo '#!/usr/bin/env bash' > \"$b\"\n+      echo \"valgrind --gen-suppressions=all --quiet --error-exitcode=1 --suppressions=${BASE_ROOT_DIR}/contrib/valgrind.supp \\\"${b}_orig\\\" \\\"\\$@\\\"\" >> \"$b\"\n+      chmod +x \"$b\"\n+    done\n+done"
      },
      {
        "sha": "a1d4bd19524daefccee252ec22fbcdd780c2c3d1",
        "filename": "ci/test_run_all.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test_run_all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/ci/test_run_all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test_run_all.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+set -o errexit; source ./ci/test/00_setup_env.sh\n+set -o errexit; source ./ci/test/03_before_install.sh\n+set -o errexit; source ./ci/test/04_install.sh\n+set -o errexit; source ./ci/test/05_before_script.sh\n+set -o errexit; source ./ci/test/06_script_a.sh\n+set -o errexit; source ./ci/test/06_script_b.sh"
      },
      {
        "sha": "18f3104acb0ea4992a252d2dfe24e8c3fdc410a1",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 761,
        "deletions": 224,
        "changes": 985,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,15 +1,15 @@\n-dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n-AC_PREREQ([2.60])\n+AC_PREREQ([2.69])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 12)\n+define(_CLIENT_VERSION_MINOR, 19)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n+define(_CLIENT_VERSION_RC, 0)\n define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2016)\n+define(_COPYRIGHT_YEAR, 2020)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n-AC_CONFIG_SRCDIR([src/main.cpp])\n+AC_INIT([Bitcoin Core],m4_join([.], _CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MINOR, _CLIENT_VERSION_REVISION, m4_if(_CLIENT_VERSION_BUILD, [0], [], _CLIENT_VERSION_BUILD))m4_if(_CLIENT_VERSION_RC, [0], [], [rc]_CLIENT_VERSION_RC),[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n+AC_CONFIG_SRCDIR([src/validation.cpp])\n AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n AC_CONFIG_AUX_DIR([build-aux])\n AC_CONFIG_MACRO_DIR([build-aux/m4])\n@@ -18,6 +18,13 @@ BITCOIN_DAEMON_NAME=bitcoind\n BITCOIN_GUI_NAME=bitcoin-qt\n BITCOIN_CLI_NAME=bitcoin-cli\n BITCOIN_TX_NAME=bitcoin-tx\n+BITCOIN_WALLET_TOOL_NAME=bitcoin-wallet\n+\n+dnl Unless the user specified ARFLAGS, force it to be cr\n+AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n+if test \"x${ARFLAGS+set}\" != \"xset\"; then\n+  ARFLAGS=\"cr\"\n+fi\n \n AC_CANONICAL_HOST\n \n@@ -45,7 +52,6 @@ else\n   CXXFLAGS_overridden=no\n fi\n AC_PROG_CXX\n-m4_ifdef([AC_PROG_OBJCXX],[AC_PROG_OBJCXX])\n \n dnl By default, libtool for mingw refuses to link static libs into a dll for\n dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n@@ -56,7 +62,23 @@ case $host in\n   ;;\n esac\n dnl Require C++11 compiler (no GNU extensions)\n-AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory])\n+AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\n+dnl Check if -latomic is required for <std::atomic>\n+CHECK_ATOMIC\n+\n+dnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures\n+dnl that we get the same -std flags for both.\n+m4_ifdef([AC_PROG_OBJCXX],[\n+if test \"x${OBJCXX+set}\" = \"x\"; then\n+  OBJCXX=\"${CXX}\"\n+fi\n+AC_PROG_OBJCXX\n+])\n+\n+dnl Since libtool 1.5.2 (released 2004-01-25), on Linux libtool no longer\n+dnl sets RPATH for any directories in the dynamic linker search path.\n+dnl See more: https://wiki.debian.org/RpathIssue\n+LT_PREREQ([1.5.2])\n dnl Libtool init checks.\n LT_INIT([pic-only])\n \n@@ -66,8 +88,8 @@ AC_PATH_TOOL(RANLIB, ranlib)\n AC_PATH_TOOL(STRIP, strip)\n AC_PATH_TOOL(GCOV, gcov)\n AC_PATH_PROG(LCOV, lcov)\n-AC_PATH_PROG(JAVA, java)\n-AC_PATH_PROGS([PYTHON], [python3 python2.7 python2 python])\n+dnl Python 3.5 is specified in .python-version and should be used if available, see doc/dependencies.md\n+AC_PATH_PROGS([PYTHON], [python3.5 python3.6 python3.7 python3.8 python3 python])\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n AC_PATH_PROG(CCACHE,ccache)\n@@ -76,10 +98,14 @@ AC_PATH_PROG(HEXDUMP,hexdump)\n AC_PATH_TOOL(READELF, readelf)\n AC_PATH_TOOL(CPPFILT, c++filt)\n AC_PATH_TOOL(OBJCOPY, objcopy)\n+AC_PATH_PROG(DOXYGEN, doxygen)\n+if test -z \"$DOXYGEN\"; then\n+   AC_MSG_WARN([Doxygen not found])\n+fi\n+AM_CONDITIONAL([HAVE_DOXYGEN], [test -n \"$DOXYGEN\"])\n \n AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n \n-# Enable wallet\n AC_ARG_ENABLE([wallet],\n   [AS_HELP_STRING([--disable-wallet],\n   [disable wallet (enabled by default)])],\n@@ -108,25 +134,27 @@ AC_ARG_ENABLE(gui-tests,\n     [use_gui_tests=$enableval],\n     [use_gui_tests=$use_tests])\n \n+AC_ARG_WITH([rapidcheck],\n+  [AS_HELP_STRING([--with-rapidcheck],\n+  [enable RapidCheck property-based tests (default is yes if librapidcheck is found)])],\n+  [use_rapidcheck=$withval],\n+  [use_rapidcheck=auto])\n+\n AC_ARG_ENABLE(bench,\n     AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n     [use_bench=$enableval],\n     [use_bench=yes])\n \n-AC_ARG_WITH([comparison-tool],\n-    AS_HELP_STRING([--with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\n-    [use_comparison_tool=$withval],\n-    [use_comparison_tool=no])\n+AC_ARG_ENABLE([extended-functional-tests],\n+    AS_HELP_STRING([--enable-extended-functional-tests],[enable expensive functional tests when using lcov (default no)]),\n+    [use_extended_functional_tests=$enableval],\n+    [use_extended_functional_tests=no])\n \n-AC_ARG_ENABLE([comparison-tool-reorg-tests],\n-    AS_HELP_STRING([--enable-comparison-tool-reorg-tests],[enable expensive reorg tests in the comparison tool (default no)]),\n-    [use_comparison_tool_reorg_tests=$enableval],\n-    [use_comparison_tool_reorg_tests=no])\n-\n-AC_ARG_ENABLE([extended-rpc-tests],\n-    AS_HELP_STRING([--enable-extended-rpc-tests],[enable expensive RPC tests when using lcov (default no)]),\n-    [use_extended_rpc_tests=$enableval],\n-    [use_extended_rpc_tests=no])\n+AC_ARG_ENABLE([fuzz],\n+    AS_HELP_STRING([--enable-fuzz],\n+    [enable building of fuzz targets (default no). enabling this will disable all other targets]),\n+    [enable_fuzz=$enableval],\n+    [enable_fuzz=no])\n \n AC_ARG_WITH([qrencode],\n   [AS_HELP_STRING([--with-qrencode],\n@@ -136,9 +164,9 @@ AC_ARG_WITH([qrencode],\n \n AC_ARG_ENABLE([hardening],\n   [AS_HELP_STRING([--disable-hardening],\n-  [do not attempt to harden the resulting executables (default is to harden)])],\n+  [do not attempt to harden the resulting executables (default is to harden when possible)])],\n   [use_hardening=$enableval],\n-  [use_hardening=yes])\n+  [use_hardening=auto])\n \n AC_ARG_ENABLE([reduce-exports],\n   [AS_HELP_STRING([--enable-reduce-exports],\n@@ -155,15 +183,37 @@ AC_ARG_ENABLE([ccache],\n AC_ARG_ENABLE([lcov],\n   [AS_HELP_STRING([--enable-lcov],\n   [enable lcov testing (default is no)])],\n-  [use_lcov=yes],\n+  [use_lcov=$enableval],\n   [use_lcov=no])\n \n+AC_ARG_ENABLE([lcov-branch-coverage],\n+  [AS_HELP_STRING([--enable-lcov-branch-coverage],\n+  [enable lcov testing branch coverage (default is no)])],\n+  [use_lcov_branch=yes],\n+  [use_lcov_branch=no])\n+\n AC_ARG_ENABLE([glibc-back-compat],\n   [AS_HELP_STRING([--enable-glibc-back-compat],\n   [enable backwards compatibility with glibc])],\n   [use_glibc_compat=$enableval],\n   [use_glibc_compat=no])\n \n+AC_ARG_ENABLE([threadlocal],\n+  [AS_HELP_STRING([--enable-threadlocal],\n+  [enable features that depend on the c++ thread_local keyword (currently just thread names in debug logs). (default is to enabled if there is platform support and glibc-back-compat is not enabled)])],\n+  [use_thread_local=$enableval],\n+  [use_thread_local=auto])\n+\n+AC_ARG_ENABLE([asm],\n+  [AS_HELP_STRING([--disable-asm],\n+  [disable assembly routines (enabled by default)])],\n+  [use_asm=$enableval],\n+  [use_asm=yes])\n+\n+if test \"x$use_asm\" = xyes; then\n+  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n+fi\n+\n AC_ARG_WITH([system-univalue],\n   [AS_HELP_STRING([--with-system-univalue],\n   [Build with system UniValue (default is no)])],\n@@ -176,51 +226,247 @@ AC_ARG_ENABLE([zmq],\n   [use_zmq=$enableval],\n   [use_zmq=yes])\n \n-AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n+AC_ARG_ENABLE([bip70],\n+  [AS_HELP_STRING([--enable-bip70],\n+  [BIP70 (payment protocol) support in the GUI (no longer supported)])],\n+  [enable_bip70=$enableval],\n+  [enable_bip70=no])\n \n-# Enable debug\n+if test x$enable_bip70 != xno; then\n+  AC_MSG_ERROR([BIP70 is no longer supported!])\n+fi\n+\n+AC_ARG_ENABLE(man,\n+    [AS_HELP_STRING([--disable-man],\n+                    [do not install man pages (default is to install)])],,\n+    enable_man=yes)\n+AM_CONDITIONAL(ENABLE_MAN, test \"$enable_man\" != no)\n+\n+dnl Enable debug\n AC_ARG_ENABLE([debug],\n     [AS_HELP_STRING([--enable-debug],\n-                    [use debug compiler flags and macros (default is no)])],\n+                    [use compiler flags and macros suited for debugging (default is no)])],\n     [enable_debug=$enableval],\n     [enable_debug=no])\n \n+dnl Enable different -fsanitize options\n+AC_ARG_WITH([sanitizers],\n+    [AS_HELP_STRING([--with-sanitizers],\n+                    [comma separated list of extra sanitizers to build with (default is none enabled)])],\n+    [use_sanitizers=$withval])\n+\n+dnl Enable gprof profiling\n+AC_ARG_ENABLE([gprof],\n+    [AS_HELP_STRING([--enable-gprof],\n+                    [use gprof profiling compiler flags (default is no)])],\n+    [enable_gprof=$enableval],\n+    [enable_gprof=no])\n+\n+dnl Turn warnings into errors\n+AC_ARG_ENABLE([werror],\n+    [AS_HELP_STRING([--enable-werror],\n+                    [Treat certain compiler warnings as errors (default is no)])],\n+    [enable_werror=$enableval],\n+    [enable_werror=no])\n+\n AC_LANG_PUSH([C++])\n AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n \n if test \"x$enable_debug\" = xyes; then\n-    CPPFLAGS=\"$CPPFLAGS -DDEBUG -DDEBUG_LOCKORDER\"\n-    if test \"x$GCC\" = xyes; then\n-        CFLAGS=\"$CFLAGS -g3 -O0\"\n-    fi\n+  dnl Clear default -g -O2 flags\n+  if test \"x$CXXFLAGS_overridden\" = xno; then\n+\tCXXFLAGS=\"\"\n+  fi\n \n-    if test \"x$GXX\" = xyes; then\n-        CXXFLAGS=\"$CXXFLAGS -g3 -O0\"\n-    fi\n+  dnl Disable all optimizations\n+  AX_CHECK_COMPILE_FLAG([-O0], [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -O0\"]],,[[$CXXFLAG_WERROR]])\n+\n+  dnl Prefer -g3, fall back to -g if that is unavailable.\n+  AX_CHECK_COMPILE_FLAG(\n+    [-g3],\n+    [[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g3\"]],\n+    [AX_CHECK_COMPILE_FLAG([-g],[[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -g\"]],,[[$CXXFLAG_WERROR]])],\n+    [[$CXXFLAG_WERROR]])\n+\n+  AX_CHECK_PREPROC_FLAG([-DDEBUG],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG\"]],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_PREPROC_FLAG([-DDEBUG_LOCKORDER],[[DEBUG_CPPFLAGS=\"$DEBUG_CPPFLAGS -DDEBUG_LOCKORDER\"]],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-ftrapv],[DEBUG_CXXFLAGS=\"$DEBUG_CXXFLAGS -ftrapv\"],,[[$CXXFLAG_WERROR]])\n+fi\n+\n+if test x$use_sanitizers != x; then\n+  dnl First check if the compiler accepts flags. If an incompatible pair like\n+  dnl -fsanitize=address,thread is used here, this check will fail. This will also\n+  dnl fail if a bad argument is passed, e.g. -fsanitize=undfeined\n+  AX_CHECK_COMPILE_FLAG(\n+    [[-fsanitize=$use_sanitizers]],\n+    [[SANITIZER_CXXFLAGS=-fsanitize=$use_sanitizers]],\n+    [AC_MSG_ERROR([compiler did not accept requested flags])])\n+\n+  dnl Some compilers (e.g. GCC) require additional libraries like libasan,\n+  dnl libtsan, libubsan, etc. Make sure linking still works with the sanitize\n+  dnl flag. This is a separate check so we can give a better error message when\n+  dnl the sanitize flags are supported by the compiler but the actual sanitizer\n+  dnl libs are missing.\n+  AX_CHECK_LINK_FLAG(\n+    [[-fsanitize=$use_sanitizers]],\n+    [[SANITIZER_LDFLAGS=-fsanitize=$use_sanitizers]],\n+    [AC_MSG_ERROR([linker did not accept requested flags, you are missing required libraries])],\n+    [],\n+    [AC_LANG_PROGRAM([[\n+    #include <cstdint>\n+    #include <cstddef>\n+    extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) { return 0; }\n+    __attribute__((weak)) // allow for libFuzzer linking\n+    ]],[[]])])\n+fi\n+\n+ERROR_CXXFLAGS=\n+if test \"x$enable_werror\" = \"xyes\"; then\n+  if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n+    AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n+  fi\n+  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=switch],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=switch\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=date-time],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=date-time\"],,[[$CXXFLAG_WERROR]])\n fi\n \n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-  AX_CHECK_COMPILE_FLAG([-Wall],[CXXFLAGS=\"$CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wextra],[CXXFLAGS=\"$CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wformat],[CXXFLAGS=\"$CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wformat-security],[CXXFLAGS=\"$CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n-\n-  ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n-  ## unknown options if any other warning is produced. Test the -Wfoo case, and\n-  ## set the -Wno-foo case if it works.\n-  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wself-assign],[CXXFLAGS=\"$CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[CXXFLAGS=\"$CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wall],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wformat],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wswitch],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wswitch\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wformat-security],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdate-time],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdate-time\"],,[[$CXXFLAG_WERROR]])\n+\n+  dnl Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  dnl unknown options if any other warning is produced. Test the -Wfoo case, and\n+  dnl set the -Wno-foo case if it works.\n+  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wself-assign],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[NOWARN_CXXFLAGS=\"$NOWARN_CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n+fi\n+\n+enable_hwcrc32=no\n+enable_sse41=no\n+enable_avx2=no\n+enable_shani=no\n+\n+if test \"x$use_asm\" = \"xyes\"; then\n+\n+dnl Check for optional instruction set support. Enabling these does _not_ imply that all code will\n+dnl be compiled with them, rather that specific objects/libs may use them after checking for runtime\n+dnl compatibility.\n+AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-msse4.1],[[SSE41_CXXFLAGS=\"-msse4.1\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-mavx -mavx2],[[AVX2_CXXFLAGS=\"-mavx -mavx2\"]],,[[$CXXFLAG_WERROR]])\n+AX_CHECK_COMPILE_FLAG([-msse4 -msha],[[SHANI_CXXFLAGS=\"-msse4 -msha\"]],,[[$CXXFLAG_WERROR]])\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n+AC_MSG_CHECKING(for assembler crc32 support)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #if defined(_MSC_VER)\n+    #include <intrin.h>\n+    #elif defined(__GNUC__) && defined(__SSE4_2__)\n+    #include <nmmintrin.h>\n+    #endif\n+  ]],[[\n+    uint64_t l = 0;\n+    l = _mm_crc32_u8(l, 0);\n+    l = _mm_crc32_u32(l, 0);\n+    l = _mm_crc32_u64(l, 0);\n+    return l;\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_hwcrc32=yes],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SSE41_CXXFLAGS\"\n+AC_MSG_CHECKING(for SSE4.1 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+  ]],[[\n+    __m128i l = _mm_set1_epi32(0);\n+    return _mm_extract_epi32(l, 3);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_sse41=yes; AC_DEFINE(ENABLE_SSE41, 1, [Define this symbol to build code that uses SSE4.1 intrinsics]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $AVX2_CXXFLAGS\"\n+AC_MSG_CHECKING(for AVX2 intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+  ]],[[\n+    __m256i l = _mm256_set1_epi32(0);\n+    return _mm256_extract_epi32(l, 7);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_avx2=yes; AC_DEFINE(ENABLE_AVX2, 1, [Define this symbol to build code that uses AVX2 intrinsics]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SHANI_CXXFLAGS\"\n+AC_MSG_CHECKING(for SHA-NI intrinsics)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #include <immintrin.h>\n+  ]],[[\n+    __m128i i = _mm_set1_epi32(0);\n+    __m128i j = _mm_set1_epi32(1);\n+    __m128i k = _mm_set1_epi32(2);\n+    return _mm_extract_epi32(_mm_sha256rnds2_epu32(i, i, k), 0);\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_shani=yes; AC_DEFINE(ENABLE_SHANI, 1, [Define this symbol to build code that uses SHA-NI intrinsics]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+\n fi\n+\n CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n \n AC_ARG_WITH([utils],\n   [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx (default=yes)])],\n+  [build bitcoin-cli bitcoin-tx bitcoin-wallet (default=yes)])],\n   [build_bitcoin_utils=$withval],\n   [build_bitcoin_utils=yes])\n \n+AC_ARG_ENABLE([util-cli],\n+  [AS_HELP_STRING([--enable-util-cli],\n+  [build bitcoin-cli])],\n+  [build_bitcoin_cli=$enableval],\n+  [build_bitcoin_cli=$build_bitcoin_utils])\n+\n+AC_ARG_ENABLE([util-tx],\n+  [AS_HELP_STRING([--enable-util-tx],\n+  [build bitcoin-tx])],\n+  [build_bitcoin_tx=$enableval],\n+  [build_bitcoin_tx=$build_bitcoin_utils])\n+\n+AC_ARG_ENABLE([util-wallet],\n+  [AS_HELP_STRING([--enable-util-wallet],\n+  [build bitcoin-wallet])],\n+  [build_bitcoin_wallet=$enableval],\n+  [build_bitcoin_wallet=$build_bitcoin_utils])\n+\n AC_ARG_WITH([libs],\n   [AS_HELP_STRING([--with-libs],\n   [build libraries (default=yes)])],\n@@ -237,32 +483,27 @@ use_pkgconfig=yes\n case $host in\n   *mingw*)\n \n-     #pkgconfig does more harm than good with MinGW\n+     dnl pkgconfig does more harm than good with MinGW\n      use_pkgconfig=no\n \n      TARGET_OS=windows\n-     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\n-\n-     # -static is interpreted by libtool, where it has a different meaning.\n-     # In libtool-speak, it's -all-static.\n+     AC_CHECK_LIB([kernel32], [GetModuleFileNameA],, AC_MSG_ERROR(libkernel32 missing))\n+     AC_CHECK_LIB([user32],   [main],, AC_MSG_ERROR(libuser32 missing))\n+     AC_CHECK_LIB([gdi32],    [main],, AC_MSG_ERROR(libgdi32 missing))\n+     AC_CHECK_LIB([comdlg32], [main],, AC_MSG_ERROR(libcomdlg32 missing))\n+     AC_CHECK_LIB([winmm],    [main],, AC_MSG_ERROR(libwinmm missing))\n+     AC_CHECK_LIB([shell32],  [SHGetSpecialFolderPathW],, AC_MSG_ERROR(libshell32 missing))\n+     AC_CHECK_LIB([comctl32], [main],, AC_MSG_ERROR(libcomctl32 missing))\n+     AC_CHECK_LIB([ole32],    [CoCreateInstance],, AC_MSG_ERROR(libole32 missing))\n+     AC_CHECK_LIB([oleaut32], [main],, AC_MSG_ERROR(liboleaut32 missing))\n+     AC_CHECK_LIB([uuid],     [main],, AC_MSG_ERROR(libuuid missing))\n+     AC_CHECK_LIB([advapi32], [CryptAcquireContextW],, AC_MSG_ERROR(libadvapi32 missing))\n+     AC_CHECK_LIB([ws2_32],   [WSAStartup],, AC_MSG_ERROR(libws2_32 missing))\n+     AC_CHECK_LIB([shlwapi],  [PathRemoveFileSpecW],, AC_MSG_ERROR(libshlwapi missing))\n+     AC_CHECK_LIB([iphlpapi], [GetAdaptersAddresses],, AC_MSG_ERROR(libiphlpapi missing))\n+\n+     dnl -static is interpreted by libtool, where it has a different meaning.\n+     dnl In libtool-speak, it's -all-static.\n      AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n \n      AC_PATH_PROG([MAKENSIS], [makensis], none)\n@@ -275,17 +516,11 @@ case $host in\n        AC_MSG_ERROR(\"windres not found\")\n      fi\n \n-     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n+     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D_WIN32_WINNT=0x0601\"\n      LEVELDB_TARGET_FLAGS=\"-DOS_WINDOWS\"\n      if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n        CXXFLAGS=\"$CXXFLAGS -w\"\n      fi\n-     case $host in\n-       i?86-*) WINDOWS_BITS=32 ;;\n-       x86_64-*) WINDOWS_BITS=64 ;;\n-       *) AC_MSG_ERROR(\"Could not determine win32/win64 for installer\") ;;\n-     esac\n-     AC_SUBST(WINDOWS_BITS)\n \n      dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n      dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n@@ -301,17 +536,7 @@ case $host in\n      LEVELDB_TARGET_FLAGS=\"-DOS_MACOSX\"\n      if  test x$cross_compiling != xyes; then\n        BUILD_OS=darwin\n-       AC_CHECK_PROG([PORT],port, port)\n-       if test x$PORT = xport; then\n-         dnl add default macports paths\n-         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include\"\n-         LIBS=\"$LIBS -L/opt/local/lib\"\n-         if test -d /opt/local/include/db48; then\n-           CPPFLAGS=\"$CPPFLAGS -I/opt/local/include/db48\"\n-           LIBS=\"$LIBS -L/opt/local/lib/db48\"\n-         fi\n-       fi\n-\n+       AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n        AC_CHECK_PROG([BREW],brew, brew)\n        if test x$BREW = xbrew; then\n          dnl These Homebrew packages may be keg-only, meaning that they won't be found\n@@ -320,13 +545,8 @@ case $host in\n          dnl It's safe to add these paths even if the functionality is disabled by\n          dnl the user (--without-wallet or --without-gui for example).\n \n-         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\n-         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\n-         qt5_prefix=`$BREW --prefix qt5 2>/dev/null`\n-         if test x$openssl_prefix != x; then\n-           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n-         fi\n+         bdb_prefix=$($BREW --prefix berkeley-db4 2>/dev/null)\n+         qt5_prefix=$($BREW --prefix qt5 2>/dev/null)\n          if test x$bdb_prefix != x; then\n            CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n            LIBS=\"$LIBS -L$bdb_prefix/lib\"\n@@ -359,16 +579,41 @@ case $host in\n      fi\n \n      AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n-     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n+     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0\"\n      OBJCXXFLAGS=\"$CXXFLAGS\"\n      ;;\n+   *android*)\n+     dnl make sure android stays above linux for hosts like *linux-android*\n+     TARGET_OS=android\n+     LEVELDB_TARGET_FLAGS=\"-DOS_ANDROID\"\n+     ;;\n    *linux*)\n      TARGET_OS=linux\n      LEVELDB_TARGET_FLAGS=\"-DOS_LINUX\"\n      ;;\n+   *kfreebsd*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_KFREEBSD\"\n+     ;;\n+   *freebsd*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_FREEBSD\"\n+     ;;\n+   *openbsd*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_OPENBSD\"\n+     ;;\n+   *netbsd*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_NETBSD\"\n+     ;;\n+   *dragonfly*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_DRAGONFLYBSD\"\n+     ;;\n+   *solaris*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_SOLARIS\"\n+     ;;\n+   *hpux*)\n+     LEVELDB_TARGET_FLAGS=\"-DOS_HPUX\"\n+     ;;\n    *)\n-     OTHER_OS=`echo ${host_os} | awk '{print toupper($0)}'`\n-     LEVELDB_TARGET_FLAGS=\"-DOS_${OTHER_OS}\"\n+     AC_MSG_ERROR(Cannot build leveldb for $host. Please file a bug report.)\n      ;;\n esac\n \n@@ -382,21 +627,8 @@ if test x$use_pkgconfig = xyes; then\n   ])\n fi\n \n-if test x$use_comparison_tool != xno; then\n-  AC_SUBST(JAVA_COMPARISON_TOOL, $use_comparison_tool)\n-fi\n-\n-if test x$use_comparison_tool_reorg_tests != xno; then\n-  if test x$use_comparison_tool = x; then\n-    AC_MSG_ERROR(\"comparison tool reorg tests but comparison tool was not specified\")\n-  fi\n-  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 1)\n-else\n-  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 0)\n-fi\n-\n-if test x$use_extended_rpc_tests != xno; then\n-  AC_SUBST(EXTENDED_RPC_TESTS, -extended)\n+if test x$use_extended_functional_tests != xno; then\n+  AC_SUBST(EXTENDED_FUNCTIONAL_TESTS, --extended)\n fi\n \n if test x$use_lcov = xyes; then\n@@ -406,21 +638,23 @@ if test x$use_lcov = xyes; then\n   if test x$GCOV = x; then\n     AC_MSG_ERROR(\"lcov testing requested but gcov not found\")\n   fi\n-  if test x$JAVA = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but java not found\")\n-  fi\n   if test x$PYTHON = x; then\n     AC_MSG_ERROR(\"lcov testing requested but python not found\")\n   fi\n   if test x$GENHTML = x; then\n     AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n   fi\n-  if test x$use_comparison_tool = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but comparison tool was not specified\")\n-  fi\n   LCOV=\"$LCOV --gcov-tool=$GCOV\"\n+  AX_CHECK_LINK_FLAG([[--coverage]], [LDFLAGS=\"$LDFLAGS --coverage\"],\n+    [AC_MSG_ERROR(\"lcov testing requested but --coverage linker flag does not work\")])\n   AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n     [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n+  AC_DEFINE(USE_COVERAGE, 1, [Define this symbol if coverage is enabled])\n+  CXXFLAGS=\"$CXXFLAGS -Og\"\n+fi\n+\n+if test x$use_lcov_branch != xno; then\n+  AC_SUBST(LCOV_OPTS, \"$LCOV_OPTS --rc lcov_branch_coverage=1\")\n fi\n \n dnl Check for endianness\n@@ -429,11 +663,11 @@ AC_C_BIGENDIAN\n dnl Check for pthread compile/link requirements\n AX_PTHREAD\n \n-# The following macro will add the necessary defines to bitcoin-config.h, but\n-# they also need to be passed down to any subprojects. Pull the results out of\n-# the cache and add them to CPPFLAGS.\n+dnl The following macro will add the necessary defines to bitcoin-config.h, but\n+dnl they also need to be passed down to any subprojects. Pull the results out of\n+dnl the cache and add them to CPPFLAGS.\n AC_SYS_LARGEFILE\n-# detect POSIX or GNU variant of strerror_r\n+dnl detect POSIX or GNU variant of strerror_r\n AC_FUNC_STRERROR_R\n \n if test x$ac_cv_sys_file_offset_bits != x &&\n@@ -456,12 +690,8 @@ AX_GCC_FUNC_ATTRIBUTE([dllimport])\n \n if test x$use_glibc_compat != xno; then\n \n-  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n-  #in anyway for back-compat.\n-  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\n-\n-  #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n-  # See which one is present here.\n+  dnl __fdelt_chk's params and return type have changed from long unsigned int to long int.\n+  dnl See which one is present here.\n   AC_MSG_CHECKING(__fdelt_chk type)\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE\n                     #undef _FORTIFY_SOURCE\n@@ -473,54 +703,120 @@ if test x$use_glibc_compat != xno; then\n     [ fdelt_type=\"long int\"])\n   AC_MSG_RESULT($fdelt_type)\n   AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n+  AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"])\n else\n   AC_SEARCH_LIBS([clock_gettime],[rt])\n fi\n \n+if test \"x$enable_gprof\" = xyes; then\n+    dnl -pg is incompatible with -pie. Since hardening and profiling together doesn't make sense,\n+    dnl we simply make them mutually exclusive here. Additionally, hardened toolchains may force\n+    dnl -pie by default, in which case it needs to be turned off with -no-pie.\n+\n+    if test x$use_hardening = xyes; then\n+        AC_MSG_ERROR(gprof profiling is not compatible with hardening. Reconfigure with --disable-hardening or --disable-gprof)\n+    fi\n+    use_hardening=no\n+    AX_CHECK_COMPILE_FLAG([-pg],[GPROF_CXXFLAGS=\"-pg\"],\n+        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$CXXFLAG_WERROR]])\n+\n+    AX_CHECK_LINK_FLAG([[-no-pie]], [GPROF_LDFLAGS=\"-no-pie\"])\n+    AX_CHECK_LINK_FLAG([[-pg]],[GPROF_LDFLAGS=\"$GPROF_LDFLAGS -pg\"],\n+        [AC_MSG_ERROR(gprof profiling requested but not available)], [[$GPROF_LDFLAGS]])\n+fi\n+\n if test x$TARGET_OS != xwindows; then\n-  # All windows code is PIC, forcing it on just adds useless compile warnings\n+  dnl All windows code is PIC, forcing it on just adds useless compile warnings\n   AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n fi\n \n+dnl All versions of gcc that we commonly use for building are subject to bug\n+dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=90348. To work around that, set\n+dnl -fstack-reuse=none for all gcc builds. (Only gcc understands this flag)\n+AX_CHECK_COMPILE_FLAG([-fstack-reuse=none],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-reuse=none\"])\n if test x$use_hardening != xno; then\n+  use_hardening=yes\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n   AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n \n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n-    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+  dnl When enable_debug is yes, all optimizations are disabled.\n+  dnl However, FORTIFY_SOURCE requires that there is some level of optimization, otherwise it does nothing and just creates a compiler warning.\n+  dnl Since FORTIFY_SOURCE is a no-op without optimizations, do not enable it when enable_debug is yes.\n+  if test x$enable_debug != xyes; then\n+    AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n+      AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n+        HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+      ])\n+      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n     ])\n-    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n-  ])\n+  fi\n \n   AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n   AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"])\n   AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n   AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n-\n-  if test x$TARGET_OS != xwindows; then\n-    AX_CHECK_COMPILE_FLAG([-fPIE],[PIE_FLAGS=\"-fPIE\"])\n-    AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n-  fi\n+  AX_CHECK_LINK_FLAG([[-fPIE -pie]], [PIE_FLAGS=\"-fPIE\"; HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"],, [[$CXXFLAG_WERROR]])\n \n   case $host in\n     *mingw*)\n-       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n+       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(libssp missing))\n     ;;\n   esac\n fi\n \n dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n if test x$TARGET_OS = xdarwin; then\n   AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip_dylibs]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip_dylibs\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-bind_at_load]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-bind_at_load\"])\n fi\n \n-AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n-AC_SEARCH_LIBS([getaddrinfo_a], [anl], [AC_DEFINE(HAVE_GETADDRINFO_A, 1, [Define this symbol if you have getaddrinfo_a])])\n-AC_SEARCH_LIBS([inet_pton], [nsl resolv], [AC_DEFINE(HAVE_INET_PTON, 1, [Define this symbol if you have inet_pton])])\n+AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])\n \n+dnl FD_ZERO may be dependent on a declaration of memcpy, e.g. in SmartOS\n+dnl check that it fails to build without memcpy, then that it builds with\n+AC_MSG_CHECKING(FD_ZERO memcpy dependence)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <cstddef>\n+    #if HAVE_SYS_SELECT_H\n+    #include <sys/select.h>\n+    #endif\n+  ]],[[\n+    #if HAVE_SYS_SELECT_H\n+    fd_set fds;\n+    FD_ZERO(&fds);\n+    #endif\n+  ]])],\n+  [ AC_MSG_RESULT(no) ],\n+  [\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+          #include <cstring>\n+          #if HAVE_SYS_SELECT_H\n+          #include <sys/select.h>\n+          #endif\n+        ]], [[\n+          #if HAVE_SYS_SELECT_H\n+          fd_set fds;\n+          FD_ZERO(&fds);\n+          #endif\n+        ]])],\n+        [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_CSTRING_DEPENDENT_FD_ZERO, 1, [Define this symbol if FD_ZERO is dependent of a memcpy declaration being available]) ],\n+        [ AC_MSG_ERROR(failed with cstring include) ]\n+      )\n+  ]\n+)\n+\n+AC_CHECK_DECLS([getifaddrs, freeifaddrs],,,\n+    [#include <sys/types.h>\n+    #include <ifaddrs.h>]\n+)\n AC_CHECK_DECLS([strnlen])\n \n+dnl Check for daemon(3), unrelated to --with-daemon (although used by it)\n+AC_CHECK_DECLS([daemon])\n+\n AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n \t\t[#if HAVE_ENDIAN_H\n                  #include <endian.h>\n@@ -533,11 +829,21 @@ AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n                  #include <byteswap.h>\n                  #endif])\n \n-dnl Check for MSG_NOSIGNAL\n-AC_MSG_CHECKING(for MSG_NOSIGNAL)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n- [[ int f = MSG_NOSIGNAL; ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\n+AC_CHECK_DECLS([__builtin_clz, __builtin_clzl, __builtin_clzll])\n+\n+dnl Check for malloc_info (for memory statistics information in getmemoryinfo)\n+AC_MSG_CHECKING(for getmemoryinfo)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n+ [[ int f = malloc_info(0, NULL); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOC_INFO, 1,[Define this symbol if you have malloc_info]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)\n+AC_MSG_CHECKING(for mallopt M_ARENA_MAX)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n+ [[ mallopt(M_ARENA_MAX, 1); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOPT_ARENA_MAX, 1,[Define this symbol if you have mallopt with M_ARENA_MAX]) ],\n  [ AC_MSG_RESULT(no)]\n )\n \n@@ -558,11 +864,132 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   ]\n )\n \n+if test \"x$use_thread_local\" = xyes || { test \"x$use_thread_local\" = xauto && test \"x$use_glibc_compat\" = xno; }; then\n+  TEMP_LDFLAGS=\"$LDFLAGS\"\n+  LDFLAGS=\"$TEMP_LDFLAGS $PTHREAD_CFLAGS\"\n+  AC_MSG_CHECKING([for thread_local support])\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([\n+    #include <thread>\n+    static thread_local int foo = 0;\n+    static void run_thread() { foo++;}\n+    int main(){\n+    for(int i = 0; i < 10; i++) { std::thread(run_thread).detach();}\n+    return foo;\n+    }\n+    ])],\n+    [\n+     case $host in\n+       *mingw*)\n+          dnl mingw32's implementation of thread_local has also been shown to behave\n+          dnl erroneously under concurrent usage; see:\n+          dnl https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+          AC_MSG_RESULT(no)\n+          ;;\n+        *darwin*)\n+          dnl TODO enable thread_local on later versions of Darwin where it is\n+          dnl supported (per https://stackoverflow.com/a/29929949)\n+          AC_MSG_RESULT(no)\n+          ;;\n+        *freebsd*)\n+          dnl FreeBSD's implementation of thread_local is also buggy (per\n+          dnl https://groups.google.com/d/msg/bsdmailinglist/22ncTZAbDp4/Dii_pII5AwAJ)\n+          AC_MSG_RESULT(no)\n+          ;;\n+        *)\n+          AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n+          AC_MSG_RESULT(yes)\n+          ;;\n+      esac\n+    ],\n+    [\n+      AC_MSG_RESULT(no)\n+    ]\n+  )\n+  LDFLAGS=\"$TEMP_LDFLAGS\"\n+fi\n+\n+dnl Check for different ways of gathering OS randomness\n+AC_MSG_CHECKING(for Linux getrandom syscall)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+  #include <sys/syscall.h>\n+  #include <linux/random.h>]],\n+ [[ syscall(SYS_getrandom, nullptr, 32, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYS_GETRANDOM, 1,[Define this symbol if the Linux getrandom system call is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for getentropy)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY, 1,[Define this symbol if the BSD getentropy system call is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for getentropy via random.h)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+ #include <sys/random.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for sysctl)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n+  #include <sys/sysctl.h>]],\n+ [[ static const int name[2] = {CTL_KERN, KERN_VERSION};\n+    #ifdef __linux__\n+    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n+    #endif\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL, 1,[Define this symbol if the BSD sysctl() is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for sysctl KERN_ARND)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n+  #include <sys/sysctl.h>]],\n+ [[ static const int name[2] = {CTL_KERN, KERN_ARND};\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL_ARND, 1,[Define this symbol if the BSD sysctl(KERN_ARND) is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for if type char equals int8_t)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdint.h>\n+  #include <type_traits>]],\n+ [[ static_assert(std::is_same<int8_t, char>::value, \"\"); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(CHAR_EQUALS_INT8, 1,[Define this symbol if type char equals int8_t]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for reduced exports\n if test x$use_reduce_exports = xyes; then\n   AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n   [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n fi\n \n+AC_MSG_CHECKING([for std::system])\n+AC_LINK_IFELSE(\n+    [ AC_LANG_PROGRAM(\n+        [[ #include <cstdlib> ]],\n+        [[ int nErr = std::system(\"\"); ]]\n+    )],\n+    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_STD__SYSTEM, 1, Define to 1 if std::system is available.)],\n+    [ AC_MSG_RESULT(no) ]\n+)\n+\n+AC_MSG_CHECKING([for ::_wsystem])\n+AC_LINK_IFELSE(\n+    [ AC_LANG_PROGRAM(\n+        [[ ]],\n+        [[ int nErr = ::_wsystem(\"\"); ]]\n+    )],\n+    [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_WSYSTEM, 1, Define to 1 if ::wsystem is available.)],\n+    [ AC_MSG_RESULT(no) ]\n+)\n+\n+AC_DEFINE([HAVE_SYSTEM], [HAVE_STD__SYSTEM || HAVE_WSYSTEM], [std::system or ::wsystem])\n+\n LEVELDB_CPPFLAGS=\n LIBLEVELDB=\n LIBMEMENV=\n@@ -571,6 +998,29 @@ AC_SUBST(LEVELDB_CPPFLAGS)\n AC_SUBST(LIBLEVELDB)\n AC_SUBST(LIBMEMENV)\n \n+dnl enable-fuzz should disable all other targets\n+if test \"x$enable_fuzz\" = \"xyes\"; then\n+  AC_MSG_WARN(enable-fuzz will disable all other targets)\n+  build_bitcoin_utils=no\n+  build_bitcoin_cli=no\n+  build_bitcoin_tx=no\n+  build_bitcoin_wallet=no\n+  build_bitcoind=no\n+  build_bitcoin_libs=no\n+  bitcoin_enable_qt=no\n+  bitcoin_enable_qt_test=no\n+  bitcoin_enable_qt_dbus=no\n+  enable_wallet=no\n+  use_bench=no\n+  use_upnp=no\n+  use_zmq=no\n+else\n+  BITCOIN_QT_INIT\n+\n+  dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n+  BITCOIN_QT_CONFIGURE([$use_pkgconfig])\n+fi\n+\n if test x$enable_wallet != xno; then\n     dnl Check for libdb_cxx only if wallet enabled\n     BITCOIN_FIND_BDB48\n@@ -580,32 +1030,56 @@ dnl Check for libminiupnpc (optional)\n if test x$use_upnp != xno; then\n   AC_CHECK_HEADERS(\n     [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n-    [AC_CHECK_LIB([miniupnpc], [main],[MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n+    [AC_CHECK_LIB([miniupnpc], [upnpDiscover], [MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n     [have_miniupnpc=no]\n   )\n+dnl The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+dnl with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+if test x$have_miniupnpc != xno; then\n+  AC_MSG_CHECKING([whether miniUPnPc API version is supported])\n+  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n+      @%:@include <miniupnpc/miniupnpc.h>\n+    ]], [[\n+      #if MINIUPNPC_API_VERSION >= 10\n+      // Everything is okay\n+      #else\n+      #  error miniUPnPc API version is too old\n+      #endif\n+    ]])],[\n+      AC_MSG_RESULT(yes)\n+    ],[\n+    AC_MSG_RESULT(no)\n+    AC_MSG_WARN([miniUPnPc API version < 10 is unsupported, disabling UPnP support.])\n+    have_miniupnpc=no\n+  ])\n+fi\n fi\n \n-BITCOIN_QT_INIT\n-\n-dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n-\n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n+if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n     use_boost=no\n else\n     use_boost=yes\n fi\n \n if test x$use_boost = xyes; then\n \n+dnl Minimum required Boost version\n+define(MINIMUM_REQUIRED_BOOST, 1.47.0)\n+\n dnl Check for boost libs\n-AX_BOOST_BASE\n+AX_BOOST_BASE([MINIMUM_REQUIRED_BOOST])\n+if test x$want_boost = xno; then\n+    AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n+fi\n AX_BOOST_SYSTEM\n AX_BOOST_FILESYSTEM\n-AX_BOOST_PROGRAM_OPTIONS\n AX_BOOST_THREAD\n AX_BOOST_CHRONO\n \n+dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n+dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n+m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n+BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n \n if test x$use_reduce_exports = xyes; then\n   AC_MSG_CHECKING([for working boost reduced exports])\n@@ -667,7 +1141,7 @@ fi\n \n if test x$use_boost = xyes; then\n \n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n \n \n dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums\n@@ -686,14 +1160,14 @@ TEMP_CPPFLAGS=\"$CPPFLAGS\"\n CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include \"boost/config.hpp\"\n-  #include \"boost/version.hpp\"\n+  #include <boost/config.hpp>\n+  #include <boost/version.hpp>\n   #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n   #define BOOST_NO_SCOPED_ENUMS\n   #define BOOST_NO_CXX11_SCOPED_ENUMS\n   #define CHECK\n   #endif\n-  #include \"boost/filesystem.hpp\"\n+  #include <boost/filesystem.hpp>\n   ]],[[\n   #if defined(CHECK)\n     boost::filesystem::copy_file(\"foo\", \"bar\");\n@@ -763,13 +1237,10 @@ if test x$use_pkgconfig = xyes; then\n   m4_ifdef(\n     [PKG_CHECK_MODULES],\n     [\n-      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n-      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n-      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n       if test x$use_qr != xno; then\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n-      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+      if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n         PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n         if test x$TARGET_OS != xwindows; then\n           PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n@@ -788,13 +1259,8 @@ if test x$use_pkgconfig = xyes; then\n     ]\n   )\n else\n-  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n-  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n \n-  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n-  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n-\n-  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+  if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n     AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n     AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n     if test x$TARGET_OS != xwindows; then\n@@ -816,23 +1282,53 @@ else\n     AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n   fi\n \n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n+  if test \"x$use_zmq\" = \"xyes\"; then\n+    dnl Assume libzmq was built for static linking\n+    case $host in\n+      *mingw*)\n+        ZMQ_CFLAGS=\"$ZMQ_CFLAGS -DZMQ_STATIC\"\n+      ;;\n+    esac\n+  fi\n+\n   if test x$use_qr != xno; then\n     BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n     BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n   fi\n fi\n \n+dnl RapidCheck property-based testing\n+\n+enable_property_tests=no\n+if test \"x$use_rapidcheck\" = xauto; then\n+    AC_CHECK_HEADERS([rapidcheck.h], [enable_property_tests=yes])\n+elif test \"x$use_rapidcheck\" != xno; then\n+    enable_property_tests=yes\n+fi\n+\n+RAPIDCHECK_LIBS=\n+if test \"x$enable_property_tests\" = xyes; then\n+   RAPIDCHECK_LIBS=-lrapidcheck\n+fi\n+AC_SUBST(RAPIDCHECK_LIBS)\n+AM_CONDITIONAL([ENABLE_PROPERTY_TESTS], [test x$enable_property_tests = xyes])\n+\n dnl univalue check\n \n+need_bundled_univalue=yes\n+\n+if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n+  need_bundled_univalue=no\n+else\n+\n if test x$system_univalue != xno ; then\n   found_univalue=no\n   if test x$use_pkgconfig = xyes; then\n     : #NOP\n     m4_ifdef(\n       [PKG_CHECK_MODULES],\n       [\n-        PKG_CHECK_MODULES([UNIVALUE],[libunivalue],[found_univalue=yes],[true])\n+        PKG_CHECK_MODULES([UNIVALUE],[libunivalue >= 1.0.4],[found_univalue=yes],[true])\n       ]\n     )\n   else\n@@ -846,38 +1342,40 @@ if test x$system_univalue != xno ; then\n \n   if test x$found_univalue = xyes ; then\n     system_univalue=yes\n+    need_bundled_univalue=no\n   elif test x$system_univalue = xyes ; then\n     AC_MSG_ERROR([univalue not found])\n   else\n     system_univalue=no\n   fi\n fi\n \n-if test x$system_univalue = xno ; then\n+if test x$need_bundled_univalue = xyes ; then\n   UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n   UNIVALUE_LIBS='univalue/libunivalue.la'\n fi\n-AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$system_univalue = xno])\n-AC_SUBST(UNIVALUE_CFLAGS)\n-AC_SUBST(UNIVALUE_LIBS)\n \n-CXXFLAGS_TEMP=\"$CXXFLAGS\"\n-LIBS_TEMP=\"$LIBS\"\n-CXXFLAGS=\"$CXXFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\n-LIBS=\"$LIBS $SSL_LIBS $CRYPTO_LIBS\"\n-AC_CHECK_HEADER([openssl/ec.h],, AC_MSG_ERROR(OpenSSL ec header missing),)\n-CXXFLAGS=\"$CXXFLAGS_TEMP\"\n-LIBS=\"$LIBS_TEMP\"\n+fi\n \n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n+AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n+AC_SUBST(UNIVALUE_CFLAGS)\n+AC_SUBST(UNIVALUE_LIBS)\n \n AC_MSG_CHECKING([whether to build bitcoind])\n AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n AC_MSG_RESULT($build_bitcoind)\n \n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n-AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n-AC_MSG_RESULT($build_bitcoin_utils)\n+AC_MSG_CHECKING([whether to build bitcoin-cli])\n+AM_CONDITIONAL([BUILD_BITCOIN_CLI], [test x$build_bitcoin_cli = xyes])\n+AC_MSG_RESULT($build_bitcoin_cli)\n+\n+AC_MSG_CHECKING([whether to build bitcoin-tx])\n+AM_CONDITIONAL([BUILD_BITCOIN_TX], [test x$build_bitcoin_tx = xyes])\n+AC_MSG_RESULT($build_bitcoin_tx)\n+\n+AC_MSG_CHECKING([whether to build bitcoin-wallet])\n+AM_CONDITIONAL([BUILD_BITCOIN_WALLET], [test x$build_bitcoin_wallet = xyes])\n+AC_MSG_RESULT($build_bitcoin_wallet)\n \n AC_MSG_CHECKING([whether to build libraries])\n AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n@@ -922,9 +1420,10 @@ dnl enable upnp support\n AC_MSG_CHECKING([whether to build with support for UPnP])\n if test x$have_miniupnpc = xno; then\n   if test x$use_upnp = xyes; then\n-     AC_MSG_ERROR(\"UPnP requested but cannot be built. use --without-miniupnpc\")\n+     AC_MSG_ERROR(\"UPnP requested but cannot be built. Use --without-miniupnpc.\")\n   fi\n   AC_MSG_RESULT(no)\n+  use_upnp=no\n else\n   if test x$use_upnp != xno; then\n     AC_MSG_RESULT(yes)\n@@ -959,18 +1458,16 @@ if test x$bitcoin_enable_qt != xno; then\n   AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n   if test x$have_qrencode = xno; then\n     if test x$use_qr = xyes; then\n-     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n+      AC_MSG_ERROR([QR support requested but cannot be built. Use --without-qrencode])\n     fi\n-    AC_MSG_RESULT(no)\n+    use_qr=no\n   else\n     if test x$use_qr != xno; then\n-      AC_MSG_RESULT(yes)\n       AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n       use_qr=yes\n-    else\n-      AC_MSG_RESULT(no)\n     fi\n   fi\n+  AC_MSG_RESULT([$use_qr])\n \n   if test x$XGETTEXT = x; then\n     AC_MSG_WARN(\"xgettext is required to update qt translations\")\n@@ -1003,24 +1500,28 @@ else\n   AC_MSG_RESULT([no])\n fi\n \n-if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_tests = xnonononono; then\n-  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui or --enable-tests])\n+if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononononono; then\n+  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])\n fi\n \n AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n+AM_CONDITIONAL([ENABLE_FUZZ],[test x$enable_fuzz = xyes])\n AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n-AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\n-AM_CONDITIONAL([USE_COMPARISON_TOOL_REORG_TESTS],[test x$use_comparison_tool_reorg_test != xno])\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n+AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])\n+AM_CONDITIONAL([ENABLE_SSE41],[test x$enable_sse41 = xyes])\n+AM_CONDITIONAL([ENABLE_AVX2],[test x$enable_avx2 = xyes])\n+AM_CONDITIONAL([ENABLE_SHANI],[test x$enable_shani = xyes])\n+AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n@@ -1045,13 +1546,28 @@ AC_SUBST(BITCOIN_DAEMON_NAME)\n AC_SUBST(BITCOIN_GUI_NAME)\n AC_SUBST(BITCOIN_CLI_NAME)\n AC_SUBST(BITCOIN_TX_NAME)\n+AC_SUBST(BITCOIN_WALLET_TOOL_NAME)\n \n AC_SUBST(RELDFLAGS)\n+AC_SUBST(DEBUG_CPPFLAGS)\n+AC_SUBST(WARN_CXXFLAGS)\n+AC_SUBST(NOWARN_CXXFLAGS)\n+AC_SUBST(DEBUG_CXXFLAGS)\n+AC_SUBST(COMPAT_LDFLAGS)\n+AC_SUBST(ERROR_CXXFLAGS)\n+AC_SUBST(GPROF_CXXFLAGS)\n+AC_SUBST(GPROF_LDFLAGS)\n AC_SUBST(HARDENED_CXXFLAGS)\n AC_SUBST(HARDENED_CPPFLAGS)\n AC_SUBST(HARDENED_LDFLAGS)\n AC_SUBST(PIC_FLAGS)\n AC_SUBST(PIE_FLAGS)\n+AC_SUBST(SANITIZER_CXXFLAGS)\n+AC_SUBST(SANITIZER_LDFLAGS)\n+AC_SUBST(SSE42_CXXFLAGS)\n+AC_SUBST(SSE41_CXXFLAGS)\n+AC_SUBST(AVX2_CXXFLAGS)\n+AC_SUBST(SHANI_CXXFLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)\n@@ -1060,18 +1576,17 @@ AC_SUBST(TESTDEFS)\n AC_SUBST(LEVELDB_TARGET_FLAGS)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n-AC_SUBST(CRYPTO_LIBS)\n-AC_SUBST(SSL_LIBS)\n AC_SUBST(EVENT_LIBS)\n AC_SUBST(EVENT_PTHREADS_LIBS)\n AC_SUBST(ZMQ_LIBS)\n-AC_SUBST(PROTOBUF_LIBS)\n AC_SUBST(QR_LIBS)\n-AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n-AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n-AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n+AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n-AC_CONFIG_LINKS([qa/pull-tester/rpc-tests.py:qa/pull-tester/rpc-tests.py])\n+AM_COND_IF([HAVE_DOXYGEN], [AC_CONFIG_FILES([doc/Doxyfile])])\n+AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n+AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n+AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n+AC_CONFIG_LINKS([test/util/rpcauth-test.py:test/util/rpcauth-test.py])\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a\n dnl result, they leak into secp256k1's configure and crazy things happen.\n@@ -1096,30 +1611,52 @@ PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n unset PKG_CONFIG_LIBDIR\n PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n \n-if test x$system_univalue = xno; then\n+if test x$need_bundled_univalue = xyes; then\n   AC_CONFIG_SUBDIRS([src/univalue])\n fi\n \n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --enable-benchmark=no --with-bignum=no --enable-module-recovery --disable-jni\"\n AC_CONFIG_SUBDIRS([src/secp256k1])\n \n AC_OUTPUT\n \n-dnl Taken from https://wiki.debian.org/RpathIssue\n-case $host in\n-   *-*-linux-gnu)\n-     AC_MSG_RESULT([Fixing libtool for -rpath problems.])\n-     sed < libtool > libtool-2 \\\n-     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=\" -D__LIBTOOL_IS_A_FOOL__ \"/'\n-     mv libtool-2 libtool\n-     chmod 755 libtool\n-   ;;\n-esac\n-\n dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n case ${OS} in\n    *Windows*)\n-     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n-     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n+     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  test/config.ini > test/config-2.ini\n+     mv test/config-2.ini test/config.ini\n    ;;\n esac\n+\n+echo\n+echo \"Options used to compile and link:\"\n+echo \"  with wallet   = $enable_wallet\"\n+echo \"  with gui / qt = $bitcoin_enable_qt\"\n+if test x$bitcoin_enable_qt != xno; then\n+    echo \"    with qr     = $use_qr\"\n+fi\n+echo \"  with zmq      = $use_zmq\"\n+echo \"  with test     = $use_tests\"\n+if test x$use_tests != xno; then\n+    echo \"    with prop   = $enable_property_tests\"\n+    echo \"    with fuzz   = $enable_fuzz\"\n+fi\n+echo \"  with bench    = $use_bench\"\n+echo \"  with upnp     = $use_upnp\"\n+echo \"  use asm       = $use_asm\"\n+echo \"  sanitizers    = $use_sanitizers\"\n+echo \"  debug enabled = $enable_debug\"\n+echo \"  gprof enabled = $enable_gprof\"\n+echo \"  werror        = $enable_werror\"\n+echo\n+echo \"  target os     = $TARGET_OS\"\n+echo \"  build os      = $BUILD_OS\"\n+echo\n+echo \"  CC            = $CC\"\n+echo \"  CFLAGS        = $CFLAGS\"\n+echo \"  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\n+echo \"  CXX           = $CXX\"\n+echo \"  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n+echo \"  LDFLAGS       = $PTHREAD_CFLAGS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n+echo \"  ARFLAGS       = $ARFLAGS\"\n+echo"
      },
      {
        "sha": "361975baa4915b26e4e65fecaf359d230a411450",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 11,
        "deletions": 18,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,20 +1,12 @@\n-Wallet Tools\n----------------------\n-\n-### [SpendFrom](/contrib/spendfrom) ###\n-\n-Use the raw transactions API to send coins received on a particular\n-address (or addresses).\n-\n Repository Tools\n ---------------------\n \n ### [Developer tools](/contrib/devtools) ###\n Specific tools for developers working on this repository.\n-Contains the script `github-merge.py` for merging github pull requests securely and signing them using GPG.\n+Additional tools, including the `github-merge.py` script, are available in the [maintainer-tools](https://github.com/bitcoin-core/bitcoin-maintainer-tools) repository.\n \n ### [Verify-Commits](/contrib/verify-commits) ###\n-Tool to verify that every merge commit was signed by a developer using the above `github-merge.py` script.\n+Tool to verify that every merge commit was signed by a developer using the `github-merge.py` script.\n \n ### [Linearize](/contrib/linearize) ###\n Construct a linear, no-fork, best version of the blockchain.\n@@ -29,23 +21,24 @@ Utility to generate the pnSeed[] array that is compiled into the client.\n Build Tools and Keys\n ---------------------\n \n-### [Debian](/contrib/debian) ###\n-Contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+### Packaging ###\n+The [Debian](/contrib/debian) subfolder contains the copyright file.\n+\n+All other packaging related files can be found in the [bitcoin-core/packaging](https://github.com/bitcoin-core/packaging) repository.\n \n ### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Notes on getting Gitian builds up and running using KVM.\n+Files used during the gitian build process. For more information about gitian, see the [the Bitcoin Core documentation repository](https://github.com/bitcoin-core/docs).\n \n ### [Gitian-keys](/contrib/gitian-keys)\n PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n \n ### [MacDeploy](/contrib/macdeploy) ###\n-Scripts and notes for Mac builds. \n+Scripts and notes for Mac builds.\n \n-### [RPM](/contrib/rpm) ###\n-RPM spec file for building bitcoin-core on RPM based distributions\n+### [Gitian-build](/contrib/gitian-build.py) ###\n+Script for running full Gitian builds.\n \n-Test and Verify Tools \n+Test and Verify Tools\n ---------------------\n \n ### [TestGen](/contrib/testgen) ###"
      },
      {
        "sha": "ddea58a05cc1a9f0031b53b0d58f8c3801b32492",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "modified",
        "additions": 6,
        "deletions": 19,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,5 +1,5 @@\n # bash programmable completion for bitcoin-cli(1)\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2012-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -17,13 +17,6 @@ _bitcoin_rpc() {\n     $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n }\n \n-# Add wallet accounts to COMPREPLY\n-_bitcoin_accounts() {\n-    local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk -F '\"' '{ print $2 }')\n-    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n-}\n-\n _bitcoin_cli() {\n     local cur prev words=() cword\n     local bitcoin_cli\n@@ -50,7 +43,7 @@ _bitcoin_cli() {\n                 COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n-            signrawtransaction)\n+            signrawtransactionwithkey|signrawtransactionwithwallet)\n                 COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n@@ -60,10 +53,9 @@ _bitcoin_cli() {\n     if ((cword > 3)); then\n         case ${words[cword-3]} in\n             addmultisigaddress)\n-                _bitcoin_accounts\n                 return 0\n                 ;;\n-            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n+            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaddress|listsinceblock)\n                 COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n@@ -80,14 +72,10 @@ _bitcoin_cli() {\n                 COMPREPLY=( $( compgen -W \"add remove\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n-            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n+            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listreceivedbyaddress|sendrawtransaction)\n                 COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n-            move|setaccount)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n         esac\n     fi\n \n@@ -96,12 +84,11 @@ _bitcoin_cli() {\n             _filedir\n             return 0\n             ;;\n-        getaddednodeinfo|getrawmempool|lockunspent|setgenerate)\n+        getaddednodeinfo|getrawmempool|lockunspent)\n             COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n             return 0\n             ;;\n-        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n+        getbalance|getnewaddress|listtransactions|sendmany)\n             return 0\n             ;;\n     esac"
      },
      {
        "sha": "0e4eeee0a7ad9ebc49c30d30c285ccd41a752771",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -16,6 +16,7 @@ FORMS += \\\n     ../src/qt/forms/sendcoinsentry.ui \\\n     ../src/qt/forms/signverifymessagedialog.ui \\\n     ../src/qt/forms/transactiondescdialog.ui \\\n+    ../src/qt/forms/createwalletdialog.ui\n \n RESOURCES += \\\n     ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "ec1d9512d4759e79ff284ceb09ae0ee16bbdb653",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,5 +1,5 @@\n # bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2012-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -15,7 +15,7 @@ _bitcoind() {\n     _get_comp_words_by_ref -n = cur prev words cword\n \n     case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-rootcertificates=*|-rpccookiefile=*|-wallet=*)\n+        -conf=*|-pid=*|-loadblock=*|-rpccookiefile=*|-wallet=*)\n             cur=\"${cur#*=}\"\n             _filedir\n             return 0\n@@ -30,7 +30,7 @@ _bitcoind() {\n             ;;\n         *)\n \n-            # only parse -help if senseful\n+            # only parse -help if sensible\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n                 local helpopts\n                 helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )"
      },
      {
        "sha": "fab9cc238156789c96e4b908fbe1e4d863ecebf9",
        "filename": "contrib/debian/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README.md?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,21 +0,0 @@\n-\n-Debian\n-====================\n-This directory contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n-\n-## bitcoin: URI support ##\n-\n-\n-bitcoin-qt.desktop  (Gnome / Open Desktop)\n-To install:\n-\n-\tsudo desktop-file-install bitcoin-qt.desktop\n-\tsudo update-desktop-database\n-\n-If you build yourself, you will either need to modify the paths in\n-the .desktop file or copy or symlink your bitcoin-qt binary to `/usr/bin`\n-and the `../../share/pixmaps/bitcoin128.png` to `/usr/share/pixmaps`\n-\n-bitcoin-qt.protocol (KDE)\n-"
      },
      {
        "sha": "61e1aca6ad0ce17519af59f6da4afdd9521b79a8",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,12 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Name=Bitcoin\n-Comment=Bitcoin P2P Cryptocurrency\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n-Terminal=false\n-Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;Finance;"
      },
      {
        "sha": "e0b32373be68d74e075a779f083b3dededc574d7",
        "filename": "contrib/debian/bitcoin-qt.install",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.install?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,6 +0,0 @@\n-usr/local/bin/bitcoin-qt usr/bin\n-share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin16.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin128.png usr/share/pixmaps\n-debian/bitcoin-qt.desktop usr/share/applications\n-debian/bitcoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "7fb230eca8921cf3f2756a2e1fa3ea6ab808dca5",
        "filename": "contrib/debian/bitcoin-qt.lintian-overrides",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoin-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoin-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.lintian-overrides?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,2 +0,0 @@\n-# Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoin-qt: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "014588d53679baf51055d70b8a621a99217eb160",
        "filename": "contrib/debian/bitcoin-qt.protocol",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoin-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoin-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.protocol?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,11 +0,0 @@\n-[Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n-input=none\n-output=none\n-helper=true\n-listing=\n-reading=false\n-writing=false\n-makedir=false\n-deleting=false"
      },
      {
        "sha": "7acb0b0aea668dd16129434813d05c0306617b68",
        "filename": "contrib/debian/bitcoin-tx.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.bash-completion?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1 +0,0 @@\n-contrib/bitcoin-tx.bash-completion\tbitcoin-tx"
      },
      {
        "sha": "2c21052a6876b4a0f94b79858ae1d164cf179b21",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1 +0,0 @@\n-usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "5c69d78fbb0fc73017167bab3d8a1c6a78e85ed9",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,2 +0,0 @@\n-contrib/bitcoind.bash-completion\tbitcoind\n-contrib/bitcoin-cli.bash-completion\tbitcoin-cli"
      },
      {
        "sha": "4ded67d98e784e275c76839e7b06b413d774230e",
        "filename": "contrib/debian/bitcoind.examples",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.examples?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1 +0,0 @@\n-debian/examples/bitcoin.conf"
      },
      {
        "sha": "798ea851f6ef8a01e19984221efd327625fda92d",
        "filename": "contrib/debian/bitcoind.install",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,2 +0,0 @@\n-usr/local/bin/bitcoind usr/bin\n-usr/local/bin/bitcoin-cli usr/bin"
      },
      {
        "sha": "3f9f140bd827a1491ba6a0c46c1df16e428548bd",
        "filename": "contrib/debian/bitcoind.lintian-overrides",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoind.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoind.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.lintian-overrides?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,2 +0,0 @@\n-# Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoind: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "6d3e683855018ec721d97853b0d5c9b90edd5c35",
        "filename": "contrib/debian/bitcoind.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/bitcoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.manpages?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,3 +0,0 @@\n-debian/manpages/bitcoind.1\n-debian/manpages/bitcoin.conf.5\n-debian/manpages/bitcoin-cli.1"
      },
      {
        "sha": "110bfe03effcdad2f353ff9746ab9589e4a7c08e",
        "filename": "contrib/debian/changelog",
        "status": "removed",
        "additions": 0,
        "deletions": 459,
        "changes": 459,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,459 +0,0 @@\n-bitcoin (0.11.0-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n-\n-bitcoin (0.10.2-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n-\n-bitcoin (0.10.1-precise3) precise; urgency=medium\n-\n-  * Fix build dep (include python).\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n-\n-bitcoin (0.10.1-precise2) precise; urgency=medium\n-\n-  * Fix miniupnpc dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n-\n-bitcoin (0.10.1-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n-\n-bitcoin (0.10.0-precise1) precise; urgency=medium\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 18 Feb 2015 13:22:00 -1000\n-\n-bitcoin (0.9.4-precise1) precise; urgency=high\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com>  Mon, 12 Jan 2015 23:30:00 -1000\n-\n-bitcoin (0.9.3-precise1) precise; urgency=medium\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 26 Sep 2014 12:01:00 -0700\n-\n-bitcoin (0.9.1-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-  * Backport pull #4019\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 19 Apr 2014 17:29:00 -0400\n-\n-bitcoin (0.9.0-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Thu, 20 Mar 2014 13:10:00 -0400\n-\n-bitcoin (0.8.6-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-  * Make .desktop paths non-fixed (suggested by prusnak@github)\n-\n- -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n-\n-bitcoin (0.8.5-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 15 Sep 2013 14:02:00 -0400\n-\n-bitcoin (0.8.4-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 4 Sep 2013 10:25:00 -0400\n-\n-bitcoin (0.8.3-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Jun 2013 00:18:00 +0100\n-\n-bitcoin (0.8.2-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 29 Mar 2013 23:23:00 +0100\n-\n-bitcoin (0.8.1-natty3) natty; urgency=low\n-\n-  * New pixmaps\n-\n- -- Jonas Schnelli <jonas.schnelli@include7.ch>  Mon, 13 May 2013 16:14:00 +0100\n-\n-bitcoin (0.8.1-natty2) natty; urgency=low\n-\n-  * Remove dumb broken launcher script\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 24 Mar 2013 20:01:00 -0400\n-\n-bitcoin (0.8.1-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 19 Mar 2013 13:03:00 -0400\n-\n-bitcoin (0.8.0-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 23 Feb 2013 16:01:00 -0500\n-\n-bitcoin (0.7.2-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 15 Dec 2012 10:59:00 -0400\n-\n-bitcoin (0.7.1-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 24 Oct 2012 15:06:00 -0400\n-\n-bitcoin (0.7.0-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 17 Sep 2012 13:45:00 +0200\n-\n-bitcoin (0.6.3-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 25 Jun 2012 23:47:00 +0200\n-\n-bitcoin (0.6.2-natty1) natty; urgency=low\n-\n-  * Update package description and launch scripts.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 2 Jun 2012 16:41:00 +0200\n-\n-bitcoin (0.6.2-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 8 May 2012 16:27:00 -0500\n-\n-bitcoin (0.6.1-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 6 May 2012 20:09:00 -0500\n-\n-bitcoin (0.6.0-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-  * Add GNOME/KDE support for bitcoin-qt's bitcoin: URI support.\n-    Thanks to luke-jr for the KDE .protocol file.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 31 Mar 2012 15:35:00 -0500\n-\n-bitcoin (0.5.3-natty1) natty; urgency=low\n-\n-  * Mark for upload to PPA.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 14 Mar 2012 23:06:00 -0400\n-\n-bitcoin (0.5.3-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n-\n-bitcoin (0.5.2-natty1) natty; urgency=low\n-\n-  * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isn't anonymous without\n-    a ton of work that virtually no users will ever be willing and\n-    capable of doing\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 7 Jan 2012 13:37:00 -0500\n-\n-bitcoin (0.5.2-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n-\n-bitcoin (0.5.1-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Fri, 16 Dec 2011 13:27:00 -0500\n-\n-bitcoin (0.5.0-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 21 Nov 2011 11:32:00 -0500\n-\n-bitcoin (0.5.0~rc7-natty0) natty; urgency=low\n-\n-  * New upstream release candidate.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 20 Nov 2011 17:08:00 -0500\n-\n-bitcoin (0.5.0~rc3-natty0) natty; urgency=low\n-\n-  * New upstream release candidate.\n-  * Don't set rpcpassword for bitcoin-qt.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 8 Nov 2011 11:56:00 -0400\n-\n-bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n-\n-  * Add test_bitcoin to build test\n-  * Fix clean\n-  * Remove unnecessary build-dependancies\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n-\n-bitcoin (0.5.0~rc1-natty0) natty; urgency=low\n-\n-  * Mark for natty\n-  * Fix broken build\n-  * Fix copyright listing\n-  * Remove bitcoin: URL handler until bitcoin actually has support for it (Oops)\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n-\n-bitcoin (0.5.0~rc1-2) experimental; urgency=low\n-\n-  * Add bitcoin-qt\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 25 Oct 2011 15:24:18 -0400\n-\n-bitcoin (0.5.0~rc1-1) experimental; urgency=low\n-\n-  * New upstream prerelease.\n-  * Add Github as alternate upstream source in watch file.\n-  * Stop build-depending on libcrypto++-dev, and drop patch 1000:\n-    Upstream no longer use crypto++.\n-  * Drop patch 1003: Upstream builds dynamic by default now.\n-  * Update copyright file: Drop notes on longer included sources.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Fri, 14 Oct 2011 00:16:18 +0200\n-\n-bitcoin (0.4.0-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Stop repackaging source tarballs: No DFSG-violating stripping left.\n-  * Update copyright file:\n-    + Add Github URL to Source.\n-  * Drop dpkg-source local-options hint: Declared options are default\n-    since dpkg-source 1.16.1.\n-    + Add irc URL to Upstream-Contact.\n-    + Add comment on Bitcoin Developers to catch-all Files section.\n-    + Add Files sections for newly readded src/cryptopp/* (new custom\n-      BSD-like license), and newly added doc/build-osx.txt and\n-      src/makefile.osx (Expat).\n-  * Bump debhelper compatibility level to 7.\n-  * Suppress binary icns and gpg files.\n-  * Enable regression tests:\n-    + Build-depend on libboost-test-dev.\n-    + Extend patch 1003 to also dynamically link test binary.\n-    + Build and invoke test binary unless tests are disabled.\n-  * Tighten build-dependency on cdbs: Recent version needed to support\n-    debhelper 7.\n-  * Relax build-depend unversioned on debhelper: needed version\n-    satisfied even in oldstable.\n-  * Stop suppress optional build-dependencies: Satisfied in stable.\n-    Build-depend on devscripts (enabling copyright-check).\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 05 Oct 2011 01:48:53 +0200\n-\n-bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-\n-  [ Jonas Smedegaard ]\n-  * Improve various usage hints:\n-    + Explicitly mention in long description that bitcoind contains\n-      daemon and command-line interface.\n-    + Extend README.Debian with section on lack of GUI, and add primary\n-      headline.\n-    + Avoid installing upstream README: contains no parts relevant for\n-      Debian usage.\n-    Thanks to richard for suggestions (see bug#629443).\n-  * Favor final releases over prereleases in rules and watch file.\n-    Thanks to Jan Dittberner.\n-  * Track -src (not -linux) tarballs in rules and watch file.\n-    Thanks to Jan Dittberner.\n-  * Drop patches 1004 and 1005 (integrated upstream) and simplify\n-    CXXFLAGS in rules file.\n-  * Stop stripping no longer included source-less binaries from upstream\n-    tarballs.\n-\n-  [ Jan Dittberner ]\n-  * refresh debian/patches/1000_use_system_crypto++.patch\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 19 Jul 2011 15:08:54 +0200\n-\n-bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n-\n-  * Enable UPNP support:\n-    + Drop patch 1006.\n-    + Build-depend on libminiupnpc-dev.\n-    Thanks to Matt Corallo.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Sat, 28 May 2011 15:52:44 +0200\n-\n-bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Refresh patches.\n-  * Drop patch 1002: no longer needed, as upstream use pkgconfig now.\n-  * Add patch 1006 to really unset USE_UPNP as aparently intended.\n-  * Adjust cleanup rule to preserve .gitignore files.\n-  * Update copyright file:\n-    + Bump format to draft 174 of DEP-5.\n-    + Shorten comments.\n-  * Bump policy compliance to standards-version 3.9.2.\n-  * Shorten Vcs-Browser paragraph in control file.\n-  * Fix mention daemon (not CLI tools) in short description.\n-  * Stop conflicting with or replace bitcoin-cli: Only transitional, no\n-    longer needed.\n-  * Link against unversioned berkeleydb. Update NEWS and README.Debian\n-    accordingly (and improve wording while at it).\n-    Closes: Bug#621425. Thanks to Ond\u0159ej Sur\u00fd.\n-  * This release also implicitly updates linkage against libcrypto++,\n-    which closes: bug#626953, #627024.\n-  * Disable linkage against not yet Debian packaged MiniUPnP.\n-  * Silence seemingly harmless noise about unused variables.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 17 May 2011 15:31:24 +0200\n-\n-bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n-\n-  * Fix have wrapper script execute real binary (not loop executing\n-    itself).\n-    Closes: bug#617290. Thanks to Philippe Gauthier and Etienne Laurin.\n-  * Set urgency=medium as the only (user-exposed) binary is useless\n-    without this fix and has been for some time.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 16 Mar 2011 09:11:06 +0100\n-\n-bitcoin (0.3.20.2~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Fix provide and replace former package name bitcoin-cli.\n-    Closes: bug#618439. Thanks to Shane Wegner.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 15 Mar 2011 11:41:43 +0100\n-\n-bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-\n-  [ Micah Anderson ]\n-  * Add myself as uploader.\n-\n-  [ Jonas Smedegaard ]\n-  * Add wrapper for bitcoind to ease initial startup.\n-  * Update patches:\n-    + Drop patch 2002: Applied upstream.\n-    + Add patch 1005 to add phtread linker option.\n-      Closes: bug#615619. Thanks to Shane Wegner.\n-    + Refresh patches.\n-  * Extend copyright years in rules file header.\n-  * Rewrite copyright file using draft svn166 of DEP5 format.\n-  * Rename binary package to bitcoind (from bincoin-cli).\n-    Closes: bug#614025. Thanks to Luke-Jr.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 01 Mar 2011 15:55:04 +0100\n-\n-bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n-\n-  * Fix override aggressive optimizations.\n-  * Fix tighten build-dependencies to really fit backporting to Lenny:\n-    + Add fallback build-dependency on libdb4.6++-dev.\n-    + Tighten unversioned Boost build-dependencies to recent versions,\n-      To force use of versioned Boost when backporting to Lenny.\n-    ...needs more love, though: actual build fails.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 19:48:35 +0100\n-\n-bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n-\n-  * Fix lower Boost fallback-build-dependencies to 1.35, really\n-    available in Lenny.\n-  * Correct comment in rules file regarding reason for versioned Boost\n-    fallback-build-dependency.\n-  * Add patch 2002 adding -mt decoration to Boost flags, to ease\n-    backporting to Lenny.\n-  * Respect DEB_BUILD_OPTIONS, and suppress arch-specific optimizations:\n-    + Add patch 1004 to allow overriding optimization flags.\n-    + Set optimization flags conditionally at build time.\n-    + Drop patch 2002 unconditionally suppressing arch-optimizations.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 16:04:48 +0100\n-\n-bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n-\n-  [ Micah Anderson ]\n-  * Provide example bitcoin.conf.\n-  * Add bitcoind(1) and bitcoin.conf(5) man pages.\n-\n-  [ Jonas Smedegaard ]\n-  * Ease backporting:\n-    + Suppress optional build-dependencies.\n-    + Add fallback build-dependencies on the most recent Boost libs\n-    available in Lenny (where unversioned Boost libs are missing).\n-  * Add Micah as copyright holder for manpages, licensed as GPL-3+.\n-  * Bump copyright format to Subversion candidate draft 162 of DEP5.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 14:00:48 +0100\n-\n-bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n-\n-  * Document in copyright file files excluded from repackaged source.\n-  * Update copyright file:\n-    + Bump DEP5 format hint to Subversion draft rev. 153.\n-    + Consistently wrap at 72 chars.\n-    + Refer to GPL-2 file (not GPL symlink).\n-  * Link against Berkeley DB 4.8 (not 4.7):\n-    + Build-depend on libdb4.8++-dev (and on on libdb4.7++-dev).\n-    + Suggest libdb4.8-util and db4.7-util.\n-    + Add README.Debian note on (untested) upgrade routine.\n-    + Add NEWS entry on changed db version, referring to README.Debian.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Fri, 07 Jan 2011 22:50:57 +0100\n-\n-bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n-\n-  * Adjust build options to use optimized miner only for amd64. Fixes\n-    FTBFS on i386 (and other archs, if compiling anywhere else at all).\n-  * Avoid static linking.\n-  * Adjust patch 2001 to avoid only arch-specific optimizations (keep\n-    -O3).\n-  * Extend long description to mention disk consumption and initial use\n-    of IRC.\n-  All of above changes thanks to Helmuth Grohne.\n-  * Add lintian override regarding OpenSSL and GPL: Linked code is Expat\n-    - only Debian packaging is GPL-2+.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 29 Dec 2010 00:27:54 +0100\n-\n-bitcoin (0.3.19~dfsg-1) unstable; urgency=low\n-\n-  [ Jonas Smedegaard ]\n-  * Initial release.\n-    Closes: bug#578157.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 28 Dec 2010 15:49:22 +0100"
      },
      {
        "sha": "fce6bc0118f177cd58369825ec129bcd1fed819d",
        "filename": "contrib/debian/control",
        "status": "removed",
        "additions": 0,
        "deletions": 67,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,67 +0,0 @@\n-Source: bitcoin\n-Section: utils\n-Priority: optional\n-Maintainer: Jonas Smedegaard <dr@jones.dk>\n-Uploaders: Micah Anderson <micah@debian.org>\n-Build-Depends: debhelper,\n- devscripts,\n- automake,\n- libtool,\n- bash-completion,\n- libboost-system-dev (>> 1.35) | libboost-system1.35-dev,\n- libdb4.8++-dev,\n- libssl-dev,\n- pkg-config,\n- libminiupnpc8-dev | libminiupnpc-dev (>> 1.6),\n- libboost-filesystem-dev (>> 1.35) | libboost-filesystem1.35-dev,\n- libboost-program-options-dev (>> 1.35) | libboost-program-options1.35-dev,\n- libboost-thread-dev (>> 1.35) | libboost-thread1.35-dev,\n- libboost-test-dev (>> 1.35) | libboost-test1.35-dev,\n- qt4-qmake,\n- libqt4-dev,\n- libqrencode-dev,\n- libprotobuf-dev, protobuf-compiler,\n- python\n-Standards-Version: 3.9.2\n-Homepage: https://bitcoincore.org/\n-Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: https://github.com/bitcoin/bitcoin\n-\n-Package: bitcoind\n-Architecture: any\n-Depends: ${shlibs:Depends}, ${misc:Depends}\n-Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n- technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n- is the name of the open source software which enables the use of this currency.\n- .\n- This package provides the daemon, bitcoind, and the CLI tool\n- bitcoin-cli to interact with the daemon.\n-\n-Package: bitcoin-qt\n-Architecture: any\n-Depends: ${shlibs:Depends}, ${misc:Depends}\n-Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n- technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n- is the name of the open source software which enables the use of this currency.\n- .\n- This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n-\n-Package: bitcoin-tx\n-Architecture: any\n-Depends: ${shlibs:Depends}, ${misc:Depends}\n-Description: peer-to-peer digital currency - standalone transaction tool\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n- technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n- is the name of the open source software which enables the use of this currency.\n- .\n- This package provides bitcoin-tx, a command-line transaction creation\n- tool which can be used without a bitcoin daemon.  Some means of\n- exchanging minimal transaction data with peers is still required."
      },
      {
        "sha": "581fe712e96c2cab4839c6bdc49a1b5cdc7bb6e7",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 30,
        "deletions": 19,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -5,7 +5,7 @@ Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2016, Bitcoin Core Developers\n+Copyright: 2009-2020, Bitcoin Core Developers\n License: Expat\n Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n@@ -15,28 +15,25 @@ Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n            2011, Matt Corallo <matt@bluematt.me>\n License: GPL-2+\n \n-Files: debian/manpages/*\n-Copyright: Micah Anderson <micah@debian.org>\n-License: GPL-3+\n+Files: src/secp256k1/build-aux/m4/ax_jni_include_dir.m4\n+Copyright: 2008 Don Anderson <dda@sleepycat.com>\n+License: GNU-All-permissive-License\n+\n+Files: src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4\n+Copyright: 2008 Paolo Bonzini <bonzini@gnu.org>\n+License: GNU-All-permissive-License\n \n Files: src/qt/res/icons/add.png\n        src/qt/res/icons/address-book.png\n        src/qt/res/icons/chevron.png\n-       src/qt/res/icons/configure.png\n-       src/qt/res/icons/debugwindow.png\n        src/qt/res/icons/edit.png\n        src/qt/res/icons/editcopy.png\n        src/qt/res/icons/editpaste.png\n        src/qt/res/icons/export.png\n        src/qt/res/icons/eye.png\n-       src/qt/res/icons/filesave.png\n        src/qt/res/icons/history.png\n-       src/qt/res/icons/info.png\n-       src/qt/res/icons/key.png\n        src/qt/res/icons/lock_*.png\n-       src/qt/res/icons/open.png\n        src/qt/res/icons/overview.png\n-       src/qt/res/icons/quit.png\n        src/qt/res/icons/receive.png\n        src/qt/res/icons/remove.png\n        src/qt/res/icons/send.png\n@@ -51,37 +48,45 @@ Comment: Site: https://github.com/stephenhutchings/typicons.font\n \n Files: src/qt/res/icons/connect*.png\n        src/qt/res/src/connect-*.svg\n+       src/qt/res/icons/network_disabled.png\n+       src/qt/res/src/network_disabled.svg\n Copyright: Marco Falke\n+           Luke Dashjr\n License: Expat\n-Comment: Inspired by Stephan Hutchings Typicons\n+Comment: Inspired by Stephen Hutchings' Typicons\n \n Files: src/qt/res/icons/tx_mined.png\n        src/qt/res/src/mine.svg\n        src/qt/res/icons/fontbigger.png\n        src/qt/res/icons/fontsmaller.png\n+       src/qt/res/icons/hd_disabled.png\n+       src/qt/res/src/hd_disabled.svg\n+       src/qt/res/icons/hd_enabled.png\n+       src/qt/res/src/hd_enabled.svg\n Copyright: Jonas Schnelli\n License: Expat\n-Comment:\n \n Files: src/qt/res/icons/clock*.png\n        src/qt/res/icons/eye_*.png\n-       src/qt/res/icons/verify.png\n        src/qt/res/icons/tx_in*.png\n        src/qt/res/src/clock_*.svg\n        src/qt/res/src/tx_*.svg\n-       src/qt/res/src/verify.svg\n-Copyright: Stephan Hutching, Jonas Schnelli\n+Copyright: Stephen Hutchings, Jonas Schnelli\n License: Expat\n-Comment: Modifications of Stephan Hutchings Typicons\n+Comment: Modifications of Stephen Hutchings' Typicons\n \n-Files: src/qt/res/icons/about.png\n-       src/qt/res/icons/bitcoin.*\n+Files: src/qt/res/icons/bitcoin.*\n        share/pixmaps/bitcoin*\n        src/qt/res/src/bitcoin.svg\n Copyright: Bitboy, Jonas Schnelli\n License: public-domain\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n+Files: src/qt/res/icons/proxy.png\n+       src/qt/res/src/proxy.svg\n+Copyright: Cristian Mircea Messel\n+License: public-domain\n+\n \n License: Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n@@ -103,6 +108,12 @@ License: Expat\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n \n+License: GNU-All-permissive-License\n+ Copying and distribution of this file, with or without modification, are\n+ permitted in any medium without royalty provided the copyright notice\n+ and this notice are preserved. This file is offered as-is, without any\n+ warranty.\n+\n License: GPL-2+\n  This program is free software; you can redistribute it and/or modify it\n  under the terms of the GNU General Public License as published by the"
      },
      {
        "sha": "2831c072924362be0afc4dd8f953a824923d7704",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 124,
        "changes": 124,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,124 +0,0 @@\n-##\n-## bitcoin.conf configuration file. Lines beginning with # are comments.\n-##\n- \n-# Network-related settings:\n-\n-# Run on the test network instead of the real bitcoin network.\n-#testnet=0\n-\n-# Run a regression test network\n-#regtest=0\n-\n-# Connect via a SOCKS5 proxy\n-#proxy=127.0.0.1:9050\n-\n-# Bind to given address and always listen on it. Use [host]:port notation for IPv6\n-#bind=<addr>\n-\n-# Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\n-#whitebind=<addr>\n-\n-##############################################################\n-##            Quick Primer on addnode vs connect            ##\n-##  Let's say for instance you use addnode=4.2.2.4          ##\n-##  addnode will connect you to and tell you about the      ##\n-##    nodes connected to 4.2.2.4.  In addition it will tell ##\n-##    the other nodes connected to it that you exist so     ##\n-##    they can connect to you.                              ##\n-##  connect will not do the above when you 'connect' to it. ##\n-##    It will *only* connect you to 4.2.2.4 and no one else.##\n-##                                                          ##\n-##  So if you're behind a firewall, or have other problems  ##\n-##  finding nodes, add some using 'addnode'.                ##\n-##                                                          ##\n-##  If you want to stay private, use 'connect' to only      ##\n-##  connect to \"trusted\" nodes.                             ##\n-##                                                          ##\n-##  If you run multiple nodes on a LAN, there's no need for ##\n-##  all of them to open lots of connections.  Instead       ##\n-##  'connect' them all to one node that is port forwarded   ##\n-##  and has lots of connections.                            ##\n-##       Thanks goes to [Noodle] on Freenode.               ##\n-##############################################################\n-\n-# Use as many addnode= settings as you like to connect to specific peers\n-#addnode=69.164.218.197\n-#addnode=10.0.0.2:8333\n-\n-# Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n-#connect=69.164.218.197\n-#connect=10.0.0.1:8333\n-\n-# Listening mode, enabled by default except when 'connect' is being used\n-#listen=1\n-\n-# Maximum number of inbound+outbound connections.\n-#maxconnections=\n-\n-#\n-# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n-#\n-\n-# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n-#server=0\n-\n-# Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n-# This option can be specified multiple times (default: bind to all interfaces)\n-#rpcbind=<addr>\n-\n-# You must set rpcuser and rpcpassword to secure the JSON-RPC api\n-#rpcuser=Ulysseys\n-#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n-\n-# How many seconds bitcoin will wait for a complete RPC HTTP request.\n-# after the HTTP connection is established. \n-#rpcclienttimeout=30\n-\n-# By default, only RPC connections from localhost are allowed.\n-# Specify as many rpcallowip= settings as you like to allow connections from other hosts,\n-# either as a single IPv4/IPv6 or with a subnet specification.\n-\n-# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n-# because the rpcpassword is transmitted over the network unencrypted.\n-\n-# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n-# it is also read by bitcoind to determine if RPC should be enabled \n-#rpcallowip=10.1.1.34/255.255.255.0\n-#rpcallowip=1.2.3.4/24\n-#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n-\n-# Listen for RPC connections on this TCP port:\n-#rpcport=8332\n-\n-# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n-# running on another host using this option:\n-#rpcconnect=127.0.0.1\n-\n-# Transaction Fee Changes in 0.10.0\n-\n-# Send transactions as zero-fee transactions if possible (default: 0)\n-#sendfreetransactions=0\n-\n-# Create transactions that have enough fees (or priority) so they are likely to begin confirmation within n blocks (default: 1).\n-# This setting is over-ridden by the -paytxfee option.\n-#txconfirmtarget=n\n-\n-# Miscellaneous options\n-\n-# Pre-generate this many public/private key pairs, so wallet backups will be valid for\n-# both prior transactions and several dozen future transactions.\n-#keypool=100\n-\n-# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n-# are more likely than free transactions to be included in generated blocks, so may\n-# be validated sooner.\n-#paytxfee=0.00\n-\n-# User interface options\n-\n-# Start Bitcoin minimized\n-#min=1\n-\n-# Minimize to the system tray\n-#minimizetotray=1"
      },
      {
        "sha": "a7281f94b2b532a1b8b07631ce0fc5d598e27ecc",
        "filename": "contrib/debian/gbp.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/gbp.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/gbp.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/gbp.conf?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,5 +0,0 @@\n-# Configuration file for git-buildpackage and friends\n-\n-[DEFAULT]\n-pristine-tar = True\n-sign-tags = True"
      },
      {
        "sha": "16c338dd3e51115c67439c5c1651e8465a3547d3",
        "filename": "contrib/debian/manpages/bitcoin-cli.1",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/manpages/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/manpages/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-cli.1?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,21 +0,0 @@\n-.TH BITCOIN-CLI \"1\" \"February 2016\" \"bitcoin-cli 0.12\"\n-.SH NAME\n-bitcoin-cli \\- a remote procedure call client for Bitcoin Core. \n-.SH SYNOPSIS\n-bitcoin-cli [options] <command> [params] \\- Send command to Bitcoin Core. \n-.TP\n-bitcoin-cli [options] help \\- Asks Bitcoin Core for a list of supported commands.\n-.SH DESCRIPTION\n-This manual page documents the bitcoin-cli program. bitcoin-cli is an RPC client used to send commands to Bitcoin Core.\n-\n-.SH OPTIONS\n-.TP\n-\\fB\\-?\\fR\n-Show possible options.\n-\n-.SH \"SEE ALSO\"\n-\\fBbitcoind\\fP, \\fBbitcoin.conf\\fP\n-.SH AUTHOR\n-This manual page was written by Ciemon Dunville <ciemon@gmail.com>. Permission is granted to copy, distribute and/or modify this document under the terms of the MIT License.\n-\n-The complete text of the MIT License can be found on the web at \\fIhttp://opensource.org/licenses/MIT\\fP."
      },
      {
        "sha": "685a282080e2b664006a27c64c8f09f5b2afed49",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,13 +0,0 @@\n-.TH BITCOIN-QT \"1\" \"February 2016\" \"bitcoin-qt 0.12\"\n-.SH NAME\n-bitcoin-qt \\- peer-to-peer network based digital currency\n-.SH DESCRIPTION\n-.SS \"Usage:\"\n-.IP\n-bitcoin\\-qt [command\\-line options]\n-.SH OPTIONS\n-.TP\n-\\-?\n-List options.\n-.SH \"SEE ALSO\"\n-bitcoind(1)"
      },
      {
        "sha": "839dc26c1aa57da476d26eab3e4271c604540582",
        "filename": "contrib/debian/manpages/bitcoin.conf.5",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/manpages/bitcoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/manpages/bitcoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin.conf.5?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,19 +0,0 @@\n-.TH BITCOIN.CONF \"5\" \"February 2016\" \"bitcoin.conf 0.12\"\n-.SH NAME\n-bitcoin.conf \\- bitcoin configuration file\n-.SH SYNOPSIS\n-All command-line options (except for '\\-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n-.TP\n-The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character. Please refer to bitcoind(1) for a up to date list of valid options.\n-.TP\n-The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, bitcoind(1) will look for a file named bitcoin.conf(5) in the bitcoin data directory, but both the data directory and the configuration file path may be changed using the '\\-datadir' and '\\-conf' command-line arguments.\n-.SH LOCATION\n-bitcoin.conf should be located in $HOME/.bitcoin\n-\n-.SH \"SEE ALSO\"\n-bitcoind(1)\n-.SH AUTHOR\n-This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n-\n-On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n-"
      },
      {
        "sha": "5c3e52f441e9ef8eb7ae2261b31f677bcb86cd2d",
        "filename": "contrib/debian/manpages/bitcoind.1",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/manpages/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/manpages/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoind.1?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,30 +0,0 @@\n-.TH BITCOIND \"1\" \"February 2016\" \"bitcoind 0.12\"\n-.SH NAME\n-bitcoind \\- peer-to-peer network based digital currency\n-.SH SYNOPSIS\n-bitcoin [options] <command> [params]  \n-.TP\n-bitcoin [options] help <command> \\- Get help for a command\n-.SH DESCRIPTION\n-This  manual page documents the bitcoind program. Bitcoin is an experimental new digital currency that enables instant payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate with no central authority: managing transactions and issuing money are carried out collectively by the network. Bitcoin Core is the name of open source software which enables the use of this currency.\n-\n-.SH OPTIONS\n-.TP\n-\\-?\n-List of possible options.\n-.SH COMMANDS\n-.TP\n-\\fBhelp\\fR\n-List commands.\n-\n-.TP\n-\\fBhelp 'command'\\fR\n-Get help for a command.\n-\n-.SH \"SEE ALSO\"\n-bitcoin.conf(5)\n-.SH AUTHOR\n-This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n-\n-On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n-"
      },
      {
        "sha": "80c1584376a9798f816d904a07f9288adbde225d",
        "filename": "contrib/debian/patches/README",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/patches/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/patches/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/patches/README?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,3 +0,0 @@\n-0xxx: Grabbed from upstream development.\n-1xxx: Possibly relevant for upstream adoption.\n-2xxx: Only relevant for official Debian release."
      },
      {
        "sha": "8b137891791fe96927ad78e64b0aad7bded08bdc",
        "filename": "contrib/debian/patches/series",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/patches/series",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/patches/series",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/patches/series?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1 +0,0 @@\n-"
      },
      {
        "sha": "52b357cf01a5064a90fecb963af15ca80a0beccc",
        "filename": "contrib/debian/rules",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,24 +0,0 @@\n-#!/usr/bin/make -f\n-# -*- mode: makefile; coding: utf-8 -*-\n-\n-#DEB_MAKE_CHECK_TARGET = test_bitcoin\n-#build/bitcoind::\n-#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_bitcoin)\n-\n-DEB_INSTALL_EXAMPLES_bitcoind += debian/examples/*\n-DEB_INSTALL_MANPAGES_bitcoind += debian/manpages/*\n-\n-%:\n-\tdh --with bash-completion $@\n-\n-override_dh_auto_clean:\n-\tif [ -f Makefile ]; then $(MAKE) distclean; fi\n-\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n-\n-# Yea, autogen should be run on the source archive, but I like doing git archive\n-override_dh_auto_configure:\n-\t./autogen.sh\n-\t./configure\n-\n-override_dh_auto_test:\n-\tmake check"
      },
      {
        "sha": "163aaf8d82b6c54f23c45f32895dbdfdcc27b047",
        "filename": "contrib/debian/source/format",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/source/format",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/source/format",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/source/format?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1 +0,0 @@\n-3.0 (quilt)"
      },
      {
        "sha": "4d9e0cfa577b6d8acac28a1e005f42388b7255c0",
        "filename": "contrib/debian/watch",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,5 +0,0 @@\n-# Run the \"uscan\" command to check for upstream updates and more.\n-version=3\n-# use qa.debian.org redirector; see man uscan\n-opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n- http://githubredir.debian.net/github/bitcoin/bitcoin v(.*).tar.gz"
      },
      {
        "sha": "515a0d8fc600db30505e0c58c391953ec84eb15c",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 78,
        "deletions": 76,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -2,93 +2,92 @@ Contents\n ========\n This directory contains tools for developers working on this repository.\n \n-check-doc.py\n-============\n-\n-Check if all command line args are documented. The return value indicates the\n-number of undocumented args.\n-\n-clang-format.py\n-===============\n-\n-A script to format cpp source code according to [.clang-format](../../src/.clang-format). This should only be applied to new files or files which are currently not actively developed on. Also, git subtrees are not subject to formatting.\n-\n clang-format-diff.py\n ===================\n \n A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n \n+Requires `clang-format`, installed e.g. via `brew install clang-format` on macOS.\n+\n For instance, to format the last commit with 0 lines of context,\n the script should be called from the git root folder as follows.\n \n ```\n git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n ```\n \n-fix-copyright-headers.py\n-========================\n-\n-Every year newly updated files need to have its copyright headers updated to reflect the current year.\n-If you run this script from the root folder it will automatically update the year on the copyright header for all\n-source files if these have a git commit from the current year.\n-\n-For example a file changed in 2015 (with 2015 being the current year):\n-\n-```// Copyright (c) 2009-2013 The Bitcoin Core developers```\n-\n-would be changed to:\n-\n-```// Copyright (c) 2009-2015 The Bitcoin Core developers```\n-\n-git-subtree-check.sh\n+copyright\\_header.py\n ====================\n \n-Run this script from the root of the repository to verify that a subtree matches the contents of\n-the commit it claims to have been updated to.\n+Provides utilities for managing copyright headers of `The Bitcoin Core\n+developers` in repository source files. It has three subcommands:\n \n-To use, make sure that you have fetched the upstream repository branch in which the subtree is\n-maintained:\n-* for `src/secp256k1`: https://github.com/bitcoin-core/secp256k1.git (branch master)\n-* for `src/leveldb`: https://github.com/bitcoin-core/leveldb.git (branch bitcoin-fork)\n-* for `src/univalue`: https://github.com/bitcoin-core/univalue.git (branch master)\n+```\n+$ ./copyright_header.py report <base_directory> [verbose]\n+$ ./copyright_header.py update <base_directory>\n+$ ./copyright_header.py insert <file>\n+```\n+Running these subcommands without arguments displays a usage string.\n \n-Usage: `git-subtree-check.sh DIR COMMIT`\n+copyright\\_header.py report \\<base\\_directory\\> [verbose]\n+---------------------------------------------------------\n \n-`COMMIT` may be omitted, in which case `HEAD` is used.\n+Produces a report of all copyright header notices found inside the source files\n+of a repository. Useful to quickly visualize the state of the headers.\n+Specifying `verbose` will list the full filenames of files of each category.\n \n-github-merge.py\n-===============\n+copyright\\_header.py update \\<base\\_directory\\> [verbose]\n+---------------------------------------------------------\n+Updates all the copyright headers of `The Bitcoin Core developers` which were\n+changed in a year more recent than is listed. For example:\n+```\n+// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n+```\n+will be updated to:\n+```\n+// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n+```\n+where `<lastModifiedYear>` is obtained from the `git log` history.\n \n-A small script to automate merging pull-requests securely and sign them with GPG.\n+This subcommand also handles copyright headers that have only a single year. In\n+those cases:\n+```\n+// Copyright (c) <year> The Bitcoin Core developers\n+```\n+will be updated to:\n+```\n+// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n+```\n+where the update is appropriate.\n \n-For example:\n+copyright\\_header.py insert \\<file\\>\n+------------------------------------\n+Inserts a copyright header for `The Bitcoin Core developers` at the top of the\n+file in either Python or C++ style as determined by the file extension. If the\n+file is a Python file and it has  `#!` starting the first line, the header is\n+inserted in the line below it.\n \n-  ./github-merge.py 3077\n+The copyright dates will be set to be `<year_introduced>-<current_year>` where\n+`<year_introduced>` is according to the `git log` history. If\n+`<year_introduced>` is equal to `<current_year>`, it will be set as a single\n+year rather than two hyphenated years.\n \n-(in any git repository) will help you merge pull request #3077 for the\n-bitcoin/bitcoin repository.\n+If the file already has a copyright for `The Bitcoin Core developers`, the\n+script will exit.\n \n-What it does:\n-* Fetch master and the pull request.\n-* Locally construct a merge commit.\n-* Show the diff that merge results in.\n-* Ask you to verify the resulting source tree (so you can do a make\n-check or whatever).\n-* Ask you whether to GPG sign the merge commit.\n-* Ask you whether to push the result upstream.\n+gen-manpages.sh\n+===============\n \n-This means that there are no potential race conditions (where a\n-pullreq gets updated while you're reviewing it, but before you click\n-merge), and when using GPG signatures, that even a compromised github\n-couldn't mess with the sources.\n+A small script to automatically create manpages in ../../doc/man by running the release binaries with the -help option.\n+This requires help2man which can be found at: https://www.gnu.org/software/help2man/\n \n-Setup\n----------\n-Configuring the github-merge tool for the bitcoin repository is done in the following way:\n+With in-tree builds this tool can be run from any directory within the\n+repostitory. To use this tool with out-of-tree builds set `BUILDDIR`. For\n+example:\n \n-    git config githubmerge.repository bitcoin/bitcoin\n-    git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n-    git config --global user.signingkey mykeyid (if you want to GPG sign)\n+```bash\n+BUILDDIR=$PWD/build contrib/devtools/gen-manpages.sh\n+```\n \n optimize-pngs.py\n ================\n@@ -99,36 +98,39 @@ repository (requires pngcrush).\n security-check.py and test-security-check.py\n ============================================\n \n-Perform basic ELF security checks on a series of executables.\n+Perform basic security checks on a series of executables.\n \n symbol-check.py\n ===============\n \n-A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols. This makes sure they are\n-still compatible with the minimum supported Linux distribution versions.\n+A script to check that the executables produced by gitian only contain\n+certain symbols and are only linked against allowed libraries.\n+\n+For Linux this means checking for allowed gcc, glibc and libstdc++ version symbols.\n+This makes sure they are still compatible with the minimum supported distribution versions.\n+\n+For macOS we check that the executables are only linked against libraries we allow.\n \n Example usage after a gitian build:\n \n-    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py \n+    find ../gitian-builder/build -type f -executable | xargs python3 contrib/devtools/symbol-check.py\n \n-If only supported symbols are used the return value will be 0 and the output will be empty.\n+If no errors occur the return value will be 0 and the output will be empty.\n \n-If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:\n+If there are any errors the return value will be 1 and output like this will be printed:\n \n     .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n     .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n     .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n     .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n \n-update-translations.py\n-======================\n+circular-dependencies.py\n+========================\n \n-Run this script from the root of the repository to update all translations from transifex.\n-It will do the following automatically:\n+Run this script from the root of the source tree (`src/`) to find circular dependencies in the source code.\n+This looks only at which files include other files, treating the `.cpp` and `.h` file as one unit.\n \n-- fetch all translations\n-- post-process them into valid and committable format\n-- add missing translations to the build system (TODO)\n+Example usage:\n \n-See doc/translation-process.md for more information.\n+    cd .../src\n+    ../contrib/devtools/circular-dependencies.py {*,*/*,*/*/*}.{h,cpp}"
      },
      {
        "sha": "06c9551cebae5bf4aaac785a49e967052ce267d7",
        "filename": "contrib/devtools/check-doc.py",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,45 +0,0 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-'''\n-This checks if all command line args are documented.\n-Return value is 0 to indicate no error.\n-\n-Author: @MarcoFalke\n-'''\n-\n-from subprocess import check_output\n-import re\n-\n-FOLDER_GREP = 'src'\n-FOLDER_TEST = 'src/test/'\n-CMD_ROOT_DIR = '`git rev-parse --show-toplevel`/%s' % FOLDER_GREP\n-CMD_GREP_ARGS = r\"egrep -r -I '(map(Multi)?Args(\\.count\\(|\\[)|Get(Bool)?Arg\\()\\\"\\-[^\\\"]+?\\\"' %s | grep -v '%s'\" % (CMD_ROOT_DIR, FOLDER_TEST)\n-CMD_GREP_DOCS = r\"egrep -r -I 'HelpMessageOpt\\(\\\"\\-[^\\\"=]+?(=|\\\")' %s\" % (CMD_ROOT_DIR)\n-REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n-REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n-# list unsupported, deprecated and duplicate args as they need no documentation\n-SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags'])\n-\n-def main():\n-  used = check_output(CMD_GREP_ARGS, shell=True)\n-  docd = check_output(CMD_GREP_DOCS, shell=True)\n-\n-  args_used = set(re.findall(REGEX_ARG,used))\n-  args_docd = set(re.findall(REGEX_DOC,docd)).union(SET_DOC_OPTIONAL)\n-  args_need_doc = args_used.difference(args_docd)\n-  args_unknown = args_docd.difference(args_used)\n-\n-  print \"Args used        : %s\" % len(args_used)\n-  print \"Args documented  : %s\" % len(args_docd)\n-  print \"Args undocumented: %s\" % len(args_need_doc)\n-  print args_need_doc\n-  print \"Args unknown     : %s\" % len(args_unknown)\n-  print args_unknown\n-\n-  exit(len(args_need_doc))\n-\n-if __name__ == \"__main__\":\n-    main()"
      },
      {
        "sha": "6afa4351e794d02b7cb143bc0326a5addfd6afd3",
        "filename": "contrib/devtools/circular-dependencies.py",
        "status": "added",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/circular-dependencies.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/circular-dependencies.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/circular-dependencies.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,91 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import sys\n+import re\n+\n+MAPPING = {\n+    'core_read.cpp': 'core_io.cpp',\n+    'core_write.cpp': 'core_io.cpp',\n+}\n+\n+# Directories with header-based modules, where the assumption that .cpp files\n+# define functions and variables declared in corresponding .h files is\n+# incorrect.\n+HEADER_MODULE_PATHS = [\n+    'interfaces/'\n+]\n+\n+def module_name(path):\n+    if path in MAPPING:\n+        path = MAPPING[path]\n+    if any(path.startswith(dirpath) for dirpath in HEADER_MODULE_PATHS):\n+        return path\n+    if path.endswith(\".h\"):\n+        return path[:-2]\n+    if path.endswith(\".c\"):\n+        return path[:-2]\n+    if path.endswith(\".cpp\"):\n+        return path[:-4]\n+    return None\n+\n+files = dict()\n+deps = dict()\n+\n+RE = re.compile(\"^#include <(.*)>\")\n+\n+# Iterate over files, and create list of modules\n+for arg in sys.argv[1:]:\n+    module = module_name(arg)\n+    if module is None:\n+        print(\"Ignoring file %s (does not constitute module)\\n\" % arg)\n+    else:\n+        files[arg] = module\n+        deps[module] = set()\n+\n+# Iterate again, and build list of direct dependencies for each module\n+# TODO: implement support for multiple include directories\n+for arg in sorted(files.keys()):\n+    module = files[arg]\n+    with open(arg, 'r', encoding=\"utf8\") as f:\n+        for line in f:\n+            match = RE.match(line)\n+            if match:\n+                include = match.group(1)\n+                included_module = module_name(include)\n+                if included_module is not None and included_module in deps and included_module != module:\n+                    deps[module].add(included_module)\n+\n+# Loop to find the shortest (remaining) circular dependency\n+have_cycle = False\n+while True:\n+    shortest_cycle = None\n+    for module in sorted(deps.keys()):\n+        # Build the transitive closure of dependencies of module\n+        closure = dict()\n+        for dep in deps[module]:\n+            closure[dep] = []\n+        while True:\n+            old_size = len(closure)\n+            old_closure_keys = sorted(closure.keys())\n+            for src in old_closure_keys:\n+                for dep in deps[src]:\n+                    if dep not in closure:\n+                        closure[dep] = closure[src] + [src]\n+            if len(closure) == old_size:\n+                break\n+        # If module is in its own transitive closure, it's a circular dependency; check if it is the shortest\n+        if module in closure and (shortest_cycle is None or len(closure[module]) + 1 < len(shortest_cycle)):\n+            shortest_cycle = [module] + closure[module]\n+    if shortest_cycle is None:\n+        break\n+    # We have the shortest circular dependency; report it\n+    module = shortest_cycle[0]\n+    print(\"Circular dependency: %s\" % (\" -> \".join(shortest_cycle + [module])))\n+    # And then break the dependency to avoid repeating in other cycles\n+    deps[shortest_cycle[-1]] = deps[shortest_cycle[-1]] - set([module])\n+    have_cycle = True\n+\n+sys.exit(1 if have_cycle else 0)"
      },
      {
        "sha": "98eee67f4300853629cc61baaaed13008819038c",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "modified",
        "additions": 17,
        "deletions": 15,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,4 +1,4 @@\n-#!/usr/bin/env python\n+#!/usr/bin/env python3\n #\n #===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n #\n@@ -69,10 +69,9 @@\n \n import argparse\n import difflib\n+import io\n import re\n-import string\n import subprocess\n-import StringIO\n import sys\n \n \n@@ -107,10 +106,10 @@ def main():\n   filename = None\n   lines_by_file = {}\n   for line in sys.stdin:\n-    match = re.search('^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n+    match = re.search(r'^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n     if match:\n       filename = match.group(2)\n-    if filename == None:\n+    if filename is None:\n       continue\n \n     if args.regex is not None:\n@@ -120,43 +119,46 @@ def main():\n       if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n         continue\n \n-    match = re.search('^@@.*\\+(\\d+)(,(\\d+))?', line)\n+    match = re.search(r'^@@.*\\+(\\d+)(,(\\d+))?', line)\n     if match:\n       start_line = int(match.group(1))\n       line_count = 1\n       if match.group(3):\n         line_count = int(match.group(3))\n       if line_count == 0:\n         continue\n-      end_line = start_line + line_count - 1;\n+      end_line = start_line + line_count - 1\n       lines_by_file.setdefault(filename, []).extend(\n           ['-lines', str(start_line) + ':' + str(end_line)])\n \n   # Reformat files containing changes in place.\n-  for filename, lines in lines_by_file.iteritems():\n+  for filename, lines in lines_by_file.items():\n     if args.i and args.verbose:\n-      print 'Formatting', filename\n+      print('Formatting {}'.format(filename))\n     command = [binary, filename]\n     if args.i:\n       command.append('-i')\n     if args.sort_includes:\n       command.append('-sort-includes')\n     command.extend(lines)\n     command.extend(['-style=file', '-fallback-style=none'])\n-    p = subprocess.Popen(command, stdout=subprocess.PIPE,\n-                         stderr=None, stdin=subprocess.PIPE)\n+    p = subprocess.Popen(command,\n+                         stdout=subprocess.PIPE,\n+                         stderr=None,\n+                         stdin=subprocess.PIPE,\n+                         universal_newlines=True)\n     stdout, stderr = p.communicate()\n     if p.returncode != 0:\n-      sys.exit(p.returncode);\n+      sys.exit(p.returncode)\n \n     if not args.i:\n-      with open(filename) as f:\n+      with open(filename, encoding=\"utf8\") as f:\n         code = f.readlines()\n-      formatted_code = StringIO.StringIO(stdout).readlines()\n+      formatted_code = io.StringIO(stdout).readlines()\n       diff = difflib.unified_diff(code, formatted_code,\n                                   filename, filename,\n                                   '(before formatting)', '(after formatting)')\n-      diff_string = string.join(diff, '')\n+      diff_string = ''.join(diff)\n       if len(diff_string) > 0:\n         sys.stdout.write(diff_string)\n "
      },
      {
        "sha": "cee99047ac67e69fe767a910ac56811e574cfc8d",
        "filename": "contrib/devtools/clang-format.py",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/devtools/clang-format.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/devtools/clang-format.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format.py?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,62 +0,0 @@\n-#!/usr/bin/env python\n-'''\n-Wrapper script for clang-format\n-\n-Copyright (c) 2015 MarcoFalke\n-Copyright (c) 2015 The Bitcoin Core developers\n-Distributed under the MIT software license, see the accompanying\n-file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-\n-import os\n-import sys\n-import subprocess\n-\n-tested_versions = ['3.6.0', '3.6.1', '3.6.2'] # A set of versions known to produce the same output\n-accepted_file_extensions = ('.h', '.cpp') # Files to format\n-\n-def check_clang_format_version(clang_format_exe):\n-    try:\n-        output = subprocess.check_output([clang_format_exe, '-version'])\n-        for ver in tested_versions:\n-            if ver in output:\n-                print \"Detected clang-format version \" + ver\n-                return\n-        raise RuntimeError(\"Untested version: \" + output)\n-    except Exception as e:\n-        print 'Could not verify version of ' + clang_format_exe + '.'\n-        raise e\n-\n-def check_command_line_args(argv):\n-    required_args = ['{clang-format-exe}', '{files}']\n-    example_args = ['clang-format-3.x', 'src/main.cpp', 'src/wallet/*']\n-\n-    if(len(argv) < len(required_args) + 1):\n-        for word in (['Usage:', argv[0]] + required_args):\n-            print word,\n-        print ''\n-        for word in (['E.g:', argv[0]] + example_args):\n-            print word,\n-        print ''\n-        sys.exit(1)\n-\n-def run_clang_format(clang_format_exe, files):\n-    for target in files:\n-        if os.path.isdir(target):\n-            for path, dirs, files in os.walk(target):\n-                run_clang_format(clang_format_exe, (os.path.join(path, f) for f in files))\n-        elif target.endswith(accepted_file_extensions):\n-            print \"Format \" + target\n-            subprocess.check_call([clang_format_exe, '-i', '-style=file', target], stdout=open(os.devnull, 'wb'), stderr=subprocess.STDOUT)\n-        else:\n-            print \"Skip \" + target\n-\n-def main(argv):\n-    check_command_line_args(argv)\n-    clang_format_exe = argv[1]\n-    files = argv[2:]\n-    check_clang_format_version(clang_format_exe)\n-    run_clang_format(clang_format_exe, files)\n-\n-if __name__ == \"__main__\":\n-    main(sys.argv)"
      },
      {
        "sha": "1b71245aab09bcb281cb59aec9f2afc63f611674",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "added",
        "additions": 604,
        "deletions": 0,
        "changes": 604,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,604 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import re\n+import fnmatch\n+import sys\n+import subprocess\n+import datetime\n+import os\n+\n+################################################################################\n+# file filtering\n+################################################################################\n+\n+EXCLUDE = [\n+    # auto generated:\n+    'src/qt/bitcoinstrings.cpp',\n+    'src/chainparamsseeds.h',\n+    # other external copyrights:\n+    'src/reverse_iterator.h',\n+    'src/test/fuzz/FuzzedDataProvider.h',\n+    'src/tinyformat.h',\n+    'test/functional/test_framework/bignum.py',\n+    # python init:\n+    '*__init__.py',\n+]\n+EXCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in EXCLUDE]))\n+\n+EXCLUDE_DIRS = [\n+    # git subtrees\n+    \"src/crypto/ctaes/\",\n+    \"src/leveldb/\",\n+    \"src/secp256k1/\",\n+    \"src/univalue/\",\n+]\n+\n+INCLUDE = ['*.h', '*.cpp', '*.cc', '*.c', '*.mm', '*.py', '*.sh', '*.bash-completion']\n+INCLUDE_COMPILED = re.compile('|'.join([fnmatch.translate(m) for m in INCLUDE]))\n+\n+def applies_to_file(filename):\n+    for excluded_dir in EXCLUDE_DIRS:\n+        if filename.startswith(excluded_dir):\n+            return False\n+    return ((EXCLUDE_COMPILED.match(filename) is None) and\n+            (INCLUDE_COMPILED.match(filename) is not None))\n+\n+################################################################################\n+# obtain list of files in repo according to INCLUDE and EXCLUDE\n+################################################################################\n+\n+GIT_LS_CMD = 'git ls-files --full-name'.split(' ')\n+GIT_TOPLEVEL_CMD = 'git rev-parse --show-toplevel'.split(' ')\n+\n+def call_git_ls(base_directory):\n+    out = subprocess.check_output([*GIT_LS_CMD, base_directory])\n+    return [f for f in out.decode(\"utf-8\").split('\\n') if f != '']\n+\n+def call_git_toplevel():\n+    \"Returns the absolute path to the project root\"\n+    return subprocess.check_output(GIT_TOPLEVEL_CMD).strip().decode(\"utf-8\")\n+\n+def get_filenames_to_examine(base_directory):\n+    \"Returns an array of absolute paths to any project files in the base_directory that pass the include/exclude filters\"\n+    root = call_git_toplevel()\n+    filenames = call_git_ls(base_directory)\n+    return sorted([os.path.join(root, filename) for filename in filenames if\n+                   applies_to_file(filename)])\n+\n+################################################################################\n+# define and compile regexes for the patterns we are looking for\n+################################################################################\n+\n+\n+COPYRIGHT_WITH_C = r'Copyright \\(c\\)'\n+COPYRIGHT_WITHOUT_C = 'Copyright'\n+ANY_COPYRIGHT_STYLE = '(%s|%s)' % (COPYRIGHT_WITH_C, COPYRIGHT_WITHOUT_C)\n+\n+YEAR = \"20[0-9][0-9]\"\n+YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n+YEAR_LIST = '(%s)(, %s)+' % (YEAR, YEAR)\n+ANY_YEAR_STYLE = '(%s|%s)' % (YEAR_RANGE, YEAR_LIST)\n+ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE = (\"%s %s\" % (ANY_COPYRIGHT_STYLE,\n+                                                ANY_YEAR_STYLE))\n+\n+ANY_COPYRIGHT_COMPILED = re.compile(ANY_COPYRIGHT_STYLE_OR_YEAR_STYLE)\n+\n+def compile_copyright_regex(copyright_style, year_style, name):\n+    return re.compile(r'%s %s,? %s( +\\*)?\\n' % (copyright_style, year_style, name))\n+\n+EXPECTED_HOLDER_NAMES = [\n+    r\"Satoshi Nakamoto\",\n+    r\"The Bitcoin Core developers\",\n+    r\"BitPay Inc\\.\",\n+    r\"University of Illinois at Urbana-Champaign\\.\",\n+    r\"Pieter Wuille\",\n+    r\"Wladimir J\\. van der Laan\",\n+    r\"Jeff Garzik\",\n+    r\"Jan-Klaas Kollhof\",\n+    r\"ArtForz -- public domain half-a-node\",\n+    r\"Intel Corporation ?\",\n+    r\"The Zcash developers\",\n+    r\"Jeremy Rubin\",\n+]\n+\n+DOMINANT_STYLE_COMPILED = {}\n+YEAR_LIST_STYLE_COMPILED = {}\n+WITHOUT_C_STYLE_COMPILED = {}\n+\n+for holder_name in EXPECTED_HOLDER_NAMES:\n+    DOMINANT_STYLE_COMPILED[holder_name] = (\n+        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_RANGE, holder_name))\n+    YEAR_LIST_STYLE_COMPILED[holder_name] = (\n+        compile_copyright_regex(COPYRIGHT_WITH_C, YEAR_LIST, holder_name))\n+    WITHOUT_C_STYLE_COMPILED[holder_name] = (\n+        compile_copyright_regex(COPYRIGHT_WITHOUT_C, ANY_YEAR_STYLE,\n+                                holder_name))\n+\n+################################################################################\n+# search file contents for copyright message of particular category\n+################################################################################\n+\n+def get_count_of_copyrights_of_any_style_any_holder(contents):\n+    return len(ANY_COPYRIGHT_COMPILED.findall(contents))\n+\n+def file_has_dominant_style_copyright_for_holder(contents, holder_name):\n+    match = DOMINANT_STYLE_COMPILED[holder_name].search(contents)\n+    return match is not None\n+\n+def file_has_year_list_style_copyright_for_holder(contents, holder_name):\n+    match = YEAR_LIST_STYLE_COMPILED[holder_name].search(contents)\n+    return match is not None\n+\n+def file_has_without_c_style_copyright_for_holder(contents, holder_name):\n+    match = WITHOUT_C_STYLE_COMPILED[holder_name].search(contents)\n+    return match is not None\n+\n+################################################################################\n+# get file info\n+################################################################################\n+\n+def read_file(filename):\n+    return open(filename, 'r', encoding=\"utf8\").read()\n+\n+def gather_file_info(filename):\n+    info = {}\n+    info['filename'] = filename\n+    c = read_file(filename)\n+    info['contents'] = c\n+\n+    info['all_copyrights'] = get_count_of_copyrights_of_any_style_any_holder(c)\n+\n+    info['classified_copyrights'] = 0\n+    info['dominant_style'] = {}\n+    info['year_list_style'] = {}\n+    info['without_c_style'] = {}\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        has_dominant_style = (\n+            file_has_dominant_style_copyright_for_holder(c, holder_name))\n+        has_year_list_style = (\n+            file_has_year_list_style_copyright_for_holder(c, holder_name))\n+        has_without_c_style = (\n+            file_has_without_c_style_copyright_for_holder(c, holder_name))\n+        info['dominant_style'][holder_name] = has_dominant_style\n+        info['year_list_style'][holder_name] = has_year_list_style\n+        info['without_c_style'][holder_name] = has_without_c_style\n+        if has_dominant_style or has_year_list_style or has_without_c_style:\n+            info['classified_copyrights'] = info['classified_copyrights'] + 1\n+    return info\n+\n+################################################################################\n+# report execution\n+################################################################################\n+\n+SEPARATOR = '-'.join(['' for _ in range(80)])\n+\n+def print_filenames(filenames, verbose):\n+    if not verbose:\n+        return\n+    for filename in filenames:\n+        print(\"\\t%s\" % filename)\n+\n+def print_report(file_infos, verbose):\n+    print(SEPARATOR)\n+    examined = [i['filename'] for i in file_infos]\n+    print(\"%d files examined according to INCLUDE and EXCLUDE fnmatch rules\" %\n+          len(examined))\n+    print_filenames(examined, verbose)\n+\n+    print(SEPARATOR)\n+    print('')\n+    zero_copyrights = [i['filename'] for i in file_infos if\n+                       i['all_copyrights'] == 0]\n+    print(\"%4d with zero copyrights\" % len(zero_copyrights))\n+    print_filenames(zero_copyrights, verbose)\n+    one_copyright = [i['filename'] for i in file_infos if\n+                     i['all_copyrights'] == 1]\n+    print(\"%4d with one copyright\" % len(one_copyright))\n+    print_filenames(one_copyright, verbose)\n+    two_copyrights = [i['filename'] for i in file_infos if\n+                      i['all_copyrights'] == 2]\n+    print(\"%4d with two copyrights\" % len(two_copyrights))\n+    print_filenames(two_copyrights, verbose)\n+    three_copyrights = [i['filename'] for i in file_infos if\n+                        i['all_copyrights'] == 3]\n+    print(\"%4d with three copyrights\" % len(three_copyrights))\n+    print_filenames(three_copyrights, verbose)\n+    four_or_more_copyrights = [i['filename'] for i in file_infos if\n+                               i['all_copyrights'] >= 4]\n+    print(\"%4d with four or more copyrights\" % len(four_or_more_copyrights))\n+    print_filenames(four_or_more_copyrights, verbose)\n+    print('')\n+    print(SEPARATOR)\n+    print('Copyrights with dominant style:\\ne.g. \"Copyright (c)\" and '\n+          '\"<year>\" or \"<startYear>-<endYear>\":\\n')\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        dominant_style = [i['filename'] for i in file_infos if\n+                          i['dominant_style'][holder_name]]\n+        if len(dominant_style) > 0:\n+            print(\"%4d with '%s'\" % (len(dominant_style),\n+                                     holder_name.replace('\\n', '\\\\n')))\n+            print_filenames(dominant_style, verbose)\n+    print('')\n+    print(SEPARATOR)\n+    print('Copyrights with year list style:\\ne.g. \"Copyright (c)\" and '\n+          '\"<year1>, <year2>, ...\":\\n')\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        year_list_style = [i['filename'] for i in file_infos if\n+                           i['year_list_style'][holder_name]]\n+        if len(year_list_style) > 0:\n+            print(\"%4d with '%s'\" % (len(year_list_style),\n+                                     holder_name.replace('\\n', '\\\\n')))\n+            print_filenames(year_list_style, verbose)\n+    print('')\n+    print(SEPARATOR)\n+    print('Copyrights with no \"(c)\" style:\\ne.g. \"Copyright\" and \"<year>\" or '\n+          '\"<startYear>-<endYear>\":\\n')\n+    for holder_name in EXPECTED_HOLDER_NAMES:\n+        without_c_style = [i['filename'] for i in file_infos if\n+                           i['without_c_style'][holder_name]]\n+        if len(without_c_style) > 0:\n+            print(\"%4d with '%s'\" % (len(without_c_style),\n+                                     holder_name.replace('\\n', '\\\\n')))\n+            print_filenames(without_c_style, verbose)\n+\n+    print('')\n+    print(SEPARATOR)\n+\n+    unclassified_copyrights = [i['filename'] for i in file_infos if\n+                               i['classified_copyrights'] < i['all_copyrights']]\n+    print(\"%d with unexpected copyright holder names\" %\n+          len(unclassified_copyrights))\n+    print_filenames(unclassified_copyrights, verbose)\n+    print(SEPARATOR)\n+\n+def exec_report(base_directory, verbose):\n+    filenames = get_filenames_to_examine(base_directory)\n+    file_infos = [gather_file_info(f) for f in filenames]\n+    print_report(file_infos, verbose)\n+\n+################################################################################\n+# report cmd\n+################################################################################\n+\n+REPORT_USAGE = \"\"\"\n+Produces a report of all copyright header notices found inside the source files\n+of a repository.\n+\n+Usage:\n+    $ ./copyright_header.py report <base_directory> [verbose]\n+\n+Arguments:\n+    <base_directory> - The base directory of a bitcoin source code repository.\n+    [verbose] - Includes a list of every file of each subcategory in the report.\n+\"\"\"\n+\n+def report_cmd(argv):\n+    if len(argv) == 2:\n+        sys.exit(REPORT_USAGE)\n+\n+    base_directory = argv[2]\n+    if not os.path.exists(base_directory):\n+        sys.exit(\"*** bad <base_directory>: %s\" % base_directory)\n+\n+    if len(argv) == 3:\n+        verbose = False\n+    elif argv[3] == 'verbose':\n+        verbose = True\n+    else:\n+        sys.exit(\"*** unknown argument: %s\" % argv[2])\n+\n+    exec_report(base_directory, verbose)\n+\n+################################################################################\n+# query git for year of last change\n+################################################################################\n+\n+GIT_LOG_CMD = \"git log --pretty=format:%%ai %s\"\n+\n+def call_git_log(filename):\n+    out = subprocess.check_output((GIT_LOG_CMD % filename).split(' '))\n+    return out.decode(\"utf-8\").split('\\n')\n+\n+def get_git_change_years(filename):\n+    git_log_lines = call_git_log(filename)\n+    if len(git_log_lines) == 0:\n+        return [datetime.date.today().year]\n+    # timestamp is in ISO 8601 format. e.g. \"2016-09-05 14:25:32 -0600\"\n+    return [line.split(' ')[0].split('-')[0] for line in git_log_lines]\n+\n+def get_most_recent_git_change_year(filename):\n+    return max(get_git_change_years(filename))\n+\n+################################################################################\n+# read and write to file\n+################################################################################\n+\n+def read_file_lines(filename):\n+    f = open(filename, 'r', encoding=\"utf8\")\n+    file_lines = f.readlines()\n+    f.close()\n+    return file_lines\n+\n+def write_file_lines(filename, file_lines):\n+    f = open(filename, 'w', encoding=\"utf8\")\n+    f.write(''.join(file_lines))\n+    f.close()\n+\n+################################################################################\n+# update header years execution\n+################################################################################\n+\n+COPYRIGHT = r'Copyright \\(c\\)'\n+YEAR = \"20[0-9][0-9]\"\n+YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n+HOLDER = 'The Bitcoin Core developers'\n+UPDATEABLE_LINE_COMPILED = re.compile(' '.join([COPYRIGHT, YEAR_RANGE, HOLDER]))\n+\n+def get_updatable_copyright_line(file_lines):\n+    index = 0\n+    for line in file_lines:\n+        if UPDATEABLE_LINE_COMPILED.search(line) is not None:\n+            return index, line\n+        index = index + 1\n+    return None, None\n+\n+def parse_year_range(year_range):\n+    year_split = year_range.split('-')\n+    start_year = year_split[0]\n+    if len(year_split) == 1:\n+        return start_year, start_year\n+    return start_year, year_split[1]\n+\n+def year_range_to_str(start_year, end_year):\n+    if start_year == end_year:\n+        return start_year\n+    return \"%s-%s\" % (start_year, end_year)\n+\n+def create_updated_copyright_line(line, last_git_change_year):\n+    copyright_splitter = 'Copyright (c) '\n+    copyright_split = line.split(copyright_splitter)\n+    # Preserve characters on line that are ahead of the start of the copyright\n+    # notice - they are part of the comment block and vary from file-to-file.\n+    before_copyright = copyright_split[0]\n+    after_copyright = copyright_split[1]\n+\n+    space_split = after_copyright.split(' ')\n+    year_range = space_split[0]\n+    start_year, end_year = parse_year_range(year_range)\n+    if end_year == last_git_change_year:\n+        return line\n+    return (before_copyright + copyright_splitter +\n+            year_range_to_str(start_year, last_git_change_year) + ' ' +\n+            ' '.join(space_split[1:]))\n+\n+def update_updatable_copyright(filename):\n+    file_lines = read_file_lines(filename)\n+    index, line = get_updatable_copyright_line(file_lines)\n+    if not line:\n+        print_file_action_message(filename, \"No updatable copyright.\")\n+        return\n+    last_git_change_year = get_most_recent_git_change_year(filename)\n+    new_line = create_updated_copyright_line(line, last_git_change_year)\n+    if line == new_line:\n+        print_file_action_message(filename, \"Copyright up-to-date.\")\n+        return\n+    file_lines[index] = new_line\n+    write_file_lines(filename, file_lines)\n+    print_file_action_message(filename,\n+                              \"Copyright updated! -> %s\" % last_git_change_year)\n+\n+def exec_update_header_year(base_directory):\n+    for filename in get_filenames_to_examine(base_directory):\n+        update_updatable_copyright(filename)\n+\n+################################################################################\n+# update cmd\n+################################################################################\n+\n+UPDATE_USAGE = \"\"\"\n+Updates all the copyright headers of \"The Bitcoin Core developers\" which were\n+changed in a year more recent than is listed. For example:\n+\n+// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n+\n+will be updated to:\n+\n+// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n+\n+where <lastModifiedYear> is obtained from the 'git log' history.\n+\n+This subcommand also handles copyright headers that have only a single year. In those cases:\n+\n+// Copyright (c) <year> The Bitcoin Core developers\n+\n+will be updated to:\n+\n+// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n+\n+where the update is appropriate.\n+\n+Usage:\n+    $ ./copyright_header.py update <base_directory>\n+\n+Arguments:\n+    <base_directory> - The base directory of a bitcoin source code repository.\n+\"\"\"\n+\n+def print_file_action_message(filename, action):\n+    print(\"%-52s %s\" % (filename, action))\n+\n+def update_cmd(argv):\n+    if len(argv) != 3:\n+        sys.exit(UPDATE_USAGE)\n+\n+    base_directory = argv[2]\n+    if not os.path.exists(base_directory):\n+        sys.exit(\"*** bad base_directory: %s\" % base_directory)\n+    exec_update_header_year(base_directory)\n+\n+################################################################################\n+# inserted copyright header format\n+################################################################################\n+\n+def get_header_lines(header, start_year, end_year):\n+    lines = header.split('\\n')[1:-1]\n+    lines[0] = lines[0] % year_range_to_str(start_year, end_year)\n+    return [line + '\\n' for line in lines]\n+\n+CPP_HEADER = '''\n+// Copyright (c) %s The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+def get_cpp_header_lines_to_insert(start_year, end_year):\n+    return reversed(get_header_lines(CPP_HEADER, start_year, end_year))\n+\n+SCRIPT_HEADER = '''\n+# Copyright (c) %s The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+def get_script_header_lines_to_insert(start_year, end_year):\n+    return reversed(get_header_lines(SCRIPT_HEADER, start_year, end_year))\n+\n+################################################################################\n+# query git for year of last change\n+################################################################################\n+\n+def get_git_change_year_range(filename):\n+    years = get_git_change_years(filename)\n+    return min(years), max(years)\n+\n+################################################################################\n+# check for existing core copyright\n+################################################################################\n+\n+def file_already_has_core_copyright(file_lines):\n+    index, _ = get_updatable_copyright_line(file_lines)\n+    return index is not None\n+\n+################################################################################\n+# insert header execution\n+################################################################################\n+\n+def file_has_hashbang(file_lines):\n+    if len(file_lines) < 1:\n+        return False\n+    if len(file_lines[0]) <= 2:\n+        return False\n+    return file_lines[0][:2] == '#!'\n+\n+def insert_script_header(filename, file_lines, start_year, end_year):\n+    if file_has_hashbang(file_lines):\n+        insert_idx = 1\n+    else:\n+        insert_idx = 0\n+    header_lines = get_script_header_lines_to_insert(start_year, end_year)\n+    for line in header_lines:\n+        file_lines.insert(insert_idx, line)\n+    write_file_lines(filename, file_lines)\n+\n+def insert_cpp_header(filename, file_lines, start_year, end_year):\n+    file_lines.insert(0, '\\n')\n+    header_lines = get_cpp_header_lines_to_insert(start_year, end_year)\n+    for line in header_lines:\n+        file_lines.insert(0, line)\n+    write_file_lines(filename, file_lines)\n+\n+def exec_insert_header(filename, style):\n+    file_lines = read_file_lines(filename)\n+    if file_already_has_core_copyright(file_lines):\n+        sys.exit('*** %s already has a copyright by The Bitcoin Core developers'\n+                 % (filename))\n+    start_year, end_year = get_git_change_year_range(filename)\n+    if style in ['python', 'shell']:\n+        insert_script_header(filename, file_lines, start_year, end_year)\n+    else:\n+        insert_cpp_header(filename, file_lines, start_year, end_year)\n+\n+################################################################################\n+# insert cmd\n+################################################################################\n+\n+INSERT_USAGE = \"\"\"\n+Inserts a copyright header for \"The Bitcoin Core developers\" at the top of the\n+file in either Python or C++ style as determined by the file extension. If the\n+file is a Python file and it has a '#!' starting the first line, the header is\n+inserted in the line below it.\n+\n+The copyright dates will be set to be:\n+\n+\"<year_introduced>-<current_year>\"\n+\n+where <year_introduced> is according to the 'git log' history. If\n+<year_introduced> is equal to <current_year>, the date will be set to be:\n+\n+\"<current_year>\"\n+\n+If the file already has a copyright for \"The Bitcoin Core developers\", the\n+script will exit.\n+\n+Usage:\n+    $ ./copyright_header.py insert <file>\n+\n+Arguments:\n+    <file> - A source file in the bitcoin repository.\n+\"\"\"\n+\n+def insert_cmd(argv):\n+    if len(argv) != 3:\n+        sys.exit(INSERT_USAGE)\n+\n+    filename = argv[2]\n+    if not os.path.isfile(filename):\n+        sys.exit(\"*** bad filename: %s\" % filename)\n+    _, extension = os.path.splitext(filename)\n+    if extension not in ['.h', '.cpp', '.cc', '.c', '.py', '.sh']:\n+        sys.exit(\"*** cannot insert for file extension %s\" % extension)\n+\n+    if extension == '.py':\n+        style = 'python'\n+    elif extension == '.sh':\n+        style = 'shell'\n+    else:\n+        style = 'cpp'\n+    exec_insert_header(filename, style)\n+\n+################################################################################\n+# UI\n+################################################################################\n+\n+USAGE = \"\"\"\n+copyright_header.py - utilities for managing copyright headers of 'The Bitcoin\n+Core developers' in repository source files.\n+\n+Usage:\n+    $ ./copyright_header <subcommand>\n+\n+Subcommands:\n+    report\n+    update\n+    insert\n+\n+To see subcommand usage, run them without arguments.\n+\"\"\"\n+\n+SUBCOMMANDS = ['report', 'update', 'insert']\n+\n+if __name__ == \"__main__\":\n+    if len(sys.argv) == 1:\n+        sys.exit(USAGE)\n+    subcommand = sys.argv[1]\n+    if subcommand not in SUBCOMMANDS:\n+        sys.exit(USAGE)\n+    if subcommand == 'report':\n+        report_cmd(sys.argv)\n+    elif subcommand == 'update':\n+        update_cmd(sys.argv)\n+    elif subcommand == 'insert':\n+        insert_cmd(sys.argv)"
      },
      {
        "sha": "b6414a551f8707a032e3f310ea9d1f9badec20e2",
        "filename": "contrib/devtools/fix-copyright-headers.py",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/devtools/fix-copyright-headers.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/devtools/fix-copyright-headers.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/fix-copyright-headers.py?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,46 +0,0 @@\n-#!/usr/bin/env python\n-'''\n-Run this script to update all the copyright headers of files\n-that were changed this year.\n-\n-For example:\n-\n-// Copyright (c) 2009-2012 The Bitcoin Core developers\n-\n-it will change it to\n-\n-// Copyright (c) 2009-2015 The Bitcoin Core developers\n-'''\n-import os\n-import time\n-import re\n-\n-year = time.gmtime()[0]\n-CMD_GIT_DATE = 'git log --format=@%%at -1 %s | date +\"%%Y\" -u -f -'\n-CMD_REGEX= \"perl -pi -e 's/(20\\d\\d)(?:-20\\d\\d)? The Bitcoin/$1-%s The Bitcoin/' %s\"\n-REGEX_CURRENT= re.compile(\"%s The Bitcoin\" % year)\n-CMD_LIST_FILES= \"find %s | grep %s\"\n-\n-FOLDERS = [\"./qa\", \"./src\"]\n-EXTENSIONS = [\".cpp\",\".h\", \".py\"]\n-\n-def get_git_date(file_path):\n-  r = os.popen(CMD_GIT_DATE % file_path)\n-  for l in r:\n-    # Result is one line, so just return\n-    return l.replace(\"\\n\",\"\")\n-  return \"\"\n-\n-n=1\n-for folder in FOLDERS:\n-  for extension in EXTENSIONS:\n-    for file_path in os.popen(CMD_LIST_FILES % (folder, extension)):\n-      file_path = os.getcwd() + file_path[1:-1]\n-      if file_path.endswith(extension):\n-        git_date = get_git_date(file_path)\n-        if str(year) == git_date:\n-          # Only update if current year is not found\n-          if REGEX_CURRENT.search(open(file_path, \"r\").read()) is None:\n-            print n,\"Last git edit\", git_date, \"-\", file_path\n-            os.popen(CMD_REGEX % (year,file_path))\n-            n = n + 1"
      },
      {
        "sha": "aa65953d838585aff4f33081b30c1cdb984b2e15",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,36 @@\n+#!/usr/bin/env bash\n+# Copyright (c) 2016-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n+BUILDDIR=${BUILDDIR:-$TOPDIR}\n+\n+BINDIR=${BINDIR:-$BUILDDIR/src}\n+MANDIR=${MANDIR:-$TOPDIR/doc/man}\n+\n+BITCOIND=${BITCOIND:-$BINDIR/bitcoind}\n+BITCOINCLI=${BITCOINCLI:-$BINDIR/bitcoin-cli}\n+BITCOINTX=${BITCOINTX:-$BINDIR/bitcoin-tx}\n+WALLET_TOOL=${WALLET_TOOL:-$BINDIR/bitcoin-wallet}\n+BITCOINQT=${BITCOINQT:-$BINDIR/qt/bitcoin-qt}\n+\n+[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n+\n+# The autodetected version git tag can screw up manpage output a little bit\n+read -r -a BTCVER <<< \"$($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }')\"\n+\n+# Create a footer file with copyright content.\n+# This gets autodetected fine for bitcoind if --version-string is not set,\n+# but has different outcomes for bitcoin-qt and bitcoin-cli.\n+echo \"[COPYRIGHT]\" > footer.h2m\n+$BITCOIND --version | sed -n '1!p' >> footer.h2m\n+\n+for cmd in $BITCOIND $BITCOINCLI $BITCOINTX $WALLET_TOOL $BITCOINQT; do\n+  cmdname=\"${cmd##*/}\"\n+  help2man -N --version-string=${BTCVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n+  sed -i \"s/\\\\\\-${BTCVER[1]}//g\" ${MANDIR}/${cmdname}.1\n+done\n+\n+rm -f footer.h2m"
      },
      {
        "sha": "1cb82fe6826c74af49cf381ecaf5381ab210bdb7",
        "filename": "contrib/devtools/git-subtree-check.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/devtools/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/devtools/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/git-subtree-check.sh?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,74 +0,0 @@\n-#!/bin/sh\n-\n-DIR=\"$1\"\n-COMMIT=\"$2\"\n-if [ -z \"$COMMIT\" ]; then\n-    COMMIT=HEAD\n-fi\n-\n-# Taken from git-subtree (Copyright (C) 2009 Avery Pennarun <apenwarr@gmail.com>)\n-find_latest_squash()\n-{\n-\tdir=\"$1\"\n-\tsq=\n-\tmain=\n-\tsub=\n-\tgit log --grep=\"^git-subtree-dir: $dir/*\\$\" \\\n-\t\t--pretty=format:'START %H%n%s%n%n%b%nEND%n' \"$COMMIT\" |\n-\twhile read a b junk; do\n-\t\tcase \"$a\" in\n-\t\t\tSTART) sq=\"$b\" ;;\n-\t\t\tgit-subtree-mainline:) main=\"$b\" ;;\n-\t\t\tgit-subtree-split:) sub=\"$b\" ;;\n-\t\t\tEND)\n-\t\t\t\tif [ -n \"$sub\" ]; then\n-\t\t\t\t\tif [ -n \"$main\" ]; then\n-\t\t\t\t\t\t# a rejoin commit?\n-\t\t\t\t\t\t# Pretend its sub was a squash.\n-\t\t\t\t\t\tsq=\"$sub\"\n-\t\t\t\t\tfi\n-\t\t\t\t\techo \"$sq\" \"$sub\"\n-\t\t\t\t\tbreak\n-\t\t\t\tfi\n-\t\t\t\tsq=\n-\t\t\t\tmain=\n-\t\t\t\tsub=\n-\t\t\t\t;;\n-\t\tesac\n-\tdone\n-}\n-\n-latest_squash=\"$(find_latest_squash \"$DIR\")\"\n-if [ -z \"$latest_squash\" ]; then\n-    echo \"ERROR: $DIR is not a subtree\" >&2\n-    exit 2\n-fi\n-\n-set $latest_squash\n-old=$1\n-rev=$2\n-if [ \"d$(git cat-file -t $rev 2>/dev/null)\" != dcommit ]; then\n-    echo \"ERROR: subtree commit $rev unavailable. Fetch/update the subtree repository\" >&2\n-    exit 2\n-fi\n-tree_subtree=$(git show -s --format=\"%T\" $rev)\n-echo \"$DIR in $COMMIT was last updated to upstream commit $rev (tree $tree_subtree)\"\n-tree_actual=$(git ls-tree -d \"$COMMIT\" \"$DIR\" | head -n 1)\n-if [ -z \"$tree_actual\" ]; then\n-    echo \"FAIL: subtree directory $DIR not found in $COMMIT\" >&2\n-    exit 1\n-fi\n-set $tree_actual\n-tree_actual_type=$2\n-tree_actual_tree=$3\n-echo \"$DIR in $COMMIT currently refers to $tree_actual_type $tree_actual_tree\"\n-if [ \"d$tree_actual_type\" != \"dtree\" ]; then\n-    echo \"FAIL: subtree directory $DIR is not a tree in $COMMIT\" >&2\n-    exit 1\n-fi\n-if [ \"$tree_actual_tree\" != \"$tree_subtree\" ]; then\n-    git diff-tree $tree_actual_tree $tree_subtree >&2\n-    echo \"FAIL: subtree directory tree doesn't match subtree commit tree\" >&2\n-    exit 1\n-fi\n-echo \"GOOD\""
      },
      {
        "sha": "f82362fe417e3f2e7ed46282420c823414b8c417",
        "filename": "contrib/devtools/github-merge.py",
        "status": "removed",
        "additions": 0,
        "deletions": 251,
        "changes": 251,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,251 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2016 Bitcoin Core Developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# This script will locally construct a merge commit for a pull request on a\n-# github repository, inspect it, sign it and optionally push it.\n-\n-# The following temporary branches are created/overwritten and deleted:\n-# * pull/$PULL/base (the current master we're merging onto)\n-# * pull/$PULL/head (the current state of the remote pull request)\n-# * pull/$PULL/merge (github's merge)\n-# * pull/$PULL/local-merge (our merge)\n-\n-# In case of a clean merge that is accepted by the user, the local branch with\n-# name $BRANCH is overwritten with the merged result, and optionally pushed.\n-from __future__ import division,print_function,unicode_literals\n-import os,sys\n-from sys import stdin,stdout,stderr\n-import argparse\n-import subprocess\n-import json,codecs\n-try:\n-    from urllib.request import Request,urlopen\n-except:\n-    from urllib2 import Request,urlopen\n-\n-# External tools (can be overridden using environment)\n-GIT = os.getenv('GIT','git')\n-BASH = os.getenv('BASH','bash')\n-\n-# OS specific configuration for terminal attributes\n-ATTR_RESET = ''\n-ATTR_PR = ''\n-COMMIT_FORMAT = '%h %s (%an)%d'\n-if os.name == 'posix': # if posix, assume we can use basic terminal escapes\n-    ATTR_RESET = '\\033[0m'\n-    ATTR_PR = '\\033[1;36m'\n-    COMMIT_FORMAT = '%C(bold blue)%h%Creset %s %C(cyan)(%an)%Creset%C(green)%d%Creset'\n-\n-def git_config_get(option, default=None):\n-    '''\n-    Get named configuration option from git repository.\n-    '''\n-    try:\n-        return subprocess.check_output([GIT,'config','--get',option]).rstrip().decode('utf-8')\n-    except subprocess.CalledProcessError as e:\n-        return default\n-\n-def retrieve_pr_info(repo,pull):\n-    '''\n-    Retrieve pull request information from github.\n-    Return None if no title can be found, or an error happens.\n-    '''\n-    try:\n-        req = Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n-        result = urlopen(req)\n-        reader = codecs.getreader('utf-8')\n-        obj = json.load(reader(result))\n-        return obj\n-    except Exception as e:\n-        print('Warning: unable to retrieve pull information from github: %s' % e)\n-        return None\n-\n-def ask_prompt(text):\n-    print(text,end=\" \",file=stderr)\n-    stderr.flush()\n-    reply = stdin.readline().rstrip()\n-    print(\"\",file=stderr)\n-    return reply\n-\n-def parse_arguments():\n-    epilog = '''\n-        In addition, you can set the following git configuration variables:\n-        githubmerge.repository (mandatory),\n-        user.signingkey (mandatory),\n-        githubmerge.host (default: git@github.com),\n-        githubmerge.branch (no default),\n-        githubmerge.testcmd (default: none).\n-    '''\n-    parser = argparse.ArgumentParser(description='Utility to merge, sign and push github pull requests',\n-            epilog=epilog)\n-    parser.add_argument('pull', metavar='PULL', type=int, nargs=1,\n-        help='Pull request ID to merge')\n-    parser.add_argument('branch', metavar='BRANCH', type=str, nargs='?',\n-        default=None, help='Branch to merge against (default: githubmerge.branch setting, or base branch for pull, or \\'master\\')')\n-    return parser.parse_args()\n-\n-def main():\n-    # Extract settings from git repo\n-    repo = git_config_get('githubmerge.repository')\n-    host = git_config_get('githubmerge.host','git@github.com')\n-    opt_branch = git_config_get('githubmerge.branch',None)\n-    testcmd = git_config_get('githubmerge.testcmd')\n-    signingkey = git_config_get('user.signingkey')\n-    if repo is None:\n-        print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n-        print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n-        exit(1)\n-    if signingkey is None:\n-        print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n-        print(\"git config --global user.signingkey <key>\",file=stderr)\n-        exit(1)\n-\n-    host_repo = host+\":\"+repo # shortcut for push/pull target\n-\n-    # Extract settings from command line\n-    args = parse_arguments()\n-    pull = str(args.pull[0])\n-\n-    # Receive pull information from github\n-    info = retrieve_pr_info(repo,pull)\n-    if info is None:\n-        exit(1)\n-    title = info['title']\n-    # precedence order for destination branch argument:\n-    #   - command line argument\n-    #   - githubmerge.branch setting\n-    #   - base branch for pull (as retrieved from github)\n-    #   - 'master'\n-    branch = args.branch or opt_branch or info['base']['ref'] or 'master'\n-\n-    # Initialize source branches\n-    head_branch = 'pull/'+pull+'/head'\n-    base_branch = 'pull/'+pull+'/base'\n-    merge_branch = 'pull/'+pull+'/merge'\n-    local_merge_branch = 'pull/'+pull+'/local-merge'\n-\n-    devnull = open(os.devnull,'w')\n-    try:\n-        subprocess.check_call([GIT,'checkout','-q',branch])\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n-        exit(3)\n-    try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*'])\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n-    try:\n-        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n-    try:\n-        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n-    try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/heads/'+branch+':refs/heads/'+base_branch])\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find branch %s on %s.\" % (branch,host_repo), file=stderr)\n-        exit(3)\n-    subprocess.check_call([GIT,'checkout','-q',base_branch])\n-    subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n-    subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n-\n-    try:\n-        # Create unsigned merge commit.\n-        if title:\n-            firstline = 'Merge #%s: %s' % (pull,title)\n-        else:\n-            firstline = 'Merge #%s' % (pull,)\n-        message = firstline + '\\n\\n'\n-        message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%h %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n-        try:\n-            subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','-m',message.encode('utf-8'),head_branch])\n-        except subprocess.CalledProcessError as e:\n-            print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n-            subprocess.check_call([GIT,'merge','--abort'])\n-            exit(4)\n-        logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n-        if logmsg.rstrip() != firstline.rstrip():\n-            print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n-            exit(4)\n-\n-        print('%s#%s%s %s %sinto %s%s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title,ATTR_RESET+ATTR_PR,branch,ATTR_RESET))\n-        subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n-        print()\n-        # Run test command if configured.\n-        if testcmd:\n-            # Go up to the repository's root.\n-            toplevel = subprocess.check_output([GIT,'rev-parse','--show-toplevel']).strip()\n-            os.chdir(toplevel)\n-            if subprocess.call(testcmd,shell=True):\n-                print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n-                exit(5)\n-\n-            # Show the created merge.\n-            diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n-            subprocess.check_call([GIT,'diff',base_branch+'..'+local_merge_branch])\n-            if diff:\n-                print(\"WARNING: merge differs from github!\",file=stderr)\n-                reply = ask_prompt(\"Type 'ignore' to continue.\")\n-                if reply.lower() == 'ignore':\n-                    print(\"Difference with github ignored.\",file=stderr)\n-                else:\n-                    exit(6)\n-            reply = ask_prompt(\"Press 'd' to accept the diff.\")\n-            if reply.lower() == 'd':\n-                print(\"Diff accepted.\",file=stderr)\n-            else:\n-                print(\"ERROR: Diff rejected.\",file=stderr)\n-                exit(6)\n-        else:\n-            # Verify the result manually.\n-            print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n-            print(\"Run 'git diff HEAD~' to show the changes being merged.\",file=stderr)\n-            print(\"Type 'exit' when done.\",file=stderr)\n-            if os.path.isfile('/etc/debian_version'): # Show pull number on Debian default prompt\n-                os.putenv('debian_chroot',pull)\n-            subprocess.call([BASH,'-i'])\n-            reply = ask_prompt(\"Type 'm' to accept the merge.\")\n-            if reply.lower() == 'm':\n-                print(\"Merge accepted.\",file=stderr)\n-            else:\n-                print(\"ERROR: Merge rejected.\",file=stderr)\n-                exit(7)\n-\n-        # Sign the merge commit.\n-        reply = ask_prompt(\"Type 's' to sign off on the merge.\")\n-        if reply == 's':\n-            try:\n-                subprocess.check_call([GIT,'commit','-q','--gpg-sign','--amend','--no-edit'])\n-            except subprocess.CalledProcessError as e:\n-                print(\"Error signing, exiting.\",file=stderr)\n-                exit(1)\n-        else:\n-            print(\"Not signing off on merge, exiting.\",file=stderr)\n-            exit(1)\n-\n-        # Put the result in branch.\n-        subprocess.check_call([GIT,'checkout','-q',branch])\n-        subprocess.check_call([GIT,'reset','-q','--hard',local_merge_branch])\n-    finally:\n-        # Clean up temporary branches.\n-        subprocess.call([GIT,'checkout','-q',branch])\n-        subprocess.call([GIT,'branch','-q','-D',head_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',base_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',merge_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',local_merge_branch],stderr=devnull)\n-\n-    # Push the result.\n-    reply = ask_prompt(\"Type 'push' to push the result to %s, branch %s.\" % (host_repo,branch))\n-    if reply.lower() == 'push':\n-        subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n-\n-if __name__ == '__main__':\n-    main()\n-"
      },
      {
        "sha": "e9481dbbcf54159b08f8a27daf4905826b03804e",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "modified",
        "additions": 22,
        "deletions": 21,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,4 +1,7 @@\n-#!/usr/bin/env python\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n Run this script every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n #pngcrush -brute -ow -rem gAMA -rem cHRM -rem iCCP -rem sRGB -rem alla -rem text\n@@ -7,7 +10,7 @@\n import sys\n import subprocess\n import hashlib\n-from PIL import Image\n+from PIL import Image  # pip3 install Pillow\n \n def file_hash(filename):\n     '''Return hash of raw file contents'''\n@@ -24,7 +27,7 @@ def content_hash(filename):\n pngcrush = 'pngcrush'\n git = 'git'\n folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n-basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel']).rstrip('\\n')\n+basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel'], universal_newlines=True, encoding='utf8').rstrip('\\n')\n totalSaveBytes = 0\n noHashChange = True\n \n@@ -34,42 +37,40 @@ def content_hash(filename):\n     for file in os.listdir(absFolder):\n         extension = os.path.splitext(file)[1]\n         if extension.lower() == '.png':\n-            print(\"optimizing \"+file+\"...\"),\n+            print(\"optimizing {}...\".format(file), end =' ')\n             file_path = os.path.join(absFolder, file)\n-            fileMetaMap = {'file' : file, 'osize': os.path.getsize(file_path), 'sha256Old' : file_hash(file_path)};\n+            fileMetaMap = {'file' : file, 'osize': os.path.getsize(file_path), 'sha256Old' : file_hash(file_path)}\n             fileMetaMap['contentHashPre'] = content_hash(file_path)\n-        \n-            pngCrushOutput = \"\"\n+\n             try:\n-                pngCrushOutput = subprocess.check_output(\n-                        [pngcrush, \"-brute\", \"-ow\", \"-rem\", \"gAMA\", \"-rem\", \"cHRM\", \"-rem\", \"iCCP\", \"-rem\", \"sRGB\", \"-rem\", \"alla\", \"-rem\", \"text\", file_path],\n-                        stderr=subprocess.STDOUT).rstrip('\\n')\n+                subprocess.call([pngcrush, \"-brute\", \"-ow\", \"-rem\", \"gAMA\", \"-rem\", \"cHRM\", \"-rem\", \"iCCP\", \"-rem\", \"sRGB\", \"-rem\", \"alla\", \"-rem\", \"text\", file_path],\n+                                stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)\n             except:\n-                print \"pngcrush is not installed, aborting...\"\n+                print(\"pngcrush is not installed, aborting...\")\n                 sys.exit(0)\n-        \n+\n             #verify\n-            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT):\n-                print \"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\"\n+            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT, universal_newlines=True, encoding='utf8'):\n+                print(\"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\")\n                 sys.exit(1)\n-            \n+\n             fileMetaMap['sha256New'] = file_hash(file_path)\n             fileMetaMap['contentHashPost'] = content_hash(file_path)\n \n             if fileMetaMap['contentHashPre'] != fileMetaMap['contentHashPost']:\n-                print \"Image contents of PNG file \"+file+\" before and after crushing don't match\"\n+                print(\"Image contents of PNG file {} before and after crushing don't match\".format(file))\n                 sys.exit(1)\n \n             fileMetaMap['psize'] = os.path.getsize(file_path)\n             outputArray.append(fileMetaMap)\n-            print(\"done\\n\"),\n+            print(\"done\")\n \n-print \"summary:\\n+++++++++++++++++\"\n+print(\"summary:\\n+++++++++++++++++\")\n for fileDict in outputArray:\n     oldHash = fileDict['sha256Old']\n     newHash = fileDict['sha256New']\n     totalSaveBytes += fileDict['osize'] - fileDict['psize']\n     noHashChange = noHashChange and (oldHash == newHash)\n-    print fileDict['file']+\"\\n  size diff from: \"+str(fileDict['osize'])+\" to: \"+str(fileDict['psize'])+\"\\n  old sha256: \"+oldHash+\"\\n  new sha256: \"+newHash+\"\\n\"\n-    \n-print \"completed. Checksum stable: \"+str(noHashChange)+\". Total reduction: \"+str(totalSaveBytes)+\" bytes\"\n+    print(fileDict['file']+\"\\n  size diff from: \"+str(fileDict['osize'])+\" to: \"+str(fileDict['psize'])+\"\\n  old sha256: \"+oldHash+\"\\n  new sha256: \"+newHash+\"\\n\")\n+\n+print(\"completed. Checksum stable: \"+str(noHashChange)+\". Total reduction: \"+str(totalSaveBytes)+\" bytes\")"
      },
      {
        "sha": "21d64e893db3d6dc90e7a5221532d479284ff7e4",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 111,
        "deletions": 36,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,54 +1,58 @@\n-#!/usr/bin/python2\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n-Perform basic ELF security checks on a series of executables.\n+Perform basic security checks on a series of executables.\n Exit status will be 0 if successful, and the program will be silent.\n Otherwise the exit status will be 1 and it will log which executables failed which checks.\n-Needs `readelf` (for ELF) and `objdump` (for PE).\n+Needs `readelf` (for ELF), `objdump` (for PE) and `otool` (for MACHO).\n '''\n-from __future__ import division,print_function,unicode_literals\n import subprocess\n import sys\n import os\n \n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n+NONFATAL = {} # checks which are non-fatal for now but only generate a warning\n \n def check_ELF_PIE(executable):\n     '''\n     Check for position independent executable (PIE), allowing for address space randomization.\n     '''\n-    p = subprocess.Popen([READELF_CMD, '-h', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([READELF_CMD, '-h', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n \n     ok = False\n-    for line in stdout.split(b'\\n'):\n+    for line in stdout.splitlines():\n         line = line.split()\n-        if len(line)>=2 and line[0] == b'Type:' and line[1] == b'DYN':\n+        if len(line)>=2 and line[0] == 'Type:' and line[1] == 'DYN':\n             ok = True\n     return ok\n \n def get_ELF_program_headers(executable):\n     '''Return type and flags for ELF program headers'''\n-    p = subprocess.Popen([READELF_CMD, '-l', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([READELF_CMD, '-l', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n     in_headers = False\n     count = 0\n     headers = []\n-    for line in stdout.split(b'\\n'):\n-        if line.startswith(b'Program Headers:'):\n+    for line in stdout.splitlines():\n+        if line.startswith('Program Headers:'):\n             in_headers = True\n-        if line == b'':\n+        if line == '':\n             in_headers = False\n         if in_headers:\n             if count == 1: # header line\n-                ofs_typ = line.find(b'Type')\n-                ofs_offset = line.find(b'Offset')\n-                ofs_flags = line.find(b'Flg')\n-                ofs_align = line.find(b'Align')\n+                ofs_typ = line.find('Type')\n+                ofs_offset = line.find('Offset')\n+                ofs_flags = line.find('Flg')\n+                ofs_align = line.find('Align')\n                 if ofs_typ == -1 or ofs_offset == -1 or ofs_flags == -1 or ofs_align  == -1:\n                     raise ValueError('Cannot parse elfread -lW output')\n             elif count > 1:\n@@ -65,9 +69,9 @@ def check_ELF_NX(executable):\n     have_wx = False\n     have_gnu_stack = False\n     for (typ, flags) in get_ELF_program_headers(executable):\n-        if typ == b'GNU_STACK':\n+        if typ == 'GNU_STACK':\n             have_gnu_stack = True\n-        if b'W' in flags and b'E' in flags: # section is both writable and executable\n+        if 'W' in flags and 'E' in flags: # section is both writable and executable\n             have_wx = True\n     return have_gnu_stack and not have_wx\n \n@@ -83,57 +87,115 @@ def check_ELF_RELRO(executable):\n         # This does not affect security: the permission flags of the GNU_RELRO program header are ignored, the PT_LOAD header determines the effective permissions.\n         # However, the dynamic linker need to write to this area so these are RW.\n         # Glibc itself takes care of mprotecting this area R after relocations are finished.\n-        # See also http://permalink.gmane.org/gmane.comp.gnu.binutils/71347\n-        if typ == b'GNU_RELRO':\n+        # See also https://marc.info/?l=binutils&m=1498883354122353\n+        if typ == 'GNU_RELRO':\n             have_gnu_relro = True\n \n     have_bindnow = False\n-    p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n-    for line in stdout.split(b'\\n'):\n+    for line in stdout.splitlines():\n         tokens = line.split()\n-        if len(tokens)>1 and tokens[1] == b'(BIND_NOW)' or (len(tokens)>2 and tokens[1] == b'(FLAGS)' and b'BIND_NOW' in tokens[2]):\n+        if len(tokens)>1 and tokens[1] == '(BIND_NOW)' or (len(tokens)>2 and tokens[1] == '(FLAGS)' and 'BIND_NOW' in tokens[2:]):\n             have_bindnow = True\n     return have_gnu_relro and have_bindnow\n \n def check_ELF_Canary(executable):\n     '''\n     Check for use of stack canary\n     '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n     ok = False\n-    for line in stdout.split(b'\\n'):\n-        if b'__stack_chk_fail' in line:\n+    for line in stdout.splitlines():\n+        if '__stack_chk_fail' in line:\n             ok = True\n     return ok\n \n def get_PE_dll_characteristics(executable):\n     '''\n-    Get PE DllCharacteristics bits\n+    Get PE DllCharacteristics bits.\n+    Returns a tuple (arch,bits) where arch is 'i386:x86-64' or 'i386'\n+    and bits is the DllCharacteristics value.\n     '''\n-    p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n-    for line in stdout.split('\\n'):\n+    arch = ''\n+    bits = 0\n+    for line in stdout.splitlines():\n         tokens = line.split()\n+        if len(tokens)>=2 and tokens[0] == 'architecture:':\n+            arch = tokens[1].rstrip(',')\n         if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n-            return int(tokens[1],16)\n-    return 0\n+            bits = int(tokens[1],16)\n+    return (arch,bits)\n \n+IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020\n+IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE    = 0x0040\n+IMAGE_DLL_CHARACTERISTICS_NX_COMPAT       = 0x0100\n \n-def check_PE_PIE(executable):\n+def check_PE_DYNAMIC_BASE(executable):\n     '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n-    return bool(get_PE_dll_characteristics(executable) & 0x40)\n+    (arch,bits) = get_PE_dll_characteristics(executable)\n+    reqbits = IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE\n+    return (bits & reqbits) == reqbits\n+\n+# On 64 bit, must support high-entropy 64-bit address space layout randomization in addition to DYNAMIC_BASE\n+# to have secure ASLR.\n+def check_PE_HIGH_ENTROPY_VA(executable):\n+    '''PIE: DllCharacteristics bit 0x20 signifies high-entropy ASLR'''\n+    (arch,bits) = get_PE_dll_characteristics(executable)\n+    if arch == 'i386:x86-64':\n+        reqbits = IMAGE_DLL_CHARACTERISTICS_HIGH_ENTROPY_VA\n+    else: # Unnecessary on 32-bit\n+        assert(arch == 'i386')\n+        reqbits = 0\n+    return (bits & reqbits) == reqbits\n \n def check_PE_NX(executable):\n     '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n-    return bool(get_PE_dll_characteristics(executable) & 0x100)\n+    (arch,bits) = get_PE_dll_characteristics(executable)\n+    return (bits & IMAGE_DLL_CHARACTERISTICS_NX_COMPAT) == IMAGE_DLL_CHARACTERISTICS_NX_COMPAT\n+\n+def get_MACHO_executable_flags(executable):\n+    p = subprocess.Popen([OTOOL_CMD, '-vh', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+\n+    flags = []\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        # filter first two header lines\n+        if 'magic' in tokens or 'Mach' in tokens:\n+            continue\n+        # filter ncmds and sizeofcmds values\n+        flags += [t for t in tokens if not t.isdigit()]\n+    return flags\n+\n+def check_MACHO_PIE(executable) -> bool:\n+    '''\n+    Check for position independent executable (PIE), allowing for address space randomization.\n+    '''\n+    flags = get_MACHO_executable_flags(executable)\n+    if 'PIE' in flags:\n+        return True\n+    return False\n+\n+def check_MACHO_NOUNDEFS(executable) -> bool:\n+    '''\n+    Check for no undefined references.\n+    '''\n+    flags = get_MACHO_executable_flags(executable)\n+    if 'NOUNDEFS' in flags:\n+        return True\n+    return False\n \n CHECKS = {\n 'ELF': [\n@@ -143,8 +205,13 @@ def check_PE_NX(executable):\n     ('Canary', check_ELF_Canary)\n ],\n 'PE': [\n-    ('PIE', check_PE_PIE),\n+    ('DYNAMIC_BASE', check_PE_DYNAMIC_BASE),\n+    ('HIGH_ENTROPY_VA', check_PE_HIGH_ENTROPY_VA),\n     ('NX', check_PE_NX)\n+],\n+'MACHO': [\n+    ('PIE', check_MACHO_PIE),\n+    ('NOUNDEFS', check_MACHO_NOUNDEFS),\n ]\n }\n \n@@ -155,6 +222,8 @@ def identify_executable(executable):\n         return 'PE'\n     elif magic.startswith(b'\\x7fELF'):\n         return 'ELF'\n+    elif magic.startswith(b'\\xcf\\xfa'):\n+        return 'MACHO'\n     return None\n \n if __name__ == '__main__':\n@@ -168,14 +237,20 @@ def identify_executable(executable):\n                 continue\n \n             failed = []\n+            warning = []\n             for (name, func) in CHECKS[etype]:\n                 if not func(filename):\n-                    failed.append(name)\n+                    if name in NONFATAL:\n+                        warning.append(name)\n+                    else:\n+                        failed.append(name)\n             if failed:\n                 print('%s: failed %s' % (filename, ' '.join(failed)))\n                 retval = 1\n+            if warning:\n+                print('%s: warning %s' % (filename, ' '.join(warning)))\n         except IOError:\n             print('%s: cannot open' % filename)\n             retval = 1\n-    exit(retval)\n+    sys.exit(retval)\n "
      },
      {
        "sha": "92b72b1446cf6bacf92723b6a8da8786c0802557",
        "filename": "contrib/devtools/split-debug.sh.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/split-debug.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/split-debug.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/split-debug.sh.in?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-\n+set -e\n if [ $# -ne 3 ];\n     then echo \"usage: $0 <input> <stripped-binary> <debug-binary>\"\n fi"
      },
      {
        "sha": "f92d997621058edfb92356b748c5e1b36e1d0f8d",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 176,
        "deletions": 77,
        "changes": 253,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,74 +1,104 @@\n-#!/usr/bin/python2\n+#!/usr/bin/env python3\n # Copyright (c) 2014 Wladimir J. van der Laan\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n-still compatible with the minimum supported Linux distribution versions.\n+allowed gcc and glibc version symbols. This makes sure they are still compatible\n+with the minimum supported Linux distribution versions.\n \n Example usage:\n \n-    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py\n+    find ../gitian-builder/build -type f -executable | xargs python3 contrib/devtools/symbol-check.py\n '''\n-from __future__ import division, print_function, unicode_literals\n import subprocess\n import re\n import sys\n import os\n+from typing import List, Optional, Tuple\n \n-# Debian 6.0.9 (Squeeze) has:\n+# Debian 8 (Jessie) EOL: 2020. https://wiki.debian.org/DebianReleases#Production_Releases\n #\n-# - g++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=g%2B%2B)\n-# - libc version 2.11.3 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libc6)\n-# - libstdc++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libstdc%2B%2B6)\n+# - g++ version 4.9.2 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=g%2B%2B)\n+# - libc version 2.19 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=libc6)\n #\n-# Ubuntu 10.04.4 (Lucid Lynx) has:\n+# Ubuntu 16.04 (Xenial) EOL: 2024. https://wiki.ubuntu.com/Releases\n #\n-# - g++ version 4.4.3 (http://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=lucid&section=all)\n-# - libc version 2.11.1 (http://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=lucid&section=all)\n-# - libstdc++ version 4.4.3 (http://packages.ubuntu.com/search?suite=lucid&section=all&arch=any&keywords=libstdc%2B%2B&searchon=names)\n+# - g++ version 5.3.1 (https://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=xenial&section=all)\n+# - libc version 2.23.0 (https://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=xenial&section=all)\n+#\n+# CentOS 7 EOL: 2024. https://wiki.centos.org/FAQ/General\n+#\n+# - g++ version 4.8.5 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n+# - libc version 2.17 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n #\n # Taking the minimum of these as our target.\n #\n-# According to GNU ABI document (http://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n-#   GCC 4.4.0: GCC_4.4.0\n-#   GCC 4.4.2: GLIBCXX_3.4.13, CXXABI_1.3.3\n-#   (glibc)    GLIBC_2_11\n+# According to GNU ABI document (https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n+#   GCC 4.8.5: GCC_4.8.0\n+#   (glibc)    GLIBC_2_17\n #\n MAX_VERSIONS = {\n-'GCC':     (4,4,0),\n-'CXXABI':  (1,3,3),\n-'GLIBCXX': (3,4,13),\n-'GLIBC':   (2,11)\n+'GCC':       (4,8,0),\n+'GLIBC':     (2,17),\n+'LIBATOMIC': (1,0)\n }\n # See here for a description of _IO_stdin_used:\n # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n \n # Ignore symbols that are exported as part of every executable\n IGNORE_EXPORTS = {\n-b'_edata', b'_end', b'_init', b'__bss_start', b'_fini', b'_IO_stdin_used'\n+'_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr',\n+'environ', '_environ', '__environ',\n }\n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n+OTOOL_CMD = os.getenv('OTOOL', '/usr/bin/otool')\n+\n # Allowed NEEDED libraries\n-ALLOWED_LIBRARIES = {\n+ELF_ALLOWED_LIBRARIES = {\n+# bitcoind and bitcoin-qt\n+'libgcc_s.so.1', # GCC base support\n+'libc.so.6', # C library\n+'libpthread.so.0', # threading\n+'libm.so.6', # math library\n+'librt.so.1', # real-time (clock)\n+'libatomic.so.1',\n+'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n+'ld-linux.so.2', # 32-bit dynamic linker\n+'ld-linux-aarch64.so.1', # 64-bit ARM dynamic linker\n+'ld-linux-armhf.so.3', # 32-bit ARM dynamic linker\n+'ld-linux-riscv64-lp64d.so.1', # 64-bit RISC-V dynamic linker\n+# bitcoin-qt only\n+'libxcb.so.1', # part of X11\n+'libfontconfig.so.1', # font support\n+'libfreetype.so.6', # font parsing\n+'libdl.so.2' # programming interface to dynamic linker\n+}\n+ARCH_MIN_GLIBC_VER = {\n+'80386':  (2,1),\n+'X86-64': (2,2,5),\n+'ARM':    (2,4),\n+'AArch64':(2,17),\n+'RISC-V': (2,27)\n+}\n+\n+MACHO_ALLOWED_LIBRARIES = {\n # bitcoind and bitcoin-qt\n-b'libgcc_s.so.1', # GCC base support\n-b'libc.so.6', # C library\n-b'libpthread.so.0', # threading\n-b'libanl.so.1', # DNS resolve\n-b'libm.so.6', # math library\n-b'librt.so.1', # real-time (clock)\n-b'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n-b'ld-linux.so.2', # 32-bit dynamic linker\n+'libc++.1.dylib', # C++ Standard Library\n+'libSystem.B.dylib', # libc, libm, libpthread, libinfo\n # bitcoin-qt only\n-b'libX11-xcb.so.1', # part of X11\n-b'libX11.so.6', # part of X11\n-b'libxcb.so.1', # part of X11\n-b'libfontconfig.so.1', # font support\n-b'libfreetype.so.6', # font parsing\n-b'libdl.so.2' # programming interface to dynamic linker\n+'AppKit', # user interface\n+'ApplicationServices', # common application tasks.\n+'Carbon', # deprecated c back-compat API\n+'CoreFoundation', # low level func, data types\n+'CoreGraphics', # 2D rendering\n+'CoreServices', # operating system services\n+'CoreText', # interface for laying out text and handling fonts.\n+'Foundation', # base layer functionality for apps/frameworks\n+'ImageIO', # read and write image file formats.\n+'IOKit', # user-space access to hardware devices and drivers.\n+'libobjc.A.dylib', # Objective-C runtime library\n }\n \n class CPPFilt(object):\n@@ -78,10 +108,10 @@ class CPPFilt(object):\n     Use a pipe to the 'c++filt' command.\n     '''\n     def __init__(self):\n-        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n+        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE, universal_newlines=True)\n \n     def __call__(self, mangled):\n-        self.proc.stdin.write(mangled + b'\\n')\n+        self.proc.stdin.write(mangled + '\\n')\n         self.proc.stdin.flush()\n         return self.proc.stdout.readline().rstrip()\n \n@@ -90,75 +120,144 @@ def close(self):\n         self.proc.stdout.close()\n         self.proc.wait()\n \n-def read_symbols(executable, imports=True):\n+def read_symbols(executable, imports=True) -> List[Tuple[str, str, str]]:\n     '''\n-    Parse an ELF executable and return a list of (symbol,version) tuples\n+    Parse an ELF executable and return a list of (symbol,version, arch) tuples\n     for dynamic, imported symbols.\n     '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', '-h', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n-        raise IOError('Could not read symbols for %s: %s' % (executable, stderr.strip()))\n+        raise IOError('Could not read symbols for {}: {}'.format(executable, stderr.strip()))\n     syms = []\n-    for line in stdout.split(b'\\n'):\n+    for line in stdout.splitlines():\n         line = line.split()\n-        if len(line)>7 and re.match(b'[0-9]+:$', line[0]):\n-            (sym, _, version) = line[7].partition(b'@')\n-            is_import = line[6] == b'UND'\n-            if version.startswith(b'@'):\n+        if 'Machine:' in line:\n+            arch = line[-1]\n+        if len(line)>7 and re.match('[0-9]+:$', line[0]):\n+            (sym, _, version) = line[7].partition('@')\n+            is_import = line[6] == 'UND'\n+            if version.startswith('@'):\n                 version = version[1:]\n             if is_import == imports:\n-                syms.append((sym, version))\n+                syms.append((sym, version, arch))\n     return syms\n \n-def check_version(max_versions, version):\n-    if b'_' in version:\n-        (lib, _, ver) = version.rpartition(b'_')\n+def check_version(max_versions, version, arch) -> bool:\n+    if '_' in version:\n+        (lib, _, ver) = version.rpartition('_')\n     else:\n         lib = version\n         ver = '0'\n-    ver = tuple([int(x) for x in ver.split(b'.')])\n+    ver = tuple([int(x) for x in ver.split('.')])\n     if not lib in max_versions:\n         return False\n-    return ver <= max_versions[lib]\n+    return ver <= max_versions[lib] or lib == 'GLIBC' and ver <= ARCH_MIN_GLIBC_VER[arch]\n \n-def read_libraries(filename):\n-    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+def elf_read_libraries(filename) -> List[str]:\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     if p.returncode:\n         raise IOError('Error opening file')\n     libraries = []\n-    for line in stdout.split(b'\\n'):\n+    for line in stdout.splitlines():\n         tokens = line.split()\n-        if len(tokens)>2 and tokens[1] == b'(NEEDED)':\n-            match = re.match(b'^Shared library: \\[(.*)\\]$', b' '.join(tokens[2:]))\n+        if len(tokens)>2 and tokens[1] == '(NEEDED)':\n+            match = re.match(r'^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n             if match:\n                 libraries.append(match.group(1))\n             else:\n                 raise ValueError('Unparseable (NEEDED) specification')\n     return libraries\n \n-if __name__ == '__main__':\n+def check_imported_symbols(filename) -> bool:\n+    cppfilt = CPPFilt()\n+    ok = True\n+    for sym, version, arch in read_symbols(filename, True):\n+        if version and not check_version(MAX_VERSIONS, version, arch):\n+            print('{}: symbol {} from unsupported version {}'.format(filename, cppfilt(sym), version))\n+            ok = False\n+    return ok\n+\n+def check_exported_symbols(filename) -> bool:\n     cppfilt = CPPFilt()\n+    ok = True\n+    for sym,version,arch in read_symbols(filename, False):\n+        if arch == 'RISC-V' or sym in IGNORE_EXPORTS:\n+            continue\n+        print('{}: export of symbol {} not allowed'.format(filename, cppfilt(sym)))\n+        ok = False\n+    return ok\n+\n+def check_ELF_libraries(filename) -> bool:\n+    ok = True\n+    for library_name in elf_read_libraries(filename):\n+        if library_name not in ELF_ALLOWED_LIBRARIES:\n+            print('{}: NEEDED library {} is not allowed'.format(filename, library_name))\n+            ok = False\n+    return ok\n+\n+def macho_read_libraries(filename) -> List[str]:\n+    p = subprocess.Popen([OTOOL_CMD, '-L', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.splitlines():\n+        tokens = line.split()\n+        if len(tokens) == 1: # skip executable name\n+            continue\n+        libraries.append(tokens[0].split('/')[-1])\n+    return libraries\n+\n+def check_MACHO_libraries(filename) -> bool:\n+    ok = True\n+    for dylib in macho_read_libraries(filename):\n+        if dylib not in MACHO_ALLOWED_LIBRARIES:\n+            print('{} is not in ALLOWED_LIBRARIES!'.format(dylib))\n+            ok = False\n+    return ok\n+\n+CHECKS = {\n+'ELF': [\n+    ('IMPORTED_SYMBOLS', check_imported_symbols),\n+    ('EXPORTED_SYMBOLS', check_exported_symbols),\n+    ('LIBRARY_DEPENDENCIES', check_ELF_libraries)\n+],\n+'MACHO': [\n+    ('DYNAMIC_LIBRARIES', check_MACHO_libraries)\n+]\n+}\n+\n+def identify_executable(executable) -> Optional[str]:\n+    with open(filename, 'rb') as f:\n+        magic = f.read(4)\n+    if magic.startswith(b'MZ'):\n+        return 'PE'\n+    elif magic.startswith(b'\\x7fELF'):\n+        return 'ELF'\n+    elif magic.startswith(b'\\xcf\\xfa'):\n+        return 'MACHO'\n+    return None\n+\n+if __name__ == '__main__':\n     retval = 0\n     for filename in sys.argv[1:]:\n-        # Check imported symbols\n-        for sym,version in read_symbols(filename, True):\n-            if version and not check_version(MAX_VERSIONS, version):\n-                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym).decode('utf-8'), version.decode('utf-8')))\n+        try:\n+            etype = identify_executable(filename)\n+            if etype is None:\n+                print('{}: unknown format'.format(filename))\n                 retval = 1\n-        # Check exported symbols\n-        for sym,version in read_symbols(filename, False):\n-            if sym in IGNORE_EXPORTS:\n                 continue\n-            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym).decode('utf-8')))\n-            retval = 1\n-        # Check dependency libraries\n-        for library_name in read_libraries(filename):\n-            if library_name not in ALLOWED_LIBRARIES:\n-                print('%s: NEEDED library %s is not allowed' % (filename, library_name.decode('utf-8')))\n-                retval = 1\n-\n-    exit(retval)\n-\n \n+            failed = []\n+            for (name, func) in CHECKS[etype]:\n+                if not func(filename):\n+                    failed.append(name)\n+            if failed:\n+                print('{}: failed {}'.format(filename, ' '.join(failed)))\n+                retval = 1\n+        except IOError:\n+            print('{}: cannot open'.format(filename))\n+            retval = 1\n+    sys.exit(retval)"
      },
      {
        "sha": "438d5f6bf0089ec0044fa4c94313080895d061ea",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "modified",
        "additions": 17,
        "deletions": 18,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,14 +1,15 @@\n-#!/usr/bin/python2\n+#!/usr/bin/env python3\n+# Copyright (c) 2015-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n Test script for security-check.py\n '''\n-from __future__ import division,print_function\n import subprocess\n-import sys\n import unittest\n \n def write_testcode(filename):\n-    with open(filename, 'w') as f:\n+    with open(filename, 'w', encoding=\"utf8\") as f:\n         f.write('''\n     #include <stdio.h>\n     int main()\n@@ -20,7 +21,7 @@ def write_testcode(filename):\n \n def call_security_check(cc, source, executable, options):\n     subprocess.check_call([cc,source,'-o',executable] + options)\n-    p = subprocess.Popen(['./security-check.py',executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    p = subprocess.Popen(['./security-check.py',executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, universal_newlines=True)\n     (stdout, stderr) = p.communicate()\n     return (p.returncode, stdout.rstrip())\n \n@@ -31,29 +32,27 @@ def test_ELF(self):\n         cc = 'gcc'\n         write_testcode(source)\n \n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE']),\n                 (1, executable+': failed PIE NX RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro','-no-pie','-fno-PIE']),\n                 (1, executable+': failed PIE RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro']), \n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-no-pie','-fno-PIE']),\n                 (1, executable+': failed PIE RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE']), \n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE']),\n                 (1, executable+': failed RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']), \n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']),\n                 (0, ''))\n \n-    def test_PE(self):\n+    def test_64bit_PE(self):\n         source = 'test1.c'\n         executable = 'test1.exe'\n-        cc = 'i686-w64-mingw32-gcc'\n+        cc = 'x86_64-w64-mingw32-gcc'\n         write_testcode(source)\n \n-        self.assertEqual(call_security_check(cc, source, executable, []), \n-                (1, executable+': failed PIE NX'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat']), \n-                (1, executable+': failed PIE'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']), \n-                (0, ''))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--no-nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va']), (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA NX'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--no-dynamicbase','-Wl,--no-high-entropy-va']), (1, executable+': failed DYNAMIC_BASE HIGH_ENTROPY_VA'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--no-high-entropy-va']), (1, executable+': failed HIGH_ENTROPY_VA'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase','-Wl,--high-entropy-va']), (0, ''))\n \n if __name__ == '__main__':\n     unittest.main()"
      },
      {
        "sha": "f5cd05a2c3a03453147d52f3cb4b8654fc7abc0a",
        "filename": "contrib/devtools/test_deterministic_coverage.sh",
        "status": "added",
        "additions": 152,
        "deletions": 0,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/test_deterministic_coverage.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/test_deterministic_coverage.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test_deterministic_coverage.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,152 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Test for deterministic coverage across unit test runs.\n+\n+export LC_ALL=C\n+\n+# Use GCOV_EXECUTABLE=\"gcov\" if compiling with gcc.\n+# Use GCOV_EXECUTABLE=\"llvm-cov gcov\" if compiling with clang.\n+GCOV_EXECUTABLE=\"gcov\"\n+\n+# Disable tests known to cause non-deterministic behaviour and document the source or point of non-determinism.\n+NON_DETERMINISTIC_TESTS=(\n+    \"blockfilter_index_tests/blockfilter_index_initial_sync\"  # src/checkqueue.h: In CCheckQueue::Loop(): while (queue.empty()) { ... }\n+    \"coinselector_tests/knapsack_solver_test\"                 # coinselector_tests.cpp: if (equal_sets(setCoinsRet, setCoinsRet2))\n+    \"denialofservice_tests/DoS_mapOrphans\"                    # denialofservice_tests.cpp: it = mapOrphanTransactions.lower_bound(InsecureRand256());\n+    \"fs_tests/fsbridge_fstream\"                               # deterministic test failure?\n+    \"miner_tests/CreateNewBlock_validity\"                     # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"scheduler_tests/manythreads\"                             # scheduler.cpp: CScheduler::serviceQueue()\n+    \"scheduler_tests/singlethreadedscheduler_ordered\"         # scheduler.cpp: CScheduler::serviceQueue()\n+    \"txvalidationcache_tests/checkinputs_test\"                # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"txvalidationcache_tests/tx_mempool_block_doublespend\"    # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"txindex_tests/txindex_initial_sync\"                      # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"txvalidation_tests/tx_mempool_reject_coinbase\"           # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"validation_block_tests/processnewblock_signals_ordering\" # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/coin_mark_dirty_immature_credit\"            # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/dummy_input_size_test\"                      # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/importmulti_rescan\"                         # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/importwallet_rescan\"                        # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/ListCoins\"                                  # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/scan_for_wallet_transactions\"               # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+    \"wallet_tests/wallet_disableprivkeys\"                     # validation.cpp: if (GetMainSignals().CallbacksPending() > 10)\n+)\n+\n+TEST_BITCOIN_BINARY=\"src/test/test_bitcoin\"\n+\n+print_usage() {\n+    echo \"Usage: $0 [custom test filter (default: all but known non-deterministic tests)] [number of test runs (default: 2)]\"\n+}\n+\n+N_TEST_RUNS=2\n+BOOST_TEST_RUN_FILTERS=\"\"\n+if [[ $# != 0 ]]; then\n+    if [[ $1 == \"--help\" ]]; then\n+        print_usage\n+        exit\n+    fi\n+    PARSED_ARGUMENTS=0\n+    if [[ $1 =~ [a-z] ]]; then\n+        BOOST_TEST_RUN_FILTERS=$1\n+        PARSED_ARGUMENTS=$((PARSED_ARGUMENTS + 1))\n+        shift\n+    fi\n+    if [[ $1 =~ ^[0-9]+$ ]]; then\n+        N_TEST_RUNS=$1\n+        PARSED_ARGUMENTS=$((PARSED_ARGUMENTS + 1))\n+        shift\n+    fi\n+    if [[ ${PARSED_ARGUMENTS} == 0 || $# -gt 2 || ${N_TEST_RUNS} -lt 2 ]]; then\n+        print_usage\n+        exit\n+    fi\n+fi\n+if [[ ${BOOST_TEST_RUN_FILTERS} == \"\" ]]; then\n+    BOOST_TEST_RUN_FILTERS=\"$(IFS=\":\"; echo \"!${NON_DETERMINISTIC_TESTS[*]}\" | sed 's/:/:!/g')\"\n+else\n+    echo \"Using Boost test filter: ${BOOST_TEST_RUN_FILTERS}\"\n+    echo\n+fi\n+\n+if ! command -v gcov > /dev/null; then\n+    echo \"Error: gcov not installed. Exiting.\"\n+    exit 1\n+fi\n+\n+if ! command -v gcovr > /dev/null; then\n+    echo \"Error: gcovr not installed. Exiting.\"\n+    exit 1\n+fi\n+\n+if [[ ! -e ${TEST_BITCOIN_BINARY} ]]; then\n+    echo \"Error: Executable ${TEST_BITCOIN_BINARY} not found. Run \\\"./configure --enable-lcov\\\" and compile.\"\n+    exit 1\n+fi\n+\n+get_file_suffix_count() {\n+    find src/ -type f -name \"*.$1\" | wc -l\n+}\n+\n+if [[ $(get_file_suffix_count gcno) == 0 ]]; then\n+    echo \"Error: Could not find any *.gcno files. The *.gcno files are generated by the compiler. Run \\\"./configure --enable-lcov\\\" and re-compile.\"\n+    exit 1\n+fi\n+\n+get_covr_filename() {\n+    echo \"gcovr.run-$1.txt\"\n+}\n+\n+TEST_RUN_ID=0\n+while [[ ${TEST_RUN_ID} -lt ${N_TEST_RUNS} ]]; do\n+    TEST_RUN_ID=$((TEST_RUN_ID + 1))\n+    echo \"[$(date +\"%Y-%m-%d %H:%M:%S\")] Measuring coverage, run #${TEST_RUN_ID} of ${N_TEST_RUNS}\"\n+    find src/ -type f -name \"*.gcda\" -exec rm {} \\;\n+    if [[ $(get_file_suffix_count gcda) != 0 ]]; then\n+        echo \"Error: Stale *.gcda files found. Exiting.\"\n+        exit 1\n+    fi\n+    TEST_OUTPUT_TEMPFILE=$(mktemp)\n+    if ! BOOST_TEST_RUN_FILTERS=\"${BOOST_TEST_RUN_FILTERS}\" ${TEST_BITCOIN_BINARY} > \"${TEST_OUTPUT_TEMPFILE}\" 2>&1; then\n+        cat \"${TEST_OUTPUT_TEMPFILE}\"\n+        rm \"${TEST_OUTPUT_TEMPFILE}\"\n+        exit 1\n+    fi\n+    rm \"${TEST_OUTPUT_TEMPFILE}\"\n+    if [[ $(get_file_suffix_count gcda) == 0 ]]; then\n+        echo \"Error: Running the test suite did not create any *.gcda files. The gcda files are generated when the instrumented test programs are executed. Run \\\"./configure --enable-lcov\\\" and re-compile.\"\n+        exit 1\n+    fi\n+    GCOVR_TEMPFILE=$(mktemp)\n+    if ! gcovr --gcov-executable \"${GCOV_EXECUTABLE}\" -r src/ > \"${GCOVR_TEMPFILE}\"; then\n+        echo \"Error: gcovr failed. Output written to ${GCOVR_TEMPFILE}. Exiting.\"\n+        exit 1\n+    fi\n+    GCOVR_FILENAME=$(get_covr_filename ${TEST_RUN_ID})\n+    mv \"${GCOVR_TEMPFILE}\" \"${GCOVR_FILENAME}\"\n+    if grep -E \"^TOTAL *0 *0 \" \"${GCOVR_FILENAME}\"; then\n+        echo \"Error: Spurious gcovr output. Make sure the correct GCOV_EXECUTABLE variable is set in $0 (\\\"gcov\\\" for gcc, \\\"llvm-cov gcov\\\" for clang).\"\n+        exit 1\n+    fi\n+    if [[ ${TEST_RUN_ID} != 1 ]]; then\n+        COVERAGE_DIFF=$(diff -u \"$(get_covr_filename 1)\" \"${GCOVR_FILENAME}\")\n+        if [[ ${COVERAGE_DIFF} != \"\" ]]; then\n+            echo\n+            echo \"The line coverage is non-deterministic between runs. Exiting.\"\n+            echo\n+            echo \"The test suite must be deterministic in the sense that the set of lines executed at least\"\n+            echo \"once must be identical between runs. This is a necessary condition for meaningful\"\n+            echo \"coverage measuring.\"\n+            echo\n+            echo \"${COVERAGE_DIFF}\"\n+            exit 1\n+        fi\n+        rm \"${GCOVR_FILENAME}\"\n+    fi\n+done\n+\n+echo\n+echo \"Coverage test passed: Deterministic coverage across ${N_TEST_RUNS} runs.\"\n+exit"
      },
      {
        "sha": "2b6e807b4718c3c4985d20003eabc4af559bac01",
        "filename": "contrib/devtools/update-translations.py",
        "status": "removed",
        "additions": 0,
        "deletions": 200,
        "changes": 200,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,200 +0,0 @@\n-#!/usr/bin/python\n-# Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Run this script from the root of the repository to update all translations from\n-transifex.\n-It will do the following automatically:\n-\n-- fetch all translations using the tx tool\n-- post-process them into valid and committable format\n-  - remove invalid control characters\n-  - remove location tags (makes diffs less noisy)\n-\n-TODO:\n-- auto-add new translations to the build system according to the translation process\n-'''\n-from __future__ import division, print_function\n-import subprocess\n-import re\n-import sys\n-import os\n-import io\n-import xml.etree.ElementTree as ET\n-\n-# Name of transifex tool\n-TX = 'tx'\n-# Name of source language file\n-SOURCE_LANG = 'bitcoin_en.ts'\n-# Directory with locale files\n-LOCALE_DIR = 'src/qt/locale'\n-# Minimum number of messages for translation to be considered at all\n-MIN_NUM_MESSAGES = 10\n-\n-def check_at_repository_root():\n-    if not os.path.exists('.git'):\n-        print('No .git directory found')\n-        print('Execute this script at the root of the repository', file=sys.stderr)\n-        exit(1)\n-\n-def fetch_all_translations():\n-    if subprocess.call([TX, 'pull', '-f', '-a']):\n-        print('Error while fetching translations', file=sys.stderr)\n-        exit(1)\n-\n-def find_format_specifiers(s):\n-    '''Find all format specifiers in a string.'''\n-    pos = 0\n-    specifiers = []\n-    while True:\n-        percent = s.find('%', pos)\n-        if percent < 0:\n-            break\n-        specifiers.append(s[percent+1])\n-        pos = percent+2\n-    return specifiers\n-\n-def split_format_specifiers(specifiers):\n-    '''Split format specifiers between numeric (Qt) and others (strprintf)'''\n-    numeric = []\n-    other = []\n-    for s in specifiers:\n-        if s in {'1','2','3','4','5','6','7','8','9'}:\n-            numeric.append(s)\n-        else:\n-            other.append(s)\n-\n-    # numeric (Qt) can be present in any order, others (strprintf) must be in specified order\n-    return set(numeric),other\n-\n-def sanitize_string(s):\n-    '''Sanitize string for printing'''\n-    return s.replace('\\n',' ')\n-\n-def check_format_specifiers(source, translation, errors, numerus):\n-    source_f = split_format_specifiers(find_format_specifiers(source))\n-    # assert that no source messages contain both Qt and strprintf format specifiers\n-    # if this fails, go change the source as this is hacky and confusing!\n-    assert(not(source_f[0] and source_f[1]))\n-    try:\n-        translation_f = split_format_specifiers(find_format_specifiers(translation))\n-    except IndexError:\n-        errors.append(\"Parse error in translation for '%s': '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n-        return False\n-    else:\n-        if source_f != translation_f:\n-            if numerus and source_f == (set(), ['n']) and translation_f == (set(), []) and translation.find('%') == -1:\n-                # Allow numerus translations to omit %n specifier (usually when it only has one possible value)\n-                return True\n-            errors.append(\"Mismatch between '%s' and '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n-            return False\n-    return True\n-\n-def all_ts_files(suffix=''):\n-    for filename in os.listdir(LOCALE_DIR):\n-        # process only language files, and do not process source language\n-        if not filename.endswith('.ts'+suffix) or filename == SOURCE_LANG+suffix:\n-            continue\n-        if suffix: # remove provided suffix\n-            filename = filename[0:-len(suffix)]\n-        filepath = os.path.join(LOCALE_DIR, filename)\n-        yield(filename, filepath)\n-\n-FIX_RE = re.compile(b'[\\x00-\\x09\\x0b\\x0c\\x0e-\\x1f]')\n-def remove_invalid_characters(s):\n-    '''Remove invalid characters from translation string'''\n-    return FIX_RE.sub(b'', s)\n-\n-# Override cdata escape function to make our output match Qt's (optional, just for cleaner diffs for\n-# comparison, disable by default)\n-_orig_escape_cdata = None\n-def escape_cdata(text):\n-    text = _orig_escape_cdata(text)\n-    text = text.replace(\"'\", '&apos;')\n-    text = text.replace('\"', '&quot;')\n-    return text\n-\n-def postprocess_translations(reduce_diff_hacks=False):\n-    print('Checking and postprocessing...')\n-\n-    if reduce_diff_hacks:\n-        global _orig_escape_cdata\n-        _orig_escape_cdata = ET._escape_cdata\n-        ET._escape_cdata = escape_cdata\n-\n-    for (filename,filepath) in all_ts_files():\n-        os.rename(filepath, filepath+'.orig')\n-\n-    have_errors = False\n-    for (filename,filepath) in all_ts_files('.orig'):\n-        # pre-fixups to cope with transifex output\n-        parser = ET.XMLParser(encoding='utf-8') # need to override encoding because 'utf8' is not understood only 'utf-8'\n-        with open(filepath + '.orig', 'rb') as f:\n-            data = f.read()\n-        # remove control characters; this must be done over the entire file otherwise the XML parser will fail\n-        data = remove_invalid_characters(data)\n-        tree = ET.parse(io.BytesIO(data), parser=parser)\n-\n-        # iterate over all messages in file\n-        root = tree.getroot()\n-        for context in root.findall('context'):\n-            for message in context.findall('message'):\n-                numerus = message.get('numerus') == 'yes'\n-                source = message.find('source').text\n-                translation_node = message.find('translation')\n-                # pick all numerusforms\n-                if numerus:\n-                    translations = [i.text for i in translation_node.findall('numerusform')]\n-                else:\n-                    translations = [translation_node.text]\n-\n-                for translation in translations:\n-                    if translation is None:\n-                        continue\n-                    errors = []\n-                    valid = check_format_specifiers(source, translation, errors, numerus)\n-\n-                    for error in errors:\n-                        print('%s: %s' % (filename, error))\n-\n-                    if not valid: # set type to unfinished and clear string if invalid\n-                        translation_node.clear()\n-                        translation_node.set('type', 'unfinished')\n-                        have_errors = True\n-\n-                # Remove location tags\n-                for location in message.findall('location'):\n-                    message.remove(location)\n-\n-                # Remove entire message if it is an unfinished translation\n-                if translation_node.get('type') == 'unfinished':\n-                    context.remove(message)\n-\n-        # check if document is (virtually) empty, and remove it if so\n-        num_messages = 0\n-        for context in root.findall('context'):\n-            for message in context.findall('message'):\n-                num_messages += 1\n-        if num_messages < MIN_NUM_MESSAGES:\n-            print('Removing %s, as it contains only %i messages' % (filepath, num_messages))\n-            continue\n-\n-        # write fixed-up tree\n-        # if diff reduction requested, replace some XML to 'sanitize' to qt formatting\n-        if reduce_diff_hacks:\n-            out = io.BytesIO()\n-            tree.write(out, encoding='utf-8')\n-            out = out.getvalue()\n-            out = out.replace(b' />', b'/>')\n-            with open(filepath, 'wb') as f:\n-                f.write(out)\n-        else:\n-            tree.write(filepath, encoding='utf-8')\n-    return have_errors\n-\n-if __name__ == '__main__':\n-    check_at_repository_root()\n-    fetch_all_translations()\n-    postprocess_translations()\n-"
      },
      {
        "sha": "dee25ff67b61e3b798cf56f53657536e496cfef8",
        "filename": "contrib/devtools/utxo_snapshot.sh",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/utxo_snapshot.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/devtools/utxo_snapshot.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/utxo_snapshot.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,44 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+export LC_ALL=C\n+\n+set -ueo pipefail\n+\n+if (( $# < 3 )); then\n+  echo 'Usage: utxo_snapshot.sh <generate-at-height> <snapshot-out-path> <bitcoin-cli-call ...>'\n+  echo\n+  echo \"  if <snapshot-out-path> is '-', don't produce a snapshot file but instead print the \"\n+  echo \"  expected assumeutxo hash\"\n+  echo\n+  echo 'Examples:'\n+  echo\n+  echo \"  ./contrib/devtools/utxo_snapshot.sh 570000 utxo.dat ./src/bitcoin-cli -datadir=\\$(pwd)/testdata\"\n+  echo '  ./contrib/devtools/utxo_snapshot.sh 570000 - ./src/bitcoin-cli'\n+  exit 1\n+fi\n+\n+GENERATE_AT_HEIGHT=\"${1}\"; shift;\n+OUTPUT_PATH=\"${1}\"; shift;\n+# Most of the calls we make take a while to run, so pad with a lengthy timeout.\n+BITCOIN_CLI_CALL=\"${*} -rpcclienttimeout=9999999\"\n+\n+# Block we'll invalidate/reconsider to rewind/fast-forward the chain.\n+PIVOT_BLOCKHASH=$($BITCOIN_CLI_CALL getblockhash $(( GENERATE_AT_HEIGHT + 1 )) )\n+\n+(>&2 echo \"Rewinding chain back to height ${GENERATE_AT_HEIGHT} (by invalidating ${PIVOT_BLOCKHASH}); this may take a while\")\n+${BITCOIN_CLI_CALL} invalidateblock \"${PIVOT_BLOCKHASH}\"\n+\n+if [[ \"${OUTPUT_PATH}\" = \"-\" ]]; then\n+  (>&2 echo \"Generating txoutset info...\")\n+  ${BITCOIN_CLI_CALL} gettxoutsetinfo | grep hash_serialized_2 | sed 's/^.*: \"\\(.\\+\\)\\+\",/\\1/g'\n+else\n+  (>&2 echo \"Generating UTXO snapshot...\")\n+  ${BITCOIN_CLI_CALL} dumptxoutset \"${OUTPUT_PATH}\"\n+fi\n+\n+(>&2 echo \"Restoring chain to original height; this may take a while\")\n+${BITCOIN_CLI_CALL} reconsiderblock \"${PIVOT_BLOCKHASH}\""
      },
      {
        "sha": "75034616f7456f4e2d075138e05b7764010db032",
        "filename": "contrib/filter-lcov.py",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/filter-lcov.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/filter-lcov.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/filter-lcov.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,28 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+\n+parser = argparse.ArgumentParser(description='Remove the coverage data from a tracefile for all files matching the pattern.')\n+parser.add_argument('--pattern', '-p', action='append', help='the pattern of files to remove', required=True)\n+parser.add_argument('tracefile', help='the tracefile to remove the coverage data from')\n+parser.add_argument('outfile', help='filename for the output to be written to')\n+\n+args = parser.parse_args()\n+tracefile = args.tracefile\n+pattern = args.pattern\n+outfile = args.outfile\n+\n+in_remove = False\n+with open(tracefile, 'r', encoding=\"utf8\") as f:\n+    with open(outfile, 'w', encoding=\"utf8\") as wf:\n+        for line in f:\n+            for p in pattern:\n+                if line.startswith(\"SF:\") and p in line:\n+                    in_remove = True\n+            if not in_remove:\n+                wf.write(line)\n+            if line == 'end_of_record\\n':\n+                in_remove = False"
      },
      {
        "sha": "ade9e00d1b09feab55fcec0d94008ed1653d6859",
        "filename": "contrib/gitian-build.py",
        "status": "added",
        "additions": 262,
        "deletions": 0,
        "changes": 262,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,262 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+import argparse\n+import os\n+import subprocess\n+import sys\n+\n+def setup():\n+    global args, workdir\n+    programs = ['ruby', 'git', 'make', 'wget', 'curl']\n+    if args.kvm:\n+        programs += ['apt-cacher-ng', 'python-vm-builder', 'qemu-kvm', 'qemu-utils']\n+    elif args.docker and not os.path.isfile('/lib/systemd/system/docker.service'):\n+        dockers = ['docker.io', 'docker-ce']\n+        for i in dockers:\n+            return_code = subprocess.call(['sudo', 'apt-get', 'install', '-qq', i])\n+            if return_code == 0:\n+                break\n+        if return_code != 0:\n+            print('Cannot find any way to install Docker.', file=sys.stderr)\n+            sys.exit(1)\n+    else:\n+        programs += ['apt-cacher-ng', 'lxc', 'debootstrap']\n+    subprocess.check_call(['sudo', 'apt-get', 'install', '-qq'] + programs)\n+    if not os.path.isdir('gitian.sigs'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin-core/gitian.sigs.git'])\n+    if not os.path.isdir('bitcoin-detached-sigs'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin-core/bitcoin-detached-sigs.git'])\n+    if not os.path.isdir('gitian-builder'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/devrandom/gitian-builder.git'])\n+    if not os.path.isdir('bitcoin'):\n+        subprocess.check_call(['git', 'clone', 'https://github.com/bitcoin/bitcoin.git'])\n+    os.chdir('gitian-builder')\n+    make_image_prog = ['bin/make-base-vm', '--suite', 'bionic', '--arch', 'amd64']\n+    if args.docker:\n+        make_image_prog += ['--docker']\n+    elif not args.kvm:\n+        make_image_prog += ['--lxc']\n+    subprocess.check_call(make_image_prog)\n+    os.chdir(workdir)\n+    if args.is_bionic and not args.kvm and not args.docker:\n+        subprocess.check_call(['sudo', 'sed', '-i', 's/lxcbr0/br0/', '/etc/default/lxc-net'])\n+        print('Reboot is required')\n+        sys.exit(0)\n+\n+def build():\n+    global args, workdir\n+\n+    os.makedirs('bitcoin-binaries/' + args.version, exist_ok=True)\n+    print('\\nBuilding Dependencies\\n')\n+    os.chdir('gitian-builder')\n+    os.makedirs('inputs', exist_ok=True)\n+\n+    subprocess.check_call(['wget', '-O', 'inputs/osslsigncode-2.0.tar.gz', 'https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz'])\n+    subprocess.check_call([\"echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\"], shell=True)\n+    subprocess.check_call(['make', '-C', '../bitcoin/depends', 'download', 'SOURCES_PATH=' + os.getcwd() + '/cache/common'])\n+\n+    if args.linux:\n+        print('\\nCompiling ' + args.version + ' Linux')\n+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-linux', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    if args.windows:\n+        print('\\nCompiling ' + args.version + ' Windows')\n+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/', shell=True)\n+        subprocess.check_call('mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    if args.macos:\n+        print('\\nCompiling ' + args.version + ' MacOS')\n+        subprocess.check_call(['bin/gbuild', '-j', args.jobs, '-m', args.memory, '--commit', 'bitcoin='+args.commit, '--url', 'bitcoin='+args.url, '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-unsigned', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/', shell=True)\n+        subprocess.check_call('mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    os.chdir(workdir)\n+\n+    if args.commit_files:\n+        print('\\nCommitting '+args.version+' Unsigned Sigs\\n')\n+        os.chdir('gitian.sigs')\n+        subprocess.check_call(['git', 'add', args.version+'-linux/'+args.signer])\n+        subprocess.check_call(['git', 'add', args.version+'-win-unsigned/'+args.signer])\n+        subprocess.check_call(['git', 'add', args.version+'-osx-unsigned/'+args.signer])\n+        subprocess.check_call(['git', 'commit', '-m', 'Add '+args.version+' unsigned sigs for '+args.signer])\n+        os.chdir(workdir)\n+\n+def sign():\n+    global args, workdir\n+    os.chdir('gitian-builder')\n+\n+    if args.windows:\n+        print('\\nSigning ' + args.version + ' Windows')\n+        subprocess.check_call('cp inputs/bitcoin-' + args.version + '-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz', shell=True)\n+        subprocess.check_call(['bin/gbuild', '--skip-image', '--upgrade', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-win-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/'+args.version, shell=True)\n+\n+    if args.macos:\n+        print('\\nSigning ' + args.version + ' MacOS')\n+        subprocess.check_call('cp inputs/bitcoin-' + args.version + '-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz', shell=True)\n+        subprocess.check_call(['bin/gbuild', '--skip-image', '--upgrade', '--commit', 'signature='+args.commit, '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n+        subprocess.check_call(['bin/gsign', '-p', args.sign_prog, '--signer', args.signer, '--release', args.version+'-osx-signed', '--destination', '../gitian.sigs/', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml'])\n+        subprocess.check_call('mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/'+args.version+'/bitcoin-'+args.version+'-osx.dmg', shell=True)\n+\n+    os.chdir(workdir)\n+\n+    if args.commit_files:\n+        print('\\nCommitting '+args.version+' Signed Sigs\\n')\n+        os.chdir('gitian.sigs')\n+        subprocess.check_call(['git', 'add', args.version+'-win-signed/'+args.signer])\n+        subprocess.check_call(['git', 'add', args.version+'-osx-signed/'+args.signer])\n+        subprocess.check_call(['git', 'commit', '-a', '-m', 'Add '+args.version+' signed binary sigs for '+args.signer])\n+        os.chdir(workdir)\n+\n+def verify():\n+    global args, workdir\n+    rc = 0\n+    os.chdir('gitian-builder')\n+\n+    print('\\nVerifying v'+args.version+' Linux\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-linux', '../bitcoin/contrib/gitian-descriptors/gitian-linux.yml']):\n+        print('Verifying v'+args.version+' Linux FAILED\\n')\n+        rc = 1\n+\n+    print('\\nVerifying v'+args.version+' Windows\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-win-unsigned', '../bitcoin/contrib/gitian-descriptors/gitian-win.yml']):\n+        print('Verifying v'+args.version+' Windows FAILED\\n')\n+        rc = 1\n+\n+    print('\\nVerifying v'+args.version+' MacOS\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-osx-unsigned', '../bitcoin/contrib/gitian-descriptors/gitian-osx.yml']):\n+        print('Verifying v'+args.version+' MacOS FAILED\\n')\n+        rc = 1\n+\n+    print('\\nVerifying v'+args.version+' Signed Windows\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-win-signed', '../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml']):\n+        print('Verifying v'+args.version+' Signed Windows FAILED\\n')\n+        rc = 1\n+\n+    print('\\nVerifying v'+args.version+' Signed MacOS\\n')\n+    if subprocess.call(['bin/gverify', '-v', '-d', '../gitian.sigs/', '-r', args.version+'-osx-signed', '../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml']):\n+        print('Verifying v'+args.version+' Signed MacOS FAILED\\n')\n+        rc = 1\n+\n+    os.chdir(workdir)\n+    return rc\n+\n+def main():\n+    global args, workdir\n+\n+    parser = argparse.ArgumentParser(description='Script for running full Gitian builds.')\n+    parser.add_argument('-c', '--commit', action='store_true', dest='commit', help='Indicate that the version argument is for a commit or branch')\n+    parser.add_argument('-p', '--pull', action='store_true', dest='pull', help='Indicate that the version argument is the number of a github repository pull request')\n+    parser.add_argument('-u', '--url', dest='url', default='https://github.com/bitcoin/bitcoin', help='Specify the URL of the repository. Default is %(default)s')\n+    parser.add_argument('-v', '--verify', action='store_true', dest='verify', help='Verify the Gitian build')\n+    parser.add_argument('-b', '--build', action='store_true', dest='build', help='Do a Gitian build')\n+    parser.add_argument('-s', '--sign', action='store_true', dest='sign', help='Make signed binaries for Windows and MacOS')\n+    parser.add_argument('-B', '--buildsign', action='store_true', dest='buildsign', help='Build both signed and unsigned binaries')\n+    parser.add_argument('-o', '--os', dest='os', default='lwm', help='Specify which Operating Systems the build is for. Default is %(default)s. l for Linux, w for Windows, m for MacOS')\n+    parser.add_argument('-j', '--jobs', dest='jobs', default='2', help='Number of processes to use. Default %(default)s')\n+    parser.add_argument('-m', '--memory', dest='memory', default='2000', help='Memory to allocate in MiB. Default %(default)s')\n+    parser.add_argument('-k', '--kvm', action='store_true', dest='kvm', help='Use KVM instead of LXC')\n+    parser.add_argument('-d', '--docker', action='store_true', dest='docker', help='Use Docker instead of LXC')\n+    parser.add_argument('-S', '--setup', action='store_true', dest='setup', help='Set up the Gitian building environment. Only works on Debian-based systems (Ubuntu, Debian)')\n+    parser.add_argument('-D', '--detach-sign', action='store_true', dest='detach_sign', help='Create the assert file for detached signing. Will not commit anything.')\n+    parser.add_argument('-n', '--no-commit', action='store_false', dest='commit_files', help='Do not commit anything to git')\n+    parser.add_argument('signer', nargs='?', help='GPG signer to sign each build assert file')\n+    parser.add_argument('version', nargs='?', help='Version number, commit, or branch to build. If building a commit or branch, the -c option must be specified')\n+\n+    args = parser.parse_args()\n+    workdir = os.getcwd()\n+\n+    args.is_bionic = b'bionic' in subprocess.check_output(['lsb_release', '-cs'])\n+\n+    if args.kvm and args.docker:\n+        raise Exception('Error: cannot have both kvm and docker')\n+\n+    # Ensure no more than one environment variable for gitian-builder (USE_LXC, USE_VBOX, USE_DOCKER) is set as they\n+    # can interfere (e.g., USE_LXC being set shadows USE_DOCKER; for details see gitian-builder/libexec/make-clean-vm).\n+    os.environ['USE_LXC'] = ''\n+    os.environ['USE_VBOX'] = ''\n+    os.environ['USE_DOCKER'] = ''\n+    if args.docker:\n+        os.environ['USE_DOCKER'] = '1'\n+    elif not args.kvm:\n+        os.environ['USE_LXC'] = '1'\n+        if 'GITIAN_HOST_IP' not in os.environ.keys():\n+            os.environ['GITIAN_HOST_IP'] = '10.0.3.1'\n+        if 'LXC_GUEST_IP' not in os.environ.keys():\n+            os.environ['LXC_GUEST_IP'] = '10.0.3.5'\n+\n+    if args.setup:\n+        setup()\n+\n+    if args.buildsign:\n+        args.build = True\n+        args.sign = True\n+\n+    if not args.build and not args.sign and not args.verify:\n+        sys.exit(0)\n+\n+    args.linux = 'l' in args.os\n+    args.windows = 'w' in args.os\n+    args.macos = 'm' in args.os\n+\n+    # Disable for MacOS if no SDK found\n+    if args.macos and not os.path.isfile('gitian-builder/inputs/MacOSX10.11.sdk.tar.gz'):\n+        print('Cannot build for MacOS, SDK does not exist. Will build for other OSes')\n+        args.macos = False\n+\n+    args.sign_prog = 'true' if args.detach_sign else 'gpg --detach-sign'\n+\n+    script_name = os.path.basename(sys.argv[0])\n+    if not args.signer:\n+        print(script_name+': Missing signer')\n+        print('Try '+script_name+' --help for more information')\n+        sys.exit(1)\n+    if not args.version:\n+        print(script_name+': Missing version')\n+        print('Try '+script_name+' --help for more information')\n+        sys.exit(1)\n+\n+    # Add leading 'v' for tags\n+    if args.commit and args.pull:\n+        raise Exception('Cannot have both commit and pull')\n+    args.commit = ('' if args.commit else 'v') + args.version\n+\n+    os.chdir('bitcoin')\n+    if args.pull:\n+        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n+        os.chdir('../gitian-builder/inputs/bitcoin')\n+        subprocess.check_call(['git', 'fetch', args.url, 'refs/pull/'+args.version+'/merge'])\n+        args.commit = subprocess.check_output(['git', 'show', '-s', '--format=%H', 'FETCH_HEAD'], universal_newlines=True, encoding='utf8').strip()\n+        args.version = 'pull-' + args.version\n+    print(args.commit)\n+    subprocess.check_call(['git', 'fetch'])\n+    subprocess.check_call(['git', 'checkout', args.commit])\n+    os.chdir(workdir)\n+\n+    os.chdir('gitian-builder')\n+    subprocess.check_call(['git', 'pull'])\n+    os.chdir(workdir)\n+\n+    if args.build:\n+        build()\n+\n+    if args.sign:\n+        sign()\n+\n+    if args.verify:\n+        os.chdir('gitian.sigs')\n+        subprocess.check_call(['git', 'pull'])\n+        os.chdir(workdir)\n+        sys.exit(verify())\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "614970659660f8fee76b8859467e192795829de4",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,65 +0,0 @@\n-### Gavin's notes on getting gitian builds up and running using KVM\n-\n-These instructions distilled from\n-[https://help.ubuntu.com/community/KVM/Installation](https://help.ubuntu.com/community/KVM/Installation).\n-\n-You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n-\n-You probably need to enable hardware virtualization in your machine's BIOS.\n-\n-You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n-\n-\tsudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n-\n-Sanity checks:\n-\n-\tsudo service apt-cacher-ng status  # Should return apt-cacher-ng is running\n-\tls -l /dev/kvm   # Should show a /dev/kvm device\n-\n-\n-Once you've got the right hardware and software:\n-\n-    git clone git://github.com/bitcoin/bitcoin.git\n-    git clone git://github.com/devrandom/gitian-builder.git\n-    mkdir gitian-builder/inputs\n-    cd gitian-builder/inputs\n-\n-    # Create base images\n-    cd gitian-builder\n-    bin/make-base-vm --suite trusty --arch amd64\n-    cd ..\n-\n-    # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n-    ...\n-\n-    # For further build instructions see doc/release-process.md\n-    ...\n-\n----------------------\n-\n-`gitian-builder` now also supports building using LXC. See\n-[help.ubuntu.com](https://help.ubuntu.com/14.04/serverguide/lxc.html)\n-for how to get LXC up and running under Ubuntu.\n-\n-If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n-and at least 10 gigabytes of free disk space, you can `gitian-build` using\n-LXC running inside a virtual machine.\n-\n-Here's a description of Gavin's setup on OSX 10.6:\n-\n-1. Download and install VirtualBox from [https://www.virtualbox.org/](https://www.virtualbox.org/)\n-\n-2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from\n-   [http://www.ubuntu.com/](http://www.ubuntu.com/)\n-\n-3. Run VirtualBox and create a new virtual machine, using the Ubuntu .iso (see the [VirtualBox documentation](https://www.virtualbox.org/wiki/Documentation) for details). Create it with at least 2 gigabytes of memory and a disk that is at least 20 gigabytes big.\n-\n-4. Inside the running Ubuntu desktop, install:\n-\n-\tsudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n-\n-5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n-\n-\texport USE_LXC=1\n-\tgit clone git://github.com/bitcoin/bitcoin.git\n-\t... etc"
      },
      {
        "sha": "257dd8ba3030c2ee418f6b34aaa6b408233f3a29",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 64,
        "deletions": 48,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,64 +1,70 @@\n ---\n-name: \"bitcoin-linux-0.13\"\n+name: \"bitcoin-core-linux-0.20\"\n enable_cache: true\n+distro: \"ubuntu\"\n suites:\n-- \"trusty\"\n+- \"bionic\"\n architectures:\n - \"amd64\"\n packages:\n - \"curl\"\n - \"g++-aarch64-linux-gnu\"\n-- \"g++-4.8-aarch64-linux-gnu\"\n-- \"gcc-4.8-aarch64-linux-gnu\"\n+- \"g++-8-aarch64-linux-gnu\"\n+- \"gcc-8-aarch64-linux-gnu\"\n - \"binutils-aarch64-linux-gnu\"\n - \"g++-arm-linux-gnueabihf\"\n-- \"g++-4.8-arm-linux-gnueabihf\"\n-- \"gcc-4.8-arm-linux-gnueabihf\"\n+- \"g++-8-arm-linux-gnueabihf\"\n+- \"gcc-8-arm-linux-gnueabihf\"\n - \"binutils-arm-linux-gnueabihf\"\n-- \"g++-4.8-multilib\"\n-- \"gcc-4.8-multilib\"\n+- \"g++-riscv64-linux-gnu\"\n+- \"g++-8-riscv64-linux-gnu\"\n+- \"gcc-8-riscv64-linux-gnu\"\n+- \"binutils-riscv64-linux-gnu\"\n+- \"g++-8-multilib\"\n+- \"gcc-8-multilib\"\n - \"binutils-gold\"\n-- \"git-core\"\n+- \"git\"\n - \"pkg-config\"\n - \"autoconf\"\n - \"libtool\"\n - \"automake\"\n - \"faketime\"\n - \"bsdmainutils\"\n - \"ca-certificates\"\n-- \"python\"\n+- \"python3\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files: []\n script: |\n+  set -e -o pipefail\n \n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu\"\n+  HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\"\n   CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n-  FAKETIME_HOST_PROGS=\"\"\n+  FAKETIME_HOST_PROGS=\"gcc g++\"\n   FAKETIME_PROGS=\"date ar ranlib nm\"\n   HOST_CFLAGS=\"-O2 -g\"\n   HOST_CXXFLAGS=\"-O2 -g\"\n-  HOST_LDFLAGS=-static-libstdc++\n+  HOST_LDFLAGS_BASE=\"-static-libstdc++\"\n \n   export QT_RCC_TEST=1\n-  export GZIP=\"-9n\"\n-  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n+  export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n   if test -n \"$GBUILD_CACHE_ENABLED\"; then\n     export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n     export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n     mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n   fi\n \n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n@@ -68,12 +74,15 @@ script: |\n   function create_per-host_faketime_wrappers {\n   for i in $HOSTS; do\n     for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n+        if which ${i}-${prog}-8\n+        then\n+            echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n+            echo \"REAL=\\`which -a ${i}-${prog}-8 | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+            chmod +x ${WRAP_DIR}/${i}-${prog}\n+        fi\n     done\n   done\n   }\n@@ -98,8 +107,8 @@ script: |\n   for prog in gcc g++; do\n   rm -f ${WRAP_DIR}/${prog}\n   cat << EOF > ${WRAP_DIR}/${prog}\n-  #!/bin/bash\n-  REAL=\"`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1`\"\n+  #!/usr/bin/env bash\n+  REAL=\"$(which -a ${prog}-8 | grep -v ${WRAP_DIR}/${prog} | head -1)\"\n   for var in \"\\$@\"\n   do\n     if [ \"\\$var\" = \"-m32\" ]; then\n@@ -114,7 +123,7 @@ script: |\n   done\n \n   cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n+  BASEPREFIX=\"${PWD}/depends\"\n   # Build dependencies for each host\n   for i in $HOSTS; do\n     EXTRA_INCLUDES=\"$EXTRA_INCLUDES_BASE/$i\"\n@@ -133,50 +142,57 @@ script: |\n \n   # Create the release tarball using (arbitrarily) the first host\n   ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n+  CONFIG_SITE=${BASEPREFIX}/$(echo \"${HOSTS}\" | awk '{print $1;}')/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+  SOURCEDIST=$(echo bitcoin-*.tar.gz)\n+  DISTNAME=${SOURCEDIST/%.tar.gz}\n+\n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n-  tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  tar -xf ../$SOURCEDIST\n+  find bitcoin-* | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    if [ \"${i}\" = \"riscv64-linux-gnu\" ]; then\n+      # Workaround for https://bugs.launchpad.net/ubuntu/+source/gcc-8-cross-ports/+bug/1853740\n+      # TODO: remove this when no longer needed\n+      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE} -Wl,-z,noexecstack\"\n+    else\n+      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE}\"\n+    fi\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security\n-\n-    #TODO: This is a quick hack that disables symbol checking for arm.\n-    #      Instead, we should investigate why these are popping up.\n-    #      For aarch64, we'll need to bump up the min GLIBC version, as the abi\n-    #      support wasn't introduced until 2.17.\n-    case $i in\n-       aarch64-*) : ;;\n-       arm-*) : ;;\n-       *) make ${MAKEOPTS} -C src check-symbols ;;\n-    esac\n-\n+    make ${MAKEOPTS} -C src check-symbols\n     make install DESTDIR=${INSTALLPATH}\n     cd installed\n     find . -name \"lib*.la\" -delete\n     find . -name \"lib*.a\" -delete\n     rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME}/bin -type f -executable -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n-    find ${DISTNAME}/lib -type f -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n-    find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n-    find ${DISTNAME} -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n+    find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    cp ../README.md ${DISTNAME}/\n+    find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    find ${DISTNAME} -name \"*.dbg\" | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n     cd ../../\n     rm -rf distsrc-${i}\n   done"
      },
      {
        "sha": "a4f3219c2291e8164c92d5ba1eedb7a346b1bdb4",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,7 +1,8 @@\n ---\n name: \"bitcoin-dmg-signer\"\n+distro: \"ubuntu\"\n suites:\n-- \"trusty\"\n+- \"bionic\"\n architectures:\n - \"amd64\"\n packages:\n@@ -12,16 +13,18 @@ remotes:\n files:\n - \"bitcoin-osx-unsigned.tar.gz\"\n script: |\n+  set -e -o pipefail\n+\n   WRAP_DIR=$HOME/wrapped\n   mkdir -p ${WRAP_DIR}\n-  export PATH=`pwd`:$PATH\n+  export PATH=\"$PWD\":$PATH\n   FAKETIME_PROGS=\"dmg genisoimage\"\n \n   # Create global faketime wrappers\n   for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}"
      },
      {
        "sha": "7c5abb90182c05343fdb602eaa6c320aabece18d",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 36,
        "deletions": 23,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,15 +1,16 @@\n ---\n-name: \"bitcoin-osx-0.13\"\n+name: \"bitcoin-core-osx-0.20\"\n enable_cache: true\n+distro: \"ubuntu\"\n suites:\n-- \"trusty\"\n+- \"bionic\"\n architectures:\n - \"amd64\"\n packages:\n - \"ca-certificates\"\n - \"curl\"\n - \"g++\"\n-- \"git-core\"\n+- \"git\"\n - \"pkg-config\"\n - \"autoconf\"\n - \"librsvg2-bin\"\n@@ -23,27 +24,28 @@ packages:\n - \"libcap-dev\"\n - \"libz-dev\"\n - \"libbz2-dev\"\n-- \"python\"\n-- \"python-dev\"\n-- \"python-setuptools\"\n+- \"python3\"\n+- \"python3-dev\"\n+- \"python3-setuptools\"\n - \"fonts-tuffy\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n - \"MacOSX10.11.sdk.tar.gz\"\n script: |\n+  set -e -o pipefail\n+\n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-apple-darwin11\"\n+  HOSTS=\"x86_64-apple-darwin16\"\n   CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n \n   export QT_RCC_TEST=1\n-  export GZIP=\"-9n\"\n-  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n+  export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n   if test -n \"$GBUILD_CACHE_ENABLED\"; then\n     export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n@@ -53,11 +55,12 @@ script: |\n \n   export ZERO_AR_DATE=1\n \n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n@@ -67,9 +70,9 @@ script: |\n   function create_per-host_faketime_wrappers {\n   for i in $HOSTS; do\n     for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n@@ -84,7 +87,7 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n+  BASEPREFIX=\"${PWD}/depends\"\n \n   mkdir -p ${BASEPREFIX}/SDKs\n   tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.11.sdk.tar.gz\n@@ -102,30 +105,40 @@ script: |\n \n   # Create the release tarball using (arbitrarily) the first host\n   ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n+  CONFIG_SITE=${BASEPREFIX}/$(echo \"${HOSTS}\" | awk '{print $1;}')/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+  SOURCEDIST=$(echo bitcoin-*.tar.gz)\n+  DISTNAME=${SOURCEDIST/%.tar.gz}\n \n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n-  tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  tar -xf ../$SOURCEDIST\n+  find bitcoin-* | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n     make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+    make ${MAKEOPTS} -C src check-symbols\n     make install-strip DESTDIR=${INSTALLPATH}\n \n     make osx_volname\n@@ -140,7 +153,7 @@ script: |\n     cp ${BASEPREFIX}/${i}/native/bin/${i}-pagestuff unsigned-app-${i}/pagestuff\n     mv dist unsigned-app-${i}\n     pushd unsigned-app-${i}\n-    find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz\n+    find . | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz\n     popd\n \n     make deploy\n@@ -150,7 +163,7 @@ script: |\n     find . -name \"lib*.la\" -delete\n     find . -name \"lib*.a\" -delete\n     rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME} | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    find ${DISTNAME} | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n     cd ../../\n   done\n   mkdir -p $OUTDIR/src"
      },
      {
        "sha": "9d96465742429991268d736bf1fb365fc1d4e8c4",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 14,
        "deletions": 11,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,38 +1,41 @@\n ---\n name: \"bitcoin-win-signer\"\n+distro: \"ubuntu\"\n suites:\n-- \"trusty\"\n+- \"bionic\"\n architectures:\n - \"amd64\"\n packages:\n - \"libssl-dev\"\n - \"autoconf\"\n+- \"libtool\"\n+- \"pkg-config\"\n remotes:\n - \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n-- \"osslsigncode-1.7.1.tar.gz\"\n-- \"osslsigncode-Backports-to-1.7.1.patch\"\n+- \"osslsigncode-2.0.tar.gz\"\n - \"bitcoin-win-unsigned.tar.gz\"\n script: |\n-  BUILD_DIR=`pwd`\n+  set -e -o pipefail\n+\n+  BUILD_DIR=\"$PWD\"\n   SIGDIR=${BUILD_DIR}/signature/win\n   UNSIGNED_DIR=${BUILD_DIR}/unsigned\n \n-  echo \"f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9  osslsigncode-1.7.1.tar.gz\" | sha256sum -c\n-  echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n+  echo \"5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f  osslsigncode-2.0.tar.gz\" | sha256sum -c\n \n   mkdir -p ${UNSIGNED_DIR}\n   tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n \n-  tar xf osslsigncode-1.7.1.tar.gz\n-  cd osslsigncode-1.7.1\n-  patch -p1 < ${BUILD_DIR}/osslsigncode-Backports-to-1.7.1.patch\n+  tar xf osslsigncode-2.0.tar.gz\n+  cd osslsigncode-2.0\n \n+  ./autogen.sh\n   ./configure --without-gsf --without-curl --disable-dependency-tracking\n   make\n   find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n-    INFILE=\"`basename \"${i}\"`\"\n-    OUTFILE=\"`echo \"${INFILE}\" | sed s/-unsigned//`\"\n+    INFILE=\"$(basename \"${i}\")\"\n+    OUTFILE=\"${INFILE/-unsigned}\"\n     ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n   done"
      },
      {
        "sha": "de2e45190a225854cbd3d039f398c4f5ed2c5b9e",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 51,
        "deletions": 49,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,14 +1,15 @@\n ---\n-name: \"bitcoin-win-0.13\"\n+name: \"bitcoin-core-win-0.20\"\n enable_cache: true\n+distro: \"ubuntu\"\n suites:\n-- \"trusty\"\n+- \"bionic\"\n architectures:\n - \"amd64\"\n packages:\n - \"curl\"\n - \"g++\"\n-- \"git-core\"\n+- \"git\"\n - \"pkg-config\"\n - \"autoconf\"\n - \"libtool\"\n@@ -20,37 +21,39 @@ packages:\n - \"nsis\"\n - \"zip\"\n - \"ca-certificates\"\n-- \"python\"\n+- \"python3\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files: []\n script: |\n+  set -e -o pipefail\n+\n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-w64-mingw32 i686-w64-mingw32\"\n+  HOSTS=\"x86_64-w64-mingw32\"\n   CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n-  FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip objcopy\"\n+  FAKETIME_HOST_PROGS=\"ar ranlib nm windres strip objcopy\"\n   FAKETIME_PROGS=\"date makensis zip\"\n   HOST_CFLAGS=\"-O2 -g\"\n   HOST_CXXFLAGS=\"-O2 -g\"\n \n   export QT_RCC_TEST=1\n-  export GZIP=\"-9n\"\n-  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n+  export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n   if test -n \"$GBUILD_CACHE_ENABLED\"; then\n     export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n     export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n     mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n   fi\n \n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n@@ -60,32 +63,24 @@ script: |\n   function create_per-host_faketime_wrappers {\n   for i in $HOSTS; do\n     for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n     done\n   done\n   }\n \n-  function create_per-host_linker_wrapper {\n-  # This is only needed for trusty, as the mingw linker leaks a few bytes of\n-  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n+  function create_per-host_compiler_wrapper {\n+  # -posix variant is required for c++11 threading.\n   for i in $HOSTS; do\n     mkdir -p ${WRAP_DIR}/${i}\n-    for prog in collect2; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}/${prog}\n-        REAL=$(${i}-gcc -print-prog-name=${prog})\n-        echo \"export MALLOC_PERTURB_=255\" >> ${WRAP_DIR}/${i}/${prog}\n-        echo \"${REAL} \\$@\" >> $WRAP_DIR/${i}/${prog}\n-        chmod +x ${WRAP_DIR}/${i}/${prog}\n-    done\n     for prog in gcc g++; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog}-posix | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export COMPILER_PATH=${WRAP_DIR}/${i}\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n@@ -98,11 +93,11 @@ script: |\n   export PATH_orig=${PATH}\n   create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n   create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n-  create_per-host_linker_wrapper \"2000-01-01 12:00:00\"\n+  create_per-host_compiler_wrapper \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n+  BASEPREFIX=\"${PWD}/depends\"\n   # Build dependencies for each host\n   for i in $HOSTS; do\n     make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n@@ -112,57 +107,64 @@ script: |\n   export PATH=${PATH_orig}\n   create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n   create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n-  create_per-host_linker_wrapper \"${REFERENCE_DATETIME}\"\n+  create_per-host_compiler_wrapper \"${REFERENCE_DATETIME}\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n   ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n+  CONFIG_SITE=${BASEPREFIX}/$(echo \"${HOSTS}\" | awk '{print $1;}')/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+  SOURCEDIST=$(echo bitcoin-*.tar.gz)\n+  DISTNAME=${SOURCEDIST/%.tar.gz}\n \n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n-  tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  mkdir -p $OUTDIR/src\n-  cp ../$SOURCEDIST $OUTDIR/src\n+  tar -xf ../$SOURCEDIST\n+  find bitcoin-* | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security\n     make deploy\n     make install DESTDIR=${INSTALLPATH}\n-    cp -f bitcoin-*setup*.exe $OUTDIR/\n+    cp -f --target-directory=\"${OUTDIR}\" ./bitcoin-*-setup-unsigned.exe\n     cd installed\n     mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n     find . -name \"lib*.la\" -delete\n     find . -name \"lib*.a\" -delete\n     rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME}/bin -type f -executable -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n-    find ${DISTNAME}/lib -type f -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n-    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}.zip\n-    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}-debug.zip\n+    find ${DISTNAME}/bin -type f -executable -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    find ${DISTNAME}/lib -type f -print0 | xargs -0 -n1 -I{} ../contrib/devtools/split-debug.sh {} {} {}.dbg\n+    cp ../doc/README_windows.txt ${DISTNAME}/readme.txt\n+    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}.zip\n+    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i//x86_64-w64-mingw32/win64}-debug.zip\n     cd ../../\n     rm -rf distsrc-${i}\n   done\n-  cd $OUTDIR\n-  rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n-  find . -name \"*-setup-unsigned.exe\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n-  mv ${OUTDIR}/${DISTNAME}-i686-*-debug.zip ${OUTDIR}/${DISTNAME}-win32-debug.zip\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.zip ${OUTDIR}/${DISTNAME}-win64.zip\n-  mv ${OUTDIR}/${DISTNAME}-i686-*.zip ${OUTDIR}/${DISTNAME}-win32.zip\n+  mkdir -p $OUTDIR/src\n+  mv $SOURCEDIST $OUTDIR/src\n+  cp -rf contrib/windeploy $BUILD_DIR\n+  cd $BUILD_DIR/windeploy\n+  mkdir unsigned\n+  cp $OUTDIR/bitcoin-*setup-unsigned.exe unsigned/\n+  find . | sort | tar --mtime=\"$REFERENCE_DATETIME\" --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz"
      },
      {
        "sha": "ffe4fb144b1ae07c7c9bbdcdaea2694978eb18b2",
        "filename": "contrib/gitian-keys/README.md",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-keys/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-keys/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,27 @@\n+## PGP keys of Gitian builders and Developers\n+\n+The file `keys.txt` contains fingerprints of the public keys of Gitian builders\n+and active developers.\n+\n+The associated keys are mainly used to sign git commits or the build results\n+of Gitian builds.\n+\n+The most recent version of each pgp key can be found on most pgp key servers.\n+\n+Fetch the latest version from the key server to see if any key was revoked in\n+the meantime.\n+To fetch the latest version of all pgp keys in your gpg homedir,\n+\n+```sh\n+gpg --refresh-keys\n+```\n+\n+To fetch keys of Gitian builders and active developers, feed the list of\n+fingerprints of the primary keys into gpg:\n+\n+```sh\n+while read fingerprint keyholder_name; do gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys ${fingerprint}; done < ./keys.txt\n+```\n+\n+Add your key to the list if you provided Gitian signatures for two major or\n+minor releases of Bitcoin Core."
      },
      {
        "sha": "030fd5cf3cd389976b9d07e6e48bb8d3524442fe",
        "filename": "contrib/gitian-keys/achow101-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/achow101-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/achow101-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/achow101-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,52 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1\n-\n-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\n-Khvd4+XHE/ecjLOPvLweAg==\n-=+hz7\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "df06e19fa4b109286dbbb7596c86d31fe0f1052f",
        "filename": "contrib/gitian-keys/aschildbach-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/aschildbach-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/aschildbach-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/aschildbach-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "2389d4657fb7f5f225f5d76e08841fd6e21d4be9",
        "filename": "contrib/gitian-keys/bluematt-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/bluematt-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "60d76c0ec7ab86635637ee9f49948e004fadfee4",
        "filename": "contrib/gitian-keys/btcdrak-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 142,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/btcdrak-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/btcdrak-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/btcdrak-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,142 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v2\n-\n-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\n-eEaG0RH54+pi4gw=\n-=fFMC\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "928a74b3155da22877d1b6ad32fa2a7cb745e0ba",
        "filename": "contrib/gitian-keys/cdecker-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/cdecker-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/cdecker-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/cdecker-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "71a42e514881bc6383531ea2c82c93998453245e",
        "filename": "contrib/gitian-keys/centaur1-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/centaur1-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/centaur1-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/centaur1-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,30 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.12 (GNU/Linux)\n-\n-mQENBFTjy20BCAC7q/tpPQ9tdEALpDqe8kpVAT5ysOJDLDeFEE1J5O8NuDFuibiN\n-XYkb2nAt4Vdr23in9z0LAiTSgr7znndnab/rOSn6pXbXQfLTHrSnAeClTHVQVPSq\n-m5kNg1vWvNxFtIpZ/fGsc6LLmIHxdgeLn+NOpvNx7RzF/N5ctX51vMxMUeDq3daZ\n-tLneJVRj5tXHRJcjW62cyiNFasYAZ3JC8wjwzr0SOndc7kygbEVCTWNkTAGd1Lax\n-KSJW6TjhBPK7j+RljS5nfx/Tf+OG4AoA7/53593YL7Shfx8rwWVIeF4nS6efFnuf\n-eIj+aS5haGyFvNgw8DE7QUCrPiUxeA8wuXu7ABEBAAG0H2NlbnRhdXIgPGNlbnRh\n-dXJAcGhvbmVib29rLmNvbT6JATgEEwECACIFAlTjy20CGwMGCwkIBwMCBhUIAgkK\n-CwQWAgMBAh4BAheAAAoJEP+V+qlxaXQF8r4IAKnE8D9AOTdM/YvYxpCeI6ndEUUs\n-8NcotpbIBJ67vr1Dsot7Ee0PrmIYOiInA+T81lPUDecJYrnemVefhquiyJ5VJ4/d\n-z2zUKBfxjeOsj/PHgcowVxMco8fNEWQa2fZX6X8RVADIsUnIIwpRFVUcbssK/3xJ\n-k46vjWwYNQywht/ZgFBesOgywyz5GozmwrK6TixJxKk8M69GFz2fHhJjp1bxDZuk\n-Rs3YmWeOcCasoJ6GbvIboKQSPHGyEOCqIuiBL63YMa0n1FU0ooDteNZ04eRinIhc\n-fo9JC66fQrUFn8CmmRTtdZOrZ/efYjQtfLAunCkzSM3p6DE9u4Y7d8E5Ar65AQ0E\n-VOPLbQEIANhxtouZuQmw+k89toBWXw75s+csxKHKZuhw8QntaFyFYq3IOnIeV1sK\n-PRENkWsqDInjEM8k9eZ6pnS11EQ1rrFffss+mprTbL3I4S489tJETYZKHrmmox7h\n-ustRi5eXBEmGeKW0mqpb/9r4okpTaIfs+EJ4C9jj0ghWkqU0acyzanJiUY/0R46F\n-vPfGfHnhZ5TAl3eiL0H2JkF6taG8K1XOLemahdZHE9wJh0ZFWnDDkA1l6j2rtYga\n-jEi/ucOp5GkmumxbFiVgponDBqBpsscRrCV6SbZs9gz3dQNgqe5A3CKGZRuVCY6s\n-djRJelgqCF5+dV0fAT0oF3C/3E5KAgcAEQEAAYkBHwQYAQIACQUCVOPLbQIbDAAK\n-CRD/lfqpcWl0BUSxCACjEFwQSHcfZINWD+KdNMayxyHQlBwsEDX+xQkgnn+/Q3hW\n-9VI3SSSfFV3ustlUa3IaNHwuWzsrSqG6mLG47LAQ6vPAWVh723gVCpyJf42Oms/e\n-qeyn0f/PT/6RuNMXQeHbfddmRp4PFjyKOms5Bmf3oi4t4JSvOS4yABBBKzhDQYC9\n-e+qv6Y1sDYpSiCxstQLzIHKiB5bfZ8Szfk09EyyLdqLGkiB0MFhHoXWwQxKiLVc+\n-xNFj2a/jw0rQVgN5DZgHBWU5WqvS5CWIczi+2S9MFI26iBhCn3urZToaaQ/DObqC\n-qmekFrJ/GOj5vB1Mm014lWjG2X3EovLZ1XkgWI7W\n-=vtNZ\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "6b0bd240ba4cf8df485a8caa689717a12ef6b3c8",
        "filename": "contrib/gitian-keys/cfields-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/cfields-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/cfields-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/cfields-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,52 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.12 (GNU/Linux)\n-\n-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\n-MrD0ofsytfy1LQ==\n-=DE4h\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "71898127ba0d6c9976ab7225d8c71ffc6380b0a2",
        "filename": "contrib/gitian-keys/devrandom-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/devrandom-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/devrandom-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/devrandom-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "9d3f060627ee9cb4143e3b8945a261e90c39ba13",
        "filename": "contrib/gitian-keys/erkmos.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/erkmos.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/erkmos.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/erkmos.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "9c03ff45226c5629d24e5f9925da7210df0760a5",
        "filename": "contrib/gitian-keys/fanquake-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/fanquake-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/fanquake-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/fanquake-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,63 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG/MacGPG2 v2.0.26\n-\n-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\n-XwbdK0Zpx/oDtRHpuDMGKJBV2LWAZYkEbFsmtg==\n-=3o2I\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "f81f44e874707837c13446858db2fed14ad5c501",
        "filename": "contrib/gitian-keys/gavinandresen-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/gavinandresen-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/gavinandresen-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/gavinandresen-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "b8aad7fd88b42770c4aaab3ca97a115694bcb9c7",
        "filename": "contrib/gitian-keys/jl2012-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 105,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/jl2012-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/jl2012-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jl2012-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,105 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Comment: GPGTools - https://gpgtools.org\n-\n-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\n-yj9YmZZSRRQ2dujg81sLQ9CrO7WB3IGpwh+4lHQ=\n-=1irw\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "3831eaea114f77f30f9638e6772f446055f3c68d",
        "filename": "contrib/gitian-keys/jonasschnelli-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 110,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/jonasschnelli-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/jonasschnelli-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jonasschnelli-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,110 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\r\n-Version: GnuPG v1\r\n-\r\n-mQINBFSBrDIBEACrZEqObmtlTf7fOKttE39qqisFfMg0VeEPS37uETMGYsgTEvzv\r\n-kfMsXCGsGFLQ78XsHqUeW4uQrtpJH3nUP/Sua1Q12K3lNKTSvVQyEpKoPJwXZahp\r\n-jm6GA1ApDxZ/KlmxyobR3X0urnMYNZobl5IKJXlxoKGl4OkGNeFlh42pCXZDnR9n\r\n-1Y17ZcDdybkWcqPbDAz8ilOQcFMhDBFg3Di3IVMAaDZP1uwWFb5vx60YB5NhkOpF\r\n-nZUH09NJx/7u7QdGPSHOdzW4Xo1HUYtYNDkdOvgZtxpbYEFIaBtVBURMUGwAFagA\r\n-3a6qaGnCBWEQftyISLiqcKqKqXudOg/cLa1CAiQFkz+IBhY9BCGDRnB8Dcae6EGI\r\n-Djt2lqZTuMSiheTWeNFMGBioHfPLedcwae8KflrIBC+hNS4ay6HJdIc03WMQ4JKK\r\n-At8Y8CRLym30/RlqZ2v8CHYqg9Ddlz3+g5JkRKaJTQwFRcX46/tAX+I2NZ8Ra1ea\r\n-rF5cRHuCk/oaw5ZXYhj4zJO74rjAoSewAARlrTMSM541atJU1u6aWT7rNiF9QKIj\r\n-i8vEufUxN0YfdmvDD3OXwbO7GnfWXS4sPklFIRACp+Y4ib+QnRY0/qGE0yh3RAG4\r\n-r/dyIQ1m3z7Pc9eyPKAhE4S7SxAwoR4yOqQ5NAfZXgFuqWzkW51gkQgGzQARAQAB\r\n-tCtKb25hcyBTY2huZWxsaSA8am9uYXMuc2NobmVsbGlAaW5jbHVkZTcuY2g+iQI+\r\n-BBMBAgAoBQJUgawyAhsDBQkDwmcABgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAK\r\n-CRAicOMMUic59iKUD/93DF04C3lptLjtrhyd4wgpBMJV8yzagGyG+Wk0UR7elQw4\r\n-F1MIvEtIFpuGrcnNfKcqeGGmnnKFTeBjkmgcYvej2fW9XlRA1HgIS0t0ttDv8uVX\r\n-vy1xVj1qISB+17EiftxJjCOl2pZFEVpLQ7sSgqnVRMsCS45ag6rioGxtq1j3ifQN\r\n-TENnJWhzOXvwzZhLgsyWLjeYvTDbzfAQLpZFowAMibOwu6ObCkn4dhaW+lI3AnPu\r\n-76pLsrOljqGvXes6o2d28vjqMrlmsz2xVEJ4bnRPUbLv3bUl6t+19XpiMj94ZCZX\r\n-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\r\n-S5rowLE=\r\n-=ZVPf\r\n------END PGP PUBLIC KEY BLOCK-----\n\\ No newline at end of file"
      },
      {
        "sha": "ba3036a89f77e465d287a98137c5e6cb1cef2f89",
        "filename": "contrib/gitian-keys/keys.txt",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-keys/keys.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/gitian-keys/keys.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/keys.txt?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,34 @@\n+9D3CC86A72F8494342EA5FD10A41BDC3F4FAFF1C Aaron Clauson (sipsorcery)\n+617C90010B3BD370B0AC7D424BB42E31C79111B8 Akira Takizawa\n+E944AE667CF960B1004BC32FCA662BE18B877A60 Andreas Schildbach\n+152812300785C96444D3334D17565732E08E5E41 Andrew Chow\n+912FD3228387123DC97E0E57D5566241A0295FA9 BtcDrak\n+C519EBCF3B926298946783EFF6430754120EC2F4 Christian Decker (cdecker)\n+F20F56EF6A067F70E8A5C99FFF95FAA971697405 centaur\n+C060A6635913D98A3587D7DB1C2491FFEB0EF770 Cory Fields\n+BF6273FAEF7CC0BA1F562E50989F6B3048A116B5 Dev Random\n+6D3170C1DC2C6FD0AEEBCA6743811D1A26623924 Douglas Roark\n+9A1689B60D1B3CCE9262307A2F40A9BF167FBA47 Erik Mossberg (erkmos)\n+D35176BE9264832E4ACA8986BF0792FBE95DC863 fivepiece\n+01CDF4627A3B88AAE4A571C87588242FBE38D3A8 Gavin Andresen\n+D1DBF2C4B96F2DEBF4C16654410108112E7EA81F Hennadii Stepanov (hebasto)\n+D3CC177286005BB8FF673294C5242A1AB3936517 jl2012\n+32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC Jonas Schnelli\n+4B4E840451149DD7FB0D633477DFAB5C3108B9A8 Jorge Timon\n+C42AFF7C61B3E44A1454CD3557AF762DB3353322 Karl-Johan Alm (kallewoof)\n+E463A93F5F3117EEDE6C7316BD02942421F4889F Luke Dashjr\n+B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B Marco Falke\n+07DF3E57A548CCFB7530709189BBB8663E2E65CE Matt Corallo (BlueMatt)\n+CA03882CB1FC067B5D3ACFE4D300116E1C875A3D MeshCollider\n+E777299FC265DD04793070EB944D35F9AC3DB76A Michael Ford\n+9692B91BBF0E8D34DFD33B1882C5C009628ECF0C Michagogo\n+77E72E69DA7EE0A148C06B21B34821D4944DE5F7 Nils Schneider\n+D62A803E27E7F43486035ADBBCD04D8E9CCCAC2A Paul Rabahy\n+37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04 Peter Todd\n+D762373D24904A3E42F33B08B9A408E71DAAC974 Pieter Wuille (Location: Leuven, Belgium)\n+133EAC179436F14A5CF1B794860FEB804E669320 Pieter Wuille\n+A8FC55F3B04BA3146F3492E79303B33A305224CB Sebastian Kung (TheCharlatan)\n+ED9BDF7AD6A55E232E84524257FF9BDBCC301009 Sjors Provoost\n+AEC1884398647C47413C1C3FB1179EB7347DC10D Warren Togami\n+79D00BAC68B56D422F945A8F8E3A8F3247DBCBBF Willy Ko\n+71A3B16735405025D447E8F274810B012346C9A6 Wladimir J. van der Laan"
      },
      {
        "sha": "559295109d9646f4baa3f2d7c1eb374333899fd9",
        "filename": "contrib/gitian-keys/laanwj-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/laanwj-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/laanwj-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/laanwj-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,28 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: SKS 1.1.0\n-\n-mQENBE5UtMEBCADOUz2i9l/D8xYINCmfUDnxi+DXvX5LmZ39ZdvsoE+ugO0SRRGdIHEFO2is\n-0xezX50wXu9aneb+tEqM0BuiLo6VxaXpxrkxHpr6c4jf37SkE/H0qsi/txEUp7337y3+4HMG\n-lUjiuh802I72p1qusjsKBnmnnR0rwNouTcoDmGUDh7jpKCtzFv+2TR2dRthJn7vmmjq3+bG6\n-PYfqoFY1yHrAGT1lrDBULZsQ/NBLI2+J4oo2LYv3GCq8GNnzrovqvTvui50VSROhLrOe58o2\n-shE+sjQShAy5wYkPt1R1fQnpfx+5vf+TPnkxVwRb3h5GhCp0YL8XC/BXsd5vM4KlVH2rABEB\n-AAG0K1dsYWRpbWlyIEouIHZhbiBkZXIgTGFhbiA8bGFhbndqQGdtYWlsLmNvbT6JATgEEwEC\n-ACIFAk5UtMECGwMGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEHSBCwEjRsmmy6YIAK09\n-buNXyYQrJBsX16sXxEhx5QPKyF3uHJDFJv66SdnpvIkNoznsaPiRJkbTANop93FZmaGa6wVn\n-zGDiz7jPA8Dpxx5aAYPhIT+zPJAdXWM3wJ/Gio9besRNzniai8Lwi5MZ9R/5yFGBobm6/AcN\n-4sUoqA3NSV2U3I29R0Vwlzo8GVtmyi9ENSi6Oo7AcXNTRt69cxW4nAHkB+amwwDJlcAb31ex\n-bogYXPhScwqQZixRr+JBkKxBjkTXXnQypT4KI5SegYwQVYfyiZmDP7UHKe/u6pSKKbVphLg8\n-xLB5spcXse8/a2+onrbNlw6y8TXiJ++Z54PE7zztWTXf2huakeG5AQ0ETlS0wQEIAMNO3OkP\n-xoPRKWzBLcI7JRITAW+HNaLTq3uN2+4WxA57DEjbL9EDoAv+7wTkDAL40f0T+xiu6GJcLFjw\n-GJZu/tYu7+mErHjrdo+K4suCQt7w5EXCBvOLjhW4tyYMzNx8hP+oqzOW9iEC+6VV91+DYeqt\n-EkJuyVXOI4vzBlTw8uGow8aMMsCq8XVvKUZFTPsjGl197Q5B3A+ZOFCR8xqiqdPjuz6MglVV\n-oFdDNu3EZn8zkGsQlovXoE9ndVeVzx/XMNmsxFaMYsReUs253RIf1FEfgExID0fg2OnyLCjS\n-2iFW1RgajS+/saIkKl+N1iuMzJA7wMAM0plhRueOG0MtZSsAEQEAAYkBHwQYAQIACQUCTlS0\n-wQIbDAAKCRB0gQsBI0bJpmsDB/4waenn2CvSHXyomykfpwf5lMte1V5LvH3z5R2LY+1NopRv\n-LSz3iC39x69XWiTbhywDfgafnGPW4pWBOff2/bu5/A6z1Hnan1vyrRRD/hx1uMJ7S6q+bIvZ\n-iVIg1p0jH6tdIIhwX3cydhdRZHo7e9oSMgOUWsr6Ar59NRo9CENwGPE4U61HXfOnxWdrFWoA\n-XdwZczBeLxmUy6Vo6sKqv+gE4bqrtAM0sY/MsQ9cU95x+52ox/sq44lQMwd3ZBYUP7B1qbHI\n-hZSZuch6MLi5scLPeau0ZvCaljiaMeivP5+x0gWPRs0kI+9sZxInbqvrsJ6oOBJM3xYGhtn1\n-zZ7qmZR7\n-=si/k\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "a2d34e75e1c16c17cb721633038813800dbe45b3",
        "filename": "contrib/gitian-keys/luke-jr-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/luke-jr-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "ee626500a482448cb2c7717ba352260262a3422f",
        "filename": "contrib/gitian-keys/marcofalke-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 69,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/marcofalke-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/marcofalke-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/marcofalke-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,69 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1\n-\n-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\n-=GC3s\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "47bc404554b41866c5626384c30a9e4f9261958c",
        "filename": "contrib/gitian-keys/michagogo-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/michagogo-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/michagogo-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/michagogo-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,59 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.12 (GNU/Linux)\n-\n-mQENBFGeqJ4BCADb7SI3/+q93gIvN0AGRg9Mtz73OLIOzCHeeoyn+tp7JcYNzxkQ\n-9lfeXiEfn72Sh8gHkLtLIqr7HlIMo8DxSS8JPRVjlJGkNyAW4SeEwN2wNa5OV8k0\n-N4jBa9a1csFyCyrEkPKvkUpBkQDvNXjNxyEhHwyZqPanKxy6NXIHOJji8ObOMQXI\n-T9HwJrpjRth3u4uKG968JBTEyAXAmkt0Zidl1Ykgzcedk4mJSE9uZCW8DjSv2wML\n-XcQz8+dYsoskT3KRdkowLHxAfj1BNyNc1+rKLghliM5vSQWi+Lbhi1Bxh4sY1UwA\n-lKnAGqrnAGyIvCtkwTq5QI6ufF2ZY44bvVgpABEBAAG0IU1pY2hhZ29nbyA8bWlj\n-aGFnb2dvQHNlcnZlci5mYWtlPokBOAQTAQIAIgUCUZ6ongIbAwYLCQgHAwIGFQgC\n-CQoLBBYCAwECHgECF4AACgkQgsXACWKOzwzMUAgAuqUmK10xE5C3lUym2f72z0t6\n-a2NM5Wfjr9//Y1/okC36C5XAMEtN2UwckPzzJ5p5D5y5yzwfZq5Jd8Py29VQIMsV\n-7FbC1a0H3D+bCyX+JJ6FAmUbnWOQ/+mydYc74RvD8iwjePNT6kziZNv6dMGctJTl\n-0alwjtQYgyGkeYKnIxbcyjHX/IawLUrunb/6mSKun87T8+NM/omfFCTc3l8TakpM\n-0wyNYRiUkIfUBvB8sDUU3A80qKN/hqRKvlFu3+/kMiAc9ZYQrbmsB+sYWdmM+4zw\n-8NBw3yuYzWyPuoa4PR5ZmS9F11WLMR5vTRCdLudAqYsWu3LtV6vAIvlOUa2LMLRg\n-TWljaGFnb2dvIChSZWdpc3RlcmVkIG5pY2sgbWljaGFnb2dvIG9uIGZyZWVub2Rl\n-IGFzIG9mIE9jdG9iZXIgMTIsIDIwMTMpIDxtaWNoYWdvZ29Ac2VydmVyLmZha2U+\n-iQE4BBMBAgAiBQJSWarzAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRCC\n-xcAJYo7PDA7nB/91wAiaMlU5nHLUu0anhNQbGvUdFgKK1zO90S5KzUdJcY438jcS\n-UJW1az8l9U9JBRIfPRYVhz/Z1TAJ+dCzD7D8BXHFeGEr0zNOh87ly9aB5du7dpN2\n-oSBD6wLcJpqxt4h+XjSS2CX98/2ZIJxXENE2KySaTXP39Xl3eNwvJTUBA4XlcMey\n-J8KMp/IERli4H0O7vRyLgu3yYpUArTqAonzG1g2lfB35PQJfeInrRSniQ336otnZ\n-A8qwJ63kfUtWVDRz0g1fnvtiLGPivDJaI5hyIaUeJPaXU1+sg7YNroDu60o2NGZh\n-F+0IjHlvRfzzA+F9Vw38rpSqR3BmCdjf6Sv3iQEcBBABAgAGBQJSWa9/AAoJEH+r\n-EUJn5PoE/hgH/1T2dAthVucA/hzY0nl4SMjbg+dzNlYBq00Qwx8DRKVjk5et8+kY\n-oPI3DGILcr+ELnxNekeMv9WQBBtJanUh1K5ohZ6ohoR7lG18LXf5HCdspflB5Me6\n-LMA6iMryEP6gIs9GFuoGe2YQavm58YrkqhcPu34dGN7kdurfEXLvDfVlh5ZbKCsP\n-Gyd7Pbz04SpqykgK1udiTsLVjc70Xhv+jAMqeaCugDX6TLEwjVmZH/xsyKk2Uh3V\n-Oib5FXADAtKH+vSqqhFpXrw7R/NaBzvCbas8l61DFHiUg1/bo8vsV8MtGcyZmzXJ\n-C5Gm0njtGOil/g7JF9siUrpxs9Yyt/h+T2W0W01pY2hhZ29nbyAoVXNlciBhY2Nv\n-dW50IG1pY2hhZ29nbyBvbiBHaXRodWIgYXMgb2YgT2N0b2JlciAxMiwgMjAxMykg\n-PG1pY2hhZ29nb0BzZXJ2ZXIuZmFrZT6JATcEEwECACIFAlJZqxkCGwMGCwkIBwMC\n-BhUIAgkKCwQWAgMBAh4BAheAAAoJEILFwAlijs8M+1AH+IU78ARblqTnJeSl0iWH\n-mEsg4IBK30Q6/exDAcqOEm1Yc171uw2WnGmIvPYOQqxrRTvj3LoQ816dU6jrj6vY\n-s+XX0R2hxy7ILh17D/3UKnHcddu7rmc7pNEqZeBXaMughqQaPOWkAIe52+qK5tsl\n-sWllzTYE4jo29uZ3dAtDcKEJjBo/pIXnu1GOslE1+V4X1H9WDlwrS/JXHzyDQAjt\n-maPR+3gNesDanhrRmrnT3ZXW2ZVd3vGBibhia8PWUhU1uwOH23ySWXncgsHH0Zad\n-UMjd4w3YliZP/mLn2ghAxHB70IO7lgAgN3HYZeFoufP3pcK440A+CezfQiRcjHl/\n-oIkBHAQQAQIABgUCUlmvfwAKCRB/qxFCZ+T6BOq9CACItsrUZPKGeWSTkMHknMrV\n-K5vxIXJVCBb+Tppc0Q/J5p4EkW/RFhTwIP2zw8NLDKMh5oO9md4LXhvfIZkqQJFo\n-6ZtLa3Vf+Kj7uyxezBo4QHA+G7tDsRGaMKVrEMiyLCwS1+hg9VaNzsf7zmQW7mYE\n-vTLMHp3cVaSU7Mh2Dl8rnAaM/DpTUZQwZ+32Qrb/Z4HSa4f278iqoFpjEbBE2KCr\n-vT5yEVvpCZ4lwSgA2a+uTlRTvVV6NA/kpsxU64tmhuEOjy+ToDqJ8wv4mqvWZxMv\n-C6OhfVaXBy3U9gG8aQV0ffXGs+TbCtv8ApHd6E1/AVk0oyZGJaBVrEl688bBIWd/\n-uQENBFGeqJ4BCADFmgR7oEGkFFB5qXnuNYFq1nUGDAh0dLNtAD3J6EMxUZEXdmp+\n-DQHJw6/eDRQaG9EbjNZheycbVUoI8K2Y/Z268HQueGuIEIJv6cZYXoXdWCbDD4fn\n-HMNUX2wNlpDqWxb7PNUEtfU9hI3gmHGlr5OiEh3iV06uiZg4n2rbWPbj45m5LJzv\n-wpCrUA+pLcl9Xjw2cajaSTjdXHk9gvXTCo6s2ZS3/3Q4l+xuzZp1MGNzPQHASMKs\n-wecSJKkYg6W8I5WsVlPd9a8oQCc/Nfz7BPw31MRVR/SF5FAMqaXx5uLwghVdHB2i\n-cLURsOtJlCfP8W06gB7yS+MH45Jq/oxBRiJBABEBAAGJAR8EGAECAAkFAlGeqJ4C\n-GwwACgkQgsXACWKOzwwT4wgAy6ICcnBZ9l2jSu+ldy57F6jf5kpKZgB9NV8V2mMA\n-NeY1wMQ4VTVpU4t3s4E2LYtGNJNkPQVHbt1Pf4dGPasvMPaHMamgwgyqgYixqs0x\n-D5PdKzVrfnjwTTr/ZAFdccSPmvy5/hbY0geQ/+mzdbL07+xaT58JIoG5nySDKhmC\n-VeOvhDZtXMVAhEWBDPEgh/H9sEuBgMgZrzfE1j3q802qiXeQs6WtadWlQ1RN9Iq1\n-ZzIi6u9/BifEIRI0pO/WwKOZdXLTemFUoakoe7uT3A74N96t0G9LZVihYbEoO+Pc\n-5IaHPBV5VLeR3TB1LnnjHVf/Fwi8cnGy50kNWjcbMyEDag==\n-=jyQ4\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "5ee82a6f7ea42f0f4ecacbfc0b2541b3d98a48d7",
        "filename": "contrib/gitian-keys/petertodd-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 1901,
        "changes": 1901,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/petertodd-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/petertodd-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/petertodd-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "0870c88b9b3608b761565063dcbdc33536250227",
        "filename": "contrib/gitian-keys/prab-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/prab-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/prab-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/prab-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,81 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v2\n-\n-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\n-RFdDYRHByRDDL1I=\n-=dOwX\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "a1930ddee905f688dcb3a189a88e1317e7006a0f",
        "filename": "contrib/gitian-keys/sipa-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/sipa-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/sipa-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/sipa-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "baaec76b8c656a04beb4a91155dff40658c87bd7",
        "filename": "contrib/gitian-keys/tcatm-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/tcatm-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/tcatm-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/tcatm-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "e0f6c4c5fdf56ffbd6308d4e0a6624290feadff6",
        "filename": "contrib/gitian-keys/wtogami-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 131,
        "changes": 131,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/wtogami-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/gitian-keys/wtogami-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/wtogami-key.pgp?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,131 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.13 (GNU/Linux)\n-\n-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\n-=icdI\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "46d755886c0de0afc3d244c6999abb09d588838e",
        "filename": "contrib/guix/README.md",
        "status": "added",
        "additions": 228,
        "deletions": 0,
        "changes": 228,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/guix/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/guix/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,228 @@\n+# Bootstrappable Bitcoin Core Builds\n+\n+This directory contains the files necessary to perform bootstrappable Bitcoin\n+Core builds.\n+\n+[Bootstrappability][b17e] furthers our binary security guarantees by allowing us\n+to _audit and reproduce_ our toolchain instead of blindly _trusting_ binary\n+downloads.\n+\n+We achieve bootstrappability by using Guix as a functional package manager.\n+\n+## Requirements\n+\n+Conservatively, a x86_64 machine with:\n+\n+- 2 or more logical cores\n+- 4GB of free disk space on the partition that /gnu/store will reside in\n+- 24GB of free disk space on the partition that the Bitcoin Core git repository\n+  resides in\n+\n+> Note: these requirements are slightly less onerous than those of Gitian builds\n+\n+## Setup\n+\n+### Installing Guix\n+\n+If you're just testing this out, you can use the\n+[Dockerfile][fanquake/guix-docker] for convenience. It automatically speeds up\n+your builds by [using substitutes](#speeding-up-builds-with-substitute-servers).\n+If you don't want this behaviour, refer to the [next\n+section](#choosing-your-security-model).\n+\n+Otherwise, follow the [Guix installation guide][guix/bin-install].\n+\n+> Note: For those who like to keep their filesystems clean, Guix is designed to\n+> be very standalone and _will not_ conflict with your system's package\n+> manager/existing setup. It _only_ touches `/var/guix`, `/gnu`, and\n+> `~/.config/guix`.\n+\n+### Choosing your security model\n+\n+Guix allows us to achieve better binary security by using our CPU time to build\n+everything from scratch. However, it doesn't sacrifice user choice in pursuit of\n+this: users can decide whether or not to bootstrap and to use substitutes.\n+\n+After installation, you may want to consider [adding substitute\n+servers](#speeding-up-builds-with-substitute-servers) to speed up your build if\n+that fits your security model (say, if you're just testing that this works).\n+This is skippable if you're using the [Dockerfile][fanquake/guix-docker].\n+\n+If you prefer not to use any substitutes, make sure to set\n+`ADDITIONAL_GUIX_ENVIRONMENT_FLAGS` like the following snippet. The first build\n+will take a while, but the resulting packages will be cached for future builds.\n+\n+```sh\n+export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--no-substitutes'\n+```\n+\n+Likewise, to perform a bootstrapped build (takes even longer):\n+\n+```sh\n+export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--bootstrap --no-substitutes'\n+```\n+\n+### Using a version of Guix with `guix time-machine` capabilities\n+\n+> Note: This entire section can be skipped if you are already using a version of\n+> Guix that has [the `guix time-machine` command][guix/time-machine].\n+\n+Once Guix is installed, if it doesn't have the `guix time-machine` command, pull\n+the latest `guix`.\n+\n+```sh\n+guix pull --max-jobs=4 # change number of jobs accordingly\n+```\n+\n+Make sure that you are using your current profile. (You are prompted to do this\n+at the end of the `guix pull`)\n+\n+```bash\n+export PATH=\"${HOME}/.config/guix/current/bin${PATH:+:}$PATH\"\n+```\n+\n+## Usage\n+\n+### As a Development Environment\n+\n+For a Bitcoin Core depends development environment, simply invoke\n+\n+```sh\n+guix environment --manifest=contrib/guix/manifest.scm\n+```\n+\n+And you'll land back in your shell with all the build dependencies required for\n+a `depends` build injected into your environment.\n+\n+### As a Tool for Deterministic Builds\n+\n+From the top of a clean Bitcoin Core repository:\n+\n+```sh\n+./contrib/guix/guix-build.sh\n+```\n+\n+After the build finishes successfully (check the status code please), compare\n+hashes:\n+\n+```sh\n+find output/ -type f -print0 | sort -z | xargs -r0 sha256sum\n+```\n+\n+#### Recognized environment variables\n+\n+* _**HOSTS**_\n+\n+  Override the space-separated list of platform triples for which to perform a\n+  bootstrappable build. _(defaults to \"i686-linux-gnu x86\\_64-linux-gnu\n+  arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu\")_\n+\n+  > Windows and OS X platform triplet support are WIP.\n+\n+* _**SOURCES_PATH**_\n+\n+  Set the depends tree download cache for sources. This is passed through to the\n+  depends tree. Setting this to the same directory across multiple builds of the\n+  depends tree can eliminate unnecessary redownloading of package sources.\n+\n+* _**MAX_JOBS**_\n+\n+  Override the maximum number of jobs to run simultaneously, you might want to\n+  do so on a memory-limited machine. This may be passed to `make` as in `make\n+  --jobs=\"$MAX_JOBS\"` or `xargs` as in `xargs -P\"$MAX_JOBS\"`. _(defaults to the\n+  value of `nproc` outside the container)_\n+\n+* _**SOURCE_DATE_EPOCH**_\n+\n+  Override the reference UNIX timestamp used for bit-for-bit reproducibility,\n+  the variable name conforms to [standard][r12e/source-date-epoch]. _(defaults\n+  to the output of `$(git log --format=%at -1)`)_\n+\n+* _**V**_\n+\n+  If non-empty, will pass `V=1` to all `make` invocations, making `make` output\n+  verbose.\n+\n+* _**ADDITIONAL_GUIX_ENVIRONMENT_FLAGS**_\n+\n+  Additional flags to be passed to `guix environment`. For a fully-bootstrapped\n+  build, set this to `--bootstrap --no-substitutes` (refer to the [security\n+  model section](#choosing-your-security-model) for more details). Note that a\n+  fully-bootstrapped build will take quite a long time on the first run.\n+\n+## Tips and Tricks\n+\n+### Speeding up builds with substitute servers\n+\n+_This whole section is automatically done in the convenience\n+[Dockerfiles][fanquake/guix-docker]_\n+\n+For those who are used to life in the fast _(and trustful)_ lane, you can use\n+[substitute servers][guix/substitutes] to enable binary downloads of packages.\n+\n+> For those who only want to use substitutes from the official Guix build farm\n+> and have authorized the build farm's signing key during Guix's installation,\n+> you don't need to do anything.\n+\n+#### Authorize the signing keys\n+\n+For the official Guix build farm at https://ci.guix.gnu.org, run as root:\n+\n+```\n+guix archive --authorize < ~root/.config/guix/current/share/guix/ci.guix.gnu.org.pub\n+```\n+\n+For dongcarl's substitute server at https://guix.carldong.io, run as root:\n+\n+```sh\n+wget -qO- 'https://guix.carldong.io/signing-key.pub' | guix archive --authorize\n+```\n+\n+#### Use the substitute servers\n+\n+The official Guix build farm at https://ci.guix.gnu.org is automatically used\n+unless the `--no-substitutes` flag is supplied.\n+\n+This can be overridden for all `guix` invocations by passing the\n+`--substitute-urls` option to your invocation of `guix-daemon`. This can also be\n+overridden on a call-by-call basis by passing the same `--substitute-urls`\n+option to client tools such at `guix environment`.\n+\n+To use dongcarl's substitute server for Bitcoin Core builds after having\n+[authorized his signing key](#authorize-the-signing-keys):\n+\n+```\n+export ADDITIONAL_GUIX_ENVIRONMENT_FLAGS='--substitute-urls=\"https://guix.carldong.io https://ci.guix.gnu.org\"'\n+```\n+\n+## FAQ\n+\n+### How can I trust the binary installation?\n+\n+As mentioned at the bottom of [this manual page][guix/bin-install]:\n+\n+> The binary installation tarballs can be (re)produced and verified simply by\n+> running the following command in the Guix source tree:\n+>\n+>     make guix-binary.x86_64-linux.tar.xz\n+\n+### When will Guix be packaged in debian?\n+\n+Vagrant Cascadian has been making good progress on this\n+[here][debian/guix-package]. We have all the pieces needed to put up an APT\n+repository and will likely put one up soon.\n+\n+[b17e]: http://bootstrappable.org/\n+[r12e/source-date-epoch]: https://reproducible-builds.org/docs/source-date-epoch/\n+\n+[guix/install.sh]: https://git.savannah.gnu.org/cgit/guix.git/plain/etc/guix-install.sh\n+[guix/bin-install]: https://www.gnu.org/software/guix/manual/en/html_node/Binary-Installation.html\n+[guix/env-setup]: https://www.gnu.org/software/guix/manual/en/html_node/Build-Environment-Setup.html\n+[guix/substitutes]: https://www.gnu.org/software/guix/manual/en/html_node/Substitutes.html\n+[guix/substitute-server-auth]: https://www.gnu.org/software/guix/manual/en/html_node/Substitute-Server-Authorization.html\n+[guix/inferiors]: https://www.gnu.org/software/guix/manual/en/html_node/Inferiors.html\n+[guix/channels]: https://www.gnu.org/software/guix/manual/en/html_node/Channels.html\n+[guix/time-machine]: https://guix.gnu.org/manual/en/html_node/Invoking-guix-time_002dmachine.html\n+\n+[debian/guix-package]: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=850644\n+[fanquake/guix-docker]: https://github.com/fanquake/core-review/tree/master/guix"
      },
      {
        "sha": "5e0c681f29bda2af4a1f92504cfd2abee2ed8376",
        "filename": "contrib/guix/guix-build.sh",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/guix/guix-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/guix/guix-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/guix-build.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,45 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Determine the maximum number of jobs to run simultaneously (overridable by\n+# environment)\n+MAX_JOBS=\"${MAX_JOBS:-$(nproc)}\"\n+\n+# Download the depends sources now as we won't have internet access in the build\n+# container\n+make -C \"${PWD}/depends\" -j\"$MAX_JOBS\" download ${V:+V=1} ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"}\n+\n+# Determine the reference time used for determinism (overridable by environment)\n+SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:-$(git log --format=%at -1)}\"\n+\n+time-machine() {\n+    guix time-machine --url=https://github.com/dongcarl/guix.git \\\n+                      --commit=b3a7c72c8b2425f8ddb0fc6e3b1caeed40f86dee \\\n+                      -- \"$@\"\n+}\n+\n+# Deterministically build Bitcoin Core for HOSTs (overriable by environment)\n+for host in ${HOSTS=i686-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu riscv64-linux-gnu}; do\n+\n+    # Display proper warning when the user interrupts the build\n+    trap 'echo \"** INT received while building ${host}, you may want to clean up the relevant output and distsrc-* directories before rebuilding\"' INT\n+\n+    # Run the build script 'contrib/guix/libexec/build.sh' in the build\n+    # container specified by 'contrib/guix/manifest.scm'\n+    # shellcheck disable=SC2086\n+    time-machine environment --manifest=\"${PWD}/contrib/guix/manifest.scm\" \\\n+                             --container \\\n+                             --pure \\\n+                             --no-cwd \\\n+                             --share=\"$PWD\"=/bitcoin \\\n+                             ${SOURCES_PATH:+--share=\"$SOURCES_PATH\"} \\\n+                             ${ADDITIONAL_GUIX_ENVIRONMENT_FLAGS} \\\n+                             -- env HOST=\"$host\" \\\n+                                    MAX_JOBS=\"$MAX_JOBS\" \\\n+                                    SOURCE_DATE_EPOCH=\"${SOURCE_DATE_EPOCH:?unable to determine value}\" \\\n+                                    ${V:+V=1} \\\n+                                    ${SOURCES_PATH:+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n+                                  bash -c \"cd /bitcoin && bash contrib/guix/libexec/build.sh\"\n+\n+done"
      },
      {
        "sha": "ee207a957c12be10c155fec9ae8aa856ea3906e5",
        "filename": "contrib/guix/libexec/build.sh",
        "status": "added",
        "additions": 214,
        "deletions": 0,
        "changes": 214,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/guix/libexec/build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/guix/libexec/build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/libexec/build.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,214 @@\n+#!/usr/bin/env bash\n+export LC_ALL=C\n+set -e -o pipefail\n+\n+# Check that environment variables assumed to be set by the environment are set\n+echo \"Building for platform triple ${HOST:?not set} with reference timestamp ${SOURCE_DATE_EPOCH:?not set}...\"\n+echo \"At most ${MAX_JOBS:?not set} jobs will run at once...\"\n+\n+#####################\n+# Environment Setup #\n+#####################\n+\n+# The depends folder also serves as a base-prefix for depends packages for\n+# $HOSTs after successfully building.\n+BASEPREFIX=\"${PWD}/depends\"\n+\n+# Setup an output directory for our build\n+OUTDIR=\"${OUTDIR:-${PWD}/output}\"\n+[ -e \"$OUTDIR\" ] || mkdir -p \"$OUTDIR\"\n+\n+# Setup the directory where our Bitcoin Core build for HOST will occur\n+DISTSRC=\"${DISTSRC:-${PWD}/distsrc-${HOST}}\"\n+if [ -e \"$DISTSRC\" ]; then\n+    echo \"DISTSRC directory '${DISTSRC}' exists, probably because of previous builds... Aborting...\"\n+    exit 1\n+else\n+    mkdir -p \"$DISTSRC\"\n+fi\n+\n+# Given a package name and an output name, return the path of that output in our\n+# current guix environment\n+store_path() {\n+    grep --extended-regexp \"/[^-]{32}-${1}-[^-]+${2:+-${2}}\" \"${GUIX_ENVIRONMENT}/manifest\" \\\n+        | head --lines=1 \\\n+        | sed --expression='s|^[[:space:]]*\"||' \\\n+              --expression='s|\"[[:space:]]*$||'\n+}\n+\n+# Determine output paths to use in CROSS_* environment variables\n+CROSS_GLIBC=\"$(store_path glibc-cross-${HOST})\"\n+CROSS_GLIBC_STATIC=\"$(store_path glibc-cross-${HOST} static)\"\n+CROSS_KERNEL=\"$(store_path linux-libre-headers-cross-${HOST})\"\n+CROSS_GCC=\"$(store_path gcc-cross-${HOST})\"\n+CROSS_GCC_LIBS=( \"${CROSS_GCC}/lib/gcc/${HOST}\"/* ) # This expands to an array of directories...\n+CROSS_GCC_LIB=\"${CROSS_GCC_LIBS[0]}\" # ...we just want the first one (there should only be one)\n+\n+# Set environment variables to point Guix's cross-toolchain to the right\n+# includes/libs for $HOST\n+#\n+# NOTE: CROSS_C_INCLUDE_PATH is missing ${CROSS_GCC_LIB}/include-fixed, because\n+# the limits.h in it is missing a '#include_next <limits.h>'\n+#\n+export CROSS_C_INCLUDE_PATH=\"${CROSS_GCC_LIB}/include:${CROSS_GLIBC}/include:${CROSS_KERNEL}/include\"\n+export CROSS_CPLUS_INCLUDE_PATH=\"${CROSS_GCC}/include/c++:${CROSS_GCC}/include/c++/${HOST}:${CROSS_GCC}/include/c++/backward:${CROSS_C_INCLUDE_PATH}\"\n+export CROSS_LIBRARY_PATH=\"${CROSS_GCC}/lib:${CROSS_GCC}/${HOST}/lib:${CROSS_GCC_LIB}:${CROSS_GLIBC}/lib:${CROSS_GLIBC_STATIC}/lib\"\n+\n+# Sanity check CROSS_*_PATH directories\n+IFS=':' read -ra PATHS <<< \"${CROSS_C_INCLUDE_PATH}:${CROSS_CPLUS_INCLUDE_PATH}:${CROSS_LIBRARY_PATH}\"\n+for p in \"${PATHS[@]}\"; do\n+    if [ ! -d \"$p\" ]; then\n+        echo \"'$p' doesn't exist or isn't a directory... Aborting...\"\n+        exit 1\n+    fi\n+done\n+\n+# Disable Guix ld auto-rpath behavior\n+export GUIX_LD_WRAPPER_DISABLE_RPATH=yes\n+\n+# Make /usr/bin if it doesn't exist\n+[ -e /usr/bin ] || mkdir -p /usr/bin\n+\n+# Symlink file and env to a conventional path\n+[ -e /usr/bin/file ] || ln -s --no-dereference \"$(command -v file)\" /usr/bin/file\n+[ -e /usr/bin/env ]  || ln -s --no-dereference \"$(command -v env)\"  /usr/bin/env\n+\n+# Determine the correct value for -Wl,--dynamic-linker for the current $HOST\n+glibc_dynamic_linker=$(\n+    case \"$HOST\" in\n+        i686-linux-gnu)      echo /lib/ld-linux.so.2 ;;\n+        x86_64-linux-gnu)    echo /lib64/ld-linux-x86-64.so.2 ;;\n+        arm-linux-gnueabihf) echo /lib/ld-linux-armhf.so.3 ;;\n+        aarch64-linux-gnu)   echo /lib/ld-linux-aarch64.so.1 ;;\n+        riscv64-linux-gnu)   echo /lib/ld-linux-riscv64-lp64d.so.1 ;;\n+        *)                   exit 1 ;;\n+    esac\n+)\n+\n+# Environment variables for determinism\n+export QT_RCC_TEST=1\n+export QT_RCC_SOURCE_DATE_OVERRIDE=1\n+export TAR_OPTIONS=\"--owner=0 --group=0 --numeric-owner --mtime='@${SOURCE_DATE_EPOCH}' --sort=name\"\n+export TZ=\"UTC\"\n+\n+####################\n+# Depends Building #\n+####################\n+\n+# Build the depends tree, overriding variables that assume multilib gcc\n+make -C depends --jobs=\"$MAX_JOBS\" HOST=\"$HOST\" \\\n+                                   ${V:+V=1} \\\n+                                   ${SOURCES_PATH+SOURCES_PATH=\"$SOURCES_PATH\"} \\\n+                                   i686_linux_CC=i686-linux-gnu-gcc \\\n+                                   i686_linux_CXX=i686-linux-gnu-g++ \\\n+                                   i686_linux_AR=i686-linux-gnu-ar \\\n+                                   i686_linux_RANLIB=i686-linux-gnu-ranlib \\\n+                                   i686_linux_NM=i686-linux-gnu-nm \\\n+                                   i686_linux_STRIP=i686-linux-gnu-strip \\\n+                                   x86_64_linux_CC=x86_64-linux-gnu-gcc \\\n+                                   x86_64_linux_CXX=x86_64-linux-gnu-g++ \\\n+                                   x86_64_linux_AR=x86_64-linux-gnu-ar \\\n+                                   x86_64_linux_RANLIB=x86_64-linux-gnu-ranlib \\\n+                                   x86_64_linux_NM=x86_64-linux-gnu-nm \\\n+                                   x86_64_linux_STRIP=x86_64-linux-gnu-strip \\\n+                                   qt_config_opts_i686_linux='-platform linux-g++ -xplatform bitcoin-linux-g++'\n+\n+\n+###########################\n+# Source Tarball Building #\n+###########################\n+\n+# Create the source tarball and move it to \"${OUTDIR}/src\" if not already there\n+if [ -z \"$(find \"${OUTDIR}/src\" -name 'bitcoin-*.tar.gz')\" ]; then\n+    ./autogen.sh\n+    env CONFIG_SITE=\"${BASEPREFIX}/${HOST}/share/config.site\" ./configure --prefix=/\n+    make dist GZIP_ENV='-9n' ${V:+V=1}\n+    mkdir -p \"${OUTDIR}/src\"\n+    mv \"$(find \"${PWD}\" -name 'bitcoin-*.tar.gz')\" \"${OUTDIR}/src/\"\n+fi\n+\n+# Determine the full path to our source tarball\n+SOURCEDIST=\"$(find \"${OUTDIR}/src\" -name 'bitcoin-*.tar.gz')\"\n+# Determine our distribution name (e.g. bitcoin-0.18.0)\n+DISTNAME=\"$(basename \"$SOURCEDIST\" '.tar.gz')\"\n+\n+###########################\n+# Binary Tarball Building #\n+###########################\n+\n+# Similar flags to Gitian\n+CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n+HOST_CFLAGS=\"-O2 -g -ffile-prefix-map=${PWD}=.\"\n+HOST_CXXFLAGS=\"-O2 -g -ffile-prefix-map=${PWD}=.\"\n+HOST_LDFLAGS=\"-Wl,--as-needed -Wl,--dynamic-linker=$glibc_dynamic_linker -static-libstdc++\"\n+\n+# Make $HOST-specific native binaries from depends available in $PATH\n+export PATH=\"${BASEPREFIX}/${HOST}/native/bin:${PATH}\"\n+(\n+    cd \"$DISTSRC\"\n+\n+    # Extract the source tarball\n+    tar --strip-components=1 -xf \"${SOURCEDIST}\"\n+\n+    # Configure this DISTSRC for $HOST\n+    # shellcheck disable=SC2086\n+    env CONFIG_SITE=\"${BASEPREFIX}/${HOST}/share/config.site\" \\\n+        ./configure --prefix=/ \\\n+                    --disable-ccache \\\n+                    --disable-maintainer-mode \\\n+                    --disable-dependency-tracking \\\n+                    ${CONFIGFLAGS} \\\n+                    CFLAGS=\"${HOST_CFLAGS}\" \\\n+                    CXXFLAGS=\"${HOST_CXXFLAGS}\" \\\n+                    LDFLAGS=\"${HOST_LDFLAGS}\"\n+\n+    sed -i.old 's/-lstdc++ //g' config.status libtool src/univalue/config.status src/univalue/libtool\n+\n+    # Build Bitcoin Core\n+    make --jobs=\"$MAX_JOBS\" ${V:+V=1}\n+\n+    # Perform basic ELF security checks on a series of executables.\n+    make -C src --jobs=1 check-security ${V:+V=1}\n+    # Check that executables only contain allowed gcc, glibc and libstdc++\n+    # version symbols for Linux distro back-compatibility.\n+    make -C src --jobs=1 check-symbols  ${V:+V=1}\n+\n+    # Setup the directory where our Bitcoin Core build for HOST will be\n+    # installed. This directory will also later serve as the input for our\n+    # binary tarballs.\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n+    mkdir -p \"${INSTALLPATH}\"\n+    # Install built Bitcoin Core to $INSTALLPATH\n+    make install DESTDIR=\"${INSTALLPATH}\" ${V:+V=1}\n+    (\n+        cd installed\n+\n+        # Prune libtool and object archives\n+        find . -name \"lib*.la\" -delete\n+        find . -name \"lib*.a\" -delete\n+\n+        # Prune pkg-config files\n+        rm -r \"${DISTNAME}/lib/pkgconfig\"\n+\n+        # Split binaries and libraries from their debug symbols\n+        {\n+            find \"${DISTNAME}/bin\" -type f -executable -print0\n+            find \"${DISTNAME}/lib\" -type f -print0\n+        } | xargs -0 -n1 -P\"$MAX_JOBS\" -I{} \"${DISTSRC}/contrib/devtools/split-debug.sh\" {} {} {}.dbg\n+\n+        cp \"${DISTSRC}/doc/README.md\" \"${DISTNAME}/\"\n+\n+        # Finally, deterministically produce {non-,}debug binary tarballs ready\n+        # for release\n+        find \"${DISTNAME}\" -not -name \"*.dbg\" -print0 \\\n+            | sort --zero-terminated \\\n+            | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+            | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" \\\n+            || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}.tar.gz\" && exit 1 )\n+        find \"${DISTNAME}\" -name \"*.dbg\" -print0 \\\n+            | sort --zero-terminated \\\n+            | tar --create --no-recursion --mode='u+rw,go+r-w,a+X' --null --files-from=- \\\n+            | gzip -9n > \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" \\\n+            || ( rm -f \"${OUTDIR}/${DISTNAME}-${HOST}-debug.tar.gz\" && exit 1 )\n+    )\n+)"
      },
      {
        "sha": "23b656cad7e6d2e273464ae74cb3ce014c7b984b",
        "filename": "contrib/guix/manifest.scm",
        "status": "added",
        "additions": 158,
        "deletions": 0,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,158 @@\n+(use-modules (gnu)\n+             (gnu packages)\n+             (gnu packages autotools)\n+             (gnu packages base)\n+             (gnu packages bash)\n+             (gnu packages check)\n+             (gnu packages commencement)\n+             (gnu packages compression)\n+             (gnu packages cross-base)\n+             (gnu packages file)\n+             (gnu packages gawk)\n+             (gnu packages gcc)\n+             (gnu packages linux)\n+             (gnu packages perl)\n+             (gnu packages pkg-config)\n+             (gnu packages python)\n+             (gnu packages shells)\n+             (guix build-system trivial)\n+             (guix gexp)\n+             (guix packages)\n+             (guix profiles)\n+             (guix utils))\n+\n+(define (make-ssp-fixed-gcc xgcc)\n+  \"Given a XGCC package, return a modified package that uses the SSP function\n+from glibc instead of from libssp.so. Taken from:\n+http://www.linuxfromscratch.org/hlfs/view/development/chapter05/gcc-pass1.html\"\n+  (package\n+   (inherit xgcc)\n+   (arguments\n+    (substitute-keyword-arguments (package-arguments xgcc)\n+      ((#:make-flags flags)\n+       `(cons \"gcc_cv_libc_provides_ssp=yes\" ,flags))))))\n+\n+(define (make-gcc-rpath-link xgcc)\n+  \"Given a XGCC package, return a modified package that replace each instance of\n+-rpath in the default system spec that's inserted by Guix with -rpath-link\"\n+  (package\n+   (inherit xgcc)\n+   (arguments\n+    (substitute-keyword-arguments (package-arguments xgcc)\n+      ((#:phases phases)\n+       `(modify-phases ,phases\n+          (add-after 'pre-configure 'replace-rpath-with-rpath-link\n+            (lambda _\n+              (substitute* (cons \"gcc/config/rs6000/sysv4.h\"\n+                                 (find-files \"gcc/config\"\n+                                             \"^gnu-user.*\\\\.h$\"))\n+                ((\"-rpath=\") \"-rpath-link=\"))\n+              #t))))))))\n+\n+(define (make-cross-toolchain target\n+                              base-gcc-for-libc\n+                              base-kernel-headers\n+                              base-libc\n+                              base-gcc)\n+  \"Create a cross-compilation toolchain package for TARGET\"\n+  (let* ((xbinutils (cross-binutils target))\n+         ;; 1. Build a cross-compiling gcc without targeting any libc, derived\n+         ;; from BASE-GCC-FOR-LIBC\n+         (xgcc-sans-libc (cross-gcc target\n+                                    #:xgcc base-gcc-for-libc\n+                                    #:xbinutils xbinutils))\n+         ;; 2. Build cross-compiled kernel headers with XGCC-SANS-LIBC, derived\n+         ;; from BASE-KERNEL-HEADERS\n+         (xkernel (cross-kernel-headers target\n+                                        base-kernel-headers\n+                                        xgcc-sans-libc\n+                                        xbinutils))\n+         ;; 3. Build a cross-compiled libc with XGCC-SANS-LIBC and XKERNEL,\n+         ;; derived from BASE-LIBC\n+         (xlibc (cross-libc target\n+                            base-libc\n+                            xgcc-sans-libc\n+                            xbinutils\n+                            xkernel))\n+         ;; 4. Build a cross-compiling gcc targeting XLIBC, derived from\n+         ;; BASE-GCC\n+         (xgcc (cross-gcc target\n+                          #:xgcc base-gcc\n+                          #:xbinutils xbinutils\n+                          #:libc xlibc)))\n+    ;; Define a meta-package that propagates the resulting XBINUTILS, XLIBC, and\n+    ;; XGCC\n+    (package\n+      (name (string-append target \"-toolchain\"))\n+      (version (package-version xgcc))\n+      (source #f)\n+      (build-system trivial-build-system)\n+      (arguments '(#:builder (begin (mkdir %output) #t)))\n+      (propagated-inputs\n+       `((\"binutils\" ,xbinutils)\n+         (\"libc\" ,xlibc)\n+         (\"libc:static\" ,xlibc \"static\")\n+         (\"gcc\" ,xgcc)))\n+      (synopsis (string-append \"Complete GCC tool chain for \" target))\n+      (description (string-append \"This package provides a complete GCC tool\n+chain for \" target \" development.\"))\n+      (home-page (package-home-page xgcc))\n+      (license (package-license xgcc)))))\n+\n+(define* (make-bitcoin-cross-toolchain target\n+                                  #:key\n+                                  (base-gcc-for-libc gcc-5)\n+                                  (base-kernel-headers linux-libre-headers-4.19)\n+                                  (base-libc glibc-2.27)\n+                                  (base-gcc (make-gcc-rpath-link\n+                                             (make-ssp-fixed-gcc gcc-9))))\n+  \"Convenience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n+desirable for building Bitcoin Core release binaries.\"\n+  (make-cross-toolchain target\n+                   base-gcc-for-libc\n+                   base-kernel-headers\n+                   base-libc\n+                   base-gcc))\n+\n+(packages->manifest\n+ (list ;; The Basics\n+       bash-minimal\n+       which\n+       coreutils\n+       util-linux\n+       ;; File(system) inspection\n+       file\n+       grep\n+       diffutils\n+       findutils\n+       ;; File transformation\n+       patch\n+       gawk\n+       sed\n+       ;; Compression and archiving\n+       tar\n+       bzip2\n+       gzip\n+       xz\n+       zlib\n+       ;; Build tools\n+       gnu-make\n+       libtool\n+       autoconf\n+       automake\n+       pkg-config\n+       ;; Scripting\n+       perl\n+       python-3.7\n+       ;; Native gcc 9 toolchain targeting glibc 2.27\n+       (make-gcc-toolchain gcc-9 glibc-2.27)\n+       ;; Cross gcc 9 toolchains targeting glibc 2.27\n+       (make-bitcoin-cross-toolchain \"i686-linux-gnu\")\n+       (make-bitcoin-cross-toolchain \"x86_64-linux-gnu\")\n+       (make-bitcoin-cross-toolchain \"aarch64-linux-gnu\")\n+       (make-bitcoin-cross-toolchain \"arm-linux-gnueabihf\")\n+       ;; The glibc 2.27 for riscv64 needs gcc 7 to successfully build (see:\n+       ;; https://www.gnu.org/software/gcc/gcc-7/changes.html#riscv). The final\n+       ;; toolchain is still a gcc 9 toolchain targeting glibc 2.27.\n+       (make-bitcoin-cross-toolchain \"riscv64-linux-gnu\"\n+                                     #:base-gcc-for-libc gcc-7)))"
      },
      {
        "sha": "306a37f75ab7018b0ce015064a7ae0159fd6e015",
        "filename": "contrib/init/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,12 +1,12 @@\n Sample configuration files for:\n-\n+```\n SystemD: bitcoind.service\n Upstart: bitcoind.conf\n OpenRC:  bitcoind.openrc\n          bitcoind.openrcconf\n CentOS:  bitcoind.init\n-OS X:    org.bitcoin.bitcoind.plist\n-\n+macOS:   org.bitcoin.bitcoind.plist\n+```\n have been made available to assist packagers in creating node packages here.\n \n See doc/init.md for more information."
      },
      {
        "sha": "dde1bd0c4d16b7eede11a741b72777a47e0962c7",
        "filename": "contrib/init/bitcoind.conf",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -16,7 +16,7 @@ expect fork\n \n respawn\n respawn limit 5 120\n-kill timeout 60\n+kill timeout 600\n \n pre-start script\n     # this will catch non-existent config files\n@@ -30,12 +30,12 @@ pre-start script\n         echo\n         echo \"This password is security critical to securing wallets \"\n         echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following\"\n+        echo \"You can generate a suitable random password using the following \"\n         echo \"command from the shell:\"\n         echo\n         echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n         echo\n-        echo \"It is also recommended that you also set alertnotify so you are \"\n+        echo \"It is recommended that you also set alertnotify so you are \"\n         echo \"notified of problems:\"\n         echo\n         echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\"
      },
      {
        "sha": "19e1f76d094ce4a17f883fca9bd2b8d12d0f6e8c",
        "filename": "contrib/init/bitcoind.init",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,4 +1,4 @@\n-#!/bin/bash\n+#!/usr/bin/env bash\n #\n #  bitcoind The bitcoin core server.\n #\n@@ -39,7 +39,7 @@ start() {\n \n stop() {\n     echo -n $\"Stopping $prog: \"\n-    killproc $prog\n+    killproc $prog -t600\n     RETVAL=$?\n     echo\n     [ $RETVAL -eq 0 ] && rm -f $lockfile"
      },
      {
        "sha": "86222295dbe052a5c6455e80dcf830161dccc05f",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,4 +1,4 @@\n-#!/sbin/runscript\n+#!/sbin/openrc-run\n \n # backward compatibility for existing gentoo layout \n #\n@@ -76,12 +76,12 @@ checkconfig()\n \t\teerror \"\"\n \t\teerror \"This password is security critical to securing wallets \"\n \t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following\"\n+\t\teerror \"You can generate a suitable random password using the following \"\n \t\teerror \"command from the shell:\"\n \t\teerror \"\"\n \t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n \t\teerror \"\"\n-\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n+\t\teerror \"It is recommended that you also set alertnotify so you are \"\n \t\teerror \"notified of problems:\"\n \t\teerror \"\"\n \t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\"
      },
      {
        "sha": "c8a22a08d92419a16f251d1c2b357ca371f68fe5",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -23,11 +23,11 @@\n #BITCOIND_NICE=0\n \n # Additional options (avoid -conf and -datadir, use flags above)\n-BITCOIND_OPTS=\"-disablewallet\"\n+#BITCOIND_OPTS=\"\"\n \n # The timeout in seconds OpenRC will wait for bitcoind to terminate\n # after a SIGTERM has been raised.\n # Note that this will be mapped as argument to start-stop-daemon's\n # '--retry' option, which means you can specify a retry schedule\n # here. For more information see man 8 start-stop-daemon.\n-BITCOIND_SIGTERM_TIMEOUT=60\n+BITCOIND_SIGTERM_TIMEOUT=600"
      },
      {
        "sha": "8b308644b10611ae4e558e08aa003a3a2e1ad370",
        "filename": "contrib/init/bitcoind.service",
        "status": "modified",
        "additions": 65,
        "deletions": 10,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,22 +1,77 @@\n+# It is not recommended to modify this file in-place, because it will\n+# be overwritten during package upgrades. If you want to add further\n+# options or overwrite existing ones then use\n+# $ systemctl edit bitcoind.service\n+# See \"man systemd.service\" for details.\n+\n+# Note that almost all daemon options could be specified in\n+# /etc/bitcoin/bitcoin.conf, but keep in mind those explicitly\n+# specified as arguments in ExecStart= will override those in the\n+# config file.\n+\n [Unit]\n-Description=Bitcoin's distributed currency daemon\n+Description=Bitcoin daemon\n After=network.target\n \n [Service]\n+ExecStart=/usr/bin/bitcoind -daemon \\\n+                            -pid=/run/bitcoind/bitcoind.pid \\\n+                            -conf=/etc/bitcoin/bitcoin.conf \\\n+                            -datadir=/var/lib/bitcoind\n+\n+# Make sure the config directory is readable by the service user\n+PermissionsStartOnly=true\n+ExecStartPre=/bin/chgrp bitcoin /etc/bitcoin\n+\n+# Process management\n+####################\n+\n+Type=forking\n+PIDFile=/run/bitcoind/bitcoind.pid\n+Restart=on-failure\n+TimeoutStopSec=600\n+\n+# Directory creation and permissions\n+####################################\n+\n+# Run as bitcoin:bitcoin\n User=bitcoin\n Group=bitcoin\n \n-Type=forking\n-PIDFile=/var/lib/bitcoind/bitcoind.pid\n-ExecStart=/usr/bin/bitcoind -daemon -pid=/var/lib/bitcoind/bitcoind.pid \\\n--conf=/etc/bitcoin/bitcoin.conf -datadir=/var/lib/bitcoind -disablewallet\n+# /run/bitcoind\n+RuntimeDirectory=bitcoind\n+RuntimeDirectoryMode=0710\n \n-Restart=always\n+# /etc/bitcoin\n+ConfigurationDirectory=bitcoin\n+ConfigurationDirectoryMode=0710\n+\n+# /var/lib/bitcoind\n+StateDirectory=bitcoind\n+StateDirectoryMode=0710\n+\n+# Hardening measures\n+####################\n+\n+# Provide a private /tmp and /var/tmp.\n PrivateTmp=true\n-TimeoutStopSec=60s\n-TimeoutStartSec=2s\n-StartLimitInterval=120s\n-StartLimitBurst=5\n+\n+# Mount /usr, /boot/ and /etc read-only for the process.\n+ProtectSystem=full\n+\n+# Deny access to /home, /root and /run/user\n+ProtectHome=true\n+\n+# Disallow the process and all of its children to gain\n+# new privileges through execve().\n+NoNewPrivileges=true\n+\n+# Use a new /dev namespace only populated with API pseudo devices\n+# such as /dev/null, /dev/zero and /dev/random.\n+PrivateDevices=true\n+\n+# Deny the creation of writable and executable memory mappings.\n+MemoryDenyWriteExecute=true\n \n [Install]\n WantedBy=multi-user.target"
      },
      {
        "sha": "95b5342f1ef9dc9b9bb66538d0cc842d02951d62",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -7,7 +7,6 @@\n \t<key>ProgramArguments</key>\n \t<array>\n \t\t<string>/usr/local/bin/bitcoind</string>\n-\t\t<string>-daemon</string>\n \t</array>\n \t<key>RunAtLoad</key>\n \t<true/>"
      },
      {
        "sha": "e9130a21ded67cbb3a9811f2a27a6affe46d3634",
        "filename": "contrib/install_db4.sh",
        "status": "added",
        "additions": 106,
        "deletions": 0,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/install_db4.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/install_db4.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/install_db4.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,106 @@\n+#!/bin/sh\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Install libdb4.8 (Berkeley DB).\n+\n+export LC_ALL=C\n+set -e\n+\n+if [ -z \"${1}\" ]; then\n+  echo \"Usage: $0 <base-dir> [<extra-bdb-configure-flag> ...]\"\n+  echo\n+  echo \"Must specify a single argument: the directory in which db4 will be built.\"\n+  echo \"This is probably \\`pwd\\` if you're at the root of the bitcoin repository.\"\n+  exit 1\n+fi\n+\n+expand_path() {\n+  cd \"${1}\" && pwd -P\n+}\n+\n+BDB_PREFIX=\"$(expand_path ${1})/db4\"; shift;\n+BDB_VERSION='db-4.8.30.NC'\n+BDB_HASH='12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef'\n+BDB_URL=\"https://download.oracle.com/berkeley-db/${BDB_VERSION}.tar.gz\"\n+\n+check_exists() {\n+  command -v \"$1\" >/dev/null\n+}\n+\n+sha256_check() {\n+  # Args: <sha256_hash> <filename>\n+  #\n+  if check_exists sha256sum; then\n+    echo \"${1}  ${2}\" | sha256sum -c\n+  elif check_exists sha256; then\n+    if [ \"$(uname)\" = \"FreeBSD\" ]; then\n+      sha256 -c \"${1}\" \"${2}\"\n+    else\n+      echo \"${1}  ${2}\" | sha256 -c\n+    fi\n+  else\n+    echo \"${1}  ${2}\" | shasum -a 256 -c\n+  fi\n+}\n+\n+http_get() {\n+  # Args: <url> <filename> <sha256_hash>\n+  #\n+  # It's acceptable that we don't require SSL here because we manually verify\n+  # content hashes below.\n+  #\n+  if [ -f \"${2}\" ]; then\n+    echo \"File ${2} already exists; not downloading again\"\n+  elif check_exists curl; then\n+    curl --insecure --retry 5 \"${1}\" -o \"${2}\"\n+  else\n+    wget --no-check-certificate \"${1}\" -O \"${2}\"\n+  fi\n+\n+  sha256_check \"${3}\" \"${2}\"\n+}\n+\n+mkdir -p \"${BDB_PREFIX}\"\n+http_get \"${BDB_URL}\" \"${BDB_VERSION}.tar.gz\" \"${BDB_HASH}\"\n+tar -xzvf ${BDB_VERSION}.tar.gz -C \"$BDB_PREFIX\"\n+cd \"${BDB_PREFIX}/${BDB_VERSION}/\"\n+\n+# Apply a patch necessary when building with clang and c++11 (see https://community.oracle.com/thread/3952592)\n+CLANG_CXX11_PATCH_URL='https://gist.githubusercontent.com/LnL7/5153b251fd525fe15de69b67e63a6075/raw/7778e9364679093a32dec2908656738e16b6bdcb/clang.patch'\n+CLANG_CXX11_PATCH_HASH='7a9a47b03fd5fb93a16ef42235fa9512db9b0829cfc3bdf90edd3ec1f44d637c'\n+http_get \"${CLANG_CXX11_PATCH_URL}\" clang.patch \"${CLANG_CXX11_PATCH_HASH}\"\n+patch -p2 < clang.patch\n+\n+# The packaged config.guess and config.sub are ancient (2009) and can cause build issues.\n+# Replace them with modern versions.\n+# See https://github.com/bitcoin/bitcoin/issues/16064\n+CONFIG_GUESS_URL='https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=55eaf3e779455c4e5cc9f82efb5278be8f8f900b'\n+CONFIG_GUESS_HASH='2d1ff7bca773d2ec3c6217118129220fa72d8adda67c7d2bf79994b3129232c1'\n+CONFIG_SUB_URL='https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=55eaf3e779455c4e5cc9f82efb5278be8f8f900b'\n+CONFIG_SUB_HASH='3a4befde9bcdf0fdb2763fc1bfa74e8696df94e1ad7aac8042d133c8ff1d2e32'\n+\n+rm -f \"dist/config.guess\"\n+rm -f \"dist/config.sub\"\n+\n+http_get \"${CONFIG_GUESS_URL}\" dist/config.guess \"${CONFIG_GUESS_HASH}\"\n+http_get \"${CONFIG_SUB_URL}\" dist/config.sub \"${CONFIG_SUB_HASH}\"\n+\n+cd build_unix/\n+\n+\"${BDB_PREFIX}/${BDB_VERSION}/dist/configure\" \\\n+  --enable-cxx --disable-shared --disable-replication --with-pic --prefix=\"${BDB_PREFIX}\" \\\n+  \"${@}\"\n+\n+make install\n+\n+echo\n+echo \"db4 build complete.\"\n+echo\n+# shellcheck disable=SC2016\n+echo 'When compiling bitcoind, run `./configure` in the following way:'\n+echo\n+echo \"  export BDB_PREFIX='${BDB_PREFIX}'\"\n+# shellcheck disable=SC2016\n+echo '  ./configure BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" ...'"
      },
      {
        "sha": "25a1c7351a297c751d630acd3f97fff6091710c8",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 36,
        "deletions": 15,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,33 +1,54 @@\n # Linearize\n-Construct a linear, no-fork, best version of the blockchain.\n+Construct a linear, no-fork, best version of the Bitcoin blockchain.\n \n ## Step 1: Download hash list\n \n     $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n \n Required configuration file settings for linearize-hashes:\n-* RPC: rpcuser, rpcpassword\n+* RPC: `datadir` (Required if `rpcuser` and `rpcpassword` are not specified)\n+* RPC: `rpcuser`, `rpcpassword` (Required if `datadir` is not specified)\n \n Optional config file setting for linearize-hashes:\n-* RPC: host, port\n-* Block chain: min_height, max_height\n+* RPC: `host`  (Default: `127.0.0.1`)\n+* RPC: `port`  (Default: `8332`)\n+* Blockchain: `min_height`, `max_height`\n+* `rev_hash_bytes`: If true, the written block hash list will be\n+byte-reversed. (In other words, the hash returned by getblockhash will have its\n+bytes reversed.) False by default. Intended for generation of\n+standalone hash lists but safe to use with linearize-data.py, which will output\n+the same data no matter which byte format is chosen.\n+\n+The `linearize-hashes` script requires a connection, local or remote, to a\n+JSON-RPC server. Running `bitcoind` or `bitcoin-qt -server` will be sufficient.\n \n ## Step 2: Copy local block data\n \n     $ ./linearize-data.py linearize.cfg\n \n Required configuration file settings:\n-* \"input\": bitcoind blocks/ directory containing blkNNNNN.dat\n-* \"hashlist\": text file containing list of block hashes, linearized-hashes.py\n-output.\n-* \"output_file\": bootstrap.dat\n+* `output_file`: The file that will contain the final blockchain.\n       or\n-* \"output\": output directory for linearized blocks/blkNNNNN.dat output\n+* `output`: Output directory for linearized `blocks/blkNNNNN.dat` output.\n \n Optional config file setting for linearize-data:\n-* \"netmagic\": network magic number\n-* \"max_out_sz\": maximum output file size (default `1000*1000*1000`)\n-* \"split_timestamp\": Split files when a new month is first seen, in addition to\n-reaching a maximum file size.\n-* \"file_timestamp\": Set each file's last-modified time to that of the\n-most recent block in that file.\n+* `debug_output`: Some printouts may not always be desired. If true, such output\n+will be printed.\n+* `file_timestamp`: Set each file's last-accessed and last-modified times,\n+respectively, to the current time and to the timestamp of the most recent block\n+written to the script's blockchain.\n+* `genesis`: The hash of the genesis block in the blockchain.\n+* `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n+* `hashlist`: text file containing list of block hashes created by\n+linearize-hashes.py.\n+* `max_out_sz`: Maximum size for files created by the `output_file` option.\n+(Default: `1000*1000*1000 bytes`)\n+* `netmagic`: Network magic number.\n+* `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n+be written to a cache so that the blockchain doesn't have to be sought again.\n+This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n+* `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n+will be byte-reversed when read by linearize-data.py. See the linearize-hashes\n+entry for more information.\n+* `split_timestamp`: Split blockchain files when a new month is first seen, in\n+addition to reaching a maximum file size (`max_out_sz`)."
      },
      {
        "sha": "5990b9307ab47b45e316e2d2bb4962fc2fe29b90",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 29,
        "deletions": 3,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,11 +1,18 @@\n-\n # bitcoind RPC settings (linearize-hashes)\n rpcuser=someuser\n rpcpassword=somepassword\n+#datadir=~/.bitcoin\n host=127.0.0.1\n+\n+#mainnet default\n port=8332\n+\n+#testnet default\n #port=18332\n \n+#regtest default\n+#port=18443\n+\n # bootstrap.dat hashlist settings (linearize-hashes)\n max_height=313000\n \n@@ -21,9 +28,28 @@ input=/home/example/.bitcoin/blocks\n #genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n #input=/home/example/.bitcoin/testnet3/blocks\n \n+# regtest\n+#netmagic=fabfb5da\n+#genesis=0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\n+#input=/home/example/.bitcoin/regtest/blocks\n+\n+# \"output\" option causes blockchain files to be written to the given location,\n+# with \"output_file\" ignored. If not used, \"output_file\" is used instead.\n+# output=/home/example/blockchain_directory\n output_file=/home/example/Downloads/bootstrap.dat\n hashlist=hashlist.txt\n-split_year=1\n \n-# Maxmimum size in bytes of out-of-order blocks cache in memory\n+# Maximum size in bytes of out-of-order blocks cache in memory\n out_of_order_cache_sz = 100000000\n+\n+# Do we want the reverse the hash bytes coming from getblockhash?\n+rev_hash_bytes = False\n+\n+# On a new month, do we want to set the access and modify times of the new\n+# blockchain file?\n+file_timestamp = 0\n+# Do we want to split the blockchain files given a new month or specific height?\n+split_timestamp = 0\n+\n+# Do we want debug printouts?\n+debug_output = False"
      },
      {
        "sha": "1b7d77f7b45d52fbc77738ce2feadd9eb9a1a8ef",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 276,
        "deletions": 256,
        "changes": 532,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,303 +1,323 @@\n-#!/usr/bin/python\n+#!/usr/bin/env python3\n #\n # linearize-data.py: Construct a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Copyright (c) 2013-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n \n-from __future__ import print_function, division\n-import json\n import struct\n import re\n import os\n import os.path\n-import base64\n-import httplib\n import sys\n import hashlib\n import datetime\n import time\n from collections import namedtuple\n+from binascii import unhexlify\n \n settings = {}\n \n+def hex_switchEndian(s):\n+    \"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n+    pairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n+    return b''.join(pairList[::-1]).decode()\n+\n def uint32(x):\n-\treturn x & 0xffffffffL\n+    return x & 0xffffffff\n \n def bytereverse(x):\n-\treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n-\t\t       (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n+    return uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n+               (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n \n def bufreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n-\t\tout_words.append(struct.pack('@I', bytereverse(word)))\n-\treturn ''.join(out_words)\n+    out_words = []\n+    for i in range(0, len(in_buf), 4):\n+        word = struct.unpack('@I', in_buf[i:i+4])[0]\n+        out_words.append(struct.pack('@I', bytereverse(word)))\n+    return b''.join(out_words)\n \n def wordreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tout_words.append(in_buf[i:i+4])\n-\tout_words.reverse()\n-\treturn ''.join(out_words)\n+    out_words = []\n+    for i in range(0, len(in_buf), 4):\n+        out_words.append(in_buf[i:i+4])\n+    out_words.reverse()\n+    return b''.join(out_words)\n \n def calc_hdr_hash(blk_hdr):\n-\thash1 = hashlib.sha256()\n-\thash1.update(blk_hdr)\n-\thash1_o = hash1.digest()\n+    hash1 = hashlib.sha256()\n+    hash1.update(blk_hdr)\n+    hash1_o = hash1.digest()\n \n-\thash2 = hashlib.sha256()\n-\thash2.update(hash1_o)\n-\thash2_o = hash2.digest()\n+    hash2 = hashlib.sha256()\n+    hash2.update(hash1_o)\n+    hash2_o = hash2.digest()\n \n-\treturn hash2_o\n+    return hash2_o\n \n def calc_hash_str(blk_hdr):\n-\thash = calc_hdr_hash(blk_hdr)\n-\thash = bufreverse(hash)\n-\thash = wordreverse(hash)\n-\thash_str = hash.encode('hex')\n-\treturn hash_str\n+    hash = calc_hdr_hash(blk_hdr)\n+    hash = bufreverse(hash)\n+    hash = wordreverse(hash)\n+    hash_str = hash.hex()\n+    return hash_str\n \n def get_blk_dt(blk_hdr):\n-\tmembers = struct.unpack(\"<I\", blk_hdr[68:68+4])\n-\tnTime = members[0]\n-\tdt = datetime.datetime.fromtimestamp(nTime)\n-\tdt_ym = datetime.datetime(dt.year, dt.month, 1)\n-\treturn (dt_ym, nTime)\n+    members = struct.unpack(\"<I\", blk_hdr[68:68+4])\n+    nTime = members[0]\n+    dt = datetime.datetime.fromtimestamp(nTime)\n+    dt_ym = datetime.datetime(dt.year, dt.month, 1)\n+    return (dt_ym, nTime)\n \n+# When getting the list of block hashes, undo any byte reversals.\n def get_block_hashes(settings):\n-\tblkindex = []\n-\tf = open(settings['hashlist'], \"r\")\n-\tfor line in f:\n-\t\tline = line.rstrip()\n-\t\tblkindex.append(line)\n+    blkindex = []\n+    f = open(settings['hashlist'], \"r\", encoding=\"utf8\")\n+    for line in f:\n+        line = line.rstrip()\n+        if settings['rev_hash_bytes'] == 'true':\n+            line = hex_switchEndian(line)\n+        blkindex.append(line)\n \n-\tprint(\"Read \" + str(len(blkindex)) + \" hashes\")\n+    print(\"Read \" + str(len(blkindex)) + \" hashes\")\n \n-\treturn blkindex\n+    return blkindex\n \n+# The block map shouldn't give or receive byte-reversed hashes.\n def mkblockmap(blkindex):\n-\tblkmap = {}\n-\tfor height,hash in enumerate(blkindex):\n-\t\tblkmap[hash] = height\n-\treturn blkmap\n+    blkmap = {}\n+    for height,hash in enumerate(blkindex):\n+        blkmap[hash] = height\n+    return blkmap\n \n # Block header and extent on disk\n BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n \n class BlockDataCopier:\n-\tdef __init__(self, settings, blkindex, blkmap):\n-\t\tself.settings = settings\n-\t\tself.blkindex = blkindex\n-\t\tself.blkmap = blkmap\n-\n-\t\tself.inFn = 0\n-\t\tself.inF = None\n-\t\tself.outFn = 0\n-\t\tself.outsz = 0\n-\t\tself.outF = None\n-\t\tself.outFname = None\n-\t\tself.blkCountIn = 0\n-\t\tself.blkCountOut = 0\n-\n-\t\tself.lastDate = datetime.datetime(2000, 1, 1)\n-\t\tself.highTS = 1408893517 - 315360000\n-\t\tself.timestampSplit = False\n-\t\tself.fileOutput = True\n-\t\tself.setFileTime = False\n-\t\tself.maxOutSz = settings['max_out_sz']\n-\t\tif 'output' in settings:\n-\t\t\tself.fileOutput = False\n-\t\tif settings['file_timestamp'] != 0:\n-\t\t\tself.setFileTime = True\n-\t\tif settings['split_timestamp'] != 0:\n-\t\t\tself.timestampSplit = True\n-\t\t# Extents and cache for out-of-order blocks\n-\t\tself.blockExtents = {}\n-\t\tself.outOfOrderData = {}\n-\t\tself.outOfOrderSize = 0 # running total size for items in outOfOrderData\n-\n-\tdef writeBlock(self, inhdr, blk_hdr, rawblock):\n-\t\tblockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n-\t\tif not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n-\t\t\tself.outF.close()\n-\t\t\tif self.setFileTime:\n-\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n-\t\t\tself.outF = None\n-\t\t\tself.outFname = None\n-\t\t\tself.outFn = self.outFn + 1\n-\t\t\tself.outsz = 0\n-\n-\t\t(blkDate, blkTS) = get_blk_dt(blk_hdr)\n-\t\tif self.timestampSplit and (blkDate > self.lastDate):\n-\t\t\tprint(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + hash_str)\n-\t\t\tlastDate = blkDate\n-\t\t\tif outF:\n-\t\t\t\toutF.close()\n-\t\t\t\tif setFileTime:\n-\t\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n-\t\t\t\tself.outF = None\n-\t\t\t\tself.outFname = None\n-\t\t\t\tself.outFn = self.outFn + 1\n-\t\t\t\tself.outsz = 0\n-\n-\t\tif not self.outF:\n-\t\t\tif self.fileOutput:\n-\t\t\t\toutFname = self.settings['output_file']\n-\t\t\telse:\n-\t\t\t\toutFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n-\t\t\tprint(\"Output file \" + outFname)\n-\t\t\tself.outF = open(outFname, \"wb\")\n-\n-\t\tself.outF.write(inhdr)\n-\t\tself.outF.write(blk_hdr)\n-\t\tself.outF.write(rawblock)\n-\t\tself.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n-\n-\t\tself.blkCountOut = self.blkCountOut + 1\n-\t\tif blkTS > self.highTS:\n-\t\t\tself.highTS = blkTS\n-\n-\t\tif (self.blkCountOut % 1000) == 0:\n-\t\t\tprint('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' % \n-\t\t\t\t\t(self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n-\n-\tdef inFileName(self, fn):\n-\t\treturn os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n-\n-\tdef fetchBlock(self, extent):\n-\t\t'''Fetch block contents from disk given extents'''\n-\t\twith open(self.inFileName(extent.fn), \"rb\") as f:\n-\t\t\tf.seek(extent.offset)\n-\t\t\treturn f.read(extent.size)\n-\n-\tdef copyOneBlock(self):\n-\t\t'''Find the next block to be written in the input, and copy it to the output.'''\n-\t\textent = self.blockExtents.pop(self.blkCountOut)\n-\t\tif self.blkCountOut in self.outOfOrderData:\n-\t\t\t# If the data is cached, use it from memory and remove from the cache\n-\t\t\trawblock = self.outOfOrderData.pop(self.blkCountOut)\n-\t\t\tself.outOfOrderSize -= len(rawblock)\n-\t\telse: # Otherwise look up data on disk\n-\t\t\trawblock = self.fetchBlock(extent)\n-\n-\t\tself.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n-\n-\tdef run(self):\n-\t\twhile self.blkCountOut < len(self.blkindex):\n-\t\t\tif not self.inF:\n-\t\t\t\tfname = self.inFileName(self.inFn)\n-\t\t\t\tprint(\"Input file \" + fname)\n-\t\t\t\ttry:\n-\t\t\t\t\tself.inF = open(fname, \"rb\")\n-\t\t\t\texcept IOError:\n-\t\t\t\t\tprint(\"Premature end of block data\")\n-\t\t\t\t\treturn\n-\n-\t\t\tinhdr = self.inF.read(8)\n-\t\t\tif (not inhdr or (inhdr[0] == \"\\0\")):\n-\t\t\t\tself.inF.close()\n-\t\t\t\tself.inF = None\n-\t\t\t\tself.inFn = self.inFn + 1\n-\t\t\t\tcontinue\n-\n-\t\t\tinMagic = inhdr[:4]\n-\t\t\tif (inMagic != self.settings['netmagic']):\n-\t\t\t\tprint(\"Invalid magic: \" + inMagic.encode('hex'))\n-\t\t\t\treturn\n-\t\t\tinLenLE = inhdr[4:]\n-\t\t\tsu = struct.unpack(\"<I\", inLenLE)\n-\t\t\tinLen = su[0] - 80 # length without header\n-\t\t\tblk_hdr = self.inF.read(80)\n-\t\t\tinExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n-\n-\t\t\thash_str = calc_hash_str(blk_hdr)\n-\t\t\tif not hash_str in blkmap:\n-\t\t\t\tprint(\"Skipping unknown block \" + hash_str)\n-\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n-\t\t\t\tcontinue\n-\n-\t\t\tblkHeight = self.blkmap[hash_str]\n-\t\t\tself.blkCountIn += 1\n-\n-\t\t\tif self.blkCountOut == blkHeight:\n-\t\t\t\t# If in-order block, just copy\n-\t\t\t\trawblock = self.inF.read(inLen)\n-\t\t\t\tself.writeBlock(inhdr, blk_hdr, rawblock)\n-\n-\t\t\t\t# See if we can catch up to prior out-of-order blocks\n-\t\t\t\twhile self.blkCountOut in self.blockExtents:\n-\t\t\t\t\tself.copyOneBlock()\n-\n-\t\t\telse: # If out-of-order, skip over block data for now\n-\t\t\t\tself.blockExtents[blkHeight] = inExtent\n-\t\t\t\tif self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n-\t\t\t\t\t# If there is space in the cache, read the data\n-\t\t\t\t\t# Reading the data in file sequence instead of seeking and fetching it later is preferred,\n-\t\t\t\t\t# but we don't want to fill up memory\n-\t\t\t\t\tself.outOfOrderData[blkHeight] = self.inF.read(inLen)\n-\t\t\t\t\tself.outOfOrderSize += inLen\n-\t\t\t\telse: # If no space in cache, seek forward\n-\t\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n-\n-\t\tprint(\"Done (%i blocks written)\" % (self.blkCountOut))\n+    def __init__(self, settings, blkindex, blkmap):\n+        self.settings = settings\n+        self.blkindex = blkindex\n+        self.blkmap = blkmap\n+\n+        self.inFn = 0\n+        self.inF = None\n+        self.outFn = 0\n+        self.outsz = 0\n+        self.outF = None\n+        self.outFname = None\n+        self.blkCountIn = 0\n+        self.blkCountOut = 0\n+\n+        self.lastDate = datetime.datetime(2000, 1, 1)\n+        self.highTS = 1408893517 - 315360000\n+        self.timestampSplit = False\n+        self.fileOutput = True\n+        self.setFileTime = False\n+        self.maxOutSz = settings['max_out_sz']\n+        if 'output' in settings:\n+            self.fileOutput = False\n+        if settings['file_timestamp'] != 0:\n+            self.setFileTime = True\n+        if settings['split_timestamp'] != 0:\n+            self.timestampSplit = True\n+        # Extents and cache for out-of-order blocks\n+        self.blockExtents = {}\n+        self.outOfOrderData = {}\n+        self.outOfOrderSize = 0 # running total size for items in outOfOrderData\n+\n+    def writeBlock(self, inhdr, blk_hdr, rawblock):\n+        blockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n+        if not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n+            self.outF.close()\n+            if self.setFileTime:\n+                os.utime(self.outFname, (int(time.time()), self.highTS))\n+            self.outF = None\n+            self.outFname = None\n+            self.outFn = self.outFn + 1\n+            self.outsz = 0\n+\n+        (blkDate, blkTS) = get_blk_dt(blk_hdr)\n+        if self.timestampSplit and (blkDate > self.lastDate):\n+            print(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + self.hash_str)\n+            self.lastDate = blkDate\n+            if self.outF:\n+                self.outF.close()\n+                if self.setFileTime:\n+                    os.utime(self.outFname, (int(time.time()), self.highTS))\n+                self.outF = None\n+                self.outFname = None\n+                self.outFn = self.outFn + 1\n+                self.outsz = 0\n+\n+        if not self.outF:\n+            if self.fileOutput:\n+                self.outFname = self.settings['output_file']\n+            else:\n+                self.outFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n+            print(\"Output file \" + self.outFname)\n+            self.outF = open(self.outFname, \"wb\")\n+\n+        self.outF.write(inhdr)\n+        self.outF.write(blk_hdr)\n+        self.outF.write(rawblock)\n+        self.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n+\n+        self.blkCountOut = self.blkCountOut + 1\n+        if blkTS > self.highTS:\n+            self.highTS = blkTS\n+\n+        if (self.blkCountOut % 1000) == 0:\n+            print('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' %\n+                    (self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n+\n+    def inFileName(self, fn):\n+        return os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n+\n+    def fetchBlock(self, extent):\n+        '''Fetch block contents from disk given extents'''\n+        with open(self.inFileName(extent.fn), \"rb\") as f:\n+            f.seek(extent.offset)\n+            return f.read(extent.size)\n+\n+    def copyOneBlock(self):\n+        '''Find the next block to be written in the input, and copy it to the output.'''\n+        extent = self.blockExtents.pop(self.blkCountOut)\n+        if self.blkCountOut in self.outOfOrderData:\n+            # If the data is cached, use it from memory and remove from the cache\n+            rawblock = self.outOfOrderData.pop(self.blkCountOut)\n+            self.outOfOrderSize -= len(rawblock)\n+        else: # Otherwise look up data on disk\n+            rawblock = self.fetchBlock(extent)\n+\n+        self.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n+\n+    def run(self):\n+        while self.blkCountOut < len(self.blkindex):\n+            if not self.inF:\n+                fname = self.inFileName(self.inFn)\n+                print(\"Input file \" + fname)\n+                try:\n+                    self.inF = open(fname, \"rb\")\n+                except IOError:\n+                    print(\"Premature end of block data\")\n+                    return\n+\n+            inhdr = self.inF.read(8)\n+            if (not inhdr or (inhdr[0] == \"\\0\")):\n+                self.inF.close()\n+                self.inF = None\n+                self.inFn = self.inFn + 1\n+                continue\n+\n+            inMagic = inhdr[:4]\n+            if (inMagic != self.settings['netmagic']):\n+                # Seek backwards 7 bytes (skipping the first byte in the previous search)\n+                # and continue searching from the new position if the magic bytes are not\n+                # found.\n+                self.inF.seek(-7, os.SEEK_CUR)\n+                continue\n+            inLenLE = inhdr[4:]\n+            su = struct.unpack(\"<I\", inLenLE)\n+            inLen = su[0] - 80 # length without header\n+            blk_hdr = self.inF.read(80)\n+            inExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n+\n+            self.hash_str = calc_hash_str(blk_hdr)\n+            if not self.hash_str in blkmap:\n+                # Because blocks can be written to files out-of-order as of 0.10, the script\n+                # may encounter blocks it doesn't know about. Treat as debug output.\n+                if settings['debug_output'] == 'true':\n+                    print(\"Skipping unknown block \" + self.hash_str)\n+                self.inF.seek(inLen, os.SEEK_CUR)\n+                continue\n+\n+            blkHeight = self.blkmap[self.hash_str]\n+            self.blkCountIn += 1\n+\n+            if self.blkCountOut == blkHeight:\n+                # If in-order block, just copy\n+                rawblock = self.inF.read(inLen)\n+                self.writeBlock(inhdr, blk_hdr, rawblock)\n+\n+                # See if we can catch up to prior out-of-order blocks\n+                while self.blkCountOut in self.blockExtents:\n+                    self.copyOneBlock()\n+\n+            else: # If out-of-order, skip over block data for now\n+                self.blockExtents[blkHeight] = inExtent\n+                if self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n+                    # If there is space in the cache, read the data\n+                    # Reading the data in file sequence instead of seeking and fetching it later is preferred,\n+                    # but we don't want to fill up memory\n+                    self.outOfOrderData[blkHeight] = self.inF.read(inLen)\n+                    self.outOfOrderSize += inLen\n+                else: # If no space in cache, seek forward\n+                    self.inF.seek(inLen, os.SEEK_CUR)\n+\n+        print(\"Done (%i blocks written)\" % (self.blkCountOut))\n \n if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint(\"Usage: linearize-data.py CONFIG-FILE\")\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\tif 'netmagic' not in settings:\n-\t\tsettings['netmagic'] = 'f9beb4d9'\n-\tif 'genesis' not in settings:\n-\t\tsettings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n-\tif 'input' not in settings:\n-\t\tsettings['input'] = 'input'\n-\tif 'hashlist' not in settings:\n-\t\tsettings['hashlist'] = 'hashlist.txt'\n-\tif 'file_timestamp' not in settings:\n-\t\tsettings['file_timestamp'] = 0\n-\tif 'split_timestamp' not in settings:\n-\t\tsettings['split_timestamp'] = 0\n-\tif 'max_out_sz' not in settings:\n-\t\tsettings['max_out_sz'] = 1000L * 1000 * 1000\n-\tif 'out_of_order_cache_sz' not in settings:\n-\t\tsettings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n-\n-\tsettings['max_out_sz'] = long(settings['max_out_sz'])\n-\tsettings['split_timestamp'] = int(settings['split_timestamp'])\n-\tsettings['file_timestamp'] = int(settings['file_timestamp'])\n-\tsettings['netmagic'] = settings['netmagic'].decode('hex')\n-\tsettings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n-\n-\tif 'output_file' not in settings and 'output' not in settings:\n-\t\tprint(\"Missing output file / directory\")\n-\t\tsys.exit(1)\n-\n-\tblkindex = get_block_hashes(settings)\n-\tblkmap = mkblockmap(blkindex)\n-\n-\tif not settings['genesis'] in blkmap:\n-\t\tprint(\"Genesis block not found in hashlist\")\n-\telse:\n-\t\tBlockDataCopier(settings, blkindex, blkmap).run()\n-\n-\n+    if len(sys.argv) != 2:\n+        print(\"Usage: linearize-data.py CONFIG-FILE\")\n+        sys.exit(1)\n+\n+    f = open(sys.argv[1], encoding=\"utf8\")\n+    for line in f:\n+        # skip comment lines\n+        m = re.search(r'^\\s*#', line)\n+        if m:\n+            continue\n+\n+        # parse key=value lines\n+        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+        if m is None:\n+            continue\n+        settings[m.group(1)] = m.group(2)\n+    f.close()\n+\n+    # Force hash byte format setting to be lowercase to make comparisons easier.\n+    # Also place upfront in case any settings need to know about it.\n+    if 'rev_hash_bytes' not in settings:\n+        settings['rev_hash_bytes'] = 'false'\n+    settings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n+\n+    if 'netmagic' not in settings:\n+        settings['netmagic'] = 'f9beb4d9'\n+    if 'genesis' not in settings:\n+        settings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n+    if 'input' not in settings:\n+        settings['input'] = 'input'\n+    if 'hashlist' not in settings:\n+        settings['hashlist'] = 'hashlist.txt'\n+    if 'file_timestamp' not in settings:\n+        settings['file_timestamp'] = 0\n+    if 'split_timestamp' not in settings:\n+        settings['split_timestamp'] = 0\n+    if 'max_out_sz' not in settings:\n+        settings['max_out_sz'] = 1000 * 1000 * 1000\n+    if 'out_of_order_cache_sz' not in settings:\n+        settings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n+    if 'debug_output' not in settings:\n+        settings['debug_output'] = 'false'\n+\n+    settings['max_out_sz'] = int(settings['max_out_sz'])\n+    settings['split_timestamp'] = int(settings['split_timestamp'])\n+    settings['file_timestamp'] = int(settings['file_timestamp'])\n+    settings['netmagic'] = unhexlify(settings['netmagic'].encode('utf-8'))\n+    settings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n+    settings['debug_output'] = settings['debug_output'].lower()\n+\n+    if 'output_file' not in settings and 'output' not in settings:\n+        print(\"Missing output file / directory\")\n+        sys.exit(1)\n+\n+    blkindex = get_block_hashes(settings)\n+    blkmap = mkblockmap(blkindex)\n+\n+    # Block hash map won't be byte-reversed. Neither should the genesis hash.\n+    if not settings['genesis'] in blkmap:\n+        print(\"Genesis block not found in hashlist\")\n+    else:\n+        BlockDataCopier(settings, blkindex, blkmap).run()"
      },
      {
        "sha": "fed6e665b8c934e26729f5cfe192f95f27870754",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 133,
        "deletions": 94,
        "changes": 227,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,113 +1,152 @@\n-#!/usr/bin/python\n+#!/usr/bin/env python3\n #\n # linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Copyright (c) 2013-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n \n-from __future__ import print_function\n+from http.client import HTTPConnection\n import json\n-import struct\n import re\n import base64\n-import httplib\n import sys\n+import os\n+import os.path\n \n settings = {}\n \n+def hex_switchEndian(s):\n+    \"\"\" Switches the endianness of a hex string (in pairs of hex chars) \"\"\"\n+    pairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n+    return b''.join(pairList[::-1]).decode()\n+\n class BitcoinRPC:\n-\tdef __init__(self, host, port, username, password):\n-\t\tauthpair = \"%s:%s\" % (username, password)\n-\t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n-\t\tself.conn = httplib.HTTPConnection(host, port, False, 30)\n-\n-\tdef execute(self, obj):\n-\t\tself.conn.request('POST', '/', json.dumps(obj),\n-\t\t\t{ 'Authorization' : self.authhdr,\n-\t\t\t  'Content-type' : 'application/json' })\n-\n-\t\tresp = self.conn.getresponse()\n-\t\tif resp is None:\n-\t\t\tprint(\"JSON-RPC: no response\", file=sys.stderr)\n-\t\t\treturn None\n-\n-\t\tbody = resp.read()\n-\t\tresp_obj = json.loads(body)\n-\t\treturn resp_obj\n-\n-\t@staticmethod\n-\tdef build_request(idx, method, params):\n-\t\tobj = { 'version' : '1.1',\n-\t\t\t'method' : method,\n-\t\t\t'id' : idx }\n-\t\tif params is None:\n-\t\t\tobj['params'] = []\n-\t\telse:\n-\t\t\tobj['params'] = params\n-\t\treturn obj\n-\n-\t@staticmethod\n-\tdef response_is_error(resp_obj):\n-\t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n+    def __init__(self, host, port, username, password):\n+        authpair = \"%s:%s\" % (username, password)\n+        authpair = authpair.encode('utf-8')\n+        self.authhdr = b\"Basic \" + base64.b64encode(authpair)\n+        self.conn = HTTPConnection(host, port=port, timeout=30)\n+\n+    def execute(self, obj):\n+        try:\n+            self.conn.request('POST', '/', json.dumps(obj),\n+                { 'Authorization' : self.authhdr,\n+                  'Content-type' : 'application/json' })\n+        except ConnectionRefusedError:\n+            print('RPC connection refused. Check RPC settings and the server status.',\n+                  file=sys.stderr)\n+            return None\n+\n+        resp = self.conn.getresponse()\n+        if resp is None:\n+            print(\"JSON-RPC: no response\", file=sys.stderr)\n+            return None\n+\n+        body = resp.read().decode('utf-8')\n+        resp_obj = json.loads(body)\n+        return resp_obj\n+\n+    @staticmethod\n+    def build_request(idx, method, params):\n+        obj = { 'version' : '1.1',\n+            'method' : method,\n+            'id' : idx }\n+        if params is None:\n+            obj['params'] = []\n+        else:\n+            obj['params'] = params\n+        return obj\n+\n+    @staticmethod\n+    def response_is_error(resp_obj):\n+        return 'error' in resp_obj and resp_obj['error'] is not None\n \n def get_block_hashes(settings, max_blocks_per_call=10000):\n-\trpc = BitcoinRPC(settings['host'], settings['port'],\n-\t\t\t settings['rpcuser'], settings['rpcpassword'])\n-\n-\theight = settings['min_height']\n-\twhile height < settings['max_height']+1:\n-\t\tnum_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n-\t\tbatch = []\n-\t\tfor x in range(num_blocks):\n-\t\t\tbatch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n-\n-\t\treply = rpc.execute(batch)\n-\n-\t\tfor x,resp_obj in enumerate(reply):\n-\t\t\tif rpc.response_is_error(resp_obj):\n-\t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n-\t\t\t\texit(1)\n-\t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n-\t\t\tprint(resp_obj['result'])\n-\n-\t\theight += num_blocks\n+    rpc = BitcoinRPC(settings['host'], settings['port'],\n+             settings['rpcuser'], settings['rpcpassword'])\n+\n+    height = settings['min_height']\n+    while height < settings['max_height']+1:\n+        num_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n+        batch = []\n+        for x in range(num_blocks):\n+            batch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n+\n+        reply = rpc.execute(batch)\n+        if reply is None:\n+            print('Cannot continue. Program will halt.')\n+            return None\n+\n+        for x,resp_obj in enumerate(reply):\n+            if rpc.response_is_error(resp_obj):\n+                print('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n+                sys.exit(1)\n+            assert(resp_obj['id'] == x) # assume replies are in-sequence\n+            if settings['rev_hash_bytes'] == 'true':\n+                resp_obj['result'] = hex_switchEndian(resp_obj['result'])\n+            print(resp_obj['result'])\n+\n+        height += num_blocks\n+\n+def get_rpc_cookie():\n+    # Open the cookie file\n+    with open(os.path.join(os.path.expanduser(settings['datadir']), '.cookie'), 'r', encoding=\"ascii\") as f:\n+        combined = f.readline()\n+        combined_split = combined.split(\":\")\n+        settings['rpcuser'] = combined_split[0]\n+        settings['rpcpassword'] = combined_split[1]\n \n if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint(\"Usage: linearize-hashes.py CONFIG-FILE\")\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\tif 'host' not in settings:\n-\t\tsettings['host'] = '127.0.0.1'\n-\tif 'port' not in settings:\n-\t\tsettings['port'] = 8332\n-\tif 'min_height' not in settings:\n-\t\tsettings['min_height'] = 0\n-\tif 'max_height' not in settings:\n-\t\tsettings['max_height'] = 313000\n-\tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n-\t\tprint(\"Missing username and/or password in cfg file\", file=stderr)\n-\t\tsys.exit(1)\n-\n-\tsettings['port'] = int(settings['port'])\n-\tsettings['min_height'] = int(settings['min_height'])\n-\tsettings['max_height'] = int(settings['max_height'])\n-\n-\tget_block_hashes(settings)\n-\n+    if len(sys.argv) != 2:\n+        print(\"Usage: linearize-hashes.py CONFIG-FILE\")\n+        sys.exit(1)\n+\n+    f = open(sys.argv[1], encoding=\"utf8\")\n+    for line in f:\n+        # skip comment lines\n+        m = re.search(r'^\\s*#', line)\n+        if m:\n+            continue\n+\n+        # parse key=value lines\n+        m = re.search(r'^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+        if m is None:\n+            continue\n+        settings[m.group(1)] = m.group(2)\n+    f.close()\n+\n+    if 'host' not in settings:\n+        settings['host'] = '127.0.0.1'\n+    if 'port' not in settings:\n+        settings['port'] = 8332\n+    if 'min_height' not in settings:\n+        settings['min_height'] = 0\n+    if 'max_height' not in settings:\n+        settings['max_height'] = 313000\n+    if 'rev_hash_bytes' not in settings:\n+        settings['rev_hash_bytes'] = 'false'\n+\n+    use_userpass = True\n+    use_datadir = False\n+    if 'rpcuser' not in settings or 'rpcpassword' not in settings:\n+        use_userpass = False\n+    if 'datadir' in settings and not use_userpass:\n+        use_datadir = True\n+    if not use_userpass and not use_datadir:\n+        print(\"Missing datadir or username and/or password in cfg file\", file=sys.stderr)\n+        sys.exit(1)\n+\n+    settings['port'] = int(settings['port'])\n+    settings['min_height'] = int(settings['min_height'])\n+    settings['max_height'] = int(settings['max_height'])\n+\n+    # Force hash byte format setting to be lowercase to make comparisons easier.\n+    settings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n+\n+    # Get the rpc user and pass from the cookie if the datadir is set\n+    if use_datadir:\n+        get_rpc_cookie()\n+\n+    get_block_hashes(settings)"
      },
      {
        "sha": "29b49ebff4b5af0bb4bbffdc0030e0a07c04ab18",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,7 +1,7 @@\n ### MacDeploy ###\n \n For Snow Leopard (which uses [Python 2.6](http://www.python.org/download/releases/2.6/)), you will need the param_parser package:\n-\t\n+\n \tsudo easy_install argparse\n \n This script should not be run manually, instead, after building as usual:\n@@ -11,5 +11,5 @@ This script should not be run manually, instead, after building as usual:\n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-When finished, it will produce `Bitcoin-Core.dmg`.\n+When finished, it will produce `Bitcoin-Qt.dmg`.\n "
      },
      {
        "sha": "dc1c1882dd5a21a5358c6f3a65e7c70e22e295a1",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,8 +1,7 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2013-2015 The Bitcoin Core developers\n+#!/usr/bin/env python3\n+# Copyright (c) 2013-2018 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-from __future__ import division,print_function,unicode_literals\n import biplist\n from ds_store import DSStore\n from mac_alias import Alias\n@@ -14,7 +13,7 @@\n ds = DSStore.open(output_file, 'w+')\n ds['.']['bwsp'] = {\n     'ShowStatusBar': False,\n-    'WindowBounds': b'{{300, 280}, {500, 343}}',\n+    'WindowBounds': '{{300, 280}, {500, 343}}',\n     'ContainerShowSidebar': False,\n     'SidebarWidth': 0,\n     'ShowTabView': False,"
      },
      {
        "sha": "5c5a85d3fe1861a4e5d3300faa04480f17846975",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,4 +1,9 @@\n #!/bin/sh\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n set -e\n \n UNSIGNED=\"$1\"\n@@ -31,13 +36,13 @@ if [ -z \"${CODESIGN_ALLOCATE}\" ]; then\n fi\n \n find ${TEMPDIR} -name \"*.sign\" | while read i; do\n-  SIZE=`stat -c %s \"${i}\"`\n-  TARGET_FILE=\"`echo \"${i}\" | sed 's/\\.sign$//'`\"\n+  SIZE=$(stat -c %s \"${i}\")\n+  TARGET_FILE=\"$(echo \"${i}\" | sed 's/\\.sign$//')\"\n \n   echo \"Allocating space for the signature of size ${SIZE} in ${TARGET_FILE}\"\n   ${CODESIGN_ALLOCATE} -i \"${TARGET_FILE}\" -a ${ARCH} ${SIZE} -o \"${i}.tmp\"\n \n-  OFFSET=`${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n+  OFFSET=$(${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g')\n   if [ -z ${QUIET} ]; then\n     echo \"Attaching signature at offset ${OFFSET}\"\n   fi"
      },
      {
        "sha": "31a97f0a24c7238a3c4c53d79e0fe34a783d2a6d",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 14,
        "deletions": 9,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,15 +1,20 @@\n #!/bin/sh\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n set -e\n \n ROOTDIR=dist\n BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n CODESIGN=codesign\n TEMPDIR=sign.temp\n TEMPLIST=${TEMPDIR}/signatures.txt\n-OUT=signature.tar.gz\n+OUT=signature-osx.tar.gz\n OUTROOT=osx\n \n-if [ ! -n \"$1\" ]; then\n+if [ -z \"$1\" ]; then\n   echo \"usage: $0 <codesign args>\"\n   echo \"example: $0 -s MyIdentity\"\n   exit 1\n@@ -21,22 +26,22 @@ mkdir -p ${TEMPDIR}\n ${CODESIGN} -f --file-list ${TEMPLIST} \"$@\" \"${BUNDLE}\"\n \n grep -v CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n-  SIZE=`pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g'`\n-  OFFSET=`pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n+  TARGETFILE=\"${BUNDLE}/$(echo \"${i}\" | sed \"s|.*${BUNDLE}/||\")\"\n+  SIZE=$(pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g')\n+  OFFSET=$(pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g')\n   SIGNFILE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}.sign\"\n-  DIRNAME=\"`dirname \"${SIGNFILE}\"`\"\n+  DIRNAME=\"$(dirname \"${SIGNFILE}\")\"\n   mkdir -p \"${DIRNAME}\"\n   echo \"Adding detached signature for: ${TARGETFILE}. Size: ${SIZE}. Offset: ${OFFSET}\"\n   dd if=\"$i\" of=\"${SIGNFILE}\" bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n done\n \n grep CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n+  TARGETFILE=\"${BUNDLE}/$(echo \"${i}\" | sed \"s|.*${BUNDLE}/||\")\"\n   RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n-  DIRNAME=\"`dirname \"${RESOURCE}\"`\"\n+  DIRNAME=\"$(dirname \"${RESOURCE}\")\"\n   mkdir -p \"${DIRNAME}\"\n-  echo \"Adding resource for: \"${TARGETFILE}\"\"\n+  echo \"Adding resource for: \\\"${TARGETFILE}\\\"\"\n   cp \"${i}\" \"${RESOURCE}\"\n done\n "
      },
      {
        "sha": "21243ada042ba1d5791b148cc4283f7d0c211486",
        "filename": "contrib/macdeploy/extract-osx-sdk.sh",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/macdeploy/extract-osx-sdk.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/macdeploy/extract-osx-sdk.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/extract-osx-sdk.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,34 @@\n+#!/usr/bin/env bash\n+# Copyright (c) 2016-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n+set -e\n+\n+INPUTFILE=\"Xcode_7.3.1.dmg\"\n+HFSFILENAME=\"5.hfs\"\n+SDKDIR=\"Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\"\n+\n+7z x \"${INPUTFILE}\" \"${HFSFILENAME}\"\n+SDKNAME=\"$(basename \"${SDKDIR}\")\"\n+SDKDIRINODE=$(ifind -n \"${SDKDIR}\" \"${HFSFILENAME}\")\n+fls \"${HFSFILENAME}\" -rpF ${SDKDIRINODE} |\n+ while read type inode filename; do\n+\tinode=\"${inode::-1}\"\n+\tif [ \"${filename:0:14}\" = \"usr/share/man/\" ]; then\n+\t\tcontinue\n+\tfi\n+\tfilename=\"${SDKNAME}/$filename\"\n+\techo \"Extracting $filename ...\"\n+\tmkdir -p \"$(dirname \"$filename\")\"\n+\tif [ \"$type\" = \"l/l\" ]; then\n+\t\tln -s \"$(icat \"${HFSFILENAME}\" $inode)\" \"$filename\"\n+\telse\n+\t\ticat \"${HFSFILENAME}\" $inode >\"$filename\"\n+\tfi\n+done\n+echo \"Building ${SDKNAME}.tar.gz ...\"\n+MTIME=\"$(istat \"${HFSFILENAME}\" \"${SDKDIRINODE}\" | perl -nle 'm/Content Modified:\\s+(.*?)\\s\\(/ && print $1')\"\n+find \"${SDKNAME}\" | sort | tar --no-recursion --mtime=\"${MTIME}\" --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > \"${SDKNAME}.tar.gz\"\n+echo 'All done!'"
      },
      {
        "sha": "d8088aa1230441b59b7b8132d601671ca13c2a98",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 106,
        "deletions": 89,
        "changes": 195,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,5 +1,4 @@\n-#!/usr/bin/env python\n-from __future__ import division, print_function, unicode_literals\n+#!/usr/bin/env python3\n #\n # Copyright (C) 2011  Patrick \"p2k\" Schneider <me@p2k-network.org>\n #\n@@ -20,6 +19,7 @@ from __future__ import division, print_function, unicode_literals\n import subprocess, sys, re, os, shutil, stat, os.path, time\n from string import Template\n from argparse import ArgumentParser\n+from typing import List, Optional\n \n # This is ported from the original macdeployqt with modifications\n \n@@ -49,18 +49,18 @@ class FrameworkInfo(object):\n             return False\n     \n     def __str__(self):\n-        return \"\"\" Framework name: %s\n- Framework directory: %s\n- Framework path: %s\n- Binary name: %s\n- Binary directory: %s\n- Binary path: %s\n- Version: %s\n- Install name: %s\n- Deployed install name: %s\n- Source file Path: %s\n- Deployed Directory (relative to bundle): %s\n-\"\"\" % (self.frameworkName,\n+        return \"\"\" Framework name: {}\n+ Framework directory: {}\n+ Framework path: {}\n+ Binary name: {}\n+ Binary directory: {}\n+ Binary path: {}\n+ Version: {}\n+ Install name: {}\n+ Deployed install name: {}\n+ Source file Path: {}\n+ Deployed Directory (relative to bundle): {}\n+\"\"\".format(self.frameworkName,\n        self.frameworkDirectory,\n        self.frameworkPath,\n        self.binaryName,\n@@ -86,7 +86,7 @@ class FrameworkInfo(object):\n     bundleBinaryDirectory = \"Contents/MacOS\"\n     \n     @classmethod\n-    def fromOtoolLibraryLine(cls, line):\n+    def fromOtoolLibraryLine(cls, line: str) -> Optional['FrameworkInfo']:\n         # Note: line must be trimmed\n         if line == \"\":\n             return None\n@@ -147,13 +147,12 @@ class FrameworkInfo(object):\n             info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n             info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n             info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n-            info.destinationContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Contents\")\n             info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n         \n         return info\n \n class ApplicationBundleInfo(object):\n-    def __init__(self, path):\n+    def __init__(self, path: str):\n         self.path = path\n         appName = \"Bitcoin-Qt\"\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n@@ -168,17 +167,11 @@ class DeploymentInfo(object):\n         self.pluginPath = None\n         self.deployedFrameworks = []\n     \n-    def detectQtPath(self, frameworkDirectory):\n+    def detectQtPath(self, frameworkDirectory: str):\n         parentDir = os.path.dirname(frameworkDirectory)\n         if os.path.exists(os.path.join(parentDir, \"translations\")):\n             # Classic layout, e.g. \"/usr/local/Trolltech/Qt-4.x.x\"\n             self.qtPath = parentDir\n-        elif os.path.exists(os.path.join(parentDir, \"share\", \"qt4\", \"translations\")):\n-            # MacPorts layout, e.g. \"/opt/local/share/qt4\"\n-            self.qtPath = os.path.join(parentDir, \"share\", \"qt4\")\n-        elif os.path.exists(os.path.join(os.path.dirname(parentDir), \"share\", \"qt4\", \"translations\")):\n-            # Newer Macports layout\n-            self.qtPath = os.path.join(os.path.dirname(parentDir), \"share\", \"qt4\")\n         else:\n             self.qtPath = os.getenv(\"QTDIR\", None)\n \n@@ -187,9 +180,9 @@ class DeploymentInfo(object):\n             if os.path.exists(pluginPath):\n                 self.pluginPath = pluginPath\n     \n-    def usesFramework(self, name):\n-        nameDot = \"%s.\" % name\n-        libNameDot = \"lib%s.\" % name\n+    def usesFramework(self, name: str) -> bool:\n+        nameDot = \"{}.\".format(name)\n+        libNameDot = \"lib{}.\".format(name)\n         for framework in self.deployedFrameworks:\n             if framework.endswith(\".framework\"):\n                 if framework.startswith(nameDot):\n@@ -199,19 +192,19 @@ class DeploymentInfo(object):\n                     return True\n         return False\n \n-def getFrameworks(binaryPath, verbose):\n+def getFrameworks(binaryPath: str, verbose: int) -> List[FrameworkInfo]:\n     if verbose >= 3:\n         print(\"Inspecting with otool: \" + binaryPath)\n     otoolbin=os.getenv(\"OTOOL\", \"otool\")\n-    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n     o_stdout, o_stderr = otool.communicate()\n     if otool.returncode != 0:\n         if verbose >= 1:\n             sys.stderr.write(o_stderr)\n             sys.stderr.flush()\n-            raise RuntimeError(\"otool failed with return code %d\" % otool.returncode)\n+            raise RuntimeError(\"otool failed with return code {}\".format(otool.returncode))\n \n-    otoolLines = o_stdout.decode().split(\"\\n\")\n+    otoolLines = o_stdout.split(\"\\n\")\n     otoolLines.pop(0) # First line is the inspected binary\n     if \".framework\" in binaryPath or binaryPath.endswith(\".dylib\"):\n         otoolLines.pop(0) # Frameworks and dylibs list themselves as a dependency.\n@@ -228,33 +221,33 @@ def getFrameworks(binaryPath, verbose):\n     \n     return libraries\n \n-def runInstallNameTool(action, *args):\n+def runInstallNameTool(action: str, *args):\n     installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n     subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n \n-def changeInstallName(oldName, newName, binaryPath, verbose):\n+def changeInstallName(oldName: str, newName: str, binaryPath: str, verbose: int):\n     if verbose >= 3:\n         print(\"Using install_name_tool:\")\n         print(\" in\", binaryPath)\n         print(\" change reference\", oldName)\n         print(\" to\", newName)\n     runInstallNameTool(\"change\", oldName, newName, binaryPath)\n \n-def changeIdentification(id, binaryPath, verbose):\n+def changeIdentification(id: str, binaryPath: str, verbose: int):\n     if verbose >= 3:\n         print(\"Using install_name_tool:\")\n         print(\" change identification in\", binaryPath)\n         print(\" to\", id)\n     runInstallNameTool(\"id\", id, binaryPath)\n \n-def runStrip(binaryPath, verbose):\n+def runStrip(binaryPath: str, verbose: int):\n     stripbin=os.getenv(\"STRIP\", \"strip\")\n     if verbose >= 3:\n         print(\"Using strip:\")\n         print(\" stripped\", binaryPath)\n     subprocess.check_call([stripbin, \"-x\", binaryPath])\n \n-def copyFramework(framework, path, verbose):\n+def copyFramework(framework: FrameworkInfo, path: str, verbose: int) -> Optional[str]:\n     if framework.sourceFilePath.startswith(\"Qt\"):\n         #standard place for Nokia Qt installer's frameworks\n         fromPath = \"/Library/Frameworks/\" + framework.sourceFilePath\n@@ -302,7 +295,6 @@ def copyFramework(framework, path, verbose):\n         if os.path.exists(fromContentsDir):\n             toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n             shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n-            contentslinkfrom = os.path.join(path, framework.destinationContentsDirectory)\n             if verbose >= 3:\n                 print(\"Copied Contents:\", fromContentsDir)\n                 print(\" to:\", toContentsDir)\n@@ -317,7 +309,7 @@ def copyFramework(framework, path, verbose):\n     \n     return toPath\n \n-def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploymentInfo=None):\n+def deployFrameworks(frameworks: List[FrameworkInfo], bundlePath: str, binaryPath: str, strip: bool, verbose: int, deploymentInfo: Optional[DeploymentInfo] = None) -> DeploymentInfo:\n     if deploymentInfo is None:\n         deploymentInfo = DeploymentInfo()\n     \n@@ -340,7 +332,7 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n         # install_name_tool the new id into the binary\n         changeInstallName(framework.installName, framework.deployedInstallName, binaryPath, verbose)\n         \n-        # Copy farmework to app bundle.\n+        # Copy framework to app bundle.\n         deployedBinaryPath = copyFramework(framework, bundlePath, verbose)\n         # Skip the rest if already was deployed.\n         if deployedBinaryPath is None:\n@@ -363,15 +355,15 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n     \n     return deploymentInfo\n \n-def deployFrameworksForAppBundle(applicationBundle, strip, verbose):\n+def deployFrameworksForAppBundle(applicationBundle: ApplicationBundleInfo, strip: bool, verbose: int) -> DeploymentInfo:\n     frameworks = getFrameworks(applicationBundle.binaryPath, verbose)\n     if len(frameworks) == 0 and verbose >= 1:\n-        print(\"Warning: Could not find any external frameworks to deploy in %s.\" % (applicationBundle.path))\n+        print(\"Warning: Could not find any external frameworks to deploy in {}.\".format(applicationBundle.path))\n         return DeploymentInfo()\n     else:\n         return deployFrameworks(frameworks, applicationBundle.path, applicationBundle.binaryPath, strip, verbose)\n \n-def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n+def deployPlugins(appBundleInfo: ApplicationBundleInfo, deploymentInfo: DeploymentInfo, strip: bool, verbose: int):\n     # Lookup available plugins, exclude unneeded\n     plugins = []\n     if deploymentInfo.pluginPath is None:\n@@ -381,10 +373,12 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n         if pluginDirectory == \"designer\":\n             # Skip designer plugins\n             continue\n-        elif pluginDirectory == \"phonon\" or pluginDirectory == \"phonon_backend\":\n-            # Deploy the phonon plugins only if phonon is in use\n-            if not deploymentInfo.usesFramework(\"phonon\"):\n-                continue\n+        elif pluginDirectory == \"printsupport\":\n+            # Skip printsupport plugins\n+            continue\n+        elif pluginDirectory == \"imageformats\":\n+            # Skip imageformats plugins\n+            continue\n         elif pluginDirectory == \"sqldrivers\":\n             # Deploy the sql plugins only if QtSql is in use\n             if not deploymentInfo.usesFramework(\"QtSql\"):\n@@ -417,6 +411,42 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n             # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n             if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n                 continue\n+        elif pluginDirectory == \"canbus\":\n+            # Deploy the canbus plugins only if QtSerialBus is in use\n+            if not deploymentInfo.usesFramework(\"QtSerialBus\"):\n+                continue\n+        elif pluginDirectory == \"webview\":\n+            # Deploy the webview plugins only if QtWebView is in use\n+            if not deploymentInfo.usesFramework(\"QtWebView\"):\n+                continue\n+        elif pluginDirectory == \"gamepads\":\n+            # Deploy the webview plugins only if QtGamepad is in use\n+            if not deploymentInfo.usesFramework(\"QtGamepad\"):\n+                continue\n+        elif pluginDirectory == \"geoservices\":\n+            # Deploy the webview plugins only if QtLocation is in use\n+            if not deploymentInfo.usesFramework(\"QtLocation\"):\n+                continue\n+        elif pluginDirectory == \"texttospeech\":\n+            # Deploy the texttospeech plugins only if QtTextToSpeech is in use\n+            if not deploymentInfo.usesFramework(\"QtTextToSpeech\"):\n+                continue\n+        elif pluginDirectory == \"virtualkeyboard\":\n+            # Deploy the virtualkeyboard plugins only if QtVirtualKeyboard is in use\n+            if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n+                continue\n+        elif pluginDirectory == \"sceneparsers\":\n+            # Deploy the virtualkeyboard plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n+        elif pluginDirectory == \"renderplugins\":\n+            # Deploy the renderplugins plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n+        elif pluginDirectory == \"geometryloaders\":\n+            # Deploy the geometryloaders plugins only if Qt3DCore is in use\n+            if not deploymentInfo.usesFramework(\"Qt3DCore\"):\n+                continue\n \n         for pluginName in filenames:\n             pluginPath = os.path.join(pluginDirectory, pluginName)\n@@ -439,6 +469,10 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n                 # Deploy the accessible qtquick plugin only if QtQuick is in use\n                 if not deploymentInfo.usesFramework(\"QtQuick\"):\n                     continue\n+            elif pluginPath == \"platforminputcontexts/libqtvirtualkeyboardplugin.dylib\":\n+                # Deploy the virtualkeyboardplugin plugin only if QtVirtualKeyboard is in use\n+                if not deploymentInfo.usesFramework(\"QtVirtualKeyboard\"):\n+                    continue\n \n             plugins.append((pluginDirectory, pluginName))\n     \n@@ -492,7 +526,7 @@ ap.add_argument(\"-no-strip\", dest=\"strip\", action=\"store_false\", default=True, h\n ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"sign .app bundle with codesign tool\")\n ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n-ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's ressources; the language list must be separated with commas, not with whitespace\")\n+ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's resources; the language list must be separated with commas, not with whitespace\")\n ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n ap.add_argument(\"-volname\", nargs=1, metavar=\"volname\", default=[], help=\"custom volume name for dmg\")\n@@ -507,7 +541,7 @@ app_bundle = config.app_bundle[0]\n \n if not os.path.exists(app_bundle):\n     if verbose >= 1:\n-        sys.stderr.write(\"Error: Could not find app bundle \\\"%s\\\"\\n\" % (app_bundle))\n+        sys.stderr.write(\"Error: Could not find app bundle \\\"{}\\\"\\n\".format(app_bundle))\n     sys.exit(1)\n \n app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n@@ -519,7 +553,7 @@ if config.translations_dir and config.translations_dir[0]:\n         translations_dir = config.translations_dir[0]\n     else:\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find translation dir \\\"%s\\\"\\n\" % (translations_dir))\n+            sys.stderr.write(\"Error: Could not find translation dir \\\"{}\\\"\\n\".format(translations_dir))\n         sys.exit(1)\n # ------------------------------------------------\n \n@@ -528,7 +562,7 @@ for p in config.add_resources:\n         print(\"Checking for \\\"%s\\\"...\" % p)\n     if not os.path.exists(p):\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find additional resource file \\\"%s\\\"\\n\" % (p))\n+            sys.stderr.write(\"Error: Could not find additional resource file \\\"{}\\\"\\n\".format(p))\n         sys.exit(1)\n \n # ------------------------------------------------\n@@ -545,17 +579,17 @@ if len(config.fancy) == 1:\n     \n     p = config.fancy[0]\n     if verbose >= 3:\n-        print(\"Fancy: Loading \\\"%s\\\"...\" % p)\n+        print(\"Fancy: Loading \\\"{}\\\"...\".format(p))\n     if not os.path.exists(p):\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n+            sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n         sys.exit(1)\n     \n     try:\n         fancy = plistlib.readPlist(p)\n     except:\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not parse fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n+            sys.stderr.write(\"Error: Could not parse fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n         sys.exit(1)\n     \n     try:\n@@ -569,18 +603,18 @@ if len(config.fancy) == 1:\n                 assert isinstance(value, list) and len(value) == 2 and isinstance(value[0], int) and isinstance(value[1], int)\n     except:\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n+            sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"{}\\\"\\n\".format(p))\n         sys.exit(1)\n     \n     if \"background_picture\" in fancy:\n         bp = fancy[\"background_picture\"]\n         if verbose >= 3:\n-            print(\"Fancy: Resolving background picture \\\"%s\\\"...\" % bp)\n+            print(\"Fancy: Resolving background picture \\\"{}\\\"...\".format(bp))\n         if not os.path.exists(bp):\n             bp = os.path.join(os.path.dirname(p), bp)\n             if not os.path.exists(bp):\n                 if verbose >= 1:\n-                    sys.stderr.write(\"Error: Could not find background picture at \\\"%s\\\" or \\\"%s\\\"\\n\" % (fancy[\"background_picture\"], bp))\n+                    sys.stderr.write(\"Error: Could not find background picture at \\\"{}\\\" or \\\"{}\\\"\\n\".format(fancy[\"background_picture\"], bp))\n                 sys.exit(1)\n             else:\n                 fancy[\"background_picture\"] = bp\n@@ -631,7 +665,7 @@ try:\n             config.plugins = False\n except RuntimeError as e:\n     if verbose >= 1:\n-        sys.stderr.write(\"Error: %s\\n\" % str(e))\n+        sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n     sys.exit(1)\n \n # ------------------------------------------------\n@@ -644,7 +678,7 @@ if config.plugins:\n         deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n     except RuntimeError as e:\n         if verbose >= 1:\n-            sys.stderr.write(\"Error: %s\\n\" % str(e))\n+            sys.stderr.write(\"Error: {}\\n\".format(str(e)))\n         sys.exit(1)\n \n # ------------------------------------------------\n@@ -660,24 +694,23 @@ else:\n         else:\n             sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n             sys.exit(1)\n-    add_qt_tr = [\"qt_%s.qm\" % lng for lng in config.add_qt_tr[0].split(\",\")]\n+    add_qt_tr = [\"qt_{}.qm\".format(lng) for lng in config.add_qt_tr[0].split(\",\")]\n     for lng_file in add_qt_tr:\n         p = os.path.join(qt_tr_dir, lng_file)\n         if verbose >= 3:\n-            print(\"Checking for \\\"%s\\\"...\" % p)\n+            print(\"Checking for \\\"{}\\\"...\".format(p))\n         if not os.path.exists(p):\n             if verbose >= 1:\n-                sys.stderr.write(\"Error: Could not find Qt translation file \\\"%s\\\"\\n\" % (lng_file))\n+                sys.stderr.write(\"Error: Could not find Qt translation file \\\"{}\\\"\\n\".format(lng_file))\n                 sys.exit(1)\n \n # ------------------------------------------------\n \n if verbose >= 2:\n     print(\"+ Installing qt.conf +\")\n \n-f = open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\")\n-f.write(qt_conf.encode())\n-f.close()\n+with open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\") as f:\n+    f.write(qt_conf.encode())\n \n # ------------------------------------------------\n \n@@ -709,30 +742,14 @@ if config.sign and 'CODESIGNARGS' not in os.environ:\n     print(\"You must set the CODESIGNARGS environment variable. Skipping signing.\")\n elif config.sign:\n     if verbose >= 1:\n-        print(\"Code-signing app bundle %s\"%(target,))\n-    subprocess.check_call(\"codesign --force %s %s\"%(os.environ['CODESIGNARGS'], target), shell=True)\n+        print(\"Code-signing app bundle {}\".format(target))\n+    subprocess.check_call(\"codesign --force {} {}\".format(os.environ['CODESIGNARGS'], target), shell=True)\n \n # ------------------------------------------------\n \n if config.dmg is not None:\n \n-    #Patch in check_output for Python 2.6\n-    if \"check_output\" not in dir( subprocess ):\n-        def f(*popenargs, **kwargs):\n-            if 'stdout' in kwargs:\n-                raise ValueError('stdout argument not allowed, it will be overridden.')\n-            process = subprocess.Popen(stdout=subprocess.PIPE, *popenargs, **kwargs)\n-            output, unused_err = process.communicate()\n-            retcode = process.poll()\n-            if retcode:\n-                cmd = kwargs.get(\"args\")\n-                if cmd is None:\n-                    cmd = popenargs[0]\n-                raise CalledProcessError(retcode, cmd)\n-            return output\n-        subprocess.check_output = f\n-\n-    def runHDIUtil(verb, image_basename, **kwargs):\n+    def runHDIUtil(verb: str, image_basename: str, **kwargs) -> int:\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n         if \"capture_stdout\" in kwargs:\n             del kwargs[\"capture_stdout\"]\n@@ -746,10 +763,10 @@ if config.dmg is not None:\n         \n         for key, value in kwargs.items():\n             hdiutil_args.append(\"-\" + key)\n-            if not value is True:\n+            if value is not True:\n                 hdiutil_args.append(str(value))\n         \n-        return run(hdiutil_args)\n+        return run(hdiutil_args, universal_newlines=True)\n     \n     if verbose >= 2:\n         if fancy is None:\n@@ -790,8 +807,8 @@ if config.dmg is not None:\n             output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n-        \n-        m = re.search(\"/Volumes/(.+$)\", output)\n+\n+        m = re.search(r\"/Volumes/(.+$)\", output)\n         disk_root = m.group(0)\n         disk_name = m.group(1)\n         \n@@ -852,7 +869,7 @@ if config.dmg is not None:\n             \"items_positions\" : \"\\n                   \".join(items_positions)\n             }\n         if \"window_bounds\" in fancy:\n-            params[\"window.bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n+            params[\"window_bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n         if \"icon_size\" in fancy:\n             params[\"icon_size\"] = str(fancy[\"icon_size\"])\n         if bg_path is not None:\n@@ -868,7 +885,7 @@ if config.dmg is not None:\n             print(s)\n \n         p = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE)\n-        p.communicate(input=s)\n+        p.communicate(input=s.encode('utf-8'))\n         if p.returncode:\n             print(\"Error running osascript.\")\n "
      },
      {
        "sha": "0ded87c58f4ee721058f914682a283f9f9a69787",
        "filename": "contrib/qos/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,5 +1,5 @@\n-### Qos ###\n+### QoS (Quality of service) ###\n \n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN (defined as 192.168.x.x).\n+This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n \n This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "8408545a218e4faa4a3fb41951a3afab21ba199a",
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 28,
        "deletions": 7,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,11 +1,20 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C\n #network interface on which to limit traffic\n IF=\"eth0\"\n #limit of the network interface in question\n LINKCEIL=\"1gbit\"\n #limit outbound Bitcoin protocol traffic to this rate\n LIMIT=\"160kbit\"\n-#defines the address space for which you wish to disable rate limiting\n-LOCALNET=\"192.168.0.0/16\"\n+#defines the IPv4 address space for which you wish to disable rate limiting\n+LOCALNET_V4=\"192.168.0.0/16\"\n+#defines the IPv6 address space for which you wish to disable rate limiting\n+LOCALNET_V6=\"fe80::/10\"\n \n #delete existing rules\n tc qdisc del dev ${IF} root\n@@ -24,6 +33,12 @@ tc class add dev ${IF} parent 1:1 classid 1:11 htb rate ${LIMIT} ceil ${LIMIT} p\n tc filter add dev ${IF} parent 1: protocol ip prio 1 handle 1 fw classid 1:10\n tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n \n+if [ -n \"${LOCALNET_V6}\" ] ; then\n+\t# v6 cannot have the same priority value as v4\n+\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 3 handle 1 fw classid 1:10\n+\ttc filter add dev ${IF} parent 1: protocol ipv6 prio 4 handle 2 fw classid 1:11\n+fi\n+\n #delete any existing rules\n #disable for now\n #ret=0\n@@ -33,9 +48,15 @@ tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n #done\n \n #limit outgoing traffic to and from port 8333. but not when dealing with a host on the local network\n-#\t(defined by $LOCALNET)\n-#\t--set-mark marks packages matching these criteria with the number \"2\"\n-#\tthese packages are filtered by the tc filter with \"handle 2\"\n+#\t(defined by $LOCALNET_V4 and $LOCALNET_V6)\n+#\t--set-mark marks packages matching these criteria with the number \"2\" (v4)\n+#\t--set-mark marks packages matching these criteria with the number \"4\" (v6)\n+#\tthese packets are filtered by the tc filter with \"handle 2\"\n #\tthis filter sends the packages into the 1:11 class, and this class is limited to ${LIMIT}\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET} -j MARK --set-mark 0x2\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET} -j MARK --set-mark 0x2\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n+\n+if [ -n \"${LOCALNET_V6}\" ] ; then\n+\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n+\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n+fi"
      },
      {
        "sha": "fd8a8b71298c6b5878c83842cd3f68804560a2e2",
        "filename": "contrib/qt_translations.py",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/qt_translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/qt_translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qt_translations.py?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,22 +0,0 @@\n-#!/usr/bin/env python\n-\n-# Helpful little script that spits out a comma-separated list of\n-# language codes for Qt icons that should be included\n-# in binary bitcoin distributions\n-\n-import glob\n-import os\n-import re\n-import sys\n-\n-if len(sys.argv) != 3:\n-  sys.exit(\"Usage: %s $QTDIR/translations $BITCOINDIR/src/qt/locale\"%sys.argv[0])\n-\n-d1 = sys.argv[1]\n-d2 = sys.argv[2]\n-\n-l1 = set([ re.search(r'qt_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d1, 'qt_*.qm')) ])\n-l2 = set([ re.search(r'bitcoin_(.*).qm', f).group(1) for f in glob.glob(os.path.join(d2, 'bitcoin_*.qm')) ])\n-\n-print \",\".join(sorted(l1.intersection(l2)))\n-"
      },
      {
        "sha": "aecb3ba84f20d4575569fb1fc2e4eddb5018c645",
        "filename": "contrib/rpm/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 185,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/rpm/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/rpm/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/README.md?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,185 +0,0 @@\n-RPM Spec File Notes\n--------------------\n-\n-The RPM spec file provided here is for Bitcoin-Core 0.12.0 and builds on CentOS\n-7 with either the CentOS provided OpenSSL library or with LibreSSL as packaged\n-at [LibreLAMP.com](https://librelamp.com/). It should hopefully not be too\n-difficult to port the RPM spec file to most RPM based Linux distributions.\n-\n-When porting the spec file to build for a particular distribution, there are\n-some important notes.\n-\n-## Sources\n-\n-It is considered good form for all sources to reference a URL where the source\n-can be downloaded.\n-\n-Sources 0-9 should be reserved for source code tarballs. `Source0` should\n-reference the release tarball available from https://bitcoin.org/bin/ and\n-`Source1` should reference the BerkeleyDB source.\n-\n-Sources 10-99 are for source files that are maintained in the\n-[Bitcoin git repository](https://github.com/bitcoin/bitcoin) but are not part of\n-the release tarball. Most of these will reside in the `contrib` sub-directory.\n-\n-Sources 10-19 should be reserved for miscellaneous configuration files.\n-Currently only `Source10` is used, for the example `bitcoin.conf` file.\n-\n-Sources 20-29 should be reserved for man pages. Currently only `Source20`\n-through `Source23` are used.\n-\n-Sources 30-39 should be reserved for SELinux related files. Currently only\n-`Source30` through `Source32` are used. Until those files are in a tagged\n-release, the full URL specified in the RPM spec file will not work. You can get\n-them from the git ropository where you retrieved this file.\n-\n-Sources 100+ are for files that are not source tarballs and are not maintained\n-in the bitcoin git repository. At present only an SVG version of the Bitcoin\n-icon is used.\n-\n-## Patches\n-\n-In general, patches should be avoided. When a packager feels a patch is\n-necessary, the packager should bring the problem to the attention of the bitcoin\n-developers so that an official fix to the issue can make it into the next\n-release.\n-\n-### Patch0 bitcoin-0.12.0-libressl.patch\n-\n-This patch is only needed if building against LibreSSL. LibreSSL is not the\n-standard TLS library on most Linux distributions. The patch will likely not be\n-needed when 0.12.1 is released, a proper fix is already in the Bitcoin git\n-master branch.\n-\n-## BuildRequires\n-\n-The packages specified in the `BuildRequires` are specified according to the\n-package naming convention currently used in CentOS 7 and EPEL for CentOS 7. You\n-may need to change some of the package names for other distributions. This is\n-most likely to be the case with the Qt packages.\n-\n-## BerkeleyDB\n-\n-The `build-unix.md` file recommends building against BerkeleyDB 4.8.30. Even if\n-that is the version your Linux distribution ships with, it probably is a good\n-idea to build Bitcoin Core against a static version of that library compiled\n-according to the instructions in the `build-unix.md` file so that any changes\n-the distribution may make in the future will not result in a problem for users.\n-\n-The problem that can exist, clients built against different versions of\n-BerkeleyDB may not be able read each other's `wallet.dat` file which can make it\n-difficult for a user to recover from backup in the event of a system failure.\n-\n-## Graphical User Interface and Qt Version\n-\n-The RPM spec file will by default build the GUI client linked against the Qt5\n-libraries. If you wish instead to link against the Qt4 libraries you need to\n-pass the switch `-D '_use_qt4 1'` at build time to the `rpmbuild` or `mock`\n-command used to build the packages.\n-\n-If you would prefer not to build the GUI at all, you can pass the switch\n-`-D '_no_gui 1'` to the `rpmbuild` or `mock` build command.\n-\n-## Desktop and KDE Files\n-\n-The desktop and KDE meta files are created in the spec file itself with the\n-`cat` command. This is done to allow easy distribution specific changes without\n-needing to use any patches. A specific time stamp is given to the files so that\n-it does not they do not appear to have been updated every time the package is\n-built. If you do make changes to them, you probably should update time stamp\n-assigned to them in the `touch` command that specifies the time stamp.\n-\n-## SVG, PNG, and XPM Icons\n-\n-The `bitcoin.svg` file is from the source listed as `Source100`. It is used as\n-the source for the PNG and XPM files. The generated PNG and XPM files are given\n-the same time stamp as the source SVG file as a means of indicating they are\n-derived from it.\n-\n-## Systemd\n-\n-This spec file assumes the target distribution uses systemd. That really only\n-matters for the `bitcoin-server` package. At this point, most RPM based\n-distributions that still receive vendor updates do in fact use systemd.\n-\n-The files to control the service are created in the RPM spec file itself using\n-the `cat` command. This is done to make it easy to modify for other\n-distributions that may implement things differently without needing to patch\n-source. A specific time stamp is given to the files so that they do not appear\n-to have been updated every time the package is built. If you do make changes to\n-them, you probably should update the time stamp assigned to them in the `touch`\n-command that specifies the time stamp.\n-\n-## SELinux\n-\n-The `bitcoin-server` package should have SELinux support. How to properly do\n-that *may* vary by distribution and version of distribution.\n-\n-The SELinux stuff in this RPM spec file *should* be correct for CentOS, RHEL,\n-and Fedora but it would be a good idea to review it before building the package\n-on other distributions.\n-\n-## Tests\n-\n-The `%check` section takes a very long time to run. If your build system has a\n-time limit for package build, you may need to make an exception for this\n-package. On CentOS 7 the `%check` section completes successfully with both\n-OpenSSL and LibreSSL, a failure really does mean something is wrong.\n-\n-## LibreSSL Build Notes\n-\n-To build against LibreSSL you will need to pass the switch\n-`-D '_use_libressl 1'` to the `rpmbuild` or `mock` command or the spec file will\n-want the OpenSSL development files.\n-\n-### LibreSSL and Boost\n-\n-LibreSSL (and some newer builds of OpenSSL) do not have support for SSLv3. This\n-can cause issues with the Boost package if the Boost package has not been\n-patched accordingly. On those distributions, you will either need to build\n-Bitcoin-Core against OpenSSL or use a patched version of Boost in the build\n-system.\n-\n-As SSLv3 is no longer safe, distributions that have not patched Boost to work\n-with TLS libraries that do not support SSLv3 should have bug reports filed\n-against the Boost package. This bug report has already been filed for RHEL 7 but\n-it may need to be filed for other distributions.\n-\n-A patch for Boost: https://github.com/boostorg/asio/pull/23/files\n-\n-## ZeroMQ\n-\n-At this time, this RPM spec file does not support the ZeroMQ build options. A\n-suitable version of ZeroMQ is not available for the platform this spec file was\n-developed on (CentOS 7).\n-\n-## Legacy Credit\n-\n-This RPM spec file is largely based upon the work of Michael Hampton at\n-[Ringing Liberty](https://www.ringingliberty.com/bitcoin/). He has been\n-packaging Bitcoin for Fedora at least since 2012.\n-\n-Most of the differences between his packaging and this package are stylistic in\n-nature. The major differences:\n-\n-1. He builds from a github tagged release rather than a release tarball. This\n-should not result in different source code.\n-\n-2. He does not build BerkeleyDB but instead uses the BerkeleyDB provided by the\n-Linux distribution. For the distributions he packages for, they currently all\n-use the same version of BerkeleyDB so that difference is *probably* just\n-academic.\n-\n-3. As of his 10.11.2 package he did not allow for building against LibreSSL,\n-specifying a build without the Qt GUI, or specifying which version of the Qt\n-libraries to use.\n-\n-4. I renamed the `bitcoin` package that contains the Qt GUI to `bitcoin-core` as\n-that appears to be how the general population refers to it, in contrast to\n-`bitcoin-xt` or `bitcoin-classic`. I wanted to make sure the general population\n-knows what they are getting when installing the GUI package.\n-\n-As far as minor differences, I generally prefer to assign the file permissions\n-in the `%files` portion of an RPM spec file rather than specifying the\n-permissions of a file during `%install` and other minor things like that that\n-are largely just cosmetic."
      },
      {
        "sha": "555614a06d49ab820fce1e08f723005b26cdcb01",
        "filename": "contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin-0.12.0-libressl.patch?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,24 +0,0 @@\n-diff -ur bitcoin-0.12.0.orig/src/init.cpp bitcoin-0.12.0/src/init.cpp\n---- bitcoin-0.12.0.orig/src/init.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/init.cpp\t2016-02-23 06:03:47.133227757 -0800\n-@@ -1075,7 +1075,7 @@\n-     if (fPrintToDebugLog)\n-         OpenDebugLog();\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n- #else\n-     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n-diff -ur bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp bitcoin-0.12.0/src/qt/rpcconsole.cpp\n---- bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/qt/rpcconsole.cpp\t2016-02-23 15:09:42.881126841 -0800\n-@@ -264,7 +264,7 @@\n- \n-     // set library version labels\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     ui->openSSLVersion->setText(SSLeay_version(SSLEAY_VERSION));\n- #else\n-     ui->openSSLVersion->setText(OpenSSL_version(OPENSSL_VERSION));"
      },
      {
        "sha": "6f5eef6375255381f7c4552715ffdaf329e4a502",
        "filename": "contrib/rpm/bitcoin.fc",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/rpm/bitcoin.fc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/rpm/bitcoin.fc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.fc?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,8 +0,0 @@\n-/usr/bin/bitcoin-cli\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/sbin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/lib(64)?/bitcoin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-\n-/etc/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_conf_t,s0)\n-/var/lib/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_var_lib_t,s0)\n-\n-(/var)?/run/bitcoind(/.*)?   gen_context(system_u:object_r:bitcoin_var_run_t,s0)"
      },
      {
        "sha": "2b096c24dc32396ef071aedecc6907c28bfba855",
        "filename": "contrib/rpm/bitcoin.if",
        "status": "removed",
        "additions": 0,
        "deletions": 157,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/rpm/bitcoin.if",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/rpm/bitcoin.if",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.if?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,157 +0,0 @@\n-\n-## <summary>policy for bitcoin</summary>\n-\n-\n-########################################\n-## <summary>\n-##\tTransition to bitcoin.\n-## </summary>\n-## <param name=\"domain\">\n-## <summary>\n-##\tDomain allowed to transition.\n-## </summary>\n-## </param>\n-#\n-interface(`bitcoin_domtrans',`\n-\tgen_require(`\n-\t\ttype bitcoin_t, bitcoin_exec_t;\n-\t')\n-\n-\tcorecmd_search_bin($1)\n-\tdomtrans_pattern($1, bitcoin_exec_t, bitcoin_t)\n-')\n-\n-\n-########################################\n-## <summary>\n-##\tExecute bitcoin server in the bitcoin domain.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_initrc_domtrans',`\n-\tgen_require(`\n-\t\ttype bitcoin_initrc_exec_t;\n-\t')\n-\n-\tinit_labeled_script_domtrans($1, bitcoin_initrc_exec_t)\n-')\n-\n-\n-########################################\n-## <summary>\n-##\tSearch bitcoin lib directories.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_search_lib',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tallow $1 bitcoin_var_lib_t:dir search_dir_perms;\n-\tfiles_search_var_lib($1)\n-')\n-\n-########################################\n-## <summary>\n-##\tRead bitcoin lib files.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_read_lib_files',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tfiles_search_var_lib($1)\n-\tread_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-')\n-\n-########################################\n-## <summary>\n-##\tManage bitcoin lib files.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_manage_lib_files',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tfiles_search_var_lib($1)\n-\tmanage_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-')\n-\n-########################################\n-## <summary>\n-##\tManage bitcoin lib directories.\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-#\n-interface(`bitcoin_manage_lib_dirs',`\n-\tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tfiles_search_var_lib($1)\n-\tmanage_dirs_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-')\n-\n-\n-########################################\n-## <summary>\n-##\tAll of the rules required to administrate\n-##\tan bitcoin environment\n-## </summary>\n-## <param name=\"domain\">\n-##\t<summary>\n-##\tDomain allowed access.\n-##\t</summary>\n-## </param>\n-## <param name=\"role\">\n-##\t<summary>\n-##\tRole allowed access.\n-##\t</summary>\n-## </param>\n-## <rolecap/>\n-#\n-interface(`bitcoin_admin',`\n-\tgen_require(`\n-\t\ttype bitcoin_t;\n-\t\ttype bitcoin_initrc_exec_t;\n-\t\ttype bitcoin_var_lib_t;\n-\t')\n-\n-\tallow $1 bitcoin_t:process { ptrace signal_perms };\n-\tps_process_pattern($1, bitcoin_t)\n-\n-\tbitcoin_initrc_domtrans($1)\n-\tdomain_system_change_exemption($1)\n-\trole_transition $2 bitcoin_initrc_exec_t system_r;\n-\tallow $2 system_r;\n-\n-\tfiles_search_var_lib($1)\n-\tadmin_pattern($1, bitcoin_var_lib_t)\n-\n-')\n-"
      },
      {
        "sha": "38ae0381807661da3b53ee2af5493ab7ca1e3cd1",
        "filename": "contrib/rpm/bitcoin.spec",
        "status": "removed",
        "additions": 0,
        "deletions": 444,
        "changes": 444,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/rpm/bitcoin.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/rpm/bitcoin.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.spec?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,444 +0,0 @@\n-%define bdbv 4.8.30\n-%global selinux_variants mls strict targeted\n-\n-%if 0%{?_no_gui:1}\n-%define _buildqt 0\n-%define buildargs --with-gui=no\n-%else\n-%define _buildqt 1\n-%if 0%{?_use_qt4}\n-%define buildargs --with-qrencode --with-gui=qt4\n-%else\n-%define buildargs --with-qrencode --with-gui=qt5\n-%endif\n-%endif\n-\n-Name:\t\tbitcoin\n-Version:\t0.12.0\n-Release:\t2%{?dist}\n-Summary:\tPeer to Peer Cryptographic Currency\n-\n-Group:\t\tApplications/System\n-License:\tMIT\n-URL:\t\thttps://bitcoin.org/\n-Source0:\thttps://bitcoin.org/bin/bitcoin-core-%{version}/bitcoin-%{version}.tar.gz\n-Source1:\thttp://download.oracle.com/berkeley-db/db-%{bdbv}.NC.tar.gz\n-\n-Source10:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/examples/bitcoin.conf\n-\n-#man pages\n-Source20:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoind.1\n-Source21:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoin-cli.1\n-Source22:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoin-qt.1\n-Source23:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoin.conf.5\n-\n-#selinux\n-Source30:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.te\n-# Source31 - what about bitcoin-tx and bench_bitcoin ???\n-Source31:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.fc\n-Source32:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.if\n-\n-Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\n-\n-%if 0%{?_use_libressl:1}\n-BuildRequires:\tlibressl-devel\n-%else\n-BuildRequires:\topenssl-devel\n-%endif\n-BuildRequires:\tboost-devel\n-BuildRequires:\tminiupnpc-devel\n-BuildRequires:\tautoconf automake libtool\n-BuildRequires:\tlibevent-devel\n-\n-\n-Patch0:\t\tbitcoin-0.12.0-libressl.patch\n-\n-\n-%description\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n-operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n-\n-%if %{_buildqt}\n-%package core\n-Summary:\tPeer to Peer Cryptographic Currency\n-Group:\t\tApplications/System\n-Obsoletes:\t%{name} < %{version}-%{release}\n-Provides:\t%{name} = %{version}-%{release}\n-%if 0%{?_use_qt4}\n-BuildRequires:\tqt-devel\n-%else\n-BuildRequires:\tqt5-qtbase-devel\n-# for /usr/bin/lrelease-qt5\n-BuildRequires:\tqt5-linguist\n-%endif\n-BuildRequires:\tprotobuf-devel\n-BuildRequires:\tqrencode-devel\n-BuildRequires:\t%{_bindir}/desktop-file-validate\n-# for icon generation from SVG\n-BuildRequires:\t%{_bindir}/inkscape\n-BuildRequires:\t%{_bindir}/convert\n-\n-%description core\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n-operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n-\n-This package contains the Qt based graphical client and node. If you are looking\n-to run a Bitcoin wallet, this is probably the package you want.\n-%endif\n-\n-\n-%package libs\n-Summary:\tBitcoin shared libraries\n-Group:\t\tSystem Environment/Libraries\n-\n-%description libs\n-This package provides the bitcoinconsensus shared libraries. These libraries\n-may be used by third party software to provide consensus verification\n-functionality.\n-\n-Unless you know need this package, you probably do not.\n-\n-%package devel\n-Summary:\tDevelopment files for bitcoin\n-Group:\t\tDevelopment/Libraries\n-Requires:\t%{name}-libs = %{version}-%{release}\n-\n-%description devel\n-This package contains the header files and static library for the\n-bitcoinconsensus shared library. If you are developing or compiling software\n-that wants to link against that library, then you need this package installed.\n-\n-Most people do not need this package installed.\n-\n-%package server\n-Summary:\tThe bitcoin daemon\n-Group:\t\tSystem Environment/Daemons\n-Requires:\tbitcoin-utils = %{version}-%{release}\n-Requires:\tselinux-policy policycoreutils-python\n-Requires(pre):\tshadow-utils\n-Requires(post):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n-Requires(postun):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n-BuildRequires:\tsystemd\n-BuildRequires:\tcheckpolicy\n-BuildRequires:\t%{_datadir}/selinux/devel/Makefile\n-\n-%description server\n-This package provides a stand-alone bitcoin-core daemon. For most users, this\n-package is only needed if they need a full-node without the graphical client.\n-\n-Some third party wallet software will want this package to provide the actual\n-bitcoin-core node they use to connect to the network.\n-\n-If you use the graphical bitcoin-core client then you almost certainly do not\n-need this package.\n-\n-%package utils\n-Summary:\tBitcoin utilities\n-Group:\t\tApplications/System\n-\n-%description utils\n-This package provides several command line utilities for interacting with a\n-bitcoin-core daemon.\n-\n-The bitcoin-cli utility allows you to communicate and control a bitcoin daemon\n-over RPC, the bitcoin-tx utility allows you to create a custom transaction, and\n-the bench_bitcoin utility can be used to perform some benchmarks.\n-\n-This package contains utilities needed by the bitcoin-server package.\n-\n-\n-%prep\n-%setup -q\n-%patch0 -p1 -b .libressl\n-cp -p %{SOURCE10} ./bitcoin.conf.example\n-tar -zxf %{SOURCE1}\n-cp -p db-%{bdbv}.NC/LICENSE ./db-%{bdbv}.NC-LICENSE\n-mkdir db4 SELinux\n-cp -p %{SOURCE30} %{SOURCE31} %{SOURCE32} SELinux/\n-\n-\n-%build\n-CWD=`pwd`\n-cd db-%{bdbv}.NC/build_unix/\n-../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${CWD}/db4\n-make install\n-cd ../..\n-\n-./autogen.sh\n-%configure LDFLAGS=\"-L${CWD}/db4/lib/\" CPPFLAGS=\"-I${CWD}/db4/include/\" --with-miniupnpc --enable-glibc-back-compat %{buildargs}\n-make %{?_smp_mflags}\n-\n-pushd SELinux\n-for selinuxvariant in %{selinux_variants}; do\n-\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile\n-\tmv bitcoin.pp bitcoin.pp.${selinuxvariant}\n-\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile clean\n-done\n-popd\n-\n-\n-%install\n-make install DESTDIR=%{buildroot}\n-\n-mkdir -p -m755 %{buildroot}%{_sbindir}\n-mv %{buildroot}%{_bindir}/bitcoind %{buildroot}%{_sbindir}/bitcoind\n-\n-# systemd stuff\n-mkdir -p %{buildroot}%{_tmpfilesdir}\n-cat <<EOF > %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n-d /run/bitcoind 0750 bitcoin bitcoin -\n-EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n-\n-mkdir -p %{buildroot}%{_sysconfdir}/sysconfig\n-cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n-# Provide options to the bitcoin daemon here, for example\n-# OPTIONS=\"-testnet -disable-wallet\"\n-\n-OPTIONS=\"\"\n-\n-# System service defaults.\n-# Don't change these unless you know what you're doing.\n-CONFIG_FILE=\"%{_sysconfdir}/bitcoin/bitcoin.conf\"\n-DATA_DIR=\"%{_localstatedir}/lib/bitcoin\"\n-PID_FILE=\"/run/bitcoind/bitcoind.pid\"\n-EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n-\n-mkdir -p %{buildroot}%{_unitdir}\n-cat <<EOF > %{buildroot}%{_unitdir}/bitcoin.service\n-[Unit]\n-Description=Bitcoin daemon\n-After=syslog.target network.target\n-\n-[Service]\n-Type=forking\n-ExecStart=%{_sbindir}/bitcoind -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n-EnvironmentFile=%{_sysconfdir}/sysconfig/bitcoin\n-User=bitcoin\n-Group=bitcoin\n-\n-Restart=on-failure\n-PrivateTmp=true\n-TimeoutStopSec=120\n-TimeoutStartSec=60\n-StartLimitInterval=240\n-StartLimitBurst=5\n-\n-[Install]\n-WantedBy=multi-user.target\n-EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/bitcoin.service\n-#end systemd stuff\n-\n-mkdir %{buildroot}%{_sysconfdir}/bitcoin\n-mkdir -p %{buildroot}%{_localstatedir}/lib/bitcoin\n-\n-#SELinux\n-for selinuxvariant in %{selinux_variants}; do\n-\tinstall -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}\n-\tinstall -p -m 644 SELinux/bitcoin.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/bitcoin.pp\n-done\n-\n-%if %{_buildqt}\n-# qt icons\n-install -D -p share/pixmaps/bitcoin.ico %{buildroot}%{_datadir}/pixmaps/bitcoin.ico\n-install -p share/pixmaps/nsis-header.bmp %{buildroot}%{_datadir}/pixmaps/\n-install -p share/pixmaps/nsis-wizard.bmp %{buildroot}%{_datadir}/pixmaps/\n-install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/bitcoin.svg\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin16.png -w16 -h16\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin32.png -w32 -h32\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin64.png -w64 -h64\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin128.png -w128 -h128\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin256.png -w256 -h256\n-%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin16.xpm\n-%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin32.xpm\n-%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin64.xpm\n-%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin128.xpm\n-%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin256.xpm\n-touch %{buildroot}%{_datadir}/pixmaps/*.png -r %{SOURCE100}\n-touch %{buildroot}%{_datadir}/pixmaps/*.xpm -r %{SOURCE100}\n-\n-# Desktop File - change the touch timestamp if modifying\n-mkdir -p %{buildroot}%{_datadir}/applications\n-cat <<EOF > %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-[Desktop Entry]\n-Encoding=UTF-8\n-Name=Bitcoin\n-Comment=Bitcoin P2P Cryptocurrency\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n-Terminal=false\n-Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;Finance;\n-EOF\n-# change touch date when modifying desktop\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-\n-# KDE protocol - change the touch timestamp if modifying\n-mkdir -p %{buildroot}%{_datadir}/kde4/services\n-cat <<EOF > %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n-[Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n-input=none\n-output=none\n-helper=true\n-listing=\n-reading=false\n-writing=false\n-makedir=false\n-deleting=false\n-EOF\n-# change touch date when modifying protocol\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n-%endif\n-\n-# man pages\n-install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/bitcoind.1\n-install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/bitcoin-cli.1\n-%if %{_buildqt}\n-install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/bitcoin-qt.1\n-%endif\n-install -D -p %{SOURCE23} %{buildroot}%{_mandir}/man5/bitcoin.conf.5\n-\n-# nuke these, we do extensive testing of binaries in %%check before packaging\n-rm -f %{buildroot}%{_bindir}/test_*\n-\n-%check\n-make check\n-pushd src\n-srcdir=. test/bitcoin-util-test.py\n-popd\n-qa/pull-tester/rpc-tests.py -extended\n-\n-%post libs -p /sbin/ldconfig\n-\n-%postun libs -p /sbin/ldconfig\n-\n-%pre server\n-getent group bitcoin >/dev/null || groupadd -r bitcoin\n-getent passwd bitcoin >/dev/null ||\n-\tuseradd -r -g bitcoin -d /var/lib/bitcoin -s /sbin/nologin \\\n-\t-c \"Bitcoin wallet server\" bitcoin\n-exit 0\n-\n-%post server\n-%systemd_post bitcoin.service\n-# SELinux\n-if [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n-for selinuxvariant in %{selinux_variants}; do\n-\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/bitcoin.pp &> /dev/null || :\n-done\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8333\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18333\n-%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin || :\n-fi\n-\n-%posttrans server\n-%{_bindir}/systemd-tmpfiles --create\n-\n-%preun server\n-%systemd_preun bitcoin.service\n-\n-%postun server\n-%systemd_postun bitcoin.service\n-# SELinux\n-if [ $1 -eq 0 ]; then\n-\tif [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n-\t%{_sbindir}/semanage port -d -p tcp 8332\n-\t%{_sbindir}/semanage port -d -p tcp 8333\n-\t%{_sbindir}/semanage port -d -p tcp 18332\n-\t%{_sbindir}/semanage port -d -p tcp 18333\n-\tfor selinuxvariant in %{selinux_variants}; do\n-\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r bitcoin &> /dev/null || :\n-\tdone\n-\t%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-\t[ -d %{_localstatedir}/lib/bitcoin ] && \\\n-\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin &> /dev/null || :\n-\tfi\n-fi\n-\n-%clean\n-rm -rf %{buildroot}\n-\n-%if %{_buildqt}\n-%files core\n-%defattr(-,root,root,-)\n-%license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-qt\n-%attr(0644,root,root) %{_datadir}/applications/bitcoin-core.desktop\n-%attr(0644,root,root) %{_datadir}/kde4/services/bitcoin-core.protocol\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.ico\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.bmp\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.svg\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.png\n-%attr(0644,root,root) %{_datadir}/pixmaps/*.xpm\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-qt.1*\n-%endif\n-\n-%files libs\n-%defattr(-,root,root,-)\n-%license COPYING\n-%doc COPYING doc/README.md doc/shared-libraries.md\n-%{_libdir}/lib*.so.*\n-\n-%files devel\n-%defattr(-,root,root,-)\n-%license COPYING\n-%doc COPYING doc/README.md doc/developer-notes.md doc/shared-libraries.md\n-%attr(0644,root,root) %{_includedir}/*.h\n-%{_libdir}/*.so\n-%{_libdir}/*.a\n-%{_libdir}/*.la\n-%attr(0644,root,root) %{_libdir}/pkgconfig/*.pc\n-\n-%files server\n-%defattr(-,root,root,-)\n-%license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_sbindir}/bitcoind\n-%attr(0644,root,root) %{_tmpfilesdir}/bitcoin.conf\n-%attr(0644,root,root) %{_unitdir}/bitcoin.service\n-%dir %attr(0750,bitcoin,bitcoin) %{_sysconfdir}/bitcoin\n-%dir %attr(0750,bitcoin,bitcoin) %{_localstatedir}/lib/bitcoin\n-%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/bitcoin\n-%attr(0644,root,root) %{_datadir}/selinux/*/*.pp\n-%attr(0644,root,root) %{_mandir}/man1/bitcoind.1*\n-%attr(0644,root,root) %{_mandir}/man5/bitcoin.conf.5*\n-\n-%files utils\n-%defattr(-,root,root,-)\n-%license COPYING\n-%doc COPYING bitcoin.conf.example doc/README.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-cli\n-%attr(0755,root,root) %{_bindir}/bitcoin-tx\n-%attr(0755,root,root) %{_bindir}/bench_bitcoin\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-cli.1*\n-%attr(0644,root,root) %{_mandir}/man5/bitcoin.conf.5*\n-\n-\n-\n-%changelog\n-* Fri Feb 26 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-2\n-- Rename Qt package from bitcoin to bitcoin-core\n-- Make building of the Qt package optional\n-- When building the Qt package, default to Qt5 but allow building\n--  against Qt4\n-- Only run SELinux stuff in post scripts if it is not set to disabled\n-\n-* Wed Feb 24 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-1\n-- Initial spec file for 0.12.0 release\n-\n-# This spec file is written from scratch but a lot of the packaging decisions are directly\n-# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/bitcoin/"
      },
      {
        "sha": "d6231c591a24312b3c073f7658533587279aeba7",
        "filename": "contrib/rpm/bitcoin.te",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/rpm/bitcoin.te",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/rpm/bitcoin.te",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.te?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,81 +0,0 @@\n-policy_module(bitcoin, 1.100.1)\n-\n-########################################\n-#\n-# Declarations\n-#\n-\n-type bitcoin_t;\n-type bitcoin_exec_t;\n-init_daemon_domain(bitcoin_t, bitcoin_exec_t)\n-\n-permissive bitcoin_t;\n-\n-type bitcoin_initrc_exec_t;\n-init_script_file(bitcoin_initrc_exec_t)\n-\n-type bitcoin_conf_t;\n-files_type(bitcoin_conf_t)\n-\n-type bitcoin_var_lib_t;\n-files_type(bitcoin_var_lib_t)\n-\n-type bitcoin_var_run_t;\n-files_type(bitcoin_var_run_t)\n-\n-type bitcoin_port_t;\n-corenet_port(bitcoin_port_t)\n-\n-########################################\n-#\n-# bitcoin local policy\n-#\n-allow bitcoin_t self:process { fork };\n-\n-allow bitcoin_t self:fifo_file rw_fifo_file_perms;\n-allow bitcoin_t self:unix_stream_socket create_stream_socket_perms;\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-manage_files_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-files_var_lib_filetrans(bitcoin_t, bitcoin_var_lib_t, { dir file })\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-\n-sysnet_dns_name_resolve(bitcoin_t)\n-corenet_all_recvfrom_unlabeled(bitcoin_t)\n-\n-allow bitcoin_t self:tcp_socket create_stream_socket_perms;\n-corenet_tcp_sendrecv_generic_if(bitcoin_t)\n-corenet_tcp_sendrecv_generic_node(bitcoin_t)\n-corenet_tcp_sendrecv_all_ports(bitcoin_t)\n-corenet_tcp_bind_generic_node(bitcoin_t)\n-\n-gen_require(`\n-    type bitcoin_port_t;\n-')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_bind;\n-\n-gen_require(`\n-    type bitcoin_port_t;\n-')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_connect;\n-\n-domain_use_interactive_fds(bitcoin_t)\n-\n-files_read_etc_files(bitcoin_t)\n-\n-miscfiles_read_localization(bitcoin_t)\n-\n-sysnet_dns_name_resolve(bitcoin_t)\n-\n-allow bitcoin_t bitcoin_exec_t:file execute_no_trans;\n-allow bitcoin_t self:process setsched;\n-corecmd_exec_ls(bitcoin_t)\n-corenet_tcp_connect_http_port(bitcoin_t)\n-dev_read_urand(bitcoin_t)\n-fs_getattr_xattr_fs(bitcoin_t)\n-kernel_read_system_state(bitcoin_t)"
      },
      {
        "sha": "502c20d0d678c59eafbb976d7a1b2537be0217b6",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 14,
        "deletions": 4,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,11 +1,21 @@\n-### Seeds ###\n+# Seeds\n \n Utility to generate the seeds.txt list that is compiled into the client\n (see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n \n+Be sure to update `PATTERN_AGENT` in `makeseeds.py` to include the current version,\n+and remove old versions as necessary (at a minimum when GetDesirableServiceFlags\n+changes its default return value, as those are the services which seeds are added\n+to addrman with).\n+\n The seeds compiled into the release are created from sipa's DNS seed data, like this:\n \n-    curl -s http://bitcoin.sipa.be/seeds.txt > seeds_main.txt\n-    python makeseeds.py < seeds_main.txt > nodes_main.txt\n-    python generate-seeds.py . > ../../src/chainparamsseeds.h\n+    curl -s http://bitcoin.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n+    python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n+    python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n+\n+## Dependencies\n+\n+Ubuntu:\n \n+    sudo apt-get install python3-dnspython"
      },
      {
        "sha": "7630a7a4fa2550396e8e6ee5421a90f640b7be0a",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,5 +1,5 @@\n-#!/usr/bin/python\n-# Copyright (c) 2014 Wladimir J. van der Laan\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2017 Wladimir J. van der Laan\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -11,7 +11,7 @@\n     nodes_main.txt\n     nodes_test.txt\n \n-These files must consist of lines in the format \n+These files must consist of lines in the format\n \n     <ip>\n     <ip>:<port>\n@@ -31,10 +31,11 @@\n \n These should be pasted into `src/chainparamsseeds.h`.\n '''\n-from __future__ import print_function, division\n+\n from base64 import b32decode\n from binascii import a2b_hex\n-import sys, os\n+import sys\n+import os\n import re\n \n # ipv4 in ipv6 prefix\n@@ -46,7 +47,7 @@ def name_to_ipv6(addr):\n     if len(addr)>6 and addr.endswith('.onion'):\n         vchAddr = b32decode(addr[0:-6], True)\n         if len(vchAddr) != 16-len(pchOnionCat):\n-            raise ValueError('Invalid onion %s' % s)\n+            raise ValueError('Invalid onion %s' % vchAddr)\n         return pchOnionCat + vchAddr\n     elif '.' in addr: # IPv4\n         return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n@@ -73,7 +74,7 @@ def name_to_ipv6(addr):\n         raise ValueError('Could not parse address %s' % addr)\n \n def parse_spec(s, defaultport):\n-    match = re.match('\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n+    match = re.match(r'\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n     if match: # ipv6\n         host = match.group(1)\n         port = match.group(2)\n@@ -114,7 +115,7 @@ def process_nodes(g, f, structname, defaultport):\n def main():\n     if len(sys.argv)<2:\n         print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n     g = sys.stdout\n     indir = sys.argv[1]\n     g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n@@ -124,15 +125,14 @@ def main():\n     g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n     g.write(' *\\n')\n     g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n-    g.write(' * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\\n')\n+    g.write(' * IPv4 as well as onion addresses are wrapped inside an IPv6 address accordingly.\\n')\n     g.write(' */\\n')\n-    with open(os.path.join(indir,'nodes_main.txt'),'r') as f:\n+    with open(os.path.join(indir,'nodes_main.txt'), 'r', encoding=\"utf8\") as f:\n         process_nodes(g, f, 'pnSeed6_main', 8333)\n     g.write('\\n')\n-    with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n+    with open(os.path.join(indir,'nodes_test.txt'), 'r', encoding=\"utf8\") as f:\n         process_nodes(g, f, 'pnSeed6_test', 18333)\n     g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-            \n+\n if __name__ == '__main__':\n     main()\n-"
      },
      {
        "sha": "d516ca10c108ba52357c2eb376df84e6bc503e01",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 101,
        "deletions": 44,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,8 +1,16 @@\n-#!/usr/bin/env python\n+#!/usr/bin/env python3\n+# Copyright (c) 2013-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n # Generate seeds.txt from Pieter's DNS seeder\n #\n \n+import re\n+import sys\n+import dns.resolver\n+import collections\n+\n NSEEDS=512\n \n MAX_SEEDS_PER_ASN=2\n@@ -11,23 +19,22 @@\n \n # These are hosts that have been observed to be behaving strangely (e.g.\n # aggressively connecting to every node).\n-SUSPICIOUS_HOSTS = set([\n-    \"130.211.129.106\", \"178.63.107.226\",\n-    \"83.81.130.26\", \"88.198.17.7\", \"148.251.238.178\", \"176.9.46.6\",\n-    \"54.173.72.127\", \"54.174.10.182\", \"54.183.64.54\", \"54.194.231.211\",\n-    \"54.66.214.167\", \"54.66.220.137\", \"54.67.33.14\", \"54.77.251.214\",\n-    \"54.94.195.96\", \"54.94.200.247\"\n-])\n+with open(\"suspicious_hosts.txt\", mode=\"r\", encoding=\"utf-8\") as f:\n+    SUSPICIOUS_HOSTS = {s.strip() for s in f if s.strip()}\n \n-import re\n-import sys\n-import dns.resolver\n-import collections\n \n PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(r\"^(\\/Satoshi:0\\.8\\.6\\/|\\/Satoshi:0\\.9\\.(2|3|4|5)\\/|\\/Satoshi:0\\.10\\.\\d{1,2}\\/|\\/Satoshi:0\\.11\\.\\d{1,2}\\/)$\")\n+PATTERN_AGENT = re.compile(\n+    r\"^/Satoshi:(\"\n+    r\"0.14.(0|1|2|3|99)|\"\n+    r\"0.15.(0|1|2|99)|\"\n+    r\"0.16.(0|1|2|3|99)|\"\n+    r\"0.17.(0|0.1|1|2|99)|\"\n+    r\"0.18.(0|1|99)|\"\n+    r\"0.19.99\"\n+    r\")\")\n \n def parseline(line):\n     sline = line.split()\n@@ -96,74 +103,124 @@ def parseline(line):\n         'sortkey': sortkey,\n     }\n \n+def dedup(ips):\n+    '''deduplicate by address,port'''\n+    d = {}\n+    for ip in ips:\n+        d[ip['ip'],ip['port']] = ip\n+    return list(d.values())\n+\n def filtermultiport(ips):\n     '''Filter out hosts with more nodes per IP'''\n     hist = collections.defaultdict(list)\n     for ip in ips:\n         hist[ip['sortkey']].append(ip)\n-    return [value[0] for (key,value) in hist.items() if len(value)==1]\n+    return [value[0] for (key,value) in list(hist.items()) if len(value)==1]\n+\n+def lookup_asn(net, ip):\n+    '''\n+    Look up the asn for an IP (4 or 6) address by querying cymru.com, or None\n+    if it could not be found.\n+    '''\n+    try:\n+        if net == 'ipv4':\n+            ipaddr = ip\n+            prefix = '.origin'\n+        else:                  # http://www.team-cymru.com/IP-ASN-mapping.html\n+            res = str()                         # 2001:4860:b002:23::68\n+            for nb in ip.split(':')[:4]:  # pick the first 4 nibbles\n+                for c in nb.zfill(4):           # right padded with '0'\n+                    res += c + '.'              # 2001 4860 b002 0023\n+            ipaddr = res.rstrip('.')            # 2.0.0.1.4.8.6.0.b.0.0.2.0.0.2.3\n+            prefix = '.origin6'\n+\n+        asn = int([x.to_text() for x in dns.resolver.query('.'.join(\n+                   reversed(ipaddr.split('.'))) + prefix + '.asn.cymru.com',\n+                   'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n+        return asn\n+    except Exception:\n+        sys.stderr.write('ERR: Could not resolve ASN for \"' + ip + '\"\\n')\n+        return None\n \n # Based on Greg Maxwell's seed_filter.py\n-def filterbyasn(ips, max_per_asn, max_total):\n+def filterbyasn(ips, max_per_asn, max_per_net):\n     # Sift out ips by type\n-    ips_ipv4 = [ip for ip in ips if ip['net'] == 'ipv4']\n-    ips_ipv6 = [ip for ip in ips if ip['net'] == 'ipv6']\n+    ips_ipv46 = [ip for ip in ips if ip['net'] in ['ipv4', 'ipv6']]\n     ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n \n-    # Filter IPv4 by ASN\n+    # Filter IPv46 by ASN, and limit to max_per_net per network\n     result = []\n-    asn_count = {}\n-    for ip in ips_ipv4:\n-        if len(result) == max_total:\n-            break\n-        try:\n-            asn = int([x.to_text() for x in dns.resolver.query('.'.join(reversed(ip['ip'].split('.'))) + '.origin.asn.cymru.com', 'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n-            if asn not in asn_count:\n-                asn_count[asn] = 0\n-            if asn_count[asn] == max_per_asn:\n-                continue\n-            asn_count[asn] += 1\n-            result.append(ip)\n-        except:\n-            sys.stderr.write('ERR: Could not resolve ASN for \"' + ip['ip'] + '\"\\n')\n-\n-    # TODO: filter IPv6 by ASN\n-\n-    # Add back non-IPv4\n-    result.extend(ips_ipv6)\n-    result.extend(ips_onion)\n+    net_count = collections.defaultdict(int)\n+    asn_count = collections.defaultdict(int)\n+    for ip in ips_ipv46:\n+        if net_count[ip['net']] == max_per_net:\n+            continue\n+        asn = lookup_asn(ip['net'], ip['ip'])\n+        if asn is None or asn_count[asn] == max_per_asn:\n+            continue\n+        asn_count[asn] += 1\n+        net_count[ip['net']] += 1\n+        result.append(ip)\n+\n+    # Add back Onions (up to max_per_net)\n+    result.extend(ips_onion[0:max_per_net])\n     return result\n \n+def ip_stats(ips):\n+    hist = collections.defaultdict(int)\n+    for ip in ips:\n+        if ip is not None:\n+            hist[ip['net']] += 1\n+\n+    return '%6d %6d %6d' % (hist['ipv4'], hist['ipv6'], hist['onion'])\n+\n def main():\n     lines = sys.stdin.readlines()\n     ips = [parseline(line) for line in lines]\n \n-    # Skip entries with valid address.\n+    print('\\x1b[7m  IPv4   IPv6  Onion Pass                                               \\x1b[0m', file=sys.stderr)\n+    print('%s Initial' % (ip_stats(ips)), file=sys.stderr)\n+    # Skip entries with invalid address.\n     ips = [ip for ip in ips if ip is not None]\n+    print('%s Skip entries with invalid address' % (ip_stats(ips)), file=sys.stderr)\n+    # Skip duplicates (in case multiple seeds files were concatenated)\n+    ips = dedup(ips)\n+    print('%s After removing duplicates' % (ip_stats(ips)), file=sys.stderr)\n     # Skip entries from suspicious hosts.\n     ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n+    print('%s Skip entries from suspicious hosts' % (ip_stats(ips)), file=sys.stderr)\n     # Enforce minimal number of blocks.\n     ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n+    print('%s Enforce minimal number of blocks' % (ip_stats(ips)), file=sys.stderr)\n     # Require service bit 1.\n     ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n-    # Require at least 50% 30-day uptime.\n-    ips = [ip for ip in ips if ip['uptime'] > 50]\n+    print('%s Require service bit 1' % (ip_stats(ips)), file=sys.stderr)\n+    # Require at least 50% 30-day uptime for clearnet, 10% for onion.\n+    req_uptime = {\n+        'ipv4': 50,\n+        'ipv6': 50,\n+        'onion': 10,\n+    }\n+    ips = [ip for ip in ips if ip['uptime'] > req_uptime[ip['net']]]\n+    print('%s Require minimum uptime' % (ip_stats(ips)), file=sys.stderr)\n     # Require a known and recent user agent.\n     ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n+    print('%s Require a known and recent user agent' % (ip_stats(ips)), file=sys.stderr)\n     # Sort by availability (and use last success as tie breaker)\n     ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n     # Filter out hosts with multiple bitcoin ports, these are likely abusive\n     ips = filtermultiport(ips)\n+    print('%s Filter out hosts with multiple bitcoin ports' % (ip_stats(ips)), file=sys.stderr)\n     # Look up ASNs and limit results, both per ASN and globally.\n     ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n+    print('%s Look up ASNs and limit results per ASN and per net' % (ip_stats(ips)), file=sys.stderr)\n     # Sort the results by IP address (for deterministic output).\n     ips.sort(key=lambda x: (x['net'], x['sortkey']))\n-\n     for ip in ips:\n         if ip['net'] == 'ipv6':\n-            print '[%s]:%i' % (ip['ip'], ip['port'])\n+            print('[%s]:%i' % (ip['ip'], ip['port']))\n         else:\n-            print '%s:%i' % (ip['ip'], ip['port'])\n+            print('%s:%i' % (ip['ip'], ip['port']))\n \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "89eb1d1638f667e19a630ae0739a024a8b391615",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 743,
        "deletions": 928,
        "changes": 1671,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,937 +1,752 @@\n-5.2.145.201:8333\n-5.22.142.214:8333\n-5.53.172.197:8333\n-5.189.161.164:8333\n-5.230.140.166:8333\n-5.231.3.130:8333\n-5.255.80.103:8333\n-14.202.230.49:8333\n-18.85.11.130:8333\n-23.91.97.25:8333\n-23.94.100.122:8333\n-23.95.99.132:8333\n-24.115.8.206:8333\n-24.127.128.191:8333\n-24.154.178.25:8333\n-24.207.103.43:8333\n-24.207.104.105:8333\n-24.210.230.150:8333\n-24.224.18.84:8333\n-24.246.168.106:8333\n-27.254.64.47:8333\n-31.6.71.123:8333\n-31.6.71.124:8333\n-31.14.134.13:8333\n-31.30.36.220:8333\n-31.164.6.104:8333\n-31.170.106.203:8333\n-31.185.134.201:8333\n-31.204.128.99:8333\n-31.204.128.219:8333\n-37.1.219.88:8333\n-37.97.132.109:8333\n-37.120.160.55:8333\n-37.120.169.123:8333\n-37.139.32.46:8333\n-37.221.163.218:8333\n-38.130.192.72:8333\n-41.75.96.80:8333\n-45.3.0.49:8333\n-45.33.72.185:8333\n-45.33.96.129:8333\n-45.56.4.63:8333\n-45.79.0.127:8333\n-45.79.80.102:8333\n-45.79.97.30:8333\n-45.79.132.219:8333\n-46.21.97.135:8333\n-46.28.205.67:8333\n-46.28.206.188:8333\n-46.29.20.209:8333\n-46.50.234.179:8333\n-46.101.160.168:8333\n-46.166.161.35:8333\n-46.166.161.103:8333\n-46.182.132.100:8333\n-46.218.227.92:8333\n-46.226.109.20:8333\n-46.227.66.132:8333\n-46.227.66.138:8333\n-46.229.165.154:8333\n-46.229.165.155:8333\n-46.229.238.187:8333\n-46.234.104.48:8333\n-46.239.107.74:8333\n-46.244.0.138:8333\n-46.254.72.195:8333\n-50.5.13.44:8333\n-50.7.37.114:8333\n-50.30.37.103:8333\n-50.39.105.60:8333\n-50.106.40.231:8333\n-52.29.0.37:8333\n-52.76.192.246:8333\n-54.152.192.179:8333\n-54.169.64.174:8333\n-54.175.160.22:8333\n-54.199.128.0:8333\n-58.96.171.129:8333\n-58.161.238.57:8333\n-60.251.195.221:8333\n-61.35.225.19:8333\n-62.43.130.178:8333\n-62.65.39.12:8333\n+2.24.141.73:8333\n+5.8.18.29:8333\n+5.43.228.99:8333\n+5.145.10.122:8333\n+5.166.35.47:8333\n+5.188.187.130:8333\n+5.199.133.193:8333\n+5.206.226.216:8333\n+5.206.226.231:8333\n+13.92.254.226:8335\n+13.125.188.128:8333\n+18.228.144.20:8333\n+23.175.0.200:8333\n+23.226.90.172:8333\n+23.233.107.28:8333\n+23.245.24.154:8333\n+24.121.16.35:8333\n+24.150.94.79:8333\n+24.188.200.170:8333\n+24.246.31.205:8333\n+27.102.102.157:8333\n+31.6.98.94:8333\n+31.20.226.115:8333\n+31.21.182.79:8333\n+31.43.140.190:8333\n+31.132.135.134:8333\n+31.173.48.61:8333\n+32.214.183.114:8333\n+34.231.234.150:8333\n+35.209.114.159:8333\n+35.213.18.190:8333\n+37.97.228.224:8333\n+37.116.95.41:8333\n+37.123.132.33:8333\n+37.133.140.169:8334\n+37.134.165.205:8333\n+37.191.253.125:8333\n+39.108.68.237:7781\n+40.78.19.149:8333\n+42.60.217.183:8333\n+43.229.132.102:8333\n+45.58.126.138:8333\n+46.28.132.34:8333\n+46.166.162.45:20001\n+46.166.176.137:8333\n+46.227.68.104:8333\n+46.227.68.105:8333\n+47.74.32.190:8885\n+47.89.19.134:30303\n+47.97.117.250:8333\n+50.2.13.166:8333\n+50.5.163.139:8333\n+50.34.65.217:8333\n+50.66.209.54:8333\n+50.67.179.36:8333\n+51.15.166.138:8333\n+51.15.239.164:8333\n+51.154.60.34:8333\n+51.154.136.60:8333\n+52.116.159.247:8333\n+54.167.232.37:8333\n+58.22.123.120:8333\n+58.158.0.86:8333\n+62.45.159.66:8333\n+62.75.191.166:8333\n+62.75.210.81:8333\n+62.97.244.242:8333\n 62.107.200.30:8333\n-62.133.194.2:8333\n-62.181.238.186:8333\n-62.183.22.50:8333\n-62.210.85.120:8333\n-62.210.162.89:8333\n-62.238.34.125:8333\n-64.25.171.73:8333\n-64.27.166.30:8333\n-64.53.137.101:8333\n-64.71.72.44:8333\n-64.83.225.146:8333\n-64.121.3.163:8333\n-64.203.102.86:8333\n-65.94.131.59:8333\n-65.188.136.233:8333\n-66.11.162.218:8333\n-66.23.228.133:8333\n-66.90.137.89:8333\n-66.114.33.49:8333\n-66.150.105.77:8333\n-66.172.10.4:8333\n-66.194.38.250:8333\n-66.194.38.253:8333\n-66.194.38.254:8333\n-66.231.97.172:8333\n-66.240.237.155:8333\n-67.159.13.34:8333\n-67.205.74.206:8333\n-67.221.193.55:8333\n-67.227.72.17:8333\n-68.65.120.53:8333\n-68.65.205.226:9000\n-68.144.4.34:8333\n-69.39.49.199:8333\n-69.50.171.205:8333\n-69.65.41.21:8333\n-69.113.98.61:8333\n-69.119.97.39:8333\n-69.146.70.124:8333\n-69.193.71.2:8333\n-70.46.10.237:8333\n-70.80.200.187:8333\n-70.185.97.117:8333\n-71.254.160.25:8333\n-72.28.203.5:8333\n-72.52.130.110:8333\n-72.83.194.122:8333\n-72.128.32.167:8333\n-72.179.136.80:8333\n-72.235.38.70:8333\n-74.50.44.193:8333\n-74.72.60.83:8333\n-74.80.234.116:8333\n-74.207.233.193:8333\n-75.112.233.128:8333\n-75.118.166.197:8333\n-75.140.0.241:8333\n-75.159.240.66:8333\n-75.174.5.26:8333\n-76.72.160.252:8333\n-76.72.160.254:8333\n-76.74.170.112:8333\n-76.79.201.54:8333\n-76.175.166.164:8333\n-76.179.105.27:8333\n-77.68.37.200:8333\n-77.234.49.196:8333\n-77.247.229.93:8333\n-78.24.72.78:8333\n-78.47.32.147:8333\n-78.84.100.95:8333\n-78.121.69.23:8333\n-78.129.167.5:8333\n-78.193.96.155:8333\n-79.19.37.179:8333\n-79.132.230.144:8333\n-79.133.43.63:8333\n-79.134.201.66:8333\n-79.169.35.235:8333\n-80.57.227.14:8333\n-80.64.65.87:8333\n-80.86.92.70:8333\n-80.100.203.151:8333\n-80.101.32.121:8333\n-80.161.178.73:8333\n-80.240.129.170:8333\n-81.7.11.50:8333\n-81.7.11.55:8333\n-81.17.17.40:9333\n-81.30.39.83:8333\n-81.90.36.7:9444\n-81.136.224.77:8333\n-81.162.231.211:8333\n-81.184.0.143:8333\n-81.198.128.86:8333\n-82.11.33.229:8333\n-82.79.128.134:8333\n-82.118.233.111:8333\n-82.135.139.30:8333\n-82.199.102.10:8333\n-82.221.106.17:8333\n-82.221.108.21:8333\n-82.221.108.27:8333\n-83.137.41.3:8333\n-83.142.197.168:8333\n-83.143.130.19:8333\n-83.150.9.196:8333\n-83.183.17.191:8333\n-83.227.173.83:8333\n-83.230.5.15:8333\n-83.233.105.151:443\n-83.246.75.8:8333\n-83.250.133.158:8333\n-83.255.66.118:8334\n-84.24.69.59:8333\n-84.42.193.6:8333\n-84.45.98.87:8333\n-84.54.128.11:8333\n-84.212.200.24:8333\n-84.215.198.109:8333\n-84.230.4.177:8333\n-85.95.228.83:8333\n-85.95.228.123:8333\n-85.114.128.134:8333\n-85.214.66.168:8333\n-85.214.147.162:8333\n-85.243.168.4:8333\n-86.1.0.18:8333\n-87.79.77.106:8333\n-87.91.156.110:8333\n-87.236.196.222:8333\n-88.85.75.152:8333\n-88.87.1.230:8333\n-88.87.92.102:8333\n-88.89.69.202:8333\n-88.97.72.229:8333\n-88.164.117.99:8333\n-88.198.32.131:8333\n-88.202.230.87:8333\n-88.214.193.154:8343\n-88.214.194.226:8343\n-89.10.155.88:8333\n-89.46.101.44:8333\n-89.163.224.212:8333\n-89.174.248.20:8333\n-89.202.231.198:8333\n-89.212.75.6:8333\n-90.149.38.172:8333\n-90.169.106.139:8333\n-91.64.101.150:8333\n-91.65.196.179:8333\n-91.121.80.17:8333\n-91.126.77.77:8333\n-91.145.76.156:8333\n-91.152.150.35:8333\n-91.192.137.17:8333\n-91.196.170.110:8333\n-91.197.44.133:8333\n-91.207.68.144:8333\n-91.210.105.28:8333\n-91.211.102.101:8333\n-91.211.106.34:8333\n-91.214.200.205:8333\n-91.220.43.146:8333\n-91.222.71.89:8333\n-91.224.140.242:8333\n-91.229.76.14:8333\n-92.27.7.209:8333\n-92.51.167.88:8333\n-92.247.229.163:8333\n-93.84.114.106:8333\n-93.113.36.172:8333\n-93.188.224.253:8333\n-94.75.239.69:8333\n-94.190.227.112:8333\n-94.214.2.74:8333\n-94.224.162.65:8333\n-94.236.198.253:8333\n-94.242.229.158:8333\n-95.84.138.99:8333\n-95.95.168.87:8333\n-95.110.234.93:8333\n-95.130.9.200:8333\n-95.165.168.168:8333\n-95.170.235.254:8333\n-95.211.130.154:8333\n-96.46.68.104:8333\n-96.127.202.148:8333\n-97.76.171.35:8333\n-98.160.160.67:8333\n-99.126.197.187:8333\n-99.198.173.1:8333\n-101.100.174.138:8333\n-101.164.201.208:8333\n-103.224.165.48:8333\n-104.128.225.223:8333\n+62.138.0.217:8333\n+62.213.214.207:8333\n+64.98.18.21:8333\n+65.79.145.209:8333\n+66.151.242.154:8335\n+66.206.13.51:8333\n+66.248.206.86:8333\n+67.40.207.169:8333\n+67.149.252.79:8333\n+67.193.189.42:8333\n+67.210.228.203:8333\n+67.220.22.78:8333\n+67.222.131.151:8333\n+68.168.122.2:8333\n+68.202.128.19:8333\n+68.206.21.144:8333\n+69.30.215.42:8333\n+69.59.18.22:8333\n+69.70.170.178:8333\n+69.132.150.43:8333\n+69.145.122.160:8333\n+70.26.149.104:8333\n+70.51.142.43:8333\n+70.63.170.86:8333\n+71.57.73.173:8333\n+71.237.255.140:8333\n+72.24.235.10:8333\n+72.95.104.94:8333\n+72.231.187.25:8333\n+72.253.239.246:8333\n+74.78.140.178:8333\n+74.83.234.97:8333\n+74.84.128.158:9333\n+74.197.236.58:8333\n+74.208.94.172:8333\n+74.220.255.190:8333\n+75.101.96.6:8333\n+75.157.77.34:8333\n+76.93.183.209:8333\n+76.174.129.203:8333\n+77.53.158.137:8333\n+77.85.204.149:8333\n+77.120.119.27:8433\n+77.134.172.81:8333\n+78.42.12.201:8333\n+78.58.140.102:8333\n+78.108.108.162:8333\n+78.119.180.62:8333\n+78.128.62.52:8333\n+78.130.148.218:8885\n+78.130.161.76:8333\n+78.143.214.223:8333\n+79.77.33.128:8333\n+79.175.125.210:8333\n+79.175.154.228:8333\n+80.79.114.34:8333\n+80.89.203.172:8001\n+80.100.128.128:8333\n+80.122.43.78:8333\n+80.151.124.127:8333\n+80.167.79.174:8333\n+80.211.191.11:8333\n+80.229.151.187:8333\n+81.4.102.69:8333\n+81.4.102.91:8333\n+81.6.34.154:8333\n+81.7.16.182:8333\n+81.7.17.202:8333\n+81.25.71.68:8444\n+81.235.185.150:8333\n+82.23.106.56:8333\n+82.29.58.109:8333\n+82.117.166.77:8333\n+82.145.41.24:8333\n+82.146.153.130:8333\n+82.149.97.25:17567\n+82.150.180.30:8333\n+82.177.176.24:8333\n+82.194.153.233:8333\n+82.197.215.125:8333\n+82.197.218.97:8333\n+82.199.102.133:8333\n+82.200.205.30:8333\n+82.221.111.136:8333\n+83.32.70.197:8333\n+83.58.134.138:8333\n+83.85.131.168:8333\n+83.163.211.75:8333\n+83.208.254.182:8333\n+83.243.191.199:8333\n+84.46.116.71:8333\n+84.52.255.147:8333\n+84.56.105.17:8333\n+84.59.243.22:8333\n+84.197.198.167:8333\n+84.214.74.65:8333\n+84.217.160.164:8333\n+84.227.14.62:8333\n+84.246.200.122:8333\n+85.14.79.26:8333\n+85.119.83.25:8333\n+85.190.0.5:8333\n+85.192.173.14:8333\n+85.214.80.203:8333\n+85.214.204.63:8333\n+85.229.166.15:8333\n+85.233.38.5:8333\n+86.76.7.132:8333\n+86.80.62.194:8333\n+86.107.204.50:8333\n+86.139.248.102:8333\n+87.79.68.86:8333\n+87.79.94.221:8333\n+87.99.79.123:8333\n+87.104.127.153:8333\n+87.117.19.226:8333\n+87.120.8.5:20008\n+87.224.163.66:8333\n+87.233.181.146:8333\n+87.249.207.89:8333\n+88.86.116.140:8333\n+88.86.116.141:8333\n+88.86.243.241:8333\n+88.87.93.52:1691\n+88.98.198.130:8333\n+88.99.109.66:8333\n+88.119.128.36:8333\n+88.129.253.46:8333\n+88.212.44.33:8333\n+89.23.35.9:8333\n+89.47.217.222:8333\n+89.106.199.38:8333\n+89.142.75.60:8333\n+89.179.126.97:8333\n+89.212.9.96:8333\n+89.218.198.46:8333\n+89.230.96.42:8333\n+90.125.157.153:8333\n+90.146.97.100:8333\n+90.182.165.18:8333\n+90.227.130.6:8333\n+91.92.128.32:8333\n+91.123.82.15:8333\n+91.135.0.187:8333\n+91.152.121.138:8333\n+91.178.131.108:8333\n+91.185.198.234:8333\n+91.193.237.88:8333\n+91.202.133.75:8885\n+91.204.99.178:8333\n+91.204.149.5:8333\n+91.216.149.28:8333\n+91.219.25.232:8333\n+91.222.128.59:8333\n+92.62.231.253:8333\n+92.63.192.206:8333\n+92.63.197.243:8333\n+92.63.197.245:8333\n+92.119.112.59:8333\n+92.243.244.101:8333\n+92.255.176.109:8333\n+93.38.119.141:8333\n+93.50.177.66:8333\n+93.79.204.222:10333\n+93.115.28.30:11100\n+93.115.89.76:8333\n+93.115.240.26:8333\n+93.123.180.164:8333\n+93.126.94.192:8333\n+93.170.128.106:8333\n+93.185.103.70:8333\n+93.189.145.169:8333\n+93.190.142.127:8333\n+93.228.3.234:8333\n+94.19.128.204:8333\n+94.26.49.71:8333\n+94.63.65.127:8333\n+94.72.143.28:8333\n+94.104.217.250:8333\n+94.209.115.52:8333\n+94.237.72.166:8333\n+94.242.255.31:8333\n+95.24.48.84:15426\n+95.69.249.63:8333\n+95.79.35.133:8333\n+95.87.226.56:8333\n+95.91.80.140:8333\n+95.102.60.168:8333\n+95.154.90.99:8333\n+95.156.252.34:8333\n+95.165.175.75:8333\n+95.174.125.24:18333\n+95.183.54.101:12853\n+95.211.189.3:8333\n+95.213.143.13:8333\n+95.213.184.109:778\n+96.9.80.109:8333\n+96.47.122.171:8333\n+97.81.244.191:8333\n+97.99.13.150:8333\n+97.104.206.3:8333\n+98.116.105.49:8333\n+99.224.131.4:8333\n+101.92.39.116:8333\n+101.100.163.118:8327\n+101.100.174.24:8333\n+101.251.68.146:12337\n+102.132.229.253:8333\n+103.14.244.190:8333\n+103.16.128.63:8333\n+103.59.144.135:8333\n+103.59.144.238:8333\n+103.99.168.100:8333\n+103.99.168.130:8333\n+103.100.220.46:8333\n+103.105.56.82:8333\n+103.106.208.207:8333\n+103.106.211.107:8333\n+103.108.228.51:8333\n+104.11.144.71:8333\n 104.128.228.252:8333\n-104.131.192.94:8333\n-104.155.45.201:8334\n-104.194.28.195:8663\n-104.211.1.27:8333\n-104.221.38.177:8333\n-104.236.9.79:8333\n-104.236.129.178:8333\n-104.236.186.249:8333\n-104.236.194.15:8333\n-104.238.128.214:8333\n-104.238.130.182:8333\n-106.38.234.84:8333\n-106.185.36.204:8333\n-106.185.38.67:8333\n-107.6.4.145:8333\n-107.150.2.6:8333\n-107.150.40.234:8333\n-107.170.13.184:8333\n-107.181.250.216:8333\n-107.191.101.111:8333\n-107.191.106.115:8333\n-108.59.12.163:8333\n-108.161.129.247:8333\n-109.193.160.140:8333\n-109.197.13.54:8333\n-109.230.7.248:8333\n-109.234.106.191:8333\n-109.236.137.80:8333\n-109.251.161.121:8333\n-112.65.231.226:8333\n-115.70.166.57:8333\n-115.159.42.80:8333\n-117.18.73.34:8333\n-118.67.201.40:8333\n-118.100.86.246:8333\n-118.110.104.152:8333\n-119.224.64.141:8333\n-120.55.193.136:8333\n-122.106.169.178:8333\n-123.203.174.15:8333\n-123.255.232.94:8333\n-124.148.165.165:8333\n-124.232.141.31:8333\n-128.30.92.69:8333\n-128.39.141.182:8333\n-128.84.167.20:8333\n-128.111.73.10:8333\n-128.127.38.195:8333\n-128.140.224.162:8333\n-128.199.101.104:8333\n-128.233.224.35:8333\n-128.253.3.193:20020\n-130.180.228.138:8333\n-130.185.144.213:8333\n-130.255.73.207:8333\n-133.218.233.11:8333\n-134.249.128.23:8333\n-136.159.234.234:8333\n-137.116.160.176:8333\n-139.162.2.145:8333\n-139.162.23.117:8333\n-141.134.69.253:8333\n-141.255.162.215:8333\n-144.122.163.187:8333\n-145.131.3.54:8333\n-145.255.4.94:8333\n-146.0.32.101:8337\n-147.83.72.91:8333\n-148.103.28.68:8333\n-149.5.32.102:8333\n-149.210.164.195:8333\n-150.101.163.241:8333\n-151.236.11.189:8333\n-152.3.136.56:8333\n-154.20.208.25:8333\n-158.181.104.149:8333\n-159.253.96.226:8333\n-160.36.130.180:8333\n-162.209.1.233:8333\n-162.209.4.125:8333\n-162.209.106.123:8333\n-162.210.198.184:8333\n-162.248.99.164:53011\n-162.248.102.117:8333\n-162.251.108.53:8333\n-163.44.2.48:8333\n-163.158.36.17:8333\n-166.230.71.67:8333\n-167.160.36.62:8333\n-167.160.169.92:8333\n-168.93.129.220:8333\n-169.55.99.84:8333\n-169.228.66.43:8333\n-172.9.169.242:8333\n-173.32.11.194:8333\n-173.230.228.136:8333\n-173.246.107.34:8333\n-173.254.235.34:8333\n-174.0.128.222:8333\n-174.25.130.148:8333\n-174.50.64.101:8333\n-175.140.232.141:8333\n-176.36.37.62:8333\n-176.46.9.96:8333\n-176.124.110.27:8333\n-177.39.16.102:8333\n-178.17.173.2:8333\n-178.62.5.248:8333\n-178.62.70.16:8333\n-178.62.203.185:8333\n-178.79.160.118:8333\n-178.169.206.244:8333\n-178.193.234.62:8333\n-178.199.96.108:8333\n-178.254.18.96:8333\n-178.254.34.161:8333\n-178.255.41.123:8333\n-180.210.34.58:9801\n-182.92.226.212:8333\n-182.171.246.142:8333\n-184.23.8.9:8333\n-184.58.162.35:8333\n-184.154.9.170:8333\n-185.8.238.165:8333\n-185.24.97.11:8333\n-185.31.137.139:8333\n-185.38.44.64:8333\n-185.53.128.180:8333\n-185.53.129.244:8333\n-185.77.129.119:8333\n-185.77.129.156:8333\n-185.82.203.92:8333\n-188.20.97.18:8333\n-188.126.8.14:8333\n-188.138.33.239:8333\n-188.155.136.70:8333\n-188.166.229.112:8333\n-188.182.108.129:8333\n-188.226.225.174:8010\n-188.242.171.8:8333\n-188.243.4.139:8333\n-190.10.9.234:8333\n-190.10.10.147:8333\n-190.81.160.184:8333\n-190.85.201.37:8333\n-192.34.227.230:8333\n-192.77.189.200:8333\n-192.124.224.7:8333\n-192.146.137.1:8333\n-192.203.228.71:8333\n-192.206.202.20:8333\n-193.0.109.3:8333\n-193.41.229.130:8333\n-193.41.229.156:8333\n-193.49.43.219:8333\n-193.147.71.120:8333\n-193.179.65.233:8333\n-193.183.99.46:8333\n-193.192.37.135:8333\n-193.234.224.195:8333\n-194.58.108.213:8333\n-194.187.96.2:8333\n-194.255.31.59:8333\n-195.36.6.101:8333\n-195.58.238.243:8333\n-195.197.175.190:8333\n-195.239.1.66:8333\n-198.48.196.230:8333\n-198.50.192.160:8333\n-198.57.210.27:8333\n-198.84.195.179:8333\n-198.167.140.8:8333\n-198.204.224.106:8333\n-199.127.226.245:8333\n-199.201.110.8:8333\n-199.233.234.90:8333\n-200.116.98.185:8333\n-202.60.70.18:8333\n-203.151.140.14:8333\n-204.112.203.52:8333\n-205.200.247.149:8333\n-207.226.141.253:8333\n-207.255.42.202:8333\n-208.53.164.19:8333\n-208.66.68.127:8333\n-208.66.68.130:8333\n-208.71.171.232:8341\n-208.76.200.200:8333\n-208.82.98.189:8333\n-208.85.193.31:8333\n-208.111.48.41:8333\n-208.111.48.45:8333\n-209.34.232.72:8333\n-209.81.9.223:8333\n-209.90.224.2:8333\n-209.90.224.4:8333\n-209.126.98.174:8333\n-209.136.72.69:8333\n-209.195.4.74:8333\n-209.197.13.62:8333\n-211.72.227.8:8333\n-212.51.144.42:8333\n-212.71.233.127:8333\n-212.126.14.122:8333\n-212.159.44.50:8333\n-213.5.36.58:8333\n-213.57.33.10:8333\n-213.66.205.194:8333\n-213.136.73.125:8333\n-213.155.3.216:8333\n-213.155.7.24:8333\n-213.167.17.6:8333\n-213.223.138.13:8333\n-216.15.78.182:8333\n+104.152.204.204:8333\n+104.153.30.236:8333\n+104.155.233.13:8333\n+104.198.126.116:8333\n+104.245.125.251:8333\n+106.12.57.72:8333\n+106.72.36.96:46289\n+106.163.158.127:8333\n+107.150.41.179:8333\n+107.191.116.103:8333\n+108.15.243.207:8333\n+108.58.252.82:8333\n+108.160.202.208:8333\n+108.213.205.103:8333\n+109.72.83.127:8333\n+109.99.63.159:8333\n+109.104.8.48:8333\n+109.183.251.77:8333\n+109.198.191.22:8333\n+109.236.90.122:58333\n+109.238.81.82:8333\n+109.248.206.13:8333\n+109.252.133.57:8333\n+111.90.145.57:8333\n+111.90.159.184:50001\n+113.35.179.149:8333\n+113.52.135.125:8333\n+115.47.141.250:8885\n+115.70.110.4:8333\n+116.58.171.67:8333\n+118.1.96.81:8333\n+118.103.126.140:28333\n+119.29.54.159:8333\n+119.207.78.152:8333\n+121.211.151.99:8333\n+122.112.148.153:8339\n+124.160.119.93:8333\n+128.197.128.222:8333\n+129.13.189.212:8333\n+129.97.243.18:8333\n+130.185.77.105:8333\n+130.255.187.86:8333\n+131.114.10.236:8333\n+131.188.40.34:8333\n+132.249.239.163:8333\n+133.18.1.114:8333\n+134.19.186.195:8333\n+136.36.123.20:8333\n+136.56.42.119:8333\n+137.226.34.46:8333\n+138.68.20.137:8333\n+141.101.8.36:8333\n+145.239.9.3:8333\n+145.249.106.103:8333\n+146.255.227.182:4033\n+147.192.18.175:8333\n+147.253.54.26:8333\n+148.66.58.58:8333\n+148.70.82.85:8333\n+149.90.34.119:8333\n+150.143.231.72:8333\n+153.92.127.216:8333\n+153.120.115.15:8333\n+153.124.187.220:8333\n+154.209.1.138:8333\n+154.211.159.200:8333\n+155.4.52.45:8333\n+156.19.19.90:8333\n+157.7.211.107:8333\n+159.100.248.234:8333\n+159.138.45.220:22235\n+160.16.0.30:8333\n+162.154.207.147:8333\n+163.158.243.230:8333\n+166.62.82.103:32771\n+166.62.100.55:8333\n+167.179.136.11:8333\n+168.235.74.110:8333\n+169.55.182.185:8333\n+171.33.177.9:8333\n+172.99.120.113:8333\n+172.105.112.233:8333\n+172.110.30.81:8333\n+173.21.218.95:8333\n+173.23.103.30:8000\n+173.51.177.2:8333\n+173.89.28.137:8333\n+173.208.128.10:8333\n+173.249.11.207:18333\n+174.65.135.60:8333\n+176.38.7.43:8333\n+176.92.150.12:8333\n+176.99.2.207:8333\n+176.126.167.10:8333\n+176.212.185.153:8333\n+176.223.136.171:8333\n+177.52.173.62:8333\n+178.33.136.162:8333\n+178.128.39.110:8333\n+178.143.50.8:8333\n+178.198.60.155:8333\n+178.236.137.63:8333\n+179.48.251.41:8333\n+180.150.52.37:8333\n+183.230.93.139:8333\n+184.80.255.250:8333\n+184.95.58.166:8336\n+184.180.129.98:8333\n+185.19.28.195:8333\n+185.25.48.184:8333\n+185.25.60.199:8333\n+185.50.68.64:8333\n+185.53.158.12:8333\n+185.61.79.213:8333\n+185.64.116.15:8333\n+185.95.219.53:8333\n+185.130.215.73:8333\n+185.130.215.187:8333\n+185.141.60.127:8333\n+185.147.11.108:8333\n+185.154.159.164:9992\n+185.198.56.77:8333\n+185.198.59.183:8333\n+185.216.140.33:8333\n+185.217.241.142:8333\n+185.249.199.106:8333\n+188.42.40.234:18333\n+188.65.212.138:8333\n+188.65.212.211:8333\n+188.68.45.143:8333\n+188.120.246.125:8333\n+188.134.5.47:8333\n+188.134.6.84:8333\n+188.167.101.51:8333\n+188.175.77.16:8333\n+188.213.168.152:8333\n+188.230.245.188:8333\n+189.121.185.148:8333\n+190.104.249.44:8333\n+190.184.198.34:8333\n+190.210.234.38:8333\n+190.218.190.85:8333\n+192.3.11.20:8333\n+192.3.11.24:8333\n+192.166.47.32:8333\n+192.167.149.143:8333\n+192.169.94.29:8333\n+192.169.94.70:8333\n+192.198.90.98:8333\n+192.254.89.134:8333\n+192.254.89.220:8333\n+193.41.78.125:8333\n+193.46.83.8:8333\n+193.59.41.11:8333\n+193.77.135.181:8333\n+193.84.116.22:8333\n+193.194.163.53:8333\n+194.71.225.55:8333\n+194.135.135.69:8333\n+194.158.92.150:8333\n+195.13.220.165:8333\n+195.56.63.10:8333\n+195.135.194.8:8333\n+195.168.36.20:8333\n+195.201.33.0:8333\n+195.202.169.149:8333\n+195.242.93.189:8333\n+198.1.231.6:8333\n+198.44.231.160:6333\n+198.54.113.59:8333\n+198.251.83.19:8333\n+199.68.199.4:8333\n+199.247.1.117:8333\n+199.247.10.26:8333\n+200.76.194.7:8333\n+201.241.2.85:8333\n+202.185.45.110:8333\n+203.86.207.53:8333\n+203.130.48.117:8885\n+204.14.245.180:8333\n+204.111.241.195:8333\n+204.152.203.98:8333\n+205.185.122.150:8333\n+206.124.149.66:8333\n+207.182.154.178:8333\n+208.81.1.105:8333\n+209.133.201.114:8333\n+209.173.25.140:8333\n+209.180.174.200:8333\n+209.190.36.13:8333\n+210.54.38.227:8333\n+210.54.39.99:8333\n+210.203.222.52:8223\n+211.104.154.140:8333\n+212.24.103.20:8333\n+212.33.204.190:8333\n+212.51.156.139:8333\n+212.109.198.126:8333\n+212.237.96.98:8333\n+212.241.70.213:8333\n+213.37.92.163:8333\n+213.89.98.199:8333\n+213.89.150.13:8333\n+213.174.156.72:8333\n+213.209.123.165:8333\n+213.227.152.108:8333\n 216.38.129.164:8333\n-216.48.168.8:8333\n-216.169.141.169:8333\n-216.245.206.181:8333\n-216.249.204.161:8333\n-216.250.138.230:8333\n-217.11.225.189:8333\n-217.12.34.158:8333\n-217.12.202.33:8333\n-217.20.171.43:8333\n-217.23.1.126:8333\n-217.23.11.138:8333\n-217.111.66.79:8333\n-217.155.202.191:8333\n+216.86.154.215:8333\n+216.93.139.63:8333\n+216.186.250.53:8333\n+216.194.165.98:8333\n+217.22.132.220:8333\n+217.43.72.105:8333\n+217.64.47.138:8333\n+217.69.145.234:8333\n 217.158.9.102:8333\n-217.172.32.18:20993\n-220.245.196.37:8333\n-[2001:1291:2bf:1::100]:8333\n-[2001:1620:f00:282::2]:8333\n-[2001:1620:f00:8282::1]:8333\n-[2001:19f0:5000:8de8:5400:ff:fe12:55e4]:8333\n-[2001:19f0:6c00:9103:5400:ff:fe10:a8d3]:8333\n-[2001:1b60:3:172:142b:6dff:fe7a:117]:8333\n-[2001:410:a000:4050:8463:90b0:fffb:4e58]:8333\n-[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n-[2001:41d0:1008:761::17c]:8333\n-[2001:41d0:1:45d8::1]:8333\n-[2001:41d0:1:6cd3::]:8333\n-[2001:41d0:1:8b26::1]:8333\n-[2001:41d0:1:afda::]:8200\n-[2001:41d0:1:b26b::1]:8333\n-[2001:41d0:1:c139::1]:8333\n-[2001:41d0:1:c8d7::1]:8333\n-[2001:41d0:1:f59f::33]:8333\n-[2001:41d0:1:f7cc::1]:8333\n-[2001:41d0:2:1021::1]:8333\n-[2001:41d0:2:37c3::]:8200\n-[2001:41d0:2:4797:2323:2323:2323:2323]:8333\n-[2001:41d0:2:53df::]:8333\n-[2001:41d0:2:9c94::1]:8333\n-[2001:41d0:2:9d3e::1]:8333\n-[2001:41d0:2:a24f::]:8333\n-[2001:41d0:2:a35a::]:8333\n-[2001:41d0:2:b2b8::]:8333\n-[2001:41d0:2:c1d9::]:8333\n-[2001:41d0:2:c6e::]:8333\n-[2001:41d0:2:c9bf::]:8333\n-[2001:41d0:2:f1a5::]:8333\n-[2001:41d0:52:a00::105f]:8333\n-[2001:41d0:52:cff::6f5]:8333\n-[2001:41d0:52:d00::6e2]:8333\n-[2001:41d0:8:3e75::1]:8333\n-[2001:41d0:8:62ab::1]:8333\n-[2001:41d0:8:6728::]:8333\n-[2001:41d0:8:b30a::1]:8333\n-[2001:41d0:8:bc26::1]:8333\n-[2001:41d0:8:be9a::1]:8333\n-[2001:41d0:8:d984::]:8333\n-[2001:41d0:8:eb8b::]:8333\n-[2001:41d0:a:13a2::1]:8333\n-[2001:41d0:a:2b18::1]:8333\n-[2001:41d0:a:2d14::]:8333\n-[2001:41d0:a:4558::1df2:76d3]:8333\n-[2001:41d0:a:4aaa::]:8333\n-[2001:41d0:a:635b::1]:8333\n-[2001:41d0:a:63d8::1]:8333\n-[2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:f9cd::1]:8333\n-[2001:41d0:d:20a4::]:8333\n-[2001:41d0:e:26b::1]:8333\n-[2001:41d0:fc8c:a200:7a24:afff:fe9d:c69b]:8333\n-[2001:41f0:61::7]:8333\n-[2001:41f0::2]:8333\n-[2001:44b8:41bd:6101:148e:4022:4950:e861]:8333\n-[2001:470:1:2f9:0:1:107a:a301]:8333\n-[2001:470:1f0b:ad6::2]:8333\n-[2001:470:1f11:12d5::ae1:5611]:8333\n-[2001:470:1f14:7d::2]:8333\n-[2001:470:27:ce::2]:8333\n-[2001:470:41:6::2]:8333\n-[2001:470:507d:0:6ab5:99ff:fe73:ac18]:8333\n-[2001:470:583e::2a]:8333\n-[2001:470:5f:5f::232]:8333\n-[2001:470:66:119::2]:8333\n-[2001:470:6c4f::cafe]:8333\n-[2001:470:6f:327:913b:7fe:8545:a4f5]:8333\n-[2001:470:7dda:1::1]:8333\n-[2001:470:95c1::2]:8333\n-[2001:470:b1d0:ffff::1000]:8333\n-[2001:470:d00d:0:3664:a9ff:fe9a:5150]:8333\n-[2001:470:fab7:1::1]:8333\n-[2001:4800:7819:104:be76:4eff:fe05:c828]:8333\n-[2001:4800:7819:104:be76:4eff:fe05:c9a0]:8333\n+220.130.142.178:33389\n+220.233.138.130:8333\n+[2001:1ba8:401:32:b842:3891:5915:c68f]:8333\n+[2001:1bc0:cc::a001]:8333\n+[2001:250:200:7:d6a9:fcf4:e78d:2d82]:8333\n+[2001:4128:6135:e001:5054:ff:fe37:e9eb]:8333\n+[2001:41d0:fc63:9c00:1acc:d22f:3f5c:ef7f]:8333\n+[2001:44b8:4195:1801:5c73:5d67:d2a6:9910]:8333\n+[2001:4800:7821:101:be76:4eff:fe04:9f50]:8333\n [2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n-[2001:4801:7828:104:be76:4eff:fe10:1325]:8333\n-[2001:4802:7800:1:be76:4eff:fe20:f023]:8333\n-[2001:4802:7800:2:30d7:1775:ff20:1858]:8333\n-[2001:4802:7800:2:be76:4eff:fe20:6c26]:8333\n-[2001:4802:7802:101:be76:4eff:fe20:256]:8333\n-[2001:4802:7802:103:be76:4eff:fe20:2de8]:8333\n-[2001:4830:1100:2e8::2]:8333\n-[2001:4b98:dc2:41:216:3eff:fe56:f659]:8333\n+[2001:4801:7821:77:be76:4eff:fe10:c7f6]:8333\n+[2001:48d0:1:2163:0:ff:febe:5a80]:8333\n+[2001:48f8:1003::3ba]:8333\n [2001:4ba0:fffa:5d::93]:8333\n-[2001:4ba0:ffff:1be:1:1005:0:1]:8333\n-[2001:4dd0:ff00:867f::3]:8333\n-[2001:4dd0:ff00:9a67::9]:8333\n-[2001:5c0:1400:b::3cc7]:8333\n-[2001:610:1b19::3]:8333\n-[2001:610:600:a41::2]:8333\n-[2001:67c:26b4::]:8333\n-[2001:8d8:840:500::39:1ae]:8333\n-[2001:8d8:965:4a00::10:9343]:8333\n-[2001:980:4650:1:2e0:53ff:fe13:2449]:8333\n-[2001:981:46:1:ba27:ebff:fe5b:edee]:8333\n-[2001:9c8:53e9:369a:226:2dff:fe1b:7472]:8333\n-[2001:9d8:cafe:3::87]:8333\n-[2001:b10:11:21:3e07:54ff:fe48:7248]:8333\n-[2001:ba8:1f1:f34c::2]:8333\n-[2001:bc8:2310:100::1]:8333\n-[2001:bc8:3427:101:7a4f:8be:2611:6e79]:8333\n-[2001:bc8:3505:200::1]:8333\n-[2001:cc0:a004::30:1d]:8333\n-[2001:e42:102:1209:153:121:76:171]:8333\n-[2002:17ea:14eb::17ea:14eb]:8333\n-[2002:2f8:2bc5::2f8:2bc5]:8333\n-[2002:4047:482c::4047:482c]:8333\n-[2002:45c3:8cca::45c3:8cca]:8333\n-[2002:46bb:8a41:0:226:b0ff:feed:5f12]:8888\n-[2002:46bb:8c3c:0:8d55:8fbb:15fa:f4e0]:8765\n-[2002:4c48:a0fe::4c48:a0fe]:8333\n-[2002:4d44:25c8::4d44:25c8]:8333\n-[2002:505f:aaa2::505f:aaa2]:8333\n-[2002:5bc1:799d::5bc1:799d]:8333\n-[2002:6dec:5472::6dec:5472]:8333\n-[2002:8c6d:6521:9617:12bf:48ff:fed8:1724]:8333\n-[2002:ac52:94e2::ac52:94e2]:8333\n-[2002:af7e:3eca::af7e:3eca]:8333\n-[2002:b009:20c5::b009:20c5]:8333\n-[2002:c06f:39a0::c06f:39a0]:8333\n-[2002:c23a:738a::c23a:738a]:8333\n-[2002:c70f:7442::c70f:7442]:8333\n-[2002:cec5:be4f::cec5:be4f]:8333\n-[2002:d149:9e3a::d149:9e3a]:8333\n-[2002:d917:ca5::d917:ca5]:8333\n-[2400:8900::f03c:91ff:fe50:153f]:8333\n-[2400:8900::f03c:91ff:fe6e:823e]:8333\n-[2400:8900::f03c:91ff:fea8:1934]:8333\n-[2400:8901::f03c:91ff:fe26:c4d6]:8333\n-[2400:8901::f03c:91ff:fec8:4280]:8333\n-[2400:8901::f03c:91ff:fec8:660f]:8333\n-[2401:1800:7800:102:be76:4eff:fe1c:559]:8333\n+[2001:4c48:2:a328:d8a7:e0ff:fe96:403a]:8333\n+[2001:56b:dda9:4b00:49f9:121b:aa9e:de30]:8333\n+[2001:638:a000:4140::ffff:191]:8333\n+[2001:678:7dc:8::2]:8333\n+[2001:678:ec:1:250:56ff:fea7:47e9]:8333\n+[2001:67c:16dc:1201:5054:ff:fe17:4dac]:8333\n+[2001:67c:21ec:1000::a]:8333\n+[2001:67c:22fc:1337::5]:8333\n+[2001:67c:2824:8001:225:90ff:fe67:9830]:7777\n+[2001:67c:2b5c:101:216:3eff:fea3:5234]:8333\n+[2001:67c:2db8:13::83]:8333\n+[2001:718:801:311:5054:ff:fe19:c483]:8333\n+[2001:8003:d136:1001::11:ffd1]:8333\n+[2001:8d8:96a:9300::ad:ae2c]:8333\n+[2001:8f1:1602:700:1b28:a3e3:bb08:a708]:9444\n+[2001:8f8:1327:1587:3f10:5ab:804d:4039]:8333\n+[2001:ba8:1f1:f069::2]:8333\n+[2001:e42:103:100::30]:8333\n+[2400:2650:480:bc00:bcaf:7c49:8c9e:7cdf]:8333\n+[2400:4052:e20:4f00:69fe:bb33:7b1c:a1ca]:8333\n+[2400:8902::f03c:91ff:fea5:ebb7]:8333\n [2401:1800:7800:102:be76:4eff:fe1c:a7d]:8333\n+[2401:2500:203:184::15]:8333\n+[2401:3900:2:1::2]:8333\n+[2402:7340:1:56::d0d]:8333\n+[2405:9800:ba01:251a:c53c:b80a:320d:5b41]:8333\n [2405:aa00:2::40]:8333\n-[2600:3c00::f03c:91ff:fe18:59b2]:8333\n-[2600:3c00::f03c:91ff:fe26:bfb6]:8333\n-[2600:3c00::f03c:91ff:fe33:88e3]:8333\n-[2600:3c00::f03c:91ff:fe6e:7297]:8333\n-[2600:3c00::f03c:91ff:fe84:8a6e]:8333\n-[2600:3c01::f03c:91ff:fe18:6adf]:8333\n-[2600:3c01::f03c:91ff:fe26:c4b8]:8333\n-[2600:3c01::f03c:91ff:fe3b:1f76]:8333\n-[2600:3c01::f03c:91ff:fe50:5e06]:8333\n-[2600:3c01::f03c:91ff:fe61:289b]:8333\n-[2600:3c01::f03c:91ff:fe69:89e9]:8333\n-[2600:3c01::f03c:91ff:fe84:ac15]:8333\n-[2600:3c01::f03c:91ff:fe98:68bb]:8333\n-[2600:3c02::f03c:91ff:fe26:713]:8333\n-[2600:3c02::f03c:91ff:fe26:c49e]:8333\n-[2600:3c02::f03c:91ff:fe84:97d8]:8333\n-[2600:3c02::f03c:91ff:fec8:8feb]:8333\n-[2600:3c03::f03c:91ff:fe18:da80]:8333\n-[2600:3c03::f03c:91ff:fe26:c49b]:8333\n-[2600:3c03::f03c:91ff:fe50:5fa7]:8333\n-[2600:3c03::f03c:91ff:fe67:d2e]:8333\n-[2600:3c03::f03c:91ff:fe6e:1803]:8333\n-[2600:3c03::f03c:91ff:fec8:4bbe]:8333\n-[2600:3c03::f03c:91ff:fee4:4e16]:8333\n-[2601:18d:8300:58a6::2e4]:8333\n-[2601:240:4600:40c0:250:56ff:fea4:6305]:8333\n-[2601:581:c200:a719:542c:9cd5:4852:f7d9]:8333\n-[2601:647:4900:85f1:ca2a:14ff:fe51:bb35]:8333\n-[2601:c2:c002:b300:54a0:15b5:19f7:530d]:8333\n-[2602:306:ccff:ad7f:b116:52be:64ba:db3a]:8333\n-[2602:ae:1982:9400:846:f78c:fec:4d57]:8333\n-[2602:ffc5:1f::1f:2d61]:8333\n+[2409:10:ca20:1df0:224:e8ff:fe1f:60d9]:8333\n+[2409:13:1200:d200:16da:e9ff:fee9:b19a]:8333\n+[240d:1a:3c0:ab00:e9f1:87c:93ac:7687]:8333\n [2602:ffc5:1f::1f:9211]:8333\n-[2602:ffc5::75d5:c1c3]:8333\n-[2602:ffc5::ffc5:b844]:8333\n-[2602:ffe8:100:2::457:936b]:8333\n-[2602:ffe8:100:2::9d20:2e3c]:8333\n-[2602:ffea:1001:72b::578b]:8333\n-[2602:ffea:a::24c4:d9fd]:8333\n-[2604:0:c1:100:1ec1:deff:fe54:2235]:8333\n-[2604:180:1:1af::42a9]:8333\n-[2604:180:3:702::c9de]:8333\n-[2604:4080:1114:0:3285:a9ff:fe93:850c]:8333\n-[2604:6000:ffc0:3c:64a3:94d0:4f1d:1da8]:8333\n-[2605:6000:f380:9a01:ba09:8aff:fed4:3511]:8333\n-[2605:6001:e00f:7b00:c587:6d91:6eff:eeba]:8333\n-[2605:f700:c0:1::25c3:2a3e]:8333\n-[2606:6000:a441:9903:5054:ff:fe78:66ff]:8333\n-[2607:5300:100:200::1c83]:9334\n-[2607:5300:10::a1]:8333\n-[2607:5300:60:1c2f::1]:8333\n-[2607:5300:60:2b90::1]:8333\n-[2607:5300:60:3320::1]:8333\n-[2607:5300:60:385::1]:8333\n-[2607:5300:60:4a85::]:8333\n-[2607:5300:60:65e4::]:8333\n-[2607:5300:60:6918::]:8333\n-[2607:5300:60:711a:78::a7b5]:8333\n-[2607:5300:60:714::1]:8333\n-[2607:5300:60:870::1]:8333\n-[2607:5300:60:952e:3733::1414]:8333\n-[2607:f1c0:848:1000::48:943c]:8333\n-[2607:f2e0:f:5df::2]:8333\n-[2607:f748:1200:f8:21e:67ff:fe99:8f07]:8333\n-[2607:f948:0:1::7]:8333\n-[2607:ff68:100:36::131]:8333\n-[2803:6900:1::117]:8333\n-[2a00:1098:0:80:1000:25:0:1]:8333\n-[2a00:1178:2:43:5054:ff:fe84:f86f]:8333\n-[2a00:1178:2:43:5054:ff:fee7:2eb6]:8333\n-[2a00:1178:2:43:8983:cc27:d72:d97a]:8333\n-[2a00:1328:e100:cc42:230:48ff:fe92:55c]:8333\n-[2a00:14f0:e000:80d2:cd1a::1]:8333\n-[2a00:1630:2:1802:188:122:91:11]:8333\n-[2a00:18e0:0:1800::1]:8333\n-[2a00:18e0:0:dcc5:109:234:106:191]:8333\n-[2a00:1a28:1157:87::94c7]:8333\n-[2a00:1ca8:37::a5fc:40d1]:8333\n-[2a00:1ca8:37::ab6d:ce2c]:8333\n-[2a00:7143:100:0:216:3eff:fe2e:74a3]:8333\n-[2a00:7143:100:0:216:3eff:fed3:5c21]:8333\n-[2a00:7c80:0:45::123]:8333\n-[2a00:dcc0:eda:98:183:193:c382:6bdb]:8333\n-[2a00:dcc0:eda:98:183:193:f72e:d943]:8333\n-[2a00:f820:17::4af:1]:8333\n-[2a00:f940:2:1:2::101d]:8333\n-[2a00:f940:2:1:2::6ac]:8333\n-[2a01:1b0:7999:402::131]:8333\n-[2a01:238:42dd:f900:7a6c:2bc6:4041:c43]:8333\n-[2a01:238:4313:6300:2189:1c97:696b:5ea]:8333\n-[2a01:488:66:1000:5c33:91f9:0:1]:8333\n-[2a01:488:66:1000:b01c:178d:0:1]:8333\n-[2a01:4f8:100:34ce::2]:8333\n-[2a01:4f8:100:34e4::2]:8333\n-[2a01:4f8:100:44e7::2]:8333\n-[2a01:4f8:100:510e::2]:8333\n-[2a01:4f8:100:5128::2]:8333\n-[2a01:4f8:110:5105::2]:8333\n-[2a01:4f8:110:516c::2]:8333\n-[2a01:4f8:120:43e4::2]:8333\n-[2a01:4f8:120:62e6::2]:8333\n-[2a01:4f8:120:702e::2]:8333\n-[2a01:4f8:120:8203::2]:8333\n-[2a01:4f8:121:234d::2]:8333\n-[2a01:4f8:121:261::2]:8333\n-[2a01:4f8:130:11ea::2]:8333\n-[2a01:4f8:130:3332::2]:8333\n-[2a01:4f8:130:40ab::2]:8333\n-[2a01:4f8:130:632c::2]:8333\n-[2a01:4f8:130:6366::2]:8333\n-[2a01:4f8:130:934f::2]:8333\n-[2a01:4f8:131:33ad:fea1::666]:8333\n-[2a01:4f8:140:2195::2]:8333\n-[2a01:4f8:140:6333::2]:8333\n-[2a01:4f8:140:930d::2]:8333\n-[2a01:4f8:140:93b0::2]:8333\n-[2a01:4f8:141:1167::2]:8333\n-[2a01:4f8:141:186::2]:8333\n-[2a01:4f8:141:53f0::2]:8333\n-[2a01:4f8:150:336a::2]:8333\n-[2a01:4f8:150:72ee::4202]:8333\n-[2a01:4f8:150:8324::2]:9001\n-[2a01:4f8:151:21ca::2]:8333\n-[2a01:4f8:151:41c2:0:5404:a67e:f250]:8333\n-[2a01:4f8:151:5128::2]:8333\n-[2a01:4f8:151:52c6::154]:8333\n-[2a01:4f8:151:6347::2]:9001\n-[2a01:4f8:160:5136::2]:8333\n-[2a01:4f8:160:72c5::2858:e1c5]:8333\n-[2a01:4f8:160:72c5::593b:60d5]:8333\n-[2a01:4f8:160:814f::2]:8333\n-[2a01:4f8:161:13d0::2]:8333\n-[2a01:4f8:161:228f::2]:8333\n-[2a01:4f8:161:51c4::2]:8333\n-[2a01:4f8:161:60a7::2]:8333\n-[2a01:4f8:161:7026::2]:8333\n-[2a01:4f8:161:9184::2]:8333\n-[2a01:4f8:162:2108::2]:8333\n-[2a01:4f8:162:218c::2]:8333\n-[2a01:4f8:162:4443::2]:8333\n-[2a01:4f8:162:51a3::2]:8333\n-[2a01:4f8:171:b93::2]:8333\n-[2a01:4f8:190:1483::1]:8333\n-[2a01:4f8:190:4495::2]:8333\n-[2a01:4f8:190:64c9::2]:8333\n-[2a01:4f8:190:91ce::2]:8333\n-[2a01:4f8:191:2194::83]:8333\n-[2a01:4f8:191:40e8::2]:8333\n-[2a01:4f8:191:44b4::2]:8333\n-[2a01:4f8:191:8242::2]:8333\n-[2a01:4f8:191:83a2::2]:8333\n-[2a01:4f8:192:11b2::2]:8333\n-[2a01:4f8:192:216c::2]:8333\n-[2a01:4f8:192:22b3::2]:8333\n-[2a01:4f8:192:440b::2]:8333\n-[2a01:4f8:192:db::2]:8333\n-[2a01:4f8:200:1012::2]:8333\n-[2a01:4f8:200:23d1::dead:beef]:8333\n-[2a01:4f8:200:506d::2]:8333\n-[2a01:4f8:200:51f0::2]:8333\n-[2a01:4f8:200:5389::2]:8333\n-[2a01:4f8:200:53e3::2]:8333\n-[2a01:4f8:200:6344::2]:8333\n-[2a01:4f8:200:6396::2]:8333\n-[2a01:4f8:200:63af::119]:8333\n-[2a01:4f8:200:71e3:78b4:f3ff:fead:e8cf]:8333\n-[2a01:4f8:201:214c::2]:8333\n-[2a01:4f8:201:233:1::3]:8333\n-[2a01:4f8:201:3e3::2]:8333\n-[2a01:4f8:201:6011::4]:8333\n-[2a01:4f8:201:60d5::2]:8333\n-[2a01:4f8:202:265::2]:8333\n-[2a01:4f8:202:3115::2]:8333\n-[2a01:4f8:202:31e3::2]:8333\n-[2a01:4f8:202:31ef::2]:8333\n-[2a01:4f8:202:3392::2]:8333\n-[2a01:4f8:202:53c3::2]:8333\n-[2a01:4f8:202:63f4::2]:8333\n-[2a01:4f8:202:7227::2]:8333\n-[2a01:4f8:210:2227::2]:8333\n-[2a01:4f8:210:24aa::2]:8333\n-[2a01:4f8:211:14cf::2]:8333\n-[2a01:4f8:211:181b::2]:8333\n-[2a01:4f8:212:289e::2]:8333\n-[2a01:4f8:212:33db::2]:18333\n-[2a01:4f8:a0:112f::2]:8333\n-[2a01:4f8:a0:3174::2]:8333\n-[2a01:4f8:a0:328c::2]:8333\n-[2a01:4f8:a0:5243::2]:8333\n-[2a01:4f8:c17:19b9::2]:8333\n-[2a01:4f8:c17:1a41::2]:8333\n-[2a01:4f8:c17:1a92::2]:8333\n-[2a01:4f8:c17:273::2]:8333\n-[2a01:4f8:c17:435::2]:8333\n-[2a01:4f8:c17:755::2]:8333\n-[2a01:4f8:c17:b54::2]:8333\n-[2a01:4f8:d16:9384::2]:8333\n-[2a01:608:ffff:a009:8bf5:879d:e51a:f837]:8333\n-[2a01:680:10:10:f2de:f1ff:fec9:dc0]:8333\n-[2a01:7c8:aaac:1f6:5054:ff:fe30:e585]:8333\n-[2a01:7c8:aaac:20b:5054:ff:fe24:435e]:8333\n-[2a01:7c8:aaac:43d:5054:ff:fe4e:3dd4]:8333\n-[2a01:7c8:aaad:256::1]:8333\n-[2a01:7c8:aab6:ea:5054:ff:feff:eac3]:8333\n-[2a01:7c8:aab9:5a:5054:ff:fe89:7b26]:8333\n-[2a01:7c8:aabc:2c8:5054:ff:fe35:6581]:8333\n-[2a01:7e00::f03c:91ff:fe18:301e]:8333\n-[2a01:7e00::f03c:91ff:fe18:3942]:8333\n-[2a01:7e00::f03c:91ff:fe26:8c87]:8333\n-[2a01:7e00::f03c:91ff:fe50:6206]:8333\n-[2a01:7e00::f03c:91ff:fe67:559d]:8333\n-[2a01:7e00::f03c:91ff:fe84:434f]:8333\n-[2a01:7e00::f03c:91ff:fe89:1143]:8333\n-[2a01:7e00::f03c:91ff:fe98:2505]:8333\n-[2a01:7e00::f03c:91ff:fedb:352e]:8333\n-[2a01:7e01::f03c:91ff:fec8:d7b5]:8333\n-[2a01:e34:ee33:1640:c504:f677:b28a:ba42]:8333\n-[2a01:e35:2e7e:bc0:e079:f55e:cef3:b5d7]:8333\n-[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n-[2a01:e35:8a3f:47c0:c617:feff:fe3c:9fbd]:8333\n-[2a01:e35:8aca:6a0:211:aff:fe5e:295e]:8333\n-[2a02:180:a:18:81:7:11:50]:8333\n-[2a02:1810:1d87:6a00:5604:a6ff:fe60:d87d]:8333\n-[2a02:2168:1144:5c01:d63d:7eff:fedd:4f8e]:8333\n-[2a02:2498:6d7b:7001:b508:b39d:2cea:5b7a]:8333\n-[2a02:2528:503:2::15]:8333\n-[2a02:2528:fa:1a56:216:44ff:fe6a:d112]:8333\n-[2a02:27f8:2012:0:e9f7:268f:c441:6129]:8333\n-[2a02:348:86:3011::1]:8333\n-[2a02:4780:1:1::1:8a01]:8333\n-[2a02:578:5002:116::2]:8333\n-[2a02:6080::1:190b:69e3]:8333\n-[2a02:6080::1:e893:d9d6]:8333\n-[2a02:770:4000::139]:8333\n-[2a02:7aa0:1201::deb3:81a2]:8333\n-[2a02:8010:b001::5860:59b5]:8333\n-[2a02:810d:21c0:f00:a248:1cff:feb8:5348]:8333\n-[2a02:a50::21b:24ff:fe93:4e39]:8333\n-[2a02:a80:0:1200::2]:8333\n-[2a02:c200:0:10:2:1:5830:1]:8333\n-[2a02:c200:0:10:2:5:4692:1]:8333\n-[2a02:c200:0:10:3:0:7158:1]:8333\n-[2a02:c200:0:10::2244:1]:8333\n-[2a02:c200:1:10:2:3:3339:1]:8333\n-[2a02:c200:1:10:2:3:7844:1]:8333\n-[2a02:c200:1:10:2:5:6288:1]:8333\n-[2a02:c200:1:10:3:0:5912:1]:8333\n-[2a03:4000:2:496::8]:8333\n-[2a03:4000:6:8009::1]:8333\n-[2a03:4000:6:8063::bcd0]:8333\n-[2a03:4900:fffc:b::2]:8333\n-[2a03:b0c0:1:d0::d:5001]:8333\n-[2a03:f80:ed15:149:154:155:235:1]:8333\n-[2a03:f80:ed15:149:154:155:241:1]:8333\n-[2a03:f80:ed16:ca7:ea75:b12d:2af:9e2a]:8333\n-[2a04:1980:3100:1aab:290:faff:fe70:a3d8]:8333\n-[2a04:1980:3100:1aab:e61d:2dff:fe29:f590]:8333\n-[2a04:2f80:6:200::89]:8333\n-[2a04:ac00:1:4a0b:5054:ff:fe00:5af5]:8333\n-[2a04:ad80:0:68::35da]:8333\n-3ffk7iumtx3cegbi.onion:8333\n-3nmbbakinewlgdln.onion:8333\n-4j77gihpokxu2kj4.onion:8333\n-546esc6botbjfbxb.onion:8333\n-5at7sq5nm76xijkd.onion:8333\n-77mx2jsxaoyesz2p.onion:8333\n-7g7j54btiaxhtsiy.onion:8333\n-a6obdgzn67l7exu3.onion:8333\n-ab64h7olpl7qpxci.onion:8333\n-am2a4rahltfuxz6l.onion:8333\n-azuxls4ihrr2mep7.onion:8333\n-bitcoin7bi4op7wb.onion:8333\n-bitcoinostk4e4re.onion:8333\n-bk7yp6epnmcllq72.onion:8333\n-bmutjfrj5btseddb.onion:8333\n-ceeji4qpfs3ms3zc.onion:8333\n-clexmzqio7yhdao4.onion:8333\n-gb5ypqt63du3wfhn.onion:8333\n-h2vlpudzphzqxutd.onion:8333\n-n42h7r6oumcfsbrs.onion:4176\n-ncwk3lutemffcpc4.onion:8333\n-okdzjarwekbshnof.onion:8333\n-pjghcivzkoersesd.onion:8333\n-rw7ocjltix26mefn.onion:8333\n-uws7itep7o3yinxo.onion:8333\n-vk3qjdehyy4dwcxw.onion:8333\n-vqpye2k5rcqvj5mq.onion:8333\n-wpi7rpvhnndl52ee.onion:8333\n+[2604:2000:ffc0:0:5862:b6f8:fe72:762f]:8333\n+[2604:4300:a:2e:21b:21ff:fe11:392]:8333\n+[2604:5500:c2a3:7b00:cc6:373b:44a8:caa4]:8333\n+[2605:9880:201:17::4b7c]:8333\n+[2605:ae00:203::203]:8333\n+[2605:c000:2a0a:1::102]:8333\n+[2605:f700:100:400::131:5b54]:8333\n+[2606:c680:0:b:3830:34ff:fe66:6663]:8333\n+[2607:9280:b:73b:250:56ff:fe21:bf32]:8333\n+[2607:f128:40:1703::2]:8333\n+[2607:f3a0:1000:9:f82a:fdff:fea1:3315]:8333\n+[2607:f470:8:1048:ae1f:6bff:fe68:5e42]:8333\n+[2607:fd70:4a:babe:b00b:1e5:1bd5:f78]:8333\n+[2607:ff50:0:71::13]:8333\n+[2620:6e:a000:1:42:42:42:42]:8333\n+[2804:14d:baa7:9674:3615:9eff:fe23:d610]:8333\n+[2a00:1328:e101:c00::163]:8333\n+[2a00:1398:4:2a03:215:5dff:fed6:1033]:8333\n+[2a00:13a0:3015:1:85:14:79:26]:8333\n+[2a00:1630:14::101]:8333\n+[2a00:1768:2001:27::ef6a]:8333\n+[2a00:1828:a004:2::666]:8333\n+[2a00:1838:36:2c::3e95]:8333\n+[2a00:1b60:2:4:40d0:eff:fe88:ebd4]:8333\n+[2a00:7b80:452:2000::138]:8333\n+[2a00:7b80:454:2000::101]:8333\n+[2a00:8a60:e012:a00::21]:8333\n+[2a01:4240:5f52:9246::1]:8333\n+[2a01:430:17:1::ffff:1153]:8333\n+[2a01:488:66:1000:53a9:1573:0:1]:8333\n+[2a01:6f0:ffff:120::8dcb]:8333\n+[2a01:7a0:2:137a::11]:8333\n+[2a01:7a7:2:131b:20c:29ff:fe9a:3922]:8333\n+[2a01:7c8:d002:318:5054:ff:febe:cbb1]:8333\n+[2a01:cb00:d3d:7700:227:eff:fe28:c565]:8333\n+[2a01:d0:ffff:7368::2]:8333\n+[2a01:e0a:182:1300:591e:529:b376:c654]:8333\n+[2a01:e34:ee6b:2ab0:88c2:1c12:f4eb:c26c]:8333\n+[2a02:1205:34c3:d890:c0e:741e:c45f:3605]:8333\n+[2a02:2c8:1:400:34::184]:8333\n+[2a02:2f0d:202:f900:5e9a:d8ff:fe57:8bc5]:8333\n+[2a02:390:9000:0:218:7dff:fe10:be33]:8333\n+[2a02:4780:9:0:2:f928:f280:9a6f]:8333\n+[2a02:578:4f07:24:76ad:cef7:93c1:b9b9]:8333\n+[2a02:7aa0:1619::590:eba2]:8333\n+[2a02:7aa0:1619::adc:8de0]:8333\n+[2a02:8108:95bf:eae3:211:32ff:fe8e:b5b8]:8333\n+[2a02:c207:2014:9913::1]:18333\n+[2a02:e00:fff0:23f::1]:8333\n+[2a02:f680:1:1100::5453]:8333\n+[2a03:1b20:1:f410:40::3e]:16463\n+[2a03:2260:11e:301::8]:8333\n+[2a03:2260:11e:302::3]:8333\n+[2a03:4000:6:416c::43]:8333\n+[2a04:2180:1:c:f000::15]:8333\n+[2a04:3543:1000:2310:8492:b8ff:fe91:22e8]:8333\n+[2a05:6d40:b94e:d100:225:90ff:fe0d:cfc2]:8333\n+[2a05:fc87:4::6]:8333\n+[2a07:7200:ffff:c53f::e1:17]:8333\n+[2a0b:2ac0:1:0:d6ae:52ff:fe7b:741c]:8333\n+[2a0b:2ac0:1:0:d6ae:52ff:fe7b:88eb]:8333\n+25lhwv6jaqbtek5x.onion:8333\n+2empatdfea6vwete.onion:8333\n+2hpjn6ndxjafgoej.onion:8333\n+34aqcwnnuiqh234f.onion:8333\n+3frtobxxkgkhwjx7.onion:8333\n+3gxqibajrtysyp5o.onion:8333\n+3lf37sdzhpxh6fpv.onion:8333\n+3q5iydjrrutqjb2y.onion:8333\n+3qzrkpxduf44jqg5.onion:8333\n+3sami4tg4yhctjyc.onion:8333\n+3w77hrilg6q64opl.onion:8333\n+46xh2sbjsjiyl4fu.onion:8333\n+4ee44qsamrjpywju.onion:8333\n+4gwvtoppsaffaxg7.onion:8333\n+4haplrtkprjqhm2j.onion:8333\n+4u3y3zf2emynt6ui.onion:8333\n+4wx34hn3kybujklg.onion:8333\n+56czufbruq46sb2c.onion:8333\n+57dytizbai7o4kq7.onion:8333\n+5guaeulc7xm4g2mm.onion:8334\n+5mtvd4dk62ccdk4v.onion:8333\n+5nsfm4nqqzzprjrp.onion:8333\n+5pmjz6mmikyabaw5.onion:8333\n+6eurcxoqsa4qpiqq.onion:8333\n+6ivvkeseojsmpby4.onion:8333\n+6luc7owlbbaj52lr.onion:8333\n+6tlha6njtcuwpfa3.onion:8333\n+6ymgbvnn6d5nfmv4.onion:8333\n+6z5cyaswulhxcvhj.onion:8333\n+72y2n5rary4mywkz.onion:8333\n+7a354g25lnvry4ic.onion:8333\n+7b75ub5dapphemit.onion:8333\n+7xaqpr7exrtlnjbb.onion:8333\n+a64haiqsl76l25gv.onion:8333\n+ab7ftdfw6qhdx3re.onion:8333\n+aiupgbtdqpmwfpuz.onion:8333\n+akeg56rzkg7rsyyg.onion:8333\n+akinbo7tlegsnsxn.onion:8333\n+anem5aq4cr2zl7tz.onion:8333\n+at3w5qisczgguije.onion:8333\n+auo4zjsp44vydv6c.onion:8333\n+b6vrxhrrle7jxiua.onion:8333\n+bitcoinranliixsu.onion:8333\n+blcktrgve5vetjsk.onion:8333\n+bowg4prf63givea4.onion:8333\n+cj2nexmwocyy5unq.onion:8333\n+cjuek22p4vv4hzbu.onion:8333\n+cklaa2xdawrb75fg.onion:8333\n+coxiru76nnfw3vdj.onion:8333\n+cqwcyvvk5xnqv3yw.onion:8333\n+cwq2fuc54mlp3ojc.onion:8333\n+dganr7dffsacayml.onion:8333\n+djbsspmvlc6ijiis.onion:8333\n+dmfwov5ycnpvulij.onion:8333\n+dp2ekfbxubpdfrt4.onion:8333\n+dw2ufbybrgtzssts.onion:4333\n+dxv5u4xaeydpbrrp.onion:8333\n+edkmfeaapvavhtku.onion:8333\n+ejdoey3uay3cz7bs.onion:8333\n+eladlvwflaahxomr.onion:8333\n+ffhx6ttq7ejbodua.onion:8333\n+fqdzxl4kjboae35b.onion:8333\n+hbnnzteon75un65y.onion:8333\n+hcyxhownxdv7yybw.onion:8333\n+hdfcxll2tqs2l4jc.onion:8333\n+hdld2bxyvzy45ds4.onion:8333\n+hnqwmqikfmnkpdja.onion:8333\n+hvmjovdasoin43wn.onion:8333\n+hwzcbnenp6dsp6ow.onion:8333\n+hz26wamjlbd7arrl.onion:8333\n+i5ellwzndjuke242.onion:8333\n+iapvpwzs4gpbl6fk.onion:8885\n+if7fsvgyqwowxkcn.onion:8333\n+ilukzjazxlxrbuwy.onion:8333\n+ju5duo3r6p6diznc.onion:8333\n+k3i3suxlg4w27uas.onion:8333\n+k7omfveynnjg674e.onion:8333\n+ko37ti7twplktxqu.onion:8333\n+kswfyurnglm65u7b.onion:8333\n+ldu2hbiorkvdymja.onion:8333\n+lftugyhf6vnouikf.onion:8333\n+ln3csnn6774nzgyn.onion:8333\n+lvh7k53s62frc6ro.onion:8333\n+lvvgedppmpigudhz.onion:8333\n+mbjkotfqcn5gnsrm.onion:8333\n+mk3bnep5ubou7i44.onion:8333\n+muhp42ytbwi6qf62.onion:8333\n+n5khsbd6whw7ooip.onion:8333\n+na6otugfitr7pnlv.onion:8333\n+nclrhbeertvin7cu.onion:8333\n+ndmbrjcvu2s6jcom.onion:8333\n+nf4iypnyjwfpcjm7.onion:8333\n+nkdw6ywzt3dqwxuf.onion:8333\n+nqmxpgrpuysullkq.onion:8333\n+ntml2aeumyglyjlk.onion:8333\n+o4sl5na6jeqgi3l6.onion:8333\n+opencubebqqx3buj.onion:8333\n+oudab5q7ruclifdv.onion:8333\n+ovbkvgdllk3xxeah.onion:8333\n+pg2jeh62fkq3byps.onion:8333\n+pgufebhe6mt7knqz.onion:8333\n+pkcgxf23ws3lwqvq.onion:8333\n+po3j2hfkmf7sh36o.onion:8333\n+qdtau72ifwauot6b.onion:8333\n+qidnrqy2ozz3nzqq.onion:8333\n+qpebweackyztorrm.onion:8333\n+qsl3x63225alx4bt.onion:8333\n+readybit5veyche6.onion:8333\n+rjw6vpw5ffoncxuh.onion:8333\n+s2epxac7ovy36ruj.onion:8333\n+srkgyv5edn2pa7il.onion:8333\n+sv5oitfnsmfoc3wu.onion:8333\n+tdlpmqnpfqehqj7c.onion:8333\n+ttx7ddwltrixannm.onion:8333\n+uftbw4zi5wlzcwho.onion:8333\n+uoailgcebjuws47e.onion:8333\n+uqvucqhplwqbjrsb.onion:8333\n+uz3pvdhie3372vxw.onion:8333\n+v2x7gpj3shxfnl25.onion:8333\n+vdhrg3k2akmf6kek.onion:8333\n+vov46htt6gyixdmb.onion:8333\n+vrfs5jwtfzj2ss6n.onion:8333\n+vwpcfguewxhky4iy.onion:8333\n+wg3b3qxcwcrraq2o.onion:8333\n+wgeecjm4w4ko66f7.onion:8333\n+wmxc6ask4a5xyaxh.onion:8333\n+wqrafn4zal3bbbhr.onion:8333\n+xagzqmjgwgdvl2di.onion:8333\n+xhi5x5qc44elydk4.onion:8333\n+xk6bjlmgvwojvozj.onion:8333\n+xmgr7fsmp7bgburk.onion:8333\n+xocvz3dzyu2kzu6f.onion:8333\n+xv7pt6etwxiygss6.onion:8444\n+xz563swdjd7yqymb.onion:8333\n+yumx7asj7feoozic.onion:8333\n+yzmyolvp55rydnsm.onion:8333\n+z3forfpyjyxxgfr5.onion:8333\n+z5x2wes6mhbml2t5.onion:8333\n+zmaddsqelw2oywfb.onion:8444\n+zqlojwtc4lsurgie.onion:8333\n+zvwc7ad4m2dvc74x.onion:8333"
      },
      {
        "sha": "13385cc816209d2c9fc2acf68343dce15e4dd201",
        "filename": "contrib/seeds/suspicious_hosts.txt",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/seeds/suspicious_hosts.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/seeds/suspicious_hosts.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/suspicious_hosts.txt?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -0,0 +1,16 @@\n+130.211.129.106\n+148.251.238.178\n+176.9.46.6\n+178.63.107.226\n+54.173.72.127\n+54.174.10.182\n+54.183.64.54\n+54.194.231.211\n+54.66.214.167\n+54.66.220.137\n+54.67.33.14\n+54.77.251.214\n+54.94.195.96\n+54.94.200.247\n+83.81.130.26\n+88.198.17.7\n\\ No newline at end of file"
      },
      {
        "sha": "c0a9c9ccf93d335a7092e383ff8a59ae410e549d",
        "filename": "contrib/spendfrom/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/spendfrom/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/spendfrom/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/README.md?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,35 +0,0 @@\n-### SpendFrom ###\n-\n-Use the raw transactions API to send coins received on a particular\n-address (or addresses). \n-\n-### Usage: ###\n-Depends on [jsonrpc](http://json-rpc.org/).\n-\n-\tspendfrom.py --from=FROMADDRESS1[,FROMADDRESS2] --to=TOADDRESS --amount=amount \\\n-\t             --fee=fee --datadir=/path/to/.bitcoin --testnet --dry_run\n-\n-With no arguments, outputs a list of amounts associated with addresses.\n-\n-With arguments, sends coins received by the `FROMADDRESS` addresses to the `TOADDRESS`.\n-\n-### Notes ###\n-\n-- You may explicitly specify how much fee to pay (a fee more than 1% of the amount\n-will fail,  though, to prevent bitcoin-losing accidents). Spendfrom may fail if\n-it thinks the transaction would never be confirmed (if the amount being sent is\n-too small, or if the transaction is too many bytes for the fee).\n-\n-- If a change output needs to be created, the change will be sent to the last\n-`FROMADDRESS` (if you specify just one `FROMADDRESS`, change will go back to it).\n-\n-- If `--datadir` is not specified, the default datadir is used.\n-\n-- The `--dry_run` option will just create and sign the transaction and print\n-the transaction data (as hexadecimal), instead of broadcasting it.\n-\n-- If the transaction is created and broadcast successfully, a transaction id\n-is printed.\n-\n-- If this was a tool for end-users and not programmers, it would have much friendlier\n-error-handling."
      },
      {
        "sha": "01b9768a5b06a459808af61efca624239b301f1d",
        "filename": "contrib/spendfrom/setup.py",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/spendfrom/setup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/spendfrom/setup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/setup.py?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,9 +0,0 @@\n-from distutils.core import setup\n-setup(name='btcspendfrom',\n-      version='1.0',\n-      description='Command-line utility for bitcoin \"coin control\"',\n-      author='Gavin Andresen',\n-      author_email='gavin@bitcoinfoundation.org',\n-      requires=['jsonrpc'],\n-      scripts=['spendfrom.py'],\n-      )"
      },
      {
        "sha": "72ee0425eb2363ab39f85ba9d239891aa0279dcd",
        "filename": "contrib/spendfrom/spendfrom.py",
        "status": "removed",
        "additions": 0,
        "deletions": 267,
        "changes": 267,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/spendfrom/spendfrom.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/spendfrom/spendfrom.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/spendfrom.py?ref=bc94b87487824c6fba45788facf96faba97a4aa6",
        "patch": "@@ -1,267 +0,0 @@\n-#!/usr/bin/env python\n-#\n-# Use the raw transactions API to spend bitcoins received on particular addresses,\n-# and send any change back to that same address.\n-#\n-# Example usage:\n-#  spendfrom.py  # Lists available funds\n-#  spendfrom.py --from=ADDRESS --to=ADDRESS --amount=11.00\n-#\n-# Assumes it will talk to a bitcoind or Bitcoin-Qt running\n-# on localhost.\n-#\n-# Depends on jsonrpc\n-#\n-\n-from decimal import *\n-import getpass\n-import math\n-import os\n-import os.path\n-import platform\n-import sys\n-import time\n-from jsonrpc import ServiceProxy, json\n-\n-BASE_FEE=Decimal(\"0.001\")\n-\n-def check_json_precision():\n-    \"\"\"Make sure json library being used does not lose precision converting BTC values\"\"\"\n-    n = Decimal(\"20000000.00000003\")\n-    satoshis = int(json.loads(json.dumps(float(n)))*1.0e8)\n-    if satoshis != 2000000000000003:\n-        raise RuntimeError(\"JSON encode/decode loses precision\")\n-\n-def determine_db_dir():\n-    \"\"\"Return the default location of the bitcoin data directory\"\"\"\n-    if platform.system() == \"Darwin\":\n-        return os.path.expanduser(\"~/Library/Application Support/Bitcoin/\")\n-    elif platform.system() == \"Windows\":\n-        return os.path.join(os.environ['APPDATA'], \"Bitcoin\")\n-    return os.path.expanduser(\"~/.bitcoin\")\n-\n-def read_bitcoin_config(dbdir):\n-    \"\"\"Read the bitcoin.conf file from dbdir, returns dictionary of settings\"\"\"\n-    from ConfigParser import SafeConfigParser\n-\n-    class FakeSecHead(object):\n-        def __init__(self, fp):\n-            self.fp = fp\n-            self.sechead = '[all]\\n'\n-        def readline(self):\n-            if self.sechead:\n-                try: return self.sechead\n-                finally: self.sechead = None\n-            else:\n-                s = self.fp.readline()\n-                if s.find('#') != -1:\n-                    s = s[0:s.find('#')].strip() +\"\\n\"\n-                return s\n-\n-    config_parser = SafeConfigParser()\n-    config_parser.readfp(FakeSecHead(open(os.path.join(dbdir, \"bitcoin.conf\"))))\n-    return dict(config_parser.items(\"all\"))\n-\n-def connect_JSON(config):\n-    \"\"\"Connect to a bitcoin JSON-RPC server\"\"\"\n-    testnet = config.get('testnet', '0')\n-    testnet = (int(testnet) > 0)  # 0/1 in config file, convert to True/False\n-    if not 'rpcport' in config:\n-        config['rpcport'] = 18332 if testnet else 8332\n-    connect = \"http://%s:%s@127.0.0.1:%s\"%(config['rpcuser'], config['rpcpassword'], config['rpcport'])\n-    try:\n-        result = ServiceProxy(connect)\n-        # ServiceProxy is lazy-connect, so send an RPC command mostly to catch connection errors,\n-        # but also make sure the bitcoind we're talking to is/isn't testnet:\n-        if result.getmininginfo()['testnet'] != testnet:\n-            sys.stderr.write(\"RPC server at \"+connect+\" testnet setting mismatch\\n\")\n-            sys.exit(1)\n-        return result\n-    except:\n-        sys.stderr.write(\"Error connecting to RPC server at \"+connect+\"\\n\")\n-        sys.exit(1)\n-\n-def unlock_wallet(bitcoind):\n-    info = bitcoind.getinfo()\n-    if 'unlocked_until' not in info:\n-        return True # wallet is not encrypted\n-    t = int(info['unlocked_until'])\n-    if t <= time.time():\n-        try:\n-            passphrase = getpass.getpass(\"Wallet is locked; enter passphrase: \")\n-            bitcoind.walletpassphrase(passphrase, 5)\n-        except:\n-            sys.stderr.write(\"Wrong passphrase\\n\")\n-\n-    info = bitcoind.getinfo()\n-    return int(info['unlocked_until']) > time.time()\n-\n-def list_available(bitcoind):\n-    address_summary = dict()\n-\n-    address_to_account = dict()\n-    for info in bitcoind.listreceivedbyaddress(0):\n-        address_to_account[info[\"address\"]] = info[\"account\"]\n-\n-    unspent = bitcoind.listunspent(0)\n-    for output in unspent:\n-        # listunspent doesn't give addresses, so:\n-        rawtx = bitcoind.getrawtransaction(output['txid'], 1)\n-        vout = rawtx[\"vout\"][output['vout']]\n-        pk = vout[\"scriptPubKey\"]\n-\n-        # This code only deals with ordinary pay-to-bitcoin-address\n-        # or pay-to-script-hash outputs right now; anything exotic is ignored.\n-        if pk[\"type\"] != \"pubkeyhash\" and pk[\"type\"] != \"scripthash\":\n-            continue\n-        \n-        address = pk[\"addresses\"][0]\n-        if address in address_summary:\n-            address_summary[address][\"total\"] += vout[\"value\"]\n-            address_summary[address][\"outputs\"].append(output)\n-        else:\n-            address_summary[address] = {\n-                \"total\" : vout[\"value\"],\n-                \"outputs\" : [output],\n-                \"account\" : address_to_account.get(address, \"\")\n-                }\n-\n-    return address_summary\n-\n-def select_coins(needed, inputs):\n-    # Feel free to improve this, this is good enough for my simple needs:\n-    outputs = []\n-    have = Decimal(\"0.0\")\n-    n = 0\n-    while have < needed and n < len(inputs):\n-        outputs.append({ \"txid\":inputs[n][\"txid\"], \"vout\":inputs[n][\"vout\"]})\n-        have += inputs[n][\"amount\"]\n-        n += 1\n-    return (outputs, have-needed)\n-\n-def create_tx(bitcoind, fromaddresses, toaddress, amount, fee):\n-    all_coins = list_available(bitcoind)\n-\n-    total_available = Decimal(\"0.0\")\n-    needed = amount+fee\n-    potential_inputs = []\n-    for addr in fromaddresses:\n-        if addr not in all_coins:\n-            continue\n-        potential_inputs.extend(all_coins[addr][\"outputs\"])\n-        total_available += all_coins[addr][\"total\"]\n-\n-    if total_available < needed:\n-        sys.stderr.write(\"Error, only %f BTC available, need %f\\n\"%(total_available, needed));\n-        sys.exit(1)\n-\n-    #\n-    # Note:\n-    # Python's json/jsonrpc modules have inconsistent support for Decimal numbers.\n-    # Instead of wrestling with getting json.dumps() (used by jsonrpc) to encode\n-    # Decimals, I'm casting amounts to float before sending them to bitcoind.\n-    #  \n-    outputs = { toaddress : float(amount) }\n-    (inputs, change_amount) = select_coins(needed, potential_inputs)\n-    if change_amount > BASE_FEE:  # don't bother with zero or tiny change\n-        change_address = fromaddresses[-1]\n-        if change_address in outputs:\n-            outputs[change_address] += float(change_amount)\n-        else:\n-            outputs[change_address] = float(change_amount)\n-\n-    rawtx = bitcoind.createrawtransaction(inputs, outputs)\n-    signed_rawtx = bitcoind.signrawtransaction(rawtx)\n-    if not signed_rawtx[\"complete\"]:\n-        sys.stderr.write(\"signrawtransaction failed\\n\")\n-        sys.exit(1)\n-    txdata = signed_rawtx[\"hex\"]\n-\n-    return txdata\n-\n-def compute_amount_in(bitcoind, txinfo):\n-    result = Decimal(\"0.0\")\n-    for vin in txinfo['vin']:\n-        in_info = bitcoind.getrawtransaction(vin['txid'], 1)\n-        vout = in_info['vout'][vin['vout']]\n-        result = result + vout['value']\n-    return result\n-\n-def compute_amount_out(txinfo):\n-    result = Decimal(\"0.0\")\n-    for vout in txinfo['vout']:\n-        result = result + vout['value']\n-    return result\n-\n-def sanity_test_fee(bitcoind, txdata_hex, max_fee):\n-    class FeeError(RuntimeError):\n-        pass\n-    try:\n-        txinfo = bitcoind.decoderawtransaction(txdata_hex)\n-        total_in = compute_amount_in(bitcoind, txinfo)\n-        total_out = compute_amount_out(txinfo)\n-        if total_in-total_out > max_fee:\n-            raise FeeError(\"Rejecting transaction, unreasonable fee of \"+str(total_in-total_out))\n-\n-        tx_size = len(txdata_hex)/2\n-        kb = tx_size/1000  # integer division rounds down\n-        if kb > 1 and fee < BASE_FEE:\n-            raise FeeError(\"Rejecting no-fee transaction, larger than 1000 bytes\")\n-        if total_in < 0.01 and fee < BASE_FEE:\n-            raise FeeError(\"Rejecting no-fee, tiny-amount transaction\")\n-        # Exercise for the reader: compute transaction priority, and\n-        # warn if this is a very-low-priority transaction\n-\n-    except FeeError as err:\n-        sys.stderr.write((str(err)+\"\\n\"))\n-        sys.exit(1)\n-\n-def main():\n-    import optparse\n-\n-    parser = optparse.OptionParser(usage=\"%prog [options]\")\n-    parser.add_option(\"--from\", dest=\"fromaddresses\", default=None,\n-                      help=\"addresses to get bitcoins from\")\n-    parser.add_option(\"--to\", dest=\"to\", default=None,\n-                      help=\"address to get send bitcoins to\")\n-    parser.add_option(\"--amount\", dest=\"amount\", default=None,\n-                      help=\"amount to send\")\n-    parser.add_option(\"--fee\", dest=\"fee\", default=\"0.0\",\n-                      help=\"fee to include\")\n-    parser.add_option(\"--datadir\", dest=\"datadir\", default=determine_db_dir(),\n-                      help=\"location of bitcoin.conf file with RPC username/password (default: %default)\")\n-    parser.add_option(\"--testnet\", dest=\"testnet\", default=False, action=\"store_true\",\n-                      help=\"Use the test network\")\n-    parser.add_option(\"--dry_run\", dest=\"dry_run\", default=False, action=\"store_true\",\n-                      help=\"Don't broadcast the transaction, just create and print the transaction data\")\n-\n-    (options, args) = parser.parse_args()\n-\n-    check_json_precision()\n-    config = read_bitcoin_config(options.datadir)\n-    if options.testnet: config['testnet'] = True\n-    bitcoind = connect_JSON(config)\n-\n-    if options.amount is None:\n-        address_summary = list_available(bitcoind)\n-        for address,info in address_summary.iteritems():\n-            n_transactions = len(info['outputs'])\n-            if n_transactions > 1:\n-                print(\"%s %.8f %s (%d transactions)\"%(address, info['total'], info['account'], n_transactions))\n-            else:\n-                print(\"%s %.8f %s\"%(address, info['total'], info['account']))\n-    else:\n-        fee = Decimal(options.fee)\n-        amount = Decimal(options.amount)\n-        while unlock_wallet(bitcoind) == False:\n-            pass # Keep asking for passphrase until they get it right\n-        txdata = create_tx(bitcoind, options.fromaddresses.split(\",\"), options.to, amount, fee)\n-        sanity_test_fee(bitcoind, txdata, amount*Decimal(\"0.01\"))\n-        if options.dry_run:\n-            print(txdata)\n-        else:\n-            txid = bitcoind.sendrawtransaction(txdata)\n-            print(txid)\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "573a71a675312d3ce110bc60b788964116d9a0e4",
        "filename": "contrib/testgen/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -2,7 +2,7 @@\n \n Utilities to generate test vectors for the data-driven Bitcoin tests.\n \n-Usage: \n+Usage:\n \n-    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n-    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n\\ No newline at end of file\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py valid 50 > ../../src/test/data/key_io_keys_valid.json\n+    PYTHONPATH=../../test/functional/test_framework ./gen_key_io_test_vectors.py invalid 50 > ../../src/test/data/key_io_keys_invalid.json"
      },
      {
        "sha": "da67cb2d9052e709a05c630bfa691b7c680db03b",
        "filename": "contrib/testgen/base58.py",
        "status": "modified",
        "additions": 21,
        "deletions": 10,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193",
        "patch": "@@ -1,3 +1,6 @@\n+# Copyright (c) 2012-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n Bitcoin base58 encoding and decoding.\n \n@@ -25,7 +28,9 @@ def b58encode(v):\n     \"\"\"\n     long_value = 0\n     for (i, c) in enumerate(v[::-1]):\n-        long_value += (256**i) * ord(c)\n+        if isinstance(c, str):\n+            c = ord(c)\n+        long_value += (256**i) * c\n \n     result = ''\n     while long_value >= __b58base:\n@@ -38,17 +43,21 @@ def b58encode(v):\n     # leading 0-bytes in the input become leading-1s\n     nPad = 0\n     for c in v:\n-        if c == '\\0': nPad += 1\n-        else: break\n+        if c == 0:\n+            nPad += 1\n+        else:\n+            break\n \n     return (__b58chars[0]*nPad) + result\n \n def b58decode(v, length = None):\n     \"\"\" decode v into a string of len bytes\n     \"\"\"\n     long_value = 0\n-    for (i, c) in enumerate(v[::-1]):\n-        long_value += __b58chars.find(c) * (__b58base**i)\n+    for i, c in enumerate(v[::-1]):\n+        pos = __b58chars.find(c)\n+        assert pos != -1\n+        long_value += pos * (__b58base**i)\n \n     result = bytes()\n     while long_value >= 256:\n@@ -59,10 +68,12 @@ def b58decode(v, length = None):\n \n     nPad = 0\n     for c in v:\n-        if c == __b58chars[0]: nPad += 1\n-        else: break\n+        if c == __b58chars[0]:\n+            nPad += 1\n+            continue\n+        break\n \n-    result = chr(0)*nPad + result\n+    result = bytes(nPad) + result\n     if length is not None and len(result) != length:\n         return None\n \n@@ -81,7 +92,6 @@ def b58decode_chk(v):\n     result = b58decode(v)\n     if result is None:\n         return None\n-    h3 = checksum(result[:-4])\n     if result[-4:] == checksum(result[:-4]):\n         return result[:-4]\n     else:\n@@ -90,7 +100,8 @@ def b58decode_chk(v):\n def get_bcaddress_version(strAddress):\n     \"\"\" Returns None if strAddress is invalid.  Otherwise returns integer version of address. \"\"\"\n     addr = b58decode_chk(strAddress)\n-    if addr is None or len(addr)!=21: return None\n+    if addr is None or len(addr)!=21:\n+        return None\n     version = addr[0]\n     return ord(version)\n "
      },
      {
        "sha": "181343695363a4ed7a9965fc4cf0de72fc7f32ce",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "a00acb1f41fe478fd332ba1deab7729dbaf19be1",
        "filename": "contrib/testgen/gen_key_io_test_vectors.py",
        "status": "added",
        "additions": 249,
        "deletions": 0,
        "changes": 249,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/testgen/gen_key_io_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/testgen/gen_key_io_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_key_io_test_vectors.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "5d6d8264442fb8b49aa3d1e1c4c0547e2fb29dad",
        "filename": "contrib/tidy_datadir.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "744b8ee70fa4b6cdb5ac989016bd2410c6479072",
        "filename": "contrib/valgrind.supp",
        "status": "added",
        "additions": 199,
        "deletions": 0,
        "changes": 199,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "e95a57586ff1c34fef56f4d851934f0d881bbd8c",
        "filename": "contrib/verify-commits/README.md",
        "status": "modified",
        "additions": 38,
        "deletions": 7,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "c572806f2612e8c6cec07251e232e4d342ab3186",
        "filename": "contrib/verify-commits/allow-incorrect-sha512-commits",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/allow-incorrect-sha512-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/allow-incorrect-sha512-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-incorrect-sha512-commits?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "3abf82e529cbbbc766d0b7f7c4028d7721eb6755",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "modified",
        "additions": 504,
        "deletions": 0,
        "changes": 504,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "7aab274b9a848fce47a53acf71b54dfb1bf3db0e",
        "filename": "contrib/verify-commits/allow-unclean-merge-commits",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/allow-unclean-merge-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/allow-unclean-merge-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-unclean-merge-commits?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "db5bfce208ef18e72d8643f83e773723ccd39116",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 42,
        "deletions": 10,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "a26791f0d1299ee5d4ee87dc2890e6d531f7c459",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "27fede6277616c3cfe500c662636e5449e482b5b",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "7d41f90ad70ef87caa0ce40bee269ff9d61d9c05",
        "filename": "contrib/verify-commits/trusted-sha512-root-commit",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/trusted-sha512-root-commit",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/trusted-sha512-root-commit",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-sha512-root-commit?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "7e46c6fd47733fc35d3194faf0399f96640ca2af",
        "filename": "contrib/verify-commits/verify-commits.py",
        "status": "added",
        "additions": 165,
        "deletions": 0,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/verify-commits.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verify-commits/verify-commits.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "5219331e2e5bc7da41ac1175662ba0800bfea62a",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 58,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "4209fdb3644e558c029bacc9a02ad9823b120eb6",
        "filename": "contrib/verifybinaries/README.md",
        "status": "modified",
        "additions": 29,
        "deletions": 1,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "4296998631cff715d429c5b203c41b53f8e722e0",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "modified",
        "additions": 84,
        "deletions": 26,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "31720e72e7081d61a6905adbfeabdc8d15a517f6",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "5bc5dc58094a7e4d800cbd4cc091243c2d990898",
        "filename": "contrib/windeploy/win-codesign.cert",
        "status": "added",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/windeploy/win-codesign.cert",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/windeploy/win-codesign.cert",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/win-codesign.cert?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "06893407f5fef454ad17da0eabdfa0c0947a6b8d",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 74,
        "deletions": 30,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "19c506ce5447d4b9099f741fd33f800d101bcf6d",
        "filename": "depends/.gitignore",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "f81bc3001bac1441f23bf7d5a3bc00049f716cff",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 43,
        "deletions": 10,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "93f619983fd99e2327bdbd04aab40f52ee504e8b",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 77,
        "deletions": 10,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "eb587fca890e939d86d996ef34355db213bde4d8",
        "filename": "depends/builders/darwin.mk",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "7f9ebbe31097dff5e381dceffadbf64502ab3d46",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 540,
        "deletions": 331,
        "changes": 871,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "c5731e5269a7f87784e0e01fd893eaf5dc996bba",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 19,
        "deletions": 16,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "a318a46868500fbeea993e693e32701041ffad1b",
        "filename": "depends/config.sub",
        "status": "modified",
        "additions": 1249,
        "deletions": 1271,
        "changes": 2520,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "0a6f2e644219008dcb4cefe4d7a152e838e9b66d",
        "filename": "depends/description.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "a4434b5167ad970a184cb64dd796b3bc54d5662f",
        "filename": "depends/funcs.mk",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "969ec2a1cb047f2895e17402012d637534f49b7a",
        "filename": "depends/hosts/android.mk",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/hosts/android.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/hosts/android.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/android.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "1f88c209cf43bf76cb8f2fa6a9b74f96d483f7a7",
        "filename": "depends/hosts/darwin.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "144e5f88b7820ae9d920f1d0e5ad850c44ca67d2",
        "filename": "depends/hosts/default.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/hosts/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/hosts/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/default.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "7ed20ea1297dcad84173c4ec085dee714f87f22f",
        "filename": "depends/packages.md",
        "status": "modified",
        "additions": 57,
        "deletions": 6,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "b679438c6f65af33a263b714a4f3017bee964dcd",
        "filename": "depends/packages/bdb.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "cd0e70fb1c18fa879a7575431758203854929acd",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 13,
        "deletions": 9,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "8ac9ab742bfe48ca5b57f7dde876fc817a268c65",
        "filename": "depends/packages/dbus.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/dbus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/dbus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/dbus.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "902fe43be267919d8d71c44d9b6dea5cea9928d1",
        "filename": "depends/packages/expat.mk",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "128599ba773326b87901dd219946831838e39c80",
        "filename": "depends/packages/fontconfig.mk",
        "status": "modified",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "a1584608e19f714ca190875aae124edd33a1456a",
        "filename": "depends/packages/freetype.mk",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "fc60323b1c918a8229f8ba4b04d63310b4d98ec5",
        "filename": "depends/packages/libICE.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/libICE.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/libICE.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libICE.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "0f9307ca76acb8edb8dc892cefc046627f111654",
        "filename": "depends/packages/libSM.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/libSM.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/libSM.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libSM.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "178d592ee63ff9d0f74de6029b4c7becdc850367",
        "filename": "depends/packages/libX11.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/libX11.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/libX11.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libX11.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "4c55c2df04b5cd50f1af5ae63bab275d7c1284ac",
        "filename": "depends/packages/libXau.mk",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "4db836066f96e37cf7834fcf10de4da331b1fbe1",
        "filename": "depends/packages/libXext.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/libXext.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/libXext.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXext.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "eb45e14f6fb95b19df8cd39d659f2564fbe75639",
        "filename": "depends/packages/libevent.mk",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "2204b381958b8f0be875308764df849b62e9af40",
        "filename": "depends/packages/libxcb.mk",
        "status": "modified",
        "additions": 18,
        "deletions": 4,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "fdbe22cda63d466b31c727d1eb61fcc4313e4e33",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "c3054cbd1a16e66d8ff592b27bdc7fc7a12c0f2c",
        "filename": "depends/packages/native_biplist.mk",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "9216e175983a9b8555778d731aa0110ff64ac364",
        "filename": "depends/packages/native_ccache.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "a065256c1c1efdb295c922e9a53ca052585fa45e",
        "filename": "depends/packages/native_cctools.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "8243458ec858ed045ff16219b36ff9f64512e099",
        "filename": "depends/packages/native_cdrkit.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/native_cdrkit.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/native_cdrkit.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cdrkit.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "e0ae0cec700e921cdfc6c4bdc9760467655dcb4d",
        "filename": "depends/packages/native_comparisontool.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/native_comparisontool.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/native_comparisontool.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_comparisontool.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "f99b689ecdc7406233dd36191a592be37aeed931",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "8493f1d9793d7c5d21a9035b9f56ffe471945361",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "e60b99dccc98ce44512e0026a712bca1371f5855",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "modified",
        "additions": 7,
        "deletions": 13,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "ce50b366fa74f3fbed838624f9d7ec58396ace02",
        "filename": "depends/packages/native_protobuf.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/native_protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/native_protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_protobuf.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "5ee9f17a63235a9d68f74389566f1f257c182d3c",
        "filename": "depends/packages/openssl.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 78,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "d8ccb208ccd013e2f00eadb51be95ff0d86fcbc8",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "54d3fd924519be2ed612830e24c3baf25629c7fa",
        "filename": "depends/packages/protobuf.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "d1687883bcd5197372367e4a9a5f029594f9f273",
        "filename": "depends/packages/qrencode.mk",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "efa76965d5af5f894cb34eb6f0a95f695324446b",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 137,
        "deletions": 53,
        "changes": 190,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "8fb30a5c4471cfe1b4204c4507a103d37ba5a067",
        "filename": "depends/packages/qt46.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 66,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/qt46.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/qt46.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt46.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "a16fee270e87a56326a3091dbdea25cdbe334648",
        "filename": "depends/packages/rapidcheck.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/rapidcheck.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/rapidcheck.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/rapidcheck.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "01203a0718af93deff60d84fb337848e79ae661e",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "98a11eb4974f8b25bf0f8c75ca1b0f0de4d5d1b9",
        "filename": "depends/packages/xextproto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/xextproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/xextproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xextproto.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "6bd867d02b20f4cf46da0b73baa5fd1fab68f6b9",
        "filename": "depends/packages/xproto.mk",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "99eefa6d5ea24b2d2f4e5ecf38b07390432a8549",
        "filename": "depends/packages/xtrans.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/xtrans.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/packages/xtrans.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xtrans.mk?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "6f35ede24850ad76484f76fc1f607a8bd158de65",
        "filename": "depends/packages/zeromq.mk",
        "status": "modified",
        "additions": 18,
        "deletions": 6,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "acb02020a80b2424fe6080a0b64b8ac54d33df62",
        "filename": "depends/packages/zlib.mk",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "58695c11f5d976bd163429884e02d9a7f6f4eb4d",
        "filename": "depends/patches/libevent/reuseaddr.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/patches/libevent/reuseaddr.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/patches/libevent/reuseaddr.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/reuseaddr.patch?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "f346c8f2cff8b040cc534c32402ccf92229d8c05",
        "filename": "depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_libdmg-hfsplus/remove-libcrypto-dependency.patch?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "1a32340be5b13ae1d5be3e775462c3052c12953a",
        "filename": "depends/patches/native_mac_alias/python3.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/patches/native_mac_alias/python3.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/patches/native_mac_alias/python3.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_mac_alias/python3.patch?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "c7dbebedce831edba990aeecc2dd9c2a5941430e",
        "filename": "depends/patches/qt/fix-xcb-include-order.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 49,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/patches/qt/fix-xcb-include-order.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/patches/qt/fix-xcb-include-order.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix-xcb-include-order.patch?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "2f6ff00f40c253c95d5bc62e887b032eac22055e",
        "filename": "depends/patches/qt/fix_android_jni_static.patch",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_android_jni_static.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_android_jni_static.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_jni_static.patch?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "13bfff9776474028c5165f9e3d5e64bee3d576e5",
        "filename": "depends/patches/qt/fix_android_qmake_conf.patch",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_android_qmake_conf.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_android_qmake_conf.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_android_qmake_conf.patch?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "0d7dd647debca93eb5383ee72f6d4db573dabaac",
        "filename": "depends/patches/qt/fix_configure_mac.patch",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_configure_mac.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_configure_mac.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_configure_mac.patch?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "f868ca25775547188620644ae02881edeaa06a8d",
        "filename": "depends/patches/qt/fix_no_printer.patch",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_no_printer.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_no_printer.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_no_printer.patch?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "34302a9f2d2eb61117a274a53c8cfe1877c61246",
        "filename": "depends/patches/qt/fix_qt_pkgconfig.patch",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_qt_pkgconfig.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_qt_pkgconfig.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qt_pkgconfig.patch?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "c1b07fe23afdbd7a2f204811e2aad132bd2d9dff",
        "filename": "depends/patches/qt/fix_rcc_determinism.patch",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_rcc_determinism.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_rcc_determinism.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_rcc_determinism.patch?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "e7f29f01f9cd7f250b86bbd038175aa6a0fb35b0",
        "filename": "depends/patches/qt/fix_riscv64_arch.patch",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_riscv64_arch.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/fix_riscv64_arch.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_riscv64_arch.patch?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "337d0eb9caf6eaf1bfad8aa24853063c96f6b85b",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "975366e61229c891974f60f91a74e8c9f7a62d5a",
        "filename": "depends/patches/qt/mingw-uuidof.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/patches/qt/mingw-uuidof.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/patches/qt/mingw-uuidof.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mingw-uuidof.patch?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      },
      {
        "sha": "fe82c2c73cb09611da2be6ccbe274d4191bc1ad8",
        "filename": "depends/patches/qt/no-xlib.patch",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/no-xlib.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35dac18b7d0892d20744bb0217f3a7e21baa1193/depends/patches/qt/no-xlib.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/no-xlib.patch?ref=35dac18b7d0892d20744bb0217f3a7e21baa1193"
      },
      {
        "sha": "0b49c050dcc1f37fc86d289ecd7bf9b1c2607206",
        "filename": "depends/patches/qt/pidlist_absolute.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc94b87487824c6fba45788facf96faba97a4aa6/depends/patches/qt/pidlist_absolute.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc94b87487824c6fba45788facf96faba97a4aa6/depends/patches/qt/pidlist_absolute.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/pidlist_absolute.patch?ref=bc94b87487824c6fba45788facf96faba97a4aa6"
      }
    ]
  }
]