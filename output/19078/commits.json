[
  {
    "sha": "8d600d6b3eacd3d57c2628886dcfb2b3de72a362",
    "node_id": "C_kwDOABII59oAKDhkNjAwZDZiM2VhY2QzZDU3YzI2Mjg4ODZkY2ZiMmIzZGU3MmEzNjI",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-27T12:54:28Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-09-28T09:58:14Z"
      },
      "message": "test: Add salvage test for wallet tool",
      "tree": {
        "sha": "dfd73f83ced5ab475f8e3a9b913661fa269624e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfd73f83ced5ab475f8e3a9b913661fa269624e4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d600d6b3eacd3d57c2628886dcfb2b3de72a362",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d600d6b3eacd3d57c2628886dcfb2b3de72a362",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8d600d6b3eacd3d57c2628886dcfb2b3de72a362",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d600d6b3eacd3d57c2628886dcfb2b3de72a362/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9d0cec4991ab057557af9992daa4c8146a9b9d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9d0cec4991ab057557af9992daa4c8146a9b9d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9d0cec4991ab057557af9992daa4c8146a9b9d0"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 21,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c510254735f963b771ca9cb1551563936f605b60",
        "filename": "test/functional/tool_wallet.py",
        "status": "modified",
        "additions": 21,
        "deletions": 2,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d600d6b3eacd3d57c2628886dcfb2b3de72a362/test/functional/tool_wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d600d6b3eacd3d57c2628886dcfb2b3de72a362/test/functional/tool_wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/tool_wallet.py?ref=8d600d6b3eacd3d57c2628886dcfb2b3de72a362",
        "patch": "@@ -6,6 +6,7 @@\n \n import hashlib\n import os\n+import random\n import stat\n import subprocess\n import textwrap\n@@ -34,7 +35,10 @@ def bitcoin_wallet_process(self, *args):\n         if self.options.descriptors and 'create' in args:\n             default_args.append('-descriptors')\n \n-        return subprocess.Popen([binary] + default_args + list(args), stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n+        process_args = default_args + list(args)\n+        self.log.debug('Running wallet tool with args \"{}\"'.format('\" \"'.join(process_args)))\n+\n+        return subprocess.Popen([binary] + process_args, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n \n     def assert_raises_tool_error(self, error, *args):\n         p = self.bitcoin_wallet_process(*args)\n@@ -309,12 +313,27 @@ def test_getwalletinfo_on_different_wallet(self):\n     def test_salvage(self):\n         # TODO: Check salvage actually salvages and doesn't break things. https://github.com/bitcoin/bitcoin/issues/7463\n         self.log.info('Check salvage')\n-        self.start_node(0)\n+        self.start_node(0, ['-nowallet'])\n         self.nodes[0].createwallet(\"salvage\")\n+        address_gen_rand = random.Random(123)\n+\n+        def gna():\n+            return self.nodes[0].getnewaddress(address_type=address_gen_rand.choice(['legacy', 'p2sh-segwit', 'bech32']))\n+\n+        for _ in range(101):\n+            # Generate to fresh address each time\n+            self.nodes[0].generatetoaddress(1, gna())\n+        self.nodes[0].sendmany(amounts={gna(): 0.05 for _ in range(50)})\n+        self.nodes[0].sendmany(amounts={gna(): 0.05 for _ in range(50)})\n+        balances_before = self.nodes[0].getbalances()\n         self.stop_node(0)\n \n         self.assert_tool_output('', '-wallet=salvage', 'salvage')\n \n+        self.start_node(0, ['-nowallet', '-wallet=salvage'])\n+        assert_equal(balances_before, self.nodes[0].getbalances())\n+        self.stop_node(0)\n+\n     def test_dump_createfromdump(self):\n         self.start_node(0)\n         self.nodes[0].createwallet(\"todump\")"
      }
    ]
  }
]