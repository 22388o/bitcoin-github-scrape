[
  {
    "sha": "476eb7eb53f680494952865a823e5cf9459da2b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NzZlYjdlYjUzZjY4MDQ5NDk1Mjg2NWE4MjNlNWNmOTQ1OWRhMmI5",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-08-24T01:46:12Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-08-24T01:46:12Z"
      },
      "message": "Update linearize scripts.\n\nBreak into two steps:\n* Generate hash list\n* Build data file(s) from local bitcoind blocks/ directory.\n\nThis supports building one large bootstrap.dat, or multiple\nsmaller blocks/blkNNNNN.dat files.",
      "tree": {
        "sha": "685aff1a7a7b18237343de12fd539e877a594bd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/685aff1a7a7b18237343de12fd539e877a594bd6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/476eb7eb53f680494952865a823e5cf9459da2b9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/476eb7eb53f680494952865a823e5cf9459da2b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/476eb7eb53f680494952865a823e5cf9459da2b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/476eb7eb53f680494952865a823e5cf9459da2b9/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "57fe1eaadc7c404b199239351e7bd80f48f3bcba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57fe1eaadc7c404b199239351e7bd80f48f3bcba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57fe1eaadc7c404b199239351e7bd80f48f3bcba"
      }
    ],
    "stats": {
      "total": 265,
      "additions": 226,
      "deletions": 39
    },
    "files": [
      {
        "sha": "8d06d53b104337be758887ee4508c80e67764ede",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 29,
        "deletions": 2,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/476eb7eb53f680494952865a823e5cf9459da2b9/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/476eb7eb53f680494952865a823e5cf9459da2b9/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=476eb7eb53f680494952865a823e5cf9459da2b9",
        "patch": "@@ -1,2 +1,29 @@\n-### Linearize ###\n-Construct a linear, no-fork, best version of the blockchain.\n\\ No newline at end of file\n+# Linearize\n+Construct a linear, no-fork, best version of the blockchain.\n+\n+## Step 1: Download hash list\n+\n+   $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n+\n+Required configuration file settings for linearize-hashes:\n+* RPC: rpcuser, rpcpassword\n+\n+Optional config file setting for linearize-hashes:\n+* RPC: host, port\n+* Block chain: min_height, max_height\n+\n+## Step 2: Copy local block data\n+\n+   $ ./linearize-data.py linearize.cfg\n+\n+Required configuration file settings:\n+* \"input\": bitcoind blocks/ directory containing blkNNNNN.dat\n+* \"hashlist\": text file containing list of block hashes, linearized-hashes.py\n+output.\n+* \"output_file\": bootstrap.dat\n+      or\n+* \"output\": output directory for linearized blocks/blkNNNNN.dat output\n+\n+Optional config file setting for linearize-data:\n+* \"netmagic\": network magic number\n+"
      },
      {
        "sha": "9c3270d653824f6cae34eda6d6308418e15e7c79",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/476eb7eb53f680494952865a823e5cf9459da2b9/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/476eb7eb53f680494952865a823e5cf9459da2b9/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=476eb7eb53f680494952865a823e5cf9459da2b9",
        "patch": "@@ -1,12 +1,16 @@\n \n-# bitcoind RPC settings\n+# bitcoind RPC settings (linearize-hashes)\n rpcuser=someuser\n rpcpassword=somepassword\n host=127.0.0.1\n port=8332\n \n-# bootstrap.dat settings\n+# bootstrap.dat hashlist settings (linearize-hashes)\n+max_height=313000\n+\n+# bootstrap.dat input/output settings (linearize-data)\n netmagic=f9beb4d9\n-max_height=279000\n-output=bootstrap.dat\n+input=/home/example/.bitcoin/blocks\n+output_file=/home/example/Downloads/bootstrap.dat\n+hashlist=hashlist.txt\n "
      },
      {
        "sha": "77bae6e3c65522d3d7f8f9975b651cd27008eb9b",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "added",
        "additions": 182,
        "deletions": 0,
        "changes": 182,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/476eb7eb53f680494952865a823e5cf9459da2b9/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/476eb7eb53f680494952865a823e5cf9459da2b9/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=476eb7eb53f680494952865a823e5cf9459da2b9",
        "patch": "@@ -0,0 +1,182 @@\n+#!/usr/bin/python\n+#\n+# linearize-data.py: Construct a linear, no-fork version of the chain.\n+#\n+# Copyright (c) 2013 The Bitcoin developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+import json\n+import struct\n+import re\n+import base64\n+import httplib\n+import sys\n+import hashlib\n+\n+MAX_OUT_SZ = 128 * 1024 * 1024\n+\n+settings = {}\n+\n+\n+def uint32(x):\n+\treturn x & 0xffffffffL\n+\n+def bytereverse(x):\n+\treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n+\t\t       (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n+\n+def bufreverse(in_buf):\n+\tout_words = []\n+\tfor i in range(0, len(in_buf), 4):\n+\t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n+\t\tout_words.append(struct.pack('@I', bytereverse(word)))\n+\treturn ''.join(out_words)\n+\n+def wordreverse(in_buf):\n+\tout_words = []\n+\tfor i in range(0, len(in_buf), 4):\n+\t\tout_words.append(in_buf[i:i+4])\n+\tout_words.reverse()\n+\treturn ''.join(out_words)\n+\n+def calc_hdr_hash(rawblock):\n+\tblk_hdr = rawblock[:80]\n+\n+\thash1 = hashlib.sha256()\n+\thash1.update(blk_hdr)\n+\thash1_o = hash1.digest()\n+\n+\thash2 = hashlib.sha256()\n+\thash2.update(hash1_o)\n+\thash2_o = hash2.digest()\n+\n+\treturn hash2_o\n+\n+def calc_hash_str(rawblock):\n+\thash = calc_hdr_hash(rawblock)\n+\thash = bufreverse(hash)\n+\thash = wordreverse(hash)\n+\thash_str = hash.encode('hex')\n+\treturn hash_str\n+\n+def get_block_hashes(settings):\n+\tblkindex = []\n+\tf = open(settings['hashlist'], \"r\")\n+\tfor line in f:\n+\t\tline = line.rstrip()\n+\t\tblkindex.append(line)\n+\n+\tprint(\"Read \" + str(len(blkindex)) + \" hashes\")\n+\n+\treturn blkindex\n+\n+def mkblockset(blkindex):\n+\tblkmap = {}\n+\tfor hash in blkindex:\n+\t\tblkmap[hash] = True\n+\treturn blkmap\n+\n+def copydata(settings, blkindex, blkset):\n+\tinFn = 0\n+\tinF = None\n+\toutFn = 0\n+\toutsz = 0\n+\toutF = None\n+\tblkCount = 0\n+\n+\tfileOutput = True\n+\tif 'output' in settings:\n+\t\tfileOutput = False\n+\n+\twhile True:\n+\t\tif not inF:\n+\t\t\tfname = \"%s/blk%05d.dat\" % (settings['input'], inFn)\n+\t\t\tprint(\"Input file\" + fname)\n+\t\t\tinF = open(fname, \"rb\")\n+\n+\t\tinhdr = inF.read(8)\n+\t\tif (not inhdr or (inhdr[0] == \"\\0\")):\n+\t\t\tinF.close()\n+\t\t\tinF = None\n+\t\t\tinFn = inFn + 1\n+\t\t\tcontinue\n+\n+\t\tinMagic = inhdr[:4]\n+\t\tif (inMagic != settings['netmagic']):\n+\t\t\tprint(\"Invalid magic:\" + inMagic)\n+\t\t\treturn\n+\t\tinLenLE = inhdr[4:]\n+\t\tsu = struct.unpack(\"<I\", inLenLE)\n+\t\tinLen = su[0]\n+\t\trawblock = inF.read(inLen)\n+\n+\t\thash_str = calc_hash_str(rawblock)\n+\t\tif not hash_str in blkset:\n+\t\t\tprint(\"Skipping unknown block \" + hash_str)\n+\t\t\tcontinue\n+\n+\t\tif not fileOutput and ((outsz + inLen) > MAX_OUT_SZ):\n+\t\t\toutF.close()\n+\t\t\toutF = None\n+\t\t\toutFn = outFn + 1\n+\t\t\toutsz = 0\n+\t\tif not outF:\n+\t\t\tif fileOutput:\n+\t\t\t\tfname = settings['output_file']\n+\t\t\telse:\n+\t\t\t\tfname = \"%s/blk%05d.dat\" % (settings['output'], outFn)\n+\t\t\tprint(\"Output file\" + fname)\n+\t\t\toutF = open(fname, \"wb\")\n+\n+\t\toutF.write(inhdr)\n+\t\toutF.write(rawblock)\n+\t\toutsz = outsz + inLen + 8\n+\n+\t\tblkCount = blkCount + 1\n+\n+\t\tif (blkCount % 1000) == 0:\n+\t\t\tprint(\"Wrote \" + str(blkCount) + \" blocks\")\n+\n+if __name__ == '__main__':\n+\tif len(sys.argv) != 2:\n+\t\tprint \"Usage: linearize-data.py CONFIG-FILE\"\n+\t\tsys.exit(1)\n+\n+\tf = open(sys.argv[1])\n+\tfor line in f:\n+\t\t# skip comment lines\n+\t\tm = re.search('^\\s*#', line)\n+\t\tif m:\n+\t\t\tcontinue\n+\n+\t\t# parse key=value lines\n+\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+\t\tif m is None:\n+\t\t\tcontinue\n+\t\tsettings[m.group(1)] = m.group(2)\n+\tf.close()\n+\n+\tif 'netmagic' not in settings:\n+\t\tsettings['netmagic'] = 'f9beb4d9'\n+\tif 'input' not in settings:\n+\t\tsettings['input'] = 'input'\n+\tif 'hashlist' not in settings:\n+\t\tsettings['hashlist'] = 'hashlist.txt'\n+\n+\tsettings['netmagic'] = settings['netmagic'].decode('hex')\n+\n+\tif 'output_file' not in settings and 'output' not in settings:\n+\t\tprint(\"Missing output file / directory\")\n+\t\tsys.exit(1)\n+\n+\tblkindex = get_block_hashes(settings)\n+\tblkset = mkblockset(blkindex)\n+\n+\tif not \"000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\" in blkset:\n+\t\tprint(\"not found\")\n+\telse:\n+\t\tcopydata(settings, blkindex, blkset)\n+\n+"
      },
      {
        "sha": "791b71bc3306069a7496dc3db379a3c1f28c5718",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "renamed",
        "additions": 7,
        "deletions": 33,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/476eb7eb53f680494952865a823e5cf9459da2b9/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/476eb7eb53f680494952865a823e5cf9459da2b9/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=476eb7eb53f680494952865a823e5cf9459da2b9",
        "patch": "@@ -1,7 +1,6 @@\n #!/usr/bin/python\n #\n-# linearize.py:  Construct a linear, no-fork, best version of the blockchain.\n-#\n+# linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n #\n # Copyright (c) 2013 The Bitcoin developers\n # Distributed under the MIT/X11 software license, see the accompanying\n@@ -15,9 +14,6 @@\n import httplib\n import sys\n \n-ERR_SLEEP = 15\n-MAX_NONCE = 1000000L\n-\n settings = {}\n \n class BitcoinRPC:\n@@ -62,34 +58,18 @@ def getblock(self, hash, verbose=True):\n \tdef getblockhash(self, index):\n \t\treturn self.rpc('getblockhash', [index])\n \n-def getblock(rpc, settings, n):\n-\thash = rpc.getblockhash(n)\n-\thexdata = rpc.getblock(hash, False)\n-\tdata = hexdata.decode('hex')\n-\n-\treturn data\n-\n-def get_blocks(settings):\n+def get_block_hashes(settings):\n \trpc = BitcoinRPC(settings['host'], settings['port'],\n \t\t\t settings['rpcuser'], settings['rpcpassword'])\n \n-\toutf = open(settings['output'], 'ab')\n-\n \tfor height in xrange(settings['min_height'], settings['max_height']+1):\n-\t\tdata = getblock(rpc, settings, height)\n-\n-\t\touthdr = settings['netmagic']\n-\t\touthdr += struct.pack(\"<i\", len(data))\n+\t\thash = rpc.getblockhash(height)\n \n-\t\toutf.write(outhdr)\n-\t\toutf.write(data)\n-\n-\t\tif (height % 1000) == 0:\n-\t\t\tsys.stdout.write(\"Wrote block \" + str(height) + \"\\n\")\n+\t\tprint(hash)\n \n if __name__ == '__main__':\n \tif len(sys.argv) != 2:\n-\t\tprint \"Usage: linearize.py CONFIG-FILE\"\n+\t\tprint \"Usage: linearize-hashes.py CONFIG-FILE\"\n \t\tsys.exit(1)\n \n \tf = open(sys.argv[1])\n@@ -106,27 +86,21 @@ def get_blocks(settings):\n \t\tsettings[m.group(1)] = m.group(2)\n \tf.close()\n \n-\tif 'netmagic' not in settings:\n-\t\tsettings['netmagic'] = 'f9beb4d9'\n-\tif 'output' not in settings:\n-\t\tsettings['output'] = 'bootstrap.dat'\n \tif 'host' not in settings:\n \t\tsettings['host'] = '127.0.0.1'\n \tif 'port' not in settings:\n \t\tsettings['port'] = 8332\n \tif 'min_height' not in settings:\n \t\tsettings['min_height'] = 0\n \tif 'max_height' not in settings:\n-\t\tsettings['max_height'] = 279000\n+\t\tsettings['max_height'] = 313000\n \tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n \t\tprint \"Missing username and/or password in cfg file\"\n \t\tsys.exit(1)\n \n-\tsettings['netmagic'] = settings['netmagic'].decode('hex')\n \tsettings['port'] = int(settings['port'])\n \tsettings['min_height'] = int(settings['min_height'])\n \tsettings['max_height'] = int(settings['max_height'])\n \n-\tget_blocks(settings)\n-\n+\tget_block_hashes(settings)\n ",
        "previous_filename": "contrib/linearize/linearize.py"
      }
    ]
  },
  {
    "sha": "b4a72a75b4795dffbe973b0ae287343df2dac13c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNGE3MmE3NWI0Nzk1ZGZmYmU5NzNiMGFlMjg3MzQzZGYyZGFjMTNj",
    "commit": {
      "author": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-08-24T02:59:16Z"
      },
      "committer": {
        "name": "Jeff Garzik",
        "email": "jgarzik@bitpay.com",
        "date": "2014-08-24T02:59:16Z"
      },
      "message": "contrib/linearize: split output files based on new-timestamp-year or max-file-size",
      "tree": {
        "sha": "b08c16770090458743b9d95b04e4314dede7c521",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b08c16770090458743b9d95b04e4314dede7c521"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4a72a75b4795dffbe973b0ae287343df2dac13c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a72a75b4795dffbe973b0ae287343df2dac13c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b4a72a75b4795dffbe973b0ae287343df2dac13c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a72a75b4795dffbe973b0ae287343df2dac13c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "476eb7eb53f680494952865a823e5cf9459da2b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/476eb7eb53f680494952865a823e5cf9459da2b9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/476eb7eb53f680494952865a823e5cf9459da2b9"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 39,
      "deletions": 9
    },
    "files": [
      {
        "sha": "b5c6e7824ed91ef79de8ba54dfae9550a50181d8",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a72a75b4795dffbe973b0ae287343df2dac13c/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a72a75b4795dffbe973b0ae287343df2dac13c/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=b4a72a75b4795dffbe973b0ae287343df2dac13c",
        "patch": "@@ -26,4 +26,7 @@ output.\n \n Optional config file setting for linearize-data:\n * \"netmagic\": network magic number\n+* \"max_out_sz\": maximum output file size (default 1000*1000*1000)\n+* \"split_year\": Split files when a new year is first seen, in addition to\n+reaching a maximum file size.\n "
      },
      {
        "sha": "071345f23a0b9c942bb96afe3d800acf7f4191b9",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a72a75b4795dffbe973b0ae287343df2dac13c/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a72a75b4795dffbe973b0ae287343df2dac13c/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=b4a72a75b4795dffbe973b0ae287343df2dac13c",
        "patch": "@@ -13,4 +13,5 @@ netmagic=f9beb4d9\n input=/home/example/.bitcoin/blocks\n output_file=/home/example/Downloads/bootstrap.dat\n hashlist=hashlist.txt\n+split_year=1\n "
      },
      {
        "sha": "ea94f25faeecd82d0e83b8c5017d7aacdeeb3bdd",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 35,
        "deletions": 9,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a72a75b4795dffbe973b0ae287343df2dac13c/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a72a75b4795dffbe973b0ae287343df2dac13c/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=b4a72a75b4795dffbe973b0ae287343df2dac13c",
        "patch": "@@ -14,8 +14,7 @@\n import httplib\n import sys\n import hashlib\n-\n-MAX_OUT_SZ = 128 * 1024 * 1024\n+import datetime\n \n settings = {}\n \n@@ -41,9 +40,7 @@ def wordreverse(in_buf):\n \tout_words.reverse()\n \treturn ''.join(out_words)\n \n-def calc_hdr_hash(rawblock):\n-\tblk_hdr = rawblock[:80]\n-\n+def calc_hdr_hash(blk_hdr):\n \thash1 = hashlib.sha256()\n \thash1.update(blk_hdr)\n \thash1_o = hash1.digest()\n@@ -54,13 +51,18 @@ def calc_hdr_hash(rawblock):\n \n \treturn hash2_o\n \n-def calc_hash_str(rawblock):\n-\thash = calc_hdr_hash(rawblock)\n+def calc_hash_str(blk_hdr):\n+\thash = calc_hdr_hash(blk_hdr)\n \thash = bufreverse(hash)\n \thash = wordreverse(hash)\n \thash_str = hash.encode('hex')\n \treturn hash_str\n \n+def get_blk_year(blk_hdr):\n+\tmembers = struct.unpack(\"<I\", blk_hdr[68:68+4])\n+\tdt = datetime.datetime.fromtimestamp(members[0])\n+\treturn dt.year\n+\n def get_block_hashes(settings):\n \tblkindex = []\n \tf = open(settings['hashlist'], \"r\")\n@@ -86,9 +88,14 @@ def copydata(settings, blkindex, blkset):\n \toutF = None\n \tblkCount = 0\n \n+\tlastYear = 0\n+\tsplitYear = False\n \tfileOutput = True\n+\tmaxOutSz = settings['max_out_sz']\n \tif 'output' in settings:\n \t\tfileOutput = False\n+\tif settings['split_year'] != 0:\n+\t\tsplitYear = True\n \n \twhile True:\n \t\tif not inF:\n@@ -111,17 +118,30 @@ def copydata(settings, blkindex, blkset):\n \t\tsu = struct.unpack(\"<I\", inLenLE)\n \t\tinLen = su[0]\n \t\trawblock = inF.read(inLen)\n+\t\tblk_hdr = rawblock[:80]\n \n-\t\thash_str = calc_hash_str(rawblock)\n+\t\thash_str = calc_hash_str(blk_hdr)\n \t\tif not hash_str in blkset:\n \t\t\tprint(\"Skipping unknown block \" + hash_str)\n \t\t\tcontinue\n \n-\t\tif not fileOutput and ((outsz + inLen) > MAX_OUT_SZ):\n+\t\tif not fileOutput and ((outsz + inLen) > maxOutSz):\n \t\t\toutF.close()\n \t\t\toutF = None\n \t\t\toutFn = outFn + 1\n \t\t\toutsz = 0\n+\n+\t\tif splitYear:\n+\t\t\tblkYear = get_blk_year(blk_hdr)\n+\t\t\tif blkYear > lastYear:\n+\t\t\t\tprint(\"New year \" + str(blkYear) + \" @ \" + hash_str)\n+\t\t\t\tlastYear = blkYear\n+\t\t\t\tif outF:\n+\t\t\t\t\toutF.close()\n+\t\t\t\t\toutF = None\n+\t\t\t\t\toutFn = outFn + 1\n+\t\t\t\t\toutsz = 0\n+\n \t\tif not outF:\n \t\t\tif fileOutput:\n \t\t\t\tfname = settings['output_file']\n@@ -164,7 +184,13 @@ def copydata(settings, blkindex, blkset):\n \t\tsettings['input'] = 'input'\n \tif 'hashlist' not in settings:\n \t\tsettings['hashlist'] = 'hashlist.txt'\n+\tif 'split_year' not in settings:\n+\t\tsettings['split_year'] = 0\n+\tif 'max_out_sz' not in settings:\n+\t\tsettings['max_out_sz'] = 1000L * 1000 * 1000\n \n+\tsettings['max_out_sz'] = long(settings['max_out_sz'])\n+\tsettings['split_year'] = int(settings['split_year'])\n \tsettings['netmagic'] = settings['netmagic'].decode('hex')\n \n \tif 'output_file' not in settings and 'output' not in settings:"
      }
    ]
  }
]