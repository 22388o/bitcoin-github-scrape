laanwj,2020-11-09 08:43:36,"TIL. \n\nConcept ACK.\n\nSomething could be said for also passing it in the non-debug case. After all, even without explicit debug information enabled, gcc adds some level of basic debug information like symbols, and yes this includes file paths:\n\n```\n$ strings -a src/bitcoind | grep /home/$USER|wc -l\n1524\n```\nNot all of these come from debug information though! They may also be fr",https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723861213,723861213,
laanwj,2020-11-09 08:54:45,"> They may also be from __FILE__ macro. Is there a flag for that? E.g.:\n\nFWIW there's, starting with GCC 8, also `-fmacro-prefix-map=old=new`. Go wild :slightly_smiling_face: \n",https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723867871,723867871,
sipa,2020-11-09 08:58:17,"And also a `-ffile-prefix-map=old=new`, apparently.",https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723869819,723869819,
ajtowns,2020-11-09 09:58:03,"> This sound sensible on first glance but does make me wonder how ccache ""knows"" this? When can it assume objects are portable between build directories. Does it explicitly pay attention to this flag?\n\nYeah:\n\n```sh\n$ strings /usr/bin/ccache | grep .-map\n-fdebug-prefix-map=\n-ffile-prefix-map=\n-fmacro-prefix-map=\n```\n\n> Not all of these come from debug information though! They ",https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723904643,723904643,
ajtowns,2020-11-09 10:13:46,Added `-fmacro-prefix-map` and made them conditional on ccache being enabled.,https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723913822,723913822,
laanwj,2020-11-09 10:36:41,"> Yeah:\n> $ strings /usr/bin/ccache | grep .-map\n> -fdebug-prefix-map=\n> -ffile-prefix-map=\n> -fmacro-prefix-map=\n\nThanks, good to know.\n\n> Ah, gcc and clang are both giving me relative paths for __FILE__ even without any special options.\n\nIt depends on what is passed to the compiler. I think for the macros they embed those paths literally. For the DWARF information, the absolu",https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723926652,723926652,
practicalswift,2020-11-09 12:02:01,Concept ACK: path name leaking should be avoided,https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-723970516,723970516,
ajtowns,2021-01-10 06:21:02,Anyone want to bump their acks from concept to reality?,https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-757424816,757424816,
practicalswift,2021-01-10 15:55:41,cr ACK 7abac98d3e3c1bc8ad66cb5c05184b9c5cc674d5: patch looks correct,https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-757498544,757498544,
MarcoFalke,2021-04-20 12:02:20,"Wouldn't it be easier to set `CCACHE_NOHASHDIR=1`? Sure, the paths in the debug information might be wrong, but does it matter?",https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-823217203,823217203,
ajtowns,2021-04-20 12:37:21,"> Wouldn't it be easier to set `CCACHE_NOHASHDIR=1`? Sure, the paths in the debug information might be wrong, but does it matter?\n\nAIUI, if the `__FILE__` macro doesn't match (ie what macro-prefix-map fixes), the preprocessed input to ccache will be different, causing ccache misses. debug-prefix-map fixes the deug info paths, and then triggers ccache to automatically set `CCACHE_NOHASHDIR=1`. ",https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-823238543,823238543,
MarcoFalke,2021-04-20 19:02:41,"Sure, just wanted to ask because the discussion didn't mention `CCACHE_NOHASHDIR` at all.",https://github.com/bitcoin/bitcoin/pull/20353#issuecomment-823527711,823527711,
