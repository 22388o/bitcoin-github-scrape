jtimon,2017-12-15T00:20:39Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/11904#issuecomment-351876406,351876406,
ryanofsky,2017-12-15T02:43:31Z,Suggest moving LockWalletDirectory to wallet/db.cpp and calling it from CDBEnv::Open instead of VerifyWallets. That way this will be compatible with #11687. Also would suggest renaming LockWalletDirectory to LockEnvDirectory to be a little more consistent with terminology used in that file (even though the file isn't totally consistent right now).,https://github.com/bitcoin/bitcoin/pull/11904#issuecomment-351897871,351897871,
meshcollider,2017-12-16T19:14:49Z,"@ryanofsky something like this? I had to probe the lock before calling open because of the weird database log backup thing when open fails, perhaps there is a cleaner way to do it e.g. returning different errors from open rather than just true/false. But I think this is ok",https://github.com/bitcoin/bitcoin/pull/11904#issuecomment-352204896,352204896,
meshcollider,2017-12-17T07:42:48Z,Removed the probing with a bit of a rework,https://github.com/bitcoin/bitcoin/pull/11904#issuecomment-352237886,352237886,
promag,2017-12-21T15:23:26Z,Tested ACK. Needs squash.,https://github.com/bitcoin/bitcoin/pull/11904#issuecomment-353377831,353377831,
meshcollider,2017-12-23T23:46:40Z,"Squashed and added a commit to modify the error message as suggested.\n\nNote travis failure on second commit is just because the last three tests were cancelled due to third commit being pushed before they started",https://github.com/bitcoin/bitcoin/pull/11904#issuecomment-353754724,353754724,
sipa,2017-12-26T07:06:10Z,utACK 005d4cdef7a7a9f98cf202db7542a7fd01e048b8,https://github.com/bitcoin/bitcoin/pull/11904#issuecomment-353929270,353929270,
meshcollider,2017-12-26T07:53:43Z,Thanks for the feedback @sipa ,https://github.com/bitcoin/bitcoin/pull/11904#issuecomment-353934275,353934275,
laanwj,2018-01-15T11:48:07Z,"utACK, needs rebase",https://github.com/bitcoin/bitcoin/pull/11904#issuecomment-357660855,357660855,
meshcollider,2018-01-16T06:06:14Z,Rebased,https://github.com/bitcoin/bitcoin/pull/11904#issuecomment-357862498,357862498,
laanwj,2018-01-16T10:11:24Z,"Tested ACK 2f3bd47\n```\n2018-01-16 10:09:49 Cannot obtain a lock on wallet directory /tmp/wallet1. Another instance of bitcoin may be using it.\n```\n",https://github.com/bitcoin/bitcoin/pull/11904#issuecomment-357913481,357913481,
promag,2017-12-17T00:45:25Z,"Nit, missing space after `catch`.",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157355132,157355132,src/wallet/db.cpp
promag,2017-12-17T00:47:52Z,"Use `restart_node`, and remove `stop_node` above?",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157355161,157355161,test/functional/multiwallet.py
promag,2017-12-17T09:48:55Z,"How about `bool Open(const fs::path& path, bool* is_locked = 0)`?",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157363498,157363498,src/wallet/db.h
meshcollider,2017-12-17T10:14:46Z,"Could do, but IMO doesn't simplify the code much, if we're returning something why not use return :)",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157364001,157364001,src/wallet/db.h
promag,2017-12-17T10:19:55Z,"Because you only care of `is_locked` when `Open` fails. For me `ENV_LOCKED` is the *reason* `Open` failed.\n\nAlso, you can avoid those `!= OPEN_OK` conditions.\n\nBut sure, consider my suggestion a nit.",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157364106,157364106,src/wallet/db.h
meshcollider,2017-12-17T10:23:35Z,"Ah that's true, ok :+1:",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157364214,157364214,src/wallet/db.h
ryanofsky,2017-12-18T13:35:39Z,"https://github.com/bitcoin/bitcoin/pull/11904/files#r157363498\n\nSeems fine to use either an enum or a bool, whichever you prefer. The real problem is that VerifyEnvironment is the wrong place for the rename/retry code to live. It creates a bizarre API because you can't reliably open an environment without making two different calls and pointlessly closing and reopening. It's also a bad divisio",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157484972,157484972,src/wallet/db.h
promag,2017-12-20T00:04:33Z,"Something wrong here, missing `}`?",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157908232,157908232,src/wallet/db.cpp
meshcollider,2017-12-20T00:35:56Z,"Yep oops, bad code move. Fixed.",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157912347,157912347,src/wallet/db.cpp
promag,2017-12-20T00:38:54Z,`= false`?,https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157912763,157912763,src/wallet/db.h
promag,2017-12-20T00:40:08Z,"BTW, how about:\n```cpp\nprivate:\n    bool Open(const fs::path& path, bool retry);\n\npublic:\n    bool Open(const fs::path& path) { return Open(path, true); }\n```\nthis way the *public* API remains, for instance, https://github.com/bitcoin/bitcoin/pull/11904/files#diff-5cd083d2c34da5f0ac380011f7b725d2R312 goes away.",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157912908,157912908,src/wallet/db.h
meshcollider,2017-12-20T00:49:39Z,"I'd prefer to leave it explicit I think, is there any other benefit to hiding the retry parameter?",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157914236,157914236,src/wallet/db.h
promag,2017-12-20T00:53:27Z,"It's an internal detail, you should not be able to call `Open(path, false)`, it's only there for the 2nd attempt.",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157914686,157914686,src/wallet/db.h
meshcollider,2017-12-20T01:08:54Z,"Its also called without retry here: \nhttps://github.com/MeshCollider/bitcoin/blob/f70ce89806a7f0ce1755e7d074f6e07753a85694/src/wallet/db.cpp#L436",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r157916549,157916549,src/wallet/db.h
promag,2017-12-21T10:49:42Z,"Ok, missed that.",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r158247611,158247611,src/wallet/db.h
ryanofsky,2017-12-21T16:16:16Z,"Didn't notice this before, and no need for a change now, but just in case #11687 is somehow merged before this PR, static variable here should move to CDBEnv instance variable. (A single static variable can't guard different database directories if different database directories may be opened during the lifetime of the process.)",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r158317339,158317339,src/wallet/db.cpp
ryanofsky,2017-12-21T16:22:32Z,"Might want to keep the previous generic error here (""Error initializing wallet database environment"") since this can happen in other conditions than failing to obtain the lock.",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r158318929,158318929,src/wallet/db.cpp
sipa,2017-12-25T14:51:56Z,"What if the walletdir is the same as the datadir? Won't there be a problem if both use the same lockfile? I would consider renaming this to `"".walletlock""` perhaps (which is also clearer to people who see the file).",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r158646847,158646847,src/wallet/db.cpp
sipa,2017-12-25T14:53:02Z,A lot in this function seems to be a duplication from `LockDataDirectory` in `init.cpp`. What do you think about abstracting them out to a utility function in `util.cpp` instead?,https://github.com/bitcoin/bitcoin/pull/11904#discussion_r158646896,158646896,src/wallet/db.cpp
sipa,2017-12-25T14:58:07Z,"Reading more, I think this is indeed advisable:\n\nFrom http://www.boost.org/doc/libs/1_55_0/doc/html/interprocess/synchronization_mechanisms.html#interprocess.synchronization_mechanisms.file_lock:\n> * It's unspecified if a file_lock synchronizes two threads from the same process.\n> * It's unspecified if a process can use two file_lock objects pointing to the same file.\n",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r158647046,158647046,src/wallet/db.cpp
meshcollider,2017-12-25T22:43:32Z,"Good point, fixed!",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r158655797,158655797,src/wallet/db.cpp
ryanofsky,2017-12-27T00:32:44Z,"From https://botbot.me/freenode/bitcoin-core-dev/msg/95065183/\n\n> I've been trying to work out why the last commit in #11904 is breaking the locking function, it works fine before that commit is added, but I can't work out why it doesn't work with that change. with a brand new walletdir, it creates the .walletlock file, but lock.try_lock() fails and the node crashes on startup, does anyone wit",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r158749359,158749359,src/util.cpp
meshcollider,2017-12-27T01:16:31Z,"Ah, of course. Fixed. Thank you!",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r158751015,158751015,src/util.cpp
ryanofsky,2018-01-03T18:06:29Z,Maybe combine `directory` and `std::string lockfile_name` arguments into a single `path` argument. Having 2 arguments seems more verbose and less flexible.,https://github.com/bitcoin/bitcoin/pull/11904#discussion_r159489514,159489514,src/util.cpp
ryanofsky,2018-01-03T18:07:30Z,Would be good to include filename so you could see whether wallet or data lock failed.,https://github.com/bitcoin/bitcoin/pull/11904#discussion_r159489730,159489730,src/util.cpp
meshcollider,2018-01-03T20:08:27Z,"Could do, but in both cases another more specific error message is printed out when LockDirectory returns, so it's always on the next log line anyway",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r159515976,159515976,src/util.cpp
meshcollider,2018-01-03T20:10:17Z,"Indeed, was just for the purpose of printing out the directory in the log message below rather than the filename too. Will modify if/when there's another change too",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r159516338,159516338,src/util.cpp
laanwj,2018-01-15T11:44:44Z,"I kind of like these separated out - after all, the function is called `LockDirectory` and not `CreateLockFile`. If you merge the directory and lockfile name, I'd say you'd also have to rename the function because it's not longer specifically about locking directories.",https://github.com/bitcoin/bitcoin/pull/11904#discussion_r161496043,161496043,src/util.cpp
laanwj,2018-01-15T11:45:52Z,Nit: `const std::string &lockfile_name`,https://github.com/bitcoin/bitcoin/pull/11904#discussion_r161496275,161496275,src/util.cpp
