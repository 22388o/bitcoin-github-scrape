instagibbs,2016-07-22T16:45:19Z,"nit: Might be worthwhile to print out the cmpctblk version being reconstructed in debug log\n\nnit aside, utACK https://github.com/bitcoin/bitcoin/pull/8393/commits/1b417c20a6b0205a98268f95e6e19d27def076e9\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-234594686,234594686,
btcdrak,2016-07-22T16:48:01Z,Tested ACK 1b417c2 (I tested this branch extensively before this PR was opened).\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-234595302,234595302,
NicolasDorier,2016-07-24T04:50:43Z,utACK 1b417c2 I will write some tests with NBitcoin soon.\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-234757666,234757666,
sipa,2016-07-25T23:37:09Z,"Reminder for myself: adapt to use the suggestion from BIP152 to just send both sendcmpct version 1 and version 2 (and let the 2 be ignored by pre-witness peers), rather than trying to guess what the peer will want based on service flags. Suggested by @TheBlueMatt\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-235118990,235118990,
sipa,2016-07-30T01:34:32Z,Implemented the suggestion above.\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-236331258,236331258,
sipa,2016-07-30T18:22:02Z,Fixed a bug found by @sdaftuar (see #8418).\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-236381021,236381021,
jl2012,2016-08-04T10:36:20Z,need backport to 0.13\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-237516954,237516954,
sipa,2016-08-06T00:00:32Z,@sdaftuar Updated.\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-237992231,237992231,
sipa,2016-08-06T21:46:40Z,"Tested:\n- mainnet (this PR) syncing from mainnet (this PR)\n- testnet (this PR) syncing from testnet (this PR)\n- testnet (this PR, with segwit activation disabled) syncing from testnet (this PR)\n- testnet (post-CB, pre-segwit code) syncing from testnet (this PR)\n\nThey all seem to be using compact blocks for transfer.\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-238050528,238050528,
instagibbs,2016-08-08T20:36:07Z,re-utACK https://github.com/bitcoin/bitcoin/pull/8393/commits/00fabfeca09659f620b773ea5627c9a8ff4443cb\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-238368565,238368565,
laanwj,2016-08-10T07:03:42Z,backport: this is for 0.13.1 I suppose?\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-238782906,238782906,
sipa,2016-08-10T07:08:52Z,"Yes, no need for this in 0.13.0.\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-238783829,238783829,
sdaftuar,2016-08-18T14:59:23Z,@sipa Thoughts on this comment: https://github.com/bitcoin/bitcoin/pull/8393#discussion_r72060387 ?\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-240750418,240750418,
sipa,2016-08-25T10:56:02Z,"@sdaftuar Unsure... I think it's easier and more transparent to see failure/relay problems as early as possible, and rather at upgrade time than at lockedin time.\n\nAlso, relay should work fine (and use compact blocks) as soon as a block from an unupgraded miner enters the network of upgraded peers, right? I assume that things like the relay network will even help propagation across that ""boundar",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-242348758,242348758,
TheBlueMatt,2016-09-05T21:14:09Z,"I proposed more specifics on version negotiation at https://github.com/bitcoin/bips/pull/423#issuecomment-244811877 which I believe might require slight implementation tweaks, though nothing significant.\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-244811982,244811982,
sipa,2016-09-06T11:34:19Z,Added a commit that introduces the ping-pong based waiting described by the latest https://github.com/bitcoin/bips/pull/423.\n\ncc @TheBlueMatt \n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-244923957,244923957,
TheBlueMatt,2016-09-06T16:04:19Z,"I dont think you need the ping? As indicated in the new BIP text, you can know that the peer will respond to your request for a compact block with /at least/ a compact block of version X after you have seen at least that version in one of their announcements. For us, this is sufficient as we only care about them responding with version 2.\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-245000594,245000594,
sdaftuar,2016-09-07T13:49:31Z,"> Also, relay should work fine (and use compact blocks) as soon as a block from an unupgraded miner enters the network of upgraded peers, right? I assume that things like the relay network will even help propagation across that ""boundary"" to occur.\n\n@sipa That sounds right to me.  I was thinking that the first miners to upgrade might be at a disadvantage (because they would stop receiving blocks",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-245286063,245286063,
sipa,2016-09-08T11:10:22Z,"@TheBlueMatt I believe you're right, and the ping isn't necessary... but thinking about this makes my head hurt, so I feel better with an actual synchronization in place - even if we only need it later.\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-245565796,245565796,
TheBlueMatt,2016-09-09T14:43:44Z,"I removed the ping at https://github.com/TheBlueMatt/bitcoin/tree/segwitcb . While the proposed BIP text is pretty dense and confusing, the implementation is pretty straightforward: if they have sent us a sendcmpct version 2, we know they will encode things as version 2, so we gate actually requesting any compact blocks on having seen such a message. We also keep a boolean for which version they r",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-245934077,245934077,
TheBlueMatt,2016-09-13T19:10:53Z,Simplifed the impementation at the branch linked above and added a comment or two after @sdaftuar and @morcos looked over it a bit.\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-246791159,246791159,
jonasschnelli,2016-09-13T19:12:58Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-246791742,246791742,
sipa,2016-09-13T21:04:44Z,"Reviewed and included @TheBlueMatt's suggested commits, and rebased. I have not tested this, and I likely won't have time for that this week.\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-246823913,246823913,
TheBlueMatt,2016-09-13T21:29:08Z,Feel free to squash commits before release (you almost certainly want this since the different commits implement a different protocol)\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-246830820,246830820,
sipa,2016-09-13T21:30:53Z,"@TheBlueMatt Absolutely, I was planning to, especially as some commits revert changes from earlier ones.\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-246831271,246831271,
sdaftuar,2016-09-20T23:45:06Z,"What's the correct behavior if an old peer sends us a compact block message that is unrequested?  If I understand right, we're not currently checking to confirm that cmpctblock messages are only coming from peers with whom we've negotiated our preferred compact block version.\n\nAccepting the header seems safe enough, and it's possible for the block to reconstruct correctly (eg if the block has no",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-248469308,248469308,
TheBlueMatt,2016-09-21T20:29:59Z,"@sdaftuar I think we should emulate the block logic - if a peer sends us a block that is non-witness it should be the same case as if they send us a compact block message when we have negotiated to receive version 1, as that implies that block is a non-witness compact block.\n\nAlternatively, we could ban them...I suppose I dont care either way.\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-248733361,248733361,
instagibbs,2016-09-22T14:07:19Z,nit aside code review ACK https://github.com/bitcoin/bitcoin/pull/8393/commits/2048b69df36a5d1f49db2de6e099209631c1f490\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-248913652,248913652,
sdaftuar,2016-09-22T18:06:15Z,"ACK\n\nIf you'd like to address the minor issue I noted above about processing a compact block from a v1 peer post-segwit activation, I have a commit that will just do headers processing in such a case:\nhttps://github.com/sdaftuar/bitcoin/commit/f6a86fb2112a4e7341bea6aaec0d4e55829e49c9\n\nAlso, I've reworked the p2p-compactblocks test for this PR.  The branch I've been working on is here:\nhttps:",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-248981373,248981373,
TheBlueMatt,2016-09-22T20:23:04Z,I'm in favor of fixing the download-from-0.13 nodes bug given that its such a small difference.\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-249017209,249017209,
instagibbs,2016-09-26T22:17:02Z,@sdaftuar I'd ACK https://github.com/sdaftuar/bitcoin/commit/f6a86fb2112a4e7341bea6aaec0d4e55829e49c9 but I'm not sure the other changes are needed as those seem like unlikely corner cases to me that might happen just once and never again.\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-249714009,249714009,
sipa,2016-09-28T03:13:46Z,I addressed @instagibbs's nits and cherry-picked @sdaftuar's proposed commits (I didn't review the tests yet). I'll think about the last two commits.\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-250061069,250061069,
sipa,2016-09-28T14:01:27Z,"I'd rather not pepper the block fetching code further with edge cases to deal with non-witness to witness propagation. The network should work fine without that, or we have other problems - and we'll know far in advance anyway.\n\nLet me know if this should be squashed.\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-250175105,250175105,
sipa,2016-09-28T14:22:40Z,Squashed version: https://github.com/sipa/bitcoin/commits/segwitcb_squashed\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-250181131,250181131,
sdaftuar,2016-09-30T20:13:28Z,ACK after fixing the minor issue in my bugfix for the minor issue (sorry).  Feel free to squash.\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-250841149,250841149,
sipa,2016-10-02T23:42:38Z,Nit addressed and squashed.\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-251004335,251004335,
gmaxwell,2016-10-03T05:40:10Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-251030442,251030442,
TheBlueMatt,2016-10-04T13:53:08Z,"With #8871 included first, utACK.\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-251394008,251394008,
sipa,2016-10-04T16:44:23Z,Rebased on top of #8871.\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-251443952,251443952,
sdaftuar,2016-10-04T17:34:59Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-251457446,251457446,
petertodd,2016-10-10T08:24:41Z,utACK https://github.com/bitcoin/bitcoin/pull/8393/commits/f5b9b8f437c040205896ad0d7a6656efa08b5601\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-252559389,252559389,
jonasschnelli,2016-10-10T10:46:06Z,utACK https://github.com/bitcoin/bitcoin/pull/8393/commits/f5b9b8f437c040205896ad0d7a6656efa08b5601\nhttps://bitcoin.jonasschnelli.ch/pulls/8393/\n,https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-252584802,252584802,
btcdrak,2016-10-10T12:05:37Z,"Post humus, re-tACK f5b9b8f437c040205896ad0d7a6656efa08b5601\n",https://github.com/bitcoin/bitcoin/pull/8393#issuecomment-252599545,252599545,
sdaftuar,2016-07-25T13:12:28Z,"This means that prior to segwit activation, blocks found by unupgraded miners will propagate without the benefit of compactblock announcements to upgraded nodes.\n\nPerhaps it'd be better to instead use the BIP9 LOCKED_IN window to transition from receiving compactblock announcements from any peer regardless of nServices, towards NODE_WITNESS peers, and once ACTIVE state is reached, we enforce tha",https://github.com/bitcoin/bitcoin/pull/8393#discussion_r72060387,72060387,src/main.cpp
sdaftuar,2016-08-04T17:19:00Z,"This means that we'd overwrite `fSupportsCmpctWitness` if our peer sends a version 2 message followed by a version 1 message.  If we intend to require a certain ordering of sendcmpct announcements, I think that should be more clearly called out in the BIP (I'll leave a separate comment in bitcoin/bips#423 to indicate the language I suggest improving).  But my initial reaction is that we shouldn't ",https://github.com/bitcoin/bitcoin/pull/8393#discussion_r73564353,73564353,src/main.cpp
sipa,2016-08-04T17:34:27Z,"@sdaftuar I think they have to be sent in increasing order, so that the\nreceiver can use the simple ""the last understood sendcmpct counts"" logic.\n\nYou are right that we should ignore v2 sendcmpct messages when we don't\nhave NODE_WITNESS. That would make the behaviour of a non-defined segwit\nnode identical to a pre-segwit node. Agree?\n",https://github.com/bitcoin/bitcoin/pull/8393#discussion_r73567190,73567190,src/main.cpp
sdaftuar,2016-08-04T17:49:49Z,@sipa  I guess that's fine.  I noted the language I thought could be clarified to make this more clear in the BIP pr.\n\nI agree that ignoring v2 messages if we're not NODE_WITNESS should result in the identical behavior we're looking for.\n,https://github.com/bitcoin/bitcoin/pull/8393#discussion_r73569949,73569949,src/main.cpp
rebroad,2016-08-26T13:50:20Z,Thanks. I find this much more readable and understandable than when developers create a function to do this. e.g. IsWitnessEnabled() !\n,https://github.com/bitcoin/bitcoin/pull/8393#discussion_r76421204,76421204,src/main.cpp
sipa,2016-08-26T13:52:09Z,"It is not the same. This condition is about whether a segwit softfork is defined, not whether it has activated.\n",https://github.com/bitcoin/bitcoin/pull/8393#discussion_r76421496,76421496,src/main.cpp
sdaftuar,2016-09-16T13:17:40Z,"This prevents changing whether we announce to this peer.  It should be moved out of this `if()` condition, but I'm not sure yet what the condition should be for updating `fPreferHeaderAndIDs`.\n",https://github.com/bitcoin/bitcoin/pull/8393#discussion_r79166721,79166721,src/main.cpp
sipa,2016-09-19T11:24:21Z,Cherry-picked the commit from https://github.com/TheBlueMatt/bitcoin/commits/segwitcb.\n,https://github.com/bitcoin/bitcoin/pull/8393#discussion_r79370568,79370568,src/main.cpp
instagibbs,2016-09-20T19:33:13Z,This condition is already checked before calling this function. Further it isn't clear how this stops our node from asking non-witness nodes to pre-emptively send cmpctblocks once segwit is activated.\n,https://github.com/bitcoin/bitcoin/pull/8393#discussion_r79693446,79693446,src/main.cpp
TheBlueMatt,2016-09-21T20:28:29Z,"A node is never prevented from chosing to send us a message, but later in this function is the only place we send a sendcmpct with announce set to true, so no matter how you call this it should be safe (note that we set fSupportsDesiredCmpctVersion based on NODE_WITNESS, not based on current activation status).\n\nAs for the duplicate check...whatever, up to the PR owner, I suppose :p.\n",https://github.com/bitcoin/bitcoin/pull/8393#discussion_r79925006,79925006,src/main.cpp
instagibbs,2016-09-21T21:23:38Z,I failed to understand that pfrom->nLocalServices is talking about _your own_ services. Nevermind.\n,https://github.com/bitcoin/bitcoin/pull/8393#discussion_r79935956,79935956,src/main.cpp
instagibbs,2016-09-22T13:32:09Z,"Maybe add ""local"" in both spots?\n\n> For local witness nodes  \n\nSemi ambiguous as-is.\n",https://github.com/bitcoin/bitcoin/pull/8393#discussion_r80040266,80040266,src/main.cpp
TheBlueMatt,2016-09-22T14:10:48Z,"local also seems unclear to me, how about ""If we've announced NODE_WITNESS to this peer:"" etc?\n",https://github.com/bitcoin/bitcoin/pull/8393#discussion_r80048721,80048721,src/main.cpp
instagibbs,2016-09-22T14:13:13Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/8393#discussion_r80049285,80049285,src/main.cpp
sdaftuar,2016-09-28T19:01:11Z,Oops.  This should actually be pindex->prev I think?  Sorry...\n,https://github.com/bitcoin/bitcoin/pull/8393#discussion_r80993122,80993122,src/main.cpp
instagibbs,2016-09-28T20:40:56Z,pprev\* ? :)\n,https://github.com/bitcoin/bitcoin/pull/8393#discussion_r81011997,81011997,src/main.cpp
TheBlueMatt,2016-10-03T14:39:04Z,"I believe this is wrong. If a witness peer announces, directly to us, via compact blocks, the first segwit block, and we are missing the second-to-first segwit block (or its currently in-flight) when we receive the response to this message, we will ban the peer sending the first segwit block as it will respond in non-witness form, because of this request.\n",https://github.com/bitcoin/bitcoin/pull/8393#discussion_r81563418,81563418,src/main.cpp
sipa,2016-10-04T13:29:09Z,"Does this still need changing, if we include #8871?\n",https://github.com/bitcoin/bitcoin/pull/8393#discussion_r81755873,81755873,src/main.cpp
TheBlueMatt,2016-10-04T13:48:27Z,"No, I believe #8871 will be sufficient to fix this issue.\n",https://github.com/bitcoin/bitcoin/pull/8393#discussion_r81759668,81759668,src/main.cpp
rebroad,2016-10-28T08:42:00Z,Seems a bit of a strange design that it needs to send two SENDCMPCT messages at once.... can it not send one OR the other instead?\n,https://github.com/bitcoin/bitcoin/pull/8393#discussion_r85492154,85492154,src/main.cpp
