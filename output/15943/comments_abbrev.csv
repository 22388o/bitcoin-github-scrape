DrahtBot,2019-05-02 21:29:50,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15812](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15812.html) (Do not generate coverage report on test fai",https://github.com/bitcoin/bitcoin/pull/15943#issuecomment-488839234,488839234,
MarcoFalke,2019-05-02 22:01:03,"> Concept ACK, although I'd prefer to reverse the defaults (ie only fail if a -failifuncoveredrpc or similar flag is passed)\n\nthis is only active when --coverage is passed",https://github.com/bitcoin/bitcoin/pull/15943#issuecomment-488848069,488848069,
practicalswift,2019-05-03 07:56:01,@MarcoFalke Will Travis fail if RPC has been added without tests?,https://github.com/bitcoin/bitcoin/pull/15943#issuecomment-488992780,488992780,
gmaxwell,2019-05-03 08:05:10,"A concern that comes to mind is that if travis is just arbitrarily failing on new rpc's ""without tests"" it's going to encourage adding more pre-textual tests that don't really test anything and just run the rpc, or which inappropriately hardcode some output (""software changed detection"").",https://github.com/bitcoin/bitcoin/pull/15943#issuecomment-488996360,488996360,
MarcoFalke,2019-05-03 12:13:36,"This is already an issue with the existing coverage report, which motivated people to test for exact verbose responses. Though, I have a slight hope that review might catch those before merge. If it doesn't we have at least a test as opposed to no test and get notified of the issue the next time the response changes.",https://github.com/bitcoin/bitcoin/pull/15943#issuecomment-489075065,489075065,
practicalswift,2019-05-03 12:38:14,"Concept ACK\n\nAgree with @MarcoFalke.",https://github.com/bitcoin/bitcoin/pull/15943#issuecomment-489081082,489081082,
jnewbery,2019-05-03 13:34:21,"> This is already an issue with the existing coverage report, which motivated people to test for exact verbose responses. Though, I have a slight hope that review might catch those before merge. If it doesn't we have at least a test as opposed to no test and get notified of the issue the next time the response changes.\n\nTotally agree with this. The way to prevent bad test code being merged is ",https://github.com/bitcoin/bitcoin/pull/15943#issuecomment-489096927,489096927,
MarcoFalke,2019-05-15 00:13:39,Addressed @jnewbery and @promag feedback. Example output is here: https://travis-ci.org/bitcoin/bitcoin/jobs/532518417#L3769,https://github.com/bitcoin/bitcoin/pull/15943#issuecomment-492456149,492456149,
practicalswift,2019-05-15 05:05:19,utACK fa7ea62b140c76951488c54bac3dcc7d7568d736,https://github.com/bitcoin/bitcoin/pull/15943#issuecomment-492504714,492504714,
jonatack,2019-05-15 11:39:24,Note that testing a single file through the runner with --coverage outputs something like this: https://gist.github.com/jonatack/f6fd73d25ebfc8222ab3594cc322735c,https://github.com/bitcoin/bitcoin/pull/15943#issuecomment-492619171,492619171,
MarcoFalke,2019-05-15 11:42:50,That is expected and I don't think I changed that in this pull request?,https://github.com/bitcoin/bitcoin/pull/15943#issuecomment-492620076,492620076,
jonatack,2019-05-15 11:46:25,Gotcha. Doing more testing.,https://github.com/bitcoin/bitcoin/pull/15943#issuecomment-492621042,492621042,
jnewbery,2019-05-02 20:54:19,sort please :),https://github.com/bitcoin/bitcoin/pull/15943#discussion_r280592150,280592150,test/functional/test_runner.py
MarcoFalke,2019-05-02 22:00:33,"It is sorted logically, comes right after --coverage",https://github.com/bitcoin/bitcoin/pull/15943#discussion_r280611698,280611698,test/functional/test_runner.py
promag,2019-05-06 13:41:49,"Use a generic variable name instead? Like `TEST_RUNNER_EXTRA=""--allow-uncovered_rpcs""`?",https://github.com/bitcoin/bitcoin/pull/15943#discussion_r281189740,281189740,.travis.yml
jonatack,2019-05-15 11:04:12,"Mixed use of `coverage_passed`\n\nmight be more explicit to omit lines 408-409 and replace `coverage_passed` with `(coverage and coverage_passed)`",https://github.com/bitcoin/bitcoin/pull/15943#discussion_r284200275,284200275,test/functional/test_runner.py
MarcoFalke,2019-05-15 11:33:18,I don't understand `(coverage and coverage_passed)` would always be false in a default run,https://github.com/bitcoin/bitcoin/pull/15943#discussion_r284209969,284209969,test/functional/test_runner.py
jonatack,2019-05-15 11:45:02,something like `(coverage is None or coverage_passed)`,https://github.com/bitcoin/bitcoin/pull/15943#discussion_r284213830,284213830,test/functional/test_runner.py
ryanofsky,2019-05-15 18:12:44,"What's purpose of excluding feature_dbcrash? Can you add a comment in the code saying why it's needed?\n\nIt would also be nice to know about why the extended flag is added, if adding it is intentional.",https://github.com/bitcoin/bitcoin/pull/15943#discussion_r284386147,284386147,.travis.yml
MarcoFalke,2019-05-15 18:29:31,Done,https://github.com/bitcoin/bitcoin/pull/15943#discussion_r284392744,284392744,.travis.yml
