[
  {
    "sha": "7777703958937ec0ae609b1ee882f1bf2d113d10",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Nzc3NzAzOTU4OTM3ZWMwYWU2MDliMWVlODgyZjFiZjJkMTEzZDEw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-03-31T20:31:55Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-03-31T21:11:47Z"
      },
      "message": "doc: Explain new test logging",
      "tree": {
        "sha": "c52e0379a8d9b9602948edbfbca4719bc7c91358",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c52e0379a8d9b9602948edbfbca4719bc7c91358"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7777703958937ec0ae609b1ee882f1bf2d113d10",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhwewwAyITcxgfv91wtGFRLNW/GCBhRad1afjmESDX3uuJK1bny29QwhfTYtYgW\nzJMbsuU+D130g/o12t4h2cykfSwkSCzPLE8EyXfH3oR/ZAHJ9Upqp6QVsBpMNwrT\nv2uH1+8jFyczdipTgVZRlh2+VJowSGpx6T9bbr/Q336BMpztn6Ll8Lq0s2NtyL7d\nuUz84tDgBlhq5e1e5R+Lx00PEtSS1yiX53FfQqr7Frlrrsktcqhtr7ya0C2Fdpg9\nAnfU89PVuyLn44CwmvTJoTVDgYLJOiOALsDmlPCMW+ZtxAn1yT/xuyrDZB3TBMYo\nNUkkQiAEeg485RAhcb9awAVsoYM0VrrB6yPUjaR6e+pqllSF7E67kaf1SKl9GeED\naq9smkU8HcTGvvsmAPyFInf3JO/bI07bLQTjEmS7GhYoJe+zFZLlkaUYOYmL8BgH\nEPbMw/yqeQnoGGPP+ilJ9JXTwE4oqLbMtwCdi8QkfN3nO0YgKmsqYLnI8rKyGJg0\n8hLCzsCc\n=CltX\n-----END PGP SIGNATURE-----",
        "payload": "tree c52e0379a8d9b9602948edbfbca4719bc7c91358\nparent 72ef366564394bad798484ba935c96b68579043f\nauthor MarcoFalke <falke.marco@gmail.com> 1585686715 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1585689107 -0400\n\ndoc: Explain new test logging\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7777703958937ec0ae609b1ee882f1bf2d113d10",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7777703958937ec0ae609b1ee882f1bf2d113d10",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7777703958937ec0ae609b1ee882f1bf2d113d10/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "72ef366564394bad798484ba935c96b68579043f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72ef366564394bad798484ba935c96b68579043f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/72ef366564394bad798484ba935c96b68579043f"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 19,
      "deletions": 10
    },
    "files": [
      {
        "sha": "57cda26d7ccc0f8244a02d8b249705f830a19f58",
        "filename": "src/test/README.md",
        "status": "modified",
        "additions": 19,
        "deletions": 10,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7777703958937ec0ae609b1ee882f1bf2d113d10/src/test/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7777703958937ec0ae609b1ee882f1bf2d113d10/src/test/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/README.md?ref=7777703958937ec0ae609b1ee882f1bf2d113d10",
        "patch": "@@ -17,26 +17,31 @@ and tests weren't explicitly disabled.\n \n After configuring, they can be run with `make check`.\n \n-To run the bitcoind tests manually, launch `src/test/test_bitcoin`. To recompile\n+To run the unit tests manually, launch `src/test/test_bitcoin`. To recompile\n after a test file was modified, run `make` and then run the test again. If you\n modify a non-test file, use `make -C src/test` to recompile only what's needed\n-to run the bitcoind tests.\n+to run the unit tests.\n \n-To add more bitcoind tests, add `BOOST_AUTO_TEST_CASE` functions to the existing\n+To add more unit tests, add `BOOST_AUTO_TEST_CASE` functions to the existing\n .cpp files in the `test/` directory or add new .cpp files that\n implement new `BOOST_AUTO_TEST_SUITE` sections.\n \n-To run the bitcoin-qt tests manually, launch `src/qt/test/test_bitcoin-qt`\n+To run the GUI unit tests manually, launch `src/qt/test/test_bitcoin-qt`\n \n-To add more bitcoin-qt tests, add them to the `src/qt/test/` directory and\n+To add more GUI unit tests, add them to the `src/qt/test/` directory and\n the `src/qt/test/test_main.cpp` file.\n \n ### Running individual tests\n \n-test_bitcoin has some built-in command-line arguments; for\n-example, to run just the getarg_tests verbosely:\n+`test_bitcoin` has some built-in command-line arguments; for\n+example, to run just the `getarg_tests` verbosely:\n \n-    test_bitcoin --log_level=all --run_test=getarg_tests\n+    test_bitcoin --log_level=all --run_test=getarg_tests -- DEBUG_LOG_OUT\n+\n+`log_level` controls the verbosity of the test framework, which logs when a\n+test case is entered, for example. The `DEBUG_LOG_OUT` after the two dashes\n+redirects the debug log, which would normally go to a file in the test datadir\n+(`BasicTestingSetup::m_path_root`), to the standard terminal output.\n \n ... or to run just the doubledash test:\n \n@@ -56,11 +61,15 @@ see `uint256_tests.cpp`.\n \n ### Logging and debugging in unit tests\n \n+`make check` will write to a log file `foo_tests.cpp.log` and display this file\n+on failure. For running individual tests verbosely, refer to the section\n+[above](#running-individual-tests).\n+\n To write to logs from unit tests you need to use specific message methods\n provided by Boost. The simplest is `BOOST_TEST_MESSAGE`.\n \n-For debugging you can launch the test_bitcoin executable with `gdb`or `lldb` and\n-start debugging, just like you would with bitcoind:\n+For debugging you can launch the `test_bitcoin` executable with `gdb`or `lldb` and\n+start debugging, just like you would with any other program:\n \n ```bash\n gdb src/test/test_bitcoin"
      }
    ]
  }
]