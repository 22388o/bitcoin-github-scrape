DrahtBot,2019-11-22 23:39:59,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18120 (Change UpdateForDescendants to use Epochs by JeremyRubin)\n* #18098 (scripted-diff: Add missing spaces in RPCResul",https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-557734238,557734238,
darosior,2019-11-25 21:03:59,Rebased now that appveyor seems to be fixed.,https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-558339061,558339061,
darosior,2019-12-02 22:45:55,"This might be ""too late"" but the fee estimation can be floored to 253 sat/kWU, so that the wallet doesn't create transaction below old feerate until most of the network relay 250 sat/kWU txs..",https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-560798048,560798048,
darosior,2019-12-04 13:29:33,Rebased.,https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-561646175,561646175,
jb55,2019-12-05 18:25:48,I can't help but wonder if there's a better abstraction here instead of random conversions happening everywhere...,https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-562253624,562253624,
darosior,2019-12-09 20:56:58,"> I can't help but wonder if there's a better abstraction here instead of random conversions happening everywhere...\n\nConversion is needed anyway for every user input (and even for JSONRPC outputs) to not break the API..",https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-563435037,563435037,
jb55,2019-12-11 18:34:15,">> I can't help but wonder if there's a better abstraction here instead of random conversions happening everywhere...\n>\n> Conversion is needed anyway for every user input (and even for JSONRPC outputs) to not break the API..\n\nyes I understand that conversions are needed... I'm just referring to\nthe fact these are two different fee types, but that fact is not\ncaptured in the type system. If w",https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-564675354,564675354,
darosior,2020-01-17 15:15:56,"Rebased.\n\nWill rework the approach and include remarks from jb55 if there are some acks on the general concept of using / exposing weight units..",https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-575666878,575666878,
DrahtBot,2020-02-17 01:59:42,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-586787009,586787009,
ariard,2020-06-22 09:31:32,"Concept ACK.\n\nCorrectness of fee computation is safety-critical for any time-sensitive protocol like LN. Overpaying by default  isn't the solution as you may have to save value for period of congestion. With this regards easing implementation of segwit fee-estimators should be highly considered. \n\nAs Rusty points out in related issue, this should be part of a wider discussion on a stable A",https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-647400983,647400983,
darosior,2020-06-22 10:41:24,"Thank you for the feedback, I'll rebase this and change the approach as per jb55's comments soon.\nI wanted to go for the minimal changes, but something cleaner is definitely better. This makes me wonder\nif I should break this into smaller PRs, too.\n\n‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐\nLe lundi, juin 22, 2020 11:31 AM, Antoine Riard <notifications@github.com> a écrit :\n\n> Concept ACK.\n>\n> Cor",https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-647436294,647436294,
adamjonas,2020-08-14 12:54:57,"I gathered some opinions on this from a long time contributor about the concept, he replied:\n""seems like a fine thing to do. also seems like not a high priority""\n\nAfter looking at the code, however, his reaction was that the patch was too big for the benefit. Putting more data in the CTxMemPoolEntry especially stood out as an issue. \n\n@darosior I think it's worth getting more conceptual ",https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-674060302,674060302,
darosior,2020-08-14 13:02:39,"@adamjonas this PR is a **bad** approach. It's been known and discussed above, so I don't think it's worth discussing it any more.  However for the sake of the argument: I locally have a version which is an about 3x smaller diff, and regarding adding a field to the CTxMempoolEntry it's necessary anyway as to use weight-mesured feerates we need to track, well, the weight of the tx.\n\nI agree it ",https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-674063519,674063519,
jnewbery,2020-09-29 09:01:00,"This has required rebase since February, and there are still conceptual questions outstanding. I'm going to close it for now.\n\n@darosior - feel free to reopen (or open another PR) if you have something that's ready for review/discussion.",https://github.com/bitcoin/bitcoin/pull/17566#issuecomment-700568360,700568360,
