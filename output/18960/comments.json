[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627403715",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-627403715",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 627403715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNzQwMzcxNQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-12T15:06:17Z",
    "updated_at": "2020-05-12T15:06:17Z",
    "author_association": "MEMBER",
    "body": "This takes a different approach from the caching in #16442. I prefer it because it isolates all of the caching logic inside the indexer rather than in net processing. I'll put the other approach up as a different branch for comparison.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627403715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627814619",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-627814619",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 627814619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNzgxNDYxOQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-13T07:52:38Z",
    "updated_at": "2020-05-20T20:02:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18354 (Protect wallet by using shared pointers by bvbfan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627814619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627939760",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-627939760",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 627939760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNzkzOTc2MA==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-13T12:10:16Z",
    "updated_at": "2020-05-13T12:13:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm almost ready for ACKing this PR, just have some minor suggestion/discussion points:\r\n- Would it make sense to also only check the cache if we have checkpoints, i.e. a method structure like\r\n```\r\nbool is_checkpoint = (block_index->nHeight % CFCHECKPT_INTERVAL == 0); \r\nif (is_checkpoint)\r\n    // Check the headers cache\r\n\r\n// Regular lookup\r\n\r\nif (is_checkpoint)\r\n    // Add to the headers cache\r\n```\r\n? Of course, the drawback of this approach is that the condition for checking needs to be removed if the cache is ever used for other filter headers than those from the checkpoints. Also not sure if its really worth it from a performance point of view. But in 999 out of 1000 times the lookup in the map could be skipped.\r\n- In the regular case the cache should never get full, considering that this would by plan only happen in the far future (block 2000000, >25 years from now, with the current maximum size constant of 2000). If it gets full however, should we take some action like putting a debug output or even an assert, to get noticed that we either have some memory exhaustion bug or that the maximum size needs to be increased?\r\n- Any idea how to effectively test performance improvements like this? I don't know anything better than just putting some `LogPrintf`s in the cache hit / cache add cases, run the (maybe slightly modified) functional test and analyze the log output to check if it behaves as expected.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627939760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628166454",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-628166454",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 628166454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODE2NjQ1NA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-13T18:25:49Z",
    "updated_at": "2020-05-13T18:25:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628166454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628285474",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-628285474",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 628285474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODI4NTQ3NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-13T22:48:06Z",
    "updated_at": "2020-05-13T22:48:06Z",
    "author_association": "MEMBER",
    "body": "@theStack \r\n> Would it make sense to also only check the cache if we have checkpoints, i.e. a method structure like\r\n\r\nDone\r\n\r\n@MarcoFalke \r\n> a non-recursive mutex should be sufficient.\r\n\r\nChanged `RecursiveMutex` -> `Mutex`\r\n\r\nI'm still working on adding a microbench, although it's not clear to me that it'll show any improvement since the disk reads may be cached by the OS for the microbench.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628285474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628761578",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-628761578",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 628761578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODc2MTU3OA==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-14T16:56:36Z",
    "updated_at": "2020-05-14T18:18:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Using jnewbery's nice [node-shell module](https://github.com/jnewbery/bitcoin/tree/node-shell) (a modification of test-shell that allows to connect with the functional test framework to a running full-node) I crafted up a quick and dirty [test-script](https://github.com/theStack/bitcoin/blob/pr18960_test/test/functional/p2p_18960.py) (see branch https://github.com/theStack/bitcoin/tree/pr18960_test) that sends `getcfcheckpt` requests with the stop-hash of the halving block 630000 and measures the processing time.\r\n\r\nFreshly started bitcoind from master branch (w/o checkpoint headers cache implementation), after mempool imports are done:\r\n```\r\ngetcfcheckpt request processing times\r\n=====================================\r\n-> first:     53.75ms\r\n-> following: 50.70ms (average)\r\n=====================================\r\n```\r\n\r\nFreshly started bitcoind from PR branch (with checkpoint headers cache implementation), after mempool imports are done:\r\n```\r\ngetcfcheckpt request processing times\r\n=====================================\r\n-> first:     50.92ms\r\n-> following: 50.80ms (average)\r\n=====================================\r\n```\r\nThere doesn't seem to be a noticable difference. I don't know if my methodology is flawed though. Maybe all the processing around is taking so much more time that the actual part of fetching the header (from the cache or from disk) is neglectible. If anyone has an idea how to improve the benchmark script, happy to hear suggestions!\r\n\r\n// EDIT: As jnewbery found out in the course of today's PR review club meeting, there is a good explanation on why the values are always close to 50ms:\r\n```\r\n19:36 < jnewbery> There are 100ms sleeps in the messagehandler thread between looping through all peers:\r\n                  https://github.com/jnewbery/bitcoin/blob/7ad83ed252914d6d5b8ed81f103aecf052c68fb7/src/net.cpp#L2061\r\n19:37 < jnewbery> on a non-busy node, 50ms is the average time you have to wait for the message handler thread to wake up\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628761578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628815890",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-628815890",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 628815890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODgxNTg5MA==",
    "user": {
      "login": "michaelfolkson",
      "id": 16323900,
      "node_id": "MDQ6VXNlcjE2MzIzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16323900?u=e2201a78ad660e42fd175003d02ad749b855e0a9&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelfolkson",
      "html_url": "https://github.com/michaelfolkson",
      "followers_url": "https://api.github.com/users/michaelfolkson/followers",
      "following_url": "https://api.github.com/users/michaelfolkson/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
      "repos_url": "https://api.github.com/users/michaelfolkson/repos",
      "events_url": "https://api.github.com/users/michaelfolkson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-14T18:36:34Z",
    "updated_at": "2020-05-14T18:36:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Approach ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628815890/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628918187",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-628918187",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 628918187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODkxODE4Nw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-14T22:26:37Z",
    "updated_at": "2020-05-14T22:26:37Z",
    "author_association": "MEMBER",
    "body": "@theStack I believe in between the requests you can drop the cache to simulate eviction (which may occasionally happen during normal operation). See https://unix.stackexchange.com/questions/17936/setting-proc-sys-vm-drop-caches-to-clear-cache",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628918187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628974368",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-628974368",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 628974368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODk3NDM2OA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T01:36:30Z",
    "updated_at": "2020-05-15T01:36:30Z",
    "author_association": "MEMBER",
    "body": "@narula suggested in today's PR Review Club meeting that it'd be less cognitive overhead to simply take the `m_cs_headers_cache` for the entirety of the `LookupFilterHeader()` function, rather than taking, releasing and taking it again. That seem like a reasonable request to me. We can't ever block important work with this lock, so holding it a bit longer than strictly necessary is not an issue.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628974368/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628980196",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-628980196",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 628980196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODk4MDE5Ng==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T01:56:31Z",
    "updated_at": "2020-05-15T01:56:31Z",
    "author_association": "MEMBER",
    "body": "@theStack - thank you for doing some benching of this. Your approach inspired me to do something similar myself, using debug logs to find the exact time to construct a cfcheckpt response. I've added a [`debug_log_delta` context wrapper](https://github.com/jnewbery/bitcoin/commit/99ea8d5b228c3c5ddec5de76bbf830c666738485#diff-86294e5ae5283eebdd9f98d79007a0e1R386) to the node_shell, which allows me to provide two debug log messages, then do actions on the node and extract the time delta between those two logs. I applied that patch to:\r\n\r\n- without a cache\r\n- with this cache\r\n- with @narula's suggestion of taking the lock only once (I was interested to see if there were any performance differences).\r\n\r\nAnd then ran the following node-shell script:\r\n\r\n```\r\nREPO_PATH=\"<path_to_repo>\"\r\nDATADIR_PATH=\"<path_to_datadir>\"\r\nimport sys\r\nsys.path.insert(0, f\"{REPO_PATH}/test/functional\")\r\nfrom test_framework.node_shell import NodeShell\r\ntest = NodeShell()\r\ntest.setup(datadir=DATADIR_PATH)\r\n# <test_framework.node_shell.NodeShell.__TestShell object at 0x7f7704820490>\r\nnode = test.nodes[0]\r\nbb = node.getbestblockhash()\r\nfrom test_framework.messages import FILTER_TYPE_BASIC, msg_getcfcheckpt\r\nrequest = msg_getcfcheckpt(filter_type=FILTER_TYPE_BASIC, stop_hash=int(bb, 16))\r\nfor i in range(15):\r\n    with node.debug_log_delta(\"getcfcheckpt request received\", \"cfcheckpt response constructed\"):\r\n        node.p2ps[0].send_and_ping(request)\r\ntest.shutdown()\r\n```\r\n\r\n### [no cache](https://github.com/jnewbery/bitcoin/tree/2020-05-nocfcheckpts-cache-debug)\r\n\r\n```\r\ngetcfcheckpt request received to cfcheckpt response constructed: 7.824ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 7.054ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 7.021ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 7.303ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 7.355ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 7.26ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 7.169ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 7.166ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 7.194ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 8.574ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 7.119ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 7.156ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 4.153ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 8.162ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 6.485ms\r\n```\r\n\r\nThere does seem to be a very slight performance improvement after the first request. Maybe around 5-10% from the mean, but variance is quite high, so it might be noise.\r\n\r\n### [cache (taking locks twice)](https://github.com/jnewbery/bitcoin/tree/2020-05-cfcheckpts-cache-debug)\r\n\r\n```\r\ngetcfcheckpt request received to cfcheckpt response constructed: 12.2ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.855ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.992ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.869ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.141ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.692ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.452ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.916ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.413ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.648ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.816ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.84ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.812ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.869ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.445ms\r\n```\r\n\r\nThe initial request is slower (presumably because the cache needs to be warmed), but subsequent requests are on average >50% faster than with no cache.\r\n\r\n### [cache (taking lock once)](https://github.com/jnewbery/bitcoin/tree/2020-05-cfcheckpts-onelock-cache-debug)\r\n\r\n```\r\ngetcfcheckpt request received to cfcheckpt response constructed: 11.785ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.35ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.19ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.475ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.175ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.345ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.274ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.161ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.259ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.217ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.238ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.253ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.33ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.32ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.36ms\r\n```\r\n\r\nThe first request is slightly faster than when taking locks twice (although that might be noise). Subsequent requests are the same speed as the 'taking locks twice' branch, which is what we'd expect because locks are only taken once in that branch if the header is found in the cache.\r\n\r\n@MarcoFalke - I think these full node manual benches are more meaningful than microbenches, so I'm not planning to add any automated benches to `/src/bench`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628980196/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628983530",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-628983530",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 628983530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODk4MzUzMA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T02:08:18Z",
    "updated_at": "2020-05-15T02:08:18Z",
    "author_association": "MEMBER",
    "body": "> @narula suggested in today's PR Review Club meeting that it'd be less cognitive overhead to simply take the m_cs_headers_cache for the entirety of the LookupFilterHeader() function, rather than taking, releasing and taking it again.\r\n\r\nI'll make this change tomorrow.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/628983530/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629163428",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-629163428",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 629163428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTE2MzQyOA==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T10:37:19Z",
    "updated_at": "2020-05-15T10:40:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "In yesterday's [review club meeting on this PR](https://bitcoincore.reviews/18960.html), it was suggested to put LogPrintf() directly into the network processing code parts to measure the execution time of getcfcheckpt requests. (My previous approach of [measuring the request response time from the test framework](https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-628761578) was not precise enough, as the time also included python overhead and the time for the message handler to wake up.) I did some testing with this refined approach and can roughly confirm the [results from jnewbery](https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-628980196) (see commit https://github.com/theStack/bitcoin/commit/48cff1bb4d27ef0040b18a860a3c897752e3c296):\r\n\r\n*without cache*:\r\n```\r\n2020-05-14T20:15:11Z getcfcheckpt processing took 10247us\r\n2020-05-14T20:15:11Z getcfcheckpt processing took 6105us\r\n2020-05-14T20:15:11Z getcfcheckpt processing took 6437us\r\n2020-05-14T20:15:11Z getcfcheckpt processing took 5330us\r\n2020-05-14T20:15:11Z getcfcheckpt processing took 6964us\r\n2020-05-14T20:15:11Z getcfcheckpt processing took 5523us\r\n2020-05-14T20:15:12Z getcfcheckpt processing took 5413us\r\n2020-05-14T20:15:12Z getcfcheckpt processing took 5843us\r\n2020-05-14T20:15:12Z getcfcheckpt processing took 7060us\r\n2020-05-14T20:15:12Z getcfcheckpt processing took 6165us\r\n...\r\n```\r\n*with cache*:\r\n```\r\n2020-05-14T20:21:26Z getcfcheckpt processing took 9801us\r\n2020-05-14T20:21:26Z getcfcheckpt processing took 2619us\r\n2020-05-14T20:21:26Z getcfcheckpt processing took 3338us\r\n2020-05-14T20:21:26Z getcfcheckpt processing took 2446us\r\n2020-05-14T20:21:26Z getcfcheckpt processing took 2560us\r\n2020-05-14T20:21:27Z getcfcheckpt processing took 2331us\r\n2020-05-14T20:21:27Z getcfcheckpt processing took 2703us\r\n2020-05-14T20:21:27Z getcfcheckpt processing took 2614us\r\n2020-05-14T20:21:27Z getcfcheckpt processing took 2598us\r\n2020-05-14T20:21:27Z getcfcheckpt processing took 2444us\r\n...\r\n```\r\nOne can see that there's a speedup of at least 2x with the cache.\r\n\r\nNote that my approach to get these numbers was slightly different, as I directly measured the time in bitcoind via `GetTimeMicros()` (commit https://github.com/theStack/bitcoin/commit/49f5f3d5444ed6c872dd41be910e2149308b35e7):\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 1df1fab..6e620d9 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -3380,7 +3380,10 @@ bool ProcessMessage(CNode* pfrom, const std::string& msg_type, CDataStream& vRec\r\n     }\r\n\r\n     if (msg_type == NetMsgType::GETCFCHECKPT) {\r\n+        int64_t start_time = GetTimeMicros();\r\n         ProcessGetCFCheckPt(pfrom, vRecv, chainparams, connman);\r\n+        int64_t processing_duration = GetTimeMicros() - start_time;\r\n+        LogPrintf(\"getcfcheckpt processing took %lldus\\n\", processing_duration);\r\n         return true;\r\n     }\r\n```\r\n\r\nbut the idea is the same.\r\n\r\nNow I'm very curious if the change from `std::map` to `std::unordered_map` shows a noticable difference in performance.\r\n\r\n@MarcoFalke: Nice idea to drop the cache between the requests. Unfortunately, on my current development box I don't have the permissions (root rights) to do this :/ if anyone having the possibility, the results would be very interesting.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629163428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629351023",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-629351023",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 629351023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM1MTAyMw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T16:17:49Z",
    "updated_at": "2020-05-15T16:17:49Z",
    "author_association": "MEMBER",
    "body": "> it'd be less cognitive overhead to simply take the m_cs_headers_cache for the entirety of the LookupFilterHeader() function\r\n\r\n@narula \r\n\r\nDone.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629351023/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629361597",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-629361597",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 629361597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM2MTU5Nw==",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T16:40:38Z",
    "updated_at": "2020-05-15T16:40:38Z",
    "author_association": "MEMBER",
    "body": "utACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629361597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629361873",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-629361873",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 629361873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM2MTg3Mw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T16:41:15Z",
    "updated_at": "2020-05-15T16:41:15Z",
    "author_association": "MEMBER",
    "body": "I've force-pushed a branch that changes this to use an unordered_map and only lock once.\r\n\r\nComparing the unordered map implementation to map:\r\n\r\n#### unordered_map\r\n\r\n<details><summary>Log</summary>\r\n\r\n```\r\ngetcfcheckpt request received to cfcheckpt response constructed: 12.808ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.783ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.712ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.656ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.672ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.82ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.994ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.068ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.335ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.444ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.159ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.194ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.601ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.692ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.982ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.209ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.116ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.136ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.666ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.091ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.444ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.385ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.147ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.145ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.053ms\r\n```\r\n</p></details>\r\nFirst lookup: 12.8ms, average subsequent lookup: 3.02ms\r\n\r\n#### map\r\n\r\n<details><summary>Log</summary>\r\n\r\n```\r\ngetcfcheckpt request received to cfcheckpt response constructed: 12.959ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.001ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.656ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.07ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.537ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.838ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 2.994ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.143ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.383ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.666ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.889ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.553ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.394ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.3ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.5ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.372ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.329ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.308ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.564ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.746ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.714ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.423ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.517ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.636ms\r\ngetcfcheckpt request received to cfcheckpt response constructed: 3.595ms\r\n```\r\n</details>\r\nFirst lookup: 13.0ms, average subsequent lookup: 3.60s\r\n\r\nSo from this single test, it appears that an unordered_map is indeed faster. That's what we'd expect, since lookup is O(1) and number of lookups required for a single getcfcheckpt request is O(n), so total is O(n). For a map, a single lookup is O(logn), so total is O(nlogn).\r\n\r\nThe original implementation is faster still, since it's storing the checkpts in a single vector, but the aim of this PR is to avoid disk reads for getcfcheckpt messages, which the simple unordered_map implementation does. Further performance improvements could be done as a follow-up if required.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629361873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629365265",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-629365265",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 629365265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM2NTI2NQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T16:48:25Z",
    "updated_at": "2020-05-15T16:48:25Z",
    "author_association": "MEMBER",
    "body": "Feedback from @narula and @jkczyz addressed. Thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629365265/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629397391",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-629397391",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 629397391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM5NzM5MQ==",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T17:55:23Z",
    "updated_at": "2020-05-15T17:55:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK b6eba9e492e1dfb38baec894bfda1cfb4d709e5d\r\n\r\nRan all tests.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629397391/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629439397",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-629439397",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 629439397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTQzOTM5Nw==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-15T19:30:33Z",
    "updated_at": "2020-05-15T19:30:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK b6eba9e492e1dfb38baec894bfda1cfb4d709e5d",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629439397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630310732",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-630310732",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 630310732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDMxMDczMg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-18T16:55:26Z",
    "updated_at": "2020-05-18T16:55:26Z",
    "author_association": "MEMBER",
    "body": "Thanks for the rereview @jkczyz and @theStack , and for catching the problems with checking checkpoint heights. Should be fixed now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630310732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630325155",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-630325155",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 630325155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDMyNTE1NQ==",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-18T17:22:26Z",
    "updated_at": "2020-05-18T17:22:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630325155/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630706114",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-630706114",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 630706114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDcwNjExNA==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-19T09:33:31Z",
    "updated_at": "2020-05-19T09:33:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf :tada: \r\n\r\nBy the way, I'm neutral to the question on whether to use `std::map` or `std::unordered_map` for the cache -- `std::unordered_map` does indeed seem to lead to some performance improvement (my tests show a rough 10% improvement, see numbers below; [jnewberys tests](https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-629361873) show an even higher improvement of close to 20%), but on the other hand takes both more space (as [pointed out by MarcoFalke](https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425708660)) and also more code due to the need to provide a hash function. Maybe someone has a more clear opinion on the choice, personally I'm okay with ACKing either version.\r\n\r\nTest with `std::map`:\r\n```\r\n2020-05-19T09:09:01Z getcfcheckpt processing took 13817us\r\n2020-05-19T09:09:01Z getcfcheckpt processing took 2855us\r\n2020-05-19T09:09:01Z getcfcheckpt processing took 3573us\r\n2020-05-19T09:09:01Z getcfcheckpt processing took 3444us\r\n2020-05-19T09:09:01Z getcfcheckpt processing took 3236us\r\n2020-05-19T09:09:01Z getcfcheckpt processing took 3385us\r\n2020-05-19T09:09:01Z getcfcheckpt processing took 3543us\r\n2020-05-19T09:09:01Z getcfcheckpt processing took 3378us\r\n2020-05-19T09:09:01Z getcfcheckpt processing took 3450us\r\n2020-05-19T09:09:01Z getcfcheckpt processing took 3041us\r\n2020-05-19T09:09:01Z getcfcheckpt processing took 3561us\r\n...\r\n```\r\n:arrow_right: Average subsequent lookup: 3,346ms\r\n\r\nTest with `std::unordered_map`:\r\n```\r\n2020-05-19T08:59:53Z getcfcheckpt processing took 12205us\r\n2020-05-19T08:59:53Z getcfcheckpt processing took 3650us\r\n2020-05-19T08:59:53Z getcfcheckpt processing took 4660us\r\n2020-05-19T08:59:53Z getcfcheckpt processing took 3393us\r\n2020-05-19T08:59:53Z getcfcheckpt processing took 3669us\r\n2020-05-19T08:59:53Z getcfcheckpt processing took 2919us\r\n2020-05-19T08:59:53Z getcfcheckpt processing took 2565us\r\n2020-05-19T08:59:53Z getcfcheckpt processing took 2804us\r\n2020-05-19T08:59:53Z getcfcheckpt processing took 2348us\r\n2020-05-19T08:59:53Z getcfcheckpt processing took 2511us\r\n2020-05-19T08:59:53Z getcfcheckpt processing took 2264us\r\n...\r\n```\r\n:arrow_right: Average subsequent lookup: 3,078ms",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630706114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630843553",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-630843553",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 630843553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDg0MzU1Mw==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-19T14:08:37Z",
    "updated_at": "2020-05-19T14:08:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "re-utACK 0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf\r\n\r\nCompared to my last review `is_checkpoint` variable is introduced for better readability and if statement that was removed in error is added back: https://github.com/bitcoin/bitcoin/compare/b6eba9e492e1dfb38baec894bfda1cfb4d709e5d..0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630843553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632242849",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#issuecomment-632242849",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18960",
    "id": 632242849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjI0Mjg0OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-21T17:34:20Z",
    "updated_at": "2020-05-21T17:34:20Z",
    "author_association": "MEMBER",
    "body": "code review ACK 0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632242849/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/423819184",
    "pull_request_review_id": 410152048,
    "id": 423819184,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgxOTE4NA==",
    "diff_hunk": "@@ -31,6 +31,8 @@ constexpr char DB_FILTER_POS = 'P';\n constexpr unsigned int MAX_FLTR_FILE_SIZE = 0x1000000; // 16 MiB\n /** The pre-allocation chunk size for fltr?????.dat files */\n constexpr unsigned int FLTR_FILE_CHUNK_SIZE = 0x100000; // 1 MiB\n+/** Maximum size of the cfheaders cache */\n+constexpr size_t CF_HEADERS_CACHE_MAX_SZ{2000};",
    "path": "src/index/blockfilterindex.cpp",
    "position": 9,
    "original_position": 5,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is there any particular reason for limiting the size of the cache? With this numbers it would be full at block 2000000, i.e. in (2000000-630000)/(6 * 24 * 365) ~ 26 years.",
    "created_at": "2020-05-12T15:18:56Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r423819184",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/423819184"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r423819184"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/423819184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 39,
    "original_line": 39,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424002630",
    "pull_request_review_id": 410383758,
    "id": 424002630,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMjYzMA==",
    "diff_hunk": "@@ -31,6 +31,8 @@ constexpr char DB_FILTER_POS = 'P';\n constexpr unsigned int MAX_FLTR_FILE_SIZE = 0x1000000; // 16 MiB\n /** The pre-allocation chunk size for fltr?????.dat files */\n constexpr unsigned int FLTR_FILE_CHUNK_SIZE = 0x100000; // 1 MiB\n+/** Maximum size of the cfheaders cache */\n+constexpr size_t CF_HEADERS_CACHE_MAX_SZ{2000};",
    "path": "src/index/blockfilterindex.cpp",
    "position": 9,
    "original_position": 5,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I wanted to have some limit so that a bug doesn't turn into a memory exhaustion possibility (since we only ever add to this map, and never remove). I don't think the exact number matters. Presumably in 26 years, anyone who wants to serve compact block filters from a v0.21 Bitcoin Core server will be able to patch their own code.",
    "created_at": "2020-05-12T20:08:44Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424002630",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424002630"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424002630"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424002630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 39,
    "original_line": 39,
    "side": "RIGHT",
    "in_reply_to_id": 423819184
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424364005",
    "pull_request_review_id": 410830038,
    "id": 424364005,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM2NDAwNQ==",
    "diff_hunk": "@@ -31,6 +31,8 @@ constexpr char DB_FILTER_POS = 'P';\n constexpr unsigned int MAX_FLTR_FILE_SIZE = 0x1000000; // 16 MiB\n /** The pre-allocation chunk size for fltr?????.dat files */\n constexpr unsigned int FLTR_FILE_CHUNK_SIZE = 0x100000; // 1 MiB\n+/** Maximum size of the cfheaders cache */\n+constexpr size_t CF_HEADERS_CACHE_MAX_SZ{2000};",
    "path": "src/index/blockfilterindex.cpp",
    "position": 9,
    "original_position": 5,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree that when in doubt, it's better to be overcautious than risking introducing a memory exhaustion bug -- I just wanted to get sure there are no other reasons for the limit that I'm not aware of.",
    "created_at": "2020-05-13T11:26:57Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424364005",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424364005"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424364005"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424364005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 39,
    "original_line": 39,
    "side": "RIGHT",
    "in_reply_to_id": 423819184
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424406311",
    "pull_request_review_id": 410883693,
    "id": 424406311,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwNjMxMQ==",
    "diff_hunk": "@@ -30,6 +33,9 @@ class BlockFilterIndex final : public BaseIndex\n     bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter) const;\n     size_t WriteFilterToDisk(FlatFilePos& pos, const BlockFilter& filter);\n \n+    RecursiveMutex m_cs_headers_cache;",
    "path": "src/index/blockfilterindex.h",
    "position": null,
    "original_position": 14,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    Mutex m_cs_headers_cache;\r\n```\r\n\r\nnit (feel free to ignore). I haven't tested this, but from reading the code, a non-recursive mutex should be sufficient.",
    "created_at": "2020-05-13T12:43:33Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424406311",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424406311"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424406311"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424406311/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 36,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424507108",
    "pull_request_review_id": 411014712,
    "id": 424507108,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUwNzEwOA==",
    "diff_hunk": "@@ -387,13 +389,30 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    {\n+        // Check the headers cache\n+        LOCK(m_cs_headers_cache);\n+        auto header = m_headers_cache.find(block_index->GetBlockHash());\n+        if (header != m_headers_cache.end()) {\n+            header_out = header->second;\n+            return true;\n+        }\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    if (block_index->nHeight % CFCHECKPT_INTERVAL == 0) {\n+        // Add to the headers cache\n+        LOCK(m_cs_headers_cache);\n+        if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {\n+            m_headers_cache.emplace(block_index->GetBlockHash(), entry.header);",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a very minor issue but if we use the hash instead of the height as the key we could end up with headers of orphaned blocks in the cache since they will not be overridden or removed. This could also be the case if `CFCHECKPT_INTERVAL` would ever change. I know the chances for that happening are slim and if it happens we can deal with it then, just wanted to put it there.",
    "created_at": "2020-05-13T14:59:39Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424507108",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424507108"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424507108"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424507108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 414,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424637193",
    "pull_request_review_id": 411180373,
    "id": 424637193,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzNzE5Mw==",
    "diff_hunk": "@@ -387,13 +389,30 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    {\n+        // Check the headers cache\n+        LOCK(m_cs_headers_cache);\n+        auto header = m_headers_cache.find(block_index->GetBlockHash());\n+        if (header != m_headers_cache.end()) {\n+            header_out = header->second;\n+            return true;\n+        }\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    if (block_index->nHeight % CFCHECKPT_INTERVAL == 0) {\n+        // Add to the headers cache\n+        LOCK(m_cs_headers_cache);\n+        if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {\n+            m_headers_cache.emplace(block_index->GetBlockHash(), entry.header);",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "clarkmoody",
      "id": 1562417,
      "node_id": "MDQ6VXNlcjE1NjI0MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clarkmoody",
      "html_url": "https://github.com/clarkmoody",
      "followers_url": "https://api.github.com/users/clarkmoody/followers",
      "following_url": "https://api.github.com/users/clarkmoody/following{/other_user}",
      "gists_url": "https://api.github.com/users/clarkmoody/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clarkmoody/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
      "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
      "repos_url": "https://api.github.com/users/clarkmoody/repos",
      "events_url": "https://api.github.com/users/clarkmoody/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The test suite explicitly checks that filters for stale blocks may still be fetched.\r\n\r\nhttps://github.com/jnewbery/bitcoin/blob/2020-05-cfcheckpts-cache/test/functional/p2p_blockfilters.py#L89-L101",
    "created_at": "2020-05-13T18:14:51Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424637193",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424637193"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424637193"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424637193/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 414,
    "side": "RIGHT",
    "in_reply_to_id": 424507108
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424643299",
    "pull_request_review_id": 411187904,
    "id": 424643299,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0MzI5OQ==",
    "diff_hunk": "@@ -387,13 +389,30 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    {\n+        // Check the headers cache\n+        LOCK(m_cs_headers_cache);\n+        auto header = m_headers_cache.find(block_index->GetBlockHash());\n+        if (header != m_headers_cache.end()) {\n+            header_out = header->second;\n+            return true;\n+        }\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    if (block_index->nHeight % CFCHECKPT_INTERVAL == 0) {\n+        // Add to the headers cache\n+        LOCK(m_cs_headers_cache);\n+        if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 34,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "doesn't this statically cap (and freeze forever) the cache after inserting 2000 entries? Wouldn't it make sense to have some sort of invalidation logic? (I can't come up with a good one though)",
    "created_at": "2020-05-13T18:24:51Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424643299",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424643299"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424643299"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424643299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 413,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424648190",
    "pull_request_review_id": 411193878,
    "id": 424648190,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0ODE5MA==",
    "diff_hunk": "@@ -387,13 +389,30 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    {\n+        // Check the headers cache\n+        LOCK(m_cs_headers_cache);\n+        auto header = m_headers_cache.find(block_index->GetBlockHash());\n+        if (header != m_headers_cache.end()) {\n+            header_out = header->second;\n+            return true;\n+        }\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    if (block_index->nHeight % CFCHECKPT_INTERVAL == 0) {\n+        // Add to the headers cache\n+        LOCK(m_cs_headers_cache);\n+        if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 34,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If someone can mine enough blocks to fill up this cache, we have other problems. I think an adversary needs to mine blocks in the order of the 2000th triangle number to fill this up.\r\n\r\nAnd when this cache is full due to natural reasons (in 20 years), disks will be fast enough that we won't need a cache.",
    "created_at": "2020-05-13T18:32:45Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424648190",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424648190"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424648190"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424648190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 413,
    "side": "RIGHT",
    "in_reply_to_id": 424643299
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424648698",
    "pull_request_review_id": 411194523,
    "id": 424648698,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0ODY5OA==",
    "diff_hunk": "@@ -387,13 +389,30 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    {\n+        // Check the headers cache\n+        LOCK(m_cs_headers_cache);\n+        auto header = m_headers_cache.find(block_index->GetBlockHash());\n+        if (header != m_headers_cache.end()) {\n+            header_out = header->second;\n+            return true;\n+        }\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    if (block_index->nHeight % CFCHECKPT_INTERVAL == 0) {\n+        // Add to the headers cache\n+        LOCK(m_cs_headers_cache);\n+        if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 34,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe disks are fast enough or smart enough with caching today already, so it might not be needed after all. A benchmark would be nice...",
    "created_at": "2020-05-13T18:33:41Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424648698",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424648698"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424648698"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424648698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 413,
    "side": "RIGHT",
    "in_reply_to_id": 424643299
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424651189",
    "pull_request_review_id": 411197656,
    "id": 424651189,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1MTE4OQ==",
    "diff_hunk": "@@ -387,13 +389,30 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    {\n+        // Check the headers cache\n+        LOCK(m_cs_headers_cache);\n+        auto header = m_headers_cache.find(block_index->GetBlockHash());\n+        if (header != m_headers_cache.end()) {\n+            header_out = header->second;\n+            return true;\n+        }\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    if (block_index->nHeight % CFCHECKPT_INTERVAL == 0) {\n+        // Add to the headers cache\n+        LOCK(m_cs_headers_cache);\n+        if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 34,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh. You'r right. \r\nI missed the `% CFCHECKPT_INTERVAL == 0`.",
    "created_at": "2020-05-13T18:38:10Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424651189",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424651189"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424651189"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424651189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 413,
    "side": "RIGHT",
    "in_reply_to_id": 424643299
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424680456",
    "pull_request_review_id": 411234636,
    "id": 424680456,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4MDQ1Ng==",
    "diff_hunk": "@@ -387,13 +389,30 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    {\n+        // Check the headers cache\n+        LOCK(m_cs_headers_cache);\n+        auto header = m_headers_cache.find(block_index->GetBlockHash());\n+        if (header != m_headers_cache.end()) {\n+            header_out = header->second;\n+            return true;\n+        }\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    if (block_index->nHeight % CFCHECKPT_INTERVAL == 0) {\n+        // Add to the headers cache\n+        LOCK(m_cs_headers_cache);\n+        if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {\n+            m_headers_cache.emplace(block_index->GetBlockHash(), entry.header);",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> we could end up with headers of orphaned blocks in the cache\r\n\r\nCorrect. If there's a re-org across checkpoint block, then the disconnect block's filter header stays in the cache. That's an explicit design decision, since:\r\n- the cost is very small (32 bytes for header + map overhead so < 100 bytes)\r\n- it's an infrequent event\r\n- it saves on the complexity of having to recalculate the cache on re-orgs (eg compare with https://github.com/bitcoin-core-review-club/bitcoin/commit/af3bddfbdfb7de06d6e63a0a425da483c435521a#diff-eff7adeaec73a769788bb78858815c91R1258)\r\n\r\n> if CFCHECKPT_INTERVAL would ever change\r\n\r\nIn that case, we'd need to change the software, which would involve a stop/start. This is an in-memory cache so gets dropped on shutdown.",
    "created_at": "2020-05-13T19:29:50Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424680456",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424680456"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424680456"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424680456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 414,
    "side": "RIGHT",
    "in_reply_to_id": 424507108
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424680741",
    "pull_request_review_id": 411235010,
    "id": 424680741,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4MDc0MQ==",
    "diff_hunk": "@@ -30,6 +33,9 @@ class BlockFilterIndex final : public BaseIndex\n     bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter) const;\n     size_t WriteFilterToDisk(FlatFilePos& pos, const BlockFilter& filter);\n \n+    RecursiveMutex m_cs_headers_cache;",
    "path": "src/index/blockfilterindex.h",
    "position": null,
    "original_position": 14,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree. I'll change to `Mutex`.",
    "created_at": "2020-05-13T19:30:23Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424680741",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424680741"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424680741"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424680741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 424406311
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424681368",
    "pull_request_review_id": 411235844,
    "id": 424681368,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4MTM2OA==",
    "diff_hunk": "@@ -387,13 +389,30 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    {\n+        // Check the headers cache\n+        LOCK(m_cs_headers_cache);\n+        auto header = m_headers_cache.find(block_index->GetBlockHash());\n+        if (header != m_headers_cache.end()) {\n+            header_out = header->second;\n+            return true;\n+        }\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    if (block_index->nHeight % CFCHECKPT_INTERVAL == 0) {\n+        // Add to the headers cache\n+        LOCK(m_cs_headers_cache);\n+        if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 34,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Remind me to change this to 4000 in 2026 :)\r\n\r\nI agree that a benchmark would be nice.",
    "created_at": "2020-05-13T19:31:36Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424681368",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424681368"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424681368"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424681368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 413,
    "side": "RIGHT",
    "in_reply_to_id": 424643299
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424682225",
    "pull_request_review_id": 411237025,
    "id": 424682225,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4MjIyNQ==",
    "diff_hunk": "@@ -387,13 +389,30 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    {\n+        // Check the headers cache\n+        LOCK(m_cs_headers_cache);\n+        auto header = m_headers_cache.find(block_index->GetBlockHash());\n+        if (header != m_headers_cache.end()) {\n+            header_out = header->second;\n+            return true;\n+        }\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    if (block_index->nHeight % CFCHECKPT_INTERVAL == 0) {\n+        // Add to the headers cache\n+        LOCK(m_cs_headers_cache);\n+        if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 34,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```cpp\r\n// TODO change to 4000 in 2026\r\n```\r\n\r\n;)",
    "created_at": "2020-05-13T19:33:17Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424682225",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424682225"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424682225"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424682225/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 413,
    "side": "RIGHT",
    "in_reply_to_id": 424643299
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424685028",
    "pull_request_review_id": 411240539,
    "id": 424685028,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4NTAyOA==",
    "diff_hunk": "@@ -387,13 +389,30 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    {\n+        // Check the headers cache\n+        LOCK(m_cs_headers_cache);\n+        auto header = m_headers_cache.find(block_index->GetBlockHash());\n+        if (header != m_headers_cache.end()) {\n+            header_out = header->second;\n+            return true;\n+        }\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    if (block_index->nHeight % CFCHECKPT_INTERVAL == 0) {\n+        // Add to the headers cache\n+        LOCK(m_cs_headers_cache);\n+        if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 34,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "oops sorry, I meant 2046",
    "created_at": "2020-05-13T19:38:25Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424685028",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424685028"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424685028"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424685028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 413,
    "side": "RIGHT",
    "in_reply_to_id": 424643299
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424772712",
    "pull_request_review_id": 411349975,
    "id": 424772712,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc3MjcxMg==",
    "diff_hunk": "@@ -30,6 +33,9 @@ class BlockFilterIndex final : public BaseIndex\n     bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter) const;\n     size_t WriteFilterToDisk(FlatFilePos& pos, const BlockFilter& filter);\n \n+    RecursiveMutex m_cs_headers_cache;",
    "path": "src/index/blockfilterindex.h",
    "position": null,
    "original_position": 14,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "6fe202209efe97d2f1f6ede8d679c38aa3fa7429",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2020-05-13T22:44:08Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424772712",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424772712"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424772712"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424772712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 424406311
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424888402",
    "pull_request_review_id": 411485876,
    "id": 424888402,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg4ODQwMg==",
    "diff_hunk": "@@ -30,6 +33,9 @@ class BlockFilterIndex final : public BaseIndex\n     bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter) const;\n     size_t WriteFilterToDisk(FlatFilePos& pos, const BlockFilter& filter);\n \n+    Mutex m_cs_headers_cache;\n+    std::map<uint256, uint256> m_headers_cache GUARDED_BY(m_cs_headers_cache);",
    "path": "src/index/blockfilterindex.h",
    "position": null,
    "original_position": 15,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "7ad83ed252914d6d5b8ed81f103aecf052c68fb7",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Any reason `std::unordered_map` can't be used? I see that the tree-based `std::map` and `std::set` are used primarily throughout the codebase, but figured it may just be historical. Is there another reason these are preferred?",
    "created_at": "2020-05-14T06:00:57Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424888402",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424888402"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r424888402"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/424888402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 37,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425526443",
    "pull_request_review_id": 412300367,
    "id": 425526443,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUyNjQ0Mw==",
    "diff_hunk": "@@ -30,6 +33,9 @@ class BlockFilterIndex final : public BaseIndex\n     bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter) const;\n     size_t WriteFilterToDisk(FlatFilePos& pos, const BlockFilter& filter);\n \n+    Mutex m_cs_headers_cache;\n+    std::map<uint256, uint256> m_headers_cache GUARDED_BY(m_cs_headers_cache);",
    "path": "src/index/blockfilterindex.h",
    "position": null,
    "original_position": 15,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "7ad83ed252914d6d5b8ed81f103aecf052c68fb7",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I expect mostly laziness. With an `unordered_map`, you need to provide a hash function. In this case, it's easy. The data is all hash digests from block chain data, so I can just take the first 8 bytes from the uint256 filter header.\r\n\r\nI'll make that change tomorrow.",
    "created_at": "2020-05-15T02:07:31Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425526443",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425526443"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425526443"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425526443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 37,
    "side": "RIGHT",
    "in_reply_to_id": 424888402
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425708660",
    "pull_request_review_id": 412526565,
    "id": 425708660,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwODY2MA==",
    "diff_hunk": "@@ -30,6 +33,9 @@ class BlockFilterIndex final : public BaseIndex\n     bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter) const;\n     size_t WriteFilterToDisk(FlatFilePos& pos, const BlockFilter& filter);\n \n+    Mutex m_cs_headers_cache;\n+    std::map<uint256, uint256> m_headers_cache GUARDED_BY(m_cs_headers_cache);",
    "path": "src/index/blockfilterindex.h",
    "position": null,
    "original_position": 15,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "7ad83ed252914d6d5b8ed81f103aecf052c68fb7",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just as a reminder: There is no free lunch and unordered_map comes with a size penalty",
    "created_at": "2020-05-15T10:23:09Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425708660",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425708660"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425708660"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425708660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 37,
    "side": "RIGHT",
    "in_reply_to_id": 424888402
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425907876",
    "pull_request_review_id": 412787017,
    "id": 425907876,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkwNzg3Ng==",
    "diff_hunk": "@@ -30,6 +33,9 @@ class BlockFilterIndex final : public BaseIndex\n     bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter) const;\n     size_t WriteFilterToDisk(FlatFilePos& pos, const BlockFilter& filter);\n \n+    Mutex m_cs_headers_cache;\n+    std::map<uint256, uint256> m_headers_cache GUARDED_BY(m_cs_headers_cache);",
    "path": "src/index/blockfilterindex.h",
    "position": null,
    "original_position": 15,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "7ad83ed252914d6d5b8ed81f103aecf052c68fb7",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've reimplemented this as an unordered_map",
    "created_at": "2020-05-15T16:17:09Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425907876",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425907876"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425907876"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425907876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 37,
    "side": "RIGHT",
    "in_reply_to_id": 424888402
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425911921",
    "pull_request_review_id": 412792135,
    "id": 425911921,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkxMTkyMQ==",
    "diff_hunk": "@@ -31,6 +31,8 @@ constexpr char DB_FILTER_POS = 'P';\n constexpr unsigned int MAX_FLTR_FILE_SIZE = 0x1000000; // 16 MiB\n /** The pre-allocation chunk size for fltr?????.dat files */\n constexpr unsigned int FLTR_FILE_CHUNK_SIZE = 0x100000; // 1 MiB\n+/** Maximum size of the cfheaders cache */",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "4018953ee9d190188b0b10ef1463f7b64b4e59bb",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: give justification in comments for magic numbers so future readers have some idea how this was chosen and if/when it will need to be adjusted.",
    "created_at": "2020-05-15T16:24:18Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425911921",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425911921"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425911921"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425911921/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 34,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425918218",
    "pull_request_review_id": 412800070,
    "id": 425918218,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkxODIxOA==",
    "diff_hunk": "@@ -387,13 +389,25 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    LOCK(m_cs_headers_cache);\n+    auto header = m_headers_cache.find(block_index->GetBlockHash());\n+    if (header != m_headers_cache.end()) {\n+        header_out = header->second;\n+        return true;\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    // Add to the headers cache\n+    if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {\n+        m_headers_cache.emplace(block_index->GetBlockHash(), entry.header);\n+    }\n+",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "4018953ee9d190188b0b10ef1463f7b64b4e59bb",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You'll still want to condition this on `block_index->nHeight % CFCHECKPT_INTERVAL == 0`, otherwise the most recent 2000 requested headers will be cached rather than the desired ones.",
    "created_at": "2020-05-15T16:34:43Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425918218",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425918218"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425918218"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425918218/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 406,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 421,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425918731",
    "pull_request_review_id": 412800738,
    "id": 425918731,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkxODczMQ==",
    "diff_hunk": "@@ -387,13 +389,25 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    LOCK(m_cs_headers_cache);\n+    auto header = m_headers_cache.find(block_index->GetBlockHash());\n+    if (header != m_headers_cache.end()) {\n+        header_out = header->second;\n+        return true;\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    // Add to the headers cache\n+    if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {\n+        m_headers_cache.emplace(block_index->GetBlockHash(), entry.header);\n+    }\n+",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "4018953ee9d190188b0b10ef1463f7b64b4e59bb",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "yikes. Thanks",
    "created_at": "2020-05-15T16:35:39Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425918731",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425918731"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425918731"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425918731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 406,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 421,
    "side": "RIGHT",
    "in_reply_to_id": 425918218
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425925522",
    "pull_request_review_id": 412809145,
    "id": 425925522,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkyNTUyMg==",
    "diff_hunk": "@@ -31,6 +31,8 @@ constexpr char DB_FILTER_POS = 'P';\n constexpr unsigned int MAX_FLTR_FILE_SIZE = 0x1000000; // 16 MiB\n /** The pre-allocation chunk size for fltr?????.dat files */\n constexpr unsigned int FLTR_FILE_CHUNK_SIZE = 0x100000; // 1 MiB\n+/** Maximum size of the cfheaders cache */",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "4018953ee9d190188b0b10ef1463f7b64b4e59bb",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2020-05-15T16:48:01Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425925522",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425925522"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425925522"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425925522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 34,
    "side": "RIGHT",
    "in_reply_to_id": 425911921
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425925547",
    "pull_request_review_id": 412809181,
    "id": 425925547,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkyNTU0Nw==",
    "diff_hunk": "@@ -387,13 +389,25 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    LOCK(m_cs_headers_cache);\n+    auto header = m_headers_cache.find(block_index->GetBlockHash());\n+    if (header != m_headers_cache.end()) {\n+        header_out = header->second;\n+        return true;\n+    }\n+\n     DBVal entry;\n     if (!LookupOne(*m_db, block_index, entry)) {\n         return false;\n     }\n \n+    // Add to the headers cache\n+    if (m_headers_cache.size() < CF_HEADERS_CACHE_MAX_SZ) {\n+        m_headers_cache.emplace(block_index->GetBlockHash(), entry.header);\n+    }\n+",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 32,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "4018953ee9d190188b0b10ef1463f7b64b4e59bb",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2020-05-15T16:48:05Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425925547",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425925547"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r425925547"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/425925547/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 406,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 421,
    "side": "RIGHT",
    "in_reply_to_id": 425918218
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426246248",
    "pull_request_review_id": 413149842,
    "id": 426246248,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI0NjI0OA==",
    "diff_hunk": "@@ -387,13 +393,26 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    LOCK(m_cs_headers_cache);\n+    auto header = m_headers_cache.find(block_index->GetBlockHash());",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "b6eba9e492e1dfb38baec894bfda1cfb4d709e5d",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Before the last change, the cache lookup only happened for checkpoint blocks (i.e. block number modulo 1000 is zero). Is this removal of the condition intended?",
    "created_at": "2020-05-17T10:49:38Z",
    "updated_at": "2020-05-18T16:54:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r426246248",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426246248"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r426246248"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426246248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 399,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426766679",
    "pull_request_review_id": 413774709,
    "id": 426766679,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc2NjY3OQ==",
    "diff_hunk": "@@ -387,13 +393,26 @@ bool BlockFilterIndex::LookupFilter(const CBlockIndex* block_index, BlockFilter&\n     return ReadFilterFromDisk(entry.pos, filter_out);\n }\n \n-bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out) const\n+bool BlockFilterIndex::LookupFilterHeader(const CBlockIndex* block_index, uint256& header_out)\n {\n+    LOCK(m_cs_headers_cache);\n+    auto header = m_headers_cache.find(block_index->GetBlockHash());",
    "path": "src/index/blockfilterindex.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "b6eba9e492e1dfb38baec894bfda1cfb4d709e5d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No. Not intentional. I just messed up splitting out the `LOCK(m_cs_headers_cache)`. Thanks for catching this.",
    "created_at": "2020-05-18T16:54:54Z",
    "updated_at": "2020-05-18T16:54:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r426766679",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426766679"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r426766679"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/426766679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 399,
    "side": "RIGHT",
    "in_reply_to_id": 426246248
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428395728",
    "pull_request_review_id": 415819860,
    "id": 428395728,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NTcyOA==",
    "diff_hunk": "@@ -30,6 +38,9 @@ class BlockFilterIndex final : public BaseIndex\n     bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter) const;\n     size_t WriteFilterToDisk(FlatFilePos& pos, const BlockFilter& filter);\n \n+    Mutex m_cs_headers_cache;\n+    std::unordered_map<uint256, uint256, FilterHeaderHasher> m_headers_cache GUARDED_BY(m_cs_headers_cache);",
    "path": "src/index/blockfilterindex.h",
    "position": 20,
    "original_position": 20,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If you have to change PR again, you may comment that key value is block hash and mapped value filter-header, type being the same it may be confusing at first look.",
    "created_at": "2020-05-21T01:25:22Z",
    "updated_at": "2020-05-21T01:29:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r428395728",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428395728"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r428395728"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428395728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 42,
    "original_line": 42,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428714115",
    "pull_request_review_id": 416230929,
    "id": 428714115,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODcxNDExNQ==",
    "diff_hunk": "@@ -30,6 +38,9 @@ class BlockFilterIndex final : public BaseIndex\n     bool ReadFilterFromDisk(const FlatFilePos& pos, BlockFilter& filter) const;\n     size_t WriteFilterToDisk(FlatFilePos& pos, const BlockFilter& filter);\n \n+    Mutex m_cs_headers_cache;\n+    std::unordered_map<uint256, uint256, FilterHeaderHasher> m_headers_cache GUARDED_BY(m_cs_headers_cache);",
    "path": "src/index/blockfilterindex.h",
    "position": 20,
    "original_position": 20,
    "commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "original_commit_id": "0187d4c118ab4c0f5c2d4fb180c2a8dea8ac53cf",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point. I'll add a comment if I need to retouch the branch.",
    "created_at": "2020-05-21T15:06:27Z",
    "updated_at": "2020-05-21T15:06:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r428714115",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428714115"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18960#discussion_r428714115"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18960"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/428714115/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 42,
    "original_line": 42,
    "side": "RIGHT",
    "in_reply_to_id": 428395728
  }
]