promag,2020-12-05 23:21:59,"> It cleans up a little bit but the stuff that is already there isn't currently confusing.\n\nThe point was to avoid double checking `m_internal_spk_managers`, not because it's confusing.\n\n> Furthermore, the change to auto in the 3rd commit actually makes it slightly less clear about the type.\n\nKind of, but the idea was not to use `auto`, but to make it `const`.\n\nThanks @achow101 for",https://github.com/bitcoin/bitcoin/pull/20580#issuecomment-739429513,739429513,
achow101,2020-12-05 22:41:06,"This change is simply incorrect. The original checked for `LegacyScriptPubKeyMan`. This now just checks for the presence of a `ScriptPubKeyMan` that provides legacy change addresses. That is completely not what this is for. `OutputType::LEGACY` is unrelated to `LegacyScriptPubKeyMan`, this could have used `OutputType::BECH32` and not been any different.",https://github.com/bitcoin/bitcoin/pull/20580#discussion_r536906627,536906627,src/wallet/wallet.cpp
promag,2020-12-05 23:08:52,"Got it, now I understand the reason of the cast. But ATM all `m_internal_spk_managers` are the same `LegacyScriptPubKeyMan` instance right?",https://github.com/bitcoin/bitcoin/pull/20580#discussion_r536910574,536910574,src/wallet/wallet.cpp
achow101,2020-12-06 00:11:26,"> But ATM all `m_internal_spk_managers` are the same `LegacyScriptPubKeyMan` instance right?\n\nOnly for legacy wallets. For legacy wallets, there's only one `ScriptPubKeyMan` for all `spk_managers`.\n\nHowever for descriptor wallets, there are multiple `DescriptorScriptPubKeyMan`s. This change is incorrect for descriptor wallets.",https://github.com/bitcoin/bitcoin/pull/20580#discussion_r536918902,536918902,src/wallet/wallet.cpp
