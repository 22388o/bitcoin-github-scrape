[
  {
    "sha": "dc2d0650fdb69d27fe1b0092555b7841d542a635",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYzJkMDY1MGZkYjY5ZDI3ZmUxYjAwOTI1NTViNzg0MWQ1NDJhNjM1",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T06:57:25Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:26:30Z"
      },
      "message": "make BlockUntilSyncedToCurrentChain() const\n\nThe method checks the chain tip for the best block, and calls SyncWithValidationInterfaceQueue() (a standalone function) if necessary.",
      "tree": {
        "sha": "d7d5de77c40f5118148187cbc723205b35bd0b1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7d5de77c40f5118148187cbc723205b35bd0b1d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc2d0650fdb69d27fe1b0092555b7841d542a635",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl5cwzYACgkQV692LbM1\nMyISsw/+OyLDdBu0v43TcsSXCye948rRXH4jkyfk2FItXDrwF6zDh6Y8CsQrmc3k\nLCFlc+VBSzgLine53AuKzJtkN2Tm+h2Tt1n+vdM1VyqOOh8ffT+7gD/nPRU8QhmK\n/jRlW1XjWQzMmSV9EE+gyOIXDUBnNGEZKAcPC/A8/GPMcmS2VNCZt3tFn04HGVC/\nMzbf0cV57Nh+surw+mLaqtTH8fukJHJneH2+ysIUdY2fXxYTKH8ysvcM0X5Rnbqg\nkH5HZHDzPdQf6Tu8DSk5k0fdwIrwDUZVEDJkTJfaM8ep96tjAHFLy/lNee7c5vxK\nKc3oQsuD64mcg++sgdZ0SJQaOKLreOsG3Lff0WS16/lqcGm/m0UQXaj/ToVnaXae\n/Hn1aLbtZiz8Nf4UrnhkNGNvUpW8v5Y5N51fsTP8iZxqYE7VOFGdc6BFFXPZ8emy\nHP/PZIAQ8GS80WX6vAoQy7IZpx9nnxU5THOSBA8VIH2E4U6saDhmaabwKTI0jk/e\n2Lt/rsX/961wAMLKznPgz68JtekU8sBLh3kPSDAQZVXhIZMEcE6lHn30bNV/nd14\ndUeU+bYamFPItpe7RJ7CCVyhYDyqFk6IMT0DDx1JU4cpi0ISusgrdcBS2g1NMT5j\ntvJSRCR6sYefvv4x6fLk14t1SbH4OomdMxKuxNfNGDzBCuAI7cw=\n=Sw/j\n-----END PGP SIGNATURE-----",
        "payload": "tree d7d5de77c40f5118148187cbc723205b35bd0b1d\nparent 54a7ef612a3b69984d521432f8a694a682c76090\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583132245 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137590 +0900\n\nmake BlockUntilSyncedToCurrentChain() const\n\nThe method checks the chain tip for the best block, and calls SyncWithValidationInterfaceQueue() (a standalone function) if necessary.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc2d0650fdb69d27fe1b0092555b7841d542a635",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dc2d0650fdb69d27fe1b0092555b7841d542a635",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc2d0650fdb69d27fe1b0092555b7841d542a635/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54a7ef612a3b69984d521432f8a694a682c76090",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54a7ef612a3b69984d521432f8a694a682c76090",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54a7ef612a3b69984d521432f8a694a682c76090"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3f3b301246f31a59a9032936b493240415b2b447",
        "filename": "src/index/base.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc2d0650fdb69d27fe1b0092555b7841d542a635/src/index/base.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc2d0650fdb69d27fe1b0092555b7841d542a635/src/index/base.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.cpp?ref=dc2d0650fdb69d27fe1b0092555b7841d542a635",
        "patch": "@@ -270,7 +270,7 @@ void BaseIndex::ChainStateFlushed(const CBlockLocator& locator)\n     Commit();\n }\n \n-bool BaseIndex::BlockUntilSyncedToCurrentChain()\n+bool BaseIndex::BlockUntilSyncedToCurrentChain() const\n {\n     AssertLockNotHeld(cs_main);\n "
      },
      {
        "sha": "fb30aa7a0ee5efbc7d44be481ee8425258f41015",
        "filename": "src/index/base.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc2d0650fdb69d27fe1b0092555b7841d542a635/src/index/base.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc2d0650fdb69d27fe1b0092555b7841d542a635/src/index/base.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.h?ref=dc2d0650fdb69d27fe1b0092555b7841d542a635",
        "patch": "@@ -97,7 +97,7 @@ class BaseIndex : public CValidationInterface\n     /// sync once and only needs to process blocks in the ValidationInterface\n     /// queue. If the index is catching up from far behind, this method does\n     /// not block and immediately returns false.\n-    bool BlockUntilSyncedToCurrentChain();\n+    bool BlockUntilSyncedToCurrentChain() const;\n \n     void Interrupt();\n "
      },
      {
        "sha": "ed7601dbbcffb1eae6de884f9f963eae7f13b011",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc2d0650fdb69d27fe1b0092555b7841d542a635/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc2d0650fdb69d27fe1b0092555b7841d542a635/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=dc2d0650fdb69d27fe1b0092555b7841d542a635",
        "patch": "@@ -1150,7 +1150,7 @@ void CWallet::UpdatedBlockTip()\n }\n \n \n-void CWallet::BlockUntilSyncedToCurrentChain() {\n+void CWallet::BlockUntilSyncedToCurrentChain() const {\n     AssertLockNotHeld(cs_wallet);\n     // Skip the queue-draining stuff if we know we're caught up with\n     // ::ChainActive().Tip(), otherwise put a callback in the validation interface queue and wait"
      },
      {
        "sha": "668976a5742a29781e30b59a179171ddc9e26f9b",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc2d0650fdb69d27fe1b0092555b7841d542a635/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc2d0650fdb69d27fe1b0092555b7841d542a635/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=dc2d0650fdb69d27fe1b0092555b7841d542a635",
        "patch": "@@ -1112,7 +1112,7 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n      * Obviously holding cs_main/cs_wallet when going into this call may cause\n      * deadlock\n      */\n-    void BlockUntilSyncedToCurrentChain() LOCKS_EXCLUDED(cs_main, cs_wallet);\n+    void BlockUntilSyncedToCurrentChain() const LOCKS_EXCLUDED(cs_main, cs_wallet);\n \n     /** set a single wallet flag */\n     void SetWalletFlag(uint64_t flags);"
      }
    ]
  },
  {
    "sha": "ddc93557ad0cf8e433df850d38710828ccd99c16",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGM5MzU1N2FkMGNmOGU0MzNkZjg1MGQzODcxMDgyOGNjZDk5YzE2",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T07:23:04Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:26:30Z"
      },
      "message": "wallet: make CanGenerateKeys() const\n\nThis method simply checks if HD is or can be enabled and does not require mutability.",
      "tree": {
        "sha": "d7b202aa5412c1dfc74b418c851c1932e05ed8b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7b202aa5412c1dfc74b418c851c1932e05ed8b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddc93557ad0cf8e433df850d38710828ccd99c16",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl5cwzYACgkQV692LbM1\nMyKIUA//W8XduLObMRv1GSNGWmOhQ4DBRbsPUvzwb0qcxYwTzC/k5G/+wEFfTsWR\nF6uLt2umvnmQR7Wy3cS8+3mu2PJn1l7ZlaC1yTfBcLUhAj4q6x4zZyZ8pzdE0wQu\n2n8AX5A0YcCZURdjuaDp08fgECBh0ATPWqxIXItiIBWYXMzQ/w9ipCmhyTrr5M0d\nnyoFBBfgG8MZnTybCxNeDYqN3CnD7J6FDLRz5JiW6nu2LmrN1c5HXcAaifmCQZlM\ns21zJPEQbU/Oo70lSljZRXrBoUxv8SgScnMm72TsfF4yEPZg5gkBW4K5m5o2Obf7\nxJFPWcgXiVRfHdMUvHqSVqegjgxHzRhqZ4GsRraBp5UcSaHbtKm9inh7pxlTlqDL\nPb5yiWYyyGSRfca38aTkFmB9SuMxur7THyklQDEh7PDmT2OUSWzv7PndVnXJLhfb\nX14mCXh15lz+2OjEmH96R95a9bYf27a0MokjDbdL0pun+xLMfdf4dJpaHxfzaAGE\nNpLsUqF3PIaK57lQN3wW+BIW8zL9SuZnaTWHwyAKHiQBHkTUZvCOaokkP8DIVTer\nxHAhhQV0iFig8YrwRKJf0qb3o7siEaf1WTCk2oufdfKwzw4asgionLYIQG7Y3G7s\nI8xo1KR55L4+Yse74Mb/alZtxpU8bien4A0RDAEft+3zeONtqys=\n=f26H\n-----END PGP SIGNATURE-----",
        "payload": "tree d7b202aa5412c1dfc74b418c851c1932e05ed8b3\nparent dc2d0650fdb69d27fe1b0092555b7841d542a635\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583133784 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137590 +0900\n\nwallet: make CanGenerateKeys() const\n\nThis method simply checks if HD is or can be enabled and does not require mutability.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddc93557ad0cf8e433df850d38710828ccd99c16",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ddc93557ad0cf8e433df850d38710828ccd99c16",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddc93557ad0cf8e433df850d38710828ccd99c16/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc2d0650fdb69d27fe1b0092555b7841d542a635",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc2d0650fdb69d27fe1b0092555b7841d542a635",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc2d0650fdb69d27fe1b0092555b7841d542a635"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5f8e5ac971df8b3c4a93ef2e017226e7795c5fe2",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddc93557ad0cf8e433df850d38710828ccd99c16/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddc93557ad0cf8e433df850d38710828ccd99c16/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=ddc93557ad0cf8e433df850d38710828ccd99c16",
        "patch": "@@ -973,7 +973,7 @@ void LegacyScriptPubKeyMan::LoadKeyPool(int64_t nIndex, const CKeyPool &keypool)\n         mapKeyMetadata[keyid] = CKeyMetadata(keypool.nTime);\n }\n \n-bool LegacyScriptPubKeyMan::CanGenerateKeys()\n+bool LegacyScriptPubKeyMan::CanGenerateKeys() const\n {\n     // A wallet can generate keys if it has an HD seed (IsHDEnabled) or it is a non-HD wallet (pre FEATURE_HD)\n     LOCK(cs_KeyStore);"
      },
      {
        "sha": "c667fbf57c89c790b4329fed4ef9f7fb6be7a91e",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddc93557ad0cf8e433df850d38710828ccd99c16/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddc93557ad0cf8e433df850d38710828ccd99c16/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=ddc93557ad0cf8e433df850d38710828ccd99c16",
        "patch": "@@ -410,7 +410,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     bool ImportScriptPubKeys(const std::set<CScript>& script_pub_keys, const bool have_solving_data, const int64_t timestamp) EXCLUSIVE_LOCKS_REQUIRED(cs_KeyStore);\n \n     /* Returns true if the wallet can generate new keys */\n-    bool CanGenerateKeys();\n+    bool CanGenerateKeys() const;\n \n     /* Generates a new HD seed (will not be activated) */\n     CPubKey GenerateNewSeed();"
      }
    ]
  },
  {
    "sha": "037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMzdmYTc3MGViMWVkNTE1MmIzZWYyYzVkM2ZiMmE4MTJkM2VmOTQ0",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T07:33:45Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:26:30Z"
      },
      "message": "wallet: make KeypoolCountExternalKeys() const\n\nThis method returns the sum of the key pool sizes. It does no modification.",
      "tree": {
        "sha": "e6ebc42e82db1ecbcd4eff9feb3091e91cdf527c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6ebc42e82db1ecbcd4eff9feb3091e91cdf527c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl5cwzYACgkQV692LbM1\nMyKgxw/9GB3y1PH3tcUBD+vNJXQS21/OX0gYw3yjGZ8bgv77NgTt9ce1Kl8ef1JE\nuCzI38Iiwva+iLV09ekHJWcTq3u3dUNgQOZ6o8Gb8+OQ/kAGuWUwqNdY832tkxZq\nbPx2f4QGCv27gQXjl225j41bhIYrzqEXzCBT0eeqTe6KCJKHsK9HAFUkMkP6qkzM\nLCWSDS7pFfjMJ2EmDAW7yjU7HBNUaAC6tC8UXN2qCs00jJCCwny2cyUbRfyFeHBa\nosnpg1rHQOK2gz/tdKetrKyay/ZdVWGQ8qRu3LCEjVVPdL8HCNTXW5R02aVEBFYa\nHN27gVxdCcP2ELb9xEGVY5lGYjSNld6rOReKQjJJi0R7M1c4hE1STgLYFbmbjH0T\nMMlIUQrgUaD46voFijXrQIca+d9x6PLdWuZfxBn64fhsOHV5ChtiMNHMZ8mxpK5l\nkcmMrQlPVRkASzOt2ZRQWHe51cLSdieJd0+kNguzScGIu12oxcoRPfw4DzYEZ1xW\nbkRxtxWrkVwDkjv5WMAro95OjIYXOtkPm1uS7/akcNlgjvAsmZ4dxwrKTsM6OekL\nMUPf1TUljCgMGD7faKEPIqM0BW6Ny0guOtZ7uFr8U0G+MMKW395/AeV5edkLIcie\nrsWunFuz0toOMJukTFcnIUTwWZdK8QX+Ti9NuHx8jRk897bB5PU=\n=JehZ\n-----END PGP SIGNATURE-----",
        "payload": "tree e6ebc42e82db1ecbcd4eff9feb3091e91cdf527c\nparent ddc93557ad0cf8e433df850d38710828ccd99c16\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583134425 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137590 +0900\n\nwallet: make KeypoolCountExternalKeys() const\n\nThis method returns the sum of the key pool sizes. It does no modification.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ddc93557ad0cf8e433df850d38710828ccd99c16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddc93557ad0cf8e433df850d38710828ccd99c16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ddc93557ad0cf8e433df850d38710828ccd99c16"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "defe2f0a9f4cd9eab3a3e6a3930e55aa8183181d",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944",
        "patch": "@@ -459,7 +459,7 @@ int64_t LegacyScriptPubKeyMan::GetOldestKeyPoolTime()\n     return oldestKey;\n }\n \n-size_t LegacyScriptPubKeyMan::KeypoolCountExternalKeys()\n+size_t LegacyScriptPubKeyMan::KeypoolCountExternalKeys() const\n {\n     LOCK(cs_KeyStore);\n     return setExternalKeyPool.size() + set_pre_split_keypool.size();"
      },
      {
        "sha": "213084c5236bac75e8ac75e917826fedc3a917ef",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944",
        "patch": "@@ -196,7 +196,7 @@ class ScriptPubKeyMan\n \n     virtual int64_t GetOldestKeyPoolTime() { return GetTime(); }\n \n-    virtual size_t KeypoolCountExternalKeys() { return 0; }\n+    virtual size_t KeypoolCountExternalKeys() const { return 0; }\n     virtual unsigned int GetKeyPoolSize() const { return 0; }\n \n     virtual int64_t GetTimeFirstKey() const { return 0; }\n@@ -337,7 +337,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     void RewriteDB() override;\n \n     int64_t GetOldestKeyPoolTime() override;\n-    size_t KeypoolCountExternalKeys() override;\n+    size_t KeypoolCountExternalKeys() const override;\n     unsigned int GetKeyPoolSize() const override;\n \n     int64_t GetTimeFirstKey() const override;"
      },
      {
        "sha": "009c44332d352f1539f0daf01ab6dee053d29b57",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944",
        "patch": "@@ -3112,7 +3112,7 @@ bool CWallet::DelAddressBook(const CTxDestination& address)\n     return WalletBatch(*database).EraseName(EncodeDestination(address));\n }\n \n-size_t CWallet::KeypoolCountExternalKeys()\n+size_t CWallet::KeypoolCountExternalKeys() const\n {\n     AssertLockHeld(cs_wallet);\n "
      },
      {
        "sha": "63ca5450849ca95e26f9c80ac37070c13a33bda2",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944",
        "patch": "@@ -968,7 +968,7 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n     /** Absolute maximum transaction fee (in satoshis) used by default for the wallet */\n     CAmount m_default_max_tx_fee{DEFAULT_TRANSACTION_MAXFEE};\n \n-    size_t KeypoolCountExternalKeys() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    size_t KeypoolCountExternalKeys() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool TopUpKeyPool(unsigned int kpSize = 0);\n \n     int64_t GetOldestKeyPoolTime();"
      }
    ]
  },
  {
    "sha": "8cd0b86340870d8f359e4ae26880e03ea36818ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Y2QwYjg2MzQwODcwZDhmMzU5ZTRhZTI2ODgwZTAzZWEzNjgxOGFi",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T07:35:58Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:26:30Z"
      },
      "message": "wallet: make CanGetAddresses() const\n\nCWallet::CanGetAddresses() is used to check whether the wallet has available or is able to produce keys for addresses. It uses the ScriptPubKeyMan::CanGetAddresses(), which in turn uses the const KeypoolCountExternalKeys() method, all which do counting and no modifications.",
      "tree": {
        "sha": "b25041df17bf166b6a3750b8c57ef4c6bdbe6f87",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b25041df17bf166b6a3750b8c57ef4c6bdbe6f87"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8cd0b86340870d8f359e4ae26880e03ea36818ab",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl5cwzYACgkQV692LbM1\nMyIveQ/8Dq7g/z0cfV4DBmbt/3UAZa7PlFJwlCYqI8RU0o8N2bC0F6oLbagtZBWN\n4hyd880ExLmIvwHWFJp+wjgxNQxBrwtce7zrbOM91VKgoM0JCIjAToLU2YSFQHyt\nOHGOYnG17UIjll2QvIp6ppa6wQsRWa9Wh8NzAp5EYShBiAcDP1mOXCwHdChkk/Mu\niCBWVjlTaEvTUkVhsfogNks8OAAz399smJmG/k8Y5p0jkFvE9oKSi6nzfAiCupT1\nflNsc02maJiGLMsQpPOf6MvaflZsdOf6G3Unrt4FkFbI05zgSJcWcuIB7c+yJeXk\nZv2VX7O+Co455+FpmzqxtBb5jUHjv6V1N3RZTR5WSavswWiAxMqeglZPhBd6HX30\n2i/DKzfxmmAdj8ALmSdffyO0cymh1n8GeG+XvUjSDVow49Jg3sHzL7rZ1ACsndMb\nM3eEKad+mjbVOHgw2Q+bRgTI/NXtsBA72VMbMJ4jN1LWOHuGd7er1TczmzFjOTqa\nRmVAg//M9Ap2zn/BS3glB1oos2fvwwIxAjU/348rQrO0DcEhM7IN131inZkXMpmM\nqQZzvT5zdfRul4HWQHrlH6X8X9tIBfMZXk9gDLlteekLIwLYzMDb7scA8mD+bWSP\n1tBuHvkhg8AyRyxDRX602RqpJUgoZ/6jmfaaEPrGVKzCoFA/oPE=\n=Zms+\n-----END PGP SIGNATURE-----",
        "payload": "tree b25041df17bf166b6a3750b8c57ef4c6bdbe6f87\nparent 037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583134558 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137590 +0900\n\nwallet: make CanGetAddresses() const\n\nCWallet::CanGetAddresses() is used to check whether the wallet has available or is able to produce keys for addresses. It uses the ScriptPubKeyMan::CanGetAddresses(), which in turn uses the const KeypoolCountExternalKeys() method, all which do counting and no modifications.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cd0b86340870d8f359e4ae26880e03ea36818ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8cd0b86340870d8f359e4ae26880e03ea36818ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cd0b86340870d8f359e4ae26880e03ea36818ab/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/037fa770eb1ed5152b3ef2c5d3fb2a812d3ef944"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "7ddf3b22e81e29b91c2d808a4b493b36402ad9f6",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cd0b86340870d8f359e4ae26880e03ea36818ab/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cd0b86340870d8f359e4ae26880e03ea36818ab/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=8cd0b86340870d8f359e4ae26880e03ea36818ab",
        "patch": "@@ -468,7 +468,7 @@ class WalletImpl : public Wallet\n     }\n     unsigned int getConfirmTarget() override { return m_wallet->m_confirm_target; }\n     bool hdEnabled() override { return m_wallet->IsHDEnabled(); }\n-    bool canGetAddresses() override { return m_wallet->CanGetAddresses(); }\n+    bool canGetAddresses() const override { return m_wallet->CanGetAddresses(); }\n     bool IsWalletFlagSet(uint64_t flag) override { return m_wallet->IsWalletFlagSet(flag); }\n     OutputType getDefaultAddressType() override { return m_wallet->m_default_address_type; }\n     OutputType getDefaultChangeType() override { return m_wallet->m_default_change_type; }"
      },
      {
        "sha": "4351253412ae0a4753fe5e98e779123d236d282a",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cd0b86340870d8f359e4ae26880e03ea36818ab/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cd0b86340870d8f359e4ae26880e03ea36818ab/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=8cd0b86340870d8f359e4ae26880e03ea36818ab",
        "patch": "@@ -246,7 +246,7 @@ class Wallet\n     virtual bool hdEnabled() = 0;\n \n     // Return whether the wallet is blank.\n-    virtual bool canGetAddresses() = 0;\n+    virtual bool canGetAddresses() const = 0;\n \n     // check if a certain wallet flag is set.\n     virtual bool IsWalletFlagSet(uint64_t flag) = 0;"
      },
      {
        "sha": "8ff00e802f968ed71ff0b8ebda978d1a8a83d0d9",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cd0b86340870d8f359e4ae26880e03ea36818ab/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cd0b86340870d8f359e4ae26880e03ea36818ab/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=8cd0b86340870d8f359e4ae26880e03ea36818ab",
        "patch": "@@ -358,7 +358,7 @@ bool LegacyScriptPubKeyMan::IsHDEnabled() const\n     return !hdChain.seed_id.IsNull();\n }\n \n-bool LegacyScriptPubKeyMan::CanGetAddresses(bool internal)\n+bool LegacyScriptPubKeyMan::CanGetAddresses(bool internal) const\n {\n     LOCK(cs_KeyStore);\n     // Check if the keypool has keys"
      },
      {
        "sha": "9d227ad3bf93477d9f71f878108bd9bb9fdfc202",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cd0b86340870d8f359e4ae26880e03ea36818ab/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cd0b86340870d8f359e4ae26880e03ea36818ab/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=8cd0b86340870d8f359e4ae26880e03ea36818ab",
        "patch": "@@ -184,7 +184,7 @@ class ScriptPubKeyMan\n     virtual bool IsHDEnabled() const { return false; }\n \n     /* Returns true if the wallet can give out new addresses. This means it has keys in the keypool or can generate new keys */\n-    virtual bool CanGetAddresses(bool internal = false) { return false; }\n+    virtual bool CanGetAddresses(bool internal = false) const { return false; }\n \n     /** Upgrades the wallet to the specified version */\n     virtual bool Upgrade(int prev_version, std::string& error) { return false; }\n@@ -344,7 +344,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n \n     const CKeyMetadata* GetMetadata(const CTxDestination& dest) const override;\n \n-    bool CanGetAddresses(bool internal = false) override;\n+    bool CanGetAddresses(bool internal = false) const override;\n \n     std::unique_ptr<SigningProvider> GetSigningProvider(const CScript& script) const override;\n "
      },
      {
        "sha": "8f6dbbad52280755963f3871d69193974afad895",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cd0b86340870d8f359e4ae26880e03ea36818ab/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cd0b86340870d8f359e4ae26880e03ea36818ab/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=8cd0b86340870d8f359e4ae26880e03ea36818ab",
        "patch": "@@ -1333,7 +1333,7 @@ bool CWallet::IsHDEnabled() const\n     return result;\n }\n \n-bool CWallet::CanGetAddresses(bool internal)\n+bool CWallet::CanGetAddresses(bool internal) const\n {\n     LOCK(cs_wallet);\n     if (m_spk_managers.empty()) return false;"
      },
      {
        "sha": "1dd9f779a297408f2a8e53fce851b32ecb7e7b4c",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cd0b86340870d8f359e4ae26880e03ea36818ab/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cd0b86340870d8f359e4ae26880e03ea36818ab/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=8cd0b86340870d8f359e4ae26880e03ea36818ab",
        "patch": "@@ -1104,7 +1104,7 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n     bool IsHDEnabled() const;\n \n     /* Returns true if the wallet can give out new addresses. This means it has keys in the keypool or can generate new keys */\n-    bool CanGetAddresses(bool internal = false);\n+    bool CanGetAddresses(bool internal = false) const;\n \n     /**\n      * Blocks until the wallet state is up-to-date to /at least/ the current"
      }
    ]
  },
  {
    "sha": "d366795d180bc52ba750f71f201a6e5e0c40f1b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzY2Nzk1ZDE4MGJjNTJiYTc1MGY3MWYyMDFhNmU1ZTBjNDBmMWI2",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T07:39:22Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:26:30Z"
      },
      "message": "wallet/db: make Backup() const\n\nThis method is the to-disk equivalent of serialize methods which are also const.",
      "tree": {
        "sha": "9d42d4cff67e0c481eaf4cbdb2a5562d0898f018",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d42d4cff67e0c481eaf4cbdb2a5562d0898f018"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d366795d180bc52ba750f71f201a6e5e0c40f1b6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl5cwzYACgkQV692LbM1\nMyKJUg/9HqwBZ6ataI/szR1sMQAvRD9VZu17TeT9Barj1i342CLW0O15SAckSDV3\ng42HzAOhznEWjisKGjrMwSF+QXBqGn1iQEkuxorvdX0TUN+pH8LpgS3LbkeXPuT/\n3nxGcXVuzETHu1hmaeQmhiJo1Yj8XGCD3Wkm76YDhjnRfE7EpmLQ+jTi7trRv5Sv\nj9JPyxg4POj4ZsnhQ8zrBIgmWN7Mr5vawf/1GnEF0V+fo3UlwVJiWqLWitevJSQY\nKQsctNP+PdPlizSHxDa0S8aMl3DL6qASOSHSRmRzZdcex3XSYwc4YFNURRpUuvI1\nyPCZeCHnUTy4UmvWANx6IcE421UeDyNpa1vMbzMXMCOq4dKDBjleyNIT49roR243\n+LYuSWF4etRgLtYYL6L09Y76F9vH3Ob9J28gdIjVkJ6RAe6JNSpmEGk+KRqfbc5E\nEWR51DMUIdBAjpQSxDM2cjb9i43dwI2KLrBvh/VHf1DAnWIHVtj/zZi9SS0P6Gsu\n7kpAwKqQgP3dh45DBWDmcYsA3DUWmfmGFXEtmUrJdxKoQ3OvX2yt9MhR2wbqUENe\nVyPGuDyaL5zY9qabLUarsH39gJHDVHyBCeUMDaw9ua1Fd7Fsep0frA8fdm9w4/R8\n8cQGSMCy74XQnYK2TD1WUFB5r41w9/6j55bG7r7wNUf88Q5vkSg=\n=cXf+\n-----END PGP SIGNATURE-----",
        "payload": "tree 9d42d4cff67e0c481eaf4cbdb2a5562d0898f018\nparent 8cd0b86340870d8f359e4ae26880e03ea36818ab\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583134762 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137590 +0900\n\nwallet/db: make Backup() const\n\nThis method is the to-disk equivalent of serialize methods which are also const.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d366795d180bc52ba750f71f201a6e5e0c40f1b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d366795d180bc52ba750f71f201a6e5e0c40f1b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d366795d180bc52ba750f71f201a6e5e0c40f1b6/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8cd0b86340870d8f359e4ae26880e03ea36818ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cd0b86340870d8f359e4ae26880e03ea36818ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8cd0b86340870d8f359e4ae26880e03ea36818ab"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "043e29f9cf4db2fae745b721c28854e73bc6aac4",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d366795d180bc52ba750f71f201a6e5e0c40f1b6/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d366795d180bc52ba750f71f201a6e5e0c40f1b6/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=d366795d180bc52ba750f71f201a6e5e0c40f1b6",
        "patch": "@@ -850,7 +850,7 @@ bool BerkeleyDatabase::Rewrite(const char* pszSkip)\n     return BerkeleyBatch::Rewrite(*this, pszSkip);\n }\n \n-bool BerkeleyDatabase::Backup(const std::string& strDest)\n+bool BerkeleyDatabase::Backup(const std::string& strDest) const\n {\n     if (IsDummy()) {\n         return false;"
      },
      {
        "sha": "fae210d50550b9ba70ab96e7ede9bdbad5851a47",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d366795d180bc52ba750f71f201a6e5e0c40f1b6/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d366795d180bc52ba750f71f201a6e5e0c40f1b6/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=d366795d180bc52ba750f71f201a6e5e0c40f1b6",
        "patch": "@@ -157,7 +157,7 @@ class BerkeleyDatabase\n \n     /** Back up the entire database to a file.\n      */\n-    bool Backup(const std::string& strDest);\n+    bool Backup(const std::string& strDest) const;\n \n     /** Make sure all changes are flushed to disk.\n      */"
      }
    ]
  },
  {
    "sha": "7b3587b29db9eaf11718fc09d48817a45a0a429a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YjM1ODdiMjlkYjllYWYxMTcxOGZjMDlkNDg4MTdhNDVhMGE0Mjlh",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T07:39:52Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:26:30Z"
      },
      "message": "wallet/db: make IsDummy() const\n\nThis method does a simple check and no modifications.",
      "tree": {
        "sha": "97026a7b81ce5b860f8b53f60076c558548e63c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/97026a7b81ce5b860f8b53f60076c558548e63c2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b3587b29db9eaf11718fc09d48817a45a0a429a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl5cwzYACgkQV692LbM1\nMyKksxAAh+wlv+fGe+ZkCn8CENDPZzYxU0ZvhsLXf+f98bpFDNvKBfTOgVBiA0Pz\nMIFFpyR2ymO0sDXwz1QgOH46A5Y9Y6VN96jkCKcyFD++OrSrDOhHdNbxonFbTrnZ\npNWc/EsvHdTQGIvpmotst7q61jsR8oKRez4PKip3gESC8pQdX04mewN0qmvTFT5U\n+CZ77L/JqOWC6tNx3kRrI8STli1sWgT3LxEjGB3uU7LTcYTtCBd1sJk/UAAhvFvw\n14cC9KiYNzZsLW3pUShtxQGcps2k42A8HMUfdzsz0YUz510Wux108oLi2xN5afeM\nXLBdEUS0AWfzUJpULj0Xq4PTHb3//C833Zko28aOJdfWNuWvqRisiCXVa7m20njV\nWI3qRdlkWUAvJgFrvnQNPmKYlCSTm9y1cx80xNMRp1udPVOSxZE7t4Wg6t3SWD4X\ngbrzYYqXwskMZxfNHISBBGUYNmAhpY1g1szeJG3X6Z3hVYWQajSmu3yas7cyK05M\nz1qDZLJ+qkQtec/+mgp+sdqvACw8uyrv6kXsSXCgJN8J5w8uRAsGXGsx4/HVHjU/\nwrsLX4FfzqmPs9fag+AmVqMss2Uvg2agYzaju75A7ypCY0j1YVkEvBRazS5LqURP\nL5ZcowKNx/SWsnwMqwHP9D5qI0TEpf7XsqkpfTw5HHMd5g2JFLU=\n=Roa1\n-----END PGP SIGNATURE-----",
        "payload": "tree 97026a7b81ce5b860f8b53f60076c558548e63c2\nparent d366795d180bc52ba750f71f201a6e5e0c40f1b6\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583134792 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137590 +0900\n\nwallet/db: make IsDummy() const\n\nThis method does a simple check and no modifications.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b3587b29db9eaf11718fc09d48817a45a0a429a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7b3587b29db9eaf11718fc09d48817a45a0a429a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b3587b29db9eaf11718fc09d48817a45a0a429a/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d366795d180bc52ba750f71f201a6e5e0c40f1b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d366795d180bc52ba750f71f201a6e5e0c40f1b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d366795d180bc52ba750f71f201a6e5e0c40f1b6"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "bebaa55d050c53cb0cc43d4346db170e55e31922",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b3587b29db9eaf11718fc09d48817a45a0a429a/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b3587b29db9eaf11718fc09d48817a45a0a429a/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=7b3587b29db9eaf11718fc09d48817a45a0a429a",
        "patch": "@@ -193,7 +193,7 @@ class BerkeleyDatabase\n      * Only to be used at a low level, application should ideally not care\n      * about this.\n      */\n-    bool IsDummy() { return env == nullptr; }\n+    bool IsDummy() const { return env == nullptr; }\n };\n \n /** RAII class that provides access to a Berkeley database */"
      }
    ]
  },
  {
    "sha": "22d329ad0ed3ed501bd811720be6a2876d1afe4d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMmQzMjlhZDBlZDNlZDUwMWJkODExNzIwYmU2YTI4NzZkMWFmZTRk",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T07:46:57Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:26:30Z"
      },
      "message": "wallet: use constant CWallets in rpcdump.cpp\n\n* GetWalletAddressesForKey is, as the name implies, immutable; the one change besides the parameter constness is a [] -> .at() change, to a verified-existing key.\n* dumpprivkey and dumpwallet are both similarly immutable, for obvious reasons.",
      "tree": {
        "sha": "2e5bacbbd14dc6c16ddaa3242ec105e85630078e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e5bacbbd14dc6c16ddaa3242ec105e85630078e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22d329ad0ed3ed501bd811720be6a2876d1afe4d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl5cwzYACgkQV692LbM1\nMyIrwA//UBqrVDE8MSW3LS+DdYlg32y9bXPV7/aFQOAhJwy1VgpF9zE8ZybnBpFK\nuNH01xgIYqmqhvWDQZmZVcOaibP+hMj1Nos4fxW99U2sjvFhrliMpU3J3RHS5N36\nj2Zt5M00ulGoUgIBXV9yVOA4fedZ8mhc3Dk8n9cLBStUv2stlJOAX2/jEvN+IxLO\nWoZktUFraIwwQdiVz/WV+wsPba5Oo1tpgcY6XZdbHZYFT5xT0tDMjqbpatDKMcdd\nAjnXmqq98MW7KMofUceApg1JoMXDGCSI4xgdaSShzwGCj9BU1bHehNYdHaZkZ6ff\n1OPXVYlPzNNNHN3wDEW+ru2MTLsu8j0FngRsHfTZpW3tlZP1eyDhBfroOnX16zPJ\ngtVm3iyIjP6JwWMbXy4tRoLbTMt5PguOZjE+g3sM0knxuLq4i5g5Xwx0OaJuDV85\npmQW42ZqHeoBb5LY5GYGRLseM4N3aLbNlBIvijEw+DwdwYirLTHd0DpPrBgWqJi2\nGz6XuVzTsk38evHCPYSoWrYx+GQfnr/AEO1OGceQgFrhPHNcV0sLKhAor5xL15GK\ndhfx5Mohkc4nlU4r3edCDYlHJXtmW/B4f35Igrf1XXFNLT7uH89Tchuozko6ZgKQ\nzuafzNsoQTcdgjM7+/cv8ZmgCmLQRLB9G3skBzyDR0q1hzPBH3c=\n=dKZP\n-----END PGP SIGNATURE-----",
        "payload": "tree 2e5bacbbd14dc6c16ddaa3242ec105e85630078e\nparent 7b3587b29db9eaf11718fc09d48817a45a0a429a\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583135217 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137590 +0900\n\nwallet: use constant CWallets in rpcdump.cpp\n\n* GetWalletAddressesForKey is, as the name implies, immutable; the one change besides the parameter constness is a [] -> .at() change, to a verified-existing key.\n* dumpprivkey and dumpwallet are both similarly immutable, for obvious reasons.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22d329ad0ed3ed501bd811720be6a2876d1afe4d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/22d329ad0ed3ed501bd811720be6a2876d1afe4d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22d329ad0ed3ed501bd811720be6a2876d1afe4d/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7b3587b29db9eaf11718fc09d48817a45a0a429a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b3587b29db9eaf11718fc09d48817a45a0a429a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7b3587b29db9eaf11718fc09d48817a45a0a429a"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "19180f1f305c4e858b48a32bf147701f313e0684",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22d329ad0ed3ed501bd811720be6a2876d1afe4d/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22d329ad0ed3ed501bd811720be6a2876d1afe4d/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=22d329ad0ed3ed501bd811720be6a2876d1afe4d",
        "patch": "@@ -54,7 +54,7 @@ static std::string DecodeDumpString(const std::string &str) {\n     return ret.str();\n }\n \n-static bool GetWalletAddressesForKey(LegacyScriptPubKeyMan* spk_man, CWallet* const pwallet, const CKeyID& keyid, std::string& strAddr, std::string& strLabel) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n+static bool GetWalletAddressesForKey(LegacyScriptPubKeyMan* spk_man, const CWallet* const pwallet, const CKeyID& keyid, std::string& strAddr, std::string& strLabel) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     bool fLabelFound = false;\n     CKey key;\n@@ -65,7 +65,7 @@ static bool GetWalletAddressesForKey(LegacyScriptPubKeyMan* spk_man, CWallet* co\n                 strAddr += \",\";\n             }\n             strAddr += EncodeDestination(dest);\n-            strLabel = EncodeDumpString(pwallet->mapAddressBook[dest].name);\n+            strLabel = EncodeDumpString(pwallet->mapAddressBook.at(dest).name);\n             fLabelFound = true;\n         }\n     }\n@@ -676,7 +676,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n UniValue dumpprivkey(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n     }\n@@ -724,7 +724,7 @@ UniValue dumpprivkey(const JSONRPCRequest& request)\n UniValue dumpwallet(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n     }"
      }
    ]
  },
  {
    "sha": "227b9dd2d6e1914edfec108af6bec5f12d9f6f39",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMjdiOWRkMmQ2ZTE5MTRlZGZlYzEwOGFmNmJlYzVmMTJkOWY2ZjM5",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T07:54:59Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:26:31Z"
      },
      "message": "wallet/spkm: make GetOldestKeyPoolTime() const\n\nThe method checks the oldest key time for key pools and returns the oldest. It does no modifications.",
      "tree": {
        "sha": "771c628f8a4a5b81982d8e1484c85ae75a6a342e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/771c628f8a4a5b81982d8e1484c85ae75a6a342e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/227b9dd2d6e1914edfec108af6bec5f12d9f6f39",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl5cwzcACgkQV692LbM1\nMyKmhQ//d/GyZwbvnTFZvEqJoGEquNI6k2oLhz+w0BeVaDfK2x224JBqEHUhMBu0\n/MMxwk4uKK0fzx3Jo6NPiRpW7TTXmi3E5gRzW/TXpBoEn9e6p6Vu0vqXjuto9w3/\nzpGe+RpnWj7yYEYQj2t2VdRMtzk+wDQptEUSSpYIp9Rp0anZ5a3YkN8IyP/hezkK\n+d1Flkvy38R41f5KULgvL6Pe2oRLj6PM6pTHsjS7TxheBcGjqIlCV7NUMLusoVtf\npCPSS/Z3gpFlCiGjyW13dBroJAL734xApmeyHK6hyQdA9K6bqNouxsw3iTRbq/FT\nhBOQecXeS9li/AqNJB1bLJlDAjsulUWylfD7OgkRJTMy9evmF1Nppf/+xkd/sFBm\nkH1ZdZcE3SukgLeU1AICJHqvLEWIuGAOEaWMdYDb81jNfD6Wf7DCCj9aGGrAa5IB\nwuDA7uHpMcv+M7AEsvjGFsIRrsSPQN9wegwnR2Rlo+F4fuZjE+D7WA9v1yNh//Gz\nW6ZFQXLKV6YUvjvI1Tf7mPYZTlLoiAQsqx/7YVUDZwlfj5A6MFfpR/ZSpLiVjQ2N\nY4WZHLvQFVLlXvchH/ceHk8Dcad8LrkbvQSQ6yho7BK54ypRJFIg4aAnWbiJ9K/K\n/MobWwEx8VzeSkzukC+Iij7W+fKErKt930SRoSaxgZVSq2mOnw0=\n=gx8m\n-----END PGP SIGNATURE-----",
        "payload": "tree 771c628f8a4a5b81982d8e1484c85ae75a6a342e\nparent 22d329ad0ed3ed501bd811720be6a2876d1afe4d\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583135699 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137591 +0900\n\nwallet/spkm: make GetOldestKeyPoolTime() const\n\nThe method checks the oldest key time for key pools and returns the oldest. It does no modifications.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/227b9dd2d6e1914edfec108af6bec5f12d9f6f39",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/227b9dd2d6e1914edfec108af6bec5f12d9f6f39",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/227b9dd2d6e1914edfec108af6bec5f12d9f6f39/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "22d329ad0ed3ed501bd811720be6a2876d1afe4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22d329ad0ed3ed501bd811720be6a2876d1afe4d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22d329ad0ed3ed501bd811720be6a2876d1afe4d"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "8851d0af3106fb11abcaeb267683dbce252e3f7b",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/227b9dd2d6e1914edfec108af6bec5f12d9f6f39/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/227b9dd2d6e1914edfec108af6bec5f12d9f6f39/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=227b9dd2d6e1914edfec108af6bec5f12d9f6f39",
        "patch": "@@ -441,7 +441,7 @@ static int64_t GetOldestKeyTimeInPool(const std::set<int64_t>& setKeyPool, Walle\n     return keypool.nTime;\n }\n \n-int64_t LegacyScriptPubKeyMan::GetOldestKeyPoolTime()\n+int64_t LegacyScriptPubKeyMan::GetOldestKeyPoolTime() const\n {\n     LOCK(cs_KeyStore);\n "
      },
      {
        "sha": "1a0d34a4453aa095bdfd737ee1dec12e9cd873fa",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/227b9dd2d6e1914edfec108af6bec5f12d9f6f39/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/227b9dd2d6e1914edfec108af6bec5f12d9f6f39/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=227b9dd2d6e1914edfec108af6bec5f12d9f6f39",
        "patch": "@@ -194,7 +194,7 @@ class ScriptPubKeyMan\n     //! The action to do when the DB needs rewrite\n     virtual void RewriteDB() {}\n \n-    virtual int64_t GetOldestKeyPoolTime() { return GetTime(); }\n+    virtual int64_t GetOldestKeyPoolTime() const { return GetTime(); }\n \n     virtual size_t KeypoolCountExternalKeys() const { return 0; }\n     virtual unsigned int GetKeyPoolSize() const { return 0; }\n@@ -336,7 +336,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n \n     void RewriteDB() override;\n \n-    int64_t GetOldestKeyPoolTime() override;\n+    int64_t GetOldestKeyPoolTime() const override;\n     size_t KeypoolCountExternalKeys() const override;\n     unsigned int GetKeyPoolSize() const override;\n "
      },
      {
        "sha": "bb227b975af224e8193c5d06488d370d7d1fa54b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/227b9dd2d6e1914edfec108af6bec5f12d9f6f39/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/227b9dd2d6e1914edfec108af6bec5f12d9f6f39/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=227b9dd2d6e1914edfec108af6bec5f12d9f6f39",
        "patch": "@@ -3177,7 +3177,7 @@ bool CWallet::GetNewChangeDestination(const OutputType type, CTxDestination& des\n     return true;\n }\n \n-int64_t CWallet::GetOldestKeyPoolTime()\n+int64_t CWallet::GetOldestKeyPoolTime() const\n {\n     LOCK(cs_wallet);\n     int64_t oldestKey = std::numeric_limits<int64_t>::max();"
      },
      {
        "sha": "40c72a864b1133c2c6f3c37b9c7407798001cdb5",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/227b9dd2d6e1914edfec108af6bec5f12d9f6f39/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/227b9dd2d6e1914edfec108af6bec5f12d9f6f39/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=227b9dd2d6e1914edfec108af6bec5f12d9f6f39",
        "patch": "@@ -971,7 +971,7 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n     size_t KeypoolCountExternalKeys() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool TopUpKeyPool(unsigned int kpSize = 0);\n \n-    int64_t GetOldestKeyPoolTime();\n+    int64_t GetOldestKeyPoolTime() const;\n \n     std::set<std::set<CTxDestination>> GetAddressGroupings() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     std::map<CTxDestination, CAmount> GetAddressBalances(interfaces::Chain::Lock& locked_chain);"
      }
    ]
  },
  {
    "sha": "df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjNhODE4ZDJhOWZlNDhlNjU2YThhZDJkYTE4ZmFiOGExYmZkNmUz",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:17:33Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:27:35Z"
      },
      "message": "wallet: make getters const",
      "tree": {
        "sha": "eae1adc54b06bc908c22465d01d76da256043c7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eae1adc54b06bc908c22465d01d76da256043c7d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl5cw3cACgkQV692LbM1\nMyLopg//dl4OUGrnxMVCV02SPNeRbLiho0FT9UdsQDj7zjA0VglGT+W/DWGZTwyv\nXH75Icp3h4jwWmUTrvplNvjqY8ZJBcUEA/Wttyb0qryjnNz9ifHGBUkRoZRNq1Mx\nUoCv60VMKxtAAnYZkjKBUG3cOHmkegSXIZ/6Ol7F/YdDAcXw4wNlftOhditq1fXA\nE/DTZeo1irYWNgN663rfipWsaqrFQgOM05njfEAHDzESJKJns3jzXJyvTYpo+HX9\nV9z4HRY7uOtsv5gwnt1NXGSBWM01uuEXAwFki/pLmNUPTW+5vq9sMB5NKwrTqDBu\nHDONIdc0ekwAUr1apkSxJUT+WRaPa+qny+FN1FZF4GvIt8VrKwKLK6w6RHyI5MCk\n3DKaXJhqwYd2BGHgQ6X6xpAdfEYHYVSKznwgRzxt6VWXpTOLayzCeZSiCTFIoabz\nsr5APXoAGRC2IledlF4BVcRVZ6ZhNw4i4PWIL0H2fVZg8Si865IL7QhYeyGO0RLS\nfVJo7w4gsqGfFK5KkLM6XNh16RMGriJLYz7PhgT2hM1GFvzxhbUGOdyOgNx9LGoB\nMmjV8thYe4OdZy9zGoUgbr3toSFz+BpmyDhtfFYdJGrPo7cEv2wpa3V6wRAWt7JJ\nPFKXqjmfv5ecGsuXBMuHHxS8E7r64EdCBalOnLpM/r1RawIMPpw=\n=iPYg\n-----END PGP SIGNATURE-----",
        "payload": "tree eae1adc54b06bc908c22465d01d76da256043c7d\nparent 227b9dd2d6e1914edfec108af6bec5f12d9f6f39\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137053 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137655 +0900\n\nwallet: make getters const\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "227b9dd2d6e1914edfec108af6bec5f12d9f6f39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/227b9dd2d6e1914edfec108af6bec5f12d9f6f39",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/227b9dd2d6e1914edfec108af6bec5f12d9f6f39"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "94bcd4ba68204491cb14f9f7734f6d4d93f9d811",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3",
        "patch": "@@ -3201,7 +3201,7 @@ void CWallet::MarkDestinationsDirty(const std::set<CTxDestination>& destinations\n     }\n }\n \n-std::map<CTxDestination, CAmount> CWallet::GetAddressBalances(interfaces::Chain::Lock& locked_chain)\n+std::map<CTxDestination, CAmount> CWallet::GetAddressBalances(interfaces::Chain::Lock& locked_chain) const\n {\n     std::map<CTxDestination, CAmount> balances;\n \n@@ -3242,7 +3242,7 @@ std::map<CTxDestination, CAmount> CWallet::GetAddressBalances(interfaces::Chain:\n     return balances;\n }\n \n-std::set< std::set<CTxDestination> > CWallet::GetAddressGroupings()\n+std::set< std::set<CTxDestination> > CWallet::GetAddressGroupings() const\n {\n     AssertLockHeld(cs_wallet);\n     std::set< std::set<CTxDestination> > groupings;"
      },
      {
        "sha": "158482dc4456db0bb532b56d3d14f7950d5bff5a",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3",
        "patch": "@@ -832,8 +832,8 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n      * Rescan abort properties\n      */\n     void AbortRescan() { fAbortRescan = true; }\n-    bool IsAbortingRescan() { return fAbortRescan; }\n-    bool IsScanning() { return fScanningWallet; }\n+    bool IsAbortingRescan() const { return fAbortRescan; }\n+    bool IsScanning() const { return fScanningWallet; }\n     int64_t ScanningDuration() const { return fScanningWallet ? GetTimeMillis() - m_scanning_start : 0; }\n     double ScanningProgress() const { return fScanningWallet ? (double) m_scanning_progress : 0; }\n \n@@ -973,8 +973,8 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n \n     int64_t GetOldestKeyPoolTime() const;\n \n-    std::set<std::set<CTxDestination>> GetAddressGroupings() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    std::map<CTxDestination, CAmount> GetAddressBalances(interfaces::Chain::Lock& locked_chain);\n+    std::set<std::set<CTxDestination>> GetAddressGroupings() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    std::map<CTxDestination, CAmount> GetAddressBalances(interfaces::Chain::Lock& locked_chain) const;\n \n     std::set<CTxDestination> GetLabelAddresses(const std::string& label) const;\n \n@@ -1027,7 +1027,7 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n     bool SetMaxVersion(int nVersion);\n \n     //! get the current wallet format (the oldest client version guaranteed to understand this wallet)\n-    int GetVersion() { LOCK(cs_wallet); return nWalletVersion; }\n+    int GetVersion() const { LOCK(cs_wallet); return nWalletVersion; }\n \n     //! Get wallet transactions that conflict with given transaction (spend same outputs)\n     std::set<uint256> GetConflicts(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);"
      }
    ]
  },
  {
    "sha": "57c569e4d9779e2263848770e0ba7eab3054a1bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1N2M1NjllNGQ5Nzc5ZTIyNjM4NDg3NzBlMGJhN2VhYjMwNTRhMWJm",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:23:34Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:27:35Z"
      },
      "message": "wallet: make BackupWallet() const",
      "tree": {
        "sha": "16046b1f7f722281e7fe615d93c8b30c8afc9567",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16046b1f7f722281e7fe615d93c8b30c8afc9567"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57c569e4d9779e2263848770e0ba7eab3054a1bf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl5cw3cACgkQV692LbM1\nMyKUag/9GCSpCzBu9D73sJdXkjaG5F8UoXY9a+aFiA6djdQZGf7pfcoCJvZObIve\nMYHvuvu5kzDzYPbauZI4GprYNLgUTVyi6Phq4LFkKI4Ngi1x6yc3QGEdUZnrXnWM\n+pplLmKBN4mXhgeYAEzIOEJviN0Z0vZt33zmp23lilJp+C4wkRhYadFcLA/NJZk1\nSFYWKcaS+it68ln4nVKUnTJbSDzddCLfSSjm6xhlwwBf6/m3hN1AiDC4YEQl8IJD\n0eJkdQbCoqgbPZXZfgezseUQ5ozhPu+1Zcb3qrPDnpmQV6lszRTysFhugsuNiNUZ\nP+6FlkyQAgzQQrQeODu+DplcD697u4TRcFddCuhRIFR5OTC4gK/guR/TAPGefRbn\nSf36HRdw+nMyx+Hjszjfh8vcEiVIkxRW2I/7yS7GNEy2vSe0/33aebjrAvHvDv72\neXb/if5HluXLV0O+4+2GqS2qdPr8jM14v/bYlArMvIv+HK1YC9rbWYQlFAT/0sR7\nJYIDXU+ZNpS1rLQkpyozb2vO2m/70kltiV66CjARweURQ8fcF9emRjON2GTTahDj\n3UK8EaT4NMUubaG43CMxnz9ndMU8RuHuxp9eDPFlgJIEw5bGn9URj5aY6xS0zWtX\nUEdWOklFY7v7aeHpgPYP1rpspejo3wmOHOEWmUqlSUbBZh0She8=\n=jUyF\n-----END PGP SIGNATURE-----",
        "payload": "tree 16046b1f7f722281e7fe615d93c8b30c8afc9567\nparent df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137414 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137655 +0900\n\nwallet: make BackupWallet() const\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57c569e4d9779e2263848770e0ba7eab3054a1bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57c569e4d9779e2263848770e0ba7eab3054a1bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57c569e4d9779e2263848770e0ba7eab3054a1bf/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df3a818d2a9fe48e656a8ad2da18fab8a1bfd6e3"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9d2e5598e840b623ec316d0c14c72e3c98f5ed54",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57c569e4d9779e2263848770e0ba7eab3054a1bf/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57c569e4d9779e2263848770e0ba7eab3054a1bf/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=57c569e4d9779e2263848770e0ba7eab3054a1bf",
        "patch": "@@ -4004,7 +4004,7 @@ void CWallet::postInitProcess()\n     chain().requestMempoolTransactions(*this);\n }\n \n-bool CWallet::BackupWallet(const std::string& strDest)\n+bool CWallet::BackupWallet(const std::string& strDest) const\n {\n     return database->Backup(strDest);\n }"
      },
      {
        "sha": "864e180adbf5a305b14c94b6a5c8d653a7c15aac",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57c569e4d9779e2263848770e0ba7eab3054a1bf/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57c569e4d9779e2263848770e0ba7eab3054a1bf/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=57c569e4d9779e2263848770e0ba7eab3054a1bf",
        "patch": "@@ -1098,7 +1098,7 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n      */\n     void postInitProcess();\n \n-    bool BackupWallet(const std::string& strDest);\n+    bool BackupWallet(const std::string& strDest) const;\n \n     /* Returns true if HD is enabled */\n     bool IsHDEnabled() const;"
      }
    ]
  },
  {
    "sha": "d9b0ebc1da8758645f6de24a4a557511ef9b5e36",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOWIwZWJjMWRhODc1ODY0NWY2ZGUyNGE0YTU1NzUxMWVmOWI1ZTM2",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:21:38Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:27:35Z"
      },
      "message": "wallet: make ReserveDestination pwallet ivar const",
      "tree": {
        "sha": "a3855e91d1ed2329ac9a9daee2bbc89047837408",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3855e91d1ed2329ac9a9daee2bbc89047837408"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9b0ebc1da8758645f6de24a4a557511ef9b5e36",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl5cw3gACgkQV692LbM1\nMyKNUQ/+KpmdVdM2PDO3U0SEHhvI92/gLCXXPLpi5+oGJuit+++3owya6TFSqd3N\nd2nwI8TbNqruP0Csa3Pa4ci4wPBQK01PN7BaSHAjUGRSL1u+7J7TLq71Si/bqBQv\nbksrFCa77w0e4sbHANZPJt0CdfEca3gUMjNBvO0uNoQYimFzKN4PS3lxjk3HKGkM\n4RWL81w03nEJfgm+k8ZfMrYURrzit5j9MhHigF61Q4tGlLJ0Y/Wo4axA6ksfIDIF\nXypLRBOfNonmXHqd475B/LDLAQbvVPWrPfd1CxnLNBDKAYqRdrxn/BUJ7XmZD43g\nMcOCX5NWM5DcdHYTaEFEWBhe2lrR9GHald1aTPB9MBEpeTQjn+G3RXN2+AU8eBi5\nxFUHODx9m1xc8aVyFjnj2Kzm4q6d0OxRIsAHoQv30Yp0j+beBvjMC70R/Fna5rAP\nJwaDcaueb6ZHUjePpee6pJHQg3nsONM08eEk9kBXQz8EssR7+V8SzFzlozTgyqTI\n8huu2AtHYymPj+GKITxY8h3kZo9xxZj8z7H8X0MrOOYSw58L16U+ExELs4J3K4xK\ncCuxN85bZqk0UiZtmFrxRfgdDQVp1klXWg6XIK9fH1BXH6P+xV3grZlIizv/5wRZ\ngLKMFS50WCCJuyiHQULrbWUR+Y4t06jnzy2V/UXSM16NwCOUtig=\n=wx15\n-----END PGP SIGNATURE-----",
        "payload": "tree a3855e91d1ed2329ac9a9daee2bbc89047837408\nparent 57c569e4d9779e2263848770e0ba7eab3054a1bf\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137298 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137655 +0900\n\nwallet: make ReserveDestination pwallet ivar const\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9b0ebc1da8758645f6de24a4a557511ef9b5e36",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d9b0ebc1da8758645f6de24a4a557511ef9b5e36",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9b0ebc1da8758645f6de24a4a557511ef9b5e36/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57c569e4d9779e2263848770e0ba7eab3054a1bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57c569e4d9779e2263848770e0ba7eab3054a1bf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57c569e4d9779e2263848770e0ba7eab3054a1bf"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3664a6787cb02ef17a5126660e3384e553171796",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9b0ebc1da8758645f6de24a4a557511ef9b5e36/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9b0ebc1da8758645f6de24a4a557511ef9b5e36/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=d9b0ebc1da8758645f6de24a4a557511ef9b5e36",
        "patch": "@@ -141,7 +141,7 @@ class ReserveDestination\n {\n protected:\n     //! The wallet to reserve from\n-    CWallet* const pwallet;\n+    const CWallet* const pwallet;\n     //! The ScriptPubKeyMan to reserve from. Based on type when GetReservedDestination is called\n     ScriptPubKeyMan* m_spk_man{nullptr};\n     OutputType const type;"
      }
    ]
  },
  {
    "sha": "79facb11e92f8b61063f301027dee7c7344eb1be",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OWZhY2IxMWU5MmY4YjYxMDYzZjMwMTAyN2RlZTdjNzM0NGViMWJl",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:07:46Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-03-02T08:27:36Z"
      },
      "message": "wallet: use constant CWallets in rpcwallet.cpp\n\n* GetAvoidReuseFlag: simply gets the flag, without modifying the wallet\n* ListReceived: helper function to produce lists\n* ListTransactions: produces a list of transactions, without modifications; two cases of map [] -> .at() for verified-existing keys\n* DescribeWalletAddress: generates a description of a given wallet address without changing the wallet\n* The following functions produce a list without making any modifications to the wallet:\n  * listaddressgroupings\n  * listreceivedbyaddress\n  * listreceivedbylabel\n  * listtransactions\n  * listsinceblock\n  * listlockunspent\n  * listunspent\n  * listlabels\n  * getreceivedbyaddress\n  * getreceivedbylabel\n  * getaddressesbylabel\n* signmessage: uses the wallet to procure a private key for signing, but does no modifications\n* getbalance, getunconfirmedbalance: calculates the wallet balance, without any modifications\n* gettransaction: procures transaction without any modifications\n* backupwallet: makes a backup of the wallet to disk, without changing said wallet\n* getwalletinfo: produces info about wallet without any modifications\n* signrawtransactionwithwallet: modifies incoming transaction on the fly by signing with private key procured from within wallet; no modifications to wallet\n* getaddressinfo: gets information about the given address, with no modifications done to the wallet; one case of [] -> .at() and one ::iterator -> ::const_iterator\n* walletprocesspsbt: processes the given PSBT on the fly, without modifying the wallet",
      "tree": {
        "sha": "679dc474592a62f9c977ac78bb9968158d4e9ca1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/679dc474592a62f9c977ac78bb9968158d4e9ca1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79facb11e92f8b61063f301027dee7c7344eb1be",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl5cw3gACgkQV692LbM1\nMyLYiRAAjkjoTIy1RUCDImwvymK2RyvG4tLUqS0Ij7btHyDg2lOwMz/ebme/RP7S\nTXzmyJqDhhIDiweI4saZlPle8iKy9ynzrLdDQr6Xsx7DEPe0IDF0A6+yGAleNItd\nxY92bmjm+EUwgeBN+Bh258Hb64IBOW0PsNVFdKTTl8gJcLm/csHWTE7cxo2an/tD\niKqA3UnCt2hre/BImlFhEudxFHeGEC0fVp+y9GYsgCC8eJJHPnWTl8R5f/fiC48D\nAZ5C5rM0C2R9e/s6JYrQOMRj3FGXBUcg/SwKaQEjQLtmIwBl9KeHk5vHYlLIJjwM\nSsdBOzWAVSv0xFHHeH2baKbz1MOLGHySWMSZ5TqVftfos5LqBo9+ArMyjRWH/r4m\nsho9dJfXoR3lXlkMOcpt1As7DuOTG17iIFRszzYI5PGsqi796u53fnmJ0iJNf0Gk\nxnnNqV/svGVOdcMYJVrfM/mYU8Syn1OJBNYPYFacIvXXaiKwRiaxSqZS2+SLCbHw\nVBYm/j06Kt8CuyUgixXRaKaUYZDJOMvXO3oXFRkKs8Eg01AQv7oIDThCpRY08AKh\nbkPkQIenPqN+4oQEDUbV96UE3xaiV9QFR0B/v28RYm5XA4eY65UBM7GOEJobwQrR\nuv+0yOHPUntFQ+98Krn51oeCjaw4jpRDvUOAbL2vGp7O3QH5zGw=\n=EDY1\n-----END PGP SIGNATURE-----",
        "payload": "tree 679dc474592a62f9c977ac78bb9968158d4e9ca1\nparent d9b0ebc1da8758645f6de24a4a557511ef9b5e36\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583136466 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1583137656 +0900\n\nwallet: use constant CWallets in rpcwallet.cpp\n\n* GetAvoidReuseFlag: simply gets the flag, without modifying the wallet\n* ListReceived: helper function to produce lists\n* ListTransactions: produces a list of transactions, without modifications; two cases of map [] -> .at() for verified-existing keys\n* DescribeWalletAddress: generates a description of a given wallet address without changing the wallet\n* The following functions produce a list without making any modifications to the wallet:\n  * listaddressgroupings\n  * listreceivedbyaddress\n  * listreceivedbylabel\n  * listtransactions\n  * listsinceblock\n  * listlockunspent\n  * listunspent\n  * listlabels\n  * getreceivedbyaddress\n  * getreceivedbylabel\n  * getaddressesbylabel\n* signmessage: uses the wallet to procure a private key for signing, but does no modifications\n* getbalance, getunconfirmedbalance: calculates the wallet balance, without any modifications\n* gettransaction: procures transaction without any modifications\n* backupwallet: makes a backup of the wallet to disk, without changing said wallet\n* getwalletinfo: produces info about wallet without any modifications\n* signrawtransactionwithwallet: modifies incoming transaction on the fly by signing with private key procured from within wallet; no modifications to wallet\n* getaddressinfo: gets information about the given address, with no modifications done to the wallet; one case of [] -> .at() and one ::iterator -> ::const_iterator\n* walletprocesspsbt: processes the given PSBT on the fly, without modifying the wallet\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79facb11e92f8b61063f301027dee7c7344eb1be",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/79facb11e92f8b61063f301027dee7c7344eb1be",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79facb11e92f8b61063f301027dee7c7344eb1be/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d9b0ebc1da8758645f6de24a4a557511ef9b5e36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9b0ebc1da8758645f6de24a4a557511ef9b5e36",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d9b0ebc1da8758645f6de24a4a557511ef9b5e36"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 28,
      "deletions": 28
    },
    "files": [
      {
        "sha": "78281053c0b64107c12016e0235747cf994fd351",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79facb11e92f8b61063f301027dee7c7344eb1be/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79facb11e92f8b61063f301027dee7c7344eb1be/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=79facb11e92f8b61063f301027dee7c7344eb1be",
        "patch": "@@ -39,7 +39,7 @@\n \n static const std::string WALLET_ENDPOINT_BASE = \"/wallet/\";\n \n-static inline bool GetAvoidReuseFlag(CWallet * const pwallet, const UniValue& param) {\n+static inline bool GetAvoidReuseFlag(const CWallet* const pwallet, const UniValue& param) {\n     bool can_avoid_reuse = pwallet->IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     bool avoid_reuse = param.isNull() ? can_avoid_reuse : param.get_bool();\n \n@@ -457,7 +457,7 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n static UniValue listaddressgroupings(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -518,7 +518,7 @@ static UniValue listaddressgroupings(const JSONRPCRequest& request)\n static UniValue signmessage(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -588,7 +588,7 @@ static UniValue signmessage(const JSONRPCRequest& request)\n static UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -658,7 +658,7 @@ static UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n static UniValue getreceivedbylabel(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -726,7 +726,7 @@ static UniValue getreceivedbylabel(const JSONRPCRequest& request)\n static UniValue getbalance(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -784,7 +784,7 @@ static UniValue getbalance(const JSONRPCRequest& request)\n static UniValue getunconfirmedbalance(const JSONRPCRequest &request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -1038,7 +1038,7 @@ struct tallyitem\n     }\n };\n \n-static UniValue ListReceived(interfaces::Chain::Lock& locked_chain, CWallet * const pwallet, const UniValue& params, bool by_label) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n+static UniValue ListReceived(interfaces::Chain::Lock& locked_chain, const CWallet* const pwallet, const UniValue& params, bool by_label) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     // Minimum confirmations\n     int nMinDepth = 1;\n@@ -1187,7 +1187,7 @@ static UniValue ListReceived(interfaces::Chain::Lock& locked_chain, CWallet * co\n static UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -1238,7 +1238,7 @@ static UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n static UniValue listreceivedbylabel(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -1297,7 +1297,7 @@ static void MaybePushAddress(UniValue & entry, const CTxDestination &dest)\n  * @param  filter_ismine  The \"is mine\" filter flags.\n  * @param  filter_label   Optional label string to filter incoming transactions.\n  */\n-static void ListTransactions(interfaces::Chain::Lock& locked_chain, CWallet* const pwallet, const CWalletTx& wtx, int nMinDepth, bool fLong, UniValue& ret, const isminefilter& filter_ismine, const std::string* filter_label) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n+static void ListTransactions(interfaces::Chain::Lock& locked_chain, const CWallet* const pwallet, const CWalletTx& wtx, int nMinDepth, bool fLong, UniValue& ret, const isminefilter& filter_ismine, const std::string* filter_label) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     CAmount nFee;\n     std::list<COutputEntry> listReceived;\n@@ -1320,7 +1320,7 @@ static void ListTransactions(interfaces::Chain::Lock& locked_chain, CWallet* con\n             entry.pushKV(\"category\", \"send\");\n             entry.pushKV(\"amount\", ValueFromAmount(-s.amount));\n             if (pwallet->mapAddressBook.count(s.destination)) {\n-                entry.pushKV(\"label\", pwallet->mapAddressBook[s.destination].name);\n+                entry.pushKV(\"label\", pwallet->mapAddressBook.at(s.destination).name);\n             }\n             entry.pushKV(\"vout\", s.vout);\n             entry.pushKV(\"fee\", ValueFromAmount(-nFee));\n@@ -1337,7 +1337,7 @@ static void ListTransactions(interfaces::Chain::Lock& locked_chain, CWallet* con\n         {\n             std::string label;\n             if (pwallet->mapAddressBook.count(r.destination)) {\n-                label = pwallet->mapAddressBook[r.destination].name;\n+                label = pwallet->mapAddressBook.at(r.destination).name;\n             }\n             if (filter_label && label != *filter_label) {\n                 continue;\n@@ -1397,7 +1397,7 @@ static const std::string TransactionDescriptionString()\n UniValue listtransactions(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -1507,7 +1507,7 @@ UniValue listtransactions(const JSONRPCRequest& request)\n static UniValue listsinceblock(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -1644,7 +1644,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n static UniValue gettransaction(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -1797,7 +1797,7 @@ static UniValue abandontransaction(const JSONRPCRequest& request)\n static UniValue backupwallet(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -2246,7 +2246,7 @@ static UniValue lockunspent(const JSONRPCRequest& request)\n static UniValue listlockunspent(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -2407,7 +2407,7 @@ static UniValue getbalances(const JSONRPCRequest& request)\n static UniValue getwalletinfo(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -2782,7 +2782,7 @@ static UniValue unloadwallet(const JSONRPCRequest& request)\n static UniValue listunspent(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -3214,7 +3214,7 @@ static UniValue fundrawtransaction(const JSONRPCRequest& request)\n UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -3688,7 +3688,7 @@ class DescribeWalletAddressVisitor : public boost::static_visitor<UniValue>\n     UniValue operator()(const WitnessUnknown& id) const { return UniValue(UniValue::VOBJ); }\n };\n \n-static UniValue DescribeWalletAddress(CWallet* pwallet, const CTxDestination& dest)\n+static UniValue DescribeWalletAddress(const CWallet* const pwallet, const CTxDestination& dest)\n {\n     UniValue ret(UniValue::VOBJ);\n     UniValue detail = DescribeAddress(dest);\n@@ -3716,7 +3716,7 @@ static UniValue AddressBookDataToJSON(const CAddressBookData& data, const bool v\n UniValue getaddressinfo(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -3815,7 +3815,7 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     // be associated with an address, so the label should be equivalent to the\n     // value of the name key/value pair in the labels array below.\n     if ((pwallet->chain().rpcEnableDeprecated(\"label\")) && (pwallet->mapAddressBook.count(dest))) {\n-        ret.pushKV(\"label\", pwallet->mapAddressBook[dest].name);\n+        ret.pushKV(\"label\", pwallet->mapAddressBook.at(dest).name);\n     }\n \n     ret.pushKV(\"ischange\", pwallet->IsChange(scriptPubKey));\n@@ -3838,7 +3838,7 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     // stable if we allow multiple labels to be associated with an address in\n     // the future.\n     UniValue labels(UniValue::VARR);\n-    std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(dest);\n+    std::map<CTxDestination, CAddressBookData>::const_iterator mi = pwallet->mapAddressBook.find(dest);\n     if (mi != pwallet->mapAddressBook.end()) {\n         // DEPRECATED: The previous behavior of returning an array containing a\n         // JSON object of `name` and `purpose` key/value pairs is deprecated.\n@@ -3856,7 +3856,7 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n static UniValue getaddressesbylabel(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -3913,7 +3913,7 @@ static UniValue getaddressesbylabel(const JSONRPCRequest& request)\n static UniValue listlabels(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;\n@@ -4046,7 +4046,7 @@ UniValue sethdseed(const JSONRPCRequest& request)\n UniValue walletprocesspsbt(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-    CWallet* const pwallet = wallet.get();\n+    const CWallet* const pwallet = wallet.get();\n \n     if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n         return NullUniValue;"
      }
    ]
  }
]