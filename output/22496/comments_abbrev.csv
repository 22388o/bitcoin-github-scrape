DrahtBot,2021-07-19 18:11:33,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/22496#issuecomment-882754624,882754624,
hebasto,2021-07-19 18:52:19,Is this pr for 22.0 release?,https://github.com/bitcoin/bitcoin/pull/22496#issuecomment-882778965,882778965,
laanwj,2021-07-19 18:57:35,"> As I2P support hasn't even been released yet, it's much simpler and safer not to insert I2P addresses where port! = 0.\n\nThe thing is that I2P does support ports other than 0, just not in the currently used SAM proxy version (3.1). But there is no reason future versions of bitcoin core, or other clients, couldn't support I2P with ports. So I'm kind of divided on ignoring them completely, as t",https://github.com/bitcoin/bitcoin/pull/22496#issuecomment-882782013,882782013,
vasild,2021-07-20 07:24:07,"* In the long term we should keep in addrman and relay I2P addresses with port != 0. If dropping I2P entries with port != 0 is deemed necessary, then it should be a temporary measure for the same reasons e0a2b390c144e123e2fc8a289fdff36815476964 was temporary. I am a little bit inclined to leave I2P ports as they are, now that `ResetI2PPorts()` has been removed.\n\n* This PR seems to be complicat",https://github.com/bitcoin/bitcoin/pull/22496#issuecomment-883160111,883160111,
jnewbery,2021-07-20 10:53:41,"> In the long term we should keep in addrman and relay I2P addresses with port != 0. If dropping I2P entries with port != 0 is deemed necessary, then it should be a temporary measure for the same reasons e0a2b39 was temporary. I am a little bit inclined to leave I2P ports as they are, now that ResetI2PPorts() has been removed.\n\nI haven't been following the I2P work closely, but I really don't ",https://github.com/bitcoin/bitcoin/pull/22496#issuecomment-883297216,883297216,
jnewbery,2021-07-20 11:57:31,"Removing the v22 milestone. Now that the changes from #22112 have been reverted, this isn't urgent.",https://github.com/bitcoin/bitcoin/pull/22496#issuecomment-883333338,883333338,
MarcoFalke,2021-07-21 14:28:41,Needs OP adjusted?,https://github.com/bitcoin/bitcoin/pull/22496#issuecomment-884235403,884235403,
jnewbery,2021-07-21 15:47:32,"> Needs OP adjusted?\n\nDone",https://github.com/bitcoin/bitcoin/pull/22496#issuecomment-884294895,884294895,
vasild,2021-07-22 12:04:55,"> ... so why was code added to master to patch their addrmans if the intention was to remove that code before release?\n\nJust to answer the question: the intention was to include it in 22.0, see the commit message of e0a2b390c144e123e2fc8a289fdff36815476964. The reasons why it was removed earlier are stated in the commit message of the removal: d4b67c8ebc2bb7488bcaaccc3a801cdef1cf1678.\n",https://github.com/bitcoin/bitcoin/pull/22496#issuecomment-884859830,884859830,
sipa,2021-07-22 18:49:27,"utACK 65332b1178c75e1f83415bad24918996a1524866. I tried to reason through scenarios that could introduce inconsistencies with this code, but can't find any.\n\nI'm also working on a POC that replaces addrman's representation with something multiindex based, which is hopefully more easily reviewable for correctness/consistencies. But I'd like the existing addrman PRs in the pipeline to settle fir",https://github.com/bitcoin/bitcoin/pull/22496#issuecomment-885151879,885151879,
practicalswift,2021-07-24 19:55:43,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22496#issuecomment-886104240,886104240,
laanwj,2021-08-03 07:47:28,Post-merge ACK.,https://github.com/bitcoin/bitcoin/pull/22496#issuecomment-891618351,891618351,
