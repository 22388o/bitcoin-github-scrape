[
  {
    "sha": "fa79d9bbcdc511428a796563b5f6f3b481faca47",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTc5ZDliYmNkYzUxMTQyOGE3OTY1NjNiNWY2ZjNiNDgxZmFjYTQ3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-20T16:47:05Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-20T17:23:12Z"
      },
      "message": "[qa] mininode: Use hexlify wrapper from util",
      "tree": {
        "sha": "0613bdc788a6201e2206776a9b2349e959bfd183",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0613bdc788a6201e2206776a9b2349e959bfd183"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa79d9bbcdc511428a796563b5f6f3b481faca47",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa79d9bbcdc511428a796563b5f6f3b481faca47",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa79d9bbcdc511428a796563b5f6f3b481faca47",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa79d9bbcdc511428a796563b5f6f3b481faca47/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "04a29373571d44be36bd099c3b3ec3cda89e99d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04a29373571d44be36bd099c3b3ec3cda89e99d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04a29373571d44be36bd099c3b3ec3cda89e99d1"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "13f6c4fa5889f3f7927419cde7af0055d9cd1786",
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa79d9bbcdc511428a796563b5f6f3b481faca47/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa79d9bbcdc511428a796563b5f6f3b481faca47/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=fa79d9bbcdc511428a796563b5f6f3b481faca47",
        "patch": "@@ -23,7 +23,7 @@\n import time\n import sys\n import random\n-from binascii import hexlify, unhexlify\n+from .util import hex_str_to_bytes, bytes_to_hex_str\n from io import BytesIO\n from codecs import encode\n import hashlib\n@@ -93,7 +93,7 @@ def deser_uint256(f):\n \n \n def ser_uint256(u):\n-    rs = \"\"\n+    rs = b\"\"\n     for i in xrange(8):\n         rs += struct.pack(\"<I\", u & 0xFFFFFFFFL)\n         u >>= 32\n@@ -191,7 +191,7 @@ def deser_string_vector(f):\n \n \n def ser_string_vector(l):\n-    r = \"\"\n+    r = b\"\"\n     if len(l) < 253:\n         r = struct.pack(\"B\", len(l))\n     elif len(l) < 0x10000:\n@@ -236,12 +236,12 @@ def ser_int_vector(l):\n \n # Deserialize from a hex string representation (eg from RPC)\n def FromHex(obj, hex_string):\n-    obj.deserialize(BytesIO(unhexlify(hex_string.encode('ascii'))))\n+    obj.deserialize(BytesIO(hex_str_to_bytes(hex_string)))\n     return obj\n \n # Convert a binary-serializable object to hex (eg for submission via RPC)\n def ToHex(obj):\n-    return hexlify(obj.serialize()).decode('ascii')\n+    return bytes_to_hex_str(obj.serialize())\n \n # Objects that map to bitcoind objects, which can be serialized/deserialized\n \n@@ -359,7 +359,7 @@ def serialize(self):\n \n     def __repr__(self):\n         return \"CTxIn(prevout=%s scriptSig=%s nSequence=%i)\" \\\n-            % (repr(self.prevout), hexlify(self.scriptSig),\n+            % (repr(self.prevout), bytes_to_hex_str(self.scriptSig),\n                self.nSequence)\n \n \n@@ -381,7 +381,7 @@ def serialize(self):\n     def __repr__(self):\n         return \"CTxOut(nValue=%i.%08i scriptPubKey=%s)\" \\\n             % (self.nValue // COIN, self.nValue % COIN,\n-               hexlify(self.scriptPubKey))\n+               bytes_to_hex_str(self.scriptPubKey))\n \n \n class CTransaction(object):\n@@ -624,7 +624,7 @@ def deserialize(self, f):\n         self.vchSig = deser_string(f)\n \n     def serialize(self):\n-        r = \"\"\n+        r = b\"\"\n         r += ser_string(self.vchMsg)\n         r += ser_string(self.vchSig)\n         return r\n@@ -987,7 +987,7 @@ class msg_reject(object):\n     def __init__(self):\n         self.message = b\"\"\n         self.code = 0\n-        self.reason = \"\"\n+        self.reason = b\"\"\n         self.data = 0L\n \n     def deserialize(self, f):"
      }
    ]
  }
]