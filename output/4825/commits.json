[
  {
    "sha": "8d657a651735426388c5f7462e2dbf24225a26cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDY1N2E2NTE3MzU0MjYzODhjNWY3NDYyZTJkYmYyNDIyNWEyNmNi",
    "commit": {
      "author": {
        "name": "ENikS",
        "email": "evgeni@eniks.com",
        "date": "2014-09-06T19:59:59Z"
      },
      "committer": {
        "name": "ENikS",
        "email": "evgeni@eniks.com",
        "date": "2014-09-06T19:59:59Z"
      },
      "message": "Fixing compiler warning C4800: 'type' forcing value to bool 'true' or 'false'",
      "tree": {
        "sha": "125b0e5b08f351d9d53eb11aee85673f779ce99f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/125b0e5b08f351d9d53eb11aee85673f779ce99f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d657a651735426388c5f7462e2dbf24225a26cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d657a651735426388c5f7462e2dbf24225a26cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8d657a651735426388c5f7462e2dbf24225a26cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d657a651735426388c5f7462e2dbf24225a26cb/comments",
    "author": {
      "login": "ENikS",
      "id": 1750155,
      "node_id": "MDQ6VXNlcjE3NTAxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1750155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ENikS",
      "html_url": "https://github.com/ENikS",
      "followers_url": "https://api.github.com/users/ENikS/followers",
      "following_url": "https://api.github.com/users/ENikS/following{/other_user}",
      "gists_url": "https://api.github.com/users/ENikS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ENikS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ENikS/subscriptions",
      "organizations_url": "https://api.github.com/users/ENikS/orgs",
      "repos_url": "https://api.github.com/users/ENikS/repos",
      "events_url": "https://api.github.com/users/ENikS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ENikS/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ENikS",
      "id": 1750155,
      "node_id": "MDQ6VXNlcjE3NTAxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1750155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ENikS",
      "html_url": "https://github.com/ENikS",
      "followers_url": "https://api.github.com/users/ENikS/followers",
      "following_url": "https://api.github.com/users/ENikS/following{/other_user}",
      "gists_url": "https://api.github.com/users/ENikS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ENikS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ENikS/subscriptions",
      "organizations_url": "https://api.github.com/users/ENikS/orgs",
      "repos_url": "https://api.github.com/users/ENikS/repos",
      "events_url": "https://api.github.com/users/ENikS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ENikS/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b8d92236f61699846f67d8ce6cb55458a46f9de1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8d92236f61699846f67d8ce6cb55458a46f9de1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b8d92236f61699846f67d8ce6cb55458a46f9de1"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 23,
      "deletions": 23
    },
    "files": [
      {
        "sha": "8ecd7206cda20d94dfb4f2f5e9a9ab3238caba1e",
        "filename": "src/allocators.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d657a651735426388c5f7462e2dbf24225a26cb/src/allocators.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d657a651735426388c5f7462e2dbf24225a26cb/src/allocators.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/allocators.cpp?ref=8d657a651735426388c5f7462e2dbf24225a26cb",
        "patch": "@@ -46,7 +46,7 @@ static inline size_t GetSystemPageSize()\n bool MemoryPageLocker::Lock(const void *addr, size_t len)\n {\n #ifdef WIN32\n-    return VirtualLock(const_cast<void*>(addr), len);\n+    return VirtualLock(const_cast<void*>(addr), len) != 0;\n #else\n     return mlock(addr, len) == 0;\n #endif\n@@ -55,7 +55,7 @@ bool MemoryPageLocker::Lock(const void *addr, size_t len)\n bool MemoryPageLocker::Unlock(const void *addr, size_t len)\n {\n #ifdef WIN32\n-    return VirtualUnlock(const_cast<void*>(addr), len);\n+    return VirtualUnlock(const_cast<void*>(addr), len) != 0;\n #else\n     return munlock(addr, len) == 0;\n #endif"
      },
      {
        "sha": "e70b19ff8f7708e35a61a13dde3dace2b6f74e99",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d657a651735426388c5f7462e2dbf24225a26cb/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d657a651735426388c5f7462e2dbf24225a26cb/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=8d657a651735426388c5f7462e2dbf24225a26cb",
        "patch": "@@ -195,8 +195,8 @@ class CCoins\n         ::Unserialize(s, VARINT(nCode), nType, nVersion);\n         fCoinBase = nCode & 1;\n         std::vector<bool> vAvail(2, false);\n-        vAvail[0] = nCode & 2;\n-        vAvail[1] = nCode & 4;\n+        vAvail[0] = (nCode & 2) != 0;\n+        vAvail[1] = (nCode & 4) != 0;\n         unsigned int nMaskCode = (nCode / 8) + ((nCode & 6) != 0 ? 0 : 1);\n         // spentness bitmask\n         while (nMaskCode > 0) {"
      },
      {
        "sha": "8f5822dfc57d651a9d902b983e5a4ac231bbc375",
        "filename": "src/crypter.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d657a651735426388c5f7462e2dbf24225a26cb/src/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d657a651735426388c5f7462e2dbf24225a26cb/src/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypter.cpp?ref=8d657a651735426388c5f7462e2dbf24225a26cb",
        "patch": "@@ -62,9 +62,9 @@ bool CCrypter::Encrypt(const CKeyingMaterial& vchPlaintext, std::vector<unsigned\n     bool fOk = true;\n \n     EVP_CIPHER_CTX_init(&ctx);\n-    if (fOk) fOk = EVP_EncryptInit_ex(&ctx, EVP_aes_256_cbc(), NULL, chKey, chIV);\n-    if (fOk) fOk = EVP_EncryptUpdate(&ctx, &vchCiphertext[0], &nCLen, &vchPlaintext[0], nLen);\n-    if (fOk) fOk = EVP_EncryptFinal_ex(&ctx, (&vchCiphertext[0])+nCLen, &nFLen);\n+    if (fOk) fOk = EVP_EncryptInit_ex(&ctx, EVP_aes_256_cbc(), NULL, chKey, chIV) != 0;\n+    if (fOk) fOk = EVP_EncryptUpdate(&ctx, &vchCiphertext[0], &nCLen, &vchPlaintext[0], nLen) != 0;\n+    if (fOk) fOk = EVP_EncryptFinal_ex(&ctx, (&vchCiphertext[0]) + nCLen, &nFLen) != 0;\n     EVP_CIPHER_CTX_cleanup(&ctx);\n \n     if (!fOk) return false;\n@@ -89,9 +89,9 @@ bool CCrypter::Decrypt(const std::vector<unsigned char>& vchCiphertext, CKeyingM\n     bool fOk = true;\n \n     EVP_CIPHER_CTX_init(&ctx);\n-    if (fOk) fOk = EVP_DecryptInit_ex(&ctx, EVP_aes_256_cbc(), NULL, chKey, chIV);\n-    if (fOk) fOk = EVP_DecryptUpdate(&ctx, &vchPlaintext[0], &nPLen, &vchCiphertext[0], nLen);\n-    if (fOk) fOk = EVP_DecryptFinal_ex(&ctx, (&vchPlaintext[0])+nPLen, &nFLen);\n+    if (fOk) fOk = EVP_DecryptInit_ex(&ctx, EVP_aes_256_cbc(), NULL, chKey, chIV) != 0;\n+    if (fOk) fOk = EVP_DecryptUpdate(&ctx, &vchPlaintext[0], &nPLen, &vchCiphertext[0], nLen) != 0;\n+    if (fOk) fOk = EVP_DecryptFinal_ex(&ctx, (&vchPlaintext[0]) + nPLen, &nFLen) != 0;\n     EVP_CIPHER_CTX_cleanup(&ctx);\n \n     if (!fOk) return false;"
      },
      {
        "sha": "4ffbd61eddc4b5655410c0e61ed1b769638ec1b7",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d657a651735426388c5f7462e2dbf24225a26cb/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d657a651735426388c5f7462e2dbf24225a26cb/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=8d657a651735426388c5f7462e2dbf24225a26cb",
        "patch": "@@ -231,7 +231,7 @@ CDB::CDB(const char *pszFile, const char* pszMode) :\n     if (pszFile == NULL)\n         return;\n \n-    bool fCreate = strchr(pszMode, 'c');\n+    bool fCreate = strchr(pszMode, 'c') != NULL;\n     unsigned int nFlags = DB_THREAD;\n     if (fCreate)\n         nFlags |= DB_CREATE;"
      },
      {
        "sha": "1450e3481f48d07c9af3321f4b5bc618d14b7f91",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d657a651735426388c5f7462e2dbf24225a26cb/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d657a651735426388c5f7462e2dbf24225a26cb/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8d657a651735426388c5f7462e2dbf24225a26cb",
        "patch": "@@ -198,7 +198,7 @@ bool static Bind(const CService &addr, unsigned int flags) {\n     if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n         return false;\n     std::string strError;\n-    if (!BindListenPort(addr, strError, flags & BF_WHITELIST)) {\n+    if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {\n         if (flags & BF_REPORT_ERROR)\n             return InitError(strError);\n         return false;\n@@ -692,7 +692,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n     std::string strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n #endif // ENABLE_WALLET\n \n-    fIsBareMultisigStd = GetArg(\"-permitbaremultisig\", true);\n+    fIsBareMultisigStd = GetArg(\"-permitbaremultisig\", true) != 0;\n \n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n     // Sanity check"
      },
      {
        "sha": "8ed787654aa507d813f8e48ab589121603b04d63",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d657a651735426388c5f7462e2dbf24225a26cb/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d657a651735426388c5f7462e2dbf24225a26cb/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=8d657a651735426388c5f7462e2dbf24225a26cb",
        "patch": "@@ -172,9 +172,9 @@ class CECKey {\n         bool ret;\n         BIGNUM bn;\n         BN_init(&bn);\n-        ret = BN_bin2bn(vch, 32, &bn);\n+        ret = BN_bin2bn(vch, 32, &bn) != NULL;\n         assert(ret);\n-        ret = EC_KEY_regenerate_key(pkey, &bn);\n+        ret = EC_KEY_regenerate_key(pkey, &bn) != 0;\n         assert(ret);\n         BN_clear_free(&bn);\n     }\n@@ -217,7 +217,7 @@ class CECKey {\n \n     bool SetPubKey(const CPubKey &pubkey) {\n         const unsigned char* pbegin = pubkey.begin();\n-        return o2i_ECPublicKey(&pkey, &pbegin, pubkey.size());\n+        return o2i_ECPublicKey(&pkey, &pbegin, pubkey.size()) != NULL;\n     }\n \n     bool Sign(const uint256 &hash, std::vector<unsigned char>& vchSig) {\n@@ -553,7 +553,7 @@ bool CPubKey::RecoverCompact(const uint256 &hash, const std::vector<unsigned cha\n     if (vchSig.size() != 65)\n         return false;\n     int recid = (vchSig[0] - 27) & 3;\n-    bool fComp = (vchSig[0] - 27) & 4;\n+    bool fComp = ((vchSig[0] - 27) & 4) != 0;\n #ifdef USE_SECP256K1\n     int pubkeylen = 65;\n     if (!secp256k1_ecdsa_recover_compact((const unsigned char*)&hash, 32, &vchSig[1], (unsigned char*)begin(), &pubkeylen, fComp, recid))"
      },
      {
        "sha": "078bbc1f1331aa9d9c6e22ad34325a3f8e595d89",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d657a651735426388c5f7462e2dbf24225a26cb/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d657a651735426388c5f7462e2dbf24225a26cb/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=8d657a651735426388c5f7462e2dbf24225a26cb",
        "patch": "@@ -1536,7 +1536,7 @@ Value gettransaction(const Array& params, bool fHelp)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid or non-wallet transaction id\");\n     const CWalletTx& wtx = pwalletMain->mapWallet[hash];\n \n-    int64_t nCredit = wtx.GetCredit(filter);\n+    int64_t nCredit = wtx.GetCredit(filter != 0);\n     int64_t nDebit = wtx.GetDebit(filter);\n     int64_t nNet = nCredit - nDebit;\n     int64_t nFee = (wtx.IsFromMe(filter) ? wtx.GetValueOut() - nDebit : 0);"
      },
      {
        "sha": "1a11d038cab76ddf1c738f092edf2dbd078c3f5d",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d657a651735426388c5f7462e2dbf24225a26cb/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d657a651735426388c5f7462e2dbf24225a26cb/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=8d657a651735426388c5f7462e2dbf24225a26cb",
        "patch": "@@ -494,7 +494,7 @@ bool RenameOver(boost::filesystem::path src, boost::filesystem::path dest)\n {\n #ifdef WIN32\n     return MoveFileExA(src.string().c_str(), dest.string().c_str(),\n-                      MOVEFILE_REPLACE_EXISTING);\n+                       MOVEFILE_REPLACE_EXISTING) != 0;\n #else\n     int rc = std::rename(src.string().c_str(), dest.string().c_str());\n     return (rc == 0);"
      },
      {
        "sha": "20ee0bbe845e88fe9bbb8fdf86ef0d40f5f87096",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d657a651735426388c5f7462e2dbf24225a26cb/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d657a651735426388c5f7462e2dbf24225a26cb/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=8d657a651735426388c5f7462e2dbf24225a26cb",
        "patch": "@@ -637,7 +637,7 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pbl\n {\n     {\n         AssertLockHeld(cs_wallet);\n-        bool fExisted = mapWallet.count(tx.GetHash());\n+        bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n         if (fExisted && !fUpdate) return false;\n         if (fExisted || IsMine(tx) || IsFromMe(tx))\n         {\n@@ -1129,7 +1129,7 @@ void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const\n                 if (!(IsSpent(wtxid, i)) && mine != ISMINE_NO &&\n                     !IsLockedCoin((*it).first, i) && pcoin->vout[i].nValue > 0 &&\n                     (!coinControl || !coinControl->HasSelected() || coinControl->IsSelected((*it).first, i)))\n-                        vCoins.push_back(COutput(pcoin, i, nDepth, mine & ISMINE_SPENDABLE));\n+                        vCoins.push_back(COutput(pcoin, i, nDepth, (mine & ISMINE_SPENDABLE) != ISMINE_NO));\n             }\n         }\n     }\n@@ -1655,7 +1655,7 @@ bool CWallet::SetAddressBook(const CTxDestination& address, const string& strNam\n         if (!strPurpose.empty()) /* update purpose only if requested */\n             mapAddressBook[address].purpose = strPurpose;\n     }\n-    NotifyAddressBookChanged(this, address, strName, ::IsMine(*this, address),\n+    NotifyAddressBookChanged(this, address, strName, ::IsMine(*this, address) != ISMINE_NO,\n                              strPurpose, (fUpdated ? CT_UPDATED : CT_NEW) );\n     if (!fFileBacked)\n         return false;\n@@ -1681,7 +1681,7 @@ bool CWallet::DelAddressBook(const CTxDestination& address)\n         mapAddressBook.erase(address);\n     }\n \n-    NotifyAddressBookChanged(this, address, \"\", ::IsMine(*this, address), \"\", CT_DELETED);\n+    NotifyAddressBookChanged(this, address, \"\", ::IsMine(*this, address) != ISMINE_NO, \"\", CT_DELETED);\n \n     if (!fFileBacked)\n         return false;"
      }
    ]
  }
]