jonasschnelli,2015-01-29T08:31:57Z,I would also strongly recommend to add a Unit-Test for `verifySize()`.\nWe should no longer add implementations without test-coverage.\nAnd i assume this is easy to test with another payment request in the fixtures.\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-71987463,71987463,
Diapolo,2015-01-30T06:58:21Z,@jonasschnelli As `verifySize()` IS used in `PaymentServer::readPaymentRequestFromFile()` we already have test coverage :). IMHO it doesn't make sense to spam `paymentrequestdata.h` with 50001 Bytes of garbage just to re-test `verifySize()` again. What do you think?\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-72161925,72161925,
jonasschnelli,2015-01-30T09:07:39Z,@Diapolo IMO we should add the 50001 bytes test. You might use this forged payment request http://jonasschnelli.ch/r1422608371.bitcoinpaymentrequest\n\nI also tried to test `PaymentServer::readPaymentRequestFromFile` with 50001 random bytes. But there is no distinction between parsing error and size error (returns only a bool).\nIs there a change to test the QWarning within a QT unit test? Just a ,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-72172931,72172931,
Diapolo,2015-01-30T09:12:51Z,@jonasschnelli I'm fine with directly using `verifySize()` instead of `PaymentServer::readPaymentRequestFromFile()` (which can then be private again ^^). But we don't need a real invalid playment request for this check IMHO. As the check is triggerd by just if > 50000 bytes rule it can be random garbage data.\n\nWhat do you mean by `Is there a change to test the QWarning within a QT unit test? Jus,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-72173459,72173459,
jonasschnelli,2015-01-30T09:13:20Z,"Tested, reviewed, stepped ACK.\n\nnit: misses unit test\n\n![bildschirmfoto 2015-01-30 um 10 10 42](https://cloud.githubusercontent.com/assets/178464/5973447/97e213da-a868-11e4-942c-e6cc06d9670a.png)\n",https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-72173512,72173512,
jonasschnelli,2015-01-30T09:15:28Z,@Diapolo: sounds even better. I would recommend to just pass 50001 bytes through `PaymentServer::verifySize`. I understand that the test looks very trivial know. But the idea of test are that they give guidelines when extending the implementation.\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-72173724,72173724,
Diapolo,2015-01-30T09:25:46Z,"@jonasschnelli Updated, I hope this is fine now?\n",https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-72174822,72174822,
jonasschnelli,2015-01-30T09:33:09Z,tested ACK\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-72175623,72175623,
Diapolo,2015-02-03T21:48:32Z,Anything left to do for me to get this and other related pulls merged ;)?\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-72742183,72742183,
Diapolo,2015-02-26T07:56:50Z,Ping\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-76136331,76136331,
Diapolo,2015-03-09T10:05:23Z,@laanwj Mind giving this the final ACK ;)?\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-77827173,77827173,
jonasschnelli,2015-03-11T12:33:19Z,ReACK\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-78254171,78254171,
Diapolo,2015-03-21T17:29:08Z,@laanwj ping\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-84404703,84404703,
Diapolo,2015-04-12T20:39:10Z,@jonasschnelli Maybe you can help me understand what's preventing this pull from getting merged?\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-92121806,92121806,
Diapolo,2015-05-31T13:24:52Z,@laanwj @jonasschnelli Ping\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-107178367,107178367,
laanwj,2015-06-04T06:59:10Z,"@diapolo because you removed the test for, unrelated, PaymentServer::readPaymentRequestFromFile \n",https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-108755724,108755724,
Diapolo,2015-06-05T10:13:07Z,"@laanwj As I said, I just made `PaymentServer::readPaymentRequestFromFile()` public, because I hacked the former unit-test. That function isn't reliable as unit-test because it can also fail if the file could not be opened (returns false then), which isn't what the test assumes, as we want to verify the DoS protection.\n",https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-109249147,109249147,
jgarzik,2015-07-23T18:51:17Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-124209366,124209366,
Diapolo,2015-07-24T06:05:10Z,"@laanwj Fixed merge-conflict, ready now.\n",https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-124339056,124339056,
Diapolo,2015-08-10T12:13:33Z,@laanwj Ping\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-129424541,129424541,
Diapolo,2015-09-09T19:56:17Z,Final ping!\n,https://github.com/bitcoin/bitcoin/pull/5665#issuecomment-139028077,139028077,
laanwj,2015-03-24T08:25:39Z,Why are you removing this test?\n,https://github.com/bitcoin/bitcoin/pull/5665#discussion_r27009325,27009325,src/qt/test/paymentservertests.cpp
Diapolo,2015-03-24T18:14:15Z,"To be able to make `readPaymentRequestFromFile` private again, which I changed once and wasn't happy with it :). The function could also fail, if the file failed to open, which isn't what this test is for anyway.\n",https://github.com/bitcoin/bitcoin/pull/5665#discussion_r27056962,27056962,src/qt/test/paymentservertests.cpp
laanwj,2015-04-13T08:13:12Z,If you want to be able to test a private methods you could use a friend class / function. E.g. inside the class do\n\n```\nfriend class PaymentServerTester;\n```\n\nThen do the testing in a class PaymentServerTester.\n,https://github.com/bitcoin/bitcoin/pull/5665#discussion_r28220704,28220704,src/qt/test/paymentservertests.cpp
Diapolo,2015-05-11T08:48:09Z,"@laanwj It's not necessary here, but thanks for that C++ lesson :).\n",https://github.com/bitcoin/bitcoin/pull/5665#discussion_r30021589,30021589,src/qt/test/paymentservertests.cpp
