[
  {
    "sha": "96c509e4d0a0c6d5c472f021315c0380cfd10100",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NmM1MDllNGQwYTBjNmQ1YzQ3MmYwMjEzMTVjMDM4MGNmZDEwMTAw",
    "commit": {
      "author": {
        "name": "Isidoro Ghezzi",
        "email": "isidoro.ghezzi@icloud.com",
        "date": "2018-10-17T14:12:42Z"
      },
      "committer": {
        "name": "Isidoro Ghezzi",
        "email": "isidoro.ghezzi@icloud.com",
        "date": "2018-10-21T23:12:42Z"
      },
      "message": "show the progress of functional test\n\nexample (added the progress index `n/m`)\n```\n1/107 - wallet_hd.py passed, Duration: 27 s\n.........................................................................................\n2/107 - mining_getblocktemplate_longpoll.py passed, Duration: 72 s\n..................................................................\n3/107 - feature_maxuploadtarget.py passed, Duration: 78 s\n```\n\n- clear dots line\n```\n$ test/functional/test_runner.py -t can_trash\nTemporary test directory at can_trash/test_runner_\u20bf_\ud83c\udfc3_20181018_220600\n1/105 - wallet_hd.py passed, Duration: 21 s\n2/105 - mining_getblocktemplate_longpoll.py passed, Duration: 71 s\n3/105 - feature_maxuploadtarget.py passed, Duration: 68 s\n..................\n```\n\n- don't print the `dot` progressive if `--quiet`\n\n- done_str\n- nothing commit to check again travis tests",
      "tree": {
        "sha": "d38d6de6e1f502e54b71cc17de70b1f4da61bfb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d38d6de6e1f502e54b71cc17de70b1f4da61bfb9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96c509e4d0a0c6d5c472f021315c0380cfd10100",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEBqFy6+0+b1lSMxmElx4feYC7PesFAlvNCCgACgkQlx4feYC7\nPeuThxAApXcUAGGS6JH1xN94R3Q6U3qd/c3GoAcpQ4OsBq1l+tEFvqFuYvPoVKQV\nHFQRAT2xx1qvTo7S4gKNvmslpqh94NvUrkxqZ5dv9dsHFIWhBLqEtwqpZqjuGrLR\n9SMHsFsaW35Ywtj9lN2iLHEY4JrOKku0zbeqmClDyJVw5hvHKzGWYZq5yqzwP1EN\ndJQohT0eFglIS1NDF4yA7oL09CHXzXI8xwQ5+6rPuXsuLpoJBhwXFsmg+X36eW35\ntLaVG30fmVmIXUWNaoag+qeSYt5V3Y73RYC7JrKIbIsRFWPeIiXf12KgKwtrlKtl\n4+YTg7jL0r4U2TR3DAtVx4EuNYCH8w526QR4nIBbrcsEC+rTx1RuKy9gZ18i2r95\nUM4qi6yXtmHGyZW1Ufin+msXcfEKED9kAOaW9eWWxXt1c65pM0bAT2Az+ehxXYX8\nUv5ICO7QkJXEJnpZCu0Rrlo9imxy2B9SFOA0a5vEUe22NCsPUhpGu4cgLYeu8cyS\nzLEuQ1wdZ6tcy4R+eu1wJXY344w7HJPnhTikmgNJHx3kHQxOzCcBvi0SPaUpMXcC\nUBXQVss/9maWNDgK+eu188RdGOlmDGDyceogygQoZ0fT2QzN3jxEdyj81E+hvhq/\nU/5kjTutP82gN2APFMpFdqXD7ik0K3QK+YhWNCwfcxrFVIOhfmE=\n=jo3d\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIIb4/CLgxUpD2O1wj6dnOgUsUnRsxW+zlGoJZ702RMS6CP/wED4yN6N/Wj9c\nzCTXy0uwpyII8QRbzQgv8AhB4hRRPGqaGwCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQbExmVcIMDha3yskH\nDnO/OAjxBFvNCC/wCOW5gx1fbrsAAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxl\nbmRhci5jYXRhbGxheHkuY29t//AQ82EXHwrw2ma8gt/aAjXQGwjxBFvNCC/wCORT\naLrUzcP2AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BD8lhfQT0H6dfFjALvIOoD9CPAQylGjVQzWmX06FQG3uSUr\n3AjxBFvNCC7wCOCOmfdIRkiZAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxl\nbmRhci5ldGVybml0eXdhbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree d38d6de6e1f502e54b71cc17de70b1f4da61bfb9\nparent fe23553edd84b0247e05ec3de023944c558afd54\nauthor Isidoro Ghezzi <isidoro.ghezzi@icloud.com> 1539785562 +0200\ncommitter Isidoro Ghezzi <isidoro.ghezzi@icloud.com> 1540163562 +0200\n\nshow the progress of functional test\n\nexample (added the progress index `n/m`)\n```\n1/107 - wallet_hd.py passed, Duration: 27 s\n.........................................................................................\n2/107 - mining_getblocktemplate_longpoll.py passed, Duration: 72 s\n..................................................................\n3/107 - feature_maxuploadtarget.py passed, Duration: 78 s\n```\n\n- clear dots line\n```\n$ test/functional/test_runner.py -t can_trash\nTemporary test directory at can_trash/test_runner_\u20bf_\ud83c\udfc3_20181018_220600\n1/105 - wallet_hd.py passed, Duration: 21 s\n2/105 - mining_getblocktemplate_longpoll.py passed, Duration: 71 s\n3/105 - feature_maxuploadtarget.py passed, Duration: 68 s\n..................\n```\n\n- don't print the `dot` progressive if `--quiet`\n\n- done_str\n- nothing commit to check again travis tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96c509e4d0a0c6d5c472f021315c0380cfd10100",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96c509e4d0a0c6d5c472f021315c0380cfd10100",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96c509e4d0a0c6d5c472f021315c0380cfd10100/comments",
    "author": {
      "login": "isghe",
      "id": 1006078,
      "node_id": "MDQ6VXNlcjEwMDYwNzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1006078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isghe",
      "html_url": "https://github.com/isghe",
      "followers_url": "https://api.github.com/users/isghe/followers",
      "following_url": "https://api.github.com/users/isghe/following{/other_user}",
      "gists_url": "https://api.github.com/users/isghe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isghe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isghe/subscriptions",
      "organizations_url": "https://api.github.com/users/isghe/orgs",
      "repos_url": "https://api.github.com/users/isghe/repos",
      "events_url": "https://api.github.com/users/isghe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isghe/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "isghe",
      "id": 1006078,
      "node_id": "MDQ6VXNlcjEwMDYwNzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1006078?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isghe",
      "html_url": "https://github.com/isghe",
      "followers_url": "https://api.github.com/users/isghe/followers",
      "following_url": "https://api.github.com/users/isghe/following{/other_user}",
      "gists_url": "https://api.github.com/users/isghe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/isghe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/isghe/subscriptions",
      "organizations_url": "https://api.github.com/users/isghe/orgs",
      "repos_url": "https://api.github.com/users/isghe/repos",
      "events_url": "https://api.github.com/users/isghe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/isghe/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe23553edd84b0247e05ec3de023944c558afd54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe23553edd84b0247e05ec3de023944c558afd54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe23553edd84b0247e05ec3de023944c558afd54"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 19,
      "deletions": 11
    },
    "files": [
      {
        "sha": "f8906152b01ad8d48734853b696e3d4780f78d0e",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 19,
        "deletions": 11,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96c509e4d0a0c6d5c472f021315c0380cfd10100/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96c509e4d0a0c6d5c472f021315c0380cfd10100/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=96c509e4d0a0c6d5c472f021315c0380cfd10100",
        "patch": "@@ -320,9 +320,10 @@ def main():\n         args=passon_args,\n         combined_logs_len=args.combinedlogslen,\n         failfast=args.failfast,\n+        level=logging_level\n     )\n \n-def run_tests(test_list, src_dir, build_dir, tmpdir, jobs=1, enable_coverage=False, args=None, combined_logs_len=0, failfast=False):\n+def run_tests(test_list, src_dir, build_dir, tmpdir, jobs=1, enable_coverage=False, args=None, combined_logs_len=0, failfast=False, level=logging.DEBUG):\n     args = args or []\n \n     # Warn if bitcoind is already running (unix only)\n@@ -357,22 +358,22 @@ def run_tests(test_list, src_dir, build_dir, tmpdir, jobs=1, enable_coverage=Fal\n             raise\n \n     #Run Tests\n-    job_queue = TestHandler(jobs, tests_dir, tmpdir, test_list, flags)\n+    job_queue = TestHandler(jobs, tests_dir, tmpdir, test_list, flags, level)\n     start_time = time.time()\n     test_results = []\n \n     max_len_name = len(max(test_list, key=len))\n-\n-    for _ in range(len(test_list)):\n+    test_count = len(test_list)\n+    for i in range(test_count):\n         test_result, testdir, stdout, stderr = job_queue.get_next()\n         test_results.append(test_result)\n-\n+        done_str = \"{}/{} - {}{}{}\".format(i + 1, test_count, BOLD[1], test_result.name, BOLD[0])\n         if test_result.status == \"Passed\":\n-            logging.debug(\"\\n%s%s%s passed, Duration: %s s\" % (BOLD[1], test_result.name, BOLD[0], test_result.time))\n+            logging.debug(\"%s passed, Duration: %s s\" % (done_str, test_result.time))\n         elif test_result.status == \"Skipped\":\n-            logging.debug(\"\\n%s%s%s skipped\" % (BOLD[1], test_result.name, BOLD[0]))\n+            logging.debug(\"%s skipped\" % (done_str))\n         else:\n-            print(\"\\n%s%s%s failed, Duration: %s s\\n\" % (BOLD[1], test_result.name, BOLD[0], test_result.time))\n+            print(\"%s failed, Duration: %s s\\n\" % (done_str, test_result.time))\n             print(BOLD[1] + 'stdout:\\n' + BOLD[0] + stdout + '\\n')\n             print(BOLD[1] + 'stderr:\\n' + BOLD[0] + stderr + '\\n')\n             if combined_logs_len and os.path.isdir(testdir):\n@@ -438,13 +439,14 @@ class TestHandler:\n     Trigger the test scripts passed in via the list.\n     \"\"\"\n \n-    def __init__(self, num_tests_parallel, tests_dir, tmpdir, test_list=None, flags=None):\n+    def __init__(self, num_tests_parallel, tests_dir, tmpdir, test_list=None, flags=None, logging_level=logging.DEBUG):\n         assert(num_tests_parallel >= 1)\n         self.num_jobs = num_tests_parallel\n         self.tests_dir = tests_dir\n         self.tmpdir = tmpdir\n         self.test_list = test_list\n         self.flags = flags\n+        self.logging_level = logging_level\n         self.num_running = 0\n         self.jobs = []\n \n@@ -471,6 +473,7 @@ def get_next(self):\n                               log_stderr))\n         if not self.jobs:\n             raise IndexError('pop from empty list')\n+        dot_count = 0\n         while True:\n             # Return first proc that finishes\n             time.sleep(.5)\n@@ -491,9 +494,14 @@ def get_next(self):\n                         status = \"Failed\"\n                     self.num_running -= 1\n                     self.jobs.remove(job)\n-\n+                    if self.logging_level == logging.DEBUG:\n+                        clearline = '\\r' + (' ' * dot_count) + '\\r'\n+                        print(clearline, end='', flush=True)\n+                        dot_count = 0\n                     return TestResult(name, status, int(time.time() - start_time)), testdir, stdout, stderr\n-            print('.', end='', flush=True)\n+            if self.logging_level == logging.DEBUG:\n+                print('.', end='', flush=True)\n+                dot_count += 1\n \n     def kill_and_join(self):\n         \"\"\"Send SIGKILL to all jobs and block until all have ended.\"\"\""
      }
    ]
  }
]