[
  {
    "sha": "22220ef6d5f331c9e1f3e9487eaf07ab13693921",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMjIyMGVmNmQ1ZjMzMWM5ZTFmM2U5NDg3ZWFmMDdhYjEzNjkzOTIx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-15T14:50:15Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-02-17T10:36:30Z"
      },
      "message": "test: Move P2WSH_OP_TRUE to shared test library",
      "tree": {
        "sha": "cdc3d22ac34e70610619f61fc1a117461400dc80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cdc3d22ac34e70610619f61fc1a117461400dc80"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22220ef6d5f331c9e1f3e9487eaf07ab13693921",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi7jQwAgK/6svwDRc+fo0Ul1G+UUpbSPA2Epn9B/79c3CokrcCOvOwYE4ksZH4i\nV4hoySU/xVpk3ClNAOAQ+JPoHnUco8NUYyXbEzMpZ/cBvZVW56ysLdGPOj7biKfO\n7aMb7asmyEl5iJjcyfVFf3JMzbsbrmyVSNK75RzjndHCXMnUjgE4G/bdrOC+BigJ\nCj/fO/DJEu2ISdEw/40GVLTUkOBCQJK5kQzKHcmghIw0JnGuk2iv1NVAlRsqS2dN\njP4HxBMht3Tg+ic622Ow8HX8Fqr4lhd2g0QZYg1N0Dh1b2ExqlbokX2hjyVHPuET\nTvOncQ8jwm0rBHuhiCBz8uuOM0SNG/nWhCK2ahCvu69wdgVEPNyi6Dn6teNS9UuW\n3xjRdRgToQnqkg78VacW1SRCc1SDqp5VVxwxOtxkUzqdajYYLTkKvz+ixTeStzSc\nkvnlZ27RCk4y38pfiMIvJZ2OhETKnuw4dJp5Q/7jtBQauoIJU9ja2ErVpEiVXR+E\nafuPry83\n=BpwT\n-----END PGP SIGNATURE-----",
        "payload": "tree cdc3d22ac34e70610619f61fc1a117461400dc80\nparent 569b5ba1dc56ef1df2fc7dbf22b5fdbf35c87556\nauthor MarcoFalke <falke.marco@gmail.com> 1610722215 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1613558190 +0100\n\ntest: Move P2WSH_OP_TRUE to shared test library\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22220ef6d5f331c9e1f3e9487eaf07ab13693921",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/22220ef6d5f331c9e1f3e9487eaf07ab13693921",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22220ef6d5f331c9e1f3e9487eaf07ab13693921/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "569b5ba1dc56ef1df2fc7dbf22b5fdbf35c87556",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/569b5ba1dc56ef1df2fc7dbf22b5fdbf35c87556",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/569b5ba1dc56ef1df2fc7dbf22b5fdbf35c87556"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 26,
      "deletions": 15
    },
    "files": [
      {
        "sha": "1abfb667a039b4df8b5cab31b53960857af2ef85",
        "filename": "src/Makefile.test_util.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22220ef6d5f331c9e1f3e9487eaf07ab13693921/src/Makefile.test_util.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22220ef6d5f331c9e1f3e9487eaf07ab13693921/src/Makefile.test_util.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test_util.include?ref=22220ef6d5f331c9e1f3e9487eaf07ab13693921",
        "patch": "@@ -12,6 +12,7 @@ TEST_UTIL_H = \\\n     test/util/logging.h \\\n     test/util/mining.h \\\n     test/util/net.h \\\n+    test/util/script.h \\\n     test/util/setup_common.h \\\n     test/util/str.h \\\n     test/util/transaction_utils.h \\"
      },
      {
        "sha": "abd14c2067d575f92bff9ba488202b3fb452de3c",
        "filename": "src/test/util/script.h",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22220ef6d5f331c9e1f3e9487eaf07ab13693921/src/test/util/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22220ef6d5f331c9e1f3e9487eaf07ab13693921/src/test/util/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/script.h?ref=22220ef6d5f331c9e1f3e9487eaf07ab13693921",
        "patch": "@@ -0,0 +1,21 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TEST_UTIL_SCRIPT_H\n+#define BITCOIN_TEST_UTIL_SCRIPT_H\n+\n+#include <crypto/sha256.h>\n+#include <script/script.h>\n+\n+static const std::vector<uint8_t> WITNESS_STACK_ELEM_OP_TRUE{uint8_t{OP_TRUE}};\n+static const CScript P2WSH_OP_TRUE{\n+    CScript{}\n+    << OP_0\n+    << ToByteVector([] {\n+           uint256 hash;\n+           CSHA256().Write(WITNESS_STACK_ELEM_OP_TRUE.data(), WITNESS_STACK_ELEM_OP_TRUE.size()).Finalize(hash.begin());\n+           return hash;\n+       }())};\n+\n+#endif // BITCOIN_TEST_UTIL_SCRIPT_H"
      },
      {
        "sha": "f221e9f186d5fac1e9a73c479b436ab453b0d378",
        "filename": "src/test/validation_block_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 15,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22220ef6d5f331c9e1f3e9487eaf07ab13693921/src/test/validation_block_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22220ef6d5f331c9e1f3e9487eaf07ab13693921/src/test/validation_block_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_block_tests.cpp?ref=22220ef6d5f331c9e1f3e9487eaf07ab13693921",
        "patch": "@@ -11,15 +11,14 @@\n #include <pow.h>\n #include <random.h>\n #include <script/standard.h>\n+#include <test/util/script.h>\n #include <test/util/setup_common.h>\n #include <util/time.h>\n #include <validation.h>\n #include <validationinterface.h>\n \n #include <thread>\n \n-static const std::vector<unsigned char> V_OP_TRUE{OP_TRUE};\n-\n namespace validation_block_tests {\n struct MinerTestingSetup : public RegTestingSetup {\n     std::shared_ptr<CBlock> Block(const uint256& prev_hash);\n@@ -64,27 +63,17 @@ std::shared_ptr<CBlock> MinerTestingSetup::Block(const uint256& prev_hash)\n     static int i = 0;\n     static uint64_t time = Params().GenesisBlock().nTime;\n \n-    CScript pubKey;\n-    pubKey << i++ << OP_TRUE;\n-\n-    auto ptemplate = BlockAssembler(*m_node.mempool, Params()).CreateNewBlock(pubKey);\n+    auto ptemplate = BlockAssembler(*m_node.mempool, Params()).CreateNewBlock(CScript{} << i++ << OP_TRUE);\n     auto pblock = std::make_shared<CBlock>(ptemplate->block);\n     pblock->hashPrevBlock = prev_hash;\n     pblock->nTime = ++time;\n \n-    pubKey.clear();\n-    {\n-        WitnessV0ScriptHash witness_program;\n-        CSHA256().Write(&V_OP_TRUE[0], V_OP_TRUE.size()).Finalize(witness_program.begin());\n-        pubKey << OP_0 << ToByteVector(witness_program);\n-    }\n-\n     // Make the coinbase transaction with two outputs:\n     // One zero-value one that has a unique pubkey to make sure that blocks at the same height can have a different hash\n     // Another one that has the coinbase reward in a P2WSH with OP_TRUE as witness program to make it easy to spend\n     CMutableTransaction txCoinbase(*pblock->vtx[0]);\n     txCoinbase.vout.resize(2);\n-    txCoinbase.vout[1].scriptPubKey = pubKey;\n+    txCoinbase.vout[1].scriptPubKey = P2WSH_OP_TRUE;\n     txCoinbase.vout[1].nValue = txCoinbase.vout[0].nValue;\n     txCoinbase.vout[0].nValue = 0;\n     txCoinbase.vin[0].scriptWitness.SetNull();\n@@ -254,7 +243,7 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\n         for (int num_txs = 22; num_txs > 0; --num_txs) {\n             CMutableTransaction mtx;\n             mtx.vin.push_back(CTxIn{COutPoint{last_mined->vtx[0]->GetHash(), 1}, CScript{}});\n-            mtx.vin[0].scriptWitness.stack.push_back(V_OP_TRUE);\n+            mtx.vin[0].scriptWitness.stack.push_back(WITNESS_STACK_ELEM_OP_TRUE);\n             mtx.vout.push_back(last_mined->vtx[0]->vout[1]);\n             mtx.vout[0].nValue -= 1000;\n             txs.push_back(MakeTransactionRef(mtx));"
      }
    ]
  }
]