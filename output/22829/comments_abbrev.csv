DrahtBot,2021-08-30 00:21:56,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#21943](https://github.com/bitcoin/bitcoin/pull/21943) (Dedup and RAII-fy the creation of a copy of CConnman::vNodes by v",https://github.com/bitcoin/bitcoin/pull/22829#issuecomment-907909717,907909717,
jonatack,2021-09-06 08:37:22,Concept ACK and clang 13 debug build is clean.,https://github.com/bitcoin/bitcoin/pull/22829#issuecomment-913459532,913459532,
MarcoFalke,2021-09-06 08:49:26,"> there is no chance that within one critical section, another one is called\n\nwhy? What prevents `ForEachNode` to call `DisconnectNode` or so via the lambda?",https://github.com/bitcoin/bitcoin/pull/22829#issuecomment-913467389,913467389,
MarcoFalke,2021-09-06 08:50:35,The scripted diff could be shortened with a rename helper like 37dcd12d539e4a875581fa049aa0f7fafeb932a4,https://github.com/bitcoin/bitcoin/pull/22829#issuecomment-913468228,913468228,
theStack,2021-09-06 11:26:50,"> > there is no chance that within one critical section, another one is called\n> \n> why? What prevents `ForEachNode` to call `DisconnectNode` or so via the lambda?\n\nWhat concrete mutex are you referring to? Note that this PR only tackles the RecursiveMutex->Mutex replacement for `vAddedNodes_cs` (which is only locked in a small number of places, see commit log message for details), _not_ v",https://github.com/bitcoin/bitcoin/pull/22829#issuecomment-913573193,913573193,
theStack,2021-09-06 14:57:07,"Force-pushed with changed commit subject for the scripted-diff (using a helper), as suggested by MarcoFalke (https://github.com/bitcoin/bitcoin/pull/22829#issuecomment-913468228):\n```\n$ git range-diff 94a99d05...6f0930a9\n1:  cf29163ca ! 1:  887df8ecc scripted-diff: rename node vector/mutex members in CConnman\n    @@ Commit message\n         scripted-diff: rename node vector/mutex members ",https://github.com/bitcoin/bitcoin/pull/22829#issuecomment-913709044,913709044,
hebasto,2021-10-08 14:23:07,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/22829#issuecomment-938684311,938684311,
vasild,2021-10-04 11:49:24,nit: might use `std::atomic_uint64_t` if it is available on all platforms that we aim to support.,https://github.com/bitcoin/bitcoin/pull/22829#discussion_r721286937,721286937,src/net.h
vasild,2021-10-04 12:07:49,"Not necessary for this PR, but it is a good practice to avoid printouts (which may block) while holding mutexes. Feel free to take this or ignore it:\n```diff\n-                LOCK2(m_addr_fetches_mutex, m_added_nodes_mutex);\n-                if (m_addr_fetches.empty() && m_added_nodes.empty()) {\n-                    add_fixed_seeds_now = true;\n+                {\n+                    LO",https://github.com/bitcoin/bitcoin/pull/22829#discussion_r721299442,721299442,src/net.cpp
MarcoFalke,2021-10-04 12:52:44,"> std::atomic_uint64_t\n\nThe two are guaranteed to be the same either way.",https://github.com/bitcoin/bitcoin/pull/22829#discussion_r721334273,721334273,src/net.h
hebasto,2021-10-08 14:43:16,"nit, could be\n```suggestion\n            WITH_LOCK(m_added_nodes_mutex, m_added_nodes = connOptions.m_added_nodes);\n```\nwithout surrounding braces.\n\nMayby, better to leave it (and other similar places) for a follow up.",https://github.com/bitcoin/bitcoin/pull/22829#discussion_r725074060,725074060,src/net.h
