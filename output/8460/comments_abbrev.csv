jtimon,2016-08-04T22:06:06Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-237697990,237697990,
jtimon,2016-08-04T23:57:01Z,utACK 3502867\n,https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-237720607,237720607,
NicolasDorier,2016-08-07T23:10:48Z,"@MarcoFalke I reverted the python test height to old value, as well as deactivating the buried soft forks by default on regtest.\n",https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-238114600,238114600,
sipa,2016-08-25T13:19:38Z,What is the status here?\n,https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-242382763,242382763,
NicolasDorier,2016-08-25T17:54:20Z,"I think it is ready, would appreciate some feedback. As suggested by @sdaftuar on https://github.com/bitcoin/bitcoin/pull/8391#issuecomment-237584871 I did a small [BIP draft](https://docs.google.com/document/d/1vhE91A_GFJkB6BdoqcnaW5Q2zvnBbM2MPSwiL7h6LEc/edit?usp=sharing) for buried deployments as well.\n",https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-242481539,242481539,
jtimon,2016-08-30T13:31:11Z,re-utACK besides nits.\n,https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-243439079,243439079,
NicolasDorier,2016-08-30T15:29:59Z,nit addressed @MarcoFalke this PR might interest you as it touches the tests.\n,https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-243479331,243479331,
NicolasDorier,2016-09-08T11:04:36Z,is it possible to run the tests again ? I don't think the failure is related to this PR.\n,https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-245564619,245564619,
sipa,2016-09-08T11:07:12Z,@NicolasDorier I restarted the failing tests.\n,https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-245565144,245565144,
MarcoFalke,2016-09-09T22:44:39Z,"@NicolasDorier as I see correctly, the tests are no longer failing when there is an off-by-one error. What do you think of https://github.com/MarcoFalke/bitcoin/commits/Mf1609-qaReworkISM ?\n",https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-246061288,246061288,
NicolasDorier,2016-09-10T05:22:15Z,"@MarcoFalke good point, just cherry picked your commit.\nEDIT: +fix typo in your commit message\n",https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-246090049,246090049,
MarcoFalke,2016-09-15T19:31:19Z,"Concept ACK 97c4507 (can't review my own changes, though)\n",https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-247428168,247428168,
jtimon,2016-09-20T02:33:09Z,"Mhmm, there is a new review feature...\nutACK 43de0ce \nconcept ACK 97c4507\n",https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-248185448,248185448,
MarcoFalke,2016-10-29T23:55:20Z,This needs the merge conflict solved.\n,https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-257122984,257122984,
NicolasDorier,2016-11-10T19:57:09Z,rebased\n,https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-259791071,259791071,
NicolasDorier,2017-02-15T13:17:55Z,"closing it, too much conflict, if someone is interested I might do the work again.",https://github.com/bitcoin/bitcoin/pull/8460#issuecomment-280008122,280008122,
jtimon,2016-08-04T21:48:15Z,More generic to take the the chainparams petname. Maybe assert that is equal to CBaseChainParams::REGTEST.\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73609093,73609093,src/chainparams.cpp
jtimon,2016-08-04T21:53:32Z,"Instead of abusing MineBlocksOnDemand(), maybe a new attribute in CChainParams?\nWhat about fAllowOverwriteBuriedSoftforks?\nWe don't even need a new getter, CChainParams is accessed as a const ref everywhere outside chainparams.cpp.\n",https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73609765,73609765,src/init.cpp
jtimon,2016-08-04T23:48:51Z,This is not necessary anymore.\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73622457,73622457,src/chainparams.h
jtimon,2016-08-04T23:54:29Z,"Is the getter necessary? Params() already returns a const ref, why not use Params().fAllowsOverriddenSoftFork directly in init (making fAllowsOverriddenSoftFork public)?\n",https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73623014,73623014,src/chainparams.h
NicolasDorier,2016-08-04T23:56:09Z,I'm following the coding style of previous code in CChainParams which does not expose the fields.\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73623266,73623266,src/chainparams.h
jtimon,2016-08-04T23:58:09Z,fair enough\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73623411,73623411,src/chainparams.h
MarcoFalke,2016-08-06T16:55:30Z,Nit: Would it make sense to revert https://github.com/bitcoin/bitcoin/pull/8391/files#diff-30641a8ce712805f484b8305049f04b3 to the old code as well?\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73788732,73788732,qa/rpc-tests/bip65-cltv-p2p.py
MarcoFalke,2016-08-06T16:57:25Z,"Nit: I think keeping this the way it was is just fine. (Note that `fAllowsOverriddenSoftFork` is not really a chain param, is it?)\n",https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73788753,73788753,src/init.cpp
jtimon,2016-08-06T17:05:45Z,He is creating a new one. Maybe a future testnet allows this but does not mine blocks on demand. That's why we have different properties for chainparams instead of calling IsTestnet() or IsRegtest () like we did before.\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73788851,73788851,src/init.cpp
NicolasDorier,2016-08-07T01:10:29Z,"This particular change does not change anything in fact, because it is setting the buriefsf height at its default value anyway.\nI can't really revert the rest. The reason is that the previous test was testing activation and enforcement. But now we don't have different height for activation and enforcement anymore.\n",https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73794134,73794134,qa/rpc-tests/bip65-cltv-p2p.py
NicolasDorier,2016-08-07T01:14:24Z,"@MarcoFalke  What do you mean by ""fAllowsOverriddenSoftFork is not really a chain param"" ? where would you put it ?\n",https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73794160,73794160,src/init.cpp
MarcoFalke,2016-08-07T08:26:04Z,I have in mind you changed the heights for enforcement to be the same for all tests? So you could revert the patch that makes the test mine additional blocks and reduce `buriedsfparams` accordingly.\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73797830,73797830,qa/rpc-tests/bip65-cltv-p2p.py
NicolasDorier,2016-08-07T22:22:58Z,yes good point.\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r73810285,73810285,qa/rpc-tests/bip65-cltv-p2p.py
sipa,2016-08-26T17:23:10Z,Agree with using a new attribute.\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r76455193,76455193,src/init.cpp
sipa,2016-08-26T17:25:40Z,What is not necessary anymore?\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r76455585,76455585,src/chainparams.h
sipa,2016-08-26T17:27:39Z,"If you make the bip34 height configurable, you should also make the hash configurable, or this test will fail.\n",https://github.com/bitcoin/bitcoin/pull/8460#discussion_r76455938,76455938,src/main.cpp
sipa,2016-08-26T17:28:41Z,I'd say this is fine as a chain param.\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r76456114,76456114,src/init.cpp
NicolasDorier,2016-08-27T08:23:23Z,"meh, on Regtest BIP34Hash has always been 0. Ability to override BIP34Hash should be done when at least one unit test will make use of it, which is not the case for now.\n",https://github.com/bitcoin/bitcoin/pull/8460#discussion_r76512700,76512700,src/main.cpp
jtimon,2016-08-30T13:25:27Z,style nit: unnecessary diff.\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r76793450,76793450,src/chainparams.cpp
jtimon,2016-08-30T13:28:12Z,nit s/Params()/chainparams/ \n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r76793972,76793972,src/init.cpp
jtimon,2016-08-30T13:28:30Z,nit s/Params()/chainparams/\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r76794025,76794025,src/init.cpp
jtimon,2016-08-30T13:28:42Z,nit s/Params()/chainparams/ \n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r76794066,76794066,src/init.cpp
jtimon,2016-08-30T13:30:38Z,nit s/Params()/chainparams/\n,https://github.com/bitcoin/bitcoin/pull/8460#discussion_r76794442,76794442,src/init.cpp
