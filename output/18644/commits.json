[
  {
    "sha": "77eed48315a29ae6b3108276081889591f2dcdf6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2VlZDQ4MzE1YTI5YWU2YjMxMDgyNzYwODE4ODk1OTFmMmRjZGY2",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-04-14T23:46:27Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-04-15T01:13:07Z"
      },
      "message": "net: Add ReceiveMsgBytes documentation.",
      "tree": {
        "sha": "093cfb8c83eb18ceaf5f6b9ace4ea271f81700ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/093cfb8c83eb18ceaf5f6b9ace4ea271f81700ef"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77eed48315a29ae6b3108276081889591f2dcdf6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl6WX6UACgkQDMUhUxl5\nkaXEoBAAzMeB1ESbolnxVm2pub+6eMvYSaAF4yrnGwb4oB4fRts3ZdRmXLVP7tuD\nT4sNPdvV4dTYkREJwO5dPgvJHh6WDgVWzbqsX19rUfWt099xWWGELy9+aPDdi7w/\n33Qii7E22TavYRrU1SOEmFmWvweTJr3nvGS60zCFmSHKJGm0OUlXn8azaDA+gSpB\nhiMCdsu1P4eWk92iSr8+uahzELE+NEjI+Avk39T3GLyEe2ukuxtQlv75uqe7b6Yk\n7s750s6LiwDgeXJMy4fMDxeg1yD+Fjr8+RkP0NRzd7UGKeuHOnS3ERrIgZ/Qr8K3\nYsJvdjz8Pz5j7mtrZHeGaQ45E2KctQs6zM+lpDsb5RKW1EWvIZveGcurixyM5Qxn\nb+MkhTTae+NRoAYxl1jxPlQEIagiQ/FseVHXMuK3KY8uugBlHf/mLwPa15WIFzP7\nPnVd7cmpM/uUwPkqsjJzPM34WtBVrhBJp1i0I5mV+YQOs9fOu0OfBOBcEJDnEH65\nUAnOz9hCAUl7NB0UZ+0wmheEVbQxyVTQPkzIt0rzHAhJd02xzG3uIJM65F0x4PgQ\n/IOTn6l/AJiOxN8QbFVpNo39EEIyiM4vuC2GYy2fXJl4UXP5NB0HfdiRsLLhRQ76\nFu8of51wIIC6TKPewFyyPL2Xe1uaG8wvCeuqPPTWmVfADinU1Ag=\n=DJMt\n-----END PGP SIGNATURE-----",
        "payload": "tree 093cfb8c83eb18ceaf5f6b9ace4ea271f81700ef\nparent 4702cadca94520a36bfe979c85750563c30f7c85\nauthor Carl Dong <contact@carldong.me> 1586907987 -0400\ncommitter Carl Dong <contact@carldong.me> 1586913187 -0400\n\nnet: Add ReceiveMsgBytes documentation.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77eed48315a29ae6b3108276081889591f2dcdf6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77eed48315a29ae6b3108276081889591f2dcdf6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77eed48315a29ae6b3108276081889591f2dcdf6/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4702cadca94520a36bfe979c85750563c30f7c85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4702cadca94520a36bfe979c85750563c30f7c85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4702cadca94520a36bfe979c85750563c30f7c85"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6cb4b6a2edf454a9e5cae20c1ca5e9db94e9077c",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77eed48315a29ae6b3108276081889591f2dcdf6/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77eed48315a29ae6b3108276081889591f2dcdf6/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=77eed48315a29ae6b3108276081889591f2dcdf6",
        "patch": "@@ -565,6 +565,18 @@ void CNode::copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap)\n }\n #undef X\n \n+/**\n+ * Try to decode all CNetMessage%s from the first \\p nBytes bytes of the \\p pch\n+ * buffer and send them off for further processing.\n+ *\n+ * @param[out] complete Whether or not at least one CNetMessage was successfully\n+ *                      decoded.\n+ *\n+ * @returns Whether or not an unhandleable error has occured (e.g. failure to\n+ *          deserialize the header or ludicrous message sizes).\n+ *\n+ * @see ReadMessages(const char *, unsigned int, const CMessageHeader::MessageStartChars&, int64_t)\n+ */\n bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete)\n {\n     complete = false;"
      }
    ]
  },
  {
    "sha": "558227414b1c3153cd07f321473fd4742f569ee2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NTgyMjc0MTRiMWMzMTUzY2QwN2YzMjE0NzNmZDQ3NDJmNTY5ZWUy",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-04-14T23:10:20Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-04-15T01:13:11Z"
      },
      "message": "net: TransportDeserializer: Add and use ReadMessages.\n\nThis combines some unnecessary public separation of logic between the\nmember functions of TransportDeserializers and will allow us to greatly\nsimplify the TransportDeserializer interface in a subsequent commit.\n\nThis will also allow us to eliminate some member variables when\nimplementing BIP324.",
      "tree": {
        "sha": "d32e17fdc7f94257eaeae36af7db7e7d9f15f9c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d32e17fdc7f94257eaeae36af7db7e7d9f15f9c8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/558227414b1c3153cd07f321473fd4742f569ee2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl6WX6oACgkQDMUhUxl5\nkaUs/w/+OrgKl1hu24lMg7wYssaQm9aMolPPGu+Y2pOgNFO1JrKtXSOZUAB/wQF9\nPRcXmhAqeqAXDRP7/5fZ+qbLAZ4BNt3V/b43eKrmbp5MQHTvEj9Ku42/54zDbXag\nGCVREbTMaF597OOhFvHxHnEKVigL8lRLjlyRYp5bo+77pEzCmKlS4Jmsq7KOndQj\neQ7XAlSg7VnY/6Kl/ddBeYGXGxsDBh6fnxc3PV1QRIZxD+d6KxJZDDTGuljRtT41\nWPmzdnQtVsu/ifkOVIm4YQwahcAhSnjex8bsgXtQ2S2XQyMUTe1M/MQF7Xs2MGHp\nof+jSEjvxuU3flxuKYmet50Tziv57DVuGWowvk0lbEynUQqJywdfOqcd/jjM33hj\nQEmlwKkgDwHKnH29x5eyVlQBtwUgvfXiAJLR47a5hvlLhLy6oAS6hHZs9X4Z66zn\nSZUPDnw1q5J9S63KBCJjpA4C2BTEE0x+jPqHiDx/D4CiH5vY2h3cnCXndOpKVBse\nsP3XoVtd643GvfSQkahjg83owcY5v89xeLyyalosfBbL9UEKUGRR68y50Mm/EUNm\n5+DnGtajIsHlr68qsMs5cZNTkEL+u6mLpLLeh0Qcqglyj+TSnuuN6HBg7ZXCF2pC\nNeyIMIOFW81ImCwR6AjcVfOvC+d1elMISNdRU095wxcPRdElHRE=\n=H9gZ\n-----END PGP SIGNATURE-----",
        "payload": "tree d32e17fdc7f94257eaeae36af7db7e7d9f15f9c8\nparent 77eed48315a29ae6b3108276081889591f2dcdf6\nauthor Carl Dong <contact@carldong.me> 1586905820 -0400\ncommitter Carl Dong <contact@carldong.me> 1586913191 -0400\n\nnet: TransportDeserializer: Add and use ReadMessages.\n\nThis combines some unnecessary public separation of logic between the\nmember functions of TransportDeserializers and will allow us to greatly\nsimplify the TransportDeserializer interface in a subsequent commit.\n\nThis will also allow us to eliminate some member variables when\nimplementing BIP324.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/558227414b1c3153cd07f321473fd4742f569ee2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/558227414b1c3153cd07f321473fd4742f569ee2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/558227414b1c3153cd07f321473fd4742f569ee2/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "77eed48315a29ae6b3108276081889591f2dcdf6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77eed48315a29ae6b3108276081889591f2dcdf6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/77eed48315a29ae6b3108276081889591f2dcdf6"
      }
    ],
    "stats": {
      "total": 75,
      "additions": 52,
      "deletions": 23
    },
    "files": [
      {
        "sha": "8ad8ae5b2d210c3fd00cb24aa3f1bf08306aaa2d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 23,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/558227414b1c3153cd07f321473fd4742f569ee2/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/558227414b1c3153cd07f321473fd4742f569ee2/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=558227414b1c3153cd07f321473fd4742f569ee2",
        "patch": "@@ -579,39 +579,30 @@ void CNode::copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap)\n  */\n bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete)\n {\n-    complete = false;\n     int64_t nTimeMicros = GetTimeMicros();\n     LOCK(cs_vRecv);\n     nLastRecv = nTimeMicros / 1000000;\n     nRecvBytes += nBytes;\n-    while (nBytes > 0) {\n-        // absorb network data\n-        int handled = m_deserializer->Read(pch, nBytes);\n-        if (handled < 0) return false;\n \n-        pch += handled;\n-        nBytes -= handled;\n+    std::tuple<bool, std::vector<CNetMessage>> tup = m_deserializer->ReadMessages(pch, nBytes, Params().MessageStart(), nTimeMicros);\n \n-        if (m_deserializer->Complete()) {\n-            // decompose a transport agnostic CNetMessage from the deserializer\n-            CNetMessage msg = m_deserializer->GetMessage(Params().MessageStart(), nTimeMicros);\n+    std::vector<CNetMessage> msgs = std::get<1>(tup);\n \n-            //store received bytes per message command\n-            //to prevent a memory DOS, only allow valid commands\n-            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.m_command);\n-            if (i == mapRecvBytesPerMsgCmd.end())\n-                i = mapRecvBytesPerMsgCmd.find(NET_MESSAGE_COMMAND_OTHER);\n-            assert(i != mapRecvBytesPerMsgCmd.end());\n-            i->second += msg.m_raw_message_size;\n+    complete = !msgs.empty();\n+    for (CNetMessage &msg : msgs) {\n+        //store received bytes per message command\n+        //to prevent a memory DOS, only allow valid commands\n+        mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.m_command);\n+        if (i == mapRecvBytesPerMsgCmd.end())\n+            i = mapRecvBytesPerMsgCmd.find(NET_MESSAGE_COMMAND_OTHER);\n+        assert(i != mapRecvBytesPerMsgCmd.end());\n+        i->second += msg.m_raw_message_size;\n \n-            // push the message to the process queue,\n-            vRecvMsg.push_back(std::move(msg));\n-\n-            complete = true;\n-        }\n+        // push the message to the process queue,\n+        vRecvMsg.push_back(std::move(msg));\n     }\n \n-    return true;\n+    return std::get<0>(tup);\n }\n \n void CNode::SetSendVersion(int nVersionIn)"
      },
      {
        "sha": "df7b922b731c0ced24007c759e4677be8fbfbca7",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/558227414b1c3153cd07f321473fd4742f569ee2/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/558227414b1c3153cd07f321473fd4742f569ee2/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=558227414b1c3153cd07f321473fd4742f569ee2",
        "patch": "@@ -646,6 +646,26 @@ class TransportDeserializer {\n     virtual int Read(const char *data, unsigned int bytes) = 0;\n     // decomposes a message from the context\n     virtual CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n+    /**\n+     * Try to decode all CNetMessage%s from the first \\p nBytes bytes of the \\p\n+     * pch buffer.\n+     *\n+     * @param[in] message_start The expected message start string.\n+     * @param[in] time The approximate time at which these messages were\n+     *                 received in microseconds since UNIX epoch.\n+     *\n+     * @returns A tuple where the first element indicates whether or not an\n+     *          unhandleable error has occured (e.g. failure to deserialize the\n+     *          header or ludicrous message sizes), and the second element\n+     *          contains all succesfully decoded CNetMessage%s.\n+     *\n+     * @note Even if an unhandleable error has occured, CNetMessage%s might have\n+     *       already been decoded. These CNetMessage%s should not be ignored and\n+     *       probably should be processed.\n+     *\n+     * @see CNode::ReceiveMsgBytes(const char *, unsigned int, bool&)\n+     */\n+    virtual std::tuple<bool, std::vector<CNetMessage>> ReadMessages(const char *pch, unsigned int nBytes, const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n     virtual ~TransportDeserializer() {}\n };\n \n@@ -699,6 +719,24 @@ class V1TransportDeserializer final : public TransportDeserializer\n         return ret;\n     }\n     CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) override;\n+    std::tuple<bool, std::vector<CNetMessage>> ReadMessages(const char *pch, unsigned int nBytes, const CMessageHeader::MessageStartChars& message_start, int64_t time) override {\n+        std::vector<CNetMessage> out_msgs;\n+        while (nBytes > 0) {\n+            // absorb network data\n+            int handled = Read(pch, nBytes);\n+            if (handled < 0) {\n+                return std::make_tuple(false, out_msgs);\n+            }\n+\n+            pch += handled;\n+            nBytes -= handled;\n+\n+            if (Complete()) {\n+                out_msgs.push_back(GetMessage(message_start, time));\n+            }\n+        }\n+        return std::make_tuple(true, out_msgs);\n+    }\n };\n \n /** The TransportSerializer prepares messages for the network transport"
      }
    ]
  },
  {
    "sha": "5b76445c9487d41c643c2aaaad938bf1779558a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Yjc2NDQ1Yzk0ODdkNDFjNjQzYzJhYWFhZDkzOGJmMTc3OTU1OGEy",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-04-15T00:52:49Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-04-15T01:13:16Z"
      },
      "message": "net: Make ReadMessages conform to developer-notes.md.",
      "tree": {
        "sha": "66acd73bbace3cb528f971f2f7c8676e93e848fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/66acd73bbace3cb528f971f2f7c8676e93e848fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b76445c9487d41c643c2aaaad938bf1779558a2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl6WX68ACgkQDMUhUxl5\nkaVoBg//eV+EDyHuyKeaM3cBRfhOVohMc/e11jLWiMYYB1c1yZeI4PJSr85j7jqM\nfkjdgHHHxaipwLN8mjeJoL/tOUpyyW91GuGgUTWTiwmhHSBYrD+qzHNOQIY/uFUQ\naWyyRU2IPVJQ6Zu/SD+zM+8Jw8rq+T7BdvISmDTmcUF0uwwQpNeKt9g/wU+Htyab\n7xLM5lh09aGMQeJzY6BPeq+l/cQnqwjCqNXMijgLGLj3lm4Lho36GXLtwcV5jwOs\nKh62t9lLkJjEPh50bp5ugDhM2zqRZa6ysNWH7bgH6AxOMO8imi7eVTqwOYpWeO2U\n0oEWdNjUg0r0VXbcEXTo9Picb0wepevR8Tq/rlGtoFBTfh6lgvSoNIyGfbrWUMdY\njf4dBKCGcwlex7DyFQTt9WaLwjQEzP6veO2uw8fhG3ydAhYZaMpuHl9JFyYhUXF/\nMoWXcxLZMvs9S7YOngtSbyeWjhDM1tS+JCgKpQCFFaXU65VASYWXsgsS9nj7w0wk\nmHR3m44neJGj0jxAsKBKaPy8dhtkfLC1XeZOgQJn/7i7QdKN4KzDzKKyXEY0fpQO\nC7yB4Bw0hAgtqOpdeOpcIxTuW+Ea9ywg/9x3cjbSJIifKAmBn4ZEX31vBV5XSQsB\nKNyeVgUDj2NXgc1x5r88RWbbdLGCaWPEH3gOWtn4aYbuDgiagLA=\n=43Lg\n-----END PGP SIGNATURE-----",
        "payload": "tree 66acd73bbace3cb528f971f2f7c8676e93e848fb\nparent 558227414b1c3153cd07f321473fd4742f569ee2\nauthor Carl Dong <contact@carldong.me> 1586911969 -0400\ncommitter Carl Dong <contact@carldong.me> 1586913196 -0400\n\nnet: Make ReadMessages conform to developer-notes.md.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b76445c9487d41c643c2aaaad938bf1779558a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b76445c9487d41c643c2aaaad938bf1779558a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b76445c9487d41c643c2aaaad938bf1779558a2/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "558227414b1c3153cd07f321473fd4742f569ee2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/558227414b1c3153cd07f321473fd4742f569ee2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/558227414b1c3153cd07f321473fd4742f569ee2"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "9a2f33ee9cbd8c724a3cdc8373e6f294b5af5781",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b76445c9487d41c643c2aaaad938bf1779558a2/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b76445c9487d41c643c2aaaad938bf1779558a2/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=5b76445c9487d41c643c2aaaad938bf1779558a2",
        "patch": "@@ -647,8 +647,8 @@ class TransportDeserializer {\n     // decomposes a message from the context\n     virtual CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n     /**\n-     * Try to decode all CNetMessage%s from the first \\p nBytes bytes of the \\p\n-     * pch buffer.\n+     * Try to decode all CNetMessage%s from the first \\p num_bytes bytes of the\n+     * \\p receive_buffer buffer.\n      *\n      * @param[in] message_start The expected message start string.\n      * @param[in] time The approximate time at which these messages were\n@@ -665,7 +665,7 @@ class TransportDeserializer {\n      *\n      * @see CNode::ReceiveMsgBytes(const char *, unsigned int, bool&)\n      */\n-    virtual std::tuple<bool, std::vector<CNetMessage>> ReadMessages(const char *pch, unsigned int nBytes, const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n+    virtual std::tuple<bool, std::vector<CNetMessage>> ReadMessages(const char *receive_buffer, unsigned int num_bytes, const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n     virtual ~TransportDeserializer() {}\n };\n \n@@ -719,17 +719,17 @@ class V1TransportDeserializer final : public TransportDeserializer\n         return ret;\n     }\n     CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) override;\n-    std::tuple<bool, std::vector<CNetMessage>> ReadMessages(const char *pch, unsigned int nBytes, const CMessageHeader::MessageStartChars& message_start, int64_t time) override {\n+    std::tuple<bool, std::vector<CNetMessage>> ReadMessages(const char *receive_buffer, unsigned int num_bytes, const CMessageHeader::MessageStartChars& message_start, int64_t time) override {\n         std::vector<CNetMessage> out_msgs;\n-        while (nBytes > 0) {\n+        while (num_bytes > 0) {\n             // absorb network data\n-            int handled = Read(pch, nBytes);\n+            int handled = Read(receive_buffer, num_bytes);\n             if (handled < 0) {\n                 return std::make_tuple(false, out_msgs);\n             }\n \n-            pch += handled;\n-            nBytes -= handled;\n+            receive_buffer += handled;\n+            num_bytes -= handled;\n \n             if (Complete()) {\n                 out_msgs.push_back(GetMessage(message_start, time));"
      }
    ]
  },
  {
    "sha": "52e9088042ec90fa2dfe157cb1b1ba41b9046979",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MmU5MDg4MDQyZWM5MGZhMmRmZTE1N2NiMWIxYmE0MWI5MDQ2OTc5",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-04-14T23:10:35Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-04-15T01:13:20Z"
      },
      "message": "net: Simplify TransportDeserializer interface.\n\nNow that we have TransportDeserializer::ReadMessages, we don't need\nany other functions in the TransportDeserializer interface.\n\nThe SetVersion function is left alone because I assume that BIP324 will\nuse it somehow.",
      "tree": {
        "sha": "e3a38646319be18e971cb55ed318ee4b1856338d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3a38646319be18e971cb55ed318ee4b1856338d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52e9088042ec90fa2dfe157cb1b1ba41b9046979",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl6WYBgACgkQDMUhUxl5\nkaU//Q//QIpEHO3h1NGpZ6410695s76a/LWNgQdKFMsBllvgnsR3pqgeTm6NlaW4\nT2GA5tXmKdU2FRpwanpxxoG2ULKfnE1qFC1FNBH8Z7QAVpVYN6tJQI9XRfipUy2N\nARRWgqJeq3mxBSLsIZ1PJJ8ahlHsyykdqhS3LIYYbJM9pyj9wRsCJorMNTj34AsB\nWfUbpDdaGqONiG1DdfqE443aYnoSEgkZNK4adOMJGE0aEDEfvEJTlTazLgOIRAvL\nwWZzDEAoFUbp0Nj2jZHj0cICjsXCUR2qzEa/7dj/a2ci32dY6xA1Djd/8Tdp8oX0\ncl5apoApF+d/FBrmC4RqNjE6BdhSQ4SDAoGZX5/TT8Zl4alSBJSLkS2R++Vy/eZp\n05ey1f0GtGd2Tdy1SdijHGBkYGoPzFkmEN4fPpGFd8tXwWD+j/lpLaSVWZ63iYPc\nrwoDTgNV+a9kkhskgPvphHCJAg3eEI7LB2MhcaHbuRfJIkn4RIYcWjtJEGw6kWBi\n3ePO4gvntVB0Ezcvm0JP9EnASU+qDjl04WqYEYpVs0mzr6MK/uvjb0YwGHfSYuny\n6RJfQw4Ke7ayMB1kx87b6AIU7W2nk86FprM+yC5XBd8FsAQ5oTZEDz3jzxBOCExd\nLxDQAcdpShg7pHuIvI/yOBa5AyK6S7ZnaGiVMs6ZNDw2e+Hxt+0=\n=U9jN\n-----END PGP SIGNATURE-----",
        "payload": "tree e3a38646319be18e971cb55ed318ee4b1856338d\nparent 5b76445c9487d41c643c2aaaad938bf1779558a2\nauthor Carl Dong <contact@carldong.me> 1586905835 -0400\ncommitter Carl Dong <contact@carldong.me> 1586913200 -0400\n\nnet: Simplify TransportDeserializer interface.\n\nNow that we have TransportDeserializer::ReadMessages, we don't need\nany other functions in the TransportDeserializer interface.\n\nThe SetVersion function is left alone because I assume that BIP324 will\nuse it somehow.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52e9088042ec90fa2dfe157cb1b1ba41b9046979",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/52e9088042ec90fa2dfe157cb1b1ba41b9046979",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52e9088042ec90fa2dfe157cb1b1ba41b9046979/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b76445c9487d41c643c2aaaad938bf1779558a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b76445c9487d41c643c2aaaad938bf1779558a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b76445c9487d41c643c2aaaad938bf1779558a2"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 3,
      "deletions": 9
    },
    "files": [
      {
        "sha": "d728b7c0b97da1d39f7da7287c491111504e6510",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 9,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52e9088042ec90fa2dfe157cb1b1ba41b9046979/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52e9088042ec90fa2dfe157cb1b1ba41b9046979/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=52e9088042ec90fa2dfe157cb1b1ba41b9046979",
        "patch": "@@ -638,14 +638,8 @@ class CNetMessage {\n  */\n class TransportDeserializer {\n public:\n-    // returns true if the current deserialization is complete\n-    virtual bool Complete() const = 0;\n     // set the serialization context version\n     virtual void SetVersion(int version) = 0;\n-    // read and deserialize data\n-    virtual int Read(const char *data, unsigned int bytes) = 0;\n-    // decomposes a message from the context\n-    virtual CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n     /**\n      * Try to decode all CNetMessage%s from the first \\p num_bytes bytes of the\n      * \\p receive_buffer buffer.\n@@ -702,7 +696,7 @@ class V1TransportDeserializer final : public TransportDeserializer\n         Reset();\n     }\n \n-    bool Complete() const override\n+    bool Complete() const\n     {\n         if (!in_data)\n             return false;\n@@ -713,12 +707,11 @@ class V1TransportDeserializer final : public TransportDeserializer\n         hdrbuf.SetVersion(nVersionIn);\n         vRecv.SetVersion(nVersionIn);\n     }\n-    int Read(const char *pch, unsigned int nBytes) override {\n+    int Read(const char *pch, unsigned int nBytes) {\n         int ret = in_data ? readData(pch, nBytes) : readHeader(pch, nBytes);\n         if (ret < 0) Reset();\n         return ret;\n     }\n-    CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) override;\n     std::tuple<bool, std::vector<CNetMessage>> ReadMessages(const char *receive_buffer, unsigned int num_bytes, const CMessageHeader::MessageStartChars& message_start, int64_t time) override {\n         std::vector<CNetMessage> out_msgs;\n         while (num_bytes > 0) {\n@@ -737,6 +730,7 @@ class V1TransportDeserializer final : public TransportDeserializer\n         }\n         return std::make_tuple(true, out_msgs);\n     }\n+    CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time);\n };\n \n /** The TransportSerializer prepares messages for the network transport"
      }
    ]
  }
]