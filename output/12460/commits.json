[
  {
    "sha": "f8c249ab918b0b4d326b8c441816c64d046455bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOGMyNDlhYjkxOGIwYjRkMzI2YjhjNDQxODE2YzY0ZDA0NjQ1NWJm",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-02-16T20:28:03Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-02-16T20:30:26Z"
      },
      "message": "Assert CPubKey::ValidLength to the pubkey's header-relevent size\n\nPreviously this was an inline test where the specificity was probably judged\noverly specific. As a class method it makes sense to maintain consistency.\n\nAnd replace some magic values with their constant equivalents.",
      "tree": {
        "sha": "3547fc217d30021369b0c95e953a567fbd8df378",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3547fc217d30021369b0c95e953a567fbd8df378"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8c249ab918b0b4d326b8c441816c64d046455bf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJahz9yAAoJEG7l83hfeLNFxRQIAJUqG51h0PsSBD/RRgpPJNeg\nMeH+6eaZVZH3shwMVn3q7kcYNcPccNRINM5W7FcxGn+SQ8HHVD1j0IjPNVTBRwSo\nvHLU7/wCfkhV/fs6Cns800GakW/2RTCpqTt+lankwL2ILi+0H8Tr0PjlJVlrpjfP\n5vMzLsRnSEwra4coqw8udyitUdR4J/XWbx4Drqu+S26S7/QRoTj8CXAxXPa+vf7b\nYqE2X3VPhrAipFMcBTGsITOGEsjVMxL3R7AF7Aofaz+ZXbJugzkaTCul+3JTCUzO\ntRAgyQ0J06u+5G7G1DITtpaDBkJzUht6YuzkP3ucniJ+hpPLQ0iC7xkRvrugego=\n=mi0w\n-----END PGP SIGNATURE-----",
        "payload": "tree 3547fc217d30021369b0c95e953a567fbd8df378\nparent 4a62ddd01873d18dbca96c81d756be1020249b45\nauthor Ben Woosley <ben.woosley@gmail.com> 1518812883 +0000\ncommitter Ben Woosley <ben.woosley@gmail.com> 1518813026 -0800\n\nAssert CPubKey::ValidLength to the pubkey's header-relevent size\n\nPreviously this was an inline test where the specificity was probably judged\noverly specific. As a class method it makes sense to maintain consistency.\n\nAnd replace some magic values with their constant equivalents.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8c249ab918b0b4d326b8c441816c64d046455bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f8c249ab918b0b4d326b8c441816c64d046455bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8c249ab918b0b4d326b8c441816c64d046455bf/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4a62ddd01873d18dbca96c81d756be1020249b45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a62ddd01873d18dbca96c81d756be1020249b45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a62ddd01873d18dbca96c81d756be1020249b45"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 12,
      "deletions": 7
    },
    "files": [
      {
        "sha": "e3f2a1700975ae4148e73c67d31843c0f6009056",
        "filename": "src/keystore.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8c249ab918b0b4d326b8c441816c64d046455bf/src/keystore.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8c249ab918b0b4d326b8c441816c64d046455bf/src/keystore.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.cpp?ref=f8c249ab918b0b4d326b8c441816c64d046455bf",
        "patch": "@@ -131,7 +131,7 @@ static bool ExtractPubKey(const CScript &dest, CPubKey& pubKeyOut)\n     CScript::const_iterator pc = dest.begin();\n     opcodetype opcode;\n     std::vector<unsigned char> vch;\n-    if (!dest.GetOp(pc, opcode, vch) || vch.size() < 33 || vch.size() > 65)\n+    if (!dest.GetOp(pc, opcode, vch) || !CPubKey::ValidSize(vch))\n         return false;\n     pubKeyOut = CPubKey(vch);\n     if (!pubKeyOut.IsFullyValid())"
      },
      {
        "sha": "9c6c6b085ed030c362425b1f0d35e61bc596a0d4",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8c249ab918b0b4d326b8c441816c64d046455bf/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8c249ab918b0b4d326b8c441816c64d046455bf/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=f8c249ab918b0b4d326b8c441816c64d046455bf",
        "patch": "@@ -70,6 +70,11 @@ class CPubKey\n     }\n \n public:\n+\n+    bool static ValidSize(const std::vector<unsigned char> &vch) {\n+      return vch.size() > 0 && GetLen(vch[0]) == vch.size();\n+    }\n+\n     //! Construct an invalid public key.\n     CPubKey()\n     {"
      },
      {
        "sha": "de9e3b3b139c957ece0383010e3dc22b5823fb85",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8c249ab918b0b4d326b8c441816c64d046455bf/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8c249ab918b0b4d326b8c441816c64d046455bf/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=f8c249ab918b0b4d326b8c441816c64d046455bf",
        "patch": "@@ -61,17 +61,17 @@ static inline void popstack(std::vector<valtype>& stack)\n }\n \n bool static IsCompressedOrUncompressedPubKey(const valtype &vchPubKey) {\n-    if (vchPubKey.size() < 33) {\n+    if (vchPubKey.size() < CPubKey::COMPRESSED_PUBLIC_KEY_SIZE) {\n         //  Non-canonical public key: too short\n         return false;\n     }\n     if (vchPubKey[0] == 0x04) {\n-        if (vchPubKey.size() != 65) {\n+        if (vchPubKey.size() != CPubKey::PUBLIC_KEY_SIZE) {\n             //  Non-canonical public key: invalid length for uncompressed key\n             return false;\n         }\n     } else if (vchPubKey[0] == 0x02 || vchPubKey[0] == 0x03) {\n-        if (vchPubKey.size() != 33) {\n+        if (vchPubKey.size() != CPubKey::COMPRESSED_PUBLIC_KEY_SIZE) {\n             //  Non-canonical public key: invalid length for compressed key\n             return false;\n         }\n@@ -83,7 +83,7 @@ bool static IsCompressedOrUncompressedPubKey(const valtype &vchPubKey) {\n }\n \n bool static IsCompressedPubKey(const valtype &vchPubKey) {\n-    if (vchPubKey.size() != 33) {\n+    if (vchPubKey.size() != CPubKey::COMPRESSED_PUBLIC_KEY_SIZE) {\n         //  Non-canonical public key: invalid length for compressed key\n         return false;\n     }"
      },
      {
        "sha": "0b9053d7fcff75f25daa4d78446236ba89763887",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8c249ab918b0b4d326b8c441816c64d046455bf/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8c249ab918b0b4d326b8c441816c64d046455bf/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=f8c249ab918b0b4d326b8c441816c64d046455bf",
        "patch": "@@ -132,7 +132,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::v\n             // Template matching opcodes:\n             if (opcode2 == OP_PUBKEYS)\n             {\n-                while (vch1.size() >= 33 && vch1.size() <= 65)\n+                while (CPubKey::ValidSize(vch1))\n                 {\n                     vSolutionsRet.push_back(vch1);\n                     if (!script1.GetOp(pc1, opcode1, vch1))\n@@ -146,7 +146,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::v\n \n             if (opcode2 == OP_PUBKEY)\n             {\n-                if (vch1.size() < 33 || vch1.size() > 65)\n+                if (!CPubKey::ValidSize(vch1))\n                     break;\n                 vSolutionsRet.push_back(vch1);\n             }"
      }
    ]
  }
]