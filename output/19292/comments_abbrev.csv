DrahtBot,2020-06-16 09:46:12,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19137 (wallettool: Add dump and createfromdump commands by achow101)\n* #19102 (wallet: Introduce and use DummyDatabase i",https://github.com/bitcoin/bitcoin/pull/19292#issuecomment-644658419,644658419,
MarcoFalke,2020-06-17 13:04:16,Needs some kind of force push to prod github,https://github.com/bitcoin/bitcoin/pull/19292#issuecomment-645360487,645360487,
MarcoFalke,2020-06-17 13:06:53,"Have you considered making a commit for each function? Would help with scrolling during review, but no big deal if it is too cumbersome to split up.",https://github.com/bitcoin/bitcoin/pull/19292#issuecomment-645361741,645361741,
achow101,2020-06-17 14:29:41,Rebased,https://github.com/bitcoin/bitcoin/pull/19292#issuecomment-645409808,645409808,
Sjors,2020-06-17 16:33:06,"This could use documentation. In particular the behavior when `pdb` is absent is not super intuitive, e.g. it returns `false` for ReadKey and `true` for `WriteKey`. ",https://github.com/bitcoin/bitcoin/pull/19292#discussion_r441676380,441676380,src/wallet/bdb.h
Sjors,2020-06-17 16:40:17,Maybe just early return` false` here if `ret != 0 || datValue.get_data() == nullptr`? ,https://github.com/bitcoin/bitcoin/pull/19292#discussion_r441680722,441680722,src/wallet/bdb.cpp
Sjors,2020-06-17 16:43:11,"This is no longer inside a try-catch block, is that safe?",https://github.com/bitcoin/bitcoin/pull/19292#discussion_r441682618,441682618,src/wallet/bdb.cpp
Sjors,2020-06-17 16:46:09,"It's a non-trivial move, so might as well add brackets or make it inline.",https://github.com/bitcoin/bitcoin/pull/19292#discussion_r441684435,441684435,src/wallet/bdb.cpp
achow101,2020-06-17 17:14:38,"The try-catch block is for the deserialization operation (the `>>` operator), not this `write`.",https://github.com/bitcoin/bitcoin/pull/19292#discussion_r441701686,441701686,src/wallet/bdb.cpp
achow101,2020-06-17 17:19:02,"`WriteKey` returns `true` so that it works with dummy database. After #19102, this can (and probably should) be changed to `false`.",https://github.com/bitcoin/bitcoin/pull/19292#discussion_r441704118,441704118,src/wallet/bdb.h
achow101,2020-06-17 17:19:21,Meh. Will change if another push is needed.,https://github.com/bitcoin/bitcoin/pull/19292#discussion_r441704287,441704287,src/wallet/bdb.cpp
achow101,2020-06-17 17:19:27,Will change if another push is needed.,https://github.com/bitcoin/bitcoin/pull/19292#discussion_r441704341,441704341,src/wallet/bdb.cpp
MarcoFalke,2020-06-18 13:19:40,"I found it really confusing that all the `const&` are replaced by `&`. Is there any reason for that? If not, it could make sense to fix this up in a follow-up commit.",https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442219249,442219249,src/wallet/bdb.h
laanwj,2020-06-18 13:35:42,"I agree. If nothing else, `const` is good documentation about what can potentially be modified and what not.",https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442230407,442230407,src/wallet/bdb.h
ryanofsky,2020-06-18 13:36:37,"re: https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442219249\n\n> I found it really confusing that all the `const&` are replaced by `&`. Is there any reason for that? If not, it could make sense to fix this up in a follow-up commit.\n\nI assumed it was necessary to remove const from all the arguments because reading from CDataStream objects changes their internal real read position.",https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442231029,442231029,src/wallet/bdb.h
MarcoFalke,2020-06-18 13:49:13,"Both `data` and `size` are marked `const` in the `CDataStream` class. How would this affect the read position anyway?\n\nI think the reason is that the in-memory key data needs to be purged (in case it is a private key)?",https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442239967,442239967,src/wallet/bdb.h
ryanofsky,2020-06-18 14:00:39,"> Both `data` and `size` are marked `const` in the `CDataStream` class. How would this affect the read position anyway?\n\nGuess it wouldn't. I didn't check if these were const because I just remembered CDataStream being goofy about reading. Maybe it's less goofy than I thought but I still think Spans are better.",https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442248932,442248932,src/wallet/bdb.h
MarcoFalke,2020-06-18 14:19:29,"I agree that spans are better when all that is needed is to pass down `data` and `size`. I'll leave this diff here up for grabs:\n\n```diff\ndiff --git a/src/wallet/bdb.cpp b/src/wallet/bdb.cpp\nindex 125bf004e4..46d12546c7 100644\n--- a/src/wallet/bdb.cpp\n+++ b/src/wallet/bdb.cpp\n@@ -804,7 +804,7 @@ std::string BerkeleyDatabaseVersion()\n     return DbEnv::version(nullptr, nullptr, null",https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442262477,442262477,src/wallet/bdb.h
MarcoFalke,2020-06-18 14:20:48,@achow101 Let us know if you want to change this to span or rather have the current version of the pr merged,https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442263426,442263426,src/wallet/bdb.h
MarcoFalke,2020-06-18 14:24:38,It looks like my patch only compiles after commit b8740d6737b49229101fbce909ca3917929185b4 (Merge #18468: Span improvements),https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442266442,442266442,src/wallet/bdb.h
achow101,2020-06-18 14:28:24,I'll leave it for a followup.,https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442269287,442269287,src/wallet/bdb.h
laanwj,2020-06-18 14:46:55,"+1 on using spans\nI also thought about making `BerkeleyBatch::ReadKey` return an `Option<CDataStream>` instead of passing it in, but dunno.",https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442283931,442283931,src/wallet/bdb.h
MarcoFalke,2020-06-18 14:49:43,Done in #19320 ,https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442286126,442286126,src/wallet/bdb.h
