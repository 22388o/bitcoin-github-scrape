[
  {
    "sha": "7cdd5ce7b440d07154a08a90ac1b6bb79f15c579",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Y2RkNWNlN2I0NDBkMDcxNTRhMDhhOTBhYzFiNmJiNzlmMTVjNTc5",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-04T15:56:06Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-14T13:30:56Z"
      },
      "message": "test: p2p_blockfilters tests for BIP157 config args\n\n- add tests for BIP157 configuration options\n- test with tighter extra args\n- fixup the message names\n- change a log message from info to debug",
      "tree": {
        "sha": "286f6e129512849d67ec5b024d5a78923202263c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/286f6e129512849d67ec5b024d5a78923202263c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7cdd5ce7b440d07154a08a90ac1b6bb79f15c579",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl82khcACgkQT1chs9Dj\nkh1YMBAAjKh9Am0rWQBHvhzbqCc21Ab8Vbn7RwwSoKYEDq7eeJ4THB3O4wsR0aYU\nyTecOb2wAb43e23QdZb3ZkHF3E7L2Ih3S9Z9XmwB640mvGHviGqTwXooKsfPgqLb\nXrjflGZy3PWMO6q8mUaqZ3GoW5DSEsJ7vzKRV1p+5rSWSmT8TMIpMn0y5Eozifag\ndfcgJ0ZHNDXvJOsRDklQ+es2Gz2hfENNOvClTtXmiOiu7aDEXZ5+ZfdtMu0CtR6k\nh6c2zw7hpy5dV/SLLbP21yPDWd6fZr3fANG242jJy73RN5YR91mhUDRIUDeUphAh\nQDcsQsizBEgoyCLJlZbFWteZYkvPAtT6y4uDEeqpG4pSdSvQWlWsqDEjEwNRpbW3\nnNiNFFNy1iLs4/lH6HG2/5a+g3eKj8eTcP46gzD9Pva0IhltSwefKJhXWwefS1bg\nXY/fAKULigI7Q8ZL6usspHICYljBvNcszDJ1cE/SfObKeNsqDjB2hym1D6DCywps\nWp/wNlMAiE3uBPahVHOx5LYHUiOVNgNiE+fl7DyoHqd1Wk7cE0BZOaZT7u8qvItq\n97tqxcsB495tJtun1fae/+VKRQwoiXrZvMFA760YopHPIFcAvyWW5e/HFWmGR7bI\n3y4rbxrAEe8nVXyjdfJxxj2HNSgam5PuRouCTlDa+CsFtJOPokc=\n=zOWI\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIGpI74Za4489l10JWtH6RaSHB61gk+2IFcnqg/V9emVTCP/wEC4TrX6hMH3g\n+xXFkKbhyzII8QRfNpIa8Ai3qJiyO94wsgCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEEvZdZPwHD9KNiOJUCaj\nOegI8CBHQ3OZ/bmV/6d4Z81qzCdHig7smEzn1mlSFDWuoqR0dgjxBF82khnwCNtS\nEMbljlfkAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVu\ndGltZXN0YW1wcy5vcmf/8BBgPC0J2JgvXULnpTgMeW0bCPEEXzaSGfAIIq/eQ2cW\nTaYAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5jb23w\nEI3bUAUgLnrqCqMD9GiEUQII8QRfNpIZ8Aikl99YEYua3wCD3+MNLvkMjikoaHR0\ncHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 286f6e129512849d67ec5b024d5a78923202263c\nparent b4d0366b47dd9b8fe29cc9a100dcdf6ca1d3cabf\nauthor Jon Atack <jon@atack.com> 1591286166 +0200\ncommitter Jon Atack <jon@atack.com> 1597411856 +0200\n\ntest: p2p_blockfilters tests for BIP157 config args\n\n- add tests for BIP157 configuration options\n- test with tighter extra args\n- fixup the message names\n- change a log message from info to debug\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cdd5ce7b440d07154a08a90ac1b6bb79f15c579",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7cdd5ce7b440d07154a08a90ac1b6bb79f15c579",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7cdd5ce7b440d07154a08a90ac1b6bb79f15c579/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4d0366b47dd9b8fe29cc9a100dcdf6ca1d3cabf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4d0366b47dd9b8fe29cc9a100dcdf6ca1d3cabf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4d0366b47dd9b8fe29cc9a100dcdf6ca1d3cabf"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 12,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2a74de09ac7bb95819a5247fb21a9a1cb8becfd4",
        "filename": "test/functional/p2p_blockfilters.py",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7cdd5ce7b440d07154a08a90ac1b6bb79f15c579/test/functional/p2p_blockfilters.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7cdd5ce7b440d07154a08a90ac1b6bb79f15c579/test/functional/p2p_blockfilters.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_blockfilters.py?ref=7cdd5ce7b440d07154a08a90ac1b6bb79f15c579",
        "patch": "@@ -5,7 +5,7 @@\n \"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158).\n \n Tests that a node configured with -blockfilterindex and -peerblockfilters signals\n-NODE_COMPACT_FILTERS and can serve cfilters, cfheaders and cfcheckpts.\n+NODE_COMPACT_FILTERS and can serve cfilter, cfheaders, and cfcheckpt network messages.\n \"\"\"\n \n from test_framework.messages import (\n@@ -48,11 +48,19 @@ def set_test_params(self):\n         self.rpc_timeout = 480\n         self.num_nodes = 2\n         self.extra_args = [\n-            [\"-blockfilterindex\", \"-peerblockfilters\"],\n-            [\"-blockfilterindex\"],\n+            [\"-blockfilterindex=basic\", \"-peerblockfilters\"],\n+            [\"-blockfilterindex=basic\", \"-peerblockfilters=0\"],\n         ]\n \n     def run_test(self):\n+        self.log.info('Test -peerblockfilters without -blockfilterindex raises init error')\n+        err_msg = 'Error: Cannot set -peerblockfilters without -blockfilterindex.'\n+        self.nodes[0].assert_start_raises_init_error(['-blockfilterindex=0', '-peerblockfilters'], err_msg)\n+\n+        self.log.info('Test passing unknown -blockfilterindex type raises init error')\n+        err_msg = 'Error: Unknown -blockfilterindex value foo.'\n+        self.nodes[0].assert_start_raises_init_error(['-blockfilterindex=foo', '-peerblockfilters'], err_msg)\n+\n         # Node 0 supports COMPACT_FILTERS, node 1 does not.\n         node0 = self.nodes[0].add_p2p_connection(CFiltersClient())\n         node1 = self.nodes[1].add_p2p_connection(CFiltersClient())\n@@ -79,7 +87,7 @@ def run_test(self):\n         assert int(self.nodes[0].getnetworkinfo()['localservices'], 16) & NODE_COMPACT_FILTERS != 0\n         assert int(self.nodes[1].getnetworkinfo()['localservices'], 16) & NODE_COMPACT_FILTERS == 0\n \n-        self.log.info(\"get cfcheckpt on chain to be re-orged out.\")\n+        self.log.debug(\"get cfcheckpt on chain to be re-orged out.\")\n         request = msg_getcfcheckpt(\n             filter_type=FILTER_TYPE_BASIC,\n             stop_hash=int(stale_block_hash, 16)"
      }
    ]
  }
]