sdaftuar,2018-05-09T17:28:42Z,"I believe I encountered the race condition I describe in the OP during a run of the `p2p_node_network_limited.py` test.  An exception was raised in `disconnect_all()`, where the test disconnects each pair of peers.  Here's the relevant test log snippet:\n\n```\n node0 2018-05-09T16:27:51.966761Z Received a POST request for / from 127.0.0.1:57133 \n node0 2018-05-09T16:27:51.966844Z ThreadRPCSe",https://github.com/bitcoin/bitcoin/pull/13201#issuecomment-387814473,387814473,
jnewbery,2018-05-09T20:10:04Z,"utACK 09c6699900da962c5e35eb82e358240a4099838f.\n\nSeems reasonable - the only way we can receive a `RPC_CLIENT_NODE_NOT_CONNECTED` is if the requested node to disconnect is not found in conman's `vNodes`. In that case it's fine to just continue, since we're already disconnected by definition.",https://github.com/bitcoin/bitcoin/pull/13201#issuecomment-387860362,387860362,
laanwj,2018-05-10T07:17:35Z,Making disconnection idempotent seems a good idea. utACK 09c6699900da962c5e35eb82e358240a4099838f,https://github.com/bitcoin/bitcoin/pull/13201#issuecomment-387973394,387973394,
MarcoFalke,2018-05-10T14:30:47Z,"utACK 09c6699900da962c5e35eb82e358240a4099838f. Nice fixup, that should be backported",https://github.com/bitcoin/bitcoin/pull/13201#issuecomment-388071062,388071062,
