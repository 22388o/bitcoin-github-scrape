DrahtBot,2019-05-26 23:01:28,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16527](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16527.html) (B: Get rid of Params().RequireStandard() by",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-496038256,496038256,
hebasto,2019-07-16 20:04:55,"@ryanofsky Thank you for your review.\n\n> If someone specifies `-nopid`, it is wrong to create a pid file called `0`, but a simpler and more useful fix would be to be not write a pid file instead of adding a new logic in a different part of the code to print a ""negating not allowed"" error.\n> But the `-pid` argument case actually seems atypical here.\n\nAgree that `-nopid` should have a spec",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-511964976,511964976,
hebasto,2019-07-23 23:48:18,"@promag \n\n> And I think it could be changed to something like:\n```\n   enum Flags {\n      NONE = 0x00,\n      DEBUG_ONLY = 0x01,\n      NETWORK_ONLY = 0x2,\n      ALLOW_NEGATED = 0x04,      \n   };\n\n   Flags m_flags;\n```\n\nDone.",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514423992,514423992,
hebasto,2019-07-24 05:30:04,Commit 50a7f97db2a9daa1ed4f32e64cfb87b02e205e70 needs rebase on top of #16366. Going to make it tonight.,https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514485511,514485511,
ryanofsky,2019-07-24 05:39:03,"Thanks for the update! I still see several problems with this approach, but I think they can be fixed and I have specific suggestions below that I think will put this PR in a good state and make it easier to review. Here are the problems that I see presently (90dfd237ea75301891fc1715ebf319966f2e0b86):\n\n- Interaction between boolean option detection via help string and ALLOW_NEGATED errors via ",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514487370,514487370,
hebasto,2019-07-24 10:03:56,"@ryanofsky Thank you for your review. I really appreciate it.\n\n> 5. In a followup PR, replace ALLOW_ANY with ALLOW_STRING or ALLOW_INT for selected options where the goal is to disallow negation. This PR should be small, trivial to review, and have release notes describing the user visible changes and options that are affected.\n\nWe have over two hundred target lines of code. Proposed appro",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514568352,514568352,
hebasto,2019-07-24 10:48:29,"@ryanofsky \n> Drop the detection of boolean arguments through help strings ...\n\nAgree. Going to implement it.\n\n> ... and drop the `ALLOW_NEGATED` flag.\n\nI'd prefer to use it. It complements the `IsArgNegated()` function. Also, consider the following two options:\n- `-nowallet` has a special meaning, `-wallet=0` points to a wallet named `0` and `-nowallet=0` is an error; possible fla",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514582188,514582188,
ryanofsky,2019-07-24 13:17:26,"> > 5. In a followup PR, replace ALLOW_ANY with ALLOW_STRING or ALLOW_INT for selected options where the goal is to disallow negation. This PR should be small, trivial to review, and have release notes describing the user visible changes and options that are affected.\n> \n> We have over two hundred target lines of code. Proposed approach does not allow to apply a scripted-diff, unfortunately. T",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514627823,514627823,
promag,2019-07-24 13:25:54,Really nice @ryanofsky. Maybe it could also have a `MULTIPLE` flag?,https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514631021,514631021,
ryanofsky,2019-07-24 13:54:47,"> Maybe it could also have a MULTIPLE flag?\n\nYes I think that'd be a good flag, and I also like your idea adding support to declare default values. Best if this PR scope doesn't expand too much, but going forward, the more things about options that can be declared up front, the less complicated code reading options has to be and the less chance for inconsistencies and bugs.",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514642295,514642295,
promag,2019-07-24 14:11:10,"> Best if this PR scope doesn't expand too much\n\n👍 \n\nAnother flag (otherwise I may forget it) could be `SENSITIVE` so that its value wouldn't be dumped.",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514648695,514648695,
hebasto,2019-07-26 20:01:45,"@ryanofsky \n>     6. Make separate PRs for help text cleanups, any other unrelated cleanups.\n\nThe ""_refactoring: Use direct list initialization_"" commit (b89eb79b3a7bc3c2a0cd80454f4373f7a07f2fd5) has split out to #16469.\n\n\n\n",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-515581364,515581364,
ryanofsky,2019-07-26 20:22:19,"> @ryanofsky\n> \n> > ```\n> > 6. Make separate PRs for help text cleanups, any other unrelated cleanups.\n> > ```\n> \n> The ""_refactoring: Use direct list initialization_"" commit ([b89eb79](https://github.com/bitcoin/bitcoin/commit/b89eb79b3a7bc3c2a0cd80454f4373f7a07f2fd5)) has split out to #16469.\n\nSorry, I'd suggest closing #16469. The quote above is a little ambiguous, but I was try",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-515587411,515587411,
MarcoFalke,2019-07-26 20:32:23,Agree with @ryanofsky,https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-515590254,515590254,
hebasto,2019-07-27 20:35:15,"@ryanofsky \n> 2. Do not change any behavior in this PR. Set every existing option to `ALLOW_ANY` by default, with `| DEBUG_ONLY` and `| NETWORK_ONLY` flags added as necessary to preserve behavior.\n> 3. Raise an error during startup if a `-noXXX` option is given and the `ALLOW_BOOL` flag is not present. This should have no effect on behavior of existing options because `ALLOW_ANY` should be set",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-515711770,515711770,
hebasto,2019-07-27 20:45:07,PR title and description have been updated.,https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-515712384,515712384,
ryanofsky,2019-08-02 15:02:50,"I'm glad this PR isn't trying to fully implement this flags yet, since it keeps the change light and simple, and because the flag implementations will make more sense in context of followup PRs which actually put them to use. But I think I would like to see simple asserts added here to prevent misapplication of the new flags by developers, and bugs in the future when the flags actually do start be",https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-517734413,517734413,
ryanofsky,2019-05-28 12:31:13,"The problem described in the PR is real but I don't think the change implemented is the simplest or best fix. Having a new whitelist of options located in a separate part of the code from where the options are used and defined adds complexity, inconsistency, and [action at distance](https://en.wikipedia.org/wiki/Action_at_a_distance_(computer_programming)) to already very confusing code.\n\nIf s",https://github.com/bitcoin/bitcoin/pull/16097#discussion_r288078111,288078111,src/util/system.cpp
hebasto,2019-07-16 19:55:17,"`m_allowed_negated_args` is used in the same manner as `m_network_only_args` (see #11862) and it seems consistent, IMO.",https://github.com/bitcoin/bitcoin/pull/16097#discussion_r304091428,304091428,src/util/system.cpp
promag,2019-07-23 13:32:09,"> adds complexity, inconsistency, and action at distance to already very confusing code\n\nAgree with @ryanofsky. I'd rather see an approach like https://github.com/bitcoin/bitcoin/pull/16416#issuecomment-514120375\n\nBeside the fact that `m_network_only_args` is very small, I think it could be improved like my comment above - move that flag to the `Arg` structure.\n\nCurrently `ArgsManager:",https://github.com/bitcoin/bitcoin/pull/16097#discussion_r306319234,306319234,src/util/system.cpp
ryanofsky,2019-07-30 16:48:08,"In commit ""Revamp option negating policy"" (3f0b5e28ebcf42c168f393a3109403354cb8e128)\n\nThis commit appears to be changing behavior by fixing the error message so it technically contradicts ""This PR is only a refactoring and does not change behavior"" in the PR description. Could consider removing this here and just doing it as a minor bugfix later. Or updating the PR description to mention the c",https://github.com/bitcoin/bitcoin/pull/16097#discussion_r308829507,308829507,test/functional/feature_config_args.py
hebasto,2019-07-31 15:19:54,"> Could consider removing this here and just doing it as a minor bugfix later.\n\nDone. Moved to #16508.",https://github.com/bitcoin/bitcoin/pull/16097#discussion_r309281546,309281546,test/functional/feature_config_args.py
jamesob,2019-08-01 16:08:31,"(https://github.com/bitcoin/bitcoin/pull/16097/commits/e0d187dfeb18b026de22bd7960b2a50c2b958e1a)\n \nFWIW, this results in a slightly incorrect error message:\n```\n$ ./src/bitcoind -datadir=/data/bitcoin -noconnect=0 -logthreadnames\n\n2019-08-01T16:03:23Z Warning: parsed potentially confusing double-negative -connect=0\n```\nwhich I think should read ""double-negative -noconnect=0"".",https://github.com/bitcoin/bitcoin/pull/16097#discussion_r309779496,309779496,src/util/system.cpp
hebasto,2019-08-01 16:33:29,"> I think should read ""double-negative -noconnect=0"".\n\nYou are right. This remained untouched to preserve the old behavior and make this PR refactoring only. Details: https://github.com/bitcoin/bitcoin/pull/16097#discussion_r308829507 and https://github.com/bitcoin/bitcoin/pull/16097#discussion_r309281546.\n\n\n",https://github.com/bitcoin/bitcoin/pull/16097#discussion_r309790027,309790027,src/util/system.cpp
MarcoFalke,2019-08-02 15:51:13,"style-nit (for follow-up). Could indicate that this derives from `unsigned`, not `int` (which is the default)",https://github.com/bitcoin/bitcoin/pull/16097#discussion_r310193132,310193132,src/util/system.h
MarcoFalke,2019-08-02 15:58:38,"style-nit (for follow-up) could make const, to enforce the constructor sets it and it is never modified afterward.",https://github.com/bitcoin/bitcoin/pull/16097#discussion_r310196034,310196034,src/util/system.h
