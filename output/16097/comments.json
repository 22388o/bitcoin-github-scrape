[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/496038256",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-496038256",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 496038256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjAzODI1Ng==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-26T23:01:28Z",
    "updated_at": "2019-08-02T04:03:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16527](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16527.html) (B: Get rid of Params().RequireStandard() by jtimon)\n* [#16526](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16526.html) (A: Refactor: Chainparams: readability by jtimon)\n* [#16524](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16524.html) (Wallet: Disable -fallbackfee by default by jtimon)\n* [#16411](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16411.html) (Signet support by kallewoof)\n* [#16115](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16115.html) (On bitcoind startup, write config args to debug.log by LarryRuane)\n* [#16060](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16060.html) (Bury bip9 deployments by jnewbery)\n* [#15934](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15934.html) (Separate settings merging from parsing by ryanofsky)\n* [#15761](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15761.html) (Replace -upgradewallet startup option with upgradewallet RPC by achow101)\n* [#15421](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15421.html) (torcontrol: Launch a private Tor instance when not already running by luke-jr)\n* [#15367](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15367.html) (feature: Added ability for users to add a startup command by benthecarman)\n* [#14045](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14045.html) (refactor: Fix the chainparamsbase -> util circular dependency by Empact)\n* [#13716](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13716.html) (bitcoin-cli: -stdinwalletpassphrase and non-echo stdin passwords by kallewoof)\n* [#13339](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13339.html) (wallet: Replace %w by wallet name in -walletnotify script by promag)\n* [#12557](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12557.html) ([WIP] 64 bit iOS device support by Sjors)\n* [#10443](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/10443.html) (Add fee_est tool for debugging fee estimation code by ryanofsky)\n* [#8994](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/8994.html) (Testchains: Introduce custom chain whose constructor... by jtimon)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/496038256/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/511964976",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-511964976",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 511964976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMTk2NDk3Ng==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-16T20:04:55Z",
    "updated_at": "2019-07-16T20:04:55Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky Thank you for your review.\r\n\r\n> If someone specifies `-nopid`, it is wrong to create a pid file called `0`, but a simpler and more useful fix would be to be not write a pid file instead of adding a new logic in a different part of the code to print a \"negating not allowed\" error.\r\n> But the `-pid` argument case actually seems atypical here.\r\n\r\nAgree that `-nopid` should have a special behavior. And it deserves a separate PR.\r\n\r\n> More cases where negated arguments are handled incorrectly (like `-incrementalrelayfee`) seem like simple misuses of the IsArgSet function, which is misnamed and doesn't do what people think it does. I'd replace the `IsArgSet` function with separate `ArgHasValue` and `ArgIsSpecified` functions and use `ArgHasValue` instead of `ArgIsSpecified` everywhere or almost everywhere the code currently using ArgIsSet.\r\n\r\nI don't think this approach will compeltely fix the problem described in this PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/511964976/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514423992",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514423992",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 514423992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDQyMzk5Mg==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-23T23:48:18Z",
    "updated_at": "2019-07-23T23:48:18Z",
    "author_association": "MEMBER",
    "body": "@promag \r\n\r\n> And I think it could be changed to something like:\r\n```\r\n   enum Flags {\r\n      NONE = 0x00,\r\n      DEBUG_ONLY = 0x01,\r\n      NETWORK_ONLY = 0x2,\r\n      ALLOW_NEGATED = 0x04,      \r\n   };\r\n\r\n   Flags m_flags;\r\n```\r\n\r\nDone.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514423992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514485511",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514485511",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 514485511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDQ4NTUxMQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T05:30:04Z",
    "updated_at": "2019-07-24T05:30:04Z",
    "author_association": "MEMBER",
    "body": "Commit 50a7f97db2a9daa1ed4f32e64cfb87b02e205e70 needs rebase on top of #16366. Going to make it tonight.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514485511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514487370",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514487370",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 514487370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDQ4NzM3MA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T05:39:03Z",
    "updated_at": "2019-07-24T05:39:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the update! I still see several problems with this approach, but I think they can be fixed and I have specific suggestions below that I think will put this PR in a good state and make it easier to review. Here are the problems that I see presently (90dfd237ea75301891fc1715ebf319966f2e0b86):\r\n\r\n- Interaction between boolean option detection via help string and ALLOW_NEGATED errors via flags is confusing and I think will lead to bugs in the future.\r\n- PR has no [release notes](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#release-notes), no clear description of changes in behavior understandable to a normal user.\r\n- PR mixes refactoring changes with behavioral changes, and makes behavior changes in commits that affects swaths of options rather than individual options, so it is difficult as a reviewer to determine how behavior is changing and verify the changes are good without searching and looking at every option.\r\n\r\nI think all of these problems are fixable. Here are my suggestions:\r\n\r\n1. Drop the detection of boolean arguments through help strings and drop the `ALLOW_NEGATED` flag. The only flags I would suggest keeping here are:\r\n\r\n```c++\r\nALLOW_BOOL = 0x01,\r\nALLOW_INT = 0x02,\r\nALLOW_STRING = 0x4,\r\nALLOW_ANY = ALLOW_BOOL | ALLOW_INT | ALLOW_STRING,\r\nDEBUG_ONLY = 0x100,\r\nNETWORK_ONLY = 0x200,\r\n```\r\n\r\n2. Do not change any behavior in this PR. Set every existing option to `ALLOW_ANY` by default, with `| DEBUG_ONLY` and `| NETWORK_ONLY` flags added as necessary to preserve behavior.\r\n\r\n3. Raise an error during startup if a `-noXXX` option is given and the `ALLOW_BOOL` flag is not present. This should have no effect on behavior of existing options because `ALLOW_ANY` should be set as described above.\r\n\r\n4. Optionally, if you feel like implementing extra error checking that could be useful in the future, check for properly formatted ints and bools and nonempty strings based on the int/bool/string flags. Again these checks should not change behavior of existing options because `ALLOW_ANY` should always be set here.\r\n\r\n5. In a followup PR, replace `ALLOW_ANY` with `ALLOW_STRING` or `ALLOW_INT` for selected options where the goal is to disallow negation. This PR should be small, trivial to review, and have [release notes](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#release-notes) describing the user visible changes and options that are affected.\r\n\r\n6. Make separate PRs for help text cleanups, any other unrelated cleanups.\r\n\r\nOverall, I think this is moving in a good direction and adding the flags really helps. But the more we can move in the direction of simple bool/int/string option types, and have negation taken care of on the front end, rather than leaking into entire codebase, the better state this code will be in, and less weird behavior we will have in the future.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514487370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514568352",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514568352",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 514568352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDU2ODM1Mg==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T10:03:56Z",
    "updated_at": "2019-07-24T10:03:56Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky Thank you for your review. I really appreciate it.\r\n\r\n> 5. In a followup PR, replace ALLOW_ANY with ALLOW_STRING or ALLOW_INT for selected options where the goal is to disallow negation. This PR should be small, trivial to review, and have release notes describing the user visible changes and options that are affected.\r\n\r\nWe have over two hundred target lines of code. Proposed approach does not allow to apply a scripted-diff, unfortunately. Thoughts?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514568352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514582188",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514582188",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 514582188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDU4MjE4OA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T10:48:29Z",
    "updated_at": "2019-07-24T10:48:29Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky \r\n> Drop the detection of boolean arguments through help strings ...\r\n\r\nAgree. Going to implement it.\r\n\r\n> ... and drop the `ALLOW_NEGATED` flag.\r\n\r\nI'd prefer to use it. It complements the `IsArgNegated()` function. Also, consider the following two options:\r\n- `-nowallet` has a special meaning, `-wallet=0` points to a wallet named `0` and `-nowallet=0` is an error; possible flags are `ALLOW_BOOL | ALLOW_STRING`\r\n- `-noprune` equals to `-prune=0`; `-noprune=0` is not an error; possible flags are `ALLOW_BOOL | ALLOW_INT`\r\n\r\nUsing the `ALLOW_NEGATED` flag makes things simpler, IMO:\r\n- `-wallet` has flags `ALLOW_STRING | ALLOW_NEGATED`\r\n- `-prune` has flags `ALLOW_INT | ALLOW_NEGATED`",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514582188/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514627823",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514627823",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 514627823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDYyNzgyMw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T13:17:26Z",
    "updated_at": "2019-07-24T13:17:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > 5. In a followup PR, replace ALLOW_ANY with ALLOW_STRING or ALLOW_INT for selected options where the goal is to disallow negation. This PR should be small, trivial to review, and have release notes describing the user visible changes and options that are affected.\r\n> \r\n> We have over two hundred target lines of code. Proposed approach does not allow to apply a scripted-diff, unfortunately. Thoughts?\r\n\r\nThat's the whole point! It's good to use scripted diffs in refactoring commits, but there should be no scripted diff for the behavior change. The code changes in the behavior change PR should just look like:\r\n\r\n```diff\r\n-gArgs.AddArg(\"-changetype=<n>\", ALLOW_ANY, ...);\r\n+gArgs.AddArg(\"-changetype=<n>\", ALLOW_STRING, ...);\r\n```\r\n\r\n```diff\r\n-gArgs.AddArg(\"-dbcache=<n>\", ALLOW_ANY, ...);\r\n+gArgs.AddArg(\"-dbcache=<n>\", ALLOW_INT, ...);\r\n```\r\n\r\nSo it is easy for reviewers to verify that new errors triggered on options that currently allow negation are appropriate and appropriately documented in release notes.\r\n\r\nThere should not be 200 lines targeted. Every existing boolean option, every existing list option, most string options, and many int options that accept 0 should continue to allow negation.\r\n\r\n> > ... and drop the `ALLOW_NEGATED` flag.\r\n> \r\n> I'd prefer to use it. It complements the `IsArgNegated()` function.\r\n\r\nJust like _IsArgSet_ which is misused many places, misunderstood and should be eliminated. \r\n_IsArgNegated_ is an awkward API that should go away, and `ALLOW_NEGATED` should never be introduced.\r\n\r\nIf you look at [google flags api](https://abseil.io/docs/python/guides/flags), [qsettings](https://doc.qt.io/qt-5/qsettings.html), [python argparse](https://docs.python.org/3/library/argparse.html), the standard everywhere is bool/number/string representations, not \"is negated\" queries for code reading the values. My refactoring PR #15934 is a major step in this direction internally replacing our vector representation of negated values with plain, typed `false` values.\r\n\r\nNothing I'm suggesting here involves changing or limiting behavior in any way. I'm just suggesting to use normal, sane terminology, so we have a more usable api and so the IsArgSet IsArgNegated bugs you are fixing now don't get reintroduced in the future.\r\n \r\n> Using the `ALLOW_NEGATED` flag makes things simpler, IMO:\r\n> \r\n> * `-wallet` has flags `ALLOW_STRING | ALLOW_NEGATED`\r\n> * `-prune` has flags `ALLOW_INT | ALLOW_NEGATED`\r\n\r\nThat's exactly what I'm suggesting, except spelling `ALLOW_NEGATED` as  `ALLOW_BOOL`.\r\n\r\nI didn't fully describe in my previous comment how the suggested flags should behave, so I'll do that now to avoid unnecessary confusion. I don't think the extra error checks I'm describing here need to be implemented now. It'd be fine to implement them in future PRs that actually start adding `ALLOW_BOOL` / `ALLOW_INT` / `ALLOW_STRING` options instead of `ALLOW_ANY` for everything. Anyway, here's how the flags are meant to behave:\r\n\r\n* `-noOPTION` and `-noOPTION=1` negation syntax should be accepted when `ALLOW_BOOL` is present.\r\n* `-OPTION` and `-OPTION=` empty string syntax be accepted when `ALLOW_BOOL` is present.\r\n* `-OPTION=0` and `-OPTION=1` syntax should be accepted when `ALLOW_BOOL` is present.\r\n* `-OPTION=123` where _123_ is an integer should be accepted when `ALLOW_INT` is present.\r\n* `-OPTION=abc` where _abc_ is a nonempty string should be accepted when `ALLOW_STRING` is present.\r\n* Anything not accepted above should trigger an error.\r\n\r\nExcept for one detail, adding these checks should have no effect when ALLOW_ANY is specified, so even if these checks are added now, this can remain a pure refactoring PR and not change behavior. \r\n\r\nThe detail is that we currently accept `-noOPTION=abc` syntax for strange values of _abc_, sometimes interpreting _abc_ as false and showing a warning, sometimes interpreting it as true and not warning. This behavior should be left untouched here, and cleaned up in a separate PR (making any _abc_ that is not the empty string or 1 an error).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514627823/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514631021",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514631021",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 514631021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDYzMTAyMQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T13:25:54Z",
    "updated_at": "2019-07-24T13:25:54Z",
    "author_association": "MEMBER",
    "body": "Really nice @ryanofsky. Maybe it could also have a `MULTIPLE` flag?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514631021/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514642295",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514642295",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 514642295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDY0MjI5NQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T13:54:47Z",
    "updated_at": "2019-07-24T13:54:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Maybe it could also have a MULTIPLE flag?\r\n\r\nYes I think that'd be a good flag, and I also like your idea adding support to declare default values. Best if this PR scope doesn't expand too much, but going forward, the more things about options that can be declared up front, the less complicated code reading options has to be and the less chance for inconsistencies and bugs.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514642295/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514648695",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-514648695",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 514648695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDY0ODY5NQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T14:11:10Z",
    "updated_at": "2019-07-24T14:11:10Z",
    "author_association": "MEMBER",
    "body": "> Best if this PR scope doesn't expand too much\r\n\r\n\ud83d\udc4d \r\n\r\nAnother flag (otherwise I may forget it) could be `SENSITIVE` so that its value wouldn't be dumped.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514648695/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515581364",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-515581364",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 515581364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTU4MTM2NA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-26T20:01:45Z",
    "updated_at": "2019-07-26T20:01:45Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky \r\n>     6. Make separate PRs for help text cleanups, any other unrelated cleanups.\r\n\r\nThe \"_refactoring: Use direct list initialization_\" commit (b89eb79b3a7bc3c2a0cd80454f4373f7a07f2fd5) has split out to #16469.\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515581364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515587411",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-515587411",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 515587411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTU4NzQxMQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-26T20:22:19Z",
    "updated_at": "2019-07-26T20:22:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @ryanofsky\r\n> \r\n> > ```\r\n> > 6. Make separate PRs for help text cleanups, any other unrelated cleanups.\r\n> > ```\r\n> \r\n> The \"_refactoring: Use direct list initialization_\" commit ([b89eb79](https://github.com/bitcoin/bitcoin/commit/b89eb79b3a7bc3c2a0cd80454f4373f7a07f2fd5)) has split out to #16469.\r\n\r\nSorry, I'd suggest closing #16469. The quote above is a little ambiguous, but I was trying to suggest splitting **behavior** changes into a separate PRs from the requested flags refactor, not creating multiple refactoring PRs.\r\n\r\nIt's good to make behavior changes in small independent PRs so they don't get missed by reviewers and so there aren't multiple confusing discussion about different behaviors. It generally takes a lot less mental effort to review a pure refactoring PR than it does to review a refactoring PR mixed with behavior changes, so there shouldn't be any problem with including a small list initialization refactor in the same PR that does the requested flag refactor.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515587411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515590254",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-515590254",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 515590254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTU5MDI1NA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-26T20:32:23Z",
    "updated_at": "2019-07-26T20:32:23Z",
    "author_association": "MEMBER",
    "body": "Agree with @ryanofsky",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515590254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515711770",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-515711770",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 515711770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTcxMTc3MA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-27T20:35:15Z",
    "updated_at": "2019-07-27T20:35:15Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky \r\n> 2. Do not change any behavior in this PR. Set every existing option to `ALLOW_ANY` by default, with `| DEBUG_ONLY` and `| NETWORK_ONLY` flags added as necessary to preserve behavior.\r\n> 3. Raise an error during startup if a `-noXXX` option is given and the `ALLOW_BOOL` flag is not present. This should have no effect on behavior of existing options because `ALLOW_ANY` should be set as described above.\r\n\r\nDone.\r\n\r\n> 5. In a followup PR, replace `ALLOW_ANY` with `ALLOW_STRING` or `ALLOW_INT` for selected options where the goal is to disallow negation. This PR should be small, trivial to review, and have release notes describing the user visible changes and options that are affected.\r\n\r\n`ALLOW_ANY` is replaced with `ALLOW_STRING` in #16476.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515711770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515712384",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-515712384",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 515712384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTcxMjM4NA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-27T20:45:07Z",
    "updated_at": "2019-07-27T20:45:07Z",
    "author_association": "MEMBER",
    "body": "PR title and description have been updated.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515712384/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517734413",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#issuecomment-517734413",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16097",
    "id": 517734413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzczNDQxMw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-02T15:02:50Z",
    "updated_at": "2019-08-02T15:02:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm glad this PR isn't trying to fully implement this flags yet, since it keeps the change light and simple, and because the flag implementations will make more sense in context of followup PRs which actually put them to use. But I think I would like to see simple asserts added here to prevent misapplication of the new flags by developers, and bugs in the future when the flags actually do start being enforced:\r\n\r\n```diff\r\ndiff --git a/src/util/system.cpp b/src/util/system.cpp\r\nindex 5f704ecabef..8ad02128c57 100644\r\n--- a/src/util/system.cpp\r\n+++ b/src/util/system.cpp\r\n@@ -461,6 +461,7 @@ unsigned int ArgsManager::FlagsOfKnownArg(const std::string& key) const\r\n \r\n std::vector<std::string> ArgsManager::GetArgs(const std::string& strArg) const\r\n {\r\n+    assert(FlagsOfKnownArg(strArg) & ALLOW_STRING);\r\n     std::vector<std::string> result = {};\r\n     if (IsArgNegated(strArg)) return result; // special case\r\n \r\n@@ -504,6 +505,7 @@ bool ArgsManager::IsArgNegated(const std::string& strArg) const\r\n \r\n std::string ArgsManager::GetArg(const std::string& strArg, const std::string& strDefault) const\r\n {\r\n+    assert(FlagsOfKnownArg(strArg) & ALLOW_STRING);\r\n     if (IsArgNegated(strArg)) return \"0\";\r\n     std::pair<bool,std::string> found_res = ArgsManagerHelper::GetArg(*this, strArg);\r\n     if (found_res.first) return found_res.second;\r\n@@ -512,6 +514,7 @@ std::string ArgsManager::GetArg(const std::string& strArg, const std::string& st\r\n \r\n int64_t ArgsManager::GetArg(const std::string& strArg, int64_t nDefault) const\r\n {\r\n+    assert(FlagsOfKnownArg(strArg) & ALLOW_INT);\r\n     if (IsArgNegated(strArg)) return 0;\r\n     std::pair<bool,std::string> found_res = ArgsManagerHelper::GetArg(*this, strArg);\r\n     if (found_res.first) return atoi64(found_res.second);\r\n@@ -520,6 +523,7 @@ int64_t ArgsManager::GetArg(const std::string& strArg, int64_t nDefault) const\r\n \r\n bool ArgsManager::GetBoolArg(const std::string& strArg, bool fDefault) const\r\n {\r\n+    assert(FlagsOfKnownArg(strArg) & ALLOW_BOOL);\r\n     if (IsArgNegated(strArg)) return false;\r\n     std::pair<bool,std::string> found_res = ArgsManagerHelper::GetArg(*this, strArg);\r\n     if (found_res.first) return InterpretBool(found_res.second);\r\n```\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/517734413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288078111",
    "pull_request_review_id": 242634778,
    "id": 288078111,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4ODA3ODExMQ==",
    "diff_hunk": "@@ -319,6 +318,27 @@ ArgsManager::ArgsManager() :\n       \"-port\", \"-bind\",\n       \"-rpcport\", \"-rpcbind\",\n       \"-wallet\",\n+    },\n+\n+    m_allowed_negated_args{",
    "path": "src/util/system.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "e6f649cb2c07bf55d9214c2876619c56f1d6fe30",
    "original_commit_id": "9ad3972652a6dbbacf95addf9b4b968f8cf72220",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The problem described in the PR is real but I don't think the change implemented is the simplest or best fix. Having a new whitelist of options located in a separate part of the code from where the options are used and defined adds complexity, inconsistency, and [action at distance](https://en.wikipedia.org/wiki/Action_at_a_distance_(computer_programming)) to already very confusing code.\r\n\r\nIf someone specifies `-nopid`, it is wrong to create a pid file called `0`, but a simpler and more useful fix would be to be not write a pid file instead of adding a new logic in a different part of the code to print a \"negating not allowed\" error.\r\n\r\nBut the `-pid` argument case actually seems atypical here. More cases where negated arguments are handled incorrectly (like `-incrementalrelayfee`) seem like simple misuses of the IsArgSet function, which is misnamed and doesn't do what people think it does. I'd replace the `IsArgSet` function with separate `ArgHasValue` and  `ArgIsSpecified` functions and use `ArgHasValue` instead of `ArgIsSpecified` everywhere or almost everywhere the code currently using ArgIsSet.",
    "created_at": "2019-05-28T12:31:13Z",
    "updated_at": "2019-07-31T19:00:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r288078111",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288078111"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r288078111"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288078111/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 341,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304091428",
    "pull_request_review_id": 262646482,
    "id": 304091428,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNDA5MTQyOA==",
    "diff_hunk": "@@ -319,6 +318,27 @@ ArgsManager::ArgsManager() :\n       \"-port\", \"-bind\",\n       \"-rpcport\", \"-rpcbind\",\n       \"-wallet\",\n+    },\n+\n+    m_allowed_negated_args{",
    "path": "src/util/system.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "e6f649cb2c07bf55d9214c2876619c56f1d6fe30",
    "original_commit_id": "9ad3972652a6dbbacf95addf9b4b968f8cf72220",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`m_allowed_negated_args` is used in the same manner as `m_network_only_args` (see #11862) and it seems consistent, IMO.",
    "created_at": "2019-07-16T19:55:17Z",
    "updated_at": "2019-07-31T19:00:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r304091428",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304091428"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r304091428"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/304091428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 341,
    "side": "RIGHT",
    "in_reply_to_id": 288078111
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306319234",
    "pull_request_review_id": 265408879,
    "id": 306319234,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjMxOTIzNA==",
    "diff_hunk": "@@ -319,6 +318,27 @@ ArgsManager::ArgsManager() :\n       \"-port\", \"-bind\",\n       \"-rpcport\", \"-rpcbind\",\n       \"-wallet\",\n+    },\n+\n+    m_allowed_negated_args{",
    "path": "src/util/system.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "e6f649cb2c07bf55d9214c2876619c56f1d6fe30",
    "original_commit_id": "9ad3972652a6dbbacf95addf9b4b968f8cf72220",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> adds complexity, inconsistency, and action at distance to already very confusing code\r\n\r\nAgree with @ryanofsky. I'd rather see an approach like https://github.com/bitcoin/bitcoin/pull/16416#issuecomment-514120375\r\n\r\nBeside the fact that `m_network_only_args` is very small, I think it could be improved like my comment above - move that flag to the `Arg` structure.\r\n\r\nCurrently `ArgsManager::Arg` has:\r\n```cpp\r\n        bool m_debug_only;\r\n```\r\nAnd I think it could be changed to something like:\r\n```cpp\r\n   enum Flags {\r\n      NONE = 0x00,\r\n      DEBUG_ONLY = 0x01,\r\n      NETWORK_ONLY = 0x2,\r\n      ALLOW_NEGATED = 0x04,      \r\n   };\r\n\r\n   Flags m_flags;\r\n```\r\nOr just add more members.",
    "created_at": "2019-07-23T13:32:09Z",
    "updated_at": "2019-07-31T19:00:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r306319234",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306319234"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r306319234"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306319234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 341,
    "side": "RIGHT",
    "in_reply_to_id": 288078111
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308829507",
    "pull_request_review_id": 268527979,
    "id": 308829507,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwODgyOTUwNw==",
    "diff_hunk": "@@ -78,7 +78,7 @@ def test_config_file_parser(self):\n             conf.write('')  # clear\n \n     def test_log_buffer(self):\n-        with self.nodes[0].assert_debug_log(expected_msgs=['Warning: parsed potentially confusing double-negative -connect=0']):\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Warning: parsed potentially confusing double-negative -noconnect=0']):",
    "path": "test/functional/feature_config_args.py",
    "position": null,
    "original_position": 5,
    "commit_id": "e6f649cb2c07bf55d9214c2876619c56f1d6fe30",
    "original_commit_id": "3f0b5e28ebcf42c168f393a3109403354cb8e128",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Revamp option negating policy\" (3f0b5e28ebcf42c168f393a3109403354cb8e128)\r\n\r\nThis commit appears to be changing behavior by fixing the error message so it technically contradicts \"This PR is only a refactoring and does not change behavior\" in the PR description. Could consider removing this here and just doing it as a minor bugfix later. Or updating the PR description to mention the change in behavior.\r\n",
    "created_at": "2019-07-30T16:48:08Z",
    "updated_at": "2019-07-31T19:00:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r308829507",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308829507"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r308829507"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/308829507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 81,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309281546",
    "pull_request_review_id": 269090326,
    "id": 309281546,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTI4MTU0Ng==",
    "diff_hunk": "@@ -78,7 +78,7 @@ def test_config_file_parser(self):\n             conf.write('')  # clear\n \n     def test_log_buffer(self):\n-        with self.nodes[0].assert_debug_log(expected_msgs=['Warning: parsed potentially confusing double-negative -connect=0']):\n+        with self.nodes[0].assert_debug_log(expected_msgs=['Warning: parsed potentially confusing double-negative -noconnect=0']):",
    "path": "test/functional/feature_config_args.py",
    "position": null,
    "original_position": 5,
    "commit_id": "e6f649cb2c07bf55d9214c2876619c56f1d6fe30",
    "original_commit_id": "3f0b5e28ebcf42c168f393a3109403354cb8e128",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Could consider removing this here and just doing it as a minor bugfix later.\r\n\r\nDone. Moved to #16508.",
    "created_at": "2019-07-31T15:19:54Z",
    "updated_at": "2019-07-31T19:00:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r309281546",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309281546"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r309281546"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309281546/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 81,
    "side": "RIGHT",
    "in_reply_to_id": 308829507
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309779496",
    "pull_request_review_id": 269726588,
    "id": 309779496,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTc3OTQ5Ng==",
    "diff_hunk": "@@ -294,17 +293,18 @@ static bool InterpretNegatedOption(std::string& key, std::string& val)\n         ++option_index;\n     }\n     if (key.substr(option_index, 2) == \"no\") {\n-        bool bool_val = InterpretBool(val);\n+        const bool bool_val = InterpretBool(val);\n         key.erase(option_index, 2);\n         if (!bool_val ) {\n             // Double negatives like -nofoo=0 are supported (but discouraged)\n             LogPrintf(\"Warning: parsed potentially confusing double-negative %s=%s\\n\", key, val);",
    "path": "src/util/system.cpp",
    "position": 45,
    "original_position": 38,
    "commit_id": "e6f649cb2c07bf55d9214c2876619c56f1d6fe30",
    "original_commit_id": "e0d187dfeb18b026de22bd7960b2a50c2b958e1a",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(https://github.com/bitcoin/bitcoin/pull/16097/commits/e0d187dfeb18b026de22bd7960b2a50c2b958e1a)\r\n \r\nFWIW, this results in a slightly incorrect error message:\r\n```\r\n$ ./src/bitcoind -datadir=/data/bitcoin -noconnect=0 -logthreadnames\r\n\r\n2019-08-01T16:03:23Z Warning: parsed potentially confusing double-negative -connect=0\r\n```\r\nwhich I think should read \"double-negative -noconnect=0\".",
    "created_at": "2019-08-01T16:08:31Z",
    "updated_at": "2019-08-01T16:13:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r309779496",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309779496"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r309779496"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309779496/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 306,
    "original_line": 300,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309790027",
    "pull_request_review_id": 269740260,
    "id": 309790027,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTc5MDAyNw==",
    "diff_hunk": "@@ -294,17 +293,18 @@ static bool InterpretNegatedOption(std::string& key, std::string& val)\n         ++option_index;\n     }\n     if (key.substr(option_index, 2) == \"no\") {\n-        bool bool_val = InterpretBool(val);\n+        const bool bool_val = InterpretBool(val);\n         key.erase(option_index, 2);\n         if (!bool_val ) {\n             // Double negatives like -nofoo=0 are supported (but discouraged)\n             LogPrintf(\"Warning: parsed potentially confusing double-negative %s=%s\\n\", key, val);",
    "path": "src/util/system.cpp",
    "position": 45,
    "original_position": 38,
    "commit_id": "e6f649cb2c07bf55d9214c2876619c56f1d6fe30",
    "original_commit_id": "e0d187dfeb18b026de22bd7960b2a50c2b958e1a",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> I think should read \"double-negative -noconnect=0\".\r\n\r\nYou are right. This remained untouched to preserve the old behavior and make this PR refactoring only. Details: https://github.com/bitcoin/bitcoin/pull/16097#discussion_r308829507 and https://github.com/bitcoin/bitcoin/pull/16097#discussion_r309281546.\r\n\r\n\r\n",
    "created_at": "2019-08-01T16:33:29Z",
    "updated_at": "2019-08-01T16:33:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r309790027",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309790027"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r309790027"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309790027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 306,
    "original_line": 300,
    "side": "RIGHT",
    "in_reply_to_id": 309779496
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310193132",
    "pull_request_review_id": 270259345,
    "id": 310193132,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDE5MzEzMg==",
    "diff_hunk": "@@ -127,16 +127,31 @@ struct SectionInfo\n \n class ArgsManager\n {\n+public:\n+    enum Flags {",
    "path": "src/util/system.h",
    "position": 5,
    "original_position": 5,
    "commit_id": "e6f649cb2c07bf55d9214c2876619c56f1d6fe30",
    "original_commit_id": "e6f649cb2c07bf55d9214c2876619c56f1d6fe30",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style-nit (for follow-up). Could indicate that this derives from `unsigned`, not `int` (which is the default)",
    "created_at": "2019-08-02T15:51:13Z",
    "updated_at": "2019-08-02T16:17:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r310193132",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310193132"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r310193132"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310193132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 131,
    "original_line": 131,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310196034",
    "pull_request_review_id": 270259345,
    "id": 310196034,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDE5NjAzNA==",
    "diff_hunk": "@@ -127,16 +127,31 @@ struct SectionInfo\n \n class ArgsManager\n {\n+public:\n+    enum Flags {\n+        NONE = 0x00,\n+        // Boolean options can accept negation syntax -noOPTION or -noOPTION=1\n+        ALLOW_BOOL = 0x01,\n+        ALLOW_INT = 0x02,\n+        ALLOW_STRING = 0x04,\n+        ALLOW_ANY = ALLOW_BOOL | ALLOW_INT | ALLOW_STRING,\n+        DEBUG_ONLY = 0x100,\n+        /* Some options would cause cross-contamination if values for\n+         * mainnet were used while running on regtest/testnet (or vice-versa).\n+         * Setting them as NETWORK_ONLY ensures that sharing a config file\n+         * between mainnet and regtest/testnet won't cause problems due to these\n+         * parameters by accident. */\n+        NETWORK_ONLY = 0x200,\n+    };\n+\n protected:\n     friend class ArgsManagerHelper;\n \n     struct Arg\n     {\n         std::string m_help_param;\n         std::string m_help_text;\n-        bool m_debug_only;\n-\n-        Arg(const std::string& help_param, const std::string& help_text, bool debug_only) : m_help_param(help_param), m_help_text(help_text), m_debug_only(debug_only) {};\n+        unsigned int m_flags;",
    "path": "src/util/system.h",
    "position": 31,
    "original_position": 31,
    "commit_id": "e6f649cb2c07bf55d9214c2876619c56f1d6fe30",
    "original_commit_id": "e6f649cb2c07bf55d9214c2876619c56f1d6fe30",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style-nit (for follow-up) could make const, to enforce the constructor sets it and it is never modified afterward.",
    "created_at": "2019-08-02T15:58:38Z",
    "updated_at": "2019-08-02T16:17:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r310196034",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310196034"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16097#discussion_r310196034"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16097"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310196034/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 154,
    "original_line": 154,
    "side": "RIGHT"
  }
]