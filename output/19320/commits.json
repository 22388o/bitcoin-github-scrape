[
  {
    "sha": "fa021e9a5b7e930a3db0febb416942dea3a90a8f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTAyMWU5YTViN2U5MzBhM2RiMGZlYmI0MTY5NDJkZWEzYTkwYThm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-20T12:44:42Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-20T12:41:19Z"
      },
      "message": "wallet: Remove confusing double return value ret+success\n\nAlso, remove redundant comments",
      "tree": {
        "sha": "87be616951b6bbad4ef1edf0ed2d93880f6715d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87be616951b6bbad4ef1edf0ed2d93880f6715d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa021e9a5b7e930a3db0febb416942dea3a90a8f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhuXAwAni/XF+/xumdX6aiSUpiKdebUcI+mIFMQpi3NqrnUzkl97A6FV7TcSD10\n3S2Kj2gLq296TZPm7y9Lqv5NpuKxdEI9+N/fQv7y5vwSTsTfo/jee75BMhheHYkH\noXEPct5MfUsZGr/UwC0O2BPNI2FSafItNN6Jd51M2CO4IYsqiXGIzS+zrIALaRlh\nbtiBuFrfTY5JAvG+ABi0j6n/VBycnDY/Y6PeJRxKaC/vLVAGMTSfmu1KpwsEKags\nKSpS8qqJaxAzhN3Z/7SYgTjkyxohGfETrm3OYwAKdI2ImeT9+q4I/YD5Nmwe6YzR\nivT88hMIp/izxcrDEPHd/5xGAn4wcxYSWUve6q1oT1IhRsy4t2TDWThFG4pQgOcX\nEgX2mSZwaTAdDH7Elt34FxSur7+xc5Kzo77SKQA0/Se512Aq9SC4QEstc+dONJsu\nZH2ohD31tMAEko0+TT/OykdUCSUY6YF4KoCfhjbzaxLTwKWXBV9zBRwMjoQsvLzR\npATbHJ2B\n=8+zz\n-----END PGP SIGNATURE-----",
        "payload": "tree 87be616951b6bbad4ef1edf0ed2d93880f6715d4\nparent d4f9ae00252ba44909a61db0f606be6fddf904c1\nauthor MarcoFalke <falke.marco@gmail.com> 1592657082 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1592656879 -0400\n\nwallet: Remove confusing double return value ret+success\n\nAlso, remove redundant comments\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa021e9a5b7e930a3db0febb416942dea3a90a8f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa021e9a5b7e930a3db0febb416942dea3a90a8f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa021e9a5b7e930a3db0febb416942dea3a90a8f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d4f9ae00252ba44909a61db0f606be6fddf904c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4f9ae00252ba44909a61db0f606be6fddf904c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4f9ae00252ba44909a61db0f606be6fddf904c1"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 6,
      "deletions": 28
    },
    "files": [
      {
        "sha": "a3a56aa51c86867beaa99a6182a914460fe08ac4",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa021e9a5b7e930a3db0febb416942dea3a90a8f/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa021e9a5b7e930a3db0febb416942dea3a90a8f/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=fa021e9a5b7e930a3db0febb416942dea3a90a8f",
        "patch": "@@ -809,10 +809,8 @@ bool BerkeleyBatch::ReadKey(CDataStream& key, CDataStream& value)\n     if (!pdb)\n         return false;\n \n-    // Key\n     SafeDbt datKey(key.data(), key.size());\n \n-    // Read\n     SafeDbt datValue;\n     int ret = pdb->get(activeTxn, datKey, datValue, 0);\n     if (ret == 0 && datValue.get_data() != nullptr) {\n@@ -829,13 +827,10 @@ bool BerkeleyBatch::WriteKey(CDataStream& key, CDataStream& value, bool overwrit\n     if (fReadOnly)\n         assert(!\"Write called on database in read-only mode\");\n \n-    // Key\n     SafeDbt datKey(key.data(), key.size());\n \n-    // Value\n     SafeDbt datValue(value.data(), value.size());\n \n-    // Write\n     int ret = pdb->put(activeTxn, datKey, datValue, (overwrite ? 0 : DB_NOOVERWRITE));\n     return (ret == 0);\n }\n@@ -847,10 +842,8 @@ bool BerkeleyBatch::EraseKey(CDataStream& key)\n     if (fReadOnly)\n         assert(!\"Erase called on database in read-only mode\");\n \n-    // Key\n     SafeDbt datKey(key.data(), key.size());\n \n-    // Erase\n     int ret = pdb->del(activeTxn, datKey, 0);\n     return (ret == 0 || ret == DB_NOTFOUND);\n }\n@@ -860,10 +853,8 @@ bool BerkeleyBatch::HasKey(CDataStream& key)\n     if (!pdb)\n         return false;\n \n-    // Key\n     SafeDbt datKey(key.data(), key.size());\n \n-    // Exists\n     int ret = pdb->exists(activeTxn, datKey, 0);\n     return ret == 0;\n }"
      },
      {
        "sha": "a2eaf9500121373f6b0ee8e48f114eb2fb0099c1",
        "filename": "src/wallet/bdb.h",
        "status": "modified",
        "additions": 6,
        "deletions": 19,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa021e9a5b7e930a3db0febb416942dea3a90a8f/src/wallet/bdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa021e9a5b7e930a3db0febb416942dea3a90a8f/src/wallet/bdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.h?ref=fa021e9a5b7e930a3db0febb416942dea3a90a8f",
        "patch": "@@ -223,64 +223,51 @@ class BerkeleyBatch\n     template <typename K, typename T>\n     bool Read(const K& key, T& value)\n     {\n-        // Key\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(1000);\n         ssKey << key;\n \n         CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n-        bool success = false;\n-        bool ret = ReadKey(ssKey, ssValue);\n-        if (ret) {\n-            // Unserialize value\n-            try {\n-                ssValue >> value;\n-                success = true;\n-            } catch (const std::exception&) {\n-                // In this case success remains 'false'\n-            }\n+        if (!ReadKey(ssKey, ssValue)) return false;\n+        try {\n+            ssValue >> value;\n+            return true;\n+        } catch (const std::exception&) {\n+            return false;\n         }\n-        return ret && success;\n     }\n \n     template <typename K, typename T>\n     bool Write(const K& key, const T& value, bool fOverwrite = true)\n     {\n-        // Key\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(1000);\n         ssKey << key;\n \n-        // Value\n         CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n         ssValue.reserve(10000);\n         ssValue << value;\n \n-        // Write\n         return WriteKey(ssKey, ssValue, fOverwrite);\n     }\n \n     template <typename K>\n     bool Erase(const K& key)\n     {\n-        // Key\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(1000);\n         ssKey << key;\n \n-        // Erase\n         return EraseKey(ssKey);\n     }\n \n     template <typename K>\n     bool Exists(const K& key)\n     {\n-        // Key\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n         ssKey.reserve(1000);\n         ssKey << key;\n \n-        // Exists\n         return HasKey(ssKey);\n     }\n "
      }
    ]
  },
  {
    "sha": "fa8a341b88cabfd7f8d702db7cb9972b0804bf2a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYThhMzQxYjg4Y2FiZmQ3ZjhkNzAyZGI3Y2I5OTcyYjA4MDRiZjJh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-20T12:55:07Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-20T12:42:35Z"
      },
      "message": "wallet: Replace CDataStream& with CDataStream&& where appropriate\n\nThe keys and values are only to be used once because their memory is set\nto zero. Make that explicit by moving the bytes into the lower level\nmethods.",
      "tree": {
        "sha": "d3799d88cba30531c5503b089025ac68126567d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3799d88cba30531c5503b089025ac68126567d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8a341b88cabfd7f8d702db7cb9972b0804bf2a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjG7wwAqG8m1dw8DgeUhmzIIhJQEB1h06+GLaqNDCzbVA/8CLl3emLGFObs3oEX\nrESOEA6O5Th5VOhPmxIAtt5NqF+VEE1gkvUHE0lns78OCkwIkwe+HyvGMMaNfy/r\nsV7gmNRQ1yzhuGsMhplqmIRpqAlP2u0bCeDtU65KFSrZIoXeiRdtgpWtDwmQN3Io\nkFqxMvyg91xQrD1NskLQLlTma0W+KE1ycTnX60eUxy6WN8UEfp0GDh+VA8zWptSf\nnOA+L9NdQwgKn/5rzqpEfCpjh08bJMKelM+NTTtREJR+7uoItdLPy89I1oiQXl4F\ntb15Z1jBFdIRU3zlSTQiXe9Y/BVAKMm0sArkIsIsdJylDa2tUmhzklOhA4sDS1L4\nuyC/IQ4Wqaw/0GD5SfgflOmmf/kAWCVQbYZC8YxFNMb4OGfXLLagu8AsQaPk4Pgm\nsqjgdHz/HFauRj+VBG70kNjE8WMeQKf3udvfB94wrJNSBOMJF4nUBxOdOq1jfbY/\nKfnz6I7m\n=WwDt\n-----END PGP SIGNATURE-----",
        "payload": "tree d3799d88cba30531c5503b089025ac68126567d8\nparent fa021e9a5b7e930a3db0febb416942dea3a90a8f\nauthor MarcoFalke <falke.marco@gmail.com> 1592657707 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1592656955 -0400\n\nwallet: Replace CDataStream& with CDataStream&& where appropriate\n\nThe keys and values are only to be used once because their memory is set\nto zero. Make that explicit by moving the bytes into the lower level\nmethods.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8a341b88cabfd7f8d702db7cb9972b0804bf2a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8a341b88cabfd7f8d702db7cb9972b0804bf2a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8a341b88cabfd7f8d702db7cb9972b0804bf2a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa021e9a5b7e930a3db0febb416942dea3a90a8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa021e9a5b7e930a3db0febb416942dea3a90a8f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa021e9a5b7e930a3db0febb416942dea3a90a8f"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "267b147f38a396c2b8f12dacad0b582356b10cb3",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8a341b88cabfd7f8d702db7cb9972b0804bf2a/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8a341b88cabfd7f8d702db7cb9972b0804bf2a/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=fa8a341b88cabfd7f8d702db7cb9972b0804bf2a",
        "patch": "@@ -804,7 +804,7 @@ std::string BerkeleyDatabaseVersion()\n     return DbEnv::version(nullptr, nullptr, nullptr);\n }\n \n-bool BerkeleyBatch::ReadKey(CDataStream& key, CDataStream& value)\n+bool BerkeleyBatch::ReadKey(CDataStream&& key, CDataStream& value)\n {\n     if (!pdb)\n         return false;\n@@ -820,7 +820,7 @@ bool BerkeleyBatch::ReadKey(CDataStream& key, CDataStream& value)\n     return false;\n }\n \n-bool BerkeleyBatch::WriteKey(CDataStream& key, CDataStream& value, bool overwrite)\n+bool BerkeleyBatch::WriteKey(CDataStream&& key, CDataStream&& value, bool overwrite)\n {\n     if (!pdb)\n         return true;\n@@ -835,7 +835,7 @@ bool BerkeleyBatch::WriteKey(CDataStream& key, CDataStream& value, bool overwrit\n     return (ret == 0);\n }\n \n-bool BerkeleyBatch::EraseKey(CDataStream& key)\n+bool BerkeleyBatch::EraseKey(CDataStream&& key)\n {\n     if (!pdb)\n         return false;\n@@ -848,7 +848,7 @@ bool BerkeleyBatch::EraseKey(CDataStream& key)\n     return (ret == 0 || ret == DB_NOTFOUND);\n }\n \n-bool BerkeleyBatch::HasKey(CDataStream& key)\n+bool BerkeleyBatch::HasKey(CDataStream&& key)\n {\n     if (!pdb)\n         return false;"
      },
      {
        "sha": "91116afd0197736e7e61a28147584eb33e652cff",
        "filename": "src/wallet/bdb.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8a341b88cabfd7f8d702db7cb9972b0804bf2a/src/wallet/bdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8a341b88cabfd7f8d702db7cb9972b0804bf2a/src/wallet/bdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.h?ref=fa8a341b88cabfd7f8d702db7cb9972b0804bf2a",
        "patch": "@@ -189,10 +189,10 @@ class BerkeleyBatch\n     };\n \n private:\n-    bool ReadKey(CDataStream& key, CDataStream& value);\n-    bool WriteKey(CDataStream& key, CDataStream& value, bool overwrite=true);\n-    bool EraseKey(CDataStream& key);\n-    bool HasKey(CDataStream& key);\n+    bool ReadKey(CDataStream&& key, CDataStream& value);\n+    bool WriteKey(CDataStream&& key, CDataStream&& value, bool overwrite = true);\n+    bool EraseKey(CDataStream&& key);\n+    bool HasKey(CDataStream&& key);\n \n protected:\n     Db* pdb;\n@@ -228,7 +228,7 @@ class BerkeleyBatch\n         ssKey << key;\n \n         CDataStream ssValue(SER_DISK, CLIENT_VERSION);\n-        if (!ReadKey(ssKey, ssValue)) return false;\n+        if (!ReadKey(std::move(ssKey), ssValue)) return false;\n         try {\n             ssValue >> value;\n             return true;\n@@ -248,7 +248,7 @@ class BerkeleyBatch\n         ssValue.reserve(10000);\n         ssValue << value;\n \n-        return WriteKey(ssKey, ssValue, fOverwrite);\n+        return WriteKey(std::move(ssKey), std::move(ssValue), fOverwrite);\n     }\n \n     template <typename K>\n@@ -258,7 +258,7 @@ class BerkeleyBatch\n         ssKey.reserve(1000);\n         ssKey << key;\n \n-        return EraseKey(ssKey);\n+        return EraseKey(std::move(ssKey));\n     }\n \n     template <typename K>\n@@ -268,7 +268,7 @@ class BerkeleyBatch\n         ssKey.reserve(1000);\n         ssKey << key;\n \n-        return HasKey(ssKey);\n+        return HasKey(std::move(ssKey));\n     }\n \n     Dbc* GetCursor();"
      }
    ]
  }
]