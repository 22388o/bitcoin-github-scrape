achow101,2020-06-18 21:21:21,ACK fafeffc6b23bea9addc091f69fe72440af185db8,https://github.com/bitcoin/bitcoin/pull/19320#issuecomment-646312000,646312000,
DrahtBot,2020-06-19 02:40:00,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19335 (wallet: Cleanup and separate BerkeleyDatabase and BerkeleyBatch by achow101)\n* #19334 (wallet: Introduce WalletDa",https://github.com/bitcoin/bitcoin/pull/19320#issuecomment-646402809,646402809,
MarcoFalke,2020-06-20 13:38:26,"> leading to bugs if for example an EraseKey call was made after a ReadKey call with the same span, nothing would be erased because the key would be wiped between calls.\n\nFixed by using the double ampersand trick",https://github.com/bitcoin/bitcoin/pull/19320#issuecomment-646995772,646995772,
sipa,2020-07-08 20:54:00,utACK fa8a341b88cabfd7f8d702db7cb9972b0804bf2a,https://github.com/bitcoin/bitcoin/pull/19320#issuecomment-655751495,655751495,
sipa,2020-06-18 15:59:27,These Spans can be const char ones. That also has the advantage of supporting automatic conversion from temporaries.,https://github.com/bitcoin/bitcoin/pull/19320#discussion_r442334691,442334691,src/wallet/bdb.h
MarcoFalke,2020-06-18 16:38:55,"`SafeDbt` is used to assign `0` to the `char`s, which wouldn't work with `const char`",https://github.com/bitcoin/bitcoin/pull/19320#discussion_r442359577,442359577,src/wallet/bdb.h
ryanofsky,2020-06-18 18:06:05,"In commit ""wallet: Replace CDataStream& with Span<char> where possible"" (fafeffc6b23bea9addc091f69fe72440af185db8)\n\nMight be worth mentioning in a comment here that memory_cleanse will be called on all these spans. I didn't realize this was happening, even after your previous comment in https://github.com/bitcoin/bitcoin/pull/19292#discussion_r442239967. You could imagine this leading to bugs ",https://github.com/bitcoin/bitcoin/pull/19320#discussion_r442409491,442409491,src/wallet/bdb.h
MarcoFalke,2020-06-18 20:41:47,"Does it even make sense to wipe the memory of bdb keys (not values)? I'd be surprised if the db-keys itself are encrypted, so I'd rather not add this comment.",https://github.com/bitcoin/bitcoin/pull/19320#discussion_r442490601,442490601,src/wallet/bdb.h
ryanofsky,2020-06-18 21:16:07,"re: https://github.com/bitcoin/bitcoin/pull/19320#discussion_r442490601\n\n> Does it even make sense to wipe the memory of bdb keys (not values)? I'd be surprised if the db-keys itself are encrypted, so I'd rather not add this comment.\n\nNo I think it's bad behavior that could cause bugs like reading and writing and reading then erasing, or calling haskey before readkey all not to work. The p",https://github.com/bitcoin/bitcoin/pull/19320#discussion_r442507185,442507185,src/wallet/bdb.h
