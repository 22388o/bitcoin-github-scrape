jtimon,2015-11-25T00:16:19Z,"After making travis happy (https://travis-ci.org/bitcoin/bitcoin/builds/93038691 thanks to @theuni ) I force push with some squashes, some suggestions (not all yet) collected from @theuni on IRC and one of the commits nacked and deleted (unifying the crypto and consensus packages).\nInterestingly enough, travis thinks that new branch is utterly wrong unless you use mac (see https://travis-ci.org/b",https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-159445646,159445646,
jtimon,2015-11-26T17:54:01Z,"Sorry for abusing travis but I got really paranoid while trying to find the needles (https://github.com/jtimon/bitcoin/compare/consensus-build...jtimon:consensus-build-full).\nI really don't understand why the order of the packages in, for example, bitcoind_LDADD matters at linking time (including the local desperate random over-cleaning mentioned before).\n@sipa said on IRC that it shouldn't matt",https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-159969293,159969293,
sipa,2015-11-28T12:55:18Z,"To clarify: it's my understanding that the problem is that autotools generate both the command-line arguments to the linker, and the emitted rules in the makefile in the same order, based on the order of things in LDADD.\n\nThe order of arguments to the linker does matter (needs to be in order from dependers to dependencies), but for fast-failure behaviour, @jtimon wants them to be build in order ",https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-160292030,160292030,
jtimon,2015-11-28T13:16:41Z,"Yes, @sipa, that's what I would like: that packages are built in the opposite way they have to be listed for linking (ie lowest level things first). I was going to ask something like that in http://github.com/jtimon/bitcoin/commit/4f5cf2655f150c65748989aef97c3b7f6a78f9d7#commitcomment-14660501 but your explanation is more complete.\nIn any case, if that is possible, I think it would probably make ",https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-160295304,160295304,
jtimon,2015-11-28T13:21:01Z,"By the way, the building order discussion is related to https://github.com/bitcoin/bitcoin/pull/5112\n",https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-160295773,160295773,
jtimon,2015-11-29T23:03:44Z,Rebased(1).\n,https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-160479763,160479763,
jtimon,2015-12-01T21:38:18Z,Rebased(2).\n,https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-161103558,161103558,
jtimon,2015-12-03T16:10:19Z,@theuni and I plan to peer program this to also avoid building the objects in the consensus package twice like it's being done now (once for libconsensus and once for the rest). So this will hopefully be replaced with something better. \n,https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-161692942,161692942,
jtimon,2015-12-08T06:09:14Z,Reopened and updated (I had missed the new prevector [which by the way could have been created in the consensus folder directly instead of having to move it later]).\n,https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-162781025,162781025,
devrandom,2015-12-10T17:53:20Z,"ACK\n\nLooks good, and I tested linking with a trivial main function.\n\nShould also separate out the unit tests, but that could be postponed to a follow up PR.  Let me know if you want me to take that on.\n",https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-163701771,163701771,
jtimon,2015-12-10T19:06:11Z,"At some point it would be ideal to separate the tests for the things in the consensus module/package to the consensus directory (just like wallet and qt).\nBut I haven't checked whether those tests have undesirable dependencies yet, and I didn't plan to do any of that on the near future. So, yes, if you want to work on that, I'm happy to review.\n",https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-163719436,163719436,
devrandom,2015-12-10T19:11:58Z,"OK, cool.  I'll wait for this to be merged first.\n",https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-163721771,163721771,
MarcoFalke,2015-12-10T19:36:57Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-163728182,163728182,
theuni,2015-12-16T06:39:06Z,"ut ACK. Objections withdrawn. Lumping everything together is non-ideal, but it's still an improvement. Makes sense as a step forward.\n",https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-165014993,165014993,
jtimon,2016-01-12T16:07:58Z,"@theuni I'm also eager to see it building the modules on the consensus package being built only once instead of once, but I'll leave that in your hands.\nIn the meantime, all the pictures on my promised document for a libconsensus encapsulation plan will make a lot more sense after I rewrite them after this is merged. Otherwise I'll just have to refer to this PR (which I'll do in any case), but it",https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-170959381,170959381,
jtimon,2016-01-28T15:52:26Z,anything holding this?\n,https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-176244831,176244831,
laanwj,2016-02-02T16:27:54Z,"Not really, going to test...\n",https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-178672346,178672346,
laanwj,2016-02-02T17:58:42Z,ACK cf82d05\n,https://github.com/bitcoin/bitcoin/pull/7091#issuecomment-178721691,178721691,
