[
  {
    "sha": "97ddc6026b4e14ee0bb4c5b04a7824ac0a7e23ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5N2RkYzYwMjZiNGUxNGVlMGJiNGM1YjA0YTc4MjRhYzBhN2UyM2Fi",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-09-24T13:00:44Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-09-24T14:03:06Z"
      },
      "message": "validation: Pass chainparams in AcceptToMemoryPoolWorker(...)",
      "tree": {
        "sha": "01b6066129d60953283c4a869d2985a02f16bf70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01b6066129d60953283c4a869d2985a02f16bf70"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97ddc6026b4e14ee0bb4c5b04a7824ac0a7e23ab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97ddc6026b4e14ee0bb4c5b04a7824ac0a7e23ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/97ddc6026b4e14ee0bb4c5b04a7824ac0a7e23ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97ddc6026b4e14ee0bb4c5b04a7824ac0a7e23ab/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "920c090f63f4990bf0f3b3d1a6d3d8a8bcd14ba0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/920c090f63f4990bf0f3b3d1a6d3d8a8bcd14ba0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/920c090f63f4990bf0f3b3d1a6d3d8a8bcd14ba0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "80ae2428dc98865d0d4f20e0c03530f261c5d493",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97ddc6026b4e14ee0bb4c5b04a7824ac0a7e23ab/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97ddc6026b4e14ee0bb4c5b04a7824ac0a7e23ab/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=97ddc6026b4e14ee0bb4c5b04a7824ac0a7e23ab",
        "patch": "@@ -918,7 +918,7 @@ static bool AcceptToMemoryPoolWorker(const CChainParams& chainparams, CTxMemPool\n         // There is a similar check in CreateNewBlock() to prevent creating\n         // invalid blocks (using TestBlockValidity), however allowing such\n         // transactions into the mempool can be exploited as a DoS attack.\n-        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), Params().GetConsensus());\n+        unsigned int currentBlockScriptVerifyFlags = GetBlockScriptFlags(chainActive.Tip(), chainparams.GetConsensus());\n         if (!CheckInputsFromMempoolAndCache(tx, state, view, pool, currentBlockScriptVerifyFlags, true, txdata)) {\n             return error(\"%s: BUG! PLEASE REPORT THIS! CheckInputs failed against latest-block but not STANDARD flags %s, %s\",\n                     __func__, hash.ToString(), FormatStateMessage(state));"
      }
    ]
  }
]