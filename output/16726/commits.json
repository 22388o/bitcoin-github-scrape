[
  {
    "sha": "25dd86715039586d92176eee16e9c6644d2547f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNWRkODY3MTUwMzk1ODZkOTIxNzZlZWUxNmU5YzY2NDRkMjU0N2Yw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-08-25T21:49:49Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-08-26T10:45:25Z"
      },
      "message": "Avoid using mutable default parameter values",
      "tree": {
        "sha": "933ff753d30eee49f9364df1b0daea9f8bff4a2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/933ff753d30eee49f9364df1b0daea9f8bff4a2e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25dd86715039586d92176eee16e9c6644d2547f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25dd86715039586d92176eee16e9c6644d2547f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/25dd86715039586d92176eee16e9c6644d2547f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25dd86715039586d92176eee16e9c6644d2547f0/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e00ecb3d7aaee463643e486ca03c318e192b8058",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e00ecb3d7aaee463643e486ca03c318e192b8058",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e00ecb3d7aaee463643e486ca03c318e192b8058"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "917efaa8335603c5250930fddb188d89726d19aa",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25dd86715039586d92176eee16e9c6644d2547f0/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25dd86715039586d92176eee16e9c6644d2547f0/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=25dd86715039586d92176eee16e9c6644d2547f0",
        "patch": "@@ -803,7 +803,9 @@ def get_siphash_keys(self):\n         return [ key0, key1 ]\n \n     # Version 2 compact blocks use wtxid in shortids (rather than txid)\n-    def initialize_from_block(self, block, nonce=0, prefill_list = [0], use_witness = False):\n+    def initialize_from_block(self, block, nonce=0, prefill_list=None, use_witness=False):\n+        if prefill_list is None:\n+            prefill_list = [0]\n         self.header = CBlockHeader(block)\n         self.nonce = nonce\n         self.prefilled_txn = [ PrefilledTransaction(i, block.vtx[i]) for i in prefill_list ]"
      },
      {
        "sha": "23748e5dd76dc10e7c6a3f060c43864287945384",
        "filename": "test/functional/wallet_importmulti.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25dd86715039586d92176eee16e9c6644d2547f0/test/functional/wallet_importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25dd86715039586d92176eee16e9c6644d2547f0/test/functional/wallet_importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importmulti.py?ref=25dd86715039586d92176eee16e9c6644d2547f0",
        "patch": "@@ -44,8 +44,10 @@ def skip_test_if_missing_module(self):\n     def setup_network(self):\n         self.setup_nodes()\n \n-    def test_importmulti(self, req, success, error_code=None, error_message=None, warnings=[]):\n+    def test_importmulti(self, req, success, error_code=None, error_message=None, warnings=None):\n         \"\"\"Run importmulti and assert success\"\"\"\n+        if warnings is None:\n+            warnings = []\n         result = self.nodes[1].importmulti([req])\n         observed_warnings = []\n         if 'warnings' in result[0]:"
      }
    ]
  },
  {
    "sha": "e4f4ea47ebf7774fb6f445adde7bf7ea71fa05a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNGY0ZWE0N2ViZjc3NzRmYjZmNDQ1YWRkZTdiZjdlYTcxZmEwNWEx",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-08-25T21:49:32Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-08-26T10:53:10Z"
      },
      "message": "lint: Catch use of [] or {} as default parameter values in Python functions",
      "tree": {
        "sha": "d7f2dde1f79ce434a7888dfcff4491ff021d4761",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7f2dde1f79ce434a7888dfcff4491ff021d4761"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4f4ea47ebf7774fb6f445adde7bf7ea71fa05a1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4f4ea47ebf7774fb6f445adde7bf7ea71fa05a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e4f4ea47ebf7774fb6f445adde7bf7ea71fa05a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4f4ea47ebf7774fb6f445adde7bf7ea71fa05a1/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "25dd86715039586d92176eee16e9c6644d2547f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25dd86715039586d92176eee16e9c6644d2547f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/25dd86715039586d92176eee16e9c6644d2547f0"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 52,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1f9f035d304ea47ddf4445e7647bdbacf949b086",
        "filename": "test/lint/lint-python-mutable-default-parameters.sh",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4f4ea47ebf7774fb6f445adde7bf7ea71fa05a1/test/lint/lint-python-mutable-default-parameters.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4f4ea47ebf7774fb6f445adde7bf7ea71fa05a1/test/lint/lint-python-mutable-default-parameters.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-python-mutable-default-parameters.sh?ref=e4f4ea47ebf7774fb6f445adde7bf7ea71fa05a1",
        "patch": "@@ -0,0 +1,52 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Detect when a mutable list or dict is used as a default parameter value in a Python function.\n+\n+export LC_ALL=C\n+EXIT_CODE=0\n+OUTPUT=$(git grep -E '^\\s*def [a-zA-Z0-9_]+\\(.*=\\s*(\\[|\\{)' -- \"*.py\")\n+if [[ ${OUTPUT} != \"\" ]]; then\n+    echo \"A mutable list or dict seems to be used as default parameter value:\"\n+    echo\n+    echo \"${OUTPUT}\"\n+    echo\n+    cat << EXAMPLE\n+This is how mutable list and dict default parameter values behave:\n+\n+>>> def f(i, j=[], k={}):\n+...     j.append(i)\n+...     k[i] = True\n+...     return j, k\n+...\n+>>> f(1)\n+([1], {1: True})\n+>>> f(1)\n+([1, 1], {1: True})\n+>>> f(2)\n+([1, 1, 2], {1: True, 2: True})\n+\n+The intended behaviour was likely:\n+\n+>>> def f(i, j=None, k=None):\n+...     if j is None:\n+...         j = []\n+...     if k is None:\n+...         k = {}\n+...     j.append(i)\n+...     k[i] = True\n+...     return j, k\n+...\n+>>> f(1)\n+([1], {1: True})\n+>>> f(1)\n+([1], {1: True})\n+>>> f(2)\n+([2], {2: True})\n+EXAMPLE\n+    EXIT_CODE=1\n+fi\n+exit ${EXIT_CODE}"
      }
    ]
  }
]