[
  {
    "sha": "6ece1d747eed764f727ef60961ebdac66ab249c7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZWNlMWQ3NDdlZWQ3NjRmNzI3ZWY2MDk2MWViZGFjNjZhYjI0OWM3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-07-07T20:57:42Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-07-07T21:09:14Z"
      },
      "message": "CHashWriter that does SHA256 in-place during serialization",
      "tree": {
        "sha": "4a673f1b81d5e98919fcb8069d3ab949d2d0d757",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a673f1b81d5e98919fcb8069d3ab949d2d0d757"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6ece1d747eed764f727ef60961ebdac66ab249c7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ece1d747eed764f727ef60961ebdac66ab249c7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6ece1d747eed764f727ef60961ebdac66ab249c7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ece1d747eed764f727ef60961ebdac66ab249c7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "abbb9a829c6a381c7df1041ccfd2adebce86eafe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abbb9a829c6a381c7df1041ccfd2adebce86eafe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/abbb9a829c6a381c7df1041ccfd2adebce86eafe"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 42,
      "deletions": 6
    },
    "files": [
      {
        "sha": "7fe204c0dffc7918421c4ca8823077cc2e0018dc",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 42,
        "deletions": 6,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6ece1d747eed764f727ef60961ebdac66ab249c7/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6ece1d747eed764f727ef60961ebdac66ab249c7/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=6ece1d747eed764f727ef60961ebdac66ab249c7",
        "patch": "@@ -391,6 +391,46 @@ inline uint256 Hash(const T1 pbegin, const T1 pend)\n     return hash2;\n }\n \n+class CHashWriter\n+{\n+private:\n+    SHA256_CTX ctx;\n+\n+public:\n+    int nType;\n+    int nVersion;\n+\n+    void Init() {\n+        SHA256_Init(&ctx);\n+    }\n+\n+    CHashWriter(int nTypeIn, int nVersionIn) : nType(nTypeIn), nVersion(nVersionIn) {\n+        Init();\n+    }\n+\n+    CHashWriter& write(const char *pch, size_t size) {\n+        SHA256_Update(&ctx, pch, size);\n+        return (*this);\n+    }\n+\n+    // invalidates the object\n+    uint256 GetHash() {\n+        uint256 hash1;\n+        SHA256_Final((unsigned char*)&hash1, &ctx);\n+        uint256 hash2;\n+        SHA256((unsigned char*)&hash1, sizeof(hash1), (unsigned char*)&hash2);\n+        return hash2;\n+    }\n+\n+    template<typename T>\n+    CHashWriter& operator<<(const T& obj) {\n+        // Serialize to this stream\n+        ::Serialize(*this, obj, nType, nVersion);\n+        return (*this);\n+    }\n+};\n+\n+\n template<typename T1, typename T2>\n inline uint256 Hash(const T1 p1begin, const T1 p1end,\n                     const T2 p2begin, const T2 p2end)\n@@ -428,13 +468,9 @@ inline uint256 Hash(const T1 p1begin, const T1 p1end,\n template<typename T>\n uint256 SerializeHash(const T& obj, int nType=SER_GETHASH, int nVersion=PROTOCOL_VERSION)\n {\n-    // Most of the time is spent allocating and deallocating CDataStream's\n-    // buffer.  If this ever needs to be optimized further, make a CStaticStream\n-    // class with its buffer on the stack.\n-    CDataStream ss(nType, nVersion);\n-    ss.reserve(10000);\n+    CHashWriter ss(nType, nVersion);\n     ss << obj;\n-    return Hash(ss.begin(), ss.end());\n+    return ss.GetHash();\n }\n \n inline uint160 Hash160(const std::vector<unsigned char>& vch)"
      }
    ]
  }
]