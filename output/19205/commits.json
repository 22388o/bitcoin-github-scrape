[
  {
    "sha": "e1e5960e10a9329d9f55a3967d546ffbdd896030",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMWU1OTYwZTEwYTkzMjlkOWY1NWEzOTY3ZDU0NmZmYmRkODk2MDMw",
    "commit": {
      "author": {
        "name": "Brian Liotti",
        "email": "bliotti@protonmail.com",
        "date": "2020-07-04T05:18:41Z"
      },
      "committer": {
        "name": "Brian Liotti",
        "email": "bliotti@protonmail.com",
        "date": "2020-07-05T08:04:52Z"
      },
      "message": "script: Add previous_release.py\n\ncloses #18132\nadded GPG verify for binaries\n\nco-authored-by: bboot <bboot@cisco.com>",
      "tree": {
        "sha": "95a644888290af759eb94fe08b931940215fd12b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95a644888290af759eb94fe08b931940215fd12b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1e5960e10a9329d9f55a3967d546ffbdd896030",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1e5960e10a9329d9f55a3967d546ffbdd896030",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e1e5960e10a9329d9f55a3967d546ffbdd896030",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1e5960e10a9329d9f55a3967d546ffbdd896030/comments",
    "author": {
      "login": "bliotti",
      "id": 29641364,
      "node_id": "MDQ6VXNlcjI5NjQxMzY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29641364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bliotti",
      "html_url": "https://github.com/bliotti",
      "followers_url": "https://api.github.com/users/bliotti/followers",
      "following_url": "https://api.github.com/users/bliotti/following{/other_user}",
      "gists_url": "https://api.github.com/users/bliotti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bliotti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bliotti/subscriptions",
      "organizations_url": "https://api.github.com/users/bliotti/orgs",
      "repos_url": "https://api.github.com/users/bliotti/repos",
      "events_url": "https://api.github.com/users/bliotti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bliotti/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "bliotti",
      "id": 29641364,
      "node_id": "MDQ6VXNlcjI5NjQxMzY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29641364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bliotti",
      "html_url": "https://github.com/bliotti",
      "followers_url": "https://api.github.com/users/bliotti/followers",
      "following_url": "https://api.github.com/users/bliotti/following{/other_user}",
      "gists_url": "https://api.github.com/users/bliotti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bliotti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bliotti/subscriptions",
      "organizations_url": "https://api.github.com/users/bliotti/orgs",
      "repos_url": "https://api.github.com/users/bliotti/repos",
      "events_url": "https://api.github.com/users/bliotti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bliotti/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8783bcc099e9c8e31010ff59260cf4dbac430355",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8783bcc099e9c8e31010ff59260cf4dbac430355",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8783bcc099e9c8e31010ff59260cf4dbac430355"
      }
    ],
    "stats": {
      "total": 222,
      "additions": 222,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bea4f5601059f24699f7962ecce099fd23b2b11d",
        "filename": "contrib/devtools/previous_release.py",
        "status": "added",
        "additions": 222,
        "deletions": 0,
        "changes": 222,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1e5960e10a9329d9f55a3967d546ffbdd896030/contrib/devtools/previous_release.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1e5960e10a9329d9f55a3967d546ffbdd896030/contrib/devtools/previous_release.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/previous_release.py?ref=e1e5960e10a9329d9f55a3967d546ffbdd896030",
        "patch": "@@ -0,0 +1,222 @@\n+#!/usr/bin/env python3\n+#\n+# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Build previous releases.\n+\n+import argparse\n+import contextlib\n+from fnmatch import fnmatch\n+import os\n+from pathlib import Path\n+import re\n+import shutil\n+import subprocess\n+import sys\n+import hashlib\n+\n+\n+@contextlib.contextmanager\n+def pushd(new_dir) -> None:\n+    previous_dir = os.getcwd()\n+    os.chdir(new_dir)\n+    try:\n+        yield\n+    finally:\n+        os.chdir(previous_dir)\n+\n+\n+def download_binary(tag, args) -> int:\n+    if Path(tag).is_dir():\n+        if not args.remove_dir:\n+            print('Using cached {}'.format(tag))\n+            return 0\n+        shutil.rmtree(tag)\n+    Path(tag).mkdir()\n+    bin_path = 'bin/bitcoin-core-{}'.format(tag[1:])\n+    match = re.compile('v(.*)(rc[0-9]+)$').search(tag)\n+    if match:\n+        bin_path = 'bin/bitcoin-core-{}/test.{}'.format(\n+            match.group(1), match.group(2))\n+    tarball = 'bitcoin-{tag}-{platform}.tar.gz'.format(\n+        tag=tag[1:], platform=args.platform)\n+    sha256Sums = \"SHA256SUMS-{tag}.asc\".format(tag=tag[1:])\n+    tarballUrl = 'https://bitcoincore.org/{bin_path}/{tarball}'.format(\n+        bin_path=bin_path, tarball=tarball)\n+    sha256SumsUrl = 'https://bitcoincore.org/{bin_path}/SHA256SUMS.asc'.format(\n+        bin_path=bin_path)\n+\n+    print('Fetching: {tarballUrl}'.format(tarballUrl=tarballUrl))\n+    print('Fetching: {sha256SumsUrl}'.format(sha256SumsUrl=sha256SumsUrl))\n+\n+    header, status = subprocess.Popen(\n+        ['curl', '-I', tarballUrl], stdout=subprocess.PIPE).communicate()\n+    if re.search(\"404 Not Found\", header.decode(\"utf-8\")):\n+        print(\"Binary tag was not found\")\n+        return 1\n+\n+    curlCmds = [\n+        ['curl', '-O', tarballUrl],\n+        ['curl', \"-o\", sha256Sums, sha256SumsUrl],\n+    ]\n+\n+    for cmd in curlCmds:\n+        ret = subprocess.run(cmd).returncode\n+        if ret:\n+            return ret\n+\n+    hasher = hashlib.sha256()\n+    with open(tarball, \"rb\") as afile:\n+        buf = afile.read()\n+        hasher.update(buf)\n+    afile.close()\n+    tarballHash = hasher.hexdigest()\n+    file = open(sha256Sums, 'r', encoding=\"utf-8\")\n+    lst = list(file.readlines())\n+    file.close()\n+    lastline = lst[len(lst)-1]\n+\n+    for line in lst:\n+        if re.search(tarballHash, line):\n+            print(\"Checksum matched\")\n+            break\n+        elif lastline == line:\n+            print(\"Checksum did not match\")\n+            Path(tarball).unlink()\n+            return 1\n+\n+    # Bitcoin Core Release Signing Keys v0.11.0+\n+    signingKey = \"01EA5486DE18A882D4C2684590C8019E36C2E964\"\n+\n+    isKeyPresent = subprocess.run(\n+        [\"gpg\", \"--list-keys\", signingKey]).returncode\n+    if isKeyPresent:\n+        return isKeyPresent\n+\n+    isVerified = subprocess.run(\n+        [\"gpg\", \"--verify\", sha256Sums]).returncode\n+    if isVerified:\n+        return isVerified\n+\n+    # Extract tarball\n+    ret = subprocess.run(['tar', '-zxf', tarball, '-C', tag,\n+                          '--strip-components=1',\n+                          'bitcoin-{tag}'.format(tag=tag[1:])]).returncode\n+    if ret:\n+        return ret\n+\n+    Path(tarball).unlink()\n+    Path(sha256Sums).unlink()\n+    return 0\n+\n+\n+def build_release(tag, args) -> int:\n+    githubUrl = \"https://github.com/bitcoin/bitcoin\"\n+    if args.remove_dir:\n+        if Path(tag).is_dir():\n+            shutil.rmtree(tag)\n+    if not Path(tag).is_dir():\n+        # fetch new tags\n+        subprocess.run(\n+            [\"git\", \"fetch\", githubUrl, \"--tags\"])\n+        output = subprocess.check_output(['git', 'tag', '-l', tag])\n+        if not output:\n+            print('Tag {} not found'.format(tag))\n+            return 1\n+    ret = subprocess.run([\n+        'git', 'clone', githubUrl, tag\n+    ]).returncode\n+    if ret:\n+        return ret\n+    with pushd(tag):\n+        ret = subprocess.run(['git', 'checkout', tag]).returncode\n+        if ret:\n+            return ret\n+        host = args.host\n+        if args.depends:\n+            with pushd('depends'):\n+                ret = subprocess.run(['make', 'NO_QT=1']).returncode\n+                if ret:\n+                    return ret\n+                host = os.environ.get(\n+                    'HOST', subprocess.check_output(['./config.guess']))\n+        config_flags = '--prefix={pwd}/depends/{host} '.format(\n+            pwd=os.getcwd(),\n+            host=host) + args.config_flags\n+        cmds = [\n+            './autogen.sh',\n+            './configure {}'.format(config_flags),\n+            'make',\n+        ]\n+        for cmd in cmds:\n+            ret = subprocess.run(cmd.split()).returncode\n+            if ret:\n+                return ret\n+        # Move binaries, so they're in the same place as in the\n+        # release download\n+        Path('bin').mkdir(exist_ok=True)\n+        files = ['bitcoind', 'bitcoin-cli', 'bitcoin-tx']\n+        for f in files:\n+            Path('src/'+f).rename('bin/'+f)\n+    return 0\n+\n+\n+def check_host(args) -> int:\n+    args.host = os.environ.get('HOST', subprocess.check_output(\n+        './depends/config.guess').decode())\n+    if args.download_binary:\n+        platforms = {\n+            'x86_64-*-linux*': 'x86_64-linux-gnu',\n+            'x86_64-apple-darwin*': 'osx64',\n+        }\n+        args.platform = ''\n+        for pattern, target in platforms.items():\n+            if fnmatch(args.host, pattern):\n+                args.platform = target\n+        if not args.platform:\n+            print('Not sure which binary to download for {}'.format(args.host))\n+            return 1\n+    return 0\n+\n+\n+def main(args) -> int:\n+    if not Path(args.target_dir).is_dir():\n+        Path(args.target_dir).mkdir(exist_ok=True, parents=True)\n+    print(\"Releases directory: {}\".format(args.target_dir))\n+    ret = check_host(args)\n+    if ret:\n+        return ret\n+    if args.download_binary:\n+        with pushd(args.target_dir):\n+            for tag in args.tags:\n+                ret = download_binary(tag, args)\n+                if ret:\n+                    return ret\n+        return 0\n+    args.config_flags = os.environ.get('CONFIG_FLAGS', '')\n+    args.config_flags += ' --without-gui --disable-tests --disable-bench'\n+    with pushd(args.target_dir):\n+        for tag in args.tags:\n+            ret = build_release(tag, args)\n+            if ret:\n+                return ret\n+    return 0\n+\n+\n+if __name__ == '__main__':\n+    parser = argparse.ArgumentParser(\n+        formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n+    parser.add_argument('-r', '--remove-dir', action='store_true',\n+                        help='remove existing directory.')\n+    parser.add_argument('-d', '--depends', action='store_true',\n+                        help='use depends.')\n+    parser.add_argument('-b', '--download-binary', action='store_true',\n+                        help='download release binary.')\n+    parser.add_argument('-t', '--target-dir', action='store',\n+                        help='target directory.', default='releases')\n+    parser.add_argument('tags', nargs='+',\n+                        help=\"release tags. e.g.: v0.18.1 v0.20.0rc2\")\n+    args = parser.parse_args()\n+    sys.exit(main(args))"
      }
    ]
  },
  {
    "sha": "9c34aff39309b8adc99d347e07b6ddb5366498e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YzM0YWZmMzkzMDliOGFkYzk5ZDM0N2UwN2I2ZGRiNTM2NjQ5OGU5",
    "commit": {
      "author": {
        "name": "Brian Liotti",
        "email": "bliotti@protonmail.com",
        "date": "2020-07-04T05:22:58Z"
      },
      "committer": {
        "name": "Brian Liotti",
        "email": "bliotti@protonmail.com",
        "date": "2020-07-05T08:05:02Z"
      },
      "message": "Remove previous_release.sh",
      "tree": {
        "sha": "e3aefc0081aae1c0c1881c1cc20069359b3b10f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3aefc0081aae1c0c1881c1cc20069359b3b10f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c34aff39309b8adc99d347e07b6ddb5366498e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c34aff39309b8adc99d347e07b6ddb5366498e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9c34aff39309b8adc99d347e07b6ddb5366498e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c34aff39309b8adc99d347e07b6ddb5366498e9/comments",
    "author": {
      "login": "bliotti",
      "id": 29641364,
      "node_id": "MDQ6VXNlcjI5NjQxMzY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29641364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bliotti",
      "html_url": "https://github.com/bliotti",
      "followers_url": "https://api.github.com/users/bliotti/followers",
      "following_url": "https://api.github.com/users/bliotti/following{/other_user}",
      "gists_url": "https://api.github.com/users/bliotti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bliotti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bliotti/subscriptions",
      "organizations_url": "https://api.github.com/users/bliotti/orgs",
      "repos_url": "https://api.github.com/users/bliotti/repos",
      "events_url": "https://api.github.com/users/bliotti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bliotti/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "bliotti",
      "id": 29641364,
      "node_id": "MDQ6VXNlcjI5NjQxMzY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29641364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bliotti",
      "html_url": "https://github.com/bliotti",
      "followers_url": "https://api.github.com/users/bliotti/followers",
      "following_url": "https://api.github.com/users/bliotti/following{/other_user}",
      "gists_url": "https://api.github.com/users/bliotti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bliotti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bliotti/subscriptions",
      "organizations_url": "https://api.github.com/users/bliotti/orgs",
      "repos_url": "https://api.github.com/users/bliotti/repos",
      "events_url": "https://api.github.com/users/bliotti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bliotti/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e1e5960e10a9329d9f55a3967d546ffbdd896030",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1e5960e10a9329d9f55a3967d546ffbdd896030",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e1e5960e10a9329d9f55a3967d546ffbdd896030"
      }
    ],
    "stats": {
      "total": 160,
      "additions": 4,
      "deletions": 156
    },
    "files": [
      {
        "sha": "131ea21677dc982a91fee59d0f76696f93c1c452",
        "filename": "ci/test/05_before_script.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c34aff39309b8adc99d347e07b6ddb5366498e9/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c34aff39309b8adc99d347e07b6ddb5366498e9/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=9c34aff39309b8adc99d347e07b6ddb5366498e9",
        "patch": "@@ -48,6 +48,6 @@ if [ -z \"$NO_DEPENDS\" ]; then\n fi\n if [ -n \"$PREVIOUS_RELEASES_TO_DOWNLOAD\" ]; then\n   BEGIN_FOLD previous-versions\n-  DOCKER_EXEC contrib/devtools/previous_release.sh -b -t \"$PREVIOUS_RELEASES_DIR\" \"${PREVIOUS_RELEASES_TO_DOWNLOAD}\"\n+  DOCKER_EXEC contrib/devtools/previous_release.py -b -t \"$PREVIOUS_RELEASES_DIR\" \"${PREVIOUS_RELEASES_TO_DOWNLOAD}\"\n   END_FOLD\n fi"
      },
      {
        "sha": "d375291f47de4ec86c00ef2b40c13bf2e560a948",
        "filename": "contrib/devtools/previous_release.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 152,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1e5960e10a9329d9f55a3967d546ffbdd896030/contrib/devtools/previous_release.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1e5960e10a9329d9f55a3967d546ffbdd896030/contrib/devtools/previous_release.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/previous_release.sh?ref=e1e5960e10a9329d9f55a3967d546ffbdd896030",
        "patch": "@@ -1,152 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Build previous releases.\n-\n-export LC_ALL=C\n-\n-CONFIG_FLAGS=\"\"\n-FUNCTIONAL_TESTS=0\n-DELETE_EXISTING=0\n-USE_DEPENDS=0\n-DOWNLOAD_BINARY=0\n-CONFIG_FLAGS=\"\"\n-TARGET=\"releases\"\n-\n-while getopts \":hfrdbt:\" opt; do\n-  case $opt in\n-    h)\n-      echo \"Usage: .previous_release.sh [options] tag1 tag2\"\n-      echo \"  options:\"\n-      echo \"  -h   Print this message\"\n-      echo \"  -f   Configure for functional tests\"\n-      echo \"  -r   Remove existing directory\"\n-      echo \"  -d   Use depends\"\n-      echo \"  -b   Download release binary\"\n-      echo \"  -t   Target directory (default: releases)\"\n-      exit 0\n-      ;;\n-    f)\n-      FUNCTIONAL_TESTS=1\n-      CONFIG_FLAGS=\"$CONFIG_FLAGS --without-gui --disable-tests --disable-bench\"\n-      ;;\n-    r)\n-      DELETE_EXISTING=1\n-      ;;\n-    d)\n-      USE_DEPENDS=1\n-      ;;\n-    b)\n-      DOWNLOAD_BINARY=1\n-      ;;\n-    t)\n-      TARGET=$OPTARG\n-      ;;\n-    \\?)\n-      echo \"Invalid option: -$OPTARG\" >&2\n-      exit 1\n-      ;;\n-  esac\n-done\n-\n-shift $((OPTIND-1))\n-\n-if [ -z \"$1\" ]; then\n-  echo \"Specify release tag(s), e.g.: .previous_release v0.15.1\"\n-  exit 1\n-fi\n-\n-if [ ! -d \"$TARGET\" ]; then\n-  mkdir -p $TARGET\n-fi\n-\n-if [ \"$DOWNLOAD_BINARY\" -eq \"1\" ]; then\n-  HOST=\"${HOST:-$(./depends/config.guess)}\"\n-  case \"$HOST\" in\n-    x86_64-*-linux*)\n-      PLATFORM=x86_64-linux-gnu\n-      ;;\n-    x86_64-apple-darwin*)\n-      PLATFORM=osx64\n-      ;;\n-    *)\n-      echo \"Not sure which binary to download for $HOST.\"\n-      exit 1\n-      ;;\n-  esac\n-fi\n-\n-echo \"Releases directory: $TARGET\"\n-pushd \"$TARGET\" || exit 1\n-{\n-  for tag in \"$@\"\n-  do\n-    if [ \"$DELETE_EXISTING\" -eq \"1\" ]; then\n-      if [ -d \"$tag\" ]; then\n-        rm -r \"$tag\"\n-      fi\n-    fi\n-\n-    if [ \"$DOWNLOAD_BINARY\" -eq \"0\" ]; then\n-\n-      if [ ! -d \"$tag\" ]; then\n-        if [ -z $(git tag -l \"$tag\") ]; then\n-          echo \"Tag $tag not found\"\n-          exit 1\n-        fi\n-\n-        git clone https://github.com/bitcoin/bitcoin \"$tag\"\n-        pushd \"$tag\" || exit 1\n-        {\n-          git checkout \"$tag\"\n-          if [ \"$USE_DEPENDS\" -eq \"1\" ]; then\n-            pushd depends || exit 1\n-            {\n-              if [ \"$FUNCTIONAL_TESTS\" -eq \"1\" ]; then\n-                make NO_QT=1\n-              else\n-                make\n-              fi\n-              HOST=\"${HOST:-$(./config.guess)}\"\n-            }\n-            popd || exit 1\n-            CONFIG_FLAGS=\"--prefix=$PWD/depends/$HOST $CONFIG_FLAGS\"\n-          fi\n-          ./autogen.sh\n-          ./configure $CONFIG_FLAGS\n-          make\n-          # Move binaries, so they're in the same place as in the release download:\n-          mkdir bin\n-          mv src/bitcoind src/bitcoin-cli src/bitcoin-tx bin\n-          if [ \"$FUNCTIONAL_TESTS\" -eq \"0\" ]; then\n-            mv src/qt/bitcoin-qt bin\n-          fi\n-        }\n-        popd || exit 1\n-      fi\n-    else\n-      if [ -d \"$tag\" ]; then\n-        echo \"Using cached $tag\"\n-      else\n-        mkdir \"$tag\"\n-        if [[ \"$tag\" =~ v(.*)(rc[0-9]+)$ ]]; then\n-            BIN_PATH=\"bin/bitcoin-core-${BASH_REMATCH[1]}/test.${BASH_REMATCH[2]}\"\n-        else\n-            BIN_PATH=\"bin/bitcoin-core-${tag:1}\"\n-        fi\n-        URL=\"https://bitcoincore.org/$BIN_PATH/bitcoin-${tag:1}-$PLATFORM.tar.gz\"\n-        echo \"Fetching: $URL\"\n-        if ! curl -O -f $URL; then\n-            echo \"Download failed.\"\n-            exit 1\n-        fi\n-        tar -zxf \"bitcoin-${tag:1}-$PLATFORM.tar.gz\" -C \"$tag\" --strip-components=1 \"bitcoin-${tag:1}\"\n-        rm \"bitcoin-${tag:1}-$PLATFORM.tar.gz\"\n-      fi\n-    fi\n-  done\n-}\n-popd || exit 1"
      },
      {
        "sha": "07dd0f8f82c34b4a52c80db380d0542edb7c3ac0",
        "filename": "test/functional/feature_backwards_compatibility.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c34aff39309b8adc99d347e07b6ddb5366498e9/test/functional/feature_backwards_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c34aff39309b8adc99d347e07b6ddb5366498e9/test/functional/feature_backwards_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_backwards_compatibility.py?ref=9c34aff39309b8adc99d347e07b6ddb5366498e9",
        "patch": "@@ -6,7 +6,7 @@\n \n Test various backwards compatibility scenarios. Download the previous node binaries:\n \n-contrib/devtools/previous_release.sh -b v0.19.1 v0.18.1 v0.17.1 v0.16.3 v0.15.2\n+contrib/devtools/previous_release.py -b v0.19.1 v0.18.1 v0.17.1 v0.16.3 v0.15.2\n \n v0.15.2 is not required by this test, but it is used in wallet_upgradewallet.py.\n Due to a hardfork in regtest, it can't be used to sync nodes."
      },
      {
        "sha": "31fb7519048bc3e2a6c95eae1b36a4a894901b1f",
        "filename": "test/functional/mempool_compatibility.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c34aff39309b8adc99d347e07b6ddb5366498e9/test/functional/mempool_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c34aff39309b8adc99d347e07b6ddb5366498e9/test/functional/mempool_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_compatibility.py?ref=9c34aff39309b8adc99d347e07b6ddb5366498e9",
        "patch": "@@ -8,7 +8,7 @@\n In case we need to break mempool compatibility we can continue to use the test by just bumping the version number.\n \n Download node binaries:\n-contrib/devtools/previous_release.sh -b v0.19.1 v0.18.1 v0.17.1 v0.16.3 v0.15.2\n+contrib/devtools/previous_release.py -b v0.19.1 v0.18.1 v0.17.1 v0.16.3 v0.15.2\n \n Only v0.15.2 is required by this test. The rest is used in other backwards compatibility tests.\n \"\"\""
      },
      {
        "sha": "1a76f65215b4d15923880584acb05317012493cf",
        "filename": "test/functional/wallet_upgradewallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9c34aff39309b8adc99d347e07b6ddb5366498e9/test/functional/wallet_upgradewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9c34aff39309b8adc99d347e07b6ddb5366498e9/test/functional/wallet_upgradewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_upgradewallet.py?ref=9c34aff39309b8adc99d347e07b6ddb5366498e9",
        "patch": "@@ -6,7 +6,7 @@\n \n Test upgradewallet RPC. Download node binaries:\n \n-contrib/devtools/previous_release.sh -b v0.19.1 v0.18.1 v0.17.1 v0.16.3 v0.15.2\n+contrib/devtools/previous_release.py -b v0.19.1 v0.18.1 v0.17.1 v0.16.3 v0.15.2\n \n Only v0.15.2 and v0.16.3 are required by this test. The others are used in feature_backwards_compatibility.py\n \"\"\""
      }
    ]
  }
]