jnewbery,2019-08-24 18:10:02,Alternative to #16704 ,https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-524570344,524570344,
DrahtBot,2019-08-24 19:35:27,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-524575372,524575372,
jnewbery,2019-09-05 17:58:39,I've updated this PR to take @ajtowns branch that changes the height at which we start looking for unknown softforks.,https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-528502793,528502793,
MarcoFalke,2019-09-05 18:11:24,"ACK fdb3e8f8b2\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK fdb3e8f8b2\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgH2gwAz7j3RTqo2rmSToD74d8gNagy+RG2uMcdAL+WwhEuk7u3N/KiNp7iO/Qd\nzuxEIeAWbjLrUA7jKHTGqDWjrjef1+dlhAZB8pocYIrM0cluJZgYnaC",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-528507861,528507861,
ajtowns,2019-09-05 20:39:45,ACK fdb3e8f8b27e3b0b2f88c32915975c6e4c299b1e for what it's worth,https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-528572432,528572432,
achow101,2019-09-05 21:43:09,"ACK fdb3e8f8b27e3b0b2f88c32915975c6e4c299b1e\n\nCode looks good to me. Also tested that the warning is longer being shown.",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-528601281,528601281,
sdaftuar,2019-09-10 13:26:18,"Conceptually, shouldn't a minimum warning height be chain dependent? Not just mainnet vs testnet vs regtest, but also which mainnet chain you're on?",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-529933757,529933757,
MarcoFalke,2019-09-10 13:54:59,"@sdaftuar Why would that be? A reorg that changes the block at `consensus.SegwitHeight` is going to split the network, so I think not displaying a warning is a minor (or non-)issue. I think the pull request could be more clear and explain that in a comment maybe?",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-529946446,529946446,
sdaftuar,2019-09-10 14:04:15,"Well, a node doing IBD and being fed an alternate/bogus chain should probably sound as many alarms as it can...  But my concern here is that we're changing utility code (in `WarningBitsConditionChecker`) that, at least in my mental mapping of our codebase, should be unaware of holistic reasoning around consensus issues like this. \n\nIf others disagree with my assessment, then maybe this approac",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-529950690,529950690,
ajtowns,2019-09-11 03:44:14,"> Well, a node doing IBD and being fed an alternate/bogus chain should probably sound as many alarms as it can...\n\nWe could add a warning if our chain doesn't contain `defaultAssumeValid` which would catch this? Or that it doesn't contain the `-assumevalid` block if that block is non-zero (which would be easier to write tests for).\n\n> But my concern here is that we're changing utility code",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-530206925,530206925,
sdaftuar,2019-09-18 12:43:52,"I think I'm a -0 on this; imo this makes the code a bit harder to reason about, rather than easier to reason about, but I can also see why others disagree.",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-532666970,532666970,
MarcoFalke,2019-09-18 19:14:48,"This has 2-4 ACKS (unsure how to count), is consistent with the concept of burying, and is easier to review than previous attempts at fixing the 0.19 regression. I think this is good to go in as is, but I am also happy to chat about in in the IRC meeting this week",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-532826715,532826715,
ajtowns,2019-09-20 07:55:18,"> I think I'm a -0 on this; imo this makes the code a bit harder to reason about,\n\nOnly other simple approach I can see would be to move the holistic info directly into ComputeBlockVersion -- maybe have it return 0x2fff_ffff (signal all the version bits) if it's asked for a version for blocks before the threshold height? Alternatively could do this now and clean it up more in 0.20 -- there's o",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-533450544,533450544,
jonatack,2019-09-20 11:30:24,"Threw some LogPrintfs into WarningBitsConditionChecker as a sanity check for the values it sees.\n\n```cpp\n    bool Condition(const CBlockIndex* pindex, const Consensus::Params& params) const override\n    {\n        LogPrintf(""SegwitHeight %s\n"", params.SegwitHeight);\n        LogPrintf(""nMinerConfirmationWindow %s\n"", params.nMinerConfirmationWindow);\n        LogPrintf(""MinBIPWarningHei",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-533516173,533516173,
sdaftuar,2019-09-20 16:23:51,"> Alternatively could do this now and clean it up more in 0.20 -- there's other versionbits cleanups I'd like to do fwiw.\n\nSure, that sounds fine to me.",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-533621698,533621698,
jnewbery,2019-09-21 00:39:20,"> could do this now and clean it up more in 0.20 -- there's other versionbits cleanups I'd like to do fwiw.\n\nThanks @ajtowns . Let me know when you have a PR.",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-533752665,533752665,
Sjors,2019-09-27 19:18:36,ACK fdb3e8f8b27e3b0b2f88c32915975c6e4c299b1e. It makes the bit 0 warning go away in mainnet and testnet QT when a new block arrives. I think the code is clear enough.,https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-536065804,536065804,
Sjors,2019-09-27 19:39:16,I should add that testnet does still warn about bit 28 being activated; not sure what that's about.,https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-536071473,536071473,
MarcoFalke,2019-09-27 19:44:50,@Sjors segwit activated on testnet3 about 3 years ago. I guess you are correctly seeing the crap that testnet miners did in the last 3 years.,https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-536072965,536072965,
practicalswift,2019-11-12 09:54:01,"Reviewers of this PR might want to take a look at #17449 (""fix uninitialized variable nMinerConfirmationWindow"") :)",https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-552819356,552819356,
jnewbery,2019-11-14 15:20:54,Thanks for posting here @practicalswift . I agree that anyone who reviewed this should take a look at #17449.,https://github.com/bitcoin/bitcoin/pull/16713#issuecomment-553934955,553934955,
MarcoFalke,2019-09-05 17:54:56,"This started in march, no?",https://github.com/bitcoin/bitcoin/pull/16713#discussion_r321401494,321401494,src/chainparams.cpp
