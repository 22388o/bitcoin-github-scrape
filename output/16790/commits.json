[
  {
    "sha": "78de3574aa07488f0f44be6e7633b3063047e521",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGRlMzU3NGFhMDc0ODhmMGY0NGJlNmU3NjMzYjMwNjMwNDdlNTIx",
    "commit": {
      "author": {
        "name": "Michael Polzer",
        "email": "hashrate@pm-tech.at",
        "date": "2019-09-02T17:03:33Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2019-09-02T17:03:33Z"
      },
      "message": "break loop early on undefined version bits\n\nAddresses #16697 as a light alternative to #16704 \r\n\r\nThis will set all states to DEFINED instead of STARTED and there for skip counting blocks and computing down.",
      "tree": {
        "sha": "6062197cabc5472184d21d50f7c3925d2d2d6db3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6062197cabc5472184d21d50f7c3925d2d2d6db3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78de3574aa07488f0f44be6e7633b3063047e521",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdbUtlCRBK7hj4Ov3rIwAAdHIIAJcXpgpOwcJjQbVPS4WPkbBI\ns7Fw56WomyIRIzhXkhsbhGBNZBWOhjqhB/F1VXwcWgb2S8A8phQCYWoZBxarJ6Tp\nhWCJjWYEQfP50YPwpkgS/3b9IAn6+6WhaEKD6q27eLjOyEsPHZZ6lyh6HIDZIncw\nRGZXEvsiRtfHavT0f+VG7DYHESCO2af31H5dSTLeznSkLJWNmgVG1J5FYSClyiIJ\nCVvJW+fx21PxoVGWxzcJDhUsFijspyjd8VJK+jSWgNeXLrFgOT2yONQSvoyouZLN\nZ3e3+MaHoN7/B+Tr5UhGA33bS9n39G27c5sX+WI5b91HdvGzPqy5gVBIwgPzRLQ=\n=QQ5h\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 6062197cabc5472184d21d50f7c3925d2d2d6db3\nparent 33f9750b1b86a705d092b0e1314ed15287c45239\nauthor Michael Polzer <hashrate@pm-tech.at> 1567443813 +0200\ncommitter GitHub <noreply@github.com> 1567443813 +0200\n\nbreak loop early on undefined version bits\n\nAddresses #16697 as a light alternative to #16704 \r\n\r\nThis will set all states to DEFINED instead of STARTED and there for skip counting blocks and computing down."
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78de3574aa07488f0f44be6e7633b3063047e521",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78de3574aa07488f0f44be6e7633b3063047e521",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78de3574aa07488f0f44be6e7633b3063047e521/comments",
    "author": {
      "login": "HashUnlimited",
      "id": 26601261,
      "node_id": "MDQ6VXNlcjI2NjAxMjYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HashUnlimited",
      "html_url": "https://github.com/HashUnlimited",
      "followers_url": "https://api.github.com/users/HashUnlimited/followers",
      "following_url": "https://api.github.com/users/HashUnlimited/following{/other_user}",
      "gists_url": "https://api.github.com/users/HashUnlimited/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HashUnlimited/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
      "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
      "repos_url": "https://api.github.com/users/HashUnlimited/repos",
      "events_url": "https://api.github.com/users/HashUnlimited/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33f9750b1b86a705d092b0e1314ed15287c45239",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33f9750b1b86a705d092b0e1314ed15287c45239",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33f9750b1b86a705d092b0e1314ed15287c45239"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f9e2e1a91b27838ee41c304c28871e1c066a58cc",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78de3574aa07488f0f44be6e7633b3063047e521/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78de3574aa07488f0f44be6e7633b3063047e521/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=78de3574aa07488f0f44be6e7633b3063047e521",
        "patch": "@@ -1618,7 +1618,7 @@ class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n public:\n     explicit WarningBitsConditionChecker(int bitIn) : bit(bitIn) {}\n \n-    int64_t BeginTime(const Consensus::Params& params) const override { return 0; }\n+    int64_t BeginTime(const Consensus::Params& params) const override { return std::numeric_limits<int64_t>::max(); }\n     int64_t EndTime(const Consensus::Params& params) const override { return std::numeric_limits<int64_t>::max(); }\n     int Period(const Consensus::Params& params) const override { return params.nMinerConfirmationWindow; }\n     int Threshold(const Consensus::Params& params) const override { return params.nRuleChangeActivationThreshold; }"
      }
    ]
  }
]