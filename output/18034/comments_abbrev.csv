DrahtBot,2020-01-31 03:58:53,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18163 (descriptors: Use xpub at last hardened step if possible by achow101)\n* #16710 (build: Enable -Wsuggest-override i",https://github.com/bitcoin/bitcoin/pull/18034#issuecomment-580570750,580570750,
promag,2020-02-03 08:04:52,Do you have a use case for these?,https://github.com/bitcoin/bitcoin/pull/18034#issuecomment-581285777,581285777,
achow101,2020-02-10 17:33:37,"> I don't like the use of `ExtractDestination` though. Let's just determine the output type from the descriptor itself similar to #15590. That also avoids the next problem:\n> \n> > For simplicity, `ScriptHash` destinations are `LEGACY` even though they could be `P2SH_SEGWIT`\n\nThese only apply to `addr()` and `raw()` descriptors. The rest where all solving information is available do the cor",https://github.com/bitcoin/bitcoin/pull/18034#issuecomment-584240297,584240297,
fjahr,2020-02-19 00:00:39,"ACK 7e80f646b24a2abf3c031a649bcc706a695f80da\n\nReviewed code, built and ran tests locally.",https://github.com/bitcoin/bitcoin/pull/18034#issuecomment-587965235,587965235,
Sjors,2020-02-20 20:03:06,@instagibbs I suppose the alternative is to treat  `addr()` and `raw()` descriptors as `null`. It's probably a bad idea to import these things.,https://github.com/bitcoin/bitcoin/pull/18034#issuecomment-589282061,589282061,
meshcollider,2020-02-21 10:15:57,"utACK 7e80f646b24a2abf3c031a649bcc706a695f80da \n\nI guess the same kind of complaint *could* apply here too, that the descriptor implementation shouldn't really be the thing worrying about how the destinations are encoded. But that's okay. I assume there is a use-case, even though promag's question was never responded to? I still don't really see the point of this, could you just quickly explai",https://github.com/bitcoin/bitcoin/pull/18034#issuecomment-589589919,589589919,
Sjors,2020-02-21 10:30:44,@meshcollider I also use this to determine how to import descriptors obtained with HWI: https://github.com/Sjors/bitcoin/blob/2020/02/external_signer_scriptpubkeyman/src/wallet/wallet.cpp#L4460-L4474 (rebase WIP of #16546  which previously used #15590),https://github.com/bitcoin/bitcoin/pull/18034#issuecomment-589595436,589595436,
achow101,2020-02-21 16:15:51,"@meshcollider The use case is that in #16528, we need to be able to determine the `OutputType` for a descriptor so that we can assign it the correct slot in `m_external_spk_managers`/`m_internal_spk_managers`. The point is that we can tell what kind of address it will produce and automatically make it so that doing `getnewaddress` will give the correct address type from the correct descriptor.\n",https://github.com/bitcoin/bitcoin/pull/18034#issuecomment-589722749,589722749,
instagibbs,2020-02-21 16:48:31,cursory ACK https://github.com/bitcoin/bitcoin/pull/18034/commits/7e80f646b24a2abf3c031a649bcc706a695f80da,https://github.com/bitcoin/bitcoin/pull/18034#issuecomment-589737129,589737129,
promag,2020-02-05 14:58:51,"nit, add space after `switch`, same below.",https://github.com/bitcoin/bitcoin/pull/18034#discussion_r375306095,375306095,src/script/descriptor.cpp
promag,2020-02-05 15:00:16,Assert result?,https://github.com/bitcoin/bitcoin/pull/18034#discussion_r375306991,375306991,src/script/descriptor.cpp
promag,2020-02-05 15:00:35,nit sort.,https://github.com/bitcoin/bitcoin/pull/18034#discussion_r375307197,375307197,src/script/descriptor.h
Sjors,2020-02-10 13:22:08,Please use / comment `PKHash` (etc) here for readability.,https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377057852,377057852,src/script/descriptor.cpp
achow101,2020-02-10 17:32:42,Done,https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377209765,377209765,src/script/descriptor.cpp
achow101,2020-02-10 17:32:46,Done,https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377209794,377209794,src/script/descriptor.cpp
achow101,2020-02-10 17:32:49,Done,https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377209815,377209815,src/script/descriptor.h
achow101,2020-02-10 17:32:53,Done,https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377209834,377209834,src/script/descriptor.cpp
Sjors,2020-02-10 18:13:42,"I don't mind, but why are you making `m_name` public?",https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377230848,377230848,src/script/descriptor.cpp
Sjors,2020-02-10 18:17:29,"This seems a bit aggressive, maybe return `nullopt` is `ExtractDestination` fails?",https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377232751,377232751,src/script/descriptor.cpp
achow101,2020-02-10 18:25:26,"It doesn't. The default visibility is private.\n\nYou should really see this change as moving `m_subdescriptor_arg` into the `protected` area rather than moving `m_mame`.",https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377236601,377236601,src/script/descriptor.cpp
Sjors,2020-02-10 18:41:03,"Oops, I misread that move. That makes sense.",https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377244557,377244557,src/script/descriptor.cpp
achow101,2020-02-10 19:18:17,"Reverted the change. There's no need to check the result of `ExtractDestination` because it is directly implied by the resulting `CTxDestination`. If it fails, that will be `CNoDestination`.",https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377263993,377263993,src/script/descriptor.cpp
achow101,2020-02-10 19:19:13,"Actually reverted that. It is possible, and perhaps expected, that we get a script which causes `ExtractDestination` to fail. Such a script would be a `CNoDestination`.",https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377264437,377264437,src/script/descriptor.cpp
Sjors,2020-02-11 10:31:07,"However there's a warning:\n```\nscript/descriptor.cpp:368:176: warning: field 'm_subdescriptor_arg' will be initialized after field 'm_name' [-Wreorder]\n    DescriptorImpl(std::vector<std::unique_ptr<PubkeyProvider>> pubkeys, std::unique_ptr<DescriptorImpl> script, const std::string& name) : m_pubkey_args(std::move(pubkeys)), m_subdescriptor_arg(std::move(script)), m_name(name) {}\n```",https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377551457,377551457,src/script/descriptor.cpp
achow101,2020-02-11 18:28:42,That should be fixed now.,https://github.com/bitcoin/bitcoin/pull/18034#discussion_r377817334,377817334,src/script/descriptor.cpp
instagibbs,2020-02-20 19:34:59,"motivation for having ScriptHash be ""LEGACY"" which I think means p2pkh in most contexts?",https://github.com/bitcoin/bitcoin/pull/18034#discussion_r382213848,382213848,src/script/descriptor.cpp
achow101,2020-02-21 06:54:47,"What else would it be?\n\nI would consider just a P2SH scriptPubKey to be legacy if I had no information about the redeemScript.",https://github.com/bitcoin/bitcoin/pull/18034#discussion_r382422630,382422630,src/script/descriptor.cpp
instagibbs,2020-02-21 16:47:37,"ahhhh this is `addr()`, ignore this.",https://github.com/bitcoin/bitcoin/pull/18034#discussion_r382689472,382689472,src/script/descriptor.cpp
