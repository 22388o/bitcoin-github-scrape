[
  {
    "sha": "29aa77d9ed113c4c425b6c081be663e38b0d4897",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOWFhNzdkOWVkMTEzYzRjNDI1YjZjMDgxYmU2NjNlMzhiMGQ0ODk3",
    "commit": {
      "author": {
        "name": "MapleLaker",
        "email": "31602441+MapleLaker@users.noreply.github.com",
        "date": "2018-08-31T23:50:13Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-08-31T23:50:13Z"
      },
      "message": "Add testcase to simulate bitcoin schema in leveldb",
      "tree": {
        "sha": "008685661cfbf1ed5040aafb795b693ff21d9b7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/008685661cfbf1ed5040aafb795b693ff21d9b7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29aa77d9ed113c4c425b6c081be663e38b0d4897",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbidQ1CRBK7hj4Ov3rIwAAdHIIABGH+3BZUF+IsGbjq0IwLu9O\n41FmqW5by1Qnikif1ZNe6QOrRdANMQwVahQ2Vhdr2Mdzqj0Mg9UmeBCbtxCrmIIQ\nuIbZq/IeRwBay4GKnfwCStT+fkgE/M4C+V4scR9PkhGgH9eT+B9OnxB/tGeEvLG2\nWUmaHh2eG6/Bw06Eb46a5yv5W17zSwya4oxRVqVfiGy6P5c6x0wVRsscFZF2ywRO\nAIKgZMpM87P+kFxkMQ/GLWnx8J7USoZbypobQkRySHEjnwSXXJ2mpHnZeJz7EMjF\nBnaIQsfrZsCxmwq8fsniw1uKcJx95S7GdDSnG5R56DZfGTL8RnXvzArGtQdEocI=\n=X8Ln\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 008685661cfbf1ed5040aafb795b693ff21d9b7a\nparent 07ce278455757fb46dab95fb9b97a3f6b1b84faf\nauthor MapleLaker <31602441+MapleLaker@users.noreply.github.com> 1535759413 +0800\ncommitter GitHub <noreply@github.com> 1535759413 +0800\n\nAdd testcase to simulate bitcoin schema in leveldb"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29aa77d9ed113c4c425b6c081be663e38b0d4897",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/29aa77d9ed113c4c425b6c081be663e38b0d4897",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29aa77d9ed113c4c425b6c081be663e38b0d4897/comments",
    "author": {
      "login": "MapleLaker",
      "id": 31602441,
      "node_id": "MDQ6VXNlcjMxNjAyNDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/31602441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MapleLaker",
      "html_url": "https://github.com/MapleLaker",
      "followers_url": "https://api.github.com/users/MapleLaker/followers",
      "following_url": "https://api.github.com/users/MapleLaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/MapleLaker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MapleLaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MapleLaker/subscriptions",
      "organizations_url": "https://api.github.com/users/MapleLaker/orgs",
      "repos_url": "https://api.github.com/users/MapleLaker/repos",
      "events_url": "https://api.github.com/users/MapleLaker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MapleLaker/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07ce278455757fb46dab95fb9b97a3f6b1b84faf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07ce278455757fb46dab95fb9b97a3f6b1b84faf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07ce278455757fb46dab95fb9b97a3f6b1b84faf"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 54,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cf1c40c218853880ca8bbc30fbed30329e41d84d",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29aa77d9ed113c4c425b6c081be663e38b0d4897/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29aa77d9ed113c4c425b6c081be663e38b0d4897/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=29aa77d9ed113c4c425b6c081be663e38b0d4897",
        "patch": "@@ -42,6 +42,60 @@ BOOST_AUTO_TEST_CASE(dbwrapper)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(dbwrapper_basic_data)\n+{\n+    // Perform tests both obfuscated and non-obfuscated.\n+    for (bool obfuscate : {false, true}) {\n+        fs::path ph = SetDataDir(std::string(\"dbwrapper_1\").append(obfuscate ? \"_true\" : \"_false\"));\n+        //CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n+        CDBWrapper dbw(ph, (1 << 20), false, true, obfuscate);\n+\n+        uint256 res;\n+        // Ensure that we're doing real obfuscation when obfuscate=true\n+        BOOST_CHECK(obfuscate != is_null_key(dbwrapper_private::GetObfuscateKey(dbw)));\n+ \n+        //Simulate block raw data - \"b + block hash\"\n+        std::string block_tag = \"b\";\n+        uint256 block_hash = InsecureRand256();\n+        std::string key_block = block_tag + block_hash.ToString();\n+\n+        uint256 in_block = InsecureRand256();\n+        BOOST_CHECK(dbw.Write(key_block, in_block));\n+        BOOST_CHECK(dbw.Read(key_block, res));\n+        BOOST_CHECK_EQUAL(res.ToString(), in_block.ToString());    \n+\n+        //Simulate file raw data - \"f + file_number\"\n+        std::string file_tag = \"f\";\n+        uint32_t file_number = InsecureRand32();\n+        std::string key_file = strprintf(\"%s%04x\", file_tag,file_number);\n+\n+        uint256 in_file_info = InsecureRand256();\n+        BOOST_CHECK(dbw.Write(key_file, in_file_info));\n+        BOOST_CHECK(dbw.Read(key_file, res));\n+        BOOST_CHECK_EQUAL(res.ToString(), in_file_info.ToString());\n+\n+        //Simulate transaction raw data - \"t + transaction hash\"\n+        std::string transaction_tag = \"t\";\n+        uint256 transaction_hash = InsecureRand256();\n+        std::string key_transaction = transaction_tag + transaction_hash.ToString();\n+\n+        uint256 in_transaction = InsecureRand256();\n+        BOOST_CHECK(dbw.Write(key_transaction, in_transaction));\n+        BOOST_CHECK(dbw.Read(key_transaction, res));\n+        BOOST_CHECK_EQUAL(res.ToString(), in_transaction.ToString());      \n+\n+        //Simulate UTXO raw data - \"c + transaction hash\"\n+        std::string utxo_tag = \"c\";\n+        uint256 utxo_hash = InsecureRand256();\n+        std::string key_utxo = utxo_tag + utxo_hash.ToString();\n+\n+        uint256 in_utxo = InsecureRand256();\n+        BOOST_CHECK(dbw.Write(key_utxo, in_utxo));\n+        BOOST_CHECK(dbw.Read(key_utxo, res));\n+        BOOST_CHECK_EQUAL(res.ToString(), in_utxo.ToString()); \n+   }\n+}\n+\n // Test batch operations\n BOOST_AUTO_TEST_CASE(dbwrapper_batch)\n {"
      }
    ]
  },
  {
    "sha": "9fa2ec8d9542db314eff396a16a3b39acdb70114",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmEyZWM4ZDk1NDJkYjMxNGVmZjM5NmExNmEzYjM5YWNkYjcwMTE0",
    "commit": {
      "author": {
        "name": "MapleLaker",
        "email": "31602441+MapleLaker@users.noreply.github.com",
        "date": "2018-09-01T00:42:03Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2018-09-01T00:42:03Z"
      },
      "message": "Update dbwrapper_tests.cpp\n\nModify test case of bitcoin schema leveldb",
      "tree": {
        "sha": "be5ee5d2275d1f74cc7eef4685ad5d640159b860",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be5ee5d2275d1f74cc7eef4685ad5d640159b860"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fa2ec8d9542db314eff396a16a3b39acdb70114",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbieBbCRBK7hj4Ov3rIwAAdHIIAJ+mrjlzD+8XQFwmWoobtxbx\ne0iOkd/313mxcQzSk57jpT6OYn6gEV987irCcPXBW9xjwc7KhOgzY3oIHLCHjYNE\nNzOiRhvKFQQQnrNHfQbVUM580YrE2nEq8AsgTV3Zo1808J7NTVmXIHQErsAIqCxn\nITlNWNEg5KoZKiE8aEPctZtBUk7+8I5AZbg116tvbf07eIPuGD66xKOZJiyV+Qas\ndiF0qtMNzfoeYl6hYGbEQ/bcaf0D7z/uv0w+cI+i9SFa7jO1RcQ/bLoF3Gi71ef+\n40ftRd1r1dyDqS6vxT7914CTMzhl8oziBoqRYi5avp+ai4MLG+5ZMK5wOUTKOJY=\n=WIZC\n-----END PGP SIGNATURE-----\n",
        "payload": "tree be5ee5d2275d1f74cc7eef4685ad5d640159b860\nparent 29aa77d9ed113c4c425b6c081be663e38b0d4897\nauthor MapleLaker <31602441+MapleLaker@users.noreply.github.com> 1535762523 +0800\ncommitter GitHub <noreply@github.com> 1535762523 +0800\n\nUpdate dbwrapper_tests.cpp\n\nModify test case of bitcoin schema leveldb"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fa2ec8d9542db314eff396a16a3b39acdb70114",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fa2ec8d9542db314eff396a16a3b39acdb70114",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fa2ec8d9542db314eff396a16a3b39acdb70114/comments",
    "author": {
      "login": "MapleLaker",
      "id": 31602441,
      "node_id": "MDQ6VXNlcjMxNjAyNDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/31602441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MapleLaker",
      "html_url": "https://github.com/MapleLaker",
      "followers_url": "https://api.github.com/users/MapleLaker/followers",
      "following_url": "https://api.github.com/users/MapleLaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/MapleLaker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MapleLaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MapleLaker/subscriptions",
      "organizations_url": "https://api.github.com/users/MapleLaker/orgs",
      "repos_url": "https://api.github.com/users/MapleLaker/repos",
      "events_url": "https://api.github.com/users/MapleLaker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MapleLaker/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29aa77d9ed113c4c425b6c081be663e38b0d4897",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29aa77d9ed113c4c425b6c081be663e38b0d4897",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29aa77d9ed113c4c425b6c081be663e38b0d4897"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 35,
      "deletions": 0
    },
    "files": [
      {
        "sha": "509c827100c61b21cde8809d19746f284bc73712",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fa2ec8d9542db314eff396a16a3b39acdb70114/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fa2ec8d9542db314eff396a16a3b39acdb70114/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=9fa2ec8d9542db314eff396a16a3b39acdb70114",
        "patch": "@@ -51,6 +51,9 @@ BOOST_AUTO_TEST_CASE(dbwrapper_basic_data)\n         CDBWrapper dbw(ph, (1 << 20), false, true, obfuscate);\n \n         uint256 res;\n+        uint32_t res_uint_32;\n+        bool res_bool;\n+\n         // Ensure that we're doing real obfuscation when obfuscate=true\n         BOOST_CHECK(obfuscate != is_null_key(dbwrapper_private::GetObfuscateKey(dbw)));\n  \n@@ -93,6 +96,38 @@ BOOST_AUTO_TEST_CASE(dbwrapper_basic_data)\n         BOOST_CHECK(dbw.Write(key_utxo, in_utxo));\n         BOOST_CHECK(dbw.Read(key_utxo, res));\n         BOOST_CHECK_EQUAL(res.ToString(), in_utxo.ToString()); \n+\n+        //Simulate last block file number - \"l\"\n+        char key_last_blockfile_number = 'l';\n+        uint32_t lastblockfilenumber = InsecureRand32();\n+        BOOST_CHECK(dbw.Write(key_last_blockfile_number, lastblockfilenumber));\n+        BOOST_CHECK(dbw.Read(key_last_blockfile_number, res_uint_32));\n+        BOOST_CHECK_EQUAL(lastblockfilenumber, res_uint_32);  \n+\n+        //Simulate Is Reindexing - \"R\"\n+        char key_IsReindexing = 'R';\n+        bool isInReindexing = InsecureRandBool();\n+        BOOST_CHECK(dbw.Write(key_IsReindexing, isInReindexing));\n+        BOOST_CHECK(dbw.Read(key_IsReindexing, res_bool));\n+        BOOST_CHECK_EQUAL(isInReindexing, res_bool);   \n+\n+        //Simulate last block hash up to which UXTO covers - 'B'\n+        char key_lastblockhash_uxto = 'B';\n+        uint256 lastblock_hash = InsecureRand256();\n+        BOOST_CHECK(dbw.Write(key_lastblockhash_uxto, lastblock_hash));\n+        BOOST_CHECK(dbw.Read(key_lastblockhash_uxto, res));\n+        BOOST_CHECK_EQUAL(lastblock_hash, res); \n+\n+        //Simulate file raw data - \"F + filename_number + filename\"\n+        std::string file_option_tag = \"F\";\n+        uint8_t filename_length = InsecureRandBits(8);\n+        std::string filename = \"randomfilename\";\n+        std::string key_file_option = strprintf(\"%s%01x%s\", file_option_tag,filename_length,filename);\n+\n+        bool in_file_bool = InsecureRandBool();\n+        BOOST_CHECK(dbw.Write(key_file_option, in_file_bool));\n+        BOOST_CHECK(dbw.Read(key_file_option, res_bool));\n+        BOOST_CHECK_EQUAL(res_bool, in_file_bool);                      \n    }\n }\n "
      }
    ]
  }
]