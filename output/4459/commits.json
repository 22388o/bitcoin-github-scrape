[
  {
    "sha": "509030344c66d2a2e27e50a690c43d577e5b943b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDkwMzAzNDRjNjZkMmEyZTI3ZTUwYTY5MGM0M2Q1NzdlNWI5NDNi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-07-03T05:31:50Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-07-07T07:57:37Z"
      },
      "message": "qt: Pick translation messages only from necessary files\n\nUtility libraries (common, util) as well as extra tools shouldn't be\nparsed for translation messages, only the server and wallet part qualify\nhere.",
      "tree": {
        "sha": "09b7f6001c7cf640b6cd73416a96801f812e952e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/09b7f6001c7cf640b6cd73416a96801f812e952e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/509030344c66d2a2e27e50a690c43d577e5b943b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/509030344c66d2a2e27e50a690c43d577e5b943b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/509030344c66d2a2e27e50a690c43d577e5b943b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/509030344c66d2a2e27e50a690c43d577e5b943b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ed2315e86621cf547fbc3649fcbe39c793a7eb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ed2315e86621cf547fbc3649fcbe39c793a7eb3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ed2315e86621cf547fbc3649fcbe39c793a7eb3"
      }
    ],
    "stats": {
      "total": 83,
      "additions": 46,
      "deletions": 37
    },
    "files": [
      {
        "sha": "d4bd58513884cca3409ddbce15cdb3c381490bfb",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/509030344c66d2a2e27e50a690c43d577e5b943b/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/509030344c66d2a2e27e50a690c43d577e5b943b/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=509030344c66d2a2e27e50a690c43d577e5b943b",
        "patch": "@@ -7,8 +7,9 @@\n import glob\n import operator\n import os\n+import sys\n \n-OUT_CPP=\"src/qt/bitcoinstrings.cpp\"\n+OUT_CPP=\"qt/bitcoinstrings.cpp\"\n EMPTY=['\"\"']\n \n def parse_po(text):\n@@ -47,7 +48,7 @@ def parse_po(text):\n \n     return messages\n \n-files = glob.glob('src/*.cpp') + glob.glob('src/*.h') \n+files = sys.argv[1:]\n \n # xgettext -n --keyword=_ $FILES\n XGETTEXT=os.getenv('XGETTEXT', 'xgettext')"
      },
      {
        "sha": "f2b6c2ccd672fcb92ddeb236fd31e3302efa4986",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/509030344c66d2a2e27e50a690c43d577e5b943b/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/509030344c66d2a2e27e50a690c43d577e5b943b/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=509030344c66d2a2e27e50a690c43d577e5b943b",
        "patch": "@@ -367,9 +367,9 @@ QT_QM=$(QT_TS:.ts=.qm)\n \n .SECONDARY: $(QT_QM)\n \n-qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_cli_a_SOURCES) $(libbitcoin_util_a_SOURCES)\n+qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES)\n \t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n-\t$(AM_V_GEN) cd $(top_srcdir); XGETTEXT=$(XGETTEXT) share/qt/extract_strings_qt.py\n+\t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) ../share/qt/extract_strings_qt.py $^\n \n translate: qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\""
      },
      {
        "sha": "b71754670863aa44cc08ba14aca7dd6f6c9aead8",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 33,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/509030344c66d2a2e27e50a690c43d577e5b943b/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/509030344c66d2a2e27e50a690c43d577e5b943b/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=509030344c66d2a2e27e50a690c43d577e5b943b",
        "patch": "@@ -22,31 +22,42 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"It is also recommended to set alertnotify so you are notified of problems;\\n\"\n \"for example: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\" admin@foo.com\\n\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"(default: 1, 1 = keep tx meta data e.g. account owner and payment request \"\n+\"information, 2 = drop tx meta data)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Acceptable ciphers (default: TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!\"\n \"3DES:@STRENGTH)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"An error occurred while setting up the RPC port %u for listening on IPv4: %s\"),\n+\"Allow JSON-RPC connections from specified source. Valid for <ip> are a \"\n+\"single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or \"\n+\"a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"An error occurred while setting up the RPC port %u for listening on IPv6, \"\n-\"falling back to IPv4: %s\"),\n+\"An error occurred while setting up the RPC address %s port %u for listening: \"\n+\"%s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Bind to given address and always listen on it. Use [host]:port notation for \"\n \"IPv6\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Bind to given address to listen for JSON-RPC connections. Use [host]:port \"\n+\"notation for IPv6. This option can be specified multiple times (default: \"\n+\"bind to all interfaces)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already \"\n \"running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Continuously rate-limit free transactions to <n>*1000 bytes per minute \"\n \"(default:15)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Enter regression test mode, which uses a special chain in which blocks can \"\n-\"be solved instantly. This is intended for regression testing tools and app \"\n-\"development.\"),\n+\"Delete all wallet transactions and only recover those part of the blockchain \"\n+\"through -rescan on startup\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Distributed under the MIT/X11 software license, see the accompanying file \"\n+\"COPYING or <http://www.opensource.org/licenses/mit-license.php>.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Enter regression test mode, which uses a special chain in which blocks can \"\n \"be solved instantly.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Error: Listening for incoming connections failed (listen returned error %d)\"),\n+\"Error: Listening for incoming connections failed (listen returned error %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Error: The transaction was rejected! This might happen if some of the coins \"\n \"in your wallet were already spent, such as if you used a copy of wallet.dat \"\n@@ -55,6 +66,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Error: This transaction requires a transaction fee of at least %s because of \"\n \"its amount, complexity, or use of recently received funds!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Execute command when a network tx respends wallet tx input (%s=respend TxID, \"\n+\"%t=wallet TxID)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Execute command when a relevant alert is received or we see a really long \"\n \"fork (%s in cmd is replaced by message)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -64,8 +78,11 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Execute command when the best block changes (%s in cmd is replaced by block \"\n \"hash)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Fees smaller than this are considered zero fee (for transaction creation) \"\n-\"(default:\"),\n+\"Fees (in BTC/Kb) smaller than this are considered zero fee for relaying \"\n+\"(default: %s)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Fees (in BTC/Kb) smaller than this are considered zero fee for transaction \"\n+\"creation (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Flush database activity from memory pool to disk log every <n> megabytes \"\n \"(default: 100)\"),\n@@ -93,6 +110,10 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"This is a pre-release test build - use at your own risk - do not use for \"\n \"mining or merchant applications\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"This product includes software developed by the OpenSSL Project for use in \"\n+\"the OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software \"\n+\"written by Eric Young and UPnP software written by Thomas Bernard.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Unable to bind to %s on this computer. Bitcoin Core is probably already \"\n \"running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -117,34 +138,26 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: wallet.dat corrupt, data salvaged! Original wallet.dat saved as \"\n \"wallet.{timestamp}.bak in %s; if your balance or transactions are incorrect \"\n \"you should restore from a backup.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"You must set rpcpassword=<password> in the configuration file:\\n\"\n-\"%s\\n\"\n-\"If the file does not exist, create it with owner-readable-only file \"\n-\"permissions.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(default: wallet.dat)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"<category> can be:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept command line and JSON-RPC commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept connections from outside (default: 1 if no -proxy or -connect)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Add a node to connect to and attempt to keep the connection open\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow DNS lookups for -addnode, -seednode and -connect\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Allow JSON-RPC connections from specified IP address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Attempt to recover private keys from a corrupt wallet.dat\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin Core Daemon\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Bitcoin Core RPC client version\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Block creation options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot downgrade wallet\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -bind address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -externalip address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot write default address\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Clear list of wallet transactions (diagnostic tool; implies -rescan)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect only to the specified node(s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect through SOCKS proxy\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to JSON-RPC on <port> (default: 8332 or testnet: 18332)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connect to a node to retrieve peer addresses, and disconnect\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Connection options:\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Copyright (C) 2009-%i The Bitcoin Core Developers\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Corrupted block database detected\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Could not parse -rpcbind value %s as network address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Debugging/Testing options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Disable safemode, override a real safe mode event (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Discover own IP address (default: 1 when listening and no -externalip)\"),\n@@ -160,6 +173,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet.dat: Wallet requires new\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error opening block database\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Disk space is low!\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Unsupported argument -tor found, use -onion.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Wallet locked, unable to create transaction!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: system error: \"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to listen on any port. Use -listen=0 if you want this.\"),\n@@ -173,27 +187,26 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write file info\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write to coin database\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write transaction index\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to write undo data\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee per kB to add to transactions you send\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fees smaller than this are considered zero fee (for relaying) (default:\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee (in BTC/kB) to add to transactions you send (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Find peers using DNS lookup (default: 1 unless -connect)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Force safe mode (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Generate coins (default: 0)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Get help for a command\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How many blocks to check at startup (default: 288, 0 = all)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"If <category> is not supplied, output all debugging information.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Importing...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Imports blocks from external blk000??.dat file\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Incorrect or no genesis block found. Wrong datadir for network?\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Information\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Initialization sanity check failed. Bitcoin Core is shutting down.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Insufficient funds\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid -onion address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid -proxy address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -minrelaytxfee=<amount>: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -mintxfee=<amount>: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Keep at most <n> unconnectable blocks in memory (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Limit size of signature cache to <n> entries (default: 50000)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"List commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Listen for connections on <port> (default: 8333 or testnet: 18333)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading addresses...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading block index...\"),\n@@ -203,6 +216,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maintain a full transaction index (default: 0\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maintain at most <n> connections to peers (default: 125)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Node relay options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Not enough file descriptors available.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only accept block chain matching built-in checkpoints (default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\"),\n@@ -212,19 +226,16 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prepend debug output with timestamp (default:\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Print block on startup, if found in block index\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Print block tree on startup (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC client options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC server options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Randomly drop 1 of every <n> network messages\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Randomly fuzz 1 of every <n> network messages\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rebuild block chain index from current blk000??.dat files\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Relay and mine data carrier transactions (default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescan the block chain for missing wallet transactions\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescanning...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run a thread to flush wallet periodically (default: 1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run in the background as a daemon and accept commands\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Select SOCKS version for -proxy (4 or 5, default: 5)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send command to Bitcoin Core\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send commands to node running on <ip> (default: 127.0.0.1)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Send trace/debug info to console instead of debug.log file\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server certificate file (default: server.cert)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Server private key (default: server.pem)\"),\n@@ -245,29 +256,27 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify pid file (default: bitcoind.pid)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify wallet file (within data directory)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Specify your own public address\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Spend unconfirmed change when sending transactions (default: 1)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Start Bitcoin Core Daemon\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Stop running after importing blocks from disk (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"System error: \"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This help message\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This is experimental software.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"This is intended for regression testing tools and app development.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Threshold for disconnecting misbehaving peers (default: 100)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"To use the %s option\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction amount too small\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction amounts must be positive\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction too large\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to bind to %s on this computer (bind returned error %d, %s)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to bind to %s on this computer (bind returned error %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown -socks proxy version requested: %i\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown network specified in -onlynet: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Upgrade wallet to latest format\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Usage (deprecated, use bitcoin-cli):\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Usage:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use OpenSSL (https) for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use UPnP to map the listening port (default: 1 when listening)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Use the test network\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Username for JSON-RPC connections\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying blocks...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying wallet...\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wait for RPC server to start\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet %s resides outside data directory %s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart Bitcoin to complete\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet options:\"),\n@@ -277,6 +286,5 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: This version is obsolete, upgrade re\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"You need to rebuild the database using -reindex to change -txindex\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Zapping all transactions from wallet...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"on startup\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"version\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"wallet.dat corrupt, salvage failed\"),\n };"
      }
    ]
  },
  {
    "sha": "73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3M2FjN2FiZDA4YTcwYWRmMjJlMjRkMGY1Zjc2MzFlN2Y4YjdjNWJi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-07-03T05:45:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-07-07T07:58:56Z"
      },
      "message": "Move ui_interface to bitcoin_server.a\n\nThere is no need for it in the utility libraries or tools.\nPut it in init.cpp, and in the tests separately (as they can't link init).",
      "tree": {
        "sha": "0561a092614fbfd68b29bc415b44b3d1cbe5fff6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0561a092614fbfd68b29bc415b44b3d1cbe5fff6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "509030344c66d2a2e27e50a690c43d577e5b943b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/509030344c66d2a2e27e50a690c43d577e5b943b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/509030344c66d2a2e27e50a690c43d577e5b943b"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 9,
      "deletions": 4
    },
    "files": [
      {
        "sha": "016b2f50f5bdefeac2be055a8d8bc96fc93d49de",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb",
        "patch": "@@ -7,11 +7,12 @@\n #include \"init.h\"\n #include \"rpcclient.h\"\n #include \"rpcprotocol.h\"\n-#include \"ui_interface.h\" /* for _(...) */\n #include \"chainparamsbase.h\"\n \n #include <boost/filesystem/operations.hpp>\n \n+#define _(x) std::string(x) /* Keep the _() around in case gettext or such will be used later to translate non-UI */\n+\n using namespace std;\n using namespace boost;\n using namespace boost::asio;"
      },
      {
        "sha": "dcb71c4206cb13f60ff9070bfe2e90768932db6d",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb",
        "patch": "@@ -62,6 +62,7 @@ enum BindFlags {\n };\n \n static const char* FEE_ESTIMATES_FILENAME=\"fee_estimates.dat\";\n+CClientUIInterface uiInterface;\n \n //////////////////////////////////////////////////////////////////////////////\n //"
      },
      {
        "sha": "e852c468a88db5bf3c5d68d817db7bb969488427",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb",
        "patch": "@@ -89,6 +89,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"How thorough the block verification of -checkblocks is (0-4, default: 3)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"If paytxfee is not set, include enough fee so transactions are confirmed on \"\n+\"average within n blocks (default: 1)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"In this mode -genproclimit controls how many blocks are generated \"\n \"immediately.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -195,6 +198,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"How many blocks to check at startup (default:\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"If <category> is not supplied, output all debugging information.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Importing...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Imports blocks from external blk000??.dat file\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Include IP addresses in debug output (default: 0)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Incorrect or no genesis block found. Wrong datadir for network?\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Information\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Initialization sanity check failed. Bitcoin Core is shutting down.\"),\n@@ -203,6 +207,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid -onion address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid -proxy address: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -minrelaytxfee=<amount>: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -mintxfee=<amount>: '%s'\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s' (must be at least %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Keep at most <n> unconnectable blocks in memory (default: %u)\"),"
      },
      {
        "sha": "bcd2f75f553cef7ca66658651cb77d873ce4ea28",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb",
        "patch": "@@ -18,7 +18,7 @@\n #include <boost/filesystem.hpp>\n #include <boost/test/unit_test.hpp>\n \n-\n+CClientUIInterface uiInterface;\n CWallet* pwalletMain;\n \n extern bool fPrintToConsole;"
      },
      {
        "sha": "9adbbdec481b5bc34b9fa6b99b6b23d5cca2bf71",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb",
        "patch": "@@ -7,7 +7,6 @@\n \n #include \"chainparamsbase.h\"\n #include \"sync.h\"\n-#include \"ui_interface.h\"\n #include \"uint256.h\"\n #include \"version.h\"\n \n@@ -97,7 +96,6 @@ string strMiscWarning;\n bool fLogTimestamps = false;\n bool fLogIPs = false;\n volatile bool fReopenDebugLog = false;\n-CClientUIInterface uiInterface;\n \n // Init OpenSSL library multithreading support\n static CCriticalSection** ppmutexOpenSSL;"
      }
    ]
  }
]