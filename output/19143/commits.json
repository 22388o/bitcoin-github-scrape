[
  {
    "sha": "9dbcd6854ca05a9bd1e9a5e1222dac1758048231",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZGJjZDY4NTRjYTA1YTliZDFlOWE1ZTEyMjJkYWMxNzU4MDQ4MjMx",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T18:58:21Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "message": "tests: Add FuzzedFileProvider which provides a FILE* interface to FuzzedDataProvider using fopencookie",
      "tree": {
        "sha": "7bafc63b2e7a6e10e4a416a1509bc86a71dc35d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7bafc63b2e7a6e10e4a416a1509bc86a71dc35d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9dbcd6854ca05a9bd1e9a5e1222dac1758048231",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9dbcd6854ca05a9bd1e9a5e1222dac1758048231",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9dbcd6854ca05a9bd1e9a5e1222dac1758048231",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9dbcd6854ca05a9bd1e9a5e1222dac1758048231/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42fe6aad326f62c7e6ea12ee873149257f67ce5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42fe6aad326f62c7e6ea12ee873149257f67ce5d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42fe6aad326f62c7e6ea12ee873149257f67ce5d"
      }
    ],
    "stats": {
      "total": 119,
      "additions": 119,
      "deletions": 0
    },
    "files": [
      {
        "sha": "dffef13cc9597676d35ba052c3ac9e1888ec4edc",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9dbcd6854ca05a9bd1e9a5e1222dac1758048231/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9dbcd6854ca05a9bd1e9a5e1222dac1758048231/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=9dbcd6854ca05a9bd1e9a5e1222dac1758048231",
        "patch": "@@ -27,6 +27,7 @@\n \n #include <algorithm>\n #include <cstdint>\n+#include <cstdio>\n #include <optional>\n #include <string>\n #include <vector>\n@@ -264,4 +265,122 @@ void InitializeFuzzingContext(const std::string& chain_name = CBaseChainParams::\n     static const BasicTestingSetup basic_testing_setup{chain_name, {\"-nodebuglogfile\"}};\n }\n \n+class FuzzedFileProvider\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+    int64_t m_offset = 0;\n+\n+public:\n+    FuzzedFileProvider(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    FILE* open()\n+    {\n+        if (m_fuzzed_data_provider.ConsumeBool()) {\n+            return nullptr;\n+        }\n+        std::string mode;\n+        switch (m_fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            mode = \"r\";\n+            break;\n+        }\n+        case 1: {\n+            mode = \"r+\";\n+            break;\n+        }\n+        case 2: {\n+            mode = \"w\";\n+            break;\n+        }\n+        case 3: {\n+            mode = \"w+\";\n+            break;\n+        }\n+        case 4: {\n+            mode = \"a\";\n+            break;\n+        }\n+        case 5: {\n+            mode = \"a+\";\n+            break;\n+        }\n+        }\n+#ifdef _GNU_SOURCE\n+        const cookie_io_functions_t io_hooks = {\n+            FuzzedFileProvider::read,\n+            FuzzedFileProvider::write,\n+            FuzzedFileProvider::seek,\n+            FuzzedFileProvider::close,\n+        };\n+        return fopencookie(this, mode.c_str(), io_hooks);\n+#else\n+        (void)mode;\n+        return nullptr;\n+#endif\n+    }\n+\n+    static ssize_t read(void* cookie, char* buf, size_t size)\n+    {\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        if (buf == nullptr || size == 0 || fuzzed_file->m_fuzzed_data_provider.ConsumeBool()) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        const std::vector<uint8_t> random_bytes = fuzzed_file->m_fuzzed_data_provider.ConsumeBytes<uint8_t>(size);\n+        if (random_bytes.empty()) {\n+            return 0;\n+        }\n+        std::memcpy(buf, random_bytes.data(), random_bytes.size());\n+        if (AdditionOverflow((uint64_t)fuzzed_file->m_offset, random_bytes.size())) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        fuzzed_file->m_offset += random_bytes.size();\n+        return random_bytes.size();\n+    }\n+\n+    static ssize_t write(void* cookie, const char* buf, size_t size)\n+    {\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        const ssize_t n = fuzzed_file->m_fuzzed_data_provider.ConsumeIntegralInRange<ssize_t>(0, size);\n+        if (AdditionOverflow(fuzzed_file->m_offset, n)) {\n+            return fuzzed_file->m_fuzzed_data_provider.ConsumeBool() ? 0 : -1;\n+        }\n+        fuzzed_file->m_offset += n;\n+        return n;\n+    }\n+\n+    static int seek(void* cookie, int64_t* offset, int whence)\n+    {\n+        assert(whence == SEEK_SET || whence == SEEK_CUR); // SEEK_END not implemented yet.\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        int64_t new_offset = 0;\n+        if (whence == SEEK_SET) {\n+            new_offset = *offset;\n+        } else if (whence == SEEK_CUR) {\n+            if (AdditionOverflow(fuzzed_file->m_offset, *offset)) {\n+                return -1;\n+            }\n+            new_offset = fuzzed_file->m_offset + *offset;\n+        }\n+        if (new_offset < 0) {\n+            return -1;\n+        }\n+        fuzzed_file->m_offset = new_offset;\n+        *offset = new_offset;\n+        return fuzzed_file->m_fuzzed_data_provider.ConsumeIntegralInRange<int>(-1, 0);\n+    }\n+\n+    static int close(void* cookie)\n+    {\n+        FuzzedFileProvider* fuzzed_file = (FuzzedFileProvider*)cookie;\n+        return fuzzed_file->m_fuzzed_data_provider.ConsumeIntegralInRange<int>(-1, 0);\n+    }\n+};\n+\n+NODISCARD inline FuzzedFileProvider ConsumeFile(FuzzedDataProvider& fuzzed_data_provider) noexcept\n+{\n+    return {fuzzed_data_provider};\n+}\n+\n #endif // BITCOIN_TEST_FUZZ_UTIL_H"
      }
    ]
  },
  {
    "sha": "e48094a506ad031d211b9dfe7639d8b3a2239788",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDgwOTRhNTA2YWQwMzFkMjExYjlkZmU3NjM5ZDhiM2EyMjM5Nzg4",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T19:02:26Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "message": "tests: Add FuzzedAutoFileProvider which provides a CAutoFile interface to FuzzedDataProvider",
      "tree": {
        "sha": "59463e3989b19dc2199b8238c28c73ac2eff0901",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59463e3989b19dc2199b8238c28c73ac2eff0901"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e48094a506ad031d211b9dfe7639d8b3a2239788",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e48094a506ad031d211b9dfe7639d8b3a2239788",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e48094a506ad031d211b9dfe7639d8b3a2239788",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e48094a506ad031d211b9dfe7639d8b3a2239788/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9dbcd6854ca05a9bd1e9a5e1222dac1758048231",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9dbcd6854ca05a9bd1e9a5e1222dac1758048231",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9dbcd6854ca05a9bd1e9a5e1222dac1758048231"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 21,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9fe92c7f8401cfb86e1734eb565e7330d2bf884e",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e48094a506ad031d211b9dfe7639d8b3a2239788/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e48094a506ad031d211b9dfe7639d8b3a2239788/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=e48094a506ad031d211b9dfe7639d8b3a2239788",
        "patch": "@@ -383,4 +383,25 @@ NODISCARD inline FuzzedFileProvider ConsumeFile(FuzzedDataProvider& fuzzed_data_\n     return {fuzzed_data_provider};\n }\n \n+class FuzzedAutoFileProvider\n+{\n+    FuzzedDataProvider& m_fuzzed_data_provider;\n+    FuzzedFileProvider m_fuzzed_file_provider;\n+\n+public:\n+    FuzzedAutoFileProvider(FuzzedDataProvider& fuzzed_data_provider) : m_fuzzed_data_provider{fuzzed_data_provider}, m_fuzzed_file_provider{fuzzed_data_provider}\n+    {\n+    }\n+\n+    CAutoFile open()\n+    {\n+        return {m_fuzzed_file_provider.open(), m_fuzzed_data_provider.ConsumeIntegral<int>(), m_fuzzed_data_provider.ConsumeIntegral<int>()};\n+    }\n+};\n+\n+NODISCARD inline FuzzedAutoFileProvider ConsumeAutoFile(FuzzedDataProvider& fuzzed_data_provider) noexcept\n+{\n+    return {fuzzed_data_provider};\n+}\n+\n #endif // BITCOIN_TEST_FUZZ_UTIL_H"
      }
    ]
  },
  {
    "sha": "e507c0799d759355dd0cfbe83449f0f767a7264e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTA3YzA3OTlkNzU5MzU1ZGQwY2ZiZTgzNDQ5ZjBmNzY3YTcyNjRl",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T19:03:52Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "message": "tests: Add serialization/deserialization fuzzing helpers WriteToStream(\u2026)/ReadFromStream(\u2026)",
      "tree": {
        "sha": "0d64949f74db8745041e3ccbdf0a5f36f909bfb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d64949f74db8745041e3ccbdf0a5f36f909bfb7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e507c0799d759355dd0cfbe83449f0f767a7264e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e507c0799d759355dd0cfbe83449f0f767a7264e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e507c0799d759355dd0cfbe83449f0f767a7264e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e507c0799d759355dd0cfbe83449f0f767a7264e/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e48094a506ad031d211b9dfe7639d8b3a2239788",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e48094a506ad031d211b9dfe7639d8b3a2239788",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e48094a506ad031d211b9dfe7639d8b3a2239788"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 66,
      "deletions": 0
    },
    "files": [
      {
        "sha": "148610c04d85674a2ac7f4bf682939bb3eae7c16",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e507c0799d759355dd0cfbe83449f0f767a7264e/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e507c0799d759355dd0cfbe83449f0f767a7264e/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=e507c0799d759355dd0cfbe83449f0f767a7264e",
        "patch": "@@ -404,4 +404,70 @@ NODISCARD inline FuzzedAutoFileProvider ConsumeAutoFile(FuzzedDataProvider& fuzz\n     return {fuzzed_data_provider};\n }\n \n+#define WRITE_TO_STREAM_CASE(id, type, consume) \\\n+    case id: {                                  \\\n+        type o = consume;                       \\\n+        stream << o;                            \\\n+        break;                                  \\\n+    }\n+template <typename Stream>\n+void WriteToStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) noexcept\n+{\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        try {\n+            switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 13)) {\n+                WRITE_TO_STREAM_CASE(0, bool, fuzzed_data_provider.ConsumeBool())\n+                WRITE_TO_STREAM_CASE(1, char, fuzzed_data_provider.ConsumeIntegral<char>())\n+                WRITE_TO_STREAM_CASE(2, int8_t, fuzzed_data_provider.ConsumeIntegral<int8_t>())\n+                WRITE_TO_STREAM_CASE(3, uint8_t, fuzzed_data_provider.ConsumeIntegral<uint8_t>())\n+                WRITE_TO_STREAM_CASE(4, int16_t, fuzzed_data_provider.ConsumeIntegral<int16_t>())\n+                WRITE_TO_STREAM_CASE(5, uint16_t, fuzzed_data_provider.ConsumeIntegral<uint16_t>())\n+                WRITE_TO_STREAM_CASE(6, int32_t, fuzzed_data_provider.ConsumeIntegral<int32_t>())\n+                WRITE_TO_STREAM_CASE(7, uint32_t, fuzzed_data_provider.ConsumeIntegral<uint32_t>())\n+                WRITE_TO_STREAM_CASE(8, int64_t, fuzzed_data_provider.ConsumeIntegral<int64_t>())\n+                WRITE_TO_STREAM_CASE(9, uint64_t, fuzzed_data_provider.ConsumeIntegral<uint64_t>())\n+                WRITE_TO_STREAM_CASE(10, float, fuzzed_data_provider.ConsumeFloatingPoint<float>())\n+                WRITE_TO_STREAM_CASE(11, double, fuzzed_data_provider.ConsumeFloatingPoint<double>())\n+                WRITE_TO_STREAM_CASE(12, std::string, fuzzed_data_provider.ConsumeRandomLengthString(32))\n+                WRITE_TO_STREAM_CASE(13, std::vector<char>, ConsumeRandomLengthIntegralVector<char>(fuzzed_data_provider))\n+            }\n+        } catch (const std::ios_base::failure&) {\n+            break;\n+        }\n+    }\n+}\n+\n+#define READ_FROM_STREAM_CASE(id, type) \\\n+    case id: {                          \\\n+        type o;                         \\\n+        stream >> o;                    \\\n+        break;                          \\\n+    }\n+template <typename Stream>\n+void ReadFromStream(FuzzedDataProvider& fuzzed_data_provider, Stream& stream) noexcept\n+{\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        try {\n+            switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 13)) {\n+                READ_FROM_STREAM_CASE(0, bool)\n+                READ_FROM_STREAM_CASE(1, char)\n+                READ_FROM_STREAM_CASE(2, int8_t)\n+                READ_FROM_STREAM_CASE(3, uint8_t)\n+                READ_FROM_STREAM_CASE(4, int16_t)\n+                READ_FROM_STREAM_CASE(5, uint16_t)\n+                READ_FROM_STREAM_CASE(6, int32_t)\n+                READ_FROM_STREAM_CASE(7, uint32_t)\n+                READ_FROM_STREAM_CASE(8, int64_t)\n+                READ_FROM_STREAM_CASE(9, uint64_t)\n+                READ_FROM_STREAM_CASE(10, float)\n+                READ_FROM_STREAM_CASE(11, double)\n+                READ_FROM_STREAM_CASE(12, std::string)\n+                READ_FROM_STREAM_CASE(13, std::vector<char>)\n+            }\n+        } catch (const std::ios_base::failure&) {\n+            break;\n+        }\n+    }\n+}\n+\n #endif // BITCOIN_TEST_FUZZ_UTIL_H"
      }
    ]
  },
  {
    "sha": "f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmM2FhNjU5YmU2NzZhNGRkMGMyMGZlNmM1Y2I0YWNkN2E1YjM4Yjc2",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T19:04:44Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "message": "tests: Add fuzzing harness for CAutoFile (streams.h)",
      "tree": {
        "sha": "2cc4462401841cd9bc239128621294930c141335",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2cc4462401841cd9bc239128621294930c141335"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e507c0799d759355dd0cfbe83449f0f767a7264e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e507c0799d759355dd0cfbe83449f0f767a7264e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e507c0799d759355dd0cfbe83449f0f767a7264e"
      }
    ],
    "stats": {
      "total": 79,
      "additions": 79,
      "deletions": 0
    },
    "files": [
      {
        "sha": "16cddd15c197f6776ba04aea81b554548bb47190",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76",
        "patch": "@@ -10,6 +10,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/addrman_deserialize \\\n   test/fuzz/asmap \\\n   test/fuzz/asmap_direct \\\n+  test/fuzz/autofile \\\n   test/fuzz/banentry_deserialize \\\n   test/fuzz/banman \\\n   test/fuzz/base_encode_decode \\\n@@ -350,6 +351,12 @@ test_fuzz_asmap_direct_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_asmap_direct_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_asmap_direct_SOURCES = test/fuzz/asmap_direct.cpp\n \n+test_fuzz_autofile_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_autofile_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_autofile_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_autofile_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_autofile_SOURCES = test/fuzz/autofile.cpp\n+\n test_fuzz_banentry_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBANENTRY_DESERIALIZE=1\n test_fuzz_banentry_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_banentry_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "7ea0bdd2a7a387caf669c98a83723a4e6dfa4095",
        "filename": "src/test/fuzz/autofile.cpp",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76/src/test/fuzz/autofile.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76/src/test/fuzz/autofile.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/autofile.cpp?ref=f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76",
        "patch": "@@ -0,0 +1,72 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <iostream>\n+#include <optional>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);\n+    CAutoFile auto_file = fuzzed_auto_file_provider.open();\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n+        case 0: {\n+            std::array<uint8_t, 4096> arr{};\n+            try {\n+                auto_file.read((char*)arr.data(), fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+            } catch (const std::ios_base::failure&) {\n+            }\n+            break;\n+        }\n+        case 1: {\n+            const std::array<uint8_t, 4096> arr{};\n+            try {\n+                auto_file.write((const char*)arr.data(), fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+            } catch (const std::ios_base::failure&) {\n+            }\n+            break;\n+        }\n+        case 2: {\n+            try {\n+                auto_file.ignore(fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+            } catch (const std::ios_base::failure&) {\n+            }\n+            break;\n+        }\n+        case 3: {\n+            auto_file.fclose();\n+            break;\n+        }\n+        case 4: {\n+            ReadFromStream(fuzzed_data_provider, auto_file);\n+            break;\n+        }\n+        case 5: {\n+            WriteToStream(fuzzed_data_provider, auto_file);\n+            break;\n+        }\n+        }\n+    }\n+    (void)auto_file.Get();\n+    (void)auto_file.GetType();\n+    (void)auto_file.GetVersion();\n+    (void)auto_file.IsNull();\n+    if (fuzzed_data_provider.ConsumeBool()) {\n+        FILE* f = auto_file.release();\n+        if (f != nullptr) {\n+            fclose(f);\n+        }\n+    }\n+}"
      }
    ]
  },
  {
    "sha": "98233760305a36acbd41d76aeebeada1340f6367",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODIzMzc2MDMwNWEzNmFjYmQ0MWQ3NmFlZWJlYWRhMTM0MGY2MzY3",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T19:05:13Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "message": "tests: Add fuzzing harness for CBufferedFile (streams.h)",
      "tree": {
        "sha": "d8e7e8f940830a580ed5fdddde02a40d2623bb47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d8e7e8f940830a580ed5fdddde02a40d2623bb47"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98233760305a36acbd41d76aeebeada1340f6367",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98233760305a36acbd41d76aeebeada1340f6367",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/98233760305a36acbd41d76aeebeada1340f6367",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98233760305a36acbd41d76aeebeada1340f6367/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f3aa659be676a4dd0c20fe6c5cb4acd7a5b38b76"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 71,
      "deletions": 0
    },
    "files": [
      {
        "sha": "211b4b5897da2ac4f26d7a5b12eb396b24718222",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98233760305a36acbd41d76aeebeada1340f6367/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98233760305a36acbd41d76aeebeada1340f6367/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=98233760305a36acbd41d76aeebeada1340f6367",
        "patch": "@@ -30,6 +30,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/blockundo_deserialize \\\n   test/fuzz/bloom_filter \\\n   test/fuzz/bloomfilter_deserialize \\\n+  test/fuzz/buffered_file \\\n   test/fuzz/chain \\\n   test/fuzz/checkqueue \\\n   test/fuzz/coins_deserialize \\\n@@ -471,6 +472,12 @@ test_fuzz_bloomfilter_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_bloomfilter_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_bloomfilter_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n+test_fuzz_buffered_file_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_buffered_file_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_buffered_file_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_buffered_file_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_buffered_file_SOURCES = test/fuzz/buffered_file.cpp\n+\n test_fuzz_chain_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_chain_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_chain_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "29b2277f1610fd7e1c22efad3a36741b3c36ebdd",
        "filename": "src/test/fuzz/buffered_file.cpp",
        "status": "added",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98233760305a36acbd41d76aeebeada1340f6367/src/test/fuzz/buffered_file.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98233760305a36acbd41d76aeebeada1340f6367/src/test/fuzz/buffered_file.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/buffered_file.cpp?ref=98233760305a36acbd41d76aeebeada1340f6367",
        "patch": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <array>\n+#include <cstdint>\n+#include <iostream>\n+#include <optional>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    FuzzedFileProvider fuzzed_file_provider = ConsumeFile(fuzzed_data_provider);\n+    std::optional<CBufferedFile> opt_buffered_file;\n+    FILE* fuzzed_file = fuzzed_file_provider.open();\n+    try {\n+        opt_buffered_file.emplace(fuzzed_file, fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096), fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096), fuzzed_data_provider.ConsumeIntegral<int>(), fuzzed_data_provider.ConsumeIntegral<int>());\n+    } catch (const std::ios_base::failure&) {\n+        if (fuzzed_file != nullptr) {\n+            fclose(fuzzed_file);\n+        }\n+    }\n+    if (opt_buffered_file && fuzzed_file != nullptr) {\n+        while (fuzzed_data_provider.ConsumeBool()) {\n+            switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 4)) {\n+            case 0: {\n+                std::array<uint8_t, 4096> arr{};\n+                try {\n+                    opt_buffered_file->read((char*)arr.data(), fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096));\n+                } catch (const std::ios_base::failure&) {\n+                }\n+                break;\n+            }\n+            case 1: {\n+                opt_buffered_file->Seek(fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096));\n+                break;\n+            }\n+            case 2: {\n+                opt_buffered_file->SetLimit(fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096));\n+                break;\n+            }\n+            case 3: {\n+                try {\n+                    opt_buffered_file->FindByte(fuzzed_data_provider.ConsumeIntegral<char>());\n+                } catch (const std::ios_base::failure&) {\n+                }\n+                break;\n+            }\n+            case 4: {\n+                ReadFromStream(fuzzed_data_provider, *opt_buffered_file);\n+                break;\n+            }\n+            }\n+        }\n+    }\n+}"
      }
    ]
  },
  {
    "sha": "7bcc71e5f8cdfd8ba1411c799c0726f503e52343",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YmNjNzFlNWY4Y2RmZDhiYTE0MTFjNzk5YzA3MjZmNTAzZTUyMzQz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T19:05:46Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "message": "tests: Add fuzzing harness for LoadExternalBlockFile(...) (validation.h)",
      "tree": {
        "sha": "b4004bb55b04640f5724f258a0649ad2867c0bf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4004bb55b04640f5724f258a0649ad2867c0bf4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bcc71e5f8cdfd8ba1411c799c0726f503e52343",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bcc71e5f8cdfd8ba1411c799c0726f503e52343",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7bcc71e5f8cdfd8ba1411c799c0726f503e52343",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bcc71e5f8cdfd8ba1411c799c0726f503e52343/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "98233760305a36acbd41d76aeebeada1340f6367",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98233760305a36acbd41d76aeebeada1340f6367",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/98233760305a36acbd41d76aeebeada1340f6367"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 38,
      "deletions": 0
    },
    "files": [
      {
        "sha": "da119f9e9b05c64da330d0546877235b35de5817",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bcc71e5f8cdfd8ba1411c799c0726f503e52343/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bcc71e5f8cdfd8ba1411c799c0726f503e52343/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=7bcc71e5f8cdfd8ba1411c799c0726f503e52343",
        "patch": "@@ -57,6 +57,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/key_io \\\n   test/fuzz/key_origin_info_deserialize \\\n   test/fuzz/kitchen_sink \\\n+  test/fuzz/load_external_block_file \\\n   test/fuzz/locale \\\n   test/fuzz/merkle_block_deserialize \\\n   test/fuzz/merkleblock \\\n@@ -634,6 +635,12 @@ test_fuzz_kitchen_sink_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_kitchen_sink_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_kitchen_sink_SOURCES = test/fuzz/kitchen_sink.cpp\n \n+test_fuzz_load_external_block_file_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_load_external_block_file_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_load_external_block_file_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_load_external_block_file_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_load_external_block_file_SOURCES = test/fuzz/load_external_block_file.cpp\n+\n test_fuzz_locale_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_locale_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_locale_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "d9de9d98660366d4111c0f5d5b2189a9667fa6bf",
        "filename": "src/test/fuzz/load_external_block_file.cpp",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bcc71e5f8cdfd8ba1411c799c0726f503e52343/src/test/fuzz/load_external_block_file.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bcc71e5f8cdfd8ba1411c799c0726f503e52343/src/test/fuzz/load_external_block_file.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/load_external_block_file.cpp?ref=7bcc71e5f8cdfd8ba1411c799c0726f503e52343",
        "patch": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <flatfile.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+void initialize()\n+{\n+    InitializeFuzzingContext();\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    FuzzedFileProvider fuzzed_file_provider = ConsumeFile(fuzzed_data_provider);\n+    FILE* fuzzed_block_file = fuzzed_file_provider.open();\n+    if (fuzzed_block_file == nullptr) {\n+        return;\n+    }\n+    FlatFilePos flat_file_pos;\n+    LoadExternalBlockFile(Params(), fuzzed_block_file, fuzzed_data_provider.ConsumeBool() ? &flat_file_pos : nullptr);\n+}"
      }
    ]
  },
  {
    "sha": "614e0807a8137d82832aea45e4864b424f71f698",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTRlMDgwN2E4MTM3ZDgyODMyYWVhNDVlNDg2NGI0MjRmNzFmNjk4",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T00:04:46Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "message": "tests: Add fuzzing harness for CBufferedFile::{SetPos,GetPos,GetType,GetVersion} (stream.h)",
      "tree": {
        "sha": "1e409ec6a0c064e51f6d884f1ee67fa54c765e4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e409ec6a0c064e51f6d884f1ee67fa54c765e4f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/614e0807a8137d82832aea45e4864b424f71f698",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/614e0807a8137d82832aea45e4864b424f71f698",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/614e0807a8137d82832aea45e4864b424f71f698",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/614e0807a8137d82832aea45e4864b424f71f698/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7bcc71e5f8cdfd8ba1411c799c0726f503e52343",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bcc71e5f8cdfd8ba1411c799c0726f503e52343",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7bcc71e5f8cdfd8ba1411c799c0726f503e52343"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 16,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6bbd13eb5c523ee6f9b2344e002e9b1268ef4ec6",
        "filename": "src/test/fuzz/buffered_file.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 2,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/614e0807a8137d82832aea45e4864b424f71f698/src/test/fuzz/buffered_file.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/614e0807a8137d82832aea45e4864b424f71f698/src/test/fuzz/buffered_file.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/buffered_file.cpp?ref=614e0807a8137d82832aea45e4864b424f71f698",
        "patch": "@@ -29,8 +29,9 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (opt_buffered_file && fuzzed_file != nullptr) {\n+        bool setpos_fail = false;\n         while (fuzzed_data_provider.ConsumeBool()) {\n-            switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 4)) {\n+            switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 5)) {\n             case 0: {\n                 std::array<uint8_t, 4096> arr{};\n                 try {\n@@ -48,17 +49,30 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n                 break;\n             }\n             case 3: {\n+                if (!opt_buffered_file->SetPos(fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(0, 4096))) {\n+                    setpos_fail = true;\n+                }\n+                break;\n+            }\n+            case 4: {\n+                if (setpos_fail) {\n+                    // Calling FindByte(...) after a failed SetPos(...) call may result in an infinite loop.\n+                    break;\n+                }\n                 try {\n                     opt_buffered_file->FindByte(fuzzed_data_provider.ConsumeIntegral<char>());\n                 } catch (const std::ios_base::failure&) {\n                 }\n                 break;\n             }\n-            case 4: {\n+            case 5: {\n                 ReadFromStream(fuzzed_data_provider, *opt_buffered_file);\n                 break;\n             }\n             }\n         }\n+        opt_buffered_file->GetPos();\n+        opt_buffered_file->GetType();\n+        opt_buffered_file->GetVersion();\n     }\n }"
      }
    ]
  },
  {
    "sha": "ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDZjMzQ4ODFkYzEyNWM5NzNiNmI5YmExZGFhOTk5ZDMxNDFiMWFl",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-06-02T19:06:07Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-07-15T11:41:21Z"
      },
      "message": "tests: Add fuzzing harness for CBlockPolicyEstimator::{Read,Write} (policy/fees.h)",
      "tree": {
        "sha": "68e2b8e24eed511ac33988b0a8fb58699b651c6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68e2b8e24eed511ac33988b0a8fb58699b651c6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad6c34881dc125c973b6b9ba1daa999d3141b1ae/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "614e0807a8137d82832aea45e4864b424f71f698",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/614e0807a8137d82832aea45e4864b424f71f698",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/614e0807a8137d82832aea45e4864b424f71f698"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 46,
      "deletions": 0
    },
    "files": [
      {
        "sha": "abab61d7805c19c7121c25ba13f25d2911119995",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad6c34881dc125c973b6b9ba1daa999d3141b1ae/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad6c34881dc125c973b6b9ba1daa999d3141b1ae/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
        "patch": "@@ -77,6 +77,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/partial_merkle_tree_deserialize \\\n   test/fuzz/partially_signed_transaction_deserialize \\\n   test/fuzz/policy_estimator \\\n+  test/fuzz/policy_estimator_io \\\n   test/fuzz/pow \\\n   test/fuzz/prefilled_transaction_deserialize \\\n   test/fuzz/prevector \\\n@@ -761,6 +762,12 @@ test_fuzz_policy_estimator_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_policy_estimator_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_policy_estimator_SOURCES = test/fuzz/policy_estimator.cpp\n \n+test_fuzz_policy_estimator_io_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_policy_estimator_io_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_policy_estimator_io_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_policy_estimator_io_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_policy_estimator_io_SOURCES = test/fuzz/policy_estimator_io.cpp\n+\n test_fuzz_pow_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_pow_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_pow_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "6c94a47f3c178dd76d44aef3f7d2c3becd7b87f9",
        "filename": "src/test/fuzz/policy_estimator.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad6c34881dc125c973b6b9ba1daa999d3141b1ae/src/test/fuzz/policy_estimator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad6c34881dc125c973b6b9ba1daa999d3141b1ae/src/test/fuzz/policy_estimator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/policy_estimator.cpp?ref=ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
        "patch": "@@ -14,6 +14,11 @@\n #include <string>\n #include <vector>\n \n+void initialize()\n+{\n+    InitializeFuzzingContext();\n+}\n+\n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n@@ -66,4 +71,10 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         (void)block_policy_estimator.estimateSmartFee(fuzzed_data_provider.ConsumeIntegral<int>(), fuzzed_data_provider.ConsumeBool() ? &fee_calculation : nullptr, fuzzed_data_provider.ConsumeBool());\n         (void)block_policy_estimator.HighestTargetTracked(fuzzed_data_provider.PickValueInArray({FeeEstimateHorizon::SHORT_HALFLIFE, FeeEstimateHorizon::MED_HALFLIFE, FeeEstimateHorizon::LONG_HALFLIFE}));\n     }\n+    {\n+        FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);\n+        CAutoFile fuzzed_auto_file = fuzzed_auto_file_provider.open();\n+        block_policy_estimator.Write(fuzzed_auto_file);\n+        block_policy_estimator.Read(fuzzed_auto_file);\n+    }\n }"
      },
      {
        "sha": "0edcf201c750653627cc67b6c501a963ec57b9f2",
        "filename": "src/test/fuzz/policy_estimator_io.cpp",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad6c34881dc125c973b6b9ba1daa999d3141b1ae/src/test/fuzz/policy_estimator_io.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad6c34881dc125c973b6b9ba1daa999d3141b1ae/src/test/fuzz/policy_estimator_io.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/policy_estimator_io.cpp?ref=ad6c34881dc125c973b6b9ba1daa999d3141b1ae",
        "patch": "@@ -0,0 +1,28 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/fees.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+void initialize()\n+{\n+    InitializeFuzzingContext();\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    FuzzedAutoFileProvider fuzzed_auto_file_provider = ConsumeAutoFile(fuzzed_data_provider);\n+    CAutoFile fuzzed_auto_file = fuzzed_auto_file_provider.open();\n+    // Re-using block_policy_estimator across runs to avoid costly creation of CBlockPolicyEstimator object.\n+    static CBlockPolicyEstimator block_policy_estimator;\n+    if (block_policy_estimator.Read(fuzzed_auto_file)) {\n+        block_policy_estimator.Write(fuzzed_auto_file);\n+    }\n+}"
      }
    ]
  }
]