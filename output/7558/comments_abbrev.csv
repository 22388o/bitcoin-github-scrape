gmaxwell,2016-02-19T01:47:29Z,Concept ACK.\n\nWhat happens if I import a fully spent transaction but fail to import the transaction(s) spending it's outputs? \n,https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-186008038,186008038,
sipa,2016-02-19T01:48:43Z,> What happens if I import a fully spent transaction but fail to import the transaction(s) spending it's outputs? \n\nYou are eaten by a grue.\n,https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-186008482,186008482,
gmaxwell,2016-02-19T01:58:23Z,"One could avoid the grue eating by using a lantern, I mean, checking if the output is still spendable and setting a flag... perhaps?\n",https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-186010528,186010528,
paveljanik,2016-02-19T07:21:31Z,The build fails with this on some systems:\n\n```\n/bin/sh: 1: /home/travis/build/bitcoin/bitcoin/bitcoin-i686-pc-linux-gnu/qa/rpc-tests/importprunedfunds.py: Permission denied\n```\n,https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-186101718,186101718,
laanwj,2016-02-19T09:53:24Z,"Concept ACK, +1 for the grue\n",https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-186143729,186143729,
jonasschnelli,2016-02-19T12:50:20Z,Nice and clean PR.\nConcept ACK.\n,https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-186202320,186202320,
jonasschnelli,2016-02-19T13:24:36Z,And @paveljanik is right: `importprunedfunds.py` needs a `-rwxr-xr-x` file permissions mode.\n,https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-186211797,186211797,
instagibbs,2016-02-19T20:06:27Z,"@sipa @gmaxwell \n\nSeems the easiest way to do this is mark outputs as spent or not, and modify all functions which tally funds to account for this. For now the wallet simply checks if things are spent by looking through its wallet and looking for spends.\n",https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-186382835,186382835,
instagibbs,2016-02-19T20:16:29Z,"Alternatively, when computing available funds we can check if each output is available directly in the utxo set, rather than (just?) looking at wallet transactions. \n\nI don't know the internals well enough to know which is best, or if these are both terrible ideas. Especially in the presence of reorgs. \n",https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-186386342,186386342,
sipa,2016-02-19T20:32:52Z,"Marking outputs as spent is very complicated, as spendability depends on\nwhether other transactions exist that spend them, which themselves may be\nin conflict with the blockchain.\n\nWe can check the UTXO set for spendability in theory, but that introduces\nyet another dependency between the wallet and the node, and is something\nthat fundamentally requires a trusted full node.\n\nIMHO, if you'r",https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-186394499,186394499,
instagibbs,2016-02-19T20:38:08Z,"That was my feeling after digging around and thinking about it.\nOn Feb 19, 2016 12:33 PM, ""Pieter Wuille"" notifications@github.com wrote:\n\n> Marking outputs as spent is very complicated, as spendability depends on\n> whether other transactions exist that spend them, which themselves may be\n> in conflict with the blockchain.\n> \n> We can check the UTXO set for spendability in theory, but that ",https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-186396112,186396112,
instagibbs,2016-03-07T13:53:11Z,Added a companion RPC call to allow removal of imported transactions. \n,https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-193255444,193255444,
laanwj,2016-03-07T14:43:19Z,> Added a companion RPC call to allow removal of imported transactions.\n\nNice!\n,https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-193277154,193277154,
instagibbs,2016-03-10T18:58:45Z,Fixed the undefined behavior that was causing the test to throw an error.  \n,https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-195001276,195001276,
instagibbs,2016-03-14T14:01:48Z,Squashed.\n,https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-196321441,196321441,
instagibbs,2016-03-23T14:50:03Z,rebased\n,https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-200377351,200377351,
laanwj,2016-03-29T09:15:17Z,utACK 7eb7029\n,https://github.com/bitcoin/bitcoin/pull/7558#issuecomment-202793997,202793997,
jonasschnelli,2016-02-19T12:46:14Z,"nit: `(string, required)` would be the pattern that matches with other rpc commands help. Hex as string type is mostly mentioned in the parameters description.\n",https://github.com/bitcoin/bitcoin/pull/7558#discussion_r53456239,53456239,src/wallet/rpcdump.cpp
