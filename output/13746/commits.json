[
  {
    "sha": "b1334d42f321162fad15b15091eebf79a711565c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTMzNGQ0MmYzMjExNjJmYWQxNWIxNTA5MWVlYmY3OWE3MTE1NjVj",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-23T08:15:56Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-02-22T02:35:07Z"
      },
      "message": "util: add CopyDirectory helper",
      "tree": {
        "sha": "759289dcd362c5736bfc2455aba8e62db8c05e52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/759289dcd362c5736bfc2455aba8e62db8c05e52"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1334d42f321162fad15b15091eebf79a711565c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlxvX9sACgkQV692LbM1\nMyKElA//f8HEKQDne2hGs6WKPlAqoQEU2W6yMA7ixbAI7aqlcGfqpi5m8Bn6cFgr\nxjAipKcQJAFTnM3tHQ7amK22/x+KLDN+tToaPeDPSwV0kLUnMATNBaqjfZu6Kgxg\nNVMVmfD4BJyvZXOZUlprJJ17PWTNH+nj62yMZ2wam07oAdBw/9ZVNmMxSFr7LNRa\nCsUPqX41NkISJbmvvrk9D49Wrwh2EfGd4R3VAh9jXHMKuG6wwjQAr/IyfX4HNznO\nwdoRH13ChBFoGRtTfSxEw9ExYf47ISHcydEG2QBg4VxV4gfmANVL770/6gmW2c93\n/n8UxwIwecdA3Q/J/ABssb4WHwEZhypm4gYhfPTevDDHOgtEZuf1GXWSek3wLQr7\nBLYEDPcJOXqzsIYKRkjxbs3WPSaFLYGvk+ffHxe0MyKKEXxqFDQMDJ+kLvLvk9QG\nIFJopBf5TvujJeYnCOCx19kVtIGvOSNtY9HlboGJcRirz+KASnHTGEt86NjbryBg\nZymFIuss10Z8auo2cQ8aMpVvRQf2TNECNy+CdLReNSk2/Gp/eQVLEVZnYsq4x0FW\ncroyk1aXXyqXTwyUifAaQbGjOHBa61nwK4AU550NDiXNflwJ83ZZ4uSi5aGZcEDn\nJOzErG0OjlaucRMMZPqzh4z25SgFywZiRIwLWyWcmfH6aPqitB4=\n=NVIl\n-----END PGP SIGNATURE-----",
        "payload": "tree 759289dcd362c5736bfc2455aba8e62db8c05e52\nparent a83aedca1889709feb8e6b2d2d18340151220338\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532333756 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1550802907 +0900\n\nutil: add CopyDirectory helper\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1334d42f321162fad15b15091eebf79a711565c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1334d42f321162fad15b15091eebf79a711565c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1334d42f321162fad15b15091eebf79a711565c/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a83aedca1889709feb8e6b2d2d18340151220338",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a83aedca1889709feb8e6b2d2d18340151220338",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a83aedca1889709feb8e6b2d2d18340151220338"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 27,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ffb3e8ea8d262e10b94476790682e46f53cf529b",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1334d42f321162fad15b15091eebf79a711565c/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1334d42f321162fad15b15091eebf79a711565c/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=b1334d42f321162fad15b15091eebf79a711565c",
        "patch": "@@ -1265,3 +1265,21 @@ std::pair<int, char**> WinCmdLineArgs::get()\n }\n #endif\n } // namespace util\n+\n+bool CopyDirectory(const fs::path& dest, const fs::path& source, const std::string& logprefix)\n+{\n+    if (fs::exists(source) && fs::is_directory(source)) {\n+        if (!fs::is_directory(dest) && !fs::create_directory(dest)) {\n+            return false;\n+        }\n+        LogPrintf(\"%s\", logprefix); /* Continued */\n+        for (fs::directory_iterator file(source); file != fs::directory_iterator(); ++file) {\n+            fs::path current(file->path());\n+            if (fs::is_directory(current)) continue;\n+            fs::copy_file(current, dest / current.filename());\n+            LogPrintf(\".\"); /* Continued */\n+        }\n+        LogPrintf(\"\\n\");\n+    }\n+    return true;\n+}"
      },
      {
        "sha": "0b274f7ff866f234fbc0ecc88a9d32fbf1b5173c",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1334d42f321162fad15b15091eebf79a711565c/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1334d42f321162fad15b15091eebf79a711565c/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=b1334d42f321162fad15b15091eebf79a711565c",
        "patch": "@@ -387,4 +387,13 @@ class WinCmdLineArgs\n \n } // namespace util\n \n+/**\n+ * Copy all the files in the given directory to the destination path, log-printing\n+ * \".\" for each file, and a \"\\n\" after the copy operation completes, prefixed by\n+ * logprefix (skipped if the source does not exist).\n+ * Returns false if the destination path is not a directory and cannot be created.\n+ * Note that true is returned, even if the source does not exist/is not a directory.\n+ */\n+bool CopyDirectory(const fs::path& dest, const fs::path& source, const std::string& logprefix);\n+\n #endif // BITCOIN_UTIL_SYSTEM_H"
      }
    ]
  },
  {
    "sha": "f3f7c49de52fef7e73707f29239f8387d9bbd496",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmM2Y3YzQ5ZGU1MmZlZjdlNzM3MDdmMjkyMzlmODM4N2Q5YmJkNDk2",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-23T08:15:32Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-02-22T02:36:45Z"
      },
      "message": "util: add master datadir path support",
      "tree": {
        "sha": "7b611957a5f2ea4c73600aa4763fa3ce5474acae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b611957a5f2ea4c73600aa4763fa3ce5474acae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3f7c49de52fef7e73707f29239f8387d9bbd496",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlxvYD0ACgkQV692LbM1\nMyKtLhAAkF9+25aJzbPWLkPJzgOVVc3bwTlViBOIbZDensRIcE5EU89cbFxIXFN7\nQpM5JarT5r1+ew+xw6QRfwFDsvUMNulFYs8/BtuRyYcxy7JeEShs76T3QcnY8Kin\nUgF+YhvIcRR9i18er56tl3jZZB/Vhs2cygqbVSN7PzCn2yjd7Vy8nf79efk42GPW\noGAAmk5yrlUFABFcBgvrWbupg1aoE8hX/GPX6Ai6UufuVH9QBgYOV5PsCg6k7GUy\n1Bwr96YtqX1gERyGOUDaXUmC3viD31wMh48hABsQd6vvzynrOGXztKcxJmS6FeOv\nHbT1t9PAV2dLFZ1OIyPF4EP/ph1Hd9gJU+OjaNQWyZaztTaOQ6oqzXj1SFuobp21\naYCPMK1mYdy97jcepFbP7JbREcTJ8HzKOAMHeUqP+BE1Xly7Ouo2d7Ofl7SkaRfF\nin1EMVDPLwuhIxAIH23NtBmnZHrXBzmJhzga4gDG+3sbK/qlnb7R478rXbu1+dcL\nqA1fYmQw3nRZ2rb1jWIRjTvASzFIHAYtYg0vWpDsJfUivqWdvMS5yrHQKqjYZeDG\n57W70Dj3YBMiJuaMGB/luTVA1KCFZ/7SgULniOd2cmjmOltGmAERIxBbX2AtvmN+\ndqYXtUWFSHu3L+rcN6dnBym4EBRHS54HlzUQKBH0BOE5ew9mL34=\n=Tl7z\n-----END PGP SIGNATURE-----",
        "payload": "tree 7b611957a5f2ea4c73600aa4763fa3ce5474acae\nparent b1334d42f321162fad15b15091eebf79a711565c\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532333732 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1550803005 +0900\n\nutil: add master datadir path support\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3f7c49de52fef7e73707f29239f8387d9bbd496",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f3f7c49de52fef7e73707f29239f8387d9bbd496",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3f7c49de52fef7e73707f29239f8387d9bbd496/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1334d42f321162fad15b15091eebf79a711565c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1334d42f321162fad15b15091eebf79a711565c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1334d42f321162fad15b15091eebf79a711565c"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 61,
      "deletions": 15
    },
    "files": [
      {
        "sha": "d7c3d4b68eef7d433d060a013c4ea7c7a6f266a0",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 15,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3f7c49de52fef7e73707f29239f8387d9bbd496/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3f7c49de52fef7e73707f29239f8387d9bbd496/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=f3f7c49de52fef7e73707f29239f8387d9bbd496",
        "patch": "@@ -704,17 +704,19 @@ fs::path GetDefaultDataDir()\n #endif\n }\n \n-static fs::path g_blocks_path_cache_net_specific;\n-static fs::path pathCached;\n-static fs::path pathCachedNetSpecific;\n-static CCriticalSection csPathCached;\n+static fs::path g_blocks_path_cached_net_specific;\n+static fs::path g_master_blocks_path_cached;\n+static fs::path g_path_cached;\n+static fs::path g_path_cached_net_specific;\n+static fs::path g_master_path_cached;\n+static fs::path g_master_path_cached_net_specific;\n+static CCriticalSection g_path_cache_lock;\n \n const fs::path &GetBlocksDir()\n {\n+    LOCK(g_path_cache_lock);\n \n-    LOCK(csPathCached);\n-\n-    fs::path &path = g_blocks_path_cache_net_specific;\n+    fs::path& path = g_blocks_path_cached_net_specific;\n \n     // This can be called during exceptions by LogPrintf(), so we cache the\n     // value so we don't have to do memory allocations after that.\n@@ -739,10 +741,9 @@ const fs::path &GetBlocksDir()\n \n const fs::path &GetDataDir(bool fNetSpecific)\n {\n+    LOCK(g_path_cache_lock);\n \n-    LOCK(csPathCached);\n-\n-    fs::path &path = fNetSpecific ? pathCachedNetSpecific : pathCached;\n+    fs::path& path = fNetSpecific ? g_path_cached_net_specific : g_path_cached;\n \n     // This can be called during exceptions by LogPrintf(), so we cache the\n     // value so we don't have to do memory allocations after that.\n@@ -769,13 +770,56 @@ const fs::path &GetDataDir(bool fNetSpecific)\n     return path;\n }\n \n-void ClearDatadirCache()\n+const fs::path& GetMasterBlocksDir()\n {\n-    LOCK(csPathCached);\n+    LOCK(g_path_cache_lock);\n+\n+    fs::path& path = g_master_blocks_path_cached;\n+\n+    // This can be called during exceptions by LogPrintf(), so we cache the\n+    // value so we don't have to do memory allocations after that.\n+    if (!path.empty()) return path;\n \n-    pathCached = fs::path();\n-    pathCachedNetSpecific = fs::path();\n-    g_blocks_path_cache_net_specific = fs::path();\n+    if (!gArgs.IsArgSet(\"-masterdatadir\")) {\n+        path = GetBlocksDir();\n+        return path;\n+    }\n+\n+    path = GetMasterDataDir(false) / \"blocks\";\n+    return path;\n+}\n+\n+const fs::path& GetMasterDataDir(bool net_specific)\n+{\n+    LOCK(g_path_cache_lock);\n+\n+    fs::path& path = net_specific ? g_master_path_cached_net_specific : g_master_path_cached;\n+\n+    // This can be called during exceptions by LogPrintf(), so we cache the\n+    // value so we don't have to do memory allocations after that.\n+    if (!path.empty()) return path;\n+\n+    if (!gArgs.IsArgSet(\"-masterdatadir\")) return path;\n+    path = fs::system_complete(gArgs.GetArg(\"-masterdatadir\", \"\"));\n+    if (!fs::is_directory(path)) {\n+        path = \"\";\n+        return path;\n+    }\n+    if (net_specific) path /= BaseParams().DataDir();\n+\n+    return path;\n+}\n+\n+void ClearDatadirCache()\n+{\n+    LOCK(g_path_cache_lock);\n+\n+    g_path_cached = fs::path();\n+    g_path_cached_net_specific = fs::path();\n+    g_master_path_cached = fs::path();\n+    g_master_path_cached_net_specific = fs::path();\n+    g_blocks_path_cached_net_specific = fs::path();\n+    g_master_blocks_path_cached = fs::path();\n }\n \n fs::path GetConfigFile(const std::string& confPath)"
      },
      {
        "sha": "62dc3eb07d89b781b7601fe4f628b37834360bb8",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3f7c49de52fef7e73707f29239f8387d9bbd496/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3f7c49de52fef7e73707f29239f8387d9bbd496/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=f3f7c49de52fef7e73707f29239f8387d9bbd496",
        "patch": "@@ -83,6 +83,8 @@ fs::path GetDefaultDataDir();\n // The blocks directory is always net specific.\n const fs::path &GetBlocksDir();\n const fs::path &GetDataDir(bool fNetSpecific = true);\n+const fs::path& GetMasterBlocksDir();\n+const fs::path& GetMasterDataDir(bool net_specific = true);\n void ClearDatadirCache();\n fs::path GetConfigFile(const std::string& confPath);\n #ifdef WIN32"
      }
    ]
  },
  {
    "sha": "96a4cb2fa851c2ac145b2d432cf440ea12cf0e02",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NmE0Y2IyZmE4NTFjMmFjMTQ1YjJkNDMyY2Y0NDBlYTEyY2YwZTAy",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-08-01T06:54:00Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-02-22T02:36:45Z"
      },
      "message": "util: add ObtainDirectoryLock() for temporary dir locks",
      "tree": {
        "sha": "7eaa3bc1985b388807ba63f0b79edf6ca05c7ce8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7eaa3bc1985b388807ba63f0b79edf6ca05c7ce8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96a4cb2fa851c2ac145b2d432cf440ea12cf0e02",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlxvYD0ACgkQV692LbM1\nMyJiug//aSpvu8MNJ8U5MHlRtCGeQA4FCkw94xpxKBZHKyiFmZLJpqK7rLCMtLDr\n1L5kc+NOXubOlqRpTrYx6A+mcgbouTp2E/eqQ7D99UZXZlkLAA2luLH4P5s6LGwC\nFuRJFhfWWXuuPAYM7MBfJDNdA3RbjfKANw7Uop0yv7NfYebXYiQVuwu5zFwGsNQc\ntOwQ9DGU9/dag/JxAb8h2ga5wr4x+s6mUt3KO6SVsYWlLoTHvlvYU1TsBfWhHDwP\nr8sAtWccFRyuKuuSIpXfkEX01AxiqyeHScXoubrPBPZ5NgGRJZPhzBkHhpqPHgXa\nXsTtz8YjlYzxRpiVAViez4MR/wFOjKLPDxmnYstZeE+rK3zT599caN5veuXdHaPd\nazi1UNF29TG5nHOlQ4H06pJrg2OCq59PMa4pcbohHdex3vBJMVhVCou2X4g/uyDF\nAZ/0XOi2FPQIZ3OJucHk0Oh/JoWdDt9P/bplxo/PdFpZgbhzPwbYo8KxqnnLFIpR\np2rVE47unNPuehBTk049t+WoSKMKcMBiHOT1Wp3OrZKEeYSGgqe568YypXBPO0uO\nrMz4htEw5EYycQECuFQBznLdyg5mjFyx7cZribwVpidhX8vkl0g7DJVA4uGY2g0L\nWi0k28O2fnrB1RsB2v2VHmgOkTx8M9T4aomodEcGKPwVIZxDGGA=\n=HQw7\n-----END PGP SIGNATURE-----",
        "payload": "tree 7eaa3bc1985b388807ba63f0b79edf6ca05c7ce8\nparent f3f7c49de52fef7e73707f29239f8387d9bbd496\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1533106440 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1550803005 +0900\n\nutil: add ObtainDirectoryLock() for temporary dir locks\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96a4cb2fa851c2ac145b2d432cf440ea12cf0e02",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96a4cb2fa851c2ac145b2d432cf440ea12cf0e02",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96a4cb2fa851c2ac145b2d432cf440ea12cf0e02/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f3f7c49de52fef7e73707f29239f8387d9bbd496",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3f7c49de52fef7e73707f29239f8387d9bbd496",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f3f7c49de52fef7e73707f29239f8387d9bbd496"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 17,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ac38e6bd851a83e2a107875be5c84ad2c00f0a41",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 5,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96a4cb2fa851c2ac145b2d432cf440ea12cf0e02/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96a4cb2fa851c2ac145b2d432cf440ea12cf0e02/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=96a4cb2fa851c2ac145b2d432cf440ea12cf0e02",
        "patch": "@@ -77,6 +77,18 @@ const char * const BITCOIN_CONF_FILENAME = \"bitcoin.conf\";\n \n ArgsManager gArgs;\n \n+bool ObtainDirectoryLock(const fs::path& directory, const std::string lockfile_name, std::unique_ptr<fsbridge::FileLock>& lock)\n+{\n+    fs::path pathLockFile = directory / lockfile_name;\n+\n+    // Create empty lock file if it doesn't exist.\n+    FILE* file = fsbridge::fopen(pathLockFile, \"a\");\n+    if (file) fclose(file);\n+\n+    lock = MakeUnique<fsbridge::FileLock>(pathLockFile);\n+    return lock->TryLock();\n+}\n+\n /** A map that contains all the currently held directory locks. After\n  * successful locking, these will be held here until the global destructor\n  * cleans them up and thus automatically unlocks them, or ReleaseDirectoryLocks\n@@ -96,17 +108,16 @@ bool LockDirectory(const fs::path& directory, const std::string lockfile_name, b\n         return true;\n     }\n \n-    // Create empty lock file if it doesn't exist.\n-    FILE* file = fsbridge::fopen(pathLockFile, \"a\");\n-    if (file) fclose(file);\n-    auto lock = MakeUnique<fsbridge::FileLock>(pathLockFile);\n-    if (!lock->TryLock()) {\n+    std::unique_ptr<fsbridge::FileLock> lock;\n+    if (!ObtainDirectoryLock(directory, lockfile_name, lock)) {\n         return error(\"Error while attempting to lock directory %s: %s\", directory.string(), lock->GetReason());\n     }\n+\n     if (!probe_only) {\n         // Lock successful and we're not just probing, put it into the map\n         dir_locks.emplace(pathLockFile.string(), std::move(lock));\n     }\n+\n     return true;\n }\n "
      },
      {
        "sha": "cffc66bce4e23ddc1c12a2b358fcb52ebf8b6550",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96a4cb2fa851c2ac145b2d432cf440ea12cf0e02/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96a4cb2fa851c2ac145b2d432cf440ea12cf0e02/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=96a4cb2fa851c2ac145b2d432cf440ea12cf0e02",
        "patch": "@@ -69,6 +69,7 @@ bool TruncateFile(FILE *file, unsigned int length);\n int RaiseFileDescriptorLimit(int nMinFD);\n void AllocateFileRange(FILE *file, unsigned int offset, unsigned int length);\n bool RenameOver(fs::path src, fs::path dest);\n+bool ObtainDirectoryLock(const fs::path& directory, const std::string lockfile_name, std::unique_ptr<fsbridge::FileLock>& lock);\n bool LockDirectory(const fs::path& directory, const std::string lockfile_name, bool probe_only=false);\n void UnlockDirectory(const fs::path& directory, const std::string& lockfile_name);\n bool DirIsWritable(const fs::path& directory);"
      }
    ]
  },
  {
    "sha": "3f7f08447b574ab50d7685182e6f9f84db71724f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjdmMDg0NDdiNTc0YWI1MGQ3Njg1MTgyZTZmOWY4NGRiNzE3MjRm",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-26T02:04:44Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-02-22T02:36:45Z"
      },
      "message": "validation: add g_has_master_datadir and g_master_endblock",
      "tree": {
        "sha": "1dd5c75b831114e197b317b6d192c539020ce8d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1dd5c75b831114e197b317b6d192c539020ce8d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f7f08447b574ab50d7685182e6f9f84db71724f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlxvYD0ACgkQV692LbM1\nMyI5+w//fmixm5bjJ1XZKoia/Q9sLLMszhdkZCramCuUEe0PLFkr4/yIEfo/eCRi\ntYnXC6xiwTsKS9Rc9oQhnKQas/kCBSPmab6iQdOF9XDkd8P01AoU4SpH4MNO67fx\nWHw7b0urjK6k3fl1lta4Z//so7kWO9vsPh1Cjb1dXe8DYatwAcieHFTemxc9fyIz\nc8tJqXcLUhhAPwdWOOFhye7MhKLN11ySbrS32gW7qaDw6oqXQfwUc/CpeSVvgI2Y\nGt6RmcEdbfSDn+xjDA9wre2lixKaeZ8q1uGKCBhNj6tUrhjlcFci+BapCVeEB5ES\n31b7tWADe7WTjvKQo1aSK5sP4lFIebOCm8bfqFqucY03ZATVW0dRqVCvrFXcOxrI\nrviIvH/HXwbc1Z5kazLFM6RSjoWJxXg5K6vIQHWDpQq93mjOruKnAvFdRM5cMjrC\nlnwaOoS6ylmlKp6GBgm7wl56wwUAXwcFJr4MJLvr+KN1cXGZMfszuA6d+cHU7NMR\nMRUcAi/Tut3mNMht6RIqYmn2onUi4rgcHvYOGBTc06TXxKYKV7hexfC5FW9HZeQ+\nJzXwZUG9JJM0oUUitnf9j8EP1Y+MjBSmTY2zxUTiufncA1Dvx9aF/E6nKIXrHc3U\nAKqG/sf7/N2d+CxA9Rx6/SmJruwimKdOgTwy8kbjeg8hNxnF6JA=\n=xbwx\n-----END PGP SIGNATURE-----",
        "payload": "tree 1dd5c75b831114e197b317b6d192c539020ce8d4\nparent 96a4cb2fa851c2ac145b2d432cf440ea12cf0e02\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532570684 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1550803005 +0900\n\nvalidation: add g_has_master_datadir and g_master_endblock\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f7f08447b574ab50d7685182e6f9f84db71724f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f7f08447b574ab50d7685182e6f9f84db71724f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f7f08447b574ab50d7685182e6f9f84db71724f/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "96a4cb2fa851c2ac145b2d432cf440ea12cf0e02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96a4cb2fa851c2ac145b2d432cf440ea12cf0e02",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96a4cb2fa851c2ac145b2d432cf440ea12cf0e02"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "17905c00345120c81965d00d17771f86d18a4e23",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f7f08447b574ab50d7685182e6f9f84db71724f/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f7f08447b574ab50d7685182e6f9f84db71724f/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3f7f08447b574ab50d7685182e6f9f84db71724f",
        "patch": "@@ -233,6 +233,8 @@ std::atomic_bool fImporting(false);\n std::atomic_bool fReindex(false);\n bool fHavePruned = false;\n bool fPruneMode = false;\n+bool g_has_master_datadir = false;\n+int g_master_endblock = -1;\n bool fIsBareMultisigStd = DEFAULT_PERMIT_BAREMULTISIG;\n bool fRequireStandard = true;\n bool fCheckBlockIndex = false;"
      },
      {
        "sha": "2c572dcd29faf3d01adebd90a59a3a5fdf1a9532",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f7f08447b574ab50d7685182e6f9f84db71724f/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f7f08447b574ab50d7685182e6f9f84db71724f/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=3f7f08447b574ab50d7685182e6f9f84db71724f",
        "patch": "@@ -189,6 +189,10 @@ static const uint64_t nMinDiskSpace = 52428800;\n extern bool fHavePruned;\n /** True if we're running in -prune mode. */\n extern bool fPruneMode;\n+/** True if we have a master datadir from which we derive out own datadir. */\n+extern bool g_has_master_datadir;\n+/** Set to the block file index of the last block file that is shared with the master. */\n+extern int g_master_endblock;\n /** Number of MiB of block files that we're trying to stay below. */\n extern uint64_t nPruneTarget;\n /** Block files containing a block-height within MIN_BLOCKS_TO_KEEP of chainActive.Tip() will not be pruned. */"
      }
    ]
  },
  {
    "sha": "d02569a89d275b0deec135888f4dadb387e3f780",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMDI1NjlhODlkMjc1YjBkZWVjMTM1ODg4ZjRkYWRiMzg3ZTNmNzgw",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-26T02:07:34Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-02-22T02:36:46Z"
      },
      "message": "init: add -masterdatadir arg",
      "tree": {
        "sha": "f8d47b8d8f4b795106f9fb5d5c4cb36ffffaeaab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8d47b8d8f4b795106f9fb5d5c4cb36ffffaeaab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d02569a89d275b0deec135888f4dadb387e3f780",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlxvYD4ACgkQV692LbM1\nMyJSJg//a6aLoCmehyeCtscjdnNt/YP1q6/+tFolyKDIZMfVTxiHNq6bQ0Knp90P\n41LkqUxJF7yQAaV2aFkhGJiFHQgceesYbXlTqjytp900hp+c1EcJBtsW44TMKoA6\nOlhsA0Et8d3MeZrataJnAHHZzPHRwf2LQFP3tBgObly0TqRzPyNnNQUyxUFefck2\n9GmkOIS13mNFdU3vU7OAOLJXR/1V1DK/Jczfc8xHkNCYZ66wpTySRAR4Mk0u/ts7\naude9ZYXKChmZXF0v+DJXk4LqcbtKHWfTg+BXo6GL2G5Z/Zgf8ZjiNKtfBVAgB+V\nDoIdGv6gT8C0eRJyINyxUzXQ8aIu45l1QvLoHv/recxffJaiB74R9qNNYDjbr2//\n0WRKJlRjDbF6oWs+NrS571c1sUtK1tszI2JqSQMVfB8UnOYz7iRra7z3ttkjij/y\nA+/SSH1AGl14zxG5FUxz2oi9JHalXF21dOD+tVhHtSBU0XQLBx+xdOvq6WQqBfzi\neHf68I9fvuYH9pNZf5hzw5LTD/1nZK0cMb6/7mbKXZTi5M5TnR38XY3+6WeXku6s\nbozPlAEocXOChpFgpcplLawo6yZO2W22zBAl3d2UtivLD60bqjctg77B6c7AtVcR\nvLbFVn48Wv3Oz+FLaswXet/CzfGWdPaTt8L9BmZwYJZnLUAnqNU=\n=rdEQ\n-----END PGP SIGNATURE-----",
        "payload": "tree f8d47b8d8f4b795106f9fb5d5c4cb36ffffaeaab\nparent 3f7f08447b574ab50d7685182e6f9f84db71724f\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532570854 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1550803006 +0900\n\ninit: add -masterdatadir arg\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d02569a89d275b0deec135888f4dadb387e3f780",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d02569a89d275b0deec135888f4dadb387e3f780",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d02569a89d275b0deec135888f4dadb387e3f780/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3f7f08447b574ab50d7685182e6f9f84db71724f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f7f08447b574ab50d7685182e6f9f84db71724f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f7f08447b574ab50d7685182e6f9f84db71724f"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "daf2cc6ebd6fbf87e6ea92d27472b3c7ffdbbc26",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02569a89d275b0deec135888f4dadb387e3f780/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02569a89d275b0deec135888f4dadb387e3f780/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d02569a89d275b0deec135888f4dadb387e3f780",
        "patch": "@@ -385,6 +385,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-feefilter\", strprintf(\"Tell other nodes to filter invs to us by our mempool min fee (default: %u)\", DEFAULT_FEEFILTER), true, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-includeconf=<file>\", \"Specify additional configuration file, relative to the -datadir path (only useable from configuration file, not command line)\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-loadblock=<file>\", \"Imports blocks from external blk000??.dat file on startup\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-masterdatadir=<dir>\", \"Specify a master data directory, from which the datadir is derived, reusing block files where possible\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-maxmempool=<n>\", strprintf(\"Keep the transaction memory pool below <n> megabytes (default: %u)\", DEFAULT_MAX_MEMPOOL_SIZE), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-maxorphantx=<n>\", strprintf(\"Keep at most <n> unconnectable transactions in memory (default: %u)\", DEFAULT_MAX_ORPHAN_TRANSACTIONS), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-mempoolexpiry=<n>\", strprintf(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\", DEFAULT_MEMPOOL_EXPIRY), false, OptionsCategory::OPTIONS);\n@@ -1246,10 +1247,13 @@ bool AppInitMain(InitInterfaces& interfaces)\n         }\n     }\n \n+    g_has_master_datadir = gArgs.IsArgSet(\"-masterdatadir\");\n+\n     if (!LogInstance().m_log_timestamps)\n         LogPrintf(\"Startup time: %s\\n\", FormatISO8601DateTime(GetTime()));\n     LogPrintf(\"Default data directory %s\\n\", GetDefaultDataDir().string());\n     LogPrintf(\"Using data directory %s\\n\", GetDataDir().string());\n+    if (g_has_master_datadir) LogPrintf(\"Using master data directory %s\\n\", GetMasterDataDir().string());\n \n     // Only log conf file usage message if conf file actually exists.\n     fs::path config_file_path = GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME));"
      }
    ]
  },
  {
    "sha": "d73d9773a3ad4e3abbe678456608363fb585331d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzNkOTc3M2EzYWQ0ZTNhYmJlNjc4NDU2NjA4MzYzZmI1ODUzMzFk",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-26T02:07:58Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-02-22T02:36:46Z"
      },
      "message": "init: copy chainstate and blocks/index to datadir if -masterdatadir is used\n\nAlso find and track the last blk/rev files that we rely on from master, as we do not want to load anything beyond that, in case master runs ahead of us at some point.",
      "tree": {
        "sha": "69f1b3cff021fd96b4d2cf07ffd7504354ae8b56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69f1b3cff021fd96b4d2cf07ffd7504354ae8b56"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d73d9773a3ad4e3abbe678456608363fb585331d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlxvYD4ACgkQV692LbM1\nMyKnrg//c0yW4x8q1mBAd5HkqpL/9XxnSbhSntbUpUFIYhlK7wkIMTozwrYnJEod\nJDx8DzgvzDUs4KvYpsA5oG+IHx0CswaAEKluEx4ec+wOY4p4yfXwUw+mSUGwo3Yi\nn8VkYM3RVZeoWMyPQnsuvlbvYvCjPorFV923nrKIsAA/Iv8/XKp2yMJcvPNMPSGA\nHgWC+LwdH99YLEu5XwHQ0cHV321u29hy/hV+bTlUCBSUj+7jWiECNyMDKU1E2+qk\nibrkVDxGAJi7WW0QCI6xHds2IORpOoVXWsuDlbDi4QPR7IY0y5IxBTojiwzotZm9\nb7ImH8kFWwTbaD1QwvBY3s2OPenjezWXaJlFXaQqIDdwGNdbMBK95pPgmHr4nVQo\nWYGxBm6V89lpG0qOBryno/csNaeIufN47UYJ9f3LMr8AngJ8ClmSDI13rKuRNhN1\nzsMkXo/RGXfTBQobwZTR9xFKwkOjYV9LPpKuYC7Ey1IpFIql5nREkn9W06jHzys0\nggO11zI8+1Rse95ugZcdTbNMCILRuUiEZ9pg/4Ahf7da1Qc5izm6h7qYZ8RelEhe\nvaxNosWXFC2TpOGba9Fj2WTJ5o0WzrL1PcRnInJxVVBttrVhbR25h4+ujdI0pT+X\nYgHVoXcMa9dpoImzV6eIxiKF5nVuMxH8K2offM/GKg/V1IwqnDU=\n=WcyW\n-----END PGP SIGNATURE-----",
        "payload": "tree 69f1b3cff021fd96b4d2cf07ffd7504354ae8b56\nparent d02569a89d275b0deec135888f4dadb387e3f780\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532570878 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1550803006 +0900\n\ninit: copy chainstate and blocks/index to datadir if -masterdatadir is used\n\nAlso find and track the last blk/rev files that we rely on from master, as we do not want to load anything beyond that, in case master runs ahead of us at some point.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d73d9773a3ad4e3abbe678456608363fb585331d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d73d9773a3ad4e3abbe678456608363fb585331d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d73d9773a3ad4e3abbe678456608363fb585331d/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d02569a89d275b0deec135888f4dadb387e3f780",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d02569a89d275b0deec135888f4dadb387e3f780",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d02569a89d275b0deec135888f4dadb387e3f780"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 52,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d2c47c66e52a9538693181def8f918f52fa8fcdf",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d73d9773a3ad4e3abbe678456608363fb585331d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d73d9773a3ad4e3abbe678456608363fb585331d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d73d9773a3ad4e3abbe678456608363fb585331d",
        "patch": "@@ -1278,6 +1278,58 @@ bool AppInitMain(InitInterfaces& interfaces)\n             gArgs.GetArg(\"-datadir\", \"\"), fs::current_path().string());\n     }\n \n+    if (g_has_master_datadir) {\n+        // LevelDB does not support readonly access, so we need to copy the entire\n+        // chainstate and blocks/index dirs over to the new location, if not found already\n+        fs::path path = GetDataDir() / \"chainstate\";\n+        if (!fs::exists(path)) {\n+            std::unique_ptr<fsbridge::FileLock> master_lock;\n+            if (!ObtainDirectoryLock(GetMasterDataDir(), \".lock\", master_lock)) {\n+                return InitError(strprintf(_(\"Cannot obtain a lock on master data directory %s. The master must not be running during the initial slave startup. Shut it down, start the slave again, and then start the master back up once the slave has finished copying the chainstate and block index.\"), GetMasterDataDir().string()));\n+            }\n+            fs::path mpath = GetMasterDataDir() / \"chainstate\";\n+            if (!CopyDirectory(path, mpath, \"Copying chainstate from master. This will take some time, and requires roughly 4 GB of disk space \")) {\n+                return InitError(strprintf(\"Failed to create directory %s\",\n+                                           path.string()));\n+            }\n+            path = GetBlocksDir() / \"index\";\n+            mpath = GetMasterBlocksDir() / \"index\";\n+            if (!CopyDirectory(path, mpath, \"Copying block index from master \")) {\n+                return InitError(strprintf(\"Failed to create directory %s\",\n+                                           path.string()));\n+            }\n+            // Find last and next to last block files, mark next to last as final, and\n+            // copy the last over to the slave\n+            int last = g_master_endblock = 0;\n+            for (fs::directory_iterator file(GetMasterBlocksDir()); file != fs::directory_iterator(); ++file) {\n+                std::string s = file->path().filename().string();\n+                // if s is not 'blk?????.dat' we skip\n+                if (s.length() != 12 || s.substr(0, 3) != \"blk\" || s.substr(8) != \".dat\") continue;\n+                last = std::max<uint64_t>(last, std::stoull(s.substr(3, 5)));\n+            }\n+            if (last) {\n+                g_master_endblock = last - 1;\n+                std::string suffix = strprintf(\"%05llu.dat\", last);\n+                fs::copy_file(GetMasterBlocksDir() / (\"blk\" + suffix), GetBlocksDir() / (\"blk\" + suffix));\n+                fs::copy_file(GetMasterBlocksDir() / (\"rev\" + suffix), GetBlocksDir() / (\"rev\" + suffix));\n+            }\n+            path = GetDataDir() / \"master.dat\";\n+            FILE* fp = fsbridge::fopen(path, \"wb\");\n+            if (1 != fwrite(&g_master_endblock, sizeof(g_master_endblock), 1, fp)) {\n+                return InitError(strprintf(\"Failed to write master.dat file %s\", path.string()));\n+            }\n+            fclose(fp);\n+        } else {\n+            path = GetDataDir() / \"master.dat\";\n+            FILE* fp = fsbridge::fopen(path, \"rb\");\n+            if (1 != fread(&g_master_endblock, sizeof(g_master_endblock), 1, fp)) {\n+                return InitError(strprintf(\"Failed to read master.dat file %s\", path.string()));\n+            }\n+            fclose(fp);\n+        }\n+        LogPrintf(\"Master end block file = %llu\\n\", g_master_endblock);\n+    }\n+\n     InitSignatureCache();\n     InitScriptExecutionCache();\n "
      }
    ]
  },
  {
    "sha": "ebb0b3b3e7efa51ce408a405409421b4711f182d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYmIwYjNiM2U3ZWZhNTFjZTQwOGE0MDU0MDk0MjFiNDcxMWYxODJk",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-26T02:08:23Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-02-22T02:36:46Z"
      },
      "message": "validation: use or copy master blocks file when local datadir file does not exist",
      "tree": {
        "sha": "14cb9354a72d155d97abe28c8ba8bbdbfe3c0185",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/14cb9354a72d155d97abe28c8ba8bbdbfe3c0185"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ebb0b3b3e7efa51ce408a405409421b4711f182d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlxvYD4ACgkQV692LbM1\nMyINsg/7B+WwxwkG3oevwuOdkK0W3/l7gsJ6Xgm8m7VdtXkgfC5R56qsmKcxf+91\nyZ/+jpLwKy9QN8Sbu5CUQrdkofEqPiSXc2kmmQ9IWblEhnvRpGa6TqXcfDXvNbST\nG9W3aWbWt+qMKoSuBKquOE0xmeOyqvO2UsTK1K2M0TsfS+uvKA4WSopWjSIk5LOi\njF8Omb4W3XkaVSA1yCMWnbMEw11Nu6PgjWm0WBA8Fr6DWVi0JN+sMROZVi3B/CyS\nGkvBMHDSopM4TpkLcBSg84PR1dIhmYQ/ylhYTxsEQEUdSyXH9le2tokDi7hasEQ1\ntSUwqBUdc21ciBMTnp5fu2UFKX8vRxRDFn8ICpW053jv83vgFIR243KtNp2TzXwJ\n4uez3KMOcz9hW5EMD2pM9QOe5USCJctoa42WTy/MDeeQRNSzh+/gwidCSWIznZTZ\nK/OMnfYS+ujy2NErfnI6lt71Q7p49QDZOs+jjY17VnwBM63y+ifkv/yk6ty5U+Jw\nHe/xkT79WcB9z8erfJOZIou4uITBXx4g61E57R14WkUMyd/4PxoB95hU1sNfGhfo\nq3hVMBkRTbvITjpZk57OjnhA8B747vi0EjLeUMOvePnEifDiT3p4hM9k+V6Xr8O5\nAhwZDO7650tNYVbv2Xn11nBBjMyG8uTrlOy25CBWjz3BqsiI89Y=\n=IVH2\n-----END PGP SIGNATURE-----",
        "payload": "tree 14cb9354a72d155d97abe28c8ba8bbdbfe3c0185\nparent d73d9773a3ad4e3abbe678456608363fb585331d\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532570903 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1550803006 +0900\n\nvalidation: use or copy master blocks file when local datadir file does not exist\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebb0b3b3e7efa51ce408a405409421b4711f182d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ebb0b3b3e7efa51ce408a405409421b4711f182d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebb0b3b3e7efa51ce408a405409421b4711f182d/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d73d9773a3ad4e3abbe678456608363fb585331d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d73d9773a3ad4e3abbe678456608363fb585331d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d73d9773a3ad4e3abbe678456608363fb585331d"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 38,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e8e0a4f72418661569a9158d248368ae092a7dc0",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 2,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebb0b3b3e7efa51ce408a405409421b4711f182d/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebb0b3b3e7efa51ce408a405409421b4711f182d/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ebb0b3b3e7efa51ce408a405409421b4711f182d",
        "patch": "@@ -3783,6 +3783,40 @@ static FILE* OpenDiskFile(const CDiskBlockPos &pos, const char *prefix, bool fRe\n     fs::path path = GetBlockPosFilename(pos, prefix);\n     fs::create_directories(path.parent_path());\n     FILE* file = fsbridge::fopen(path, fReadOnly ? \"rb\": \"rb+\");\n+    if (!file && g_has_master_datadir && pos.nFile <= g_master_endblock) {\n+        // fall back to master source file; we copy it if !fReadOnly, otherwise\n+        // we just open it as is (presuming it exists)\n+        fs::path mpath = GetBlockPosFilename(pos, prefix, true);\n+        FILE* mfile = fsbridge::fopen(mpath, \"rb\");\n+        if (mfile) {\n+            if (fReadOnly) {\n+                // good as is\n+                return mfile;\n+            }\n+            // need writing; copy to own datadir\n+            file = fsbridge::fopen(path, \"wb+\");\n+            uint8_t buffer[16384];\n+            while (!feof(mfile)) {\n+                size_t r = fread(buffer, 1, 16384, mfile);\n+                if (r) {\n+                    if (r != fwrite(buffer, 1, r, file)) {\n+                        fclose(mfile);\n+                        fclose(file);\n+                        LogPrintf(\"Unable to copy %s to %s\\n\", mpath.string(), path.string());\n+                        // Half-copied files are bad so let's delete it\n+                        if (0 != remove(path.string().c_str())) {\n+                            LogPrintf(\"In addition, I was unable to delete the (incomplete) %s\\n\", path.string());\n+                        }\n+                        return nullptr;\n+                    }\n+                }\n+            }\n+            fclose(mfile);\n+            fseek(file, 0, SEEK_SET);\n+            return file;\n+        }\n+        // no master file available\n+    }\n     if (!file && !fReadOnly)\n         file = fsbridge::fopen(path, \"wb+\");\n     if (!file) {\n@@ -3808,9 +3842,10 @@ static FILE* OpenUndoFile(const CDiskBlockPos &pos, bool fReadOnly) {\n     return OpenDiskFile(pos, \"rev\", fReadOnly);\n }\n \n-fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix)\n+fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix, bool readonly)\n {\n-    return GetBlocksDir() / strprintf(\"%s%05u.dat\", prefix, pos.nFile);\n+    const auto& dir = (readonly && g_has_master_datadir && pos.nFile <= g_master_endblock ? GetMasterBlocksDir() : GetBlocksDir());\n+    return dir / strprintf(\"%s%05u.dat\", prefix, pos.nFile);\n }\n \n CBlockIndex * CChainState::InsertBlockIndex(const uint256& hash)"
      },
      {
        "sha": "fee9348b091330b2694be6ef061f8a60681ab8ac",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebb0b3b3e7efa51ce408a405409421b4711f182d/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebb0b3b3e7efa51ce408a405409421b4711f182d/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=ebb0b3b3e7efa51ce408a405409421b4711f182d",
        "patch": "@@ -254,7 +254,7 @@ bool CheckDiskSpace(uint64_t nAdditionalBytes = 0, bool blocks_dir = false);\n /** Open a block file (blk?????.dat) */\n FILE* OpenBlockFile(const CDiskBlockPos &pos, bool fReadOnly = false);\n /** Translation to a filesystem path */\n-fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix);\n+fs::path GetBlockPosFilename(const CDiskBlockPos &pos, const char *prefix, bool readonly = false);\n /** Import blocks from an external file */\n bool LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, CDiskBlockPos *dbp = nullptr);\n /** Ensures we have a genesis block in the block tree, possibly writing one to disk. */"
      }
    ]
  },
  {
    "sha": "b28076d89979d62bedd804fdd56cd7fa058ebc78",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjgwNzZkODk5NzlkNjJiZWRkODA0ZmRkNTZjZDdmYTA1OGViYzc4",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-23T08:11:22Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-02-22T02:36:46Z"
      },
      "message": "test: basic -masterdatadir tests",
      "tree": {
        "sha": "034621b1ec984b9c680565ea07c3b8cd0d9c063a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/034621b1ec984b9c680565ea07c3b8cd0d9c063a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b28076d89979d62bedd804fdd56cd7fa058ebc78",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlxvYD4ACgkQV692LbM1\nMyJHshAAgcL0jWBvtwrfdgpZOk1KwCPboQ+Iwg5tL+FeIEE5lo3u2Ff/JK7Qc2Yo\nWhyTCRUjjjZEUsGhOH82tc3KFIGYvkggZEzpG3pAT4jgSyio39W2FA3uaCDV4nKQ\nAa16lRwaRjBY2w5sHqQpIUO0B7D30kViVqvFmWip1y/64Po+62dlzCTQL4rUeCoJ\nEY+X5dxKpKCrORV+hgseWvngc1S9V0V36wmctdK4JZ/HXAa7BluFZXH3yHuHbP9o\nj6Aa3yF0jgy+ckhcq2IM8548CzPWtFs8gMf9Oo7lPGdS6Nu1gvrXbcudNxTH4CR7\nD5N0tw7yR32aggch6dXD2C21QN0K6+d/8GDyAtYtyvpCD5fXnhy8GHgxV1Exd9ko\ncFvTXkCzCXSrTekmodmTCXlkk2L5LFxnAETjd+luL1laHDZXCrTFVK/cTiNaIiUD\njbIqlHjXYSvHBnpJjNRigwDXbEi/LaXosEahWWvXuI32evu1WidC3jyt7AJs4jpX\nMy7upQXzFiaf82gkwTtkSV8AOyJUQbb2ww9Fp1C7A0xKYzTYIClUCTQp+Myrxiqc\nZxGgLpO8eGSHIC4Hv8bBC0gZWYGPyHVxHyqfllRhsM58qSVLMZ8gYVv8EmuNqDyi\ng86iSaZOTpWfLA+iQZqc7JkbKtGQZR49BN2wiLPkwLx0laShdnU=\n=UsM+\n-----END PGP SIGNATURE-----",
        "payload": "tree 034621b1ec984b9c680565ea07c3b8cd0d9c063a\nparent ebb0b3b3e7efa51ce408a405409421b4711f182d\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532333482 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1550803006 +0900\n\ntest: basic -masterdatadir tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b28076d89979d62bedd804fdd56cd7fa058ebc78",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b28076d89979d62bedd804fdd56cd7fa058ebc78",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b28076d89979d62bedd804fdd56cd7fa058ebc78/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ebb0b3b3e7efa51ce408a405409421b4711f182d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebb0b3b3e7efa51ce408a405409421b4711f182d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ebb0b3b3e7efa51ce408a405409421b4711f182d"
      }
    ],
    "stats": {
      "total": 121,
      "additions": 121,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f2c1651e52b4adef495938245234ade9c5309e72",
        "filename": "test/functional/feature_masterdatadir.py",
        "status": "added",
        "additions": 120,
        "deletions": 0,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b28076d89979d62bedd804fdd56cd7fa058ebc78/test/functional/feature_masterdatadir.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b28076d89979d62bedd804fdd56cd7fa058ebc78/test/functional/feature_masterdatadir.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_masterdatadir.py?ref=b28076d89979d62bedd804fdd56cd7fa058ebc78",
        "patch": "@@ -0,0 +1,120 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the master datadir feature.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    get_datadir_path,\n+    mine_large_block,\n+)\n+import os\n+\n+# Copied from feature_pruning.py; should probably be moved into util.py\n+def calc_usage(blockdir):\n+    return sum(os.path.getsize(blockdir+f) for f in os.listdir(blockdir) if os.path.isfile(os.path.join(blockdir, f))) / (1024. * 1024.)\n+\n+class MasterDatadirTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        self.masterdatadir = get_datadir_path(self.options.tmpdir, 0)\n+        # Create node 0 to mine.\n+        # Create node 1 to test -masterdatadir.\n+        self.extra_args = [[],\n+                           [\"-masterdatadir=\" + self.masterdatadir]]\n+        self.add_nodes(2, self.extra_args)\n+        self.start_node(0)\n+\n+        self.blocks0 = os.path.join(self.nodes[0].datadir, 'regtest', 'blocks', '')\n+        self.blocks1 = os.path.join(self.nodes[1].datadir, 'regtest', 'blocks', '')\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Mining large blocks until we have more than one blk file\")\n+        # Make stuff\n+        self.nodes[0].generate(150)\n+        assert_equal(150, self.nodes[0].getblockcount())\n+        # We want more than one block file, so make a few large blocks\n+        for i in range(150):\n+            mine_large_block(self.nodes[0])\n+            if i % 50 == 0:\n+                self.log.info(\"... %s / 150\", str(i))\n+        assert_equal(300, self.nodes[0].getblockcount())\n+        # Check datadir space use\n+        node0use = calc_usage(self.blocks0)\n+        self.log.info(\"Node uses %s MB\", str(node0use))\n+        assert 140. < node0use < 160.\n+        self.log.info(\"Basic setup test\")\n+        # Shutdown\n+        self.stop_node(0)\n+        # Start up with master dir\n+        self.start_node(1, [\"-masterdatadir=\" + self.masterdatadir])\n+        # Get block count\n+        assert_equal(300, self.nodes[1].getblockcount())\n+        # Check datadir space use\n+        node1use = calc_usage(self.blocks1)\n+        assert node1use < 20.\n+        # Generate blocks\n+        self.nodes[1].generate(100)\n+        assert_equal(400, self.nodes[1].getblockcount())\n+        # Check datadir space use\n+        node1use = calc_usage(self.blocks1)\n+        assert node1use < 20.\n+        # Go back to node 0\n+        self.stop_node(1)\n+        self.start_node(0)\n+        assert_equal(300, self.nodes[0].getblockcount())\n+        # Get both online and synced up\n+        self.start_node(1, [\"-masterdatadir=\" + self.masterdatadir])\n+        connect_nodes(self.nodes[0], 1)\n+        self.sync_all()\n+        assert_equal(400, self.nodes[0].getblockcount())\n+        assert_equal(400, self.nodes[1].getblockcount())\n+        node0use = calc_usage(self.blocks0)\n+        node1use = calc_usage(self.blocks1)\n+        assert 140. < node0use < 160.\n+        assert node1use < 20.\n+\n+        # Test case where master mines an additional block file while slave is\n+        # offline - slave should never reference new master blocks file\n+        self.log.info(\"Post-init master block file increase test\")\n+\n+        # Shut down node 1\n+        self.stop_node(1)\n+        # Make more large blocks\n+        for i in range(150):\n+            mine_large_block(self.nodes[0])\n+            if i % 50 == 0:\n+                self.log.info(\"... %s / 150\", str(i))\n+        node0use = calc_usage(self.blocks0)\n+        self.log.info(\"Node uses %s MB\", str(node0use))\n+        for f in os.listdir(self.blocks0):\n+            print(f)\n+        # Start node 1 back up\n+        self.start_node(1, [\"-masterdatadir=\" + self.masterdatadir])\n+        connect_nodes(self.nodes[0], 1)\n+        self.sync_all()\n+        assert_equal(self.nodes[0].getblockcount(), self.nodes[1].getblockcount())\n+        node1use = calc_usage(self.blocks1)\n+        assert node1use < 180.\n+\n+        # Reindex the blockchain as node 1; it should directly refer to master\n+        # blocks and its own blocks as appropriate\n+        self.stop_node(1)\n+        self.start_node(1, [\"-masterdatadir=\" + self.masterdatadir, \"-reindex\", \"-reindex-chainstate\"])\n+        connect_nodes(self.nodes[0], 1)\n+        self.sync_all()\n+        node1use = calc_usage(self.blocks1)\n+        assert node1use < 180.\n+\n+if __name__ == '__main__':\n+    MasterDatadirTest().main()"
      },
      {
        "sha": "b230d417df92448d257ad62d6140a36c94f7164e",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b28076d89979d62bedd804fdd56cd7fa058ebc78/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b28076d89979d62bedd804fdd56cd7fa058ebc78/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=b28076d89979d62bedd804fdd56cd7fa058ebc78",
        "patch": "@@ -199,6 +199,7 @@\n     # Longest test should go first, to favor running tests in parallel\n     'feature_pruning.py',\n     'feature_dbcrash.py',\n+    'feature_masterdatadir.py',\n ]\n \n # Place EXTENDED_SCRIPTS first since it has the 3 longest running tests"
      }
    ]
  },
  {
    "sha": "d88e6c326da3530009b77ce0fa19b12632854042",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODhlNmMzMjZkYTM1MzAwMDliNzdjZTBmYTE5YjEyNjMyODU0MDQy",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-08-01T09:37:18Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2019-02-22T02:37:11Z"
      },
      "message": "linter: add exception to locale dependent function linter",
      "tree": {
        "sha": "d7094fb155fa9fa79baa09d1ee4296f26ec85bf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7094fb155fa9fa79baa09d1ee4296f26ec85bf1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d88e6c326da3530009b77ce0fa19b12632854042",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlxvYFcACgkQV692LbM1\nMyKnWw//YQC2QSchNUs7L2DHj+TjXsp5m2iGkr0sdecPKtLN5CHojL6PyobxVtPf\nZdIYfiKd+Xn0zK/eSs3/mxn9/neaN23Swd01/pF3YM0Hftgu682BrkYqGy6+OWEl\nAL5kZP4RZfiz8QtM6VSd+amnKtVqpBCDjQPX8I5fhr1aevDjaXKxuY/eM99l0TMr\nlRqFg45v/FBuQhna738mO7hsnfxPCxACd1t7o37tkSOFpHueciDwkqDGNrluUfID\nMbULAba0xAQrXEjoLwA1C/35if01a3tss0eAbjkTX1oWKhVthmPkLhKXB3galsdh\nl5XRrx8WlLUczd0zwJyTjxA6kYRoz6ynv4aOT9pPakEEthgkU6ULPi/M729sSl7P\n0yimt4E6DQLnhQW0kXWNTblPqiG3x6w0QlLjCyMlpOVmB3q3ZBUPNTqwlwCwDTsu\nJXaeSPQggwKKEqQMHvzuKgCo56pwOLT3kGuV6bK7KDVndSejNZeXCQXNh07j58SD\nRq7VEwtWc7h1Rh/4l0Atx82XGxrSmSc+VC3F0MN+fjxLHc6w2NFPCobjbi5UUMby\nNaPhCAz7wZPBVe1BQBtCJCDAkrGLWG7a1SxfsO0Ve9lIaN93/+5TIWPwYHEqlkxx\nubmV50UiTkqzl+yJg9ipGnekA+UHt11ZsrGDV+x7wSumAjpXnsU=\n=kCTk\n-----END PGP SIGNATURE-----",
        "payload": "tree d7094fb155fa9fa79baa09d1ee4296f26ec85bf1\nparent b28076d89979d62bedd804fdd56cd7fa058ebc78\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1533116238 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1550803031 +0900\n\nlinter: add exception to locale dependent function linter\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d88e6c326da3530009b77ce0fa19b12632854042",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d88e6c326da3530009b77ce0fa19b12632854042",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d88e6c326da3530009b77ce0fa19b12632854042/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b28076d89979d62bedd804fdd56cd7fa058ebc78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b28076d89979d62bedd804fdd56cd7fa058ebc78",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b28076d89979d62bedd804fdd56cd7fa058ebc78"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9e228be60e325f739c9ad496f8a852d0d94d72ca",
        "filename": "test/lint/lint-locale-dependence.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d88e6c326da3530009b77ce0fa19b12632854042/test/lint/lint-locale-dependence.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d88e6c326da3530009b77ce0fa19b12632854042/test/lint/lint-locale-dependence.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-locale-dependence.sh?ref=d88e6c326da3530009b77ce0fa19b12632854042",
        "patch": "@@ -9,6 +9,7 @@ KNOWN_VIOLATIONS=(\n     \"src/httprpc.cpp.*trim\"\n     \"src/init.cpp:.*atoi\"\n     \"src/init.cpp:.*fprintf\"\n+    \"src/init.cpp:.*stoull\"\n     \"src/qt/rpcconsole.cpp:.*atoi\"\n     \"src/rest.cpp:.*strtol\"\n     \"src/test/dbwrapper_tests.cpp:.*snprintf\""
      }
    ]
  }
]