[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407010930",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-407010930",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 407010930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzAxMDkzMA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T10:22:00Z",
    "updated_at": "2018-07-23T10:22:00Z",
    "author_association": "MEMBER",
    "body": "Concept ACK!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407010930/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407785624",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-407785624",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 407785624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzc4NTYyNA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-25T15:00:47Z",
    "updated_at": "2019-02-22T04:55:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15118](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15118.html) (Refactor block file logic by jimpo)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407785624/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407955414",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-407955414",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 407955414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzk1NTQxNA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T02:24:06Z",
    "updated_at": "2018-07-26T02:24:06Z",
    "author_association": "MEMBER",
    "body": "@promag \r\n\r\n> What if there is a node (A) running in the master data dir of node (B) and A is writing a block at the same time B is reading?\r\n\r\nI'm not sure what the chances are that this results in actual corruption. The master is safe always, but the slave may end up with a copy that has incomplete data. That depends on whether the master flushes the block file atomically or not, though. I would expect it makes an effort to always keep files in a clean state, in case of crashes and such.\r\n\r\nThat said, the block files are checked on startup and I expect a  corruption would be detected almost immediately, since it is almost guaranteed to be the newest block file.\r\n\r\nI'll experiment a bit with the 'open existing file as readonly' by leaving out the last 1 byte and seeing how it behaves.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407955414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407957987",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-407957987",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 407957987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzk1Nzk4Nw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T02:41:22Z",
    "updated_at": "2018-07-26T03:18:33Z",
    "author_association": "MEMBER",
    "body": "Experiment: skip last byte for case \"!readonly & copy existing\":\r\n\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex b5646f107..7af6956b3 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3804,6 +3804,11 @@ static FILE* OpenDiskFile(const CDiskBlockPos &pos, const char *prefix, bool fRe\r\n             while (!feof(mfile)) {\r\n                 size_t r = fread(buffer, 1, 16384, mfile);\r\n                 if (r) {\r\n+                    // TEST: CORRUPTION\r\n+                    if (r > 0 && r < 16384) {\r\n+                        LogPrintf(\"*** Corrupting file %s by writing %d/%d bytes from master\\n\", path.string(), r-1, r);\r\n+                        r--;\r\n+                    }\r\n                     if (r != fwrite(buffer, 1, r, file)) {\r\n                         fclose(mfile);\r\n                         fclose(file);\r\n```\r\n\r\n\r\nResult: slave node crashes with a 'corrupt block database' error:\r\n```\r\n2018-07-26T02:35:14Z Loaded best chain: hashBestChain=00000000000000000029ac6548add211c4f3d20d20da3d5858c3eda1fb84fece height=529951 date=2018-06-30T22:01:25Z progress=0.977126\r\n2018-07-26T02:35:14Z init message: Rewinding blocks...\r\n2018-07-26T02:35:16Z *** Corrupting file /Users/karljohan-alm/workspace/bitcoin-kw/src/slavedata/blocks/blk01301.dat by writing 5744/5745 bytes from master\r\n2018-07-26T02:35:17Z init message: Verifying blocks...\r\n2018-07-26T02:35:17Z Verifying last 6 blocks at level 3\r\n2018-07-26T02:35:17Z [0%]...ERROR: ReadBlockFromDisk: Deserialize or I/O error - CAutoFile::read: end of file: unspecified iostream_category error at CBlockDiskPos(nFile=1301, nPos=97518532)\r\n2018-07-26T02:35:17Z ERROR: VerifyDB(): *** ReadBlockFromDisk failed at 529951, hash=00000000000000000029ac6548add211c4f3d20d20da3d5858c3eda1fb84fece\r\n2018-07-26T02:35:17Z : Corrupted block database detected.\r\nPlease restart with -reindex or -reindex-chainstate to recover.\r\n: Corrupted block database detected.\r\nPlease restart with -reindex or -reindex-chainstate to recover.\r\n2018-07-26T02:35:17Z Aborted block database rebuild. Exiting.\r\n2018-07-26T02:35:17Z Shutdown: In progress...\r\n2018-07-26T02:35:17Z scheduler thread interrupt\r\n2018-07-26T02:35:17Z Shutdown: done\r\n```\r\n\r\nDisabling corruption patch and restarting results in another crash. Only fix was to -reindex, which initiated a full redownload of blocks (master was pruned).\r\n\r\nI think it would be interesting to patch the 'corrupt!' logic with a fallback to grab master file again before failing. Actually, I think I'm going to do that.\r\n\r\nEdit: I did some testing, and the above idea to copy again does not work, because the only time it copies is when it is about to write something, and it does not check the block file consistency at this time. I.e. it gets a corrupt file, writes to it, closes it, then later opens it, finds that it's corrupted, recopies it, but now it has lost the data it wrote before.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/407957987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408914970",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-408914970",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 408914970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODkxNDk3MA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T15:57:33Z",
    "updated_at": "2018-07-30T15:57:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408914970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409108771",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-409108771",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 409108771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTEwODc3MQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T06:23:30Z",
    "updated_at": "2018-07-31T06:23:30Z",
    "author_association": "MEMBER",
    "body": "Actually, I realized that it should be possible to make a perfectly safe slave instance by checking the master directory for the last block file in existence, and marking that minus 1 as the last available master block file.\r\n\r\nI.e. if master has blk000 ~ blk500, slave will use files blk000 ~ blk499 from master, copy blk500 over the first time it starts up, and then make its own files from there.\r\n\r\nImportant to note is that it will not, for example, try to use master's blk501, in the case where slave is shutdown and master keeps chugging along to the point where it makes a new block file before the slave, something this PR does not actually address.\r\n\r\n*Still* means master should preferably be stopped during initial start-up of slave, but it can run safely without slave risking corruption after slave has finished first startup.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409108771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409184018",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-409184018",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 409184018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTE4NDAxOA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T11:12:34Z",
    "updated_at": "2018-07-31T11:12:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm more worried about hot copying the levelDB part (chainstate/). Imo to be safe, the master must close the leveldb environment.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409184018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409391199",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-409391199",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 409391199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTM5MTE5OQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T22:40:35Z",
    "updated_at": "2018-07-31T22:47:05Z",
    "author_association": "MEMBER",
    "body": "You can't do this while an instance is running on the master (unless you can somehow force it to temporarily close its database environment and pause operations). If you don't need it to work while the master is running you should grab the lock on the master to avoid it.\r\n\r\nAlternatively you can just not copy databases at all, and require a reindex to setup a second datadir.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409391199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409517950",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-409517950",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 409517950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTUxNzk1MA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T09:46:08Z",
    "updated_at": "2018-08-01T10:37:57Z",
    "author_association": "MEMBER",
    "body": "@sipa I am now locking master temporarily while doing the copying, and init-error-shutdown if it is already locked.\r\n\r\nI am also now tracking the last block file that the slave relies on in master, so it won't accidentally start reading from master block files if master runs ahead in file count (e.g. slave writes blk123, master then creates blk124 and slave starts trying to read from it).\r\n\r\n@jonasschnelli \r\n\r\n> I'm more worried about hot copying the levelDB part (chainstate/). Imo to be safe, the master must close the leveldb environment.\r\n\r\nThis should be addressed now that the master is locked before copy.\r\n\r\n@promag \r\n\r\n> What if there is a node (A) running in the master data dir of node (B) and A is writing a block at the same time B is reading?\r\n\r\nThe slave will now copy the very last block file over on initial start. It also holds a lock on the master dir for the duration of these operations, so your concerns have been addressed, I think.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409517950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409827690",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-409827690",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 409827690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTgyNzY5MA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-02T07:04:24Z",
    "updated_at": "2018-08-02T07:04:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kallewoof \r\nDoes the lock works against masters not running this change (0.17 as example)?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409827690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409829934",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-409829934",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 409829934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTgyOTkzNA==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-02T07:14:22Z",
    "updated_at": "2018-08-02T07:14:22Z",
    "author_association": "MEMBER",
    "body": "> Does the lock works against masters not running this change (0.17 as example)?\r\n\r\nYes. The slave locks the master datadir before copying, and after the initial copying is done, it no longer relies on master playing nice. Since the datadir locking is done in older clients as well, this should (1) cause the slave to fail if the master is running when it's started up for the first time, and (2) cause the master to fail to startup if the slave is in the process of copying.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/409829934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468967292",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-468967292",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 468967292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODk2NzI5Mg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-02T22:38:23Z",
    "updated_at": "2019-03-02T22:38:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/468967292/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469005002",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-469005002",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13746",
    "id": 469005002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTAwNTAwMg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-03T09:32:48Z",
    "updated_at": "2019-03-03T09:32:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/469005002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204355839",
    "pull_request_review_id": 139419341,
    "id": 204355839,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDM1NTgzOQ==",
    "diff_hunk": "@@ -226,6 +226,7 @@ std::atomic_bool fImporting(false);\n std::atomic_bool fReindex(false);\n bool fHavePruned = false;\n bool fPruneMode = false;\n+bool has_master_datadir = false;",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "d88e6c326da3530009b77ce0fa19b12632854042",
    "original_commit_id": "3ef0f47d4783efb95913392219fa70847e29941d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use prefix `g_`, `g_has_master_datadir`.",
    "created_at": "2018-07-23T10:40:37Z",
    "updated_at": "2019-02-22T02:46:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r204355839",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204355839"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r204355839"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204355839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 228,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205119781",
    "pull_request_review_id": 139419341,
    "id": 205119781,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTExOTc4MQ==",
    "diff_hunk": "@@ -3787,6 +3788,29 @@ static FILE* OpenDiskFile(const CDiskBlockPos &pos, const char *prefix, bool fRe\n     fs::path path = GetBlockPosFilename(pos, prefix);\n     fs::create_directories(path.parent_path());\n     FILE* file = fsbridge::fopen(path, fReadOnly ? \"rb\": \"rb+\");\n+    if (!file && has_master_datadir) {\n+        // fall back to master source file; we copy it if !fReadOnly, otherwise\n+        // we just open it as is (presuming it exists)\n+        fs::path mpath = GetBlockPosFilename(pos, prefix, true);\n+        FILE* mfile = fsbridge::fopen(mpath, \"rb\");\n+        if (mfile) {\n+            if (fReadOnly) {\n+                // good as is\n+                return mfile;\n+            }\n+            // need writing; copy to own datadir\n+            file = fsbridge::fopen(path, \"wb+\");\n+            uint8_t buffer[16384];\n+            while (!feof(mfile)) {\n+                size_t r = fread(buffer, 1, 16384, mfile);\n+                if (r) fwrite(buffer, 1, r, file);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "d88e6c326da3530009b77ce0fa19b12632854042",
    "original_commit_id": "797c160dbf96ff0ad23e22fb4f21f779ba1ac86d",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should handle failure instead of ignoring? Could lead to corrupt blocks?",
    "created_at": "2018-07-25T14:00:09Z",
    "updated_at": "2019-02-22T02:46:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r205119781",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205119781"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r205119781"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205119781/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3806,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205119910",
    "pull_request_review_id": 139419341,
    "id": 205119910,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTExOTkxMA==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2017 The Bitcoin Core developers",
    "path": "test/functional/feature_masterdatadir.py",
    "position": null,
    "original_position": 2,
    "commit_id": "d88e6c326da3530009b77ce0fa19b12632854042",
    "original_commit_id": "ed4e3909cd239f025102301a1b4201ff7af36323",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "2018",
    "created_at": "2018-07-25T14:00:30Z",
    "updated_at": "2019-02-22T02:46:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r205119910",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205119910"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r205119910"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/205119910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206223503",
    "pull_request_review_id": 141599972,
    "id": 206223503,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjIyMzUwMw==",
    "diff_hunk": "@@ -1256,6 +1260,27 @@ bool AppInitMain()\n             gArgs.GetArg(\"-datadir\", \"\"), fs::current_path().string());\n     }\n \n+    if (g_has_master_datadir) {\n+        // LDB does not support readonly access, so we need to copy the entire",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "d88e6c326da3530009b77ce0fa19b12632854042",
    "original_commit_id": "79af9869d67e8de2707154e6e6728bd9dc9f24cb",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: s/LDB/levelDB",
    "created_at": "2018-07-30T15:54:51Z",
    "updated_at": "2019-02-22T02:46:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r206223503",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206223503"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r206223503"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206223503/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1262,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206225733",
    "pull_request_review_id": 141601138,
    "id": 206225733,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjIyNTczMw==",
    "diff_hunk": "@@ -1256,6 +1260,27 @@ bool AppInitMain()\n             gArgs.GetArg(\"-datadir\", \"\"), fs::current_path().string());\n     }\n \n+    if (g_has_master_datadir) {\n+        // LDB does not support readonly access, so we need to copy the entire\n+        // chainstate and blocks/index dirs over to the new location, if not found already\n+        fs::path path = GetDataDir() / \"chainstate\";\n+        if (!fs::exists(path)) {",
    "path": "src/init.cpp",
    "position": 30,
    "original_position": 30,
    "commit_id": "d88e6c326da3530009b77ce0fa19b12632854042",
    "original_commit_id": "79af9869d67e8de2707154e6e6728bd9dc9f24cb",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Doesn't this copy action require a protection that the masterdatadir is currently not in use/write? If a Bitcoin Core instance is using this (master) datadir it may result in a corrupted copy?",
    "created_at": "2018-07-30T15:57:20Z",
    "updated_at": "2019-02-22T02:46:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r206225733",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206225733"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r206225733"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206225733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1285,
    "original_line": 1285,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206249895",
    "pull_request_review_id": 141628455,
    "id": 206249895,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjI0OTg5NQ==",
    "diff_hunk": "@@ -1256,6 +1260,27 @@ bool AppInitMain()\n             gArgs.GetArg(\"-datadir\", \"\"), fs::current_path().string());\n     }\n \n+    if (g_has_master_datadir) {\n+        // LDB does not support readonly access, so we need to copy the entire\n+        // chainstate and blocks/index dirs over to the new location, if not found already\n+        fs::path path = GetDataDir() / \"chainstate\";\n+        if (!fs::exists(path)) {",
    "path": "src/init.cpp",
    "position": 30,
    "original_position": 30,
    "commit_id": "d88e6c326da3530009b77ce0fa19b12632854042",
    "original_commit_id": "79af9869d67e8de2707154e6e6728bd9dc9f24cb",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. Master is guaranteed to be safe as no write operation is ever done from the slave, but the opposite is not the case. See https://github.com/bitcoin/bitcoin/pull/13746#issuecomment-407957987 for experiment on corruption. There's no good way to recover, as the slave will have already written data and closed the file before realizing it was truncated.\r\n\r\nThe question remains how frequent this kind of race condition is, though.",
    "created_at": "2018-07-30T17:06:32Z",
    "updated_at": "2019-02-22T02:46:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r206249895",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206249895"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r206249895"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/206249895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1285,
    "original_line": 1285,
    "side": "RIGHT",
    "in_reply_to_id": 206225733
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222110718",
    "pull_request_review_id": 160921836,
    "id": 222110718,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjExMDcxOA==",
    "diff_hunk": "@@ -0,0 +1,112 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the master datadir feature.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    get_datadir_path,\n+    mine_large_block,\n+)\n+import os\n+\n+# Copied from feature_pruning.py; should probably be moved into util.py\n+def calc_usage(blockdir):\n+    return sum(os.path.getsize(blockdir+f) for f in os.listdir(blockdir) if os.path.isfile(os.path.join(blockdir, f))) / (1024. * 1024.)\n+\n+class MasterDatadirTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        self.masterdatadir = get_datadir_path(self.options.tmpdir, 0)\n+        # Create node 0 to mine.\n+        # Create node 1 to test -masterdatadir.\n+        self.extra_args = [[],\n+                           [\"-masterdatadir=\" + self.masterdatadir]]\n+        self.add_nodes(2, self.extra_args)\n+        self.start_node(0)\n+\n+        self.blocks0 = os.path.join(self.nodes[0].datadir, 'regtest', 'blocks', '')\n+        self.blocks1 = os.path.join(self.nodes[1].datadir, 'regtest', 'blocks', '')\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Mining large blocks until we have more than one blk file\")\n+        # Make stuff\n+        self.nodes[0].generate(150)\n+        assert_equal(150, self.nodes[0].getblockcount())\n+        # We want more than one block file, so make a few large blocks\n+        for i in range(150):\n+            mine_large_block(self.nodes[0])\n+            if i % 50 == 0:\n+                self.log.info(\"... \" + str(i) + \" / 150\")",
    "path": "test/functional/feature_masterdatadir.py",
    "position": null,
    "original_position": 50,
    "commit_id": "d88e6c326da3530009b77ce0fa19b12632854042",
    "original_commit_id": "0d8b04d60adb8cf9cd1f3deae5c7e2d719ab79ac",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use placeholders in the log message like this:\r\n\r\n```\r\nself.log.info(\"... %s / 150\", i)\r\n```\r\n\r\nIt is the preferred form since it allows for lazy evaluation.\r\n\r\nApplies to all logging calls in this PR :-)\r\n",
    "created_at": "2018-10-02T21:01:49Z",
    "updated_at": "2019-02-22T02:46:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r222110718",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222110718"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r222110718"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/222110718/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 50,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223165744",
    "pull_request_review_id": 162237875,
    "id": 223165744,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzE2NTc0NA==",
    "diff_hunk": "@@ -0,0 +1,112 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the master datadir feature.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    connect_nodes,\n+    get_datadir_path,\n+    mine_large_block,\n+)\n+import os\n+\n+# Copied from feature_pruning.py; should probably be moved into util.py\n+def calc_usage(blockdir):\n+    return sum(os.path.getsize(blockdir+f) for f in os.listdir(blockdir) if os.path.isfile(os.path.join(blockdir, f))) / (1024. * 1024.)\n+\n+class MasterDatadirTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+\n+    def setup_nodes(self):\n+        self.masterdatadir = get_datadir_path(self.options.tmpdir, 0)\n+        # Create node 0 to mine.\n+        # Create node 1 to test -masterdatadir.\n+        self.extra_args = [[],\n+                           [\"-masterdatadir=\" + self.masterdatadir]]\n+        self.add_nodes(2, self.extra_args)\n+        self.start_node(0)\n+\n+        self.blocks0 = os.path.join(self.nodes[0].datadir, 'regtest', 'blocks', '')\n+        self.blocks1 = os.path.join(self.nodes[1].datadir, 'regtest', 'blocks', '')\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Mining large blocks until we have more than one blk file\")\n+        # Make stuff\n+        self.nodes[0].generate(150)\n+        assert_equal(150, self.nodes[0].getblockcount())\n+        # We want more than one block file, so make a few large blocks\n+        for i in range(150):\n+            mine_large_block(self.nodes[0])\n+            if i % 50 == 0:\n+                self.log.info(\"... \" + str(i) + \" / 150\")",
    "path": "test/functional/feature_masterdatadir.py",
    "position": null,
    "original_position": 50,
    "commit_id": "d88e6c326da3530009b77ce0fa19b12632854042",
    "original_commit_id": "0d8b04d60adb8cf9cd1f3deae5c7e2d719ab79ac",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed!",
    "created_at": "2018-10-06T00:44:34Z",
    "updated_at": "2019-02-22T02:46:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r223165744",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223165744"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13746#discussion_r223165744"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13746"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223165744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 50,
    "side": "RIGHT",
    "in_reply_to_id": 222110718
  }
]