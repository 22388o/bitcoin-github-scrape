[
  {
    "sha": "f01d286fb99a444de82c865889d60aacc73afdc4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMDFkMjg2ZmI5OWE0NDRkZTgyYzg2NTg4OWQ2MGFhY2M3M2FmZGM0",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-04-14T19:02:16Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-04-16T23:44:51Z"
      },
      "message": "Prevent consecutive cs_main locks in FlushStateToDisk",
      "tree": {
        "sha": "16a0ceedbb64c782a5dc16af403060e7a8c5c8e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16a0ceedbb64c782a5dc16af403060e7a8c5c8e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f01d286fb99a444de82c865889d60aacc73afdc4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl6Y7fUACgkQQQEIES5+\nqB/Esw//c4YbK7DMAy3gGnf5M/7JczqqJzXkStbJctqygnaqPVaj/dI7eiN8h7Xi\naiW7wwh7kMNXgM03BanssHNe8xjeFesy2fAKOqH3CNs640e3Bngl78TofQw7yEJT\nnp6bkDzB34ZA5lXg1vlIRNZbYJ2VuwIj8+zrHxFDEN/mZFZQWTHpJfUOpveiuo4N\nxGDO26a7Rr67xYvFUWX+jLJk8mrMKVbhKqm7q/bLTsqLZdyvgvf7XSItL1DlwCIp\nNULSaYo8/Vop9D26gHOmyCw2gD9PTj7XceC/bUqcSdEVNfmpSlvYHJa6i93wosM4\nGI6r4Y8VXbOiF2CBIqKFqa9+6tuIG/VsBOGvOkoF6NQFb/PRbDVxO1c5pylyC0kZ\nvOvNEH4Jm3OMakaUdGPgGrp4RJIlDe+WgaooVafMIRMQCeOUhA6ZJLe9NFUywxHL\ntD29u1TIM9SPm2wTfPfjWvDRx2VyGeyTPCRQAK6vRvXc9C7y1rzP6WnveIxYVjY8\nhLrucDbVQDPPz8xFQukJ16FP/T+MuvWGXOYn5bWzQJf2URQYyaoDuLBsjY0Xkh6L\nRmHOl8+x1p871X7bGJf2V2lqtaz61dsmWjDF43K2egr+lKib0KHFqT2t3p8UDLeQ\nJhCmDTTjecMIdxTpi0DCRqHMXBh4E39/D8H1cgUjbzBlJCPOs8Y=\n=lVNn\n-----END PGP SIGNATURE-----",
        "payload": "tree 16a0ceedbb64c782a5dc16af403060e7a8c5c8e1\nparent 4702cadca94520a36bfe979c85750563c30f7c85\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1586890936 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1587080691 +0300\n\nPrevent consecutive cs_main locks in FlushStateToDisk\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f01d286fb99a444de82c865889d60aacc73afdc4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f01d286fb99a444de82c865889d60aacc73afdc4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f01d286fb99a444de82c865889d60aacc73afdc4/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4702cadca94520a36bfe979c85750563c30f7c85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4702cadca94520a36bfe979c85750563c30f7c85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4702cadca94520a36bfe979c85750563c30f7c85"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "5fb19baff639273d18cc99f9d17a384b1df44475",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f01d286fb99a444de82c865889d60aacc73afdc4/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f01d286fb99a444de82c865889d60aacc73afdc4/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=f01d286fb99a444de82c865889d60aacc73afdc4",
        "patch": "@@ -976,7 +976,7 @@ static UniValue gettxoutsetinfo(const JSONRPCRequest& request)\n     UniValue ret(UniValue::VOBJ);\n \n     CCoinsStats stats;\n-    ::ChainstateActive().ForceFlushStateToDisk();\n+    WITH_LOCK(::cs_main, ::ChainstateActive().ForceFlushStateToDisk());\n \n     CCoinsView* coins_view = WITH_LOCK(cs_main, return &ChainstateActive().CoinsDB());\n     if (GetUTXOStats(coins_view, stats)) {"
      },
      {
        "sha": "807b76651d7d83631aa0a1da4714d02bc7f57b4e",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f01d286fb99a444de82c865889d60aacc73afdc4/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f01d286fb99a444de82c865889d60aacc73afdc4/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=f01d286fb99a444de82c865889d60aacc73afdc4",
        "patch": "@@ -2234,7 +2234,7 @@ bool CChainState::FlushStateToDisk(\n     FlushStateMode mode,\n     int nManualPruneHeight)\n {\n-    LOCK(cs_main);\n+    AssertLockHeld(::cs_main);\n     assert(this->CanFlushToDisk());\n     static int64_t nLastWrite = 0;\n     static int64_t nLastFlush = 0;\n@@ -2895,6 +2895,7 @@ bool CChainState::ActivateBestChain(BlockValidationState &state, const CChainPar\n     CheckBlockIndex(chainparams.GetConsensus());\n \n     // Write changes periodically to disk, after relay.\n+    LOCK(::cs_main);\n     if (!FlushStateToDisk(chainparams, state, FlushStateMode::PERIODIC)) {\n         return false;\n     }\n@@ -4503,6 +4504,7 @@ bool CChainState::RewindBlockIndex(const CChainParams& params)\n         LimitValidationInterfaceQueue();\n \n         // Occasionally flush state to disk.\n+        LOCK(::cs_main);\n         if (!FlushStateToDisk(params, state, FlushStateMode::PERIODIC)) {\n             LogPrintf(\"RewindBlockIndex: unable to flush state to disk (%s)\\n\", state.ToString());\n             return false;"
      },
      {
        "sha": "3c1df6abc88cf3a635cc383781fa7f4d3ca02b0f",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f01d286fb99a444de82c865889d60aacc73afdc4/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f01d286fb99a444de82c865889d60aacc73afdc4/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=f01d286fb99a444de82c865889d60aacc73afdc4",
        "patch": "@@ -271,7 +271,7 @@ void PruneOneBlockFile(const int fileNumber) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune);\n \n /** Prune block files up to a given height */\n-void PruneBlockFilesManual(int nManualPruneHeight);\n+void PruneBlockFilesManual(int nManualPruneHeight) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n /** (try to) add transaction to memory pool\n  * plTxnReplaced will be appended to with all transactions replaced from mempool **/\n@@ -672,14 +672,14 @@ class CChainState {\n         const CChainParams& chainparams,\n         BlockValidationState &state,\n         FlushStateMode mode,\n-        int nManualPruneHeight = 0);\n+        int nManualPruneHeight = 0) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     //! Unconditionally flush all changes to disk.\n-    void ForceFlushStateToDisk();\n+    void ForceFlushStateToDisk() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     //! Prune blockfiles from the disk if necessary and then flush chainstate changes\n     //! if we pruned.\n-    void PruneAndFlush();\n+    void PruneAndFlush() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     /**\n      * Make the best chain active, in multiple steps. The result is either failure"
      }
    ]
  },
  {
    "sha": "31a92b2d4b85e23fe36d7c078138e6bcb4b1e194",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMWE5MmIyZDRiODVlMjNmZTM2ZDdjMDc4MTM4ZTZiY2I0YjFlMTk0",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-04-16T23:36:30Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-04-17T10:14:07Z"
      },
      "message": "Prevent consecutive cs_main locks in UnloadBlockIndex",
      "tree": {
        "sha": "82dca119c4d893c0c224f6cf0147018919467053",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82dca119c4d893c0c224f6cf0147018919467053"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl6ZgXMACgkQQQEIES5+\nqB/buA/9HgWF/LcVTqm1UPHKHN3vTlRijUNCP/C6oQkeH3BR74nvQioSh28AZZtv\n1p9PhowquDwkY1tza8eS/IBtqwq7xXohvMvj2AB1M/uiXjD/DM1w/KNLjmqmmOTO\nxTJn/DtUELC7bgPQbKSYu1X9oe05exoKqNf5myx+K9aebxNLifPUyZeC+AkbEZwq\nyRprxRX0IIgkB6gFjF9YiM58I7EXKa+SDC9O2b4xbcYuzYHTBsonKEgKWuRPoMpt\n9zGCw7HA4HnDjY3jqc9vm+390Hjn8b8Wbe7rxPOTZL5FwVQq6DJ//P+bdx7lPtg8\n79T1AG1Rp0bZ6mOSy3RNcAJTUgMJnp7cRekqH1FBp/gqJ52kUqicgr//YtRSIUpx\nvWiQHwCHMLJ6c4QkUvHl4PM2uagPf0yjrjYtwUt6DZCdy3Vkh2c7ib++bM1du36Y\nHEuhuNQWRupb0PrBdZ7bWTMZcWj+1iXbrKyJjUZpBPHto16xQWw+XQNdPXmOP7jy\nNDrYn9/zod7/7xIHTG66Z9Zuz3P//f8PQMGRgsynGP/QavTe00nNJYMbl+w2sni9\nU4wevhsthbhF6HhS07flg0YwRZEeaEDEr9ZeZFosQbLsW8qW7EkYlqTobxpUNDij\n1aIqhyUNkgj5I7+1hCT3MiydMNRsmazOUnQCBMcZO4Sfn1aAza0=\n=rxdb\n-----END PGP SIGNATURE-----",
        "payload": "tree 82dca119c4d893c0c224f6cf0147018919467053\nparent f01d286fb99a444de82c865889d60aacc73afdc4\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1587080190 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1587118447 +0300\n\nPrevent consecutive cs_main locks in UnloadBlockIndex\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f01d286fb99a444de82c865889d60aacc73afdc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f01d286fb99a444de82c865889d60aacc73afdc4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f01d286fb99a444de82c865889d60aacc73afdc4"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f767299c416c28a197935e2f12c5cadc5320db34",
        "filename": "src/qt/test/apptests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194/src/qt/test/apptests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194/src/qt/test/apptests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/apptests.cpp?ref=31a92b2d4b85e23fe36d7c078138e6bcb4b1e194",
        "patch": "@@ -81,8 +81,9 @@ void AppTests::appTests()\n \n     // Reset global state to avoid interfering with later tests.\n     AbortShutdown();\n+    LOCK(::cs_main);\n     UnloadBlockIndex();\n-    WITH_LOCK(::cs_main, g_chainman.Reset());\n+    g_chainman.Reset();\n }\n \n //! Entry point for BitcoinGUI tests."
      },
      {
        "sha": "77a29a9096be19fadd05e097143d794c0bd44ba8",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=31a92b2d4b85e23fe36d7c078138e6bcb4b1e194",
        "patch": "@@ -161,7 +161,7 @@ TestingSetup::~TestingSetup()\n     m_node.banman.reset();\n     m_node.mempool = nullptr;\n     m_node.scheduler.reset();\n-    UnloadBlockIndex();\n+    WITH_LOCK(::cs_main, UnloadBlockIndex());\n     g_chainman.Reset();\n     pblocktree.reset();\n }"
      },
      {
        "sha": "6780070e4d7f7325341d0cc936df77f2555e0fa1",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=31a92b2d4b85e23fe36d7c078138e6bcb4b1e194",
        "patch": "@@ -4544,7 +4544,7 @@ void CChainState::UnloadBlockIndex() {\n // block index state\n void UnloadBlockIndex()\n {\n-    LOCK(cs_main);\n+    AssertLockHeld(::cs_main);\n     g_chainman.Unload();\n     pindexBestInvalid = nullptr;\n     pindexBestHeader = nullptr;"
      },
      {
        "sha": "87b22031d05a8b2d8b41d87b27d6985d32c5aad3",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=31a92b2d4b85e23fe36d7c078138e6bcb4b1e194",
        "patch": "@@ -240,7 +240,7 @@ bool LoadGenesisBlock(const CChainParams& chainparams);\n  * initializing state if we're running with -reindex. */\n bool LoadBlockIndex(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n /** Unload database information */\n-void UnloadBlockIndex();\n+void UnloadBlockIndex() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n /** Run an instance of the script checking thread */\n void ThreadScriptCheck(int worker_num);\n /** Retrieve a transaction (from memory pool, or from disk, if possible) */"
      }
    ]
  },
  {
    "sha": "e09b98605f6fdd2ad3bcdf4c68d229905f7a29cd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDliOTg2MDVmNmZkZDJhZDNiY2RmNGM2OGQyMjk5MDVmN2EyOWNk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-04-16T23:57:58Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-04-17T10:14:22Z"
      },
      "message": "Prevent consecutive cs_main locks in CChainState::ReplayBlocks",
      "tree": {
        "sha": "208aa472f251fee43f8e6ea1c4bd45c621a2207c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/208aa472f251fee43f8e6ea1c4bd45c621a2207c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e09b98605f6fdd2ad3bcdf4c68d229905f7a29cd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl6ZgX4ACgkQQQEIES5+\nqB83ig//Z99P9YgiMd//lYI/enweNNiQZd57Ddcw3IXwxTQXPkT109arpdfG1kEO\ny21uq1hfDp1pyykhku/ZSrXWXl/qdTYe43x1l8JJd8ZGdjbxYe3b4dhGEwGN8bMk\n6vMnfPRI6DKD4cuIthDjY43WDTs4puN3UsWU3HVfY4tJKGgvMCRObVhwSRycfbkR\nc0+t807nJM0evOoT+rym+DUrfI6ke3K1ri+M6VilhA15LR0AkJbJZkNqqc1UYVWq\nyKjhQtbgbFVaB6gJcy3tKDNWMbL44nMV3Rbi2ZAGzVA5XXOTNtEiLLQS5bpn2ypQ\n5lZvrDQBB+xYo+LLPz2piwONQc+B468/Xcm/CDXScnuXtejuxvLZoq8WJZ1aVtT2\nKoPk9Kajc7uDsZ9mnxuMRoUeQmP+eapp/Q/iPN6UuEED4a68ppooe2cg0AOoPSwe\nK2WyLU5utb6mlHjp9YTatQbr1Cgqx5ZGrtZmnNlCOLEXP+dbt3f191U+1CsJA6Me\n78wlKTyFXqV6lhg1aLW8U7svLRjyQgvRqQEP8atTLxE7+hjmmfSI21gqMg0lKDBZ\nmNbFObW2kRxxhxKsdebPrIHBrdIbgLQ6QkU6DZ319DbeAZuPbLVsz//DaD7dD65A\nI+FLftbegBtL6EkXeO+s54JItkcT7zyY7CvZwYAFGTpNvCiPvSU=\n=cNWG\n-----END PGP SIGNATURE-----",
        "payload": "tree 208aa472f251fee43f8e6ea1c4bd45c621a2207c\nparent 31a92b2d4b85e23fe36d7c078138e6bcb4b1e194\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1587081478 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1587118462 +0300\n\nPrevent consecutive cs_main locks in CChainState::ReplayBlocks\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e09b98605f6fdd2ad3bcdf4c68d229905f7a29cd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e09b98605f6fdd2ad3bcdf4c68d229905f7a29cd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e09b98605f6fdd2ad3bcdf4c68d229905f7a29cd/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "31a92b2d4b85e23fe36d7c078138e6bcb4b1e194",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31a92b2d4b85e23fe36d7c078138e6bcb4b1e194"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "85da9a9b354631c60c7ebd8d9f8f829895e36fdc",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e09b98605f6fdd2ad3bcdf4c68d229905f7a29cd/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e09b98605f6fdd2ad3bcdf4c68d229905f7a29cd/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=e09b98605f6fdd2ad3bcdf4c68d229905f7a29cd",
        "patch": "@@ -4330,7 +4330,7 @@ bool CChainState::RollforwardBlock(const CBlockIndex* pindex, CCoinsViewCache& i\n \n bool CChainState::ReplayBlocks(const CChainParams& params)\n {\n-    LOCK(cs_main);\n+    AssertLockHeld(::cs_main);\n \n     CCoinsView& db = this->CoinsDB();\n     CCoinsViewCache cache(&db);"
      },
      {
        "sha": "aadf294ae41f1f94b4d2e816411d80517cf22187",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e09b98605f6fdd2ad3bcdf4c68d229905f7a29cd/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e09b98605f6fdd2ad3bcdf4c68d229905f7a29cd/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=e09b98605f6fdd2ad3bcdf4c68d229905f7a29cd",
        "patch": "@@ -716,7 +716,7 @@ class CChainState {\n     void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n     /** Replay blocks that aren't fully applied to the database. */\n-    bool ReplayBlocks(const CChainParams& params);\n+    bool ReplayBlocks(const CChainParams& params) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n     bool RewindBlockIndex(const CChainParams& params) LOCKS_EXCLUDED(cs_main);\n     bool LoadGenesisBlock(const CChainParams& chainparams);\n "
      }
    ]
  }
]