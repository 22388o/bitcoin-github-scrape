[
  {
    "sha": "8b57013473c44fc87c9f1c4611224a89187c289a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjU3MDEzNDczYzQ0ZmM4N2M5ZjFjNDYxMTIyNGE4OTE4N2MyODlh",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-11T10:08:37Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-11T10:08:37Z"
      },
      "message": "[net processing] Remove nStartingHeight check from block relay\n\nnStartingHeight was introduced in commit 7a47324c7 (Bitcoin version\n0.2.9, P2P version 209) with the comment \"better prevention of inventory\nrelaying during initial download\". At that time, there was no function\nto determine whether the node was still in Initial Block Download, so to\nprevent syncing nodes from relaying old blocks to their peers, a check\nwas added to never relay a block to a peer where the height was lower\nthan 2000 less than the peer's best block. That check was updated\nseveral times in later commits to ensure that we weren't relaying blocks\nbefore the latest checkpoint if the peer didn't provide a\nstartingheight. The checkpoint comparison was changed to compare with an\nestimate of the highest block in commit eae82d8e.\n\nIn commit 202e0194, all block relay was gated on being out of Initial\nBlock Download. In commit 0278fb5f, the comparison to nBlockEstimate was\nremoved since \"we already checked IsIBD()\".\n\nWe can remove the check against nStartingHeight entirely. If the node is\nout of Initial Block Download, then its tip height must have been within\n24 hours of current time, so should not be more than ~144 blocks behind\nthe most work tip.",
      "tree": {
        "sha": "c41e9ad4f882c354158fae1fb1c2b8e6db1ec9f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c41e9ad4f882c354158fae1fb1c2b8e6db1ec9f3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b57013473c44fc87c9f1c4611224a89187c289a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b57013473c44fc87c9f1c4611224a89187c289a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b57013473c44fc87c9f1c4611224a89187c289a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b57013473c44fc87c9f1c4611224a89187c289a/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a48063671770e77266f8e441cc15487d1fff5ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a48063671770e77266f8e441cc15487d1fff5ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a48063671770e77266f8e441cc15487d1fff5ed"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 4,
      "deletions": 6
    },
    "files": [
      {
        "sha": "6e9d8119ab45a07ab81b9240592de45a9a47b187",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b57013473c44fc87c9f1c4611224a89187c289a/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b57013473c44fc87c9f1c4611224a89187c289a/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=8b57013473c44fc87c9f1c4611224a89187c289a",
        "patch": "@@ -1295,8 +1295,9 @@ void PeerManager::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_\n void PeerManager::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     const int nNewHeight = pindexNew->nHeight;\n     m_connman.SetBestHeight(nNewHeight);\n-\n     SetServiceFlagsIBDCache(!fInitialDownload);\n+\n+    // Relay inventory, but don't relay old inventory during initial block download.\n     if (!fInitialDownload) {\n         // Find the hashes of all blocks that weren't previously in the best chain.\n         std::vector<uint256> vHashes;\n@@ -1310,13 +1311,10 @@ void PeerManager::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInde\n                 break;\n             }\n         }\n-        // Relay inventory, but don't relay old inventory during initial block download.\n         m_connman.ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n             LOCK(pnode->cs_inventory);\n-            if (nNewHeight > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : 0)) {\n-                for (const uint256& hash : reverse_iterate(vHashes)) {\n-                    pnode->vBlockHashesToAnnounce.push_back(hash);\n-                }\n+            for (const uint256& hash : reverse_iterate(vHashes)) {\n+                pnode->vBlockHashesToAnnounce.push_back(hash);\n             }\n         });\n         m_connman.WakeMessageHandler();"
      }
    ]
  },
  {
    "sha": "94d2cc35be98d3b20db88b2a3745322e5b0aa9d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NGQyY2MzNWJlOThkM2IyMGRiODhiMmEzNzQ1MzIyZTViMGFhOWQ0",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-11T10:35:32Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-11T10:35:32Z"
      },
      "message": "[net processing] Remove unnecesary nNewHeight variable in UpdatedBlockTip()",
      "tree": {
        "sha": "6517e8aff8981a1790b3aa0a79962e82cbb872a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6517e8aff8981a1790b3aa0a79962e82cbb872a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/94d2cc35be98d3b20db88b2a3745322e5b0aa9d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94d2cc35be98d3b20db88b2a3745322e5b0aa9d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/94d2cc35be98d3b20db88b2a3745322e5b0aa9d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94d2cc35be98d3b20db88b2a3745322e5b0aa9d4/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b57013473c44fc87c9f1c4611224a89187c289a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b57013473c44fc87c9f1c4611224a89187c289a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b57013473c44fc87c9f1c4611224a89187c289a"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "acacb7c592030afdff69f97bffa1c23059087c64",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/94d2cc35be98d3b20db88b2a3745322e5b0aa9d4/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/94d2cc35be98d3b20db88b2a3745322e5b0aa9d4/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=94d2cc35be98d3b20db88b2a3745322e5b0aa9d4",
        "patch": "@@ -1293,8 +1293,7 @@ void PeerManager::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_\n  * in ::ChainActive() to our peers.\n  */\n void PeerManager::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n-    const int nNewHeight = pindexNew->nHeight;\n-    m_connman.SetBestHeight(nNewHeight);\n+    m_connman.SetBestHeight(pindexNew->nHeight);\n     SetServiceFlagsIBDCache(!fInitialDownload);\n \n     // Relay inventory, but don't relay old inventory during initial block download.\n@@ -1311,7 +1310,7 @@ void PeerManager::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInde\n                 break;\n             }\n         }\n-        m_connman.ForEachNode([nNewHeight, &vHashes](CNode* pnode) {\n+        m_connman.ForEachNode([&vHashes](CNode* pnode) {\n             LOCK(pnode->cs_inventory);\n             for (const uint256& hash : reverse_iterate(vHashes)) {\n                 pnode->vBlockHashesToAnnounce.push_back(hash);"
      }
    ]
  },
  {
    "sha": "f6360088de8ca02f9d198da2f8cca4ea8d64c992",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjM2MDA4OGRlOGNhMDJmOWQxOThkYTJmOGNjYTRlYThkNjRjOTky",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-11T10:40:19Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-11T10:40:19Z"
      },
      "message": "[net processing] Clarify UpdatedBlockTip()",
      "tree": {
        "sha": "0be5609078427d7388e1842eef5b1f3ceca376b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0be5609078427d7388e1842eef5b1f3ceca376b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6360088de8ca02f9d198da2f8cca4ea8d64c992",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6360088de8ca02f9d198da2f8cca4ea8d64c992",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f6360088de8ca02f9d198da2f8cca4ea8d64c992",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6360088de8ca02f9d198da2f8cca4ea8d64c992/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "94d2cc35be98d3b20db88b2a3745322e5b0aa9d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94d2cc35be98d3b20db88b2a3745322e5b0aa9d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/94d2cc35be98d3b20db88b2a3745322e5b0aa9d4"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 22,
      "deletions": 20
    },
    "files": [
      {
        "sha": "7947470ba084258f946a9f2f6f8b0223de4bcc46",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 20,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6360088de8ca02f9d198da2f8cca4ea8d64c992/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6360088de8ca02f9d198da2f8cca4ea8d64c992/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=f6360088de8ca02f9d198da2f8cca4ea8d64c992",
        "patch": "@@ -1296,28 +1296,30 @@ void PeerManager::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInde\n     m_connman.SetBestHeight(pindexNew->nHeight);\n     SetServiceFlagsIBDCache(!fInitialDownload);\n \n-    // Relay inventory, but don't relay old inventory during initial block download.\n-    if (!fInitialDownload) {\n-        // Find the hashes of all blocks that weren't previously in the best chain.\n-        std::vector<uint256> vHashes;\n-        const CBlockIndex *pindexToAnnounce = pindexNew;\n-        while (pindexToAnnounce != pindexFork) {\n-            vHashes.push_back(pindexToAnnounce->GetBlockHash());\n-            pindexToAnnounce = pindexToAnnounce->pprev;\n-            if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n-                // Limit announcements in case of a huge reorganization.\n-                // Rely on the peer's synchronization mechanism in that case.\n-                break;\n-            }\n+    // Don't relay inventory during initial block download.\n+    if (fInitialDownload) return;\n+\n+    // Find the hashes of all blocks that weren't previously in the best chain.\n+    std::vector<uint256> vHashes;\n+    const CBlockIndex *pindexToAnnounce = pindexNew;\n+    while (pindexToAnnounce != pindexFork) {\n+        vHashes.push_back(pindexToAnnounce->GetBlockHash());\n+        pindexToAnnounce = pindexToAnnounce->pprev;\n+        if (vHashes.size() == MAX_BLOCKS_TO_ANNOUNCE) {\n+            // Limit announcements in case of a huge reorganization.\n+            // Rely on the peer's synchronization mechanism in that case.\n+            break;\n         }\n-        m_connman.ForEachNode([&vHashes](CNode* pnode) {\n-            LOCK(pnode->cs_inventory);\n-            for (const uint256& hash : reverse_iterate(vHashes)) {\n-                pnode->vBlockHashesToAnnounce.push_back(hash);\n-            }\n-        });\n-        m_connman.WakeMessageHandler();\n     }\n+\n+    // Relay to all peers\n+    m_connman.ForEachNode([&vHashes](CNode* pnode) {\n+        LOCK(pnode->cs_inventory);\n+        for (const uint256& hash : reverse_iterate(vHashes)) {\n+            pnode->vBlockHashesToAnnounce.push_back(hash);\n+        }\n+    });\n+    m_connman.WakeMessageHandler();\n }\n \n /**"
      }
    ]
  }
]