[
  {
    "sha": "e98e3dde6a976a2c8f266ee963d6931fd4b37262",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOThlM2RkZTZhOTc2YTJjOGYyNjZlZTk2M2Q2OTMxZmQ0YjM3MjYy",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-02-12T05:36:55Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-02-12T05:38:01Z"
      },
      "message": "Bugfix: Only use git for build info if the repository is actually the right one\n\nAlso adds ability to disable check with BITCOIN_GENBUILD_NO_GIT=1 in the environment",
      "tree": {
        "sha": "09ad0be5d31b545c1edd0b552d4618a5753d8daa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/09ad0be5d31b545c1edd0b552d4618a5753d8daa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e98e3dde6a976a2c8f266ee963d6931fd4b37262",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e98e3dde6a976a2c8f266ee963d6931fd4b37262",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e98e3dde6a976a2c8f266ee963d6931fd4b37262",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e98e3dde6a976a2c8f266ee963d6931fd4b37262/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41cced21063a89992ef393dda4fffc44ff60c7c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41cced21063a89992ef393dda4fffc44ff60c7c3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41cced21063a89992ef393dda4fffc44ff60c7c3"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ae36acfce68faf78153896a7a4909603c3bd6321",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -70,6 +70,7 @@ script: |\n   done\n \n   # Create the release tarball using (arbitrarily) the first host\n+  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n   make dist"
      },
      {
        "sha": "04453527f55d3f4263babd183e4313fc38f16078",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -80,6 +80,7 @@ script: |\n   done\n \n   # Create the release tarball using (arbitrarily) the first host\n+  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n   make dist"
      },
      {
        "sha": "95caa984eb97050e8dab511c3c931940e6ef4391",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -73,6 +73,7 @@ script: |\n   done\n \n   # Create the release tarball using (arbitrarily) the first host\n+  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n   make dist"
      },
      {
        "sha": "4965ef14cd205242d5d0c1ff5ea5bf6f32b902a3",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -16,7 +16,7 @@ fi\n DESC=\"\"\n SUFFIX=\"\"\n LAST_COMMIT_DATE=\"\"\n-if [ -e \"$(which git 2>/dev/null)\" -a \"$(git rev-parse --is-inside-work-tree 2>/dev/null)\" = \"true\" ]; then\n+if [ \"${BITCOIN_GENBUILD_NO_GIT}\" != \"1\" -a -e \"$(which git 2>/dev/null)\" -a \"$(git rev-parse --is-inside-work-tree 2>/dev/null)\" = \"true\" -a \"$(git status --porcelain -u no --ignored \"$0\" | cut -b1)\" != \"?\" ]; then\n     # clean 'dirty' status of touched files that haven't been modified\n     git diff >/dev/null 2>/dev/null \n "
      }
    ]
  },
  {
    "sha": "df634908ba758232413c50e8f1f7a80d546d777b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjYzNDkwOGJhNzU4MjMyNDEzYzUwZThmMWY3YTgwZDU0NmQ3Nzdi",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-08-09T05:45:50Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-08-09T05:45:50Z"
      },
      "message": "Merge tag 'branch-0.13' into bugfix_gitdir",
      "tree": {
        "sha": "92cccae378b192f5f70986d2167209cbfd24ae08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92cccae378b192f5f70986d2167209cbfd24ae08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df634908ba758232413c50e8f1f7a80d546d777b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df634908ba758232413c50e8f1f7a80d546d777b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df634908ba758232413c50e8f1f7a80d546d777b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df634908ba758232413c50e8f1f7a80d546d777b/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "e4382fbef56a0e04b0ed834e8b3a3a16f81db149",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4382fbef56a0e04b0ed834e8b3a3a16f81db149",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e4382fbef56a0e04b0ed834e8b3a3a16f81db149"
      }
    ],
    "stats": {
      "total": 229778,
      "additions": 128819,
      "deletions": 100959
    },
    "files": [
      {
        "sha": "ce40019dc314fffd33880246f28592ebe7b58b23",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -85,15 +85,13 @@ src/test/buildenv.py\n # Resources cpp\n qrc_*.cpp\n \n-# Qt creator\n-*.pro.user\n-\n # Mac specific\n .DS_Store\n build\n \n #lcov\n *.gcno\n+*.gcda\n /*.info\n test_bitcoin.coverage/\n total.coverage/\n@@ -104,10 +102,16 @@ linux-coverage-build\n linux-build\n win32-build\n qa/pull-tester/run-bitcoind-for-test.sh\n-qa/pull-tester/tests-config.sh\n+qa/pull-tester/tests_config.py\n qa/pull-tester/cache/*\n qa/pull-tester/test.*/*\n+qa/tmp\n+cache/\n+share/BitcoindComparisonTool.jar\n \n !src/leveldb*/Makefile\n \n /doc/doxygen/\n+\n+libbitcoinconsensus.pc\n+contrib/devtools/split-debug.sh"
      },
      {
        "sha": "a6c51753b6727c29008099ac6a299ca1327c4345",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 45,
        "deletions": 38,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,66 +1,73 @@\n-# errata:\n-# - A travis bug causes caches to trample eachother when using the same\n-#   compiler key (which we don't use anyway). This is worked around for now by\n-#   replacing the \"compilers\" with a build name prefixed by the no-op \":\"\n-#   command. See: https://github.com/travis-ci/casher/issues/6\n+sudo: required\n+dist: trusty\n+\n+#workaround for https://github.com/travis-ci/travis-ci/issues/5227\n+addons:\n+  hostname: bitcoin-tester\n \n os: linux\n-language: cpp\n+language: generic\n+cache:\n+  directories:\n+  - depends/built\n+  - depends/sdk-sources\n+  - $HOME/.ccache\n env:\n   global:\n     - MAKEJOBS=-j3\n     - RUN_TESTS=false\n+    - CHECK_DOC=0\n+    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n     - CCACHE_SIZE=100M\n     - CCACHE_TEMPDIR=/tmp/.ccache-temp\n     - CCACHE_COMPRESS=1\n     - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n     - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n-cache:\n-  apt: true\n-  directories:\n-  - depends/built\n-  - depends/sdk-sources\n-  - $HOME/.ccache\n-matrix:\n-  fast_finish: true\n-  include:\n-    - compiler: \": ARM\"\n-      env: HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat\"\n-    - compiler: \": bitcoind\"\n-      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat CPPFLAGS=-DDEBUG_LOCKORDER\"\n-    - compiler: \": No wallet\"\n-      env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat\"\n-    - compiler: \": 32-bit + dash\"\n-      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat\" USE_SHELL=\"/bin/dash\"\n-    - compiler: \": Cross-Mac\"\n-      env: HOST=x86_64-apple-darwin11 PACKAGES=\"gcc-multilib g++-multilib cmake libcap-dev libz-dev libbz2-dev\" OSX_SDK=10.7 GOAL=\"deploy\"\n-    - compiler: \": Win64\"\n-      env: HOST=x86_64-w64-mingw32 PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui\" MAKEJOBS=\"-j2\"\n-    - compiler: \": Win32\"\n-      env: HOST=i686-w64-mingw32 PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui\" MAKEJOBS=\"-j2\"\n+    - PYTHON_DEBUG=1\n+    - WINEDEBUG=fixme-all\n+  matrix:\n+# ARM\n+    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+# Win32\n+    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6 bc openjdk-7-jre-headless\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+# 32-bit + dash\n+    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python3-zmq openjdk-7-jre-headless\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+# Win64\n+    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6 bc openjdk-7-jre-headless\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+# bitcoind\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python3-zmq openjdk-7-jre-headless\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+# No wallet\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\" openjdk-7-jre-headless python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+# Cross-Mac\n+    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\n+\n+before_install:\n+    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n install:\n+    - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n+    - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n before_script:\n     - unset CC; unset CXX\n+    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n     - mkdir -p depends/SDKs depends/sdk-sources\n-    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then wget $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -O depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n+    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n     - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n     - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n script:\n+    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n     - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n     - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n     - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n-    - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then export CCACHE_READONLY=1; fi\n     - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n-    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-    - make distdir PACKAGE=bitcoin VERSION=$HOST\n-    - cd bitcoin-$HOST\n-    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+    - mkdir build && cd build\n+    - ../configure $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.sh; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then make $MAKEJOBS check VERBOSE=1; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py --coverage; fi\n after_script:\n-    - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then (echo \"Upload goes here. Something like: scp -r $BASE_OUTDIR server\" || echo \"upload failed\"); fi\n+    - echo $TRAVIS_COMMIT_RANGE\n+    - echo $TRAVIS_COMMIT_LOG"
      },
      {
        "sha": "3ce2ae71d0adb099127e5d848684e2d6bab1d376",
        "filename": ".tx/config",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,7 +1,7 @@\n [main]\n host = https://www.transifex.com\n \n-[bitcoin.qt-translation-010x]\n+[bitcoin.qt-translation-013x]\n file_filter = src/qt/locale/bitcoin_<lang>.ts\n source_file = src/qt/locale/bitcoin_en.ts\n source_lang = en"
      },
      {
        "sha": "5c1138b812d471475c46874c900a3db138d6495a",
        "filename": "CONTRIBUTING.md",
        "status": "added",
        "additions": 124,
        "deletions": 0,
        "changes": 124,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,124 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of \u201cCore developers\u201d in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repository \u201cmaintainers\u201d who are responsible for merging pull requests as well as a \u201clead maintainer\u201d who is responsible for the release cycle, overall merging, moderation and appointment of maintainers.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the \u201ccontributor workflow\u201d where everyone without exception contributes patch proposals using \u201cpull requests\u201d. This facilitates social contribution, easy testing and peer review.\n+\n+To contribute a patch, the workflow is as follows:\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches\n+\n+The project coding conventions in the [developer notes](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example `refs #1234`, or `fixes #4321`. Using the `fixes` or `closes` keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    Net: Automatically create hidden service, listen on Tor\n+    Qt: Add feed bump button\n+    Trivial: Fix typo in main.cpp\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback.\n+\n+Squashing Commits\n+---------------------------\n+If your pull request is accepted for merging, you may be asked by a maintainer to squash and or [rebase](https://git-scm.com/docs/git-rebase) your commits before it will be merged. The basic squashing workflow is shown below.\n+\n+    git checkout your_branch_name\n+    git rebase -i HEAD~n\n+    # n is normally the number of commits in the pull\n+    # set commits from 'pick' to 'squash', save and quit\n+    # on the next screen, edit/refine commit messages\n+    # save and quit\n+    git push -f # (force push to GitHub)\n+\n+The length of time required for peer review is unpredictable and will vary from pull request to pull request.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+\n+###Refactoring\n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify.\n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as libsecp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead.\n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression.\n+\n+Patches that change Bitcoin consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.\n+\n+\n+###Peer Review\n+\n+Anyone may participate in peer review which is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:\n+\n+  - ACK means \"I have tested the code and I agree it should be merged\";\n+  - NACK means \"I disagree this should be merged\", and must be accompanied by sound technical justification. NACKs without accompanying reasoning may be disregarded;\n+  - utACK means \"I have not tested the code, but I have reviewed it and it looks OK, I agree it can be merged\";\n+  - Concept ACK means \"I agree in the general principle of this pull request\";\n+  - Nit refers to trivial, often non-blocking issues.\n+\n+Reviewers should include the commit hash which they reviewed in their comments.\n+\n+Project maintainers reserve the right to weigh the opinions of peer reviewers using common sense judgement and also may weight based on meritocracy: Those that have demonstrated a deeper commitment and understanding towards the project (over time) or have clear domain expertise may naturally have more weight, as one would expect in all walks of life.\n+\n+Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review requirements, keeping in mind that mistakes could be very costly to the wider community. This includes refactoring of consensus critical code.\n+\n+Where a patch set proposes to change the Bitcoin consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.\n+\n+\n+Release Policy\n+--------------\n+\n+The project leader is the release manager for each Bitcoin Core release."
      },
      {
        "sha": "c6be8e5470890cecdc7156030e54527d267338eb",
        "filename": "COPYING",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,4 +1,6 @@\n-Copyright (c) 2009-2014 Bitcoin Developers\n+The MIT License (MIT)\n+\n+Copyright (c) 2009-2016 The Bitcoin Core developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "b10d0850664c84c6f3840e87b9dc30ee5670c214",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 68,
        "deletions": 34,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -3,58 +3,66 @@ SUBDIRS = src\n .PHONY: deploy FORCE\n \n GZIP_ENV=\"-9n\"\n+export PYTHONPATH\n \n-BITCOIND_BIN=$(top_builddir)/src/bitcoind$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/bitcoin-qt$(EXEEXT)\n-BITCOIN_CLI_BIN=$(top_builddir)/src/bitcoin-cli$(EXEEXT)\n+if BUILD_BITCOIN_LIBS\n+pkgconfigdir = $(libdir)/pkgconfig\n+pkgconfig_DATA = libbitcoinconsensus.pc\n+endif\n+\n+BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n+BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n+BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n \n+empty :=\n+space := $(empty) $(empty)\n+\n OSX_APP=Bitcoin-Qt.app\n-OSX_DMG=Bitcoin-Qt.dmg\n+OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n+OSX_DMG = $(OSX_VOLNAME).dmg\n+OSX_BACKGROUND_SVG=background.svg\n+OSX_BACKGROUND_IMAGE=background.tiff\n+OSX_BACKGROUND_IMAGE_DPIS=36 72\n+OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n-OSX_PLIST=$(top_srcdir)/share/qt/Info.plist #not installed\n+OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n \n DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n \n+BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n+           $(top_srcdir)/contrib/devtools/security-check.py\n+\n WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n   $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n   $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n   $(top_srcdir)/doc/README_windows.txt\n \n OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n-  $(top_srcdir)/contrib/macdeploy/background.png \\\n-  $(top_srcdir)/contrib/macdeploy/DS_Store \\\n+  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n+  $(OSX_DSSTORE_GEN) \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n \n COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n   leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info block_test_filtered.info \\\n+  baseline_filtered.info block_test_filtered.info rpc_test.info rpc_test_filtered.info \\\n   leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n \n dist-hook:\n-\t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n-\t-$(MAKE) -C $(top_distdir)/src/secp256k1 distclean\n \t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n \n-distcheck-hook:\n-\t$(MKDIR_P) $(top_distdir)/_build/src/leveldb\n-\tcp -rf $(top_srcdir)/src/leveldb/* $(top_distdir)/_build/src/leveldb/\n-\t-$(MAKE) -C $(top_distdir)/_build/src/leveldb clean\n-\n-distcleancheck:\n-\t@:\n-\n $(BITCOIN_WIN_INSTALLER): all-recursive\n \t$(MKDIR_P) $(top_builddir)/release\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n-\t@test -f $(MAKENSIS) && $(MAKENSIS) $(top_builddir)/share/setup.nsi || \\\n+\t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n \t  echo error: could not build $@\n+\t@echo built $@\n \n $(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n \t$(MAKE) -C src $(patsubst src/%,%,$@)\n@@ -65,7 +73,7 @@ $(OSX_APP)/Contents/PkgInfo:\n \n $(OSX_APP)/Contents/Resources/empty.lproj:\n \t$(MKDIR_P) $(@D)\n-\t@touch $@\n+\t@touch $@ \n \n $(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n \t$(MKDIR_P) $(@D)\n@@ -79,18 +87,25 @@ $(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n \t$(MKDIR_P) $(@D)\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n \n+$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n+\t$(MKDIR_P) $(@D)\n+\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n+\n OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n   $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n+\n+osx_volname:\n+\techo $(OSX_VOLNAME) >$@\n \n if BUILD_DARWIN\n $(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\t$(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2\n+\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n \n deploydir: $(OSX_DMG)\n else\n APP_DIST_DIR=$(top_builddir)/dist\n-APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/background.png $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n+APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n \n $(APP_DIST_DIR)/Applications:\n \t@rm -f $@\n@@ -99,16 +114,20 @@ $(APP_DIST_DIR)/Applications:\n $(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n \n $(OSX_DMG): $(APP_DIST_EXTRAS)\n-\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"Bitcoin-Qt\" -no-pad -r -apple -o $@ dist\n+\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n \n-$(APP_DIST_DIR)/.background/background.png:\n+dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n+OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n+$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n \t$(MKDIR_P) $(@D)\n-\t$(INSTALL) $(top_srcdir)/contrib/macdeploy/background.png $@\n-$(APP_DIST_DIR)/.DS_Store:\n-\t$(INSTALL) $(top_srcdir)/contrib/macdeploy/DS_Store $@\n+\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n+\n+$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n+\t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n \n $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n+\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n \n deploydir: $(APP_DIST_EXTRAS)\n endif\n@@ -158,19 +177,28 @@ test_bitcoin_filtered.info: test_bitcoin.info\n \n block_test.info: test_bitcoin_filtered.info\n \t$(MKDIR_P) qa/tmp\n-\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool 0\n+\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n \t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n \t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n \n block_test_filtered.info: block_test.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n+rpc_test.info: test_bitcoin_filtered.info\n+\t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n+\t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n+\t$(LCOV) -z -d $(abs_builddir)/src\n+\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+rpc_test_filtered.info: rpc_test.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n \t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n \n-total_coverage.info:  baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info rpc_test_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n \t$(GENHTML) -s $< -o $(@D)\n@@ -190,11 +218,17 @@ check-local:\n \t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n endif\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.sh qa/pull-tester/run-bitcoin-cli qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+dist_noinst_SCRIPTS = autogen.sh\n+\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n \n+# This file is problematic for out-of-tree builds if it exists.\n+DISTCLEANFILES = qa/pull-tester/tests_config.pyc\n+\n .INTERMEDIATE: $(COVERAGE_INFO)\n \n clean-local:\n-\trm -rf test_bitcoin.coverage/ total.coverage/ $(OSX_APP)\n+\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)\n+\trm -rf qa/pull-tester/__pycache__"
      },
      {
        "sha": "3c41649c1b8d94c9dae46e1a1fbb7117e4841f0a",
        "filename": "README.md",
        "status": "modified",
        "additions": 26,
        "deletions": 67,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -3,49 +3,41 @@ Bitcoin Core integration/staging tree\n \n [![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n \n-https://www.bitcoin.org\n-\n-Copyright (c) 2009-2014 Bitcoin Core Developers\n+https://bitcoincore.org\n \n What is Bitcoin?\n ----------------\n \n-Bitcoin is an experimental new digital currency that enables instant payments to\n+Bitcoin is an experimental digital currency that enables instant payments to\n anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://www.bitcoin.org/en/download.\n+the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n+[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n \n License\n -------\n \n Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n-information or see http://opensource.org/licenses/MIT.\n+information or see https://opensource.org/licenses/MIT.\n \n-Development process\n+Development Process\n -------------------\n \n-Developers work in their own trees, then submit pull requests when they think\n-their feature or bug fix is ready.\n-\n-If it is a simple/trivial/non-controversial change, then one of the Bitcoin\n-development team members simply pulls it.\n+The `master` branch is regularly built and tested, but is not guaranteed to be\n+completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n+regularly to indicate new official, stable release versions of Bitcoin Core.\n \n-If it is a *more complicated or potentially controversial* change, then the patch\n-submitter will be asked to start a discussion (if they haven't already) on the\n-[mailing list](http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development).\n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n \n-The patch will be accepted if there is broad consensus that it is a good thing.\n-Developers should expect to rework and resubmit patches if the code doesn't\n-match the project's coding conventions (see [doc/coding.md](doc/coding.md)) or are\n-controversial.\n+The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+should be used to discuss complicated or controversial changes before working\n+on a patch set.\n \n-The `master` branch is regularly built and tested, but is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin.\n+Developer IRC can be found on Freenode at #bitcoin-core-dev.\n \n Testing\n -------\n@@ -57,20 +49,22 @@ lots of money.\n \n ### Automated Testing\n \n-Developers are strongly encouraged to write unit tests for new code, and to\n-submit new unit tests for old code. Unit tests can be compiled and run (assuming they weren't disabled in configure) with: `make check`\n+Developers are strongly encouraged to write [unit tests](/doc/unit-tests.md) for new code, and to\n+submit new unit tests for old code. Unit tests can be compiled and run\n+(assuming they weren't disabled in configure) with: `make check`\n+\n+There are also [regression and integration tests](/qa) of the RPC interface, written\n+in Python, that are run automatically on the build server.\n+These tests can be run (if the [test dependencies](/qa) are installed) with: `qa/pull-tester/rpc-tests.py`\n \n-Every pull request is built for both Windows and Linux on a dedicated server,\n-and unit and sanity tests are automatically run. The binaries produced may be\n-used for manual QA testing \u2014 a link to them will appear in a comment on the\n-pull request posted by [BitcoinPullTester](https://github.com/BitcoinPullTester). See https://github.com/TheBlueMatt/test-scripts\n-for the build/test scripts.\n+The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.\n \n ### Manual Quality Assurance (QA) Testing\n \n-Large changes should have a test plan, and should be tested by somebody other\n-than the developer who wrote the code.\n-See https://github.com/bitcoin/QA/ for how to create a test plan.\n+Changes should be tested by somebody other than the developer who wrote the\n+code. This is especially important for large or high-risk changes. It is useful\n+to add a test plan to the pull request description if testing the changes is\n+not straightforward.\n \n Translations\n ------------\n@@ -85,38 +79,3 @@ Translations are periodically pulled from Transifex and merged into the git repo\n pull from Transifex would automatically overwrite them again.\n \n Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators).\n-\n-Development tips and tricks\n----------------------------\n-\n-**compiling for debugging**\n-\n-Run configure with the --enable-debug option, then make. Or run configure with\n-CXXFLAGS=\"-g -ggdb -O0\" or whatever debug flags you need.\n-\n-**debug.log**\n-\n-If the code is behaving strangely, take a look in the debug.log file in the data directory;\n-error and debugging messages are written there.\n-\n-The -debug=... command-line option controls debugging; running with just -debug will turn\n-on all categories (and give you a very large debug.log file).\n-\n-The Qt code routes qDebug() output to debug.log under category \"qt\": run with -debug=qt\n-to see it.\n-\n-**testnet and regtest modes**\n-\n-Run with the -testnet option to run with \"play bitcoins\" on the test network, if you\n-are testing multi-machine code that needs to operate across the internet.\n-\n-If you are testing something that can run on one machine, run with the -regtest option.\n-In regression test mode, blocks can be created on-demand; see qa/rpc-tests/ for tests\n-that run in -regtest mode.\n-\n-**DEBUG_LOCKORDER**\n-\n-Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n-can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure\n-CXXFLAGS=\"-DDEBUG_LOCKORDER -g\") inserts run-time checks to keep track of which locks\n-are held, and adds warnings to the debug.log file if inconsistencies are detected."
      },
      {
        "sha": "46e36ff5b216c5e42c56c133ca84c52a57d19b50",
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -6,4 +6,6 @@ if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n   LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n   export LIBTOOLIZE\n fi\n+which autoreconf >/dev/null || \\\n+  (echo \"configuration failed, please install autoconf first\" && exit 1)\n autoreconf --install --force --warnings=all"
      },
      {
        "sha": "45d948933d18f42ff946aebd0d17626fd9c64d3f",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "modified",
        "additions": 15,
        "deletions": 5,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -33,7 +33,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 23\n+#serial 26\n \n AC_DEFUN([AX_BOOST_BASE],\n [\n@@ -95,8 +95,8 @@ if test \"x$want_boost\" = \"xyes\"; then\n       x86_64)\n         libsubdirs=\"lib64 libx32 lib lib64\"\n         ;;\n-      ppc64|s390x|sparc64|aarch64)\n-        libsubdirs=\"lib64 lib lib64\"\n+      ppc64|s390x|sparc64|aarch64|ppc64le)\n+        libsubdirs=\"lib64 lib lib64 ppc64le\"\n         ;;\n     esac\n \n@@ -170,7 +170,7 @@ if test \"x$want_boost\" = \"xyes\"; then\n         AC_MSG_RESULT(yes)\n     succeeded=yes\n     found_system=yes\n-        ],[:\n+        ],[\n         ])\n     AC_LANG_POP([C++])\n \n@@ -179,6 +179,10 @@ if test \"x$want_boost\" = \"xyes\"; then\n     dnl if we found no boost with system layout we search for boost libraries\n     dnl built and installed without the --layout=system option or for a staged(not installed) version\n     if test \"x$succeeded\" != \"xyes\"; then\n+        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+        LDFLAGS=\"$LDFLAGS_SAVED\"\n+        BOOST_CPPFLAGS=\n+        BOOST_LDFLAGS=\n         _version=0\n         if test \"$ac_boost_path\" != \"\"; then\n             if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n@@ -191,6 +195,12 @@ if test \"x$want_boost\" = \"xyes\"; then\n                     VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n                     BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n                 done\n+                dnl if nothing found search for layout used in Windows distributions\n+                if test -z \"$BOOST_CPPFLAGS\"; then\n+                    if test -d \"$ac_boost_path/boost\" && test -r \"$ac_boost_path/boost\"; then\n+                        BOOST_CPPFLAGS=\"-I$ac_boost_path\"\n+                    fi\n+                fi\n             fi\n         else\n             if test \"$cross_compiling\" != yes; then\n@@ -253,7 +263,7 @@ if test \"x$want_boost\" = \"xyes\"; then\n             AC_MSG_RESULT(yes)\n         succeeded=yes\n         found_system=yes\n-            ],[:\n+            ],[\n             ])\n         AC_LANG_POP([C++])\n     fi"
      },
      {
        "sha": "2bdb5937162e4207cf0f96586bc343653ae30da1",
        "filename": "build-aux/m4/ax_boost_program_options.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_program_options.m4?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -29,7 +29,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 22\n+#serial 24\n \n AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n [\n@@ -63,9 +63,9 @@ AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n \t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n \t\t\t\t\t   ax_cv_boost_program_options,\n \t\t\t\t\t   [AC_LANG_PUSH(C++)\n-\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options.hpp>\n+\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options/errors.hpp>\n                                                           ]],\n-                                  [[boost::program_options::options_description generic(\"Generic options\");\n+                                  [[boost::program_options::error err(\"Error message\");\n                                    return 0;]])],\n                            ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n \t\t\t\t\tAC_LANG_POP([C++])\n@@ -74,7 +74,6 @@ AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n \t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n                   BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n                 if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n-                ax_lib=\n                 for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.dylib* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.dylib.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n                      ax_lib=${libextension}\n \t\t\t\t    AC_CHECK_LIB($ax_lib, exit,"
      },
      {
        "sha": "1c05450cbe1d5cc11a257f5c02284900890a973e",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -31,7 +31,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 17\n+#serial 18\n \n AC_DEFUN([AX_BOOST_SYSTEM],\n [\n@@ -68,9 +68,10 @@ AC_DEFUN([AX_BOOST_SYSTEM],\n \t\t\t\t\t   ax_cv_boost_system,\n         [AC_LANG_PUSH([C++])\n \t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\t\t\t CXXFLAGS=\n \n \t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n-                                   [[boost::system::system_category]])],\n+\t\t\t\t    [[boost::system::error_category *a = 0;]])],\n                    ax_cv_boost_system=yes, ax_cv_boost_system=no)\n \t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n              AC_LANG_POP([C++])"
      },
      {
        "sha": "ca3639715e7243fa4343eb2e7f3de53927cc9d4a",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -4,7 +4,7 @@\n #\n # SYNOPSIS\n #\n-#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n #\n # DESCRIPTION\n #\n@@ -19,6 +19,8 @@\n #   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n #   force the compiler to issue an error when a bad flag is given.\n #\n+#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.\n+#\n #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n #   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n #\n@@ -53,19 +55,19 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 2\n+#serial 4\n \n AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n-[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n   ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n   _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n+  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n     [AS_VAR_SET(CACHEVAR,[yes])],\n     [AS_VAR_SET(CACHEVAR,[no])])\n   _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+AS_VAR_IF(CACHEVAR,yes,\n   [m4_default([$2], :)],\n   [m4_default([$3], :)])\n AS_VAR_POPDEF([CACHEVAR])dnl"
      },
      {
        "sha": "eb01a6ce135eca0fdde834b00c21b12202b09f3d",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -4,7 +4,7 @@\n #\n # SYNOPSIS\n #\n-#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n #\n # DESCRIPTION\n #\n@@ -19,6 +19,8 @@\n #   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n #   issue an error when a bad flag is given.\n #\n+#   INPUT gives an alternative input source to AC_LINK_IFELSE.\n+#\n #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n #   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n #\n@@ -53,18 +55,19 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 2\n+#serial 4\n \n AC_DEFUN([AX_CHECK_LINK_FLAG],\n-[AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n   ax_check_save_flags=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $4 $1\"\n-  AC_LINK_IFELSE([AC_LANG_PROGRAM()],\n+  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n     [AS_VAR_SET(CACHEVAR,[yes])],\n     [AS_VAR_SET(CACHEVAR,[no])])\n   LDFLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+AS_VAR_IF(CACHEVAR,yes,\n   [m4_default([$2], :)],\n   [m4_default([$3], :)])\n AS_VAR_POPDEF([CACHEVAR])dnl"
      },
      {
        "sha": "ca1d5ee2b6d1ae107504d4ab433bc5f6fd629f61",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -4,7 +4,7 @@\n #\n # SYNOPSIS\n #\n-#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n #\n # DESCRIPTION\n #\n@@ -19,6 +19,8 @@\n #   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n #   preprocessor to issue an error when a bad flag is given.\n #\n+#   INPUT gives an alternative input source to AC_PREPROC_IFELSE.\n+#\n #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n #   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n #\n@@ -53,19 +55,19 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 2\n+#serial 4\n \n AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n-[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n   ax_check_save_flags=$CPPFLAGS\n   CPPFLAGS=\"$CPPFLAGS $4 $1\"\n-  AC_PREPROC_IFELSE([AC_LANG_PROGRAM()],\n+  AC_PREPROC_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n     [AS_VAR_SET(CACHEVAR,[yes])],\n     [AS_VAR_SET(CACHEVAR,[no])])\n   CPPFLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+AS_VAR_IF(CACHEVAR,yes,\n   [m4_default([$2], :)],\n   [m4_default([$3], :)])\n AS_VAR_POPDEF([CACHEVAR])dnl"
      },
      {
        "sha": "2c18e49c56c0bc732a4bd6534ae03f871d42c6db",
        "filename": "build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "status": "added",
        "additions": 562,
        "deletions": 0,
        "changes": 562,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_cxx_compile_stdcxx.m4?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,562 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CXX_COMPILE_STDCXX(VERSION, [ext|noext], [mandatory|optional])\n+#\n+# DESCRIPTION\n+#\n+#   Check for baseline language coverage in the compiler for the specified\n+#   version of the C++ standard.  If necessary, add switches to CXX and\n+#   CXXCPP to enable support.  VERSION may be '11' (for the C++11 standard)\n+#   or '14' (for the C++14 standard).\n+#\n+#   The second argument, if specified, indicates whether you insist on an\n+#   extended mode (e.g. -std=gnu++11) or a strict conformance mode (e.g.\n+#   -std=c++11).  If neither is specified, you get whatever works, with\n+#   preference for an extended mode.\n+#\n+#   The third argument, if specified 'mandatory' or if left unspecified,\n+#   indicates that baseline support for the specified C++ standard is\n+#   required and that the macro should error out if no mode with that\n+#   support is found.  If specified 'optional', then configuration proceeds\n+#   regardless, after defining HAVE_CXX${VERSION} if and only if a\n+#   supporting mode is found.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Benjamin Kosnik <bkoz@redhat.com>\n+#   Copyright (c) 2012 Zack Weinberg <zackw@panix.com>\n+#   Copyright (c) 2013 Roy Stogner <roystgnr@ices.utexas.edu>\n+#   Copyright (c) 2014, 2015 Google Inc.; contributed by Alexey Sokolov <sokolov@google.com>\n+#   Copyright (c) 2015 Paul Norman <penorman@mac.com>\n+#   Copyright (c) 2015 Moritz Klammler <moritz@klammler.eu>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 4\n+\n+dnl  This macro is based on the code from the AX_CXX_COMPILE_STDCXX_11 macro\n+dnl  (serial version number 13).\n+\n+AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n+  m4_if([$1], [11], [],\n+        [$1], [14], [],\n+        [$1], [17], [m4_fatal([support for C++17 not yet implemented in AX_CXX_COMPILE_STDCXX])],\n+        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl\n+  m4_if([$2], [], [],\n+        [$2], [ext], [],\n+        [$2], [noext], [],\n+        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl\n+  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],\n+        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],\n+        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],\n+        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])\n+  AC_LANG_PUSH([C++])dnl\n+  ac_success=no\n+  AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,\n+  ax_cv_cxx_compile_cxx$1,\n+  [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+    [ax_cv_cxx_compile_cxx$1=yes],\n+    [ax_cv_cxx_compile_cxx$1=no])])\n+  if test x$ax_cv_cxx_compile_cxx$1 = xyes; then\n+    ac_success=yes\n+  fi\n+\n+  m4_if([$2], [noext], [], [dnl\n+  if test x$ac_success = xno; then\n+    for switch in -std=gnu++$1 -std=gnu++0x; do\n+      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n+      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n+                     $cachevar,\n+        [ac_save_CXX=\"$CXX\"\n+         CXX=\"$CXX $switch\"\n+         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+          [eval $cachevar=yes],\n+          [eval $cachevar=no])\n+         CXX=\"$ac_save_CXX\"])\n+      if eval test x\\$$cachevar = xyes; then\n+        CXX=\"$CXX $switch\"\n+        if test -n \"$CXXCPP\" ; then\n+          CXXCPP=\"$CXXCPP $switch\"\n+        fi\n+        ac_success=yes\n+        break\n+      fi\n+    done\n+  fi])\n+\n+  m4_if([$2], [ext], [], [dnl\n+  if test x$ac_success = xno; then\n+    dnl HP's aCC needs +std=c++11 according to:\n+    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf\n+    dnl Cray's crayCC needs \"-h std=c++11\"\n+    for switch in -std=c++$1 -std=c++0x +std=c++$1 \"-h std=c++$1\"; do\n+      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n+      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n+                     $cachevar,\n+        [ac_save_CXX=\"$CXX\"\n+         CXX=\"$CXX $switch\"\n+         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+          [eval $cachevar=yes],\n+          [eval $cachevar=no])\n+         CXX=\"$ac_save_CXX\"])\n+      if eval test x\\$$cachevar = xyes; then\n+        CXX=\"$CXX $switch\"\n+        if test -n \"$CXXCPP\" ; then\n+          CXXCPP=\"$CXXCPP $switch\"\n+        fi\n+        ac_success=yes\n+        break\n+      fi\n+    done\n+  fi])\n+  AC_LANG_POP([C++])\n+  if test x$ax_cxx_compile_cxx$1_required = xtrue; then\n+    if test x$ac_success = xno; then\n+      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])\n+    fi\n+  fi\n+  if test x$ac_success = xno; then\n+    HAVE_CXX$1=0\n+    AC_MSG_NOTICE([No compiler with C++$1 support was found])\n+  else\n+    HAVE_CXX$1=1\n+    AC_DEFINE(HAVE_CXX$1,1,\n+              [define if the compiler supports basic C++$1 syntax])\n+  fi\n+  AC_SUBST(HAVE_CXX$1)\n+])\n+\n+\n+dnl  Test body for checking C++11 support\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_11],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+)\n+\n+\n+dnl  Test body for checking C++14 support\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_14],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n+)\n+\n+\n+dnl  Tests for new features in C++11\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_11], [[\n+\n+// If the compiler admits that it is not ready for C++11, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201103L\n+\n+#error \"This is not a C++11 compiler\"\n+\n+#else\n+\n+namespace cxx11\n+{\n+\n+  namespace test_static_assert\n+  {\n+\n+    template <typename T>\n+    struct check\n+    {\n+      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n+    };\n+\n+  }\n+\n+  namespace test_final_override\n+  {\n+\n+    struct Base\n+    {\n+      virtual void f() {}\n+    };\n+\n+    struct Derived : public Base\n+    {\n+      virtual void f() override {}\n+    };\n+\n+  }\n+\n+  namespace test_double_right_angle_brackets\n+  {\n+\n+    template < typename T >\n+    struct check {};\n+\n+    typedef check<void> single_type;\n+    typedef check<check<void>> double_type;\n+    typedef check<check<check<void>>> triple_type;\n+    typedef check<check<check<check<void>>>> quadruple_type;\n+\n+  }\n+\n+  namespace test_decltype\n+  {\n+\n+    int\n+    f()\n+    {\n+      int a = 1;\n+      decltype(a) b = 2;\n+      return a + b;\n+    }\n+\n+  }\n+\n+  namespace test_type_deduction\n+  {\n+\n+    template < typename T1, typename T2 >\n+    struct is_same\n+    {\n+      static const bool value = false;\n+    };\n+\n+    template < typename T >\n+    struct is_same<T, T>\n+    {\n+      static const bool value = true;\n+    };\n+\n+    template < typename T1, typename T2 >\n+    auto\n+    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n+    {\n+      return a1 + a2;\n+    }\n+\n+    int\n+    test(const int c, volatile int v)\n+    {\n+      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n+      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n+      auto ac = c;\n+      auto av = v;\n+      auto sumi = ac + av + 'x';\n+      auto sumf = ac + av + 1.0;\n+      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n+      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n+      return (sumf > 0.0) ? sumi : add(c, v);\n+    }\n+\n+  }\n+\n+  namespace test_noexcept\n+  {\n+\n+    int f() { return 0; }\n+    int g() noexcept { return 0; }\n+\n+    static_assert(noexcept(f()) == false, \"\");\n+    static_assert(noexcept(g()) == true, \"\");\n+\n+  }\n+\n+  namespace test_constexpr\n+  {\n+\n+    template < typename CharT >\n+    unsigned long constexpr\n+    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n+    {\n+      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n+    }\n+\n+    template < typename CharT >\n+    unsigned long constexpr\n+    strlen_c(const CharT *const s) noexcept\n+    {\n+      return strlen_c_r(s, 0UL);\n+    }\n+\n+    static_assert(strlen_c(\"\") == 0UL, \"\");\n+    static_assert(strlen_c(\"1\") == 1UL, \"\");\n+    static_assert(strlen_c(\"example\") == 7UL, \"\");\n+    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n+\n+  }\n+\n+  namespace test_rvalue_references\n+  {\n+\n+    template < int N >\n+    struct answer\n+    {\n+      static constexpr int value = N;\n+    };\n+\n+    answer<1> f(int&)       { return answer<1>(); }\n+    answer<2> f(const int&) { return answer<2>(); }\n+    answer<3> f(int&&)      { return answer<3>(); }\n+\n+    void\n+    test()\n+    {\n+      int i = 0;\n+      const int c = 0;\n+      static_assert(decltype(f(i))::value == 1, \"\");\n+      static_assert(decltype(f(c))::value == 2, \"\");\n+      static_assert(decltype(f(0))::value == 3, \"\");\n+    }\n+\n+  }\n+\n+  namespace test_uniform_initialization\n+  {\n+\n+    struct test\n+    {\n+      static const int zero {};\n+      static const int one {1};\n+    };\n+\n+    static_assert(test::zero == 0, \"\");\n+    static_assert(test::one == 1, \"\");\n+\n+  }\n+\n+  namespace test_lambdas\n+  {\n+\n+    void\n+    test1()\n+    {\n+      auto lambda1 = [](){};\n+      auto lambda2 = lambda1;\n+      lambda1();\n+      lambda2();\n+    }\n+\n+    int\n+    test2()\n+    {\n+      auto a = [](int i, int j){ return i + j; }(1, 2);\n+      auto b = []() -> int { return '0'; }();\n+      auto c = [=](){ return a + b; }();\n+      auto d = [&](){ return c; }();\n+      auto e = [a, &b](int x) mutable {\n+        const auto identity = [](int y){ return y; };\n+        for (auto i = 0; i < a; ++i)\n+          a += b--;\n+        return x + identity(a + b);\n+      }(0);\n+      return a + b + c + d + e;\n+    }\n+\n+    int\n+    test3()\n+    {\n+      const auto nullary = [](){ return 0; };\n+      const auto unary = [](int x){ return x; };\n+      using nullary_t = decltype(nullary);\n+      using unary_t = decltype(unary);\n+      const auto higher1st = [](nullary_t f){ return f(); };\n+      const auto higher2nd = [unary](nullary_t f1){\n+        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n+      };\n+      return higher1st(nullary) + higher2nd(nullary)(unary);\n+    }\n+\n+  }\n+\n+  namespace test_variadic_templates\n+  {\n+\n+    template <int...>\n+    struct sum;\n+\n+    template <int N0, int... N1toN>\n+    struct sum<N0, N1toN...>\n+    {\n+      static constexpr auto value = N0 + sum<N1toN...>::value;\n+    };\n+\n+    template <>\n+    struct sum<>\n+    {\n+      static constexpr auto value = 0;\n+    };\n+\n+    static_assert(sum<>::value == 0, \"\");\n+    static_assert(sum<1>::value == 1, \"\");\n+    static_assert(sum<23>::value == 23, \"\");\n+    static_assert(sum<1, 2>::value == 3, \"\");\n+    static_assert(sum<5, 5, 11>::value == 21, \"\");\n+    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n+\n+  }\n+\n+  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n+  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n+  // because of this.\n+  namespace test_template_alias_sfinae\n+  {\n+\n+    struct foo {};\n+\n+    template<typename T>\n+    using member = typename T::member_type;\n+\n+    template<typename T>\n+    void func(...) {}\n+\n+    template<typename T>\n+    void func(member<T>*) {}\n+\n+    void test();\n+\n+    void test() { func<foo>(0); }\n+\n+  }\n+\n+}  // namespace cxx11\n+\n+#endif  // __cplusplus >= 201103L\n+\n+]])\n+\n+\n+dnl  Tests for new features in C++14\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_14], [[\n+\n+// If the compiler admits that it is not ready for C++14, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201402L\n+\n+#error \"This is not a C++14 compiler\"\n+\n+#else\n+\n+namespace cxx14\n+{\n+\n+  namespace test_polymorphic_lambdas\n+  {\n+\n+    int\n+    test()\n+    {\n+      const auto lambda = [](auto&&... args){\n+        const auto istiny = [](auto x){\n+          return (sizeof(x) == 1UL) ? 1 : 0;\n+        };\n+        const int aretiny[] = { istiny(args)... };\n+        return aretiny[0];\n+      };\n+      return lambda(1, 1L, 1.0f, '1');\n+    }\n+\n+  }\n+\n+  namespace test_binary_literals\n+  {\n+\n+    constexpr auto ivii = 0b0000000000101010;\n+    static_assert(ivii == 42, \"wrong value\");\n+\n+  }\n+\n+  namespace test_generalized_constexpr\n+  {\n+\n+    template < typename CharT >\n+    constexpr unsigned long\n+    strlen_c(const CharT *const s) noexcept\n+    {\n+      auto length = 0UL;\n+      for (auto p = s; *p; ++p)\n+        ++length;\n+      return length;\n+    }\n+\n+    static_assert(strlen_c(\"\") == 0UL, \"\");\n+    static_assert(strlen_c(\"x\") == 1UL, \"\");\n+    static_assert(strlen_c(\"test\") == 4UL, \"\");\n+    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n+\n+  }\n+\n+  namespace test_lambda_init_capture\n+  {\n+\n+    int\n+    test()\n+    {\n+      auto x = 0;\n+      const auto lambda1 = [a = x](int b){ return a + b; };\n+      const auto lambda2 = [a = lambda1(x)](){ return a; };\n+      return lambda2();\n+    }\n+\n+  }\n+\n+  namespace test_digit_seperators\n+  {\n+\n+    constexpr auto ten_million = 100'000'000;\n+    static_assert(ten_million == 100000000, \"\");\n+\n+  }\n+\n+  namespace test_return_type_deduction\n+  {\n+\n+    auto f(int& x) { return x; }\n+    decltype(auto) g(int& x) { return x; }\n+\n+    template < typename T1, typename T2 >\n+    struct is_same\n+    {\n+      static constexpr auto value = false;\n+    };\n+\n+    template < typename T >\n+    struct is_same<T, T>\n+    {\n+      static constexpr auto value = true;\n+    };\n+\n+    int\n+    test()\n+    {\n+      auto x = 0;\n+      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n+      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n+      return x;\n+    }\n+\n+  }\n+\n+}  // namespace cxx14\n+\n+#endif  // __cplusplus >= 201402L\n+\n+]])"
      },
      {
        "sha": "c788ca9bd435fbfe4e1642281aabd7f9492786ff",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -31,6 +31,7 @@\n #    cold\n #    const\n #    constructor\n+#    constructor_priority for constructor attribute with priority\n #    deprecated\n #    destructor\n #    dllexport\n@@ -73,7 +74,7 @@\n #   and this notice are preserved.  This file is offered as-is, without any\n #   warranty.\n \n-#serial 2\n+#serial 3\n \n AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n     AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n@@ -103,6 +104,9 @@ AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n                 [const], [\n                     int foo( void ) __attribute__(($1));\n                 ],\n+                [constructor_priority], [\n+                    int foo( void ) __attribute__((__constructor__(65535/2)));\n+                ],\n                 [constructor], [\n                     int foo( void ) __attribute__(($1));\n                 ],\n@@ -180,6 +184,8 @@ AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n                 [visibility], [\n                     int foo_def( void ) __attribute__(($1(\"default\")));\n                     int foo_hid( void ) __attribute__(($1(\"hidden\")));\n+                    int foo_int( void ) __attribute__(($1(\"internal\")));\n+                    int foo_pro( void ) __attribute__(($1(\"protected\")));\n                 ],\n                 [warning], [\n                     int foo( void ) __attribute__(($1(\"\")));"
      },
      {
        "sha": "4c4051ea376f720faf21a4705c66604fe444c958",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "modified",
        "additions": 269,
        "deletions": 116,
        "changes": 385,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -19,19 +19,19 @@\n #   is necessary on AIX to use the special cc_r compiler alias.)\n #\n #   NOTE: You are assumed to not only compile your program with these flags,\n-#   but also link it with them as well. e.g. you should link with\n+#   but also to link with them as well. For example, you might link with\n #   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n #\n-#   If you are only building threads programs, you may wish to use these\n+#   If you are only building threaded programs, you may wish to use these\n #   variables in your default LIBS, CFLAGS, and CC:\n #\n #     LIBS=\"$PTHREAD_LIBS $LIBS\"\n #     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n #     CC=\"$PTHREAD_CC\"\n #\n #   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n-#   has a nonstandard name, defines PTHREAD_CREATE_JOINABLE to that name\n-#   (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n+#   has a nonstandard name, this macro defines PTHREAD_CREATE_JOINABLE to\n+#   that name (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n #\n #   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n #   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n@@ -82,35 +82,40 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 21\n+#serial 23\n \n AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n AC_DEFUN([AX_PTHREAD], [\n AC_REQUIRE([AC_CANONICAL_HOST])\n+AC_REQUIRE([AC_PROG_CC])\n+AC_REQUIRE([AC_PROG_SED])\n AC_LANG_PUSH([C])\n ax_pthread_ok=no\n \n # We used to check for pthread.h first, but this fails if pthread.h\n-# requires special compiler flags (e.g. on True64 or Sequent).\n+# requires special compiler flags (e.g. on Tru64 or Sequent).\n # It gets checked for in the link test anyway.\n \n # First of all, check if the user has set any of the PTHREAD_LIBS,\n # etcetera environment variables, and if threads linking works using\n # them:\n-if test x\"$PTHREAD_LIBS$PTHREAD_CFLAGS\" != x; then\n-        save_CFLAGS=\"$CFLAGS\"\n+if test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n+        ax_pthread_save_CC=\"$CC\"\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        AS_IF([test \"x$PTHREAD_CC\" != \"x\"], [CC=\"$PTHREAD_CC\"])\n         CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        save_LIBS=\"$LIBS\"\n         LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        AC_MSG_CHECKING([for pthread_join in LIBS=$PTHREAD_LIBS with CFLAGS=$PTHREAD_CFLAGS])\n-        AC_TRY_LINK_FUNC([pthread_join], [ax_pthread_ok=yes])\n+        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])\n+        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])\n         AC_MSG_RESULT([$ax_pthread_ok])\n-        if test x\"$ax_pthread_ok\" = xno; then\n+        if test \"x$ax_pthread_ok\" = \"xno\"; then\n                 PTHREAD_LIBS=\"\"\n                 PTHREAD_CFLAGS=\"\"\n         fi\n-        LIBS=\"$save_LIBS\"\n-        CFLAGS=\"$save_CFLAGS\"\n+        CC=\"$ax_pthread_save_CC\"\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n fi\n \n # We must check for the threads library under a number of different\n@@ -123,7 +128,7 @@ fi\n # which indicates that we try without any flags at all, and \"pthread-config\"\n # which is a program returning the flags for the Pth emulation library.\n \n-ax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n+ax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n \n # The ordering *is* (sometimes) important.  Some notes on the\n # individual items follow:\n@@ -132,82 +137,225 @@ ax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mt\n # none: in case threads are in libc; should be tried before -Kthread and\n #       other compiler flags to prevent continual compiler warnings\n # -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n-# -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n-# lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n-# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads)\n-# -pthreads: Solaris/gcc\n-# -mthreads: Mingw32/gcc, Lynx/gcc\n+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n+#           (Note: HP C rejects this with \"bad form for `-t' option\")\n+# -pthreads: Solaris/gcc (Note: HP C also rejects)\n # -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n-#      doesn't hurt to check since this sometimes defines pthreads too;\n-#      also defines -D_REENTRANT)\n-#      ... -mt is also the pthreads flag for HP/aCC\n+#      doesn't hurt to check since this sometimes defines pthreads and\n+#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n+#      is present but should not be used directly; and before -mthreads,\n+#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n+# -mthreads: Mingw32/gcc, Lynx/gcc\n # pthread: Linux, etcetera\n # --thread-safe: KAI C++\n # pthread-config: use pthread-config program (for GNU Pth library)\n \n-case ${host_os} in\n+case $host_os in\n+\n+        freebsd*)\n+\n+        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n+        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n+\n+        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n+        ;;\n+\n+        hpux*)\n+\n+        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n+        # multi-threading and also sets -lpthread.\"\n+\n+        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n+        ;;\n+\n+        openedition*)\n+\n+        # IBM z/OS requires a feature-test macro to be defined in order to\n+        # enable POSIX threads at all, so give the user a hint if this is\n+        # not set. (We don't define these ourselves, as they can affect\n+        # other portions of the system API in unpredictable ways.)\n+\n+        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],\n+            [\n+#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n+             AX_PTHREAD_ZOS_MISSING\n+#            endif\n+            ],\n+            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])\n+        ;;\n+\n         solaris*)\n \n         # On Solaris (at least, for some versions), libc contains stubbed\n         # (non-functional) versions of the pthreads routines, so link-based\n-        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/\n-        # -lpthread.)  (The stubs are missing pthread_cleanup_push, or rather\n-        # a function called by this macro, so we could check for that, but\n-        # who knows whether they'll stub that too in a future libc.)  So,\n-        # we'll just look for -pthreads and -lpthread first:\n+        # tests will erroneously succeed. (N.B.: The stubs are missing\n+        # pthread_cleanup_push, or rather a function called by this macro,\n+        # so we could check for that, but who knows whether they'll stub\n+        # that too in a future libc.)  So we'll check first for the\n+        # standard Solaris way of linking pthreads (-mt -lpthread).\n+\n+        ax_pthread_flags=\"-mt,pthread pthread $ax_pthread_flags\"\n+        ;;\n+esac\n+\n+# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n \n-        ax_pthread_flags=\"-pthreads pthread -mt -pthread $ax_pthread_flags\"\n+AS_IF([test \"x$GCC\" = \"xyes\"],\n+      [ax_pthread_flags=\"-pthread -pthreads $ax_pthread_flags\"])\n+\n+# The presence of a feature test macro requesting re-entrant function\n+# definitions is, on some systems, a strong hint that pthreads support is\n+# correctly enabled\n+\n+case $host_os in\n+        darwin* | hpux* | linux* | osf* | solaris*)\n+        ax_pthread_check_macro=\"_REENTRANT\"\n         ;;\n \n-        darwin*)\n-        ax_pthread_flags=\"-pthread $ax_pthread_flags\"\n+        aix*)\n+        ax_pthread_check_macro=\"_THREAD_SAFE\"\n+        ;;\n+\n+        *)\n+        ax_pthread_check_macro=\"--\"\n         ;;\n esac\n+AS_IF([test \"x$ax_pthread_check_macro\" = \"x--\"],\n+      [ax_pthread_check_cond=0],\n+      [ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\"])\n+\n+# Are we compiling with Clang?\n+\n+AC_CACHE_CHECK([whether $CC is Clang],\n+    [ax_cv_PTHREAD_CLANG],\n+    [ax_cv_PTHREAD_CLANG=no\n+     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n+     if test \"x$GCC\" = \"xyes\"; then\n+        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],\n+            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n+#            if defined(__clang__) && defined(__llvm__)\n+             AX_PTHREAD_CC_IS_CLANG\n+#            endif\n+            ],\n+            [ax_cv_PTHREAD_CLANG=yes])\n+     fi\n+    ])\n+ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n+\n+ax_pthread_clang_warning=no\n+\n+# Clang needs special handling, because older versions handle the -pthread\n+# option in a rather... idiosyncratic way\n+\n+if test \"x$ax_pthread_clang\" = \"xyes\"; then\n+\n+        # Clang takes -pthread; it has never supported any other flag\n+\n+        # (Note 1: This will need to be revisited if a system that Clang\n+        # supports has POSIX threads in a separate library.  This tends not\n+        # to be the way of modern systems, but it's conceivable.)\n+\n+        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n+        # to get POSIX threads support; the API is always present and\n+        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n+        # -pthread does define _REENTRANT, and while the Darwin headers\n+        # ignore this macro, third-party headers might not.)\n+\n+        PTHREAD_CFLAGS=\"-pthread\"\n+        PTHREAD_LIBS=\n+\n+        ax_pthread_ok=yes\n+\n+        # However, older versions of Clang make a point of warning the user\n+        # that, in an invocation where only linking and no compilation is\n+        # taking place, the -pthread option has no effect (\"argument unused\n+        # during compilation\").  They expect -pthread to be passed in only\n+        # when source code is being compiled.\n+        #\n+        # Problem is, this is at odds with the way Automake and most other\n+        # C build frameworks function, which is that the same flags used in\n+        # compilation (CFLAGS) are also used in linking.  Many systems\n+        # supported by AX_PTHREAD require exactly this for POSIX threads\n+        # support, and in fact it is often not straightforward to specify a\n+        # flag that is used only in the compilation phase and not in\n+        # linking.  Such a scenario is extremely rare in practice.\n+        #\n+        # Even though use of the -pthread flag in linking would only print\n+        # a warning, this can be a nuisance for well-run software projects\n+        # that build with -Werror.  So if the active version of Clang has\n+        # this misfeature, we search for an option to squash it.\n+\n+        AC_CACHE_CHECK([whether Clang needs flag to prevent \"argument unused\" warning when linking with -pthread],\n+            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],\n+            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n+             # Create an alternate version of $ac_link that compiles and\n+             # links in two steps (.c -> .o, .o -> exe) instead of one\n+             # (.c -> exe), because the warning occurs only in the second\n+             # step\n+             ax_pthread_save_ac_link=\"$ac_link\"\n+             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n+             ax_pthread_link_step=`$as_echo \"$ac_link\" | sed \"$ax_pthread_sed\"`\n+             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n+             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n+                AS_IF([test \"x$ax_pthread_try\" = \"xunknown\"], [break])\n+                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n+                ac_link=\"$ax_pthread_save_ac_link\"\n+                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n+                    [ac_link=\"$ax_pthread_2step_ac_link\"\n+                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n+                         [break])\n+                    ])\n+             done\n+             ac_link=\"$ax_pthread_save_ac_link\"\n+             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+             AS_IF([test \"x$ax_pthread_try\" = \"x\"], [ax_pthread_try=no])\n+             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n+            ])\n \n-# Clang doesn't consider unrecognized options an error unless we specify\n-# -Werror. We throw in some extra Clang-specific options to ensure that\n-# this doesn't happen for GCC, which also accepts -Werror.\n+        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n+                no | unknown) ;;\n+                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n+        esac\n \n-AC_MSG_CHECKING([if compiler needs -Werror to reject unknown flags])\n-save_CFLAGS=\"$CFLAGS\"\n-ax_pthread_extra_flags=\"-Werror\"\n-CFLAGS=\"$CFLAGS $ax_pthread_extra_flags -Wunknown-warning-option -Wsizeof-array-argument\"\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([int foo(void);],[foo()])],\n-                  [AC_MSG_RESULT([yes])],\n-                  [ax_pthread_extra_flags=\n-                   AC_MSG_RESULT([no])])\n-CFLAGS=\"$save_CFLAGS\"\n+fi # $ax_pthread_clang = yes\n \n-if test x\"$ax_pthread_ok\" = xno; then\n-for flag in $ax_pthread_flags; do\n+if test \"x$ax_pthread_ok\" = \"xno\"; then\n+for ax_pthread_try_flag in $ax_pthread_flags; do\n \n-        case $flag in\n+        case $ax_pthread_try_flag in\n                 none)\n                 AC_MSG_CHECKING([whether pthreads work without any flags])\n                 ;;\n \n+                -mt,pthread)\n+                AC_MSG_CHECKING([whether pthreads work with -mt -lpthread])\n+                PTHREAD_CFLAGS=\"-mt\"\n+                PTHREAD_LIBS=\"-lpthread\"\n+                ;;\n+\n                 -*)\n-                AC_MSG_CHECKING([whether pthreads work with $flag])\n-                PTHREAD_CFLAGS=\"$flag\"\n+                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])\n+                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n                 ;;\n \n                 pthread-config)\n                 AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n-                if test x\"$ax_pthread_config\" = xno; then continue; fi\n+                AS_IF([test \"x$ax_pthread_config\" = \"xno\"], [continue])\n                 PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n                 PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n                 ;;\n \n                 *)\n-                AC_MSG_CHECKING([for the pthreads library -l$flag])\n-                PTHREAD_LIBS=\"-l$flag\"\n+                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])\n+                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n                 ;;\n         esac\n \n-        save_LIBS=\"$LIBS\"\n-        save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n         LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS $ax_pthread_extra_flags\"\n \n         # Check for various functions.  We must include pthread.h,\n         # since some functions may be macros.  (On the Sequent, we\n@@ -218,7 +366,11 @@ for flag in $ax_pthread_flags; do\n         # pthread_cleanup_push because it is one of the few pthread\n         # functions on Solaris that doesn't have a non-functional libc stub.\n         # We try pthread_create on general principles.\n+\n         AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n+#                       if $ax_pthread_check_cond\n+#                        error \"$ax_pthread_check_macro must be defined\"\n+#                       endif\n                         static void routine(void *a) { a = 0; }\n                         static void *start_routine(void *a) { return a; }],\n                        [pthread_t th; pthread_attr_t attr;\n@@ -227,88 +379,89 @@ for flag in $ax_pthread_flags; do\n                         pthread_attr_init(&attr);\n                         pthread_cleanup_push(routine, 0);\n                         pthread_cleanup_pop(0) /* ; */])],\n-                [ax_pthread_ok=yes],\n-                [])\n+            [ax_pthread_ok=yes],\n+            [])\n \n-        LIBS=\"$save_LIBS\"\n-        CFLAGS=\"$save_CFLAGS\"\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n \n         AC_MSG_RESULT([$ax_pthread_ok])\n-        if test \"x$ax_pthread_ok\" = xyes; then\n-                break;\n-        fi\n+        AS_IF([test \"x$ax_pthread_ok\" = \"xyes\"], [break])\n \n         PTHREAD_LIBS=\"\"\n         PTHREAD_CFLAGS=\"\"\n done\n fi\n \n # Various other checks:\n-if test \"x$ax_pthread_ok\" = xyes; then\n-        save_LIBS=\"$LIBS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        save_CFLAGS=\"$CFLAGS\"\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n         CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n \n         # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n-        AC_MSG_CHECKING([for joinable pthread attribute])\n-        attr_name=unknown\n-        for attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n-            AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n-                           [int attr = $attr; return attr /* ; */])],\n-                [attr_name=$attr; break],\n-                [])\n-        done\n-        AC_MSG_RESULT([$attr_name])\n-        if test \"$attr_name\" != PTHREAD_CREATE_JOINABLE; then\n-            AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE], [$attr_name],\n-                               [Define to necessary symbol if this constant\n-                                uses a non-standard name on your system.])\n-        fi\n-\n-        AC_MSG_CHECKING([if more special flags are required for pthreads])\n-        flag=no\n-        case ${host_os} in\n-            aix* | freebsd* | darwin*) flag=\"-D_THREAD_SAFE\";;\n-            osf* | hpux*) flag=\"-D_REENTRANT\";;\n-            solaris*)\n-            if test \"$GCC\" = \"yes\"; then\n-                flag=\"-D_REENTRANT\"\n-            else\n-                # TODO: What about Clang on Solaris?\n-                flag=\"-mt -D_REENTRANT\"\n-            fi\n-            ;;\n-        esac\n-        AC_MSG_RESULT([$flag])\n-        if test \"x$flag\" != xno; then\n-            PTHREAD_CFLAGS=\"$flag $PTHREAD_CFLAGS\"\n-        fi\n+        AC_CACHE_CHECK([for joinable pthread attribute],\n+            [ax_cv_PTHREAD_JOINABLE_ATTR],\n+            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n+             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n+                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n+                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],\n+                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],\n+                                [])\n+             done\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n+               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n+               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"],\n+              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],\n+                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],\n+                                  [Define to necessary symbol if this constant\n+                                   uses a non-standard name on your system.])\n+               ax_pthread_joinable_attr_defined=yes\n+              ])\n+\n+        AC_CACHE_CHECK([whether more special flags are required for pthreads],\n+            [ax_cv_PTHREAD_SPECIAL_FLAGS],\n+            [ax_cv_PTHREAD_SPECIAL_FLAGS=no\n+             case $host_os in\n+             solaris*)\n+             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n+             ;;\n+             esac\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n+               test \"x$ax_pthread_special_flags_added\" != \"xyes\"],\n+              [PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n+               ax_pthread_special_flags_added=yes])\n \n         AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n-            [ax_cv_PTHREAD_PRIO_INHERIT], [\n-                AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n-                                                [[int i = PTHREAD_PRIO_INHERIT;]])],\n-                    [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n-                    [ax_cv_PTHREAD_PRIO_INHERIT=no])\n+            [ax_cv_PTHREAD_PRIO_INHERIT],\n+            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n+                                             [[int i = PTHREAD_PRIO_INHERIT;]])],\n+                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n+                            [ax_cv_PTHREAD_PRIO_INHERIT=no])\n             ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\"],\n-            [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])])\n+        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n+               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"],\n+              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])\n+               ax_pthread_prio_inherit_defined=yes\n+              ])\n \n-        LIBS=\"$save_LIBS\"\n-        CFLAGS=\"$save_CFLAGS\"\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n \n         # More AIX lossage: compile with *_r variant\n-        if test \"x$GCC\" != xyes; then\n+        if test \"x$GCC\" != \"xyes\"; then\n             case $host_os in\n                 aix*)\n                 AS_CASE([\"x/$CC\"],\n-                  [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n-                  [#handle absolute path differently from PATH based program lookup\n-                   AS_CASE([\"x$CC\"],\n-                     [x/*],\n-                     [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n-                     [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n+                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n+                    [#handle absolute path differently from PATH based program lookup\n+                     AS_CASE([\"x$CC\"],\n+                         [x/*],\n+                         [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n+                         [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n                 ;;\n             esac\n         fi\n@@ -321,7 +474,7 @@ AC_SUBST([PTHREAD_CFLAGS])\n AC_SUBST([PTHREAD_CC])\n \n # Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n-if test x\"$ax_pthread_ok\" = xyes; then\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n         ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n         :\n else"
      },
      {
        "sha": "2aa493a6af6b48537cdc2c0601a601a9c03fef1f",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -38,7 +38,7 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n   done\n   if test \"x$bdbpath\" = \"xX\"; then\n     AC_MSG_RESULT([no])\n-    AC_MSG_ERROR(libdb_cxx headers missing)\n+    AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n   elif test \"x$bdb48path\" = \"xX\"; then\n     BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n     AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n@@ -60,7 +60,7 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n     ])\n   done\n   if test \"x$BDB_LIBS\" = \"x\"; then\n-      AC_MSG_ERROR([libdb_cxx missing, Bitcoin Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+      AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n   fi\n   AC_SUBST(BDB_LIBS)\n ])"
      },
      {
        "sha": "d26136cbe9a45fbc484d85e67105710dc0e92c66",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 112,
        "deletions": 20,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -6,6 +6,7 @@ AC_DEFUN([BITCOIN_QT_FAIL],[\n       AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n     fi\n     bitcoin_enable_qt=no\n+    bitcoin_enable_qt_test=no\n   else\n     AC_MSG_ERROR([$1])\n   fi\n@@ -49,7 +50,7 @@ AC_DEFUN([BITCOIN_QT_INIT],[\n   dnl enable qt support\n   AC_ARG_WITH([gui],\n     [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt4 tried first)])],\n+    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n     [\n      bitcoin_qt_want_version=$withval\n      if test x$bitcoin_qt_want_version = xyes; then\n@@ -105,30 +106,33 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   dnl results to QT_LIBS.\n   BITCOIN_QT_CHECK([\n   TEMP_CPPFLAGS=$CPPFLAGS\n-  CPPFLAGS=$QT_INCLUDES\n+  TEMP_CXXFLAGS=$CXXFLAGS\n+  CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   if test x$bitcoin_qt_got_major_vers = x5; then\n     _BITCOIN_QT_IS_STATIC\n     if test x$bitcoin_cv_static_qt = xyes; then\n+      _BITCOIN_QT_FIND_STATIC_PLUGINS\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      if test x$qt_plugin_path != x; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+          [[#include <QtCore>]],[[\n+          #if QT_VERSION >= 0x050400\n+          choke;\n+          #endif\n+          ]])],\n+        [bitcoin_cv_need_acc_widget=yes],\n+        [bitcoin_cv_need_acc_widget=no])\n+      ])\n+      if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n       fi\n-      if test x$use_pkgconfig = xyes; then\n-        PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n-      fi\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n       if test x$TARGET_OS = xwindows; then\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n         AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n       elif test x$TARGET_OS = xlinux; then\n-        PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n         AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n       elif test x$TARGET_OS = xdarwin; then\n-        if test x$use_pkgconfig = xyes; then\n-          PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n-        fi\n         AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n         AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n@@ -137,10 +141,6 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   else\n     if test x$TARGET_OS = xwindows; then\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      if test x$qt_plugin_path != x; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-      fi\n       _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n          Q_IMPORT_PLUGIN(qcncodecs)\n          Q_IMPORT_PLUGIN(qjpcodecs)\n@@ -151,6 +151,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     fi\n   fi\n   CPPFLAGS=$TEMP_CPPFLAGS\n+  CXXFLAGS=$TEMP_CXXFLAGS\n   ])\n \n   if test x$use_pkgconfig$qt_bin_path = xyes; then\n@@ -159,6 +160,43 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     fi\n   fi\n \n+  if test x$use_hardening != xno; then\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    TEMP_CXXFLAGS=$CXXFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+      [[\n+          #if defined(QT_REDUCE_RELOCATIONS)\n+              choke;\n+          #endif\n+      ]])],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n+      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    CXXFLAGS=$TEMP_CXXFLAGS\n+    ])\n+  else\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+      [[\n+          #if defined(QT_REDUCE_RELOCATIONS)\n+              choke;\n+          #endif\n+      ]])],\n+      [ AC_MSG_RESULT(no)],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    ])\n+  fi\n+\n   BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n@@ -182,7 +220,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n \n \n   dnl enable qt support\n-  AC_MSG_CHECKING(whether to build Bitcoin Core GUI)\n+  AC_MSG_CHECKING(whether to build ]AC_PACKAGE_NAME[ GUI)\n   BITCOIN_QT_CHECK([\n     bitcoin_enable_qt=yes\n     bitcoin_enable_qt_test=yes\n@@ -204,6 +242,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   ])\n   AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n \n+  AC_SUBST(QT_PIE_FLAGS)\n   AC_SUBST(QT_INCLUDES)\n   AC_SUBST(QT_LIBS)\n   AC_SUBST(QT_LDFLAGS)\n@@ -280,6 +319,55 @@ AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n   LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n ])\n \n+dnl Internal. Find paths necessary for linking qt static plugins\n+dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n+dnl Inputs: qt_plugin_path. optional.\n+dnl Outputs: QT_LIBS is appended\n+AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n+  if test x$bitcoin_qt_got_major_vers = x5; then\n+      if test x$qt_plugin_path != x; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+        if test -d \"$qt_plugin_path/accessible\"; then\n+          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+        fi\n+      fi\n+     if test x$use_pkgconfig = xyes; then\n+     : dnl\n+     m4_ifdef([PKG_CHECK_MODULES],[\n+       PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n+       if test x$TARGET_OS = xlinux; then\n+         PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n+         if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n+           PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n+         fi\n+       elif test x$TARGET_OS = xdarwin; then\n+         PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n+       fi\n+     ])\n+     else\n+       if test x$TARGET_OS = xwindows; then\n+         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+             [[#include <QtCore>]],[[\n+             #if QT_VERSION < 0x050600\n+             choke;\n+             #endif\n+             ]])],\n+           [bitcoin_cv_need_platformsupport=yes],\n+           [bitcoin_cv_need_platformsupport=no])\n+         ])\n+         if test x$bitcoin_cv_need_platformsupport = xyes; then\n+           BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n+         fi\n+       fi\n+     fi\n+  else\n+    if test x$qt_plugin_path != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n+    fi\n+  fi\n+])\n+\n dnl Internal. Find Qt libraries using pkg-config.\n dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to check\n dnl         first.\n@@ -312,7 +400,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n \n       dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n       if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n-        if test x$auto_priority_version = x$qt5; then\n+        if test x$auto_priority_version = xqt5; then\n           PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n         else\n           PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n@@ -342,6 +430,8 @@ dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   TEMP_LIBS=\"$LIBS\"\n   BITCOIN_QT_CHECK([\n     if test x$qt_include_path != x; then\n@@ -381,7 +471,8 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([jpeg] ,[main],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([pcre16] ,[main],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n@@ -410,6 +501,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n     fi\n   ])\n   CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+  CXXFLAGS=\"$TEMP_CXXFLAGS\"\n   LIBS=\"$TEMP_LIBS\"\n ])\n "
      },
      {
        "sha": "011af6bd1bd8ece787e853917dbca48f10edc769",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 347,
        "deletions": 120,
        "changes": 467,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,17 +1,24 @@\n dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 9)\n+define(_CLIENT_VERSION_MINOR, 12)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2014)\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[info@bitcoin.org],[bitcoin])\n+define(_COPYRIGHT_YEAR, 2016)\n+define(_COPYRIGHT_HOLDERS,[The %s developers])\n+define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n+AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n AC_CONFIG_SRCDIR([src/main.cpp])\n AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n AC_CONFIG_AUX_DIR([build-aux])\n AC_CONFIG_MACRO_DIR([build-aux/m4])\n \n+BITCOIN_DAEMON_NAME=bitcoind\n+BITCOIN_GUI_NAME=bitcoin-qt\n+BITCOIN_CLI_NAME=bitcoin-cli\n+BITCOIN_TX_NAME=bitcoin-tx\n+\n AC_CANONICAL_HOST\n \n AH_TOP([#ifndef BITCOIN_CONFIG_H])\n@@ -48,6 +55,8 @@ case $host in\n      lt_cv_deplibs_check_method=\"pass_all\"\n   ;;\n esac\n+dnl Require C++11 compiler (no GNU extensions)\n+AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory])\n dnl Libtool init checks.\n LT_INIT([pic-only])\n \n@@ -58,26 +67,22 @@ AC_PATH_TOOL(STRIP, strip)\n AC_PATH_TOOL(GCOV, gcov)\n AC_PATH_PROG(LCOV, lcov)\n AC_PATH_PROG(JAVA, java)\n+AC_PATH_PROGS([PYTHON], [python3 python2.7 python2 python])\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n AC_PATH_PROG(CCACHE,ccache)\n AC_PATH_PROG(XGETTEXT,xgettext)\n AC_PATH_PROG(HEXDUMP,hexdump)\n+AC_PATH_TOOL(READELF, readelf)\n+AC_PATH_TOOL(CPPFILT, c++filt)\n+AC_PATH_TOOL(OBJCOPY, objcopy)\n \n-# This m4 will only be used if a system copy cannot be found. This is helpful\n-# on systems where autotools are installed but the pkg-config macros are not in\n-# a default location. It is currently used for building on OSX where autotools\n-# are preinstalled but pkg-config comes from macports or homebrew. It should\n-# probably be removed when building on <= 10.6 is no longer supported.\n-m4_include([pkg.m4])\n-\n-dnl pkg-config check.\n-PKG_PROG_PKG_CONFIG\n+AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n \n # Enable wallet\n AC_ARG_ENABLE([wallet],\n-  [AS_HELP_STRING([--enable-wallet],\n-  [enable wallet (default is yes)])],\n+  [AS_HELP_STRING([--disable-wallet],\n+  [disable wallet (enabled by default)])],\n   [enable_wallet=$enableval],\n   [enable_wallet=yes])\n \n@@ -94,10 +99,20 @@ AC_ARG_ENABLE([upnp-default],\n   [use_upnp_default=no])\n \n AC_ARG_ENABLE(tests,\n-    AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n+    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n     [use_tests=$enableval],\n     [use_tests=yes])\n \n+AC_ARG_ENABLE(gui-tests,\n+    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),\n+    [use_gui_tests=$enableval],\n+    [use_gui_tests=$use_tests])\n+\n+AC_ARG_ENABLE(bench,\n+    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n+    [use_bench=$enableval],\n+    [use_bench=yes])\n+\n AC_ARG_WITH([comparison-tool],\n     AS_HELP_STRING([--with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\n     [use_comparison_tool=$withval],\n@@ -108,27 +123,32 @@ AC_ARG_ENABLE([comparison-tool-reorg-tests],\n     [use_comparison_tool_reorg_tests=$enableval],\n     [use_comparison_tool_reorg_tests=no])\n \n+AC_ARG_ENABLE([extended-rpc-tests],\n+    AS_HELP_STRING([--enable-extended-rpc-tests],[enable expensive RPC tests when using lcov (default no)]),\n+    [use_extended_rpc_tests=$enableval],\n+    [use_extended_rpc_tests=no])\n+\n AC_ARG_WITH([qrencode],\n   [AS_HELP_STRING([--with-qrencode],\n   [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n   [use_qr=$withval],\n   [use_qr=auto])\n \n AC_ARG_ENABLE([hardening],\n-  [AS_HELP_STRING([--enable-hardening],\n-  [attempt to harden the resulting executables (default is yes)])],\n+  [AS_HELP_STRING([--disable-hardening],\n+  [do not attempt to harden the resulting executables (default is to harden)])],\n   [use_hardening=$enableval],\n   [use_hardening=yes])\n \n AC_ARG_ENABLE([reduce-exports],\n   [AS_HELP_STRING([--enable-reduce-exports],\n-  [attempt to reduce exported symbols in the resulting executables (default is yes)])],\n+  [attempt to reduce exported symbols in the resulting executables (default is no)])],\n   [use_reduce_exports=$enableval],\n-  [use_reduce_exports=auto])\n+  [use_reduce_exports=no])\n \n AC_ARG_ENABLE([ccache],\n-  [AS_HELP_STRING([--enable-ccache],\n-  [use ccache for building (default is yes if ccache is found)])],\n+  [AS_HELP_STRING([--disable-ccache],\n+  [do not use ccache for building (default is to use if found)])],\n   [use_ccache=$enableval],\n   [use_ccache=auto])\n \n@@ -140,38 +160,78 @@ AC_ARG_ENABLE([lcov],\n \n AC_ARG_ENABLE([glibc-back-compat],\n   [AS_HELP_STRING([--enable-glibc-back-compat],\n-  [enable backwards compatibility with glibc and libstdc++])],\n+  [enable backwards compatibility with glibc])],\n   [use_glibc_compat=$enableval],\n   [use_glibc_compat=no])\n \n+AC_ARG_WITH([system-univalue],\n+  [AS_HELP_STRING([--with-system-univalue],\n+  [Build with system UniValue (default is no)])],\n+  [system_univalue=$withval],\n+  [system_univalue=no]\n+)\n+AC_ARG_ENABLE([zmq],\n+  [AS_HELP_STRING([--disable-zmq],\n+  [disable ZMQ notifications])],\n+  [use_zmq=$enableval],\n+  [use_zmq=yes])\n+\n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n-# Enable debug \n+# Enable debug\n AC_ARG_ENABLE([debug],\n     [AS_HELP_STRING([--enable-debug],\n                     [use debug compiler flags and macros (default is no)])],\n     [enable_debug=$enableval],\n     [enable_debug=no])\n \n+AC_LANG_PUSH([C++])\n+AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n+\n if test \"x$enable_debug\" = xyes; then\n+    CPPFLAGS=\"$CPPFLAGS -DDEBUG -DDEBUG_LOCKORDER\"\n     if test \"x$GCC\" = xyes; then\n-        CFLAGS=\"-g3 -O0 -DDEBUG\"\n+        CFLAGS=\"$CFLAGS -g3 -O0\"\n     fi\n-    \n+\n     if test \"x$GXX\" = xyes; then\n-        CXXFLAGS=\"-g3 -O0 -DDEBUG\"\n+        CXXFLAGS=\"$CXXFLAGS -g3 -O0\"\n     fi\n-fi \n+fi\n \n-## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n-##       compatibility with the legacy buildsystem.\n-##\n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-  CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter\"\n+  AX_CHECK_COMPILE_FLAG([-Wall],[CXXFLAGS=\"$CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wextra],[CXXFLAGS=\"$CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wformat],[CXXFLAGS=\"$CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wformat-security],[CXXFLAGS=\"$CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n+\n+  ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  ## unknown options if any other warning is produced. Test the -Wfoo case, and\n+  ## set the -Wno-foo case if it works.\n+  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wself-assign],[CXXFLAGS=\"$CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[CXXFLAGS=\"$CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n fi\n-CPPFLAGS=\"$CPPFLAGS -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n+CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n \n-AC_LANG_PUSH([C++])\n+AC_ARG_WITH([utils],\n+  [AS_HELP_STRING([--with-utils],\n+  [build bitcoin-cli bitcoin-tx (default=yes)])],\n+  [build_bitcoin_utils=$withval],\n+  [build_bitcoin_utils=yes])\n+\n+AC_ARG_WITH([libs],\n+  [AS_HELP_STRING([--with-libs],\n+  [build libraries (default=yes)])],\n+  [build_bitcoin_libs=$withval],\n+  [build_bitcoin_libs=yes])\n+\n+AC_ARG_WITH([daemon],\n+  [AS_HELP_STRING([--with-daemon],\n+  [build bitcoind daemon (default=yes)])],\n+  [build_bitcoind=$withval],\n+  [build_bitcoind=yes])\n \n use_pkgconfig=yes\n case $host in\n@@ -216,7 +276,7 @@ case $host in\n      fi\n \n      CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n-     LEVELDB_TARGET_FLAGS=\"TARGET_OS=OS_WINDOWS_CROSSCOMPILE\"\n+     LEVELDB_TARGET_FLAGS=\"-DOS_WINDOWS\"\n      if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n        CXXFLAGS=\"$CXXFLAGS -w\"\n      fi\n@@ -238,7 +298,7 @@ case $host in\n      ;;\n   *darwin*)\n      TARGET_OS=darwin\n-     LEVELDB_TARGET_FLAGS=\"TARGET_OS=Darwin\"\n+     LEVELDB_TARGET_FLAGS=\"-DOS_MACOSX\"\n      if  test x$cross_compiling != xyes; then\n        BUILD_OS=darwin\n        AC_CHECK_PROG([PORT],port, port)\n@@ -285,6 +345,9 @@ case $host in\n            AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n            AC_PATH_TOOL([OTOOL], [otool], otool)\n            AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n+           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n+           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n+           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n \n            dnl libtool will try to strip the static lib, which is a problem for\n            dnl cross-builds because strip attempts to call a hard-coded ld,\n@@ -297,14 +360,28 @@ case $host in\n \n      AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n+     OBJCXXFLAGS=\"$CXXFLAGS\"\n      ;;\n    *linux*)\n      TARGET_OS=linux\n+     LEVELDB_TARGET_FLAGS=\"-DOS_LINUX\"\n      ;;\n    *)\n+     OTHER_OS=`echo ${host_os} | awk '{print toupper($0)}'`\n+     LEVELDB_TARGET_FLAGS=\"-DOS_${OTHER_OS}\"\n      ;;\n esac\n \n+if test x$use_pkgconfig = xyes; then\n+  m4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR(PKG_PROG_PKG_CONFIG macro not found. Please install pkg-config and re-run autogen.sh.)])\n+  m4_ifdef([PKG_PROG_PKG_CONFIG], [\n+  PKG_PROG_PKG_CONFIG\n+  if test x\"$PKG_CONFIG\" = \"x\"; then\n+    AC_MSG_ERROR(pkg-config not found.)\n+  fi\n+  ])\n+fi\n+\n if test x$use_comparison_tool != xno; then\n   AC_SUBST(JAVA_COMPARISON_TOOL, $use_comparison_tool)\n fi\n@@ -318,6 +395,10 @@ else\n   AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 0)\n fi\n \n+if test x$use_extended_rpc_tests != xno; then\n+  AC_SUBST(EXTENDED_RPC_TESTS, -extended)\n+fi\n+\n if test x$use_lcov = xyes; then\n   if test x$LCOV = x; then\n     AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n@@ -328,6 +409,9 @@ if test x$use_lcov = xyes; then\n   if test x$JAVA = x; then\n     AC_MSG_ERROR(\"lcov testing requested but java not found\")\n   fi\n+  if test x$PYTHON = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but python not found\")\n+  fi\n   if test x$GENHTML = x; then\n     AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n   fi\n@@ -339,8 +423,8 @@ if test x$use_lcov = xyes; then\n     [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n fi\n \n-dnl Require little endian\n-AC_C_BIGENDIAN([AC_MSG_ERROR(\"Big Endian not supported\")])\n+dnl Check for endianness\n+AC_C_BIGENDIAN\n \n dnl Check for pthread compile/link requirements\n AX_PTHREAD\n@@ -372,6 +456,10 @@ AX_GCC_FUNC_ATTRIBUTE([dllimport])\n \n if test x$use_glibc_compat != xno; then\n \n+  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n+  #in anyway for back-compat.\n+  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\n+\n   #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n   # See which one is present here.\n   AC_MSG_CHECKING(__fdelt_chk type)\n@@ -385,7 +473,13 @@ if test x$use_glibc_compat != xno; then\n     [ fdelt_type=\"long int\"])\n   AC_MSG_RESULT($fdelt_type)\n   AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n+else\n+  AC_SEARCH_LIBS([clock_gettime],[rt])\n+fi\n \n+if test x$TARGET_OS != xwindows; then\n+  # All windows code is PIC, forcing it on just adds useless compile warnings\n+  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n fi\n \n if test x$use_hardening != xno; then\n@@ -405,8 +499,7 @@ if test x$use_hardening != xno; then\n   AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n \n   if test x$TARGET_OS != xwindows; then\n-    # All windows code is PIC, forcing it on just adds useless compile warnings\n-    AX_CHECK_COMPILE_FLAG([-fPIE],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fPIE\"])\n+    AX_CHECK_COMPILE_FLAG([-fPIE],[PIE_FLAGS=\"-fPIE\"])\n     AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n   fi\n \n@@ -415,27 +508,29 @@ if test x$use_hardening != xno; then\n        AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n     ;;\n   esac\n-\n-  CXXFLAGS=\"$CXXFLAGS $HARDENED_CXXFLAGS\"\n-  CPPFLAGS=\"$CPPFLAGS $HARDENED_CPPFLAGS\"\n-  LDFLAGS=\"$LDFLAGS $HARDENED_LDFLAGS\"\n-  OBJCXXFLAGS=\"$CXXFLAGS\"\n fi\n \n dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n if test x$TARGET_OS = xdarwin; then\n   AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n fi\n \n-AC_CHECK_HEADERS([endian.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n+AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n AC_SEARCH_LIBS([getaddrinfo_a], [anl], [AC_DEFINE(HAVE_GETADDRINFO_A, 1, [Define this symbol if you have getaddrinfo_a])])\n AC_SEARCH_LIBS([inet_pton], [nsl resolv], [AC_DEFINE(HAVE_INET_PTON, 1, [Define this symbol if you have inet_pton])])\n \n AC_CHECK_DECLS([strnlen])\n \n-AC_CHECK_DECLS([le32toh, le64toh, htole32, htole64, be32toh, be64toh, htobe32, htobe64],,,\n+AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n \t\t[#if HAVE_ENDIAN_H\n                  #include <endian.h>\n+                 #elif HAVE_SYS_ENDIAN_H\n+                 #include <sys/endian.h>\n+                 #endif])\n+\n+AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n+\t\t[#if HAVE_BYTESWAP_H\n+                 #include <byteswap.h>\n                  #endif])\n \n dnl Check for MSG_NOSIGNAL\n@@ -446,8 +541,6 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n-AC_SEARCH_LIBS([clock_gettime],[rt])\n-\n AC_MSG_CHECKING([for visibility attribute])\n AC_LINK_IFELSE([AC_LANG_SOURCE([\n   int foo_def( void ) __attribute__((visibility(\"default\")));\n@@ -460,22 +553,14 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   [\n     AC_MSG_RESULT(no)\n     if test x$use_reduce_exports = xyes; then\n-      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduced-exports.])\n+      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])\n     fi\n-      AC_MSG_WARN([Cannot find a working visibility attribute. Disabling reduced exports.])\n-      use_reduce_exports=no\n   ]\n )\n \n-if test x$use_reduce_exports != xno; then\n+if test x$use_reduce_exports = xyes; then\n   AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n-  [\n-    if test x$use_reduce_exports = xyes; then\n-      AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduced-exports.])\n-    fi\n-    AC_MSG_WARN([Cannot set default symbol visibility. Disabling reduced exports.])\n-    use_reduce_exports=no\n-  ])\n+  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n fi\n \n LEVELDB_CPPFLAGS=\n@@ -500,6 +585,19 @@ if test x$use_upnp != xno; then\n   )\n fi\n \n+BITCOIN_QT_INIT\n+\n+dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n+BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n+\n+if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n+    use_boost=no\n+else\n+    use_boost=yes\n+fi\n+\n+if test x$use_boost = xyes; then\n+\n dnl Check for boost libs\n AX_BOOST_BASE\n AX_BOOST_SYSTEM\n@@ -509,7 +607,7 @@ AX_BOOST_THREAD\n AX_BOOST_CHRONO\n \n \n-if test x$use_reduce_exports != xno; then\n+if test x$use_reduce_exports = xyes; then\n   AC_MSG_CHECKING([for working boost reduced exports])\n   TEMP_CPPFLAGS=\"$CPPFLAGS\"\n   CPPFLAGS=\"$BOOST_CPPFLAGS $CPPFLAGS\"\n@@ -523,21 +621,14 @@ if test x$use_reduce_exports != xno; then\n       #endif\n     ]])],[\n       AC_MSG_RESULT(yes)\n-    ],[:\n-    if test x$use_reduce_exports = xauto; then\n-      use_reduce_exports=no\n-    else\n-      if test x$use_reduce_exports = xyes; then\n-        AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduced-exports.])\n-      fi\n-    fi\n-    AC_MSG_RESULT(no)\n-    AC_MSG_WARN([boost versions < 1.49 are known to have symbol visibility issues. Disabling reduced exports.])\n+    ],[\n+    AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduce-exports.])\n   ])\n   CPPFLAGS=\"$TEMP_CPPFLAGS\"\n fi\n+fi\n \n-if test x$use_reduce_exports != xno; then\n+if test x$use_reduce_exports = xyes; then\n     CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n     AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\n fi\n@@ -549,6 +640,8 @@ if test x$use_tests = xyes; then\n   fi\n \n \n+  if test x$use_boost = xyes; then\n+\n   AX_BOOST_UNIT_TEST_FRAMEWORK\n \n   dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n@@ -568,19 +661,57 @@ if test x$use_tests = xyes; then\n     [AC_MSG_RESULT(no)])\n   LIBS=\"$TEMP_LIBS\"\n   CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+\n+  fi\n fi\n \n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB\"\n+if test x$use_boost = xyes; then\n+\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n+\n+\n+dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums\n+dnl using c++98 constructs. Unfortunately, this implementation detail leaked into\n+dnl the abi. This was fixed in 1.57.\n+\n+dnl When building against that installed version using c++11, the headers pick up\n+dnl on the native c++11 scoped enum support and enable it, however it will fail to\n+dnl link. This can be worked around by disabling c++11 scoped enums if linking will\n+dnl fail.\n+dnl BOOST_NO_SCOPED_ENUMS was changed to BOOST_NO_CXX11_SCOPED_ENUMS in 1.51.\n+\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$BOOST_LIBS $LIBS\"\n+TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+  #include \"boost/config.hpp\"\n+  #include \"boost/version.hpp\"\n+  #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n+  #define BOOST_NO_SCOPED_ENUMS\n+  #define BOOST_NO_CXX11_SCOPED_ENUMS\n+  #define CHECK\n+  #endif\n+  #include \"boost/filesystem.hpp\"\n+  ]],[[\n+  #if defined(CHECK)\n+    boost::filesystem::copy_file(\"foo\", \"bar\");\n+  #else\n+    choke;\n+  #endif\n+  ]])],\n+  [AC_MSG_RESULT(mismatched); BOOST_CPPFLAGS=\"$BOOST_CPPFLAGS -DBOOST_NO_SCOPED_ENUMS -DBOOST_NO_CXX11_SCOPED_ENUMS\"], [AC_MSG_RESULT(ok)])\n+LIBS=\"$TEMP_LIBS\"\n+CPPFLAGS=\"$TEMP_CPPFLAGS\"\n \n dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n dnl a working version is available, else fall back to sleep. sleep was removed\n dnl after 1.56.\n dnl If neither is available, abort.\n-dnl If sleep_for is used, boost_chrono becomes a requirement.\n-if test x$ax_cv_boost_chrono = xyes; then\n TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $BOOST_CHRONO_LIB $LIBS\"\n+LIBS=\"$BOOST_LIBS $LIBS\"\n TEMP_CPPFLAGS=\"$CPPFLAGS\"\n CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n@@ -593,12 +724,11 @@ AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n    choke me\n   #endif\n   ]])],\n-  [boost_sleep=yes; BOOST_LIBS=\"$BOOST_LIBS $BOOST_CHRONO_LIB\";\n+  [boost_sleep=yes;\n      AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\n   [boost_sleep=no])\n LIBS=\"$TEMP_LIBS\"\n CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-fi\n \n if test x$boost_sleep != xyes; then\n TEMP_LIBS=\"$LIBS\"\n@@ -626,33 +756,10 @@ if test x$boost_sleep != xyes; then\n   AC_MSG_ERROR(No working boost sleep implementation found.)\n fi\n \n-AC_ARG_WITH([utils],\n-  [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx (default=yes)])],\n-  [build_bitcoin_utils=$withval],\n-  [build_bitcoin_utils=yes])\n-\n-AC_ARG_WITH([libs],\n-  [AS_HELP_STRING([--with-libs],\n-  [build libraries (default=yes)])],\n-  [build_bitcoin_libs=$withval],\n-  [build_bitcoin_libs=yes])\n-\n-AC_ARG_WITH([daemon],\n-  [AS_HELP_STRING([--with-daemon],\n-  [build bitcoind daemon (default=yes)])],\n-  [build_bitcoind=$withval],\n-  [build_bitcoind=yes])\n-\n-BITCOIN_QT_INIT\n+fi\n \n if test x$use_pkgconfig = xyes; then\n-\n-  if test x\"$PKG_CONFIG\" = \"x\"; then\n-    AC_MSG_ERROR(pkg-config not found.)\n-  fi\n-\n-  : #NOP\n+  : dnl\n   m4_ifdef(\n     [PKG_CHECK_MODULES],\n     [\n@@ -662,6 +769,22 @@ if test x$use_pkgconfig = xyes; then\n       if test x$use_qr != xno; then\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n+      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n+        if test x$TARGET_OS != xwindows; then\n+          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n+        fi\n+      fi\n+\n+      if test \"x$use_zmq\" = \"xyes\"; then\n+        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n+          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n+          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n+           use_zmq=no])\n+      else\n+          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+      fi\n     ]\n   )\n else\n@@ -671,13 +794,81 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n \n+  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n+    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n+    if test x$TARGET_OS != xwindows; then\n+      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\n+    fi\n+  fi\n+\n+  if test \"x$use_zmq\" = \"xyes\"; then\n+     AC_CHECK_HEADER([zmq.h],\n+       [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n+       [AC_MSG_WARN([zmq.h not found, disabling zmq support])\n+        use_zmq=no\n+        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n+     AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,\n+       [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])\n+        use_zmq=no\n+        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n+  else\n+    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+  fi\n+\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n   if test x$use_qr != xno; then\n     BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n     BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n   fi\n fi\n \n+dnl univalue check\n+\n+if test x$system_univalue != xno ; then\n+  found_univalue=no\n+  if test x$use_pkgconfig = xyes; then\n+    : #NOP\n+    m4_ifdef(\n+      [PKG_CHECK_MODULES],\n+      [\n+        PKG_CHECK_MODULES([UNIVALUE],[libunivalue],[found_univalue=yes],[true])\n+      ]\n+    )\n+  else\n+    AC_CHECK_HEADER([univalue.h],[\n+      AC_CHECK_LIB([univalue],  [main],[\n+        UNIVALUE_LIBS=-lunivalue\n+        found_univalue=yes\n+      ],[true])\n+    ],[true])\n+  fi\n+\n+  if test x$found_univalue = xyes ; then\n+    system_univalue=yes\n+  elif test x$system_univalue = xyes ; then\n+    AC_MSG_ERROR([univalue not found])\n+  else\n+    system_univalue=no\n+  fi\n+fi\n+\n+if test x$system_univalue = xno ; then\n+  UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n+  UNIVALUE_LIBS='univalue/libunivalue.la'\n+fi\n+AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$system_univalue = xno])\n+AC_SUBST(UNIVALUE_CFLAGS)\n+AC_SUBST(UNIVALUE_LIBS)\n+\n+CXXFLAGS_TEMP=\"$CXXFLAGS\"\n+LIBS_TEMP=\"$LIBS\"\n+CXXFLAGS=\"$CXXFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\n+LIBS=\"$LIBS $SSL_LIBS $CRYPTO_LIBS\"\n+AC_CHECK_HEADER([openssl/ec.h],, AC_MSG_ERROR(OpenSSL ec header missing),)\n+CXXFLAGS=\"$CXXFLAGS_TEMP\"\n+LIBS=\"$LIBS_TEMP\"\n+\n BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n \n AC_MSG_CHECKING([whether to build bitcoind])\n@@ -692,12 +883,10 @@ AC_MSG_CHECKING([whether to build libraries])\n AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n if test x$build_bitcoin_libs = xyes; then\n   AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n+  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n fi\n AC_MSG_RESULT($build_bitcoin_libs)\n \n-dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt4])\n-\n AC_LANG_POP\n \n if test \"x$use_ccache\" != \"xno\"; then\n@@ -757,8 +946,8 @@ else\n fi\n \n dnl these are only used when qt is enabled\n+BUILD_TEST_QT=\"\"\n if test x$bitcoin_enable_qt != xno; then\n-  BUILD_QT=qt\n   dnl enable dbus support\n   AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n   if test x$bitcoin_enable_qt_dbus != xno; then\n@@ -788,75 +977,101 @@ if test x$bitcoin_enable_qt != xno; then\n   fi\n \n   AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n-  if test x$use_tests$bitcoin_enable_qt_test = xyesyes; then\n+  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n     AC_MSG_RESULT([yes])\n-    BUILD_TEST_QT=\"test\"\n+    BUILD_TEST_QT=\"yes\"\n   else\n     AC_MSG_RESULT([no])\n   fi\n fi\n \n+AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n+\n AC_MSG_CHECKING([whether to build test_bitcoin])\n if test x$use_tests = xyes; then\n   AC_MSG_RESULT([yes])\n-  BUILD_TEST=\"test\"\n+  BUILD_TEST=\"yes\"\n else\n   AC_MSG_RESULT([no])\n+  BUILD_TEST=\"\"\n fi\n \n AC_MSG_CHECKING([whether to reduce exports])\n-if test x$use_reduce_exports != xno; then\n+if test x$use_reduce_exports = xyes; then\n   AC_MSG_RESULT([yes])\n else\n   AC_MSG_RESULT([no])\n fi\n \n-if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n+if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_tests = xnonononono; then\n   AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui or --enable-tests])\n fi\n \n AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n-AM_CONDITIONAL([ENABLE_TESTS],[test x$use_tests = xyes])\n+AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n-AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$use_tests$bitcoin_enable_qt_test = xyesyes])\n+AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n+AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\n AM_CONDITIONAL([USE_COMPARISON_TOOL_REORG_TESTS],[test x$use_comparison_tool_reorg_test != xno])\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n-AM_CONDITIONAL([USE_LIBSECP256K1],[test x$use_libsecp256k1 = xyes])\n+AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n-AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\n+AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])\n+AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\n+AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\n+define(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])\n+AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\n AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n+AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n+AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n+AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n+AC_SUBST(BITCOIN_DAEMON_NAME)\n+AC_SUBST(BITCOIN_GUI_NAME)\n+AC_SUBST(BITCOIN_CLI_NAME)\n+AC_SUBST(BITCOIN_TX_NAME)\n \n AC_SUBST(RELDFLAGS)\n+AC_SUBST(HARDENED_CXXFLAGS)\n+AC_SUBST(HARDENED_CPPFLAGS)\n+AC_SUBST(HARDENED_LDFLAGS)\n+AC_SUBST(PIC_FLAGS)\n+AC_SUBST(PIE_FLAGS)\n AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)\n AC_SUBST(BOOST_LIBS)\n AC_SUBST(TESTDEFS)\n AC_SUBST(LEVELDB_TARGET_FLAGS)\n-AC_SUBST(BUILD_TEST)\n-AC_SUBST(BUILD_QT)\n-AC_SUBST(BUILD_TEST_QT)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n+AC_SUBST(CRYPTO_LIBS)\n+AC_SUBST(SSL_LIBS)\n+AC_SUBST(EVENT_LIBS)\n+AC_SUBST(EVENT_PTHREADS_LIBS)\n+AC_SUBST(ZMQ_LIBS)\n+AC_SUBST(PROTOBUF_LIBS)\n+AC_SUBST(QR_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n-AC_CONFIG_FILES([qa/pull-tester/tests-config.sh],[chmod +x qa/pull-tester/tests-config.sh])\n+AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n+AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n+AC_CONFIG_LINKS([qa/pull-tester/rpc-tests.py:qa/pull-tester/rpc-tests.py])\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a\n dnl result, they leak into secp256k1's configure and crazy things happen.\n@@ -881,7 +1096,11 @@ PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n unset PKG_CONFIG_LIBDIR\n PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n \n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic\"\n+if test x$system_univalue = xno; then\n+  AC_CONFIG_SUBDIRS([src/univalue])\n+fi\n+\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\n AC_CONFIG_SUBDIRS([src/secp256k1])\n \n AC_OUTPUT\n@@ -896,3 +1115,11 @@ case $host in\n      chmod 755 libtool\n    ;;\n esac\n+\n+dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n+case ${OS} in\n+   *Windows*)\n+     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n+     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n+   ;;\n+esac"
      },
      {
        "sha": "a23b197cc61220842acd971b429807d7ac92a83e",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 12,
        "deletions": 13,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,9 +1,6 @@\n Wallet Tools\n ---------------------\n \n-### [BitRPC](/contrib/bitrpc) ###\n-Allows for sending of all standard Bitcoin commands via RPC rather than as command line args.\n-\n ### [SpendFrom](/contrib/spendfrom) ###\n \n Use the raw transactions API to send coins received on a particular\n@@ -14,7 +11,10 @@ Repository Tools\n \n ### [Developer tools](/contrib/devtools) ###\n Specific tools for developers working on this repository.\n-Contains the script `github-merge.sh` for merging github pull requests securely and signing them using GPG.\n+Contains the script `github-merge.py` for merging github pull requests securely and signing them using GPG.\n+\n+### [Verify-Commits](/contrib/verify-commits) ###\n+Tool to verify that every merge commit was signed by a developer using the above `github-merge.py` script.\n \n ### [Linearize](/contrib/linearize) ###\n Construct a linear, no-fork, best version of the blockchain.\n@@ -34,23 +34,22 @@ Contains files used to package bitcoind/bitcoin-qt\n for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n \n ### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Gavin's notes on getting gitian builds up and running using KVM.\n+Notes on getting Gitian builds up and running using KVM.\n \n-### [Gitian-downloader](/contrib/gitian-downloader)\n-Various PGP files of core developers. \n+### [Gitian-keys](/contrib/gitian-keys)\n+PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n \n ### [MacDeploy](/contrib/macdeploy) ###\n Scripts and notes for Mac builds. \n \n+### [RPM](/contrib/rpm) ###\n+RPM spec file for building bitcoin-core on RPM based distributions\n+\n Test and Verify Tools \n ---------------------\n \n ### [TestGen](/contrib/testgen) ###\n Utilities to generate test vectors for the data-driven Bitcoin tests.\n \n-### [Test Patches](/contrib/test-patches) ###\n-These patches are applied when the automated pull-tester\n-tests each pull and when master is tested using jenkins.\n-\n-### [Verify SF Binaries](/contrib/verifysfbinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from SourceForge.\n+### [Verify Binaries](/contrib/verifybinaries) ###\n+This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org."
      },
      {
        "sha": "732981fe7c5d1cb447ee90aac1c8ffb96ab24636",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "added",
        "additions": 154,
        "deletions": 0,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,154 @@\n+# bash programmable completion for bitcoin-cli(1)\n+# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# call $bitcoin-cli for RPC\n+_bitcoin_rpc() {\n+    # determine already specified args necessary for RPC\n+    local rpcargs=()\n+    for i in ${COMP_LINE}; do\n+        case \"$i\" in\n+            -conf=*|-datadir=*|-regtest|-rpc*|-testnet)\n+                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n+                ;;\n+        esac\n+    done\n+    $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n+}\n+\n+# Add wallet accounts to COMPREPLY\n+_bitcoin_accounts() {\n+    local accounts\n+    accounts=$(_bitcoin_rpc listaccounts | awk -F '\"' '{ print $2 }')\n+    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n+}\n+\n+_bitcoin_cli() {\n+    local cur prev words=() cword\n+    local bitcoin_cli\n+\n+    # save and use original argument to invoke bitcoin-cli for -help, help and RPC\n+    # as bitcoin-cli might not be in $PATH\n+    bitcoin_cli=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n = cur prev words cword\n+\n+    if ((cword > 5)); then\n+        case ${words[cword-5]} in\n+            sendtoaddress)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 4)); then\n+        case ${words[cword-4]} in\n+            importaddress|listtransactions|setban)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            signrawtransaction)\n+                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 3)); then\n+        case ${words[cword-3]} in\n+            addmultisigaddress)\n+                _bitcoin_accounts\n+                return 0\n+                ;;\n+            getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 2)); then\n+        case ${words[cword-2]} in\n+            addnode)\n+                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            setban)\n+                COMPREPLY=( $( compgen -W \"add remove\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            fundrawtransaction|getblock|getblockheader|getmempoolancestors|getmempooldescendants|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            move|setaccount)\n+                _bitcoin_accounts\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    case \"$prev\" in\n+        backupwallet|dumpwallet|importwallet)\n+            _filedir\n+            return 0\n+            ;;\n+        getaddednodeinfo|getrawmempool|lockunspent|setgenerate)\n+            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+            return 0\n+            ;;\n+        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n+            _bitcoin_accounts\n+            return 0\n+            ;;\n+    esac\n+\n+    case \"$cur\" in\n+        -conf=*)\n+            cur=\"${cur#*=}\"\n+            _filedir\n+            return 0\n+            ;;\n+        -datadir=*)\n+            cur=\"${cur#*=}\"\n+            _filedir -d\n+            return 0\n+            ;;\n+        -*=*)\t# prevent nonsense completions\n+            return 0\n+            ;;\n+        *)\n+            local helpopts commands\n+\n+            # only parse -help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n+                helpopts=$($bitcoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+            fi\n+\n+            # only parse help if senseful\n+            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n+                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n+            fi\n+\n+            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n+\n+            # Prevent space if an argument is desired\n+            if [[ $COMPREPLY == *= ]]; then\n+                compopt -o nospace\n+            fi\n+            return 0\n+            ;;\n+    esac\n+} &&\n+complete -F _bitcoin_cli bitcoin-cli\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "b8133bf78914be68a33d881223da861820fdb05e",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -11,7 +11,7 @@ FORMS += \\\n     ../src/qt/forms/overviewpage.ui \\\n     ../src/qt/forms/receivecoinsdialog.ui \\\n     ../src/qt/forms/receiverequestdialog.ui \\\n-    ../src/qt/forms/rpcconsole.ui \\\n+    ../src/qt/forms/debugwindow.ui \\\n     ../src/qt/forms/sendcoinsdialog.ui \\\n     ../src/qt/forms/sendcoinsentry.ui \\\n     ../src/qt/forms/signverifymessagedialog.ui \\"
      },
      {
        "sha": "a83d2979ed3a8f11edea358937e8d5d359d58b4c",
        "filename": "contrib/bitcoin-tx.bash-completion",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-tx.bash-completion?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,57 @@\n+# bash programmable completion for bitcoin-tx(1)\n+# Copyright (c) 2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+_bitcoin_tx() {\n+    local cur prev words=() cword\n+    local bitcoin_tx\n+\n+    # save and use original argument to invoke bitcoin-tx for -help\n+    # it might not be in $PATH\n+    bitcoin_tx=\"$1\"\n+\n+    COMPREPLY=()\n+    _get_comp_words_by_ref -n =: cur prev words cword\n+\n+    case \"$cur\" in\n+        load=*:*)\n+            cur=\"${cur#load=*:}\"\n+            _filedir\n+            return 0\n+            ;;\n+        *=*)\t# prevent attempts to complete other arguments\n+            return 0\n+            ;;\n+    esac\n+\n+    if [[ \"$cword\" == 1 || ( \"$prev\" != \"-create\" && \"$prev\" == -* ) ]]; then\n+        # only options (or an uncompletable hex-string) allowed\n+        # parse bitcoin-tx -help for options\n+        local helpopts\n+        helpopts=$($bitcoin_tx -help | sed -e '/^  -/ p' -e d )\n+        COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n+    else\n+        # only commands are allowed\n+        # parse -help for commands\n+        local helpcmds\n+        helpcmds=$($bitcoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n+        COMPREPLY=( $( compgen -W \"$helpcmds\" -- \"$cur\" ) )\n+    fi\n+\n+    # Prevent space if an argument is desired\n+    if [[ $COMPREPLY == *= ]]; then\n+        compopt -o nospace\n+    fi\n+\n+    return 0\n+} &&\n+complete -F _bitcoin_tx bitcoin-tx\n+\n+# Local variables:\n+# mode: shell-script\n+# sh-basic-offset: 4\n+# sh-indent-comment: t\n+# indent-tabs-mode: nil\n+# End:\n+# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "af87e97d80690c969db4de7a5b4cb9ea8b330cb8",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 12,
        "deletions": 101,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,102 +1,21 @@\n-# bash programmable completion for bitcoind(1) and bitcoin-cli(1)\n-# Copyright (c) 2012,2014 Christian von Roques <roques@mti.ag>\n-# Distributed under the MIT/X11 software license, see the accompanying\n+# bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n+# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-have bitcoind && {\n-\n-# call $bitcoind for RPC\n-_bitcoin_rpc() {\n-    # determine already specified args necessary for RPC\n-    local rpcargs=()\n-    for i in ${COMP_LINE}; do\n-        case \"$i\" in\n-            -conf=*|-proxy*|-rpc*)\n-                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n-                ;;\n-        esac\n-    done\n-    $bitcoind \"${rpcargs[@]}\" \"$@\"\n-}\n-\n-# Add bitcoin accounts to COMPREPLY\n-_bitcoin_accounts() {\n-    local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk '/\".*\"/ { a=$1; gsub(/\"/, \"\", a); print a}')\n-    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n-}\n-\n _bitcoind() {\n     local cur prev words=() cword\n     local bitcoind\n \n-    # save and use original argument to invoke bitcoind\n-    # bitcoind might not be in $PATH\n+    # save and use original argument to invoke bitcoind for -help\n+    # it might not be in $PATH\n     bitcoind=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n = cur prev words cword\n \n-    if ((cword > 4)); then\n-        case ${words[cword-4]} in\n-            listtransactions)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            signrawtransaction)\n-                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 3)); then\n-        case ${words[cword-3]} in\n-            addmultisigaddress)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n-            getbalance|gettxout|importaddress|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 2)); then\n-        case ${words[cword-2]} in\n-            addnode)\n-                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            getblock|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            move|setaccount)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    case \"$prev\" in\n-        backupwallet|dumpwallet|importwallet)\n-            _filedir\n-            return 0\n-            ;;\n-        getmempool|lockunspent|setgenerate)\n-            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-            return 0\n-            ;;\n-        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n-            return 0\n-            ;;\n-    esac\n-\n     case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-wallet=*|-rpcsslcertificatechainfile=*|-rpcsslprivatekeyfile=*)\n+        -conf=*|-pid=*|-loadblock=*|-rootcertificates=*|-rpccookiefile=*|-wallet=*)\n             cur=\"${cur#*=}\"\n             _filedir\n             return 0\n@@ -110,31 +29,23 @@ _bitcoind() {\n             return 0\n             ;;\n         *)\n-            local helpopts commands\n \n-            # only parse --help if senseful\n+            # only parse -help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                helpopts=$($bitcoind --help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                local helpopts\n+                helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n             fi\n \n-            # only parse help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n-            fi\n-\n-            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n-\n             # Prevent space if an argument is desired\n             if [[ $COMPREPLY == *= ]]; then\n                 compopt -o nospace\n             fi\n             return 0\n             ;;\n     esac\n-}\n-\n-complete -F _bitcoind bitcoind bitcoin-cli\n-}\n+} &&\n+complete -F _bitcoind bitcoind bitcoin-qt\n \n # Local variables:\n # mode: shell-script"
      },
      {
        "sha": "f5ef2f0405a941e2c9ca8c4c1178a5a97a9d590e",
        "filename": "contrib/bitrpc/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/bitrpc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/bitrpc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/README.md?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,8 +0,0 @@\n-### BitRPC\n-Allows for sending of all standard Bitcoin commands via RPC rather than as command line args.\n-\n-### Looking for Wallet Tools?\n-BitRPC.py is able to do the exact same thing as `walletchangepass.py` and `walletunlock.py`. Their respective commands in BitRPC.py are:\n-\n-\tbitrpc.py walletpassphrasechange\n-\tbitrpc.py walletpassphrase\n\\ No newline at end of file"
      },
      {
        "sha": "02577b1b6aab76987a71e5aea9c9ce023b4fd66e",
        "filename": "contrib/bitrpc/bitrpc.py",
        "status": "removed",
        "additions": 0,
        "deletions": 337,
        "changes": 337,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/bitrpc/bitrpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/bitrpc/bitrpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/bitrpc.py?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,337 +0,0 @@\n-from jsonrpc import ServiceProxy\n-import sys\n-import string\n-import getpass\n-\n-# ===== BEGIN USER SETTINGS =====\n-# if you do not set these you will be prompted for a password for every command\n-rpcuser = \"\"\n-rpcpass = \"\"\n-# ====== END USER SETTINGS ======\n-\n-\n-if rpcpass == \"\":\n-    access = ServiceProxy(\"http://127.0.0.1:8332\")\n-else:\n-    access = ServiceProxy(\"http://\"+rpcuser+\":\"+rpcpass+\"@127.0.0.1:8332\")\n-cmd = sys.argv[1].lower()\n-\n-if cmd == \"backupwallet\":\n-    try:\n-        path = raw_input(\"Enter destination path/filename: \")\n-        print access.backupwallet(path)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-        \n-elif cmd == \"encryptwallet\":\n-    try:\n-        pwd = getpass.getpass(prompt=\"Enter passphrase: \")\n-        pwd2 = getpass.getpass(prompt=\"Repeat passphrase: \")\n-        if pwd == pwd2:\n-            access.encryptwallet(pwd)\n-            print \"\\n---Wallet encrypted. Server stopping, restart to run with encrypted wallet---\\n\"\n-        else:\n-            print \"\\n---Passphrases do not match---\\n\"\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getaccount\":\n-    try:\n-        addr = raw_input(\"Enter a Bitcoin address: \")\n-        print access.getaccount(addr)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getaccountaddress\":\n-    try:\n-        acct = raw_input(\"Enter an account name: \")\n-        print access.getaccountaddress(acct)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getaddressesbyaccount\":\n-    try:\n-        acct = raw_input(\"Enter an account name: \")\n-        print access.getaddressesbyaccount(acct)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getbalance\":\n-    try:\n-        acct = raw_input(\"Enter an account (optional): \")\n-        mc = raw_input(\"Minimum confirmations (optional): \")\n-        try:\n-            print access.getbalance(acct, mc)\n-        except:\n-            print access.getbalance()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getblockbycount\":\n-    try:\n-        height = raw_input(\"Height: \")\n-        print access.getblockbycount(height)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getblockcount\":\n-    try:\n-        print access.getblockcount()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getblocknumber\":\n-    try:\n-        print access.getblocknumber()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getconnectioncount\":\n-    try:\n-        print access.getconnectioncount()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getdifficulty\":\n-    try:\n-        print access.getdifficulty()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getgenerate\":\n-    try:\n-        print access.getgenerate()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"gethashespersec\":\n-    try:\n-        print access.gethashespersec()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getinfo\":\n-    try:\n-        print access.getinfo()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getnewaddress\":\n-    try:\n-        acct = raw_input(\"Enter an account name: \")\n-        try:\n-            print access.getnewaddress(acct)\n-        except:\n-            print access.getnewaddress()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getreceivedbyaccount\":\n-    try:\n-        acct = raw_input(\"Enter an account (optional): \")\n-        mc = raw_input(\"Minimum confirmations (optional): \")\n-        try:\n-            print access.getreceivedbyaccount(acct, mc)\n-        except:\n-            print access.getreceivedbyaccount()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getreceivedbyaddress\":\n-    try:\n-        addr = raw_input(\"Enter a Bitcoin address (optional): \")\n-        mc = raw_input(\"Minimum confirmations (optional): \")\n-        try:\n-            print access.getreceivedbyaddress(addr, mc)\n-        except:\n-            print access.getreceivedbyaddress()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"gettransaction\":\n-    try:\n-        txid = raw_input(\"Enter a transaction ID: \")\n-        print access.gettransaction(txid)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getwork\":\n-    try:\n-        data = raw_input(\"Data (optional): \")\n-        try:\n-            print access.gettransaction(data)\n-        except:\n-            print access.gettransaction()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"help\":\n-    try:\n-        cmd = raw_input(\"Command (optional): \")\n-        try:\n-            print access.help(cmd)\n-        except:\n-            print access.help()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"listaccounts\":\n-    try:\n-        mc = raw_input(\"Minimum confirmations (optional): \")\n-        try:\n-            print access.listaccounts(mc)\n-        except:\n-            print access.listaccounts()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"listreceivedbyaccount\":\n-    try:\n-        mc = raw_input(\"Minimum confirmations (optional): \")\n-        incemp = raw_input(\"Include empty? (true/false, optional): \")\n-        try:\n-            print access.listreceivedbyaccount(mc, incemp)\n-        except:\n-            print access.listreceivedbyaccount()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"listreceivedbyaddress\":\n-    try:\n-        mc = raw_input(\"Minimum confirmations (optional): \")\n-        incemp = raw_input(\"Include empty? (true/false, optional): \")\n-        try:\n-            print access.listreceivedbyaddress(mc, incemp)\n-        except:\n-            print access.listreceivedbyaddress()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"listtransactions\":\n-    try:\n-        acct = raw_input(\"Account (optional): \")\n-        count = raw_input(\"Number of transactions (optional): \")\n-        frm = raw_input(\"Skip (optional):\")\n-        try:\n-            print access.listtransactions(acct, count, frm)\n-        except:\n-            print access.listtransactions()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"move\":\n-    try:\n-        frm = raw_input(\"From: \")\n-        to = raw_input(\"To: \")\n-        amt = raw_input(\"Amount:\")\n-        mc = raw_input(\"Minimum confirmations (optional): \")\n-        comment = raw_input(\"Comment (optional): \")\n-        try:\n-            print access.move(frm, to, amt, mc, comment)\n-        except:\n-            print access.move(frm, to, amt)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"sendfrom\":\n-    try:\n-        frm = raw_input(\"From: \")\n-        to = raw_input(\"To: \")\n-        amt = raw_input(\"Amount:\")\n-        mc = raw_input(\"Minimum confirmations (optional): \")\n-        comment = raw_input(\"Comment (optional): \")\n-        commentto = raw_input(\"Comment-to (optional): \")\n-        try:\n-            print access.sendfrom(frm, to, amt, mc, comment, commentto)\n-        except:\n-            print access.sendfrom(frm, to, amt)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"sendmany\":\n-    try:\n-        frm = raw_input(\"From: \")\n-        to = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n-        mc = raw_input(\"Minimum confirmations (optional): \")\n-        comment = raw_input(\"Comment (optional): \")\n-        try:\n-            print access.sendmany(frm,to,mc,comment)\n-        except:\n-            print access.sendmany(frm,to)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"sendtoaddress\":\n-    try:\n-        to = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n-        amt = raw_input(\"Amount:\")\n-        comment = raw_input(\"Comment (optional): \")\n-        commentto = raw_input(\"Comment-to (optional): \")\n-        try:\n-            print access.sendtoaddress(to,amt,comment,commentto)\n-        except:\n-            print access.sendtoaddress(to,amt)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"setaccount\":\n-    try:\n-        addr = raw_input(\"Address: \")\n-        acct = raw_input(\"Account:\")\n-        print access.setaccount(addr,acct)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"setgenerate\":\n-    try:\n-        gen= raw_input(\"Generate? (true/false): \")\n-        cpus = raw_input(\"Max processors/cores (-1 for unlimited, optional):\")\n-        try:\n-            print access.setgenerate(gen, cpus)\n-        except:\n-            print access.setgenerate(gen)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"settxfee\":\n-    try:\n-        amt = raw_input(\"Amount:\")\n-        print access.settxfee(amt)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"stop\":\n-    try:\n-        print access.stop()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"validateaddress\":\n-    try:\n-        addr = raw_input(\"Address: \")\n-        print access.validateaddress(addr)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"walletpassphrase\":\n-    try:\n-        pwd = getpass.getpass(prompt=\"Enter wallet passphrase: \")\n-        access.walletpassphrase(pwd, 60)\n-        print \"\\n---Wallet unlocked---\\n\"\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"walletpassphrasechange\":\n-    try:\n-        pwd = getpass.getpass(prompt=\"Enter old wallet passphrase: \")\n-        pwd2 = getpass.getpass(prompt=\"Enter new wallet passphrase: \")\n-        access.walletpassphrasechange(pwd, pwd2)\n-        print\n-        print \"\\n---Passphrase changed---\\n\"\n-    except:\n-        print\n-        print \"\\n---An error occurred---\\n\"\n-        print\n-\n-else:\n-    print \"Command not found or not supported\""
      },
      {
        "sha": "7acb0b0aea668dd16129434813d05c0306617b68",
        "filename": "contrib/debian/bitcoin-tx.bash-completion",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.bash-completion?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1 @@\n+contrib/bitcoin-tx.bash-completion\tbitcoin-tx"
      },
      {
        "sha": "2c21052a6876b4a0f94b79858ae1d164cf179b21",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1 @@\n+usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "5c69d78fbb0fc73017167bab3d8a1c6a78e85ed9",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1 +1,2 @@\n contrib/bitcoind.bash-completion\tbitcoind\n+contrib/bitcoin-cli.bash-completion\tbitcoin-cli"
      },
      {
        "sha": "6d3e683855018ec721d97853b0d5c9b90edd5c35",
        "filename": "contrib/debian/bitcoind.manpages",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/bitcoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/bitcoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.manpages?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,2 +1,3 @@\n debian/manpages/bitcoind.1\n debian/manpages/bitcoin.conf.5\n+debian/manpages/bitcoin-cli.1"
      },
      {
        "sha": "110bfe03effcdad2f353ff9746ab9589e4a7c08e",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 45,
        "deletions": 3,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,3 +1,45 @@\n+bitcoin (0.11.0-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n+\n+bitcoin (0.10.2-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n+\n+bitcoin (0.10.1-precise3) precise; urgency=medium\n+\n+  * Fix build dep (include python).\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n+\n+bitcoin (0.10.1-precise2) precise; urgency=medium\n+\n+  * Fix miniupnpc dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n+\n+bitcoin (0.10.1-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n+\n+bitcoin (0.10.0-precise1) precise; urgency=medium\n+\n+  * New upstream releases.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 18 Feb 2015 13:22:00 -1000\n+\n+bitcoin (0.9.4-precise1) precise; urgency=high\n+\n+  * New upstream releases.\n+\n+ -- Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com>  Mon, 12 Jan 2015 23:30:00 -1000\n+\n bitcoin (0.9.3-precise1) precise; urgency=medium\n \n   * New upstream releases.\n@@ -137,7 +179,7 @@ bitcoin (0.5.3-natty0) natty; urgency=low\n bitcoin (0.5.2-natty1) natty; urgency=low\n \n   * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isnt anonymous without\n+    These should never have been there, bitcoin isn't anonymous without\n     a ton of work that virtually no users will ever be willing and\n     capable of doing\n \n@@ -178,7 +220,7 @@ bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n \n   * Add test_bitcoin to build test\n   * Fix clean\n-  * Remove uneccessary build-dependancies\n+  * Remove unnecessary build-dependancies\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n@@ -338,7 +380,7 @@ bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n \n bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n \n-  * Fix override agressive optimizations.\n+  * Fix override aggressive optimizations.\n   * Fix tighten build-dependencies to really fit backporting to Lenny:\n     + Add fallback build-dependency on libdb4.6++-dev.\n     + Tighten unversioned Boost build-dependencies to recent versions,"
      },
      {
        "sha": "fce6bc0118f177cd58369825ec129bcd1fed819d",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 29,
        "deletions": 20,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -12,32 +12,30 @@ Build-Depends: debhelper,\n  libdb4.8++-dev,\n  libssl-dev,\n  pkg-config,\n- libminiupnpc8-dev,\n+ libminiupnpc8-dev | libminiupnpc-dev (>> 1.6),\n  libboost-filesystem-dev (>> 1.35) | libboost-filesystem1.35-dev,\n  libboost-program-options-dev (>> 1.35) | libboost-program-options1.35-dev,\n  libboost-thread-dev (>> 1.35) | libboost-thread1.35-dev,\n  libboost-test-dev (>> 1.35) | libboost-test1.35-dev,\n  qt4-qmake,\n  libqt4-dev,\n  libqrencode-dev,\n- libprotobuf-dev, protobuf-compiler\n+ libprotobuf-dev, protobuf-compiler,\n+ python\n Standards-Version: 3.9.2\n-Homepage: http://www.bitcoin.org/\n+Homepage: https://bitcoincore.org/\n Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: http://github.com/bitcoin/bitcoin\n+Vcs-Browser: https://github.com/bitcoin/bitcoin\n \n Package: bitcoind\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n- .\n- Full transaction history is stored locally at each client.  This\n- requires 20+ GB of space, slowly growing.\n+ Bitcoin is an experimental new digital currency that enables instant\n+ payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n+ technology to operate with no central authority: managing transactions\n+ and issuing money are carried out collectively by the network. Bitcoin Core\n+ is the name of the open source software which enables the use of this currency.\n  .\n  This package provides the daemon, bitcoind, and the CLI tool\n  bitcoin-cli to interact with the daemon.\n@@ -46,13 +44,24 @@ Package: bitcoin-qt\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n- .\n- Full transaction history is stored locally at each client.  This\n- requires 20+ GB of space, slowly growing.\n+ Bitcoin is an experimental new digital currency that enables instant\n+ payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n+ technology to operate with no central authority: managing transactions\n+ and issuing money are carried out collectively by the network. Bitcoin Core\n+ is the name of the open source software which enables the use of this currency.\n  .\n  This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n+\n+Package: bitcoin-tx\n+Architecture: any\n+Depends: ${shlibs:Depends}, ${misc:Depends}\n+Description: peer-to-peer digital currency - standalone transaction tool\n+ Bitcoin is an experimental new digital currency that enables instant\n+ payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n+ technology to operate with no central authority: managing transactions\n+ and issuing money are carried out collectively by the network. Bitcoin Core\n+ is the name of the open source software which enables the use of this currency.\n+ .\n+ This package provides bitcoin-tx, a command-line transaction creation\n+ tool which can be used without a bitcoin daemon.  Some means of\n+ exchanging minimal transaction data with peers is still required."
      },
      {
        "sha": "c039a7bae5861de9d682c76327c25fa6e52f77e5",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 59,
        "deletions": 90,
        "changes": 149,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,24 +1,15 @@\n-Format: http://svn.debian.org/wsvn/dep/web/deps/dep5.mdwn?rev=174\n+Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n Upstream-Name: Bitcoin\n Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n  irc://#bitcoin@freenode.net\n-Source: http://sourceforge.net/projects/bitcoin/files/\n- https://github.com/bitcoin/bitcoin\n+Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2012, Bitcoin Core Developers\n+Copyright: 2009-2016, Bitcoin Core Developers\n License: Expat\n Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n \n-Files: src/json/*\n-Copyright: 2007-2009, John W. Wilkinson\n-License: Expat\n-\n-Files: src/strlcpy.h\n-Copyright: 1998, Todd C. Miller <Todd.Miller@courtesan.com>\n-License: ISC\n-\n Files: debian/*\n Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n            2011, Matt Corallo <matt@bluematt.me>\n@@ -28,60 +19,69 @@ Files: debian/manpages/*\n Copyright: Micah Anderson <micah@debian.org>\n License: GPL-3+\n \n-Files: src/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n-       src/qt/res/src/*.svg\n-Copyright: Wladimir van der Laan\n+Files: src/qt/res/icons/add.png\n+       src/qt/res/icons/address-book.png\n+       src/qt/res/icons/chevron.png\n+       src/qt/res/icons/configure.png\n+       src/qt/res/icons/debugwindow.png\n+       src/qt/res/icons/edit.png\n+       src/qt/res/icons/editcopy.png\n+       src/qt/res/icons/editpaste.png\n+       src/qt/res/icons/export.png\n+       src/qt/res/icons/eye.png\n+       src/qt/res/icons/filesave.png\n+       src/qt/res/icons/history.png\n+       src/qt/res/icons/info.png\n+       src/qt/res/icons/key.png\n+       src/qt/res/icons/lock_*.png\n+       src/qt/res/icons/open.png\n+       src/qt/res/icons/overview.png\n+       src/qt/res/icons/quit.png\n+       src/qt/res/icons/receive.png\n+       src/qt/res/icons/remove.png\n+       src/qt/res/icons/send.png\n+       src/qt/res/icons/synced.png\n+       src/qt/res/icons/transaction*.png\n+       src/qt/res/icons/tx_output.png\n+       src/qt/res/icons/warning.png\n+Copyright: Stephen Hutchings (and more)\n+           http://typicons.com\n License: Expat\n-\n-Files: src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n-       src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n-       src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n-       src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n-       src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n-Copyright: David Vignoni (david@icon-king.com)\n-           ICON KING - www.icon-king.com\n-License: LGPL\n-Comment: NUVOLA ICON THEME for KDE 3.x\n-         Original icons: kaddressbook, klipper_dock, view-list-text,\n-                         key-password, encrypted/decrypted, go-home, go-down,\n-                         go-next, dialog-ok\n-         Site: http://www.icon-king.com/projects/nuvola/\n+Comment: Site: https://github.com/stephenhutchings/typicons.font\n \n Files: src/qt/res/icons/connect*.png\n-Copyright: schollidesign\n-License: GPL-3+\n-Comment: Icon Pack: Human-O2\n-         Site: http://findicons.com/icon/93743/blocks_gnome_netstatus_0\n-\n-Files: src/qt/res/icons/transaction*.png\n-Copyright: md2k7\n+       src/qt/res/src/connect-*.svg\n+Copyright: Marco Falke\n License: Expat\n-Comment: Site: https://bitcointalk.org/index.php?topic=15276.0\n+Comment: Inspired by Stephan Hutchings Typicons\n \n-Files: src/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n-      src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n-      src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n-      src/qt/res/icons/remove.png\n-Copyright: http://www.everaldo.com\n-License: LGPL\n-Comment: Icon Pack: Crystal SVG\n+Files: src/qt/res/icons/tx_mined.png\n+       src/qt/res/src/mine.svg\n+       src/qt/res/icons/fontbigger.png\n+       src/qt/res/icons/fontsmaller.png\n+Copyright: Jonas Schnelli\n+License: Expat\n+Comment:\n \n-Files: src/qt/res/icons/bitcoin.png, src/qt/res/icons/toolbar.png\n-Copyright: Bitboy (optimized for 16x16 by Wladimir van der Laan)\n-License: PUB-DOM\n+Files: src/qt/res/icons/clock*.png\n+       src/qt/res/icons/eye_*.png\n+       src/qt/res/icons/verify.png\n+       src/qt/res/icons/tx_in*.png\n+       src/qt/res/src/clock_*.svg\n+       src/qt/res/src/tx_*.svg\n+       src/qt/res/src/verify.svg\n+Copyright: Stephan Hutching, Jonas Schnelli\n+License: Expat\n+Comment: Modifications of Stephan Hutchings Typicons\n+\n+Files: src/qt/res/icons/about.png\n+       src/qt/res/icons/bitcoin.*\n+       share/pixmaps/bitcoin*\n+       src/qt/res/src/bitcoin.svg\n+Copyright: Bitboy, Jonas Schnelli\n+License: public-domain\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n-Files:  scripts/img/reload.xcf, src/qt/res/movies/*.png\n-Copyright: Everaldo (Everaldo Coelho)\n-License: GPL-3+\n-Comment: Icon Pack: Kids\n-         Site: http://findicons.com/icon/17102/reload?id=17102\n-\n-Files: src/qt/res/images/splash2.jpg\n-License: PUB-DOM\n-Copyright: Crobbo (forum)\n-Comment: Site: https://bitcointalk.org/index.php?topic=32273.0\n-\n \n License: Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n@@ -103,20 +103,6 @@ License: Expat\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n \n-License: ISC\n- Permission to use, copy, modify, and distribute this software for any\n- purpose with or without fee is hereby granted, provided that the above\n- copyright notice and this permission notice appear in all copies.\n- .\n- THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\n- WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\n- WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR\n- BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES\n- OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n- WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\n- ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n- SOFTWARE.\n-\n License: GPL-2+\n  This program is free software; you can redistribute it and/or modify it\n  under the terms of the GNU General Public License as published by the\n@@ -145,22 +131,5 @@ Comment:\n  You should have received a copy of the GNU General Public License along\n  with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-License: LGPL\n- This program is free software: you can redistribute it and/or modify\n- it under the terms of the GNU General Public License as published by\n- the Free Software Foundation, either version 3 of the License, or\n- (at your option) any later version.\n- .\n- This program is distributed in the hope that it will be useful,\n- but WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- GNU General Public License for more details.\n-Comment:\n- On Debian systems the GNU Lesser General Public License (LGPL) is\n- located in '/usr/share/common-licenses/LGPL'.\n- .\n- You should have received a copy of the GNU General Public License\n- along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-License: PUB-DOM\n+License: public-domain\n  This work is in the public domain."
      },
      {
        "sha": "2831c072924362be0afc4dd8f953a824923d7704",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 19,
        "deletions": 10,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -13,6 +13,12 @@\n # Connect via a SOCKS5 proxy\n #proxy=127.0.0.1:9050\n \n+# Bind to given address and always listen on it. Use [host]:port notation for IPv6\n+#bind=<addr>\n+\n+# Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\n+#whitebind=<addr>\n+\n ##############################################################\n ##            Quick Primer on addnode vs connect            ##\n ##  Let's say for instance you use addnode=4.2.2.4          ##\n@@ -54,16 +60,20 @@\n # JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n #\n \n-# server=1 tells Bitcoin-QT and bitcoind to accept JSON-RPC commands\n+# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n #server=0\n \n+# Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n+# This option can be specified multiple times (default: bind to all interfaces)\n+#rpcbind=<addr>\n+\n # You must set rpcuser and rpcpassword to secure the JSON-RPC api\n #rpcuser=Ulysseys\n #rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n \n # How many seconds bitcoin will wait for a complete RPC HTTP request.\n # after the HTTP connection is established. \n-#rpctimeout=30\n+#rpcclienttimeout=30\n \n # By default, only RPC connections from localhost are allowed.\n # Specify as many rpcallowip= settings as you like to allow connections from other hosts,\n@@ -72,7 +82,7 @@\n # NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n # because the rpcpassword is transmitted over the network unencrypted.\n \n-# server=1 tells Bitcoin-QT to accept JSON-RPC commands.\n+# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n # it is also read by bitcoind to determine if RPC should be enabled \n #rpcallowip=10.1.1.34/255.255.255.0\n #rpcallowip=1.2.3.4/24\n@@ -85,15 +95,14 @@\n # running on another host using this option:\n #rpcconnect=127.0.0.1\n \n-# Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate\n-# with Bitcoin -server or bitcoind\n-#rpcssl=1\n+# Transaction Fee Changes in 0.10.0\n \n-# OpenSSL settings used when rpcssl=1\n-#rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n-#rpcsslcertificatechainfile=server.cert\n-#rpcsslprivatekeyfile=server.pem\n+# Send transactions as zero-fee transactions if possible (default: 0)\n+#sendfreetransactions=0\n \n+# Create transactions that have enough fees (or priority) so they are likely to begin confirmation within n blocks (default: 1).\n+# This setting is over-ridden by the -paytxfee option.\n+#txconfirmtarget=n\n \n # Miscellaneous options\n "
      },
      {
        "sha": "16c338dd3e51115c67439c5c1651e8465a3547d3",
        "filename": "contrib/debian/manpages/bitcoin-cli.1",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/manpages/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/manpages/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-cli.1?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,21 @@\n+.TH BITCOIN-CLI \"1\" \"February 2016\" \"bitcoin-cli 0.12\"\n+.SH NAME\n+bitcoin-cli \\- a remote procedure call client for Bitcoin Core. \n+.SH SYNOPSIS\n+bitcoin-cli [options] <command> [params] \\- Send command to Bitcoin Core. \n+.TP\n+bitcoin-cli [options] help \\- Asks Bitcoin Core for a list of supported commands.\n+.SH DESCRIPTION\n+This manual page documents the bitcoin-cli program. bitcoin-cli is an RPC client used to send commands to Bitcoin Core.\n+\n+.SH OPTIONS\n+.TP\n+\\fB\\-?\\fR\n+Show possible options.\n+\n+.SH \"SEE ALSO\"\n+\\fBbitcoind\\fP, \\fBbitcoin.conf\\fP\n+.SH AUTHOR\n+This manual page was written by Ciemon Dunville <ciemon@gmail.com>. Permission is granted to copy, distribute and/or modify this document under the terms of the MIT License.\n+\n+The complete text of the MIT License can be found on the web at \\fIhttp://opensource.org/licenses/MIT\\fP."
      },
      {
        "sha": "685a282080e2b664006a27c64c8f09f5b2afed49",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "modified",
        "additions": 4,
        "deletions": 194,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,4 +1,4 @@\n-.TH BITCOIN-QT \"1\" \"April 2013\" \"bitcoin-qt 1\"\n+.TH BITCOIN-QT \"1\" \"February 2016\" \"bitcoin-qt 0.12\"\n .SH NAME\n bitcoin-qt \\- peer-to-peer network based digital currency\n .SH DESCRIPTION\n@@ -8,196 +8,6 @@ bitcoin\\-qt [command\\-line options]\n .SH OPTIONS\n .TP\n \\-?\n-This help message\n-.TP\n-\\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf)\n-.TP\n-\\fB\\-pid=\\fR<file>\n-Specify pid file (default: bitcoind.pid)\n-.TP\n-\\fB\\-gen\\fR\n-Generate coins\n-.TP\n-\\fB\\-gen\\fR=\\fI0\\fR\n-Don't generate coins\n-.TP\n-\\fB\\-datadir=\\fR<dir>\n-Specify data directory\n-.TP\n-\\fB\\-dbcache=\\fR<n>\n-Set database cache size in megabytes (default: 25)\n-.TP\n-\\fB\\-timeout=\\fR<n>\n-Specify connection timeout in milliseconds (default: 5000)\n-.TP\n-\\fB\\-proxy=\\fR<ip:port>\n-Connect through SOCKS5 proxy\n-.TP\n-\\fB\\-tor=\\fR<ip:port>\n-Use proxy to reach tor hidden services (default: same as \\fB\\-proxy\\fR)\n-.TP\n-\\fB\\-dns\\fR\n-Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR\n-.TP\n-\\fB\\-port=\\fR<port>\n-Listen for connections on <port> (default: 8333 or testnet: 18333)\n-.TP\n-\\fB\\-maxconnections=\\fR<n>\n-Maintain at most <n> connections to peers (default: 125)\n-.TP\n-\\fB\\-addnode=\\fR<ip>\n-Add a node to connect to and attempt to keep the connection open\n-.TP\n-\\fB\\-connect=\\fR<ip>\n-Connect only to the specified node(s)\n-.TP\n-\\fB\\-seednode=\\fR<ip>\n-Connect to a node to retrieve peer addresses, and disconnect\n-.TP\n-\\fB\\-externalip=\\fR<ip>\n-Specify your own public address\n-.TP\n-\\fB\\-onlynet=\\fR<net>\n-Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\n-.TP\n-\\fB\\-discover\\fR\n-Discover own IP address (default: 1 when listening and no \\fB\\-externalip\\fR)\n-.TP\n-\\fB\\-checkpoints\\fR\n-Only accept block chain matching built\\-in checkpoints (default: 1)\n-.TP\n-\\fB\\-listen\\fR\n-Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n-.TP\n-\\fB\\-bind=\\fR<addr>\n-Bind to given address and always listen on it. Use [host]:port notation for IPv6\n-.TP\n-\\fB\\-dnsseed\\fR\n-Find peers using DNS lookup (default: 1 unless \\fB\\-connect\\fR)\n-.TP\n-\\fB\\-banscore=\\fR<n>\n-Threshold for disconnecting misbehaving peers (default: 100)\n-.TP\n-\\fB\\-bantime=\\fR<n>\n-Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\n-.TP\n-\\fB\\-maxreceivebuffer=\\fR<n>\n-Maximum per\\-connection receive buffer, <n>*1000 bytes (default: 5000)\n-.TP\n-\\fB\\-maxsendbuffer=\\fR<n>\n-Maximum per\\-connection send buffer, <n>*1000 bytes (default: 1000)\n-.TP\n-\\fB\\-upnp\\fR\n-Use UPnP to map the listening port (default: 1 when listening)\n-.TP\n-\\fB\\-paytxfee=\\fR<amt>\n-Fee per KB to add to transactions you send\n-.TP\n-\\fB\\-server\\fR\n-Accept command line and JSON\\-RPC commands\n-.TP\n-\\fB\\-testnet\\fR\n-Use the test network\n-.TP\n-\\fB\\-debug\\fR\n-Output extra debugging information. Implies all other \\fB\\-debug\\fR* options\n-.TP\n-\\fB\\-debugnet\\fR\n-Output extra network debugging information\n-.TP\n-\\fB\\-logtimestamps\\fR\n-Prepend debug output with timestamp\n-.TP\n-\\fB\\-shrinkdebugfile\\fR\n-Shrink debug.log file on client startup (default: 1 when no \\fB\\-debug\\fR)\n-.TP\n-\\fB\\-printtoconsole\\fR\n-Send trace/debug info to console instead of debug.log file\n-.TP\n-\\fB\\-rpcuser=\\fR<user>\n-Username for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcpassword=\\fR<pw>\n-Password for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcport=\\fR<port>\n-Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet: 18332)\n-.TP\n-\\fB\\-rpcallowip=\\fR<ip>\n-Allow JSON\\-RPC connections from specified IP address\n-.TP\n-\\fB\\-rpcthreads=\\fR<n>\n-Set the number of threads to service RPC calls (default: 4)\n-.TP\n-\\fB\\-blocknotify=\\fR<cmd>\n-Execute command when the best block changes (%s in cmd is replaced by block hash)\n-.TP\n-\\fB\\-walletnotify=\\fR<cmd>\n-Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\n-.TP\n-\\fB\\-alertnotify=\\fR<cmd>\n-Execute command when a relevant alert is received (%s in cmd is replaced by message)\n-.TP\n-\\fB\\-upgradewallet\\fR\n-Upgrade wallet to latest format\n-.TP\n-\\fB\\-keypool=\\fR<n>\n-Set key pool size to <n> (default: 100)\n-.TP\n-\\fB\\-rescan\\fR\n-Rescan the block chain for missing wallet transactions\n-.TP\n-\\fB\\-salvagewallet\\fR\n-Attempt to recover private keys from a corrupt wallet.dat\n-.TP\n-\\fB\\-checkblocks=\\fR<n>\n-How many blocks to check at startup (default: 288, 0 = all)\n-.TP\n-\\fB\\-checklevel=\\fR<n>\n-How thorough the block verification is (0\\-4, default: 3)\n-.TP\n-\\fB\\-txindex\\fR\n-Maintain a full transaction index (default: 0)\n-.TP\n-\\fB\\-loadblock=\\fR<file>\n-Imports blocks from external blk000??.dat file\n-.TP\n-\\fB\\-reindex\\fR\n-Rebuild block chain index from current blk000??.dat files\n-.TP\n-\\fB\\-par=\\fR<n>\n-Set the number of script verification threads (1\\-16, 0=auto, default: 0)\n-.SS \"Block creation options:\"\n-.TP\n-\\fB\\-blockminsize=\\fR<n>\n-Set minimum block size in bytes (default: 0)\n-.TP\n-\\fB\\-blockmaxsize=\\fR<n>\n-Set maximum block size in bytes (default: 250000)\n-.HP\n-\\fB\\-blockprioritysize=\\fR<n> Set maximum size of high\\-priority/low\\-fee transactions in bytes (default: 27000)\n-.PP\n-SSL options: (see the Bitcoin Wiki for SSL setup instructions)\n-.TP\n-\\fB\\-rpcssl\\fR\n-Use OpenSSL (https) for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcsslcertificatechainfile=\\fR<file.cert>\n-Server certificate file (default: server.cert)\n-.TP\n-\\fB\\-rpcsslprivatekeyfile=\\fR<file.pem>\n-Server private key (default: server.pem)\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n-Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\n-.SS \"UI options:\"\n-.TP\n-\\fB\\-lang=\\fR<lang>\n-Set language, for example \"de_DE\" (default: system locale)\n-.TP\n-\\fB\\-min\\fR\n-Start minimized\n-.TP\n-\\fB\\-splash\\fR\n-Show splash screen on startup (default: 1)\n+List options.\n+.SH \"SEE ALSO\"\n+bitcoind(1)"
      },
      {
        "sha": "839dc26c1aa57da476d26eab3e4271c604540582",
        "filename": "contrib/debian/manpages/bitcoin.conf.5",
        "status": "modified",
        "additions": 3,
        "deletions": 73,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/manpages/bitcoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/manpages/bitcoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin.conf.5?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,85 +1,15 @@\n-.TH BITCOIN.CONF \"5\" \"January 2011\" \"bitcoin.conf 3.19\"\n+.TH BITCOIN.CONF \"5\" \"February 2016\" \"bitcoin.conf 0.12\"\n .SH NAME\n bitcoin.conf \\- bitcoin configuration file\n .SH SYNOPSIS\n All command-line options (except for '\\-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n .TP\n-The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character.\n+The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character. Please refer to bitcoind(1) for a up to date list of valid options.\n .TP\n The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, bitcoind(1) will look for a file named bitcoin.conf(5) in the bitcoin data directory, but both the data directory and the configuration file path may be changed using the '\\-datadir' and '\\-conf' command-line arguments.\n .SH LOCATION\n bitcoin.conf should be located in $HOME/.bitcoin\n-.SH NETWORK-RELATED SETTINGS\n-.TP\n-.TP\n-\\fBtestnet=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Enable or disable run on the test network instead of the real *bitcoin* network.\n-.TP\n-\\fBproxy=\\fR\\fI'127.0.0.1:9050'\\fR\n-Connect via a socks4 proxy.\n-.TP\n-\\fBaddnode=\\fR\\fI'10.0.0.2:8333'\\fR\n-Use as many *addnode=* settings as you like to connect to specific peers.\n-.TP\n-\\fBconnect=\\fR\\fI'10.0.0.1:8333'\\fR\n-Use as many *connect=* settings as you like to connect ONLY to specific peers.\n-.TP\n-\\fRmaxconnections=\\fR\\fI'value'\\fR\n-Maximum number of inbound+outbound connections.\n-.SH JSON-RPC OPTIONS\n-.TP\n-\\fBserver=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Tells *bitcoin* to accept or not accept JSON-RPC commands.\n-.TP\n-\\fBrpcuser=\\fR\\fI'username'\\fR\n-You must set *rpcuser* to secure the JSON-RPC api.\n-.TP\n-\\fBrpcpassword=\\fR\\fI'password'\\fR\n-You must set *rpcpassword* to secure the JSON-RPC api.\n-.TP\n-\\fBrpcallowip=\\fR\\fI'192.168.1.*'\\fR\n-By default, only RPC connections from localhost are allowed. Specify as many *rpcallowip=* settings as you like to allow connections from other hosts (and you may use * as a wildcard character).\n-.TP\n-\\fBrpcport=\\fR\\fI'8332'\\fR\n-Listen for RPC connections on this TCP port.\n-.TP\n-\\fBrpcconnect=\\fR\\fI'127.0.0.1'\\fR\n-You can use *bitcoin* or *bitcoind(1)* to send commands to *bitcoin*/*bitcoind(1)* running on another host using this option.\n-.TP\n-\\fBrpcssl=\\fR\\fI'1'\\fR\n-Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate with *bitcoin* '\\-server' or *bitcoind(1)*. Example of OpenSSL settings used when *rpcssl*='1':\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n-Acceptable ciphers (default: TLSv1+HIGH:\\:!SSLv2:\\:!aNULL:\\:!eNULL:\\:!AH:\\:!3DES:\\:@STRENGTH)\n-.TP\n-\\fBrpcsslcertificatechainfile=\\fR\\fI'server.cert'\\fR\n-.TP\n-\\fBrpcsslprivatekeyfile=\\fR\\fI'server.pem'\\fR\n-.TP\n-.SH MISCELLANEOUS OPTIONS\n-.TP\n-\\fBgen=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable attempt to generate bitcoins.\n-.TP\n-\\fB4way=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable use SSE instructions to try to generate bitcoins faster.\n-.TP\n-\\fBkeypool=\\fR\\fI'100'\\fR\n-Pre-generate this many public/private key pairs, so wallet backups will be valid for both prior transactions and several dozen future transactions.\n-.TP\n-\\fBpaytxfee=\\fR\\fI'0.00'\\fR\n-Pay an optional transaction fee every time you send bitcoins. Transactions with fees are more likely than free transactions to be included in generated blocks, so may be validated sooner.\n-.TP\n-\\fBallowreceivebyip=\\fR\\fI'1'\\fR\n-Allow direct connections for the 'pay via IP address' feature.\n-.TP\n-.SH USER INTERFACE OPTIONS\n-.TP\n-\\fBmin=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable start bitcoind minimized.\n-.TP\n-\\fBminimizetotray=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable minimize to the system tray.\n+\n .SH \"SEE ALSO\"\n bitcoind(1)\n .SH AUTHOR"
      },
      {
        "sha": "5c3e52f441e9ef8eb7ae2261b31f677bcb86cd2d",
        "filename": "contrib/debian/manpages/bitcoind.1",
        "status": "modified",
        "additions": 6,
        "deletions": 185,
        "changes": 191,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/manpages/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/manpages/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoind.1?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,204 +1,25 @@\n-.TH BITCOIND \"1\" \"January 2011\" \"bitcoind 3.19\" \n+.TH BITCOIND \"1\" \"February 2016\" \"bitcoind 0.12\"\n .SH NAME\n bitcoind \\- peer-to-peer network based digital currency\n .SH SYNOPSIS\n bitcoin [options] <command> [params]  \n .TP\n bitcoin [options] help <command> \\- Get help for a command\n .SH DESCRIPTION\n-This  manual page documents the bitcoind program. Bitcoin is a peer-to-peer digital currency. Peer-to-peer (P2P) means that there is no central authority to issue new money or keep track of transactions. Instead, these tasks are managed collectively by the nodes of the network. Advantages:\n-\n-Bitcoins can be sent easily through the Internet, without having to trust middlemen. Transactions are designed to be irreversible. Be safe from instability caused by fractional reserve banking and central banks. The limited inflation of the Bitcoin system\u2019s money supply is distributed evenly (by CPU power) throughout the network, not monopolized by banks.\n+This  manual page documents the bitcoind program. Bitcoin is an experimental new digital currency that enables instant payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate with no central authority: managing transactions and issuing money are carried out collectively by the network. Bitcoin Core is the name of open source software which enables the use of this currency.\n \n .SH OPTIONS\n .TP\n-\\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf)\n-.TP\n-\\fB\\-gen\\fR\n-Generate coins\n-.TP\n-\\fB\\-gen\\fR=\\fI0\\fR\n-Don't generate coins\n-.TP\n-\\fB\\-min\\fR\n-Start minimized\n-.TP\n-\\fB\\-datadir=\\fR<dir>\n-Specify data directory\n-.TP\n-\\fB\\-proxy=\\fR<ip:port>\n-Connect through SOCKS5 proxy\n-.TP\n-\\fB\\-addnode=\\fR<ip>\n-Add a node to connect to\n-.TP\n-\\fB\\-connect=\\fR<ip>\n-Connect only to the specified node\n-.TP\n-\\fB\\-paytxfee=\\fR<amt>\n-Fee per KB to add to transactions you send\n-.TP\n-\\fB\\-server\\fR\n-Accept command line and JSON\\-RPC commands\n-.TP\n-\\fB\\-daemon\\fR\n-Run in the background as a daemon and accept commands\n-.TP\n-\\fB\\-testnet\\fR\n-Use the test network\n-.TP\n-\\fB\\-rpcuser=\\fR<user>\n-Username for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcpassword=\\fR<pw>\n-Password for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcport=\\fR<port>\n-Listen for JSON\\-RPC connections on <port>\n-.TP\n-\\fB\\-rpcallowip=\\fR<ip>\n-Allow JSON\\-RPC connections from specified IP address\n-.TP\n-\\fB\\-rpcconnect=\\fR<ip>\n-Send commands to node running on <ip>\n-.PP\n-SSL options: (see the Bitcoin Wiki for SSL setup instructions)\n-.TP\n-\\fB\\-rpcssl\\fR=\\fI1\\fR\n-Use OpenSSL (https) for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcsslcertificatchainfile=\\fR<file.cert>\n-Server certificate file (default: server.cert)\n-.TP\n-\\fB\\-rpcsslprivatekeyfile=\\fR<file.pem>\n-Server private key (default: server.pem)\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n-Acceptable ciphers (default: TLSv1+HIGH:\\:!SSLv2:\\:!aNULL:\\:!eNULL:\\:!AH:\\:!3DES:\\:@STRENGTH)\n-.TP\n \\-?\n-This help message\n+List of possible options.\n .SH COMMANDS\n .TP\n-\\fBbackupwallet 'destination'\\fR\n-Safely copies *wallet.dat* to 'destination', which can be a directory or a path with filename.\n-.TP\n-\\fBgetaccount 'bitcoinaddress'\\fR\n-Returns the account associated with the given address.\n-.TP\n-\\fBsetaccount 'bitcoinaddress' ['account']\\fR\n-Sets the ['account'] associated with the given address. ['account'] may be omitted to remove an address from ['account'].\n-.TP\n-\\fBgetaccountaddress 'account'\\fR\n-Returns a new bitcoin address for 'account'.\n-.TP\n-\\fBgetaddressesbyaccount 'account'\\fR\n-Returns the list of addresses associated with the given 'account'.\n-.TP\n-\\fBgetbalance 'account'\\fR\n-Returns the server's available balance, or the balance for 'account'.\n-.TP\n-\\fBgetblockcount\\fR\n-Returns the number of blocks in the longest block chain.\n-.TP\n-\\fBgetblocknumber\\fR\n-Returns the block number of the latest block in the longest block chain.\n-.TP\n-\\fBgetconnectioncount\\fR\n-Returns the number of connections to other nodes.\n-.TP\n-\\fBgetdifficulty\\fR\n-Returns the proof-of-work difficulty as a multiple of the minimum difficulty.\n-.TP\n-\\fBgetgenerate\\fR\n-Returns boolean true if server is trying to generate bitcoins, false otherwise.\n-.TP\n-\\fBsetgenerate 'generate' ['genproclimit']\\fR\n-Generation is limited to ['genproclimit'] processors, \\-1 is unlimited.\n-.TP\n-\\fBgethashespersec\\fR\n-Returns a recent hashes per second performance measurement while generating.\n-.TP\n-\\fBgetinfo\\fR\n-Returns an object containing server information.\n-.TP\n-\\fBgetnewaddress 'account'\\fR\n-Returns a new bitcoin address for receiving payments. If 'account' is specified (recommended), it is added to the address book so payments received with the address will be credited to 'account'.\n-.TP\n-\\fBgetreceivedbyaccount 'account' ['minconf=1']\\fR\n-Returns the total amount received by addresses associated with 'account' in transactions with at least ['minconf'] confirmations.\n-.TP\n-\\fBgetreceivedbyaddress 'bitcoinaddress' ['minconf=1']\\fR\n-Returns the total amount received by 'bitcoinaddress' in transactions with at least ['minconf'] confirmations.\n-.TP\n-\\fBgettransaction 'txid'\\fR\n-Returns information about a specific transaction, given hexadecimal transaction ID.\n-.TP\n-\\fBgetwork 'data'\\fR\n-If 'data' is specified, tries to solve the block and returns true if it was successful. If 'data' is not specified, returns formatted hash 'data' to work on:\n+\\fBhelp\\fR\n+List commands.\n \n-    \"midstate\" : precomputed hash state after hashing the first half of the data.\n-    \"data\"     : block data.\n-    \"hash1\"    : formatted hash buffer for second hash.\n-    \"target\"   : little endian hash target.\n .TP\n \\fBhelp 'command'\\fR\n-List commands, or get help for a command.\n-.TP\n-\\fBlistaccounts ['minconf=1']\\fR\n-List accounts and their current balances.\n-     *note: requires bitcoin 0.3.20 or later.\n-.TP\n-\\fBlistreceivedbyaccount ['minconf=1'] ['includeempty=false']\\fR\n-['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n-\n-    \"account\"       : the account of the receiving address.\n-    \"amount\"        : total amount received by the address.\n-    \"confirmations\" : number of confirmations of the most recent transaction included.\n-.TP\n-\\fBlistreceivedbyaddress ['minconf=1'] ['includeempty=false']\\fR\n-['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n-\n-    \"address\"       : receiving address.\n-    \"account\"       : the account of the receiving address.\n-    \"amount\"        : total amount received by the address.\n-    \"confirmations\" : number of confirmations of the most recent transaction included.\n-.TP\n-\\fBlisttransactions 'account' ['count=10']\\fR\n-Returns a list of the last ['count'] transactions for 'account' \\- for all accounts if 'account' is not specified or is \"*\". Each entry in the list may contain:\n-\n-    \"category\"      : will be generate, send, receive, or move.\n-    \"amount\"        : amount of transaction.\n-    \"fee\"           : Fee (if any) paid (only for send transactions).\n-    \"confirmations\" : number of confirmations (only for generate/send/receive).\n-    \"txid\"          : transaction ID (only for generate/send/receive).\n-    \"otheraccount\"  : account funds were moved to or from (only for move).\n-    \"message\"       : message associated with transaction (only for send).\n-    \"to\"            : message-to associated with transaction (only for send).\n-\n-    *note: requires bitcoin 0.3.20 or later.\n-.TP\n-\\fBmove <'fromaccount'> <'toaccount'> <'amount'> ['minconf=1'] ['comment']\\fR\n-Moves funds between accounts.\n-.TP\n-\\fBsendfrom* <'account'> <'bitcoinaddress'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\\fR\n-Sends amount from account's balance to 'bitcoinaddress'. This method will fail if there is less than amount bitcoins with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n-.TP     \n-\\fBsendtoaddress 'bitcoinaddress' 'amount' ['comment'] ['comment-to']\\fR\n-Sends amount from the server's available balance to 'bitcoinaddress'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success.\n-.TP    \n-\\fBstop\\fR\n-Stops the bitcoin server.\n-.TP    \n-\\fBvalidateaddress 'bitcoinaddress'\\fR\n-Checks that 'bitcoinaddress' looks like a proper bitcoin address. Returns an object containing:\n-\n-    \"isvalid\" : true or false.\n-    \"ismine\"  : true if the address is in the server's wallet.\n-    \"address\" : bitcoinaddress.\n-\n-    *note: ismine and address are only returned if the address is valid.\n+Get help for a command.\n \n .SH \"SEE ALSO\"\n bitcoin.conf(5)"
      },
      {
        "sha": "4d9e0cfa577b6d8acac28a1e005f42388b7255c0",
        "filename": "contrib/debian/watch",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,7 +1,5 @@\n # Run the \"uscan\" command to check for upstream updates and more.\n version=3\n # use qa.debian.org redirector; see man uscan\n-opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/;s/\\-src//,dversionmangle=s/~dfsg\\d*// \\\n- http://sf.net/bitcoin/bitcoin-(\\d.*)-linux\\.tar\\.gz debian\n opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n  http://githubredir.debian.net/github/bitcoin/bitcoin v(.*).tar.gz"
      },
      {
        "sha": "bb8b9246b87815a988a6290a94ee4214c74467c2",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 68,
        "deletions": 17,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,15 +1,69 @@\n Contents\n-===========\n+========\n This directory contains tools for developers working on this repository.\n \n-github-merge.sh\n-==================\n+check-doc.py\n+============\n+\n+Check if all command line args are documented. The return value indicates the\n+number of undocumented args.\n+\n+clang-format.py\n+===============\n+\n+A script to format cpp source code according to [.clang-format](../../src/.clang-format). This should only be applied to new files or files which are currently not actively developed on. Also, git subtrees are not subject to formatting.\n+\n+clang-format-diff.py\n+===================\n+\n+A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n+\n+For instance, to format the last commit with 0 lines of context,\n+the script should be called from the git root folder as follows.\n+\n+```\n+git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n+```\n+\n+fix-copyright-headers.py\n+========================\n+\n+Every year newly updated files need to have its copyright headers updated to reflect the current year.\n+If you run this script from the root folder it will automatically update the year on the copyright header for all\n+source files if these have a git commit from the current year.\n+\n+For example a file changed in 2015 (with 2015 being the current year):\n+\n+```// Copyright (c) 2009-2013 The Bitcoin Core developers```\n+\n+would be changed to:\n+\n+```// Copyright (c) 2009-2015 The Bitcoin Core developers```\n+\n+git-subtree-check.sh\n+====================\n+\n+Run this script from the root of the repository to verify that a subtree matches the contents of\n+the commit it claims to have been updated to.\n+\n+To use, make sure that you have fetched the upstream repository branch in which the subtree is\n+maintained:\n+* for `src/secp256k1`: https://github.com/bitcoin-core/secp256k1.git (branch master)\n+* for `src/leveldb`: https://github.com/bitcoin-core/leveldb.git (branch bitcoin-fork)\n+* for `src/univalue`: https://github.com/bitcoin-core/univalue.git (branch master)\n+\n+Usage: `git-subtree-check.sh DIR COMMIT`\n+\n+`COMMIT` may be omitted, in which case `HEAD` is used.\n+\n+github-merge.py\n+===============\n \n A small script to automate merging pull-requests securely and sign them with GPG.\n \n For example:\n \n-  ./github-merge.sh bitcoin/bitcoin 3077\n+  ./github-merge.py 3077\n \n (in any git repository) will help you merge pull request #3077 for the\n bitcoin/bitcoin repository.\n@@ -36,24 +90,22 @@ Configuring the github-merge tool for the bitcoin repository is done in the foll\n     git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n     git config --global user.signingkey mykeyid (if you want to GPG sign)\n \n-fix-copyright-headers.py\n-===========================\n+optimize-pngs.py\n+================\n \n-Every year newly updated files need to have its copyright headers updated to reflect the current year.\n-If you run this script from src/ it will automatically update the year on the copyright header for all\n-.cpp and .h files if these have a git commit from the current year.\n+A script to optimize png files in the bitcoin\n+repository (requires pngcrush).\n \n-For example a file changed in 2014 (with 2014 being the current year):\n-```// Copyright (c) 2009-2013 The Bitcoin developers```\n+security-check.py and test-security-check.py\n+============================================\n \n-would be changed to:\n-```// Copyright (c) 2009-2014 The Bitcoin developers```\n+Perform basic ELF security checks on a series of executables.\n \n symbol-check.py\n-==================\n+===============\n \n A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n+allowed gcc, glibc and libstdc++ version symbols. This makes sure they are\n still compatible with the minimum supported Linux distribution versions.\n \n Example usage after a gitian build:\n@@ -70,7 +122,7 @@ If there are 'unsupported' symbols, the return value will be 1 a list like this\n     .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n \n update-translations.py\n-=======================\n+======================\n \n Run this script from the root of the repository to update all translations from transifex.\n It will do the following automatically:\n@@ -80,4 +132,3 @@ It will do the following automatically:\n - add missing translations to the build system (TODO)\n \n See doc/translation-process.md for more information.\n-"
      },
      {
        "sha": "9ea0131ac3aa4933d4ebc45b78a9282805974a73",
        "filename": "contrib/devtools/check-doc.py",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,45 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+'''\n+This checks if all command line args are documented.\n+Return value is 0 to indicate no error.\n+\n+Author: @MarcoFalke\n+'''\n+\n+from subprocess import check_output\n+import re\n+\n+FOLDER_GREP = 'src'\n+FOLDER_TEST = 'src/test/'\n+CMD_ROOT_DIR = '`git rev-parse --show-toplevel`/%s' % FOLDER_GREP\n+CMD_GREP_ARGS = r\"egrep -r -I '(map(Multi)?Args(\\.count\\(|\\[)|Get(Bool)?Arg\\()\\\"\\-[^\\\"]+?\\\"' %s | grep -v '%s'\" % (CMD_ROOT_DIR, FOLDER_TEST)\n+CMD_GREP_DOCS = r\"egrep -r -I 'HelpMessageOpt\\(\\\"\\-[^\\\"=]+?(=|\\\")' %s\" % (CMD_ROOT_DIR)\n+REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n+REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n+# list unsupported, deprecated and duplicate args as they need no documentation\n+SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize'])\n+\n+def main():\n+  used = check_output(CMD_GREP_ARGS, shell=True)\n+  docd = check_output(CMD_GREP_DOCS, shell=True)\n+\n+  args_used = set(re.findall(REGEX_ARG,used))\n+  args_docd = set(re.findall(REGEX_DOC,docd)).union(SET_DOC_OPTIONAL)\n+  args_need_doc = args_used.difference(args_docd)\n+  args_unknown = args_docd.difference(args_used)\n+\n+  print \"Args used        : %s\" % len(args_used)\n+  print \"Args documented  : %s\" % len(args_docd)\n+  print \"Args undocumented: %s\" % len(args_need_doc)\n+  print args_need_doc\n+  print \"Args unknown     : %s\" % len(args_unknown)\n+  print args_unknown\n+\n+  exit(len(args_need_doc))\n+\n+if __name__ == \"__main__\":\n+    main()"
      },
      {
        "sha": "13d2573b9ff874e0c536e246b6f94310b7c7587f",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "added",
        "additions": 164,
        "deletions": 0,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python\n+#\n+#===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n+#\n+#                     The LLVM Compiler Infrastructure\n+#\n+# This file is distributed under the University of Illinois Open Source\n+# License.\n+#\n+#           ============================================================\n+#\n+# University of Illinois/NCSA\n+# Open Source License\n+#\n+# Copyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\n+# All rights reserved.\n+#\n+# Developed by:\n+#\n+#     LLVM Team\n+#\n+#     University of Illinois at Urbana-Champaign\n+#\n+#     http://llvm.org\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a copy of\n+# this software and associated documentation files (the \"Software\"), to deal with\n+# the Software without restriction, including without limitation the rights to\n+# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n+# of the Software, and to permit persons to whom the Software is furnished to do\n+# so, subject to the following conditions:\n+#\n+#     * Redistributions of source code must retain the above copyright notice,\n+#       this list of conditions and the following disclaimers.\n+#\n+#     * Redistributions in binary form must reproduce the above copyright notice,\n+#       this list of conditions and the following disclaimers in the\n+#       documentation and/or other materials provided with the distribution.\n+#\n+#     * Neither the names of the LLVM Team, University of Illinois at\n+#       Urbana-Champaign, nor the names of its contributors may be used to\n+#       endorse or promote products derived from this Software without specific\n+#       prior written permission.\n+#\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n+# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n+# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n+# SOFTWARE.\n+#\n+#           ============================================================\n+#\n+#===------------------------------------------------------------------------===#\n+\n+r\"\"\"\n+ClangFormat Diff Reformatter\n+============================\n+\n+This script reads input from a unified diff and reformats all the changed\n+lines. This is useful to reformat all the lines touched by a specific patch.\n+Example usage for git/svn users:\n+\n+  git diff -U0 HEAD^ | clang-format-diff.py -p1 -i\n+  svn diff --diff-cmd=diff -x-U0 | clang-format-diff.py -i\n+\n+\"\"\"\n+\n+import argparse\n+import difflib\n+import re\n+import string\n+import subprocess\n+import StringIO\n+import sys\n+\n+\n+# Change this to the full path if clang-format is not on the path.\n+binary = 'clang-format'\n+\n+\n+def main():\n+  parser = argparse.ArgumentParser(description=\n+                                   'Reformat changed lines in diff. Without -i '\n+                                   'option just output the diff that would be '\n+                                   'introduced.')\n+  parser.add_argument('-i', action='store_true', default=False,\n+                      help='apply edits to files instead of displaying a diff')\n+  parser.add_argument('-p', metavar='NUM', default=0,\n+                      help='strip the smallest prefix containing P slashes')\n+  parser.add_argument('-regex', metavar='PATTERN', default=None,\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case sensitive, overrides -iregex)')\n+  parser.add_argument('-iregex', metavar='PATTERN', default=\n+                      r'.*\\.(cpp|cc|c\\+\\+|cxx|c|cl|h|hpp|m|mm|inc|js|ts|proto'\n+                      r'|protodevel|java)',\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case insensitive, overridden by -regex)')\n+  parser.add_argument('-sort-includes', action='store_true', default=False,\n+                      help='let clang-format sort include blocks')\n+  parser.add_argument('-v', '--verbose', action='store_true',\n+                      help='be more verbose, ineffective without -i')\n+  args = parser.parse_args()\n+\n+  # Extract changed lines for each file.\n+  filename = None\n+  lines_by_file = {}\n+  for line in sys.stdin:\n+    match = re.search('^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n+    if match:\n+      filename = match.group(2)\n+    if filename == None:\n+      continue\n+\n+    if args.regex is not None:\n+      if not re.match('^%s$' % args.regex, filename):\n+        continue\n+    else:\n+      if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n+        continue\n+\n+    match = re.search('^@@.*\\+(\\d+)(,(\\d+))?', line)\n+    if match:\n+      start_line = int(match.group(1))\n+      line_count = 1\n+      if match.group(3):\n+        line_count = int(match.group(3))\n+      if line_count == 0:\n+        continue\n+      end_line = start_line + line_count - 1;\n+      lines_by_file.setdefault(filename, []).extend(\n+          ['-lines', str(start_line) + ':' + str(end_line)])\n+\n+  # Reformat files containing changes in place.\n+  for filename, lines in lines_by_file.iteritems():\n+    if args.i and args.verbose:\n+      print 'Formatting', filename\n+    command = [binary, filename]\n+    if args.i:\n+      command.append('-i')\n+    if args.sort_includes:\n+      command.append('-sort-includes')\n+    command.extend(lines)\n+    command.extend(['-style=file', '-fallback-style=none'])\n+    p = subprocess.Popen(command, stdout=subprocess.PIPE,\n+                         stderr=None, stdin=subprocess.PIPE)\n+    stdout, stderr = p.communicate()\n+    if p.returncode != 0:\n+      sys.exit(p.returncode);\n+\n+    if not args.i:\n+      with open(filename) as f:\n+        code = f.readlines()\n+      formatted_code = StringIO.StringIO(stdout).readlines()\n+      diff = difflib.unified_diff(code, formatted_code,\n+                                  filename, filename,\n+                                  '(before formatting)', '(after formatting)')\n+      diff_string = string.join(diff, '')\n+      if len(diff_string) > 0:\n+        sys.stdout.write(diff_string)\n+\n+if __name__ == '__main__':\n+  main()"
      },
      {
        "sha": "cee99047ac67e69fe767a910ac56811e574cfc8d",
        "filename": "contrib/devtools/clang-format.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/clang-format.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/clang-format.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python\n+'''\n+Wrapper script for clang-format\n+\n+Copyright (c) 2015 MarcoFalke\n+Copyright (c) 2015 The Bitcoin Core developers\n+Distributed under the MIT software license, see the accompanying\n+file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+import os\n+import sys\n+import subprocess\n+\n+tested_versions = ['3.6.0', '3.6.1', '3.6.2'] # A set of versions known to produce the same output\n+accepted_file_extensions = ('.h', '.cpp') # Files to format\n+\n+def check_clang_format_version(clang_format_exe):\n+    try:\n+        output = subprocess.check_output([clang_format_exe, '-version'])\n+        for ver in tested_versions:\n+            if ver in output:\n+                print \"Detected clang-format version \" + ver\n+                return\n+        raise RuntimeError(\"Untested version: \" + output)\n+    except Exception as e:\n+        print 'Could not verify version of ' + clang_format_exe + '.'\n+        raise e\n+\n+def check_command_line_args(argv):\n+    required_args = ['{clang-format-exe}', '{files}']\n+    example_args = ['clang-format-3.x', 'src/main.cpp', 'src/wallet/*']\n+\n+    if(len(argv) < len(required_args) + 1):\n+        for word in (['Usage:', argv[0]] + required_args):\n+            print word,\n+        print ''\n+        for word in (['E.g:', argv[0]] + example_args):\n+            print word,\n+        print ''\n+        sys.exit(1)\n+\n+def run_clang_format(clang_format_exe, files):\n+    for target in files:\n+        if os.path.isdir(target):\n+            for path, dirs, files in os.walk(target):\n+                run_clang_format(clang_format_exe, (os.path.join(path, f) for f in files))\n+        elif target.endswith(accepted_file_extensions):\n+            print \"Format \" + target\n+            subprocess.check_call([clang_format_exe, '-i', '-style=file', target], stdout=open(os.devnull, 'wb'), stderr=subprocess.STDOUT)\n+        else:\n+            print \"Skip \" + target\n+\n+def main(argv):\n+    check_command_line_args(argv)\n+    clang_format_exe = argv[1]\n+    files = argv[2:]\n+    check_clang_format_version(clang_format_exe)\n+    run_clang_format(clang_format_exe, files)\n+\n+if __name__ == \"__main__\":\n+    main(sys.argv)"
      },
      {
        "sha": "b6414a551f8707a032e3f310ea9d1f9badec20e2",
        "filename": "contrib/devtools/fix-copyright-headers.py",
        "status": "modified",
        "additions": 31,
        "deletions": 38,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/fix-copyright-headers.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/fix-copyright-headers.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/fix-copyright-headers.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,53 +1,46 @@\n #!/usr/bin/env python\n '''\n-Run this script inside of src/ and it will look for all the files\n-that were changed this year that still have the last year in the\n-copyright headers, and it will fix the headers on that file using\n-a perl regex one liner.\n+Run this script to update all the copyright headers of files\n+that were changed this year.\n \n-For example: if it finds something like this and we're in 2014\n+For example:\n \n-// Copyright (c) 2009-2013 The Bitcoin developers\n+// Copyright (c) 2009-2012 The Bitcoin Core developers\n \n it will change it to\n \n-// Copyright (c) 2009-2014 The Bitcoin developers\n-\n-It will do this for all the files in the folder and its children.\n-\n-Author: @gubatron\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n '''\n import os\n import time\n+import re\n \n year = time.gmtime()[0]\n-last_year = year - 1\n-command = \"perl -pi -e 's/%s The Bitcoin/%s The Bitcoin/' %s\"\n-listFilesCommand = \"find . | grep %s\"\n-\n-extensions = [\".cpp\",\".h\"]\n-\n-def getLastGitModifiedDate(filePath):\n-  gitGetLastCommitDateCommand = \"git log \" + filePath +\" | grep Date | head -n 1\"\n-  p = os.popen(gitGetLastCommitDateCommand)\n-  result = \"\"\n-  for l in p:\n-    result = l\n-    break\n-  result = result.replace(\"\\n\",\"\")\n-  return result\n+CMD_GIT_DATE = 'git log --format=@%%at -1 %s | date +\"%%Y\" -u -f -'\n+CMD_REGEX= \"perl -pi -e 's/(20\\d\\d)(?:-20\\d\\d)? The Bitcoin/$1-%s The Bitcoin/' %s\"\n+REGEX_CURRENT= re.compile(\"%s The Bitcoin\" % year)\n+CMD_LIST_FILES= \"find %s | grep %s\"\n \n-n=1\n-for extension in extensions:\n-  foundFiles = os.popen(listFilesCommand % extension)\n-  for filePath in foundFiles:\n-    filePath = filePath[1:-1]\n-    if filePath.endswith(extension):\n-      filePath = os.getcwd() + filePath\n-      modifiedTime = getLastGitModifiedDate(filePath)\n-      if len(modifiedTime) > 0 and str(year) in modifiedTime:\n-        print n,\"Last Git Modified: \", modifiedTime, \" - \", filePath\n-        os.popen(command % (last_year,year,filePath))\n-        n = n + 1\n+FOLDERS = [\"./qa\", \"./src\"]\n+EXTENSIONS = [\".cpp\",\".h\", \".py\"]\n \n+def get_git_date(file_path):\n+  r = os.popen(CMD_GIT_DATE % file_path)\n+  for l in r:\n+    # Result is one line, so just return\n+    return l.replace(\"\\n\",\"\")\n+  return \"\"\n \n+n=1\n+for folder in FOLDERS:\n+  for extension in EXTENSIONS:\n+    for file_path in os.popen(CMD_LIST_FILES % (folder, extension)):\n+      file_path = os.getcwd() + file_path[1:-1]\n+      if file_path.endswith(extension):\n+        git_date = get_git_date(file_path)\n+        if str(year) == git_date:\n+          # Only update if current year is not found\n+          if REGEX_CURRENT.search(open(file_path, \"r\").read()) is None:\n+            print n,\"Last git edit\", git_date, \"-\", file_path\n+            os.popen(CMD_REGEX % (year,file_path))\n+            n = n + 1"
      },
      {
        "sha": "1cb82fe6826c74af49cf381ecaf5381ab210bdb7",
        "filename": "contrib/devtools/git-subtree-check.sh",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/git-subtree-check.sh?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,74 @@\n+#!/bin/sh\n+\n+DIR=\"$1\"\n+COMMIT=\"$2\"\n+if [ -z \"$COMMIT\" ]; then\n+    COMMIT=HEAD\n+fi\n+\n+# Taken from git-subtree (Copyright (C) 2009 Avery Pennarun <apenwarr@gmail.com>)\n+find_latest_squash()\n+{\n+\tdir=\"$1\"\n+\tsq=\n+\tmain=\n+\tsub=\n+\tgit log --grep=\"^git-subtree-dir: $dir/*\\$\" \\\n+\t\t--pretty=format:'START %H%n%s%n%n%b%nEND%n' \"$COMMIT\" |\n+\twhile read a b junk; do\n+\t\tcase \"$a\" in\n+\t\t\tSTART) sq=\"$b\" ;;\n+\t\t\tgit-subtree-mainline:) main=\"$b\" ;;\n+\t\t\tgit-subtree-split:) sub=\"$b\" ;;\n+\t\t\tEND)\n+\t\t\t\tif [ -n \"$sub\" ]; then\n+\t\t\t\t\tif [ -n \"$main\" ]; then\n+\t\t\t\t\t\t# a rejoin commit?\n+\t\t\t\t\t\t# Pretend its sub was a squash.\n+\t\t\t\t\t\tsq=\"$sub\"\n+\t\t\t\t\tfi\n+\t\t\t\t\techo \"$sq\" \"$sub\"\n+\t\t\t\t\tbreak\n+\t\t\t\tfi\n+\t\t\t\tsq=\n+\t\t\t\tmain=\n+\t\t\t\tsub=\n+\t\t\t\t;;\n+\t\tesac\n+\tdone\n+}\n+\n+latest_squash=\"$(find_latest_squash \"$DIR\")\"\n+if [ -z \"$latest_squash\" ]; then\n+    echo \"ERROR: $DIR is not a subtree\" >&2\n+    exit 2\n+fi\n+\n+set $latest_squash\n+old=$1\n+rev=$2\n+if [ \"d$(git cat-file -t $rev 2>/dev/null)\" != dcommit ]; then\n+    echo \"ERROR: subtree commit $rev unavailable. Fetch/update the subtree repository\" >&2\n+    exit 2\n+fi\n+tree_subtree=$(git show -s --format=\"%T\" $rev)\n+echo \"$DIR in $COMMIT was last updated to upstream commit $rev (tree $tree_subtree)\"\n+tree_actual=$(git ls-tree -d \"$COMMIT\" \"$DIR\" | head -n 1)\n+if [ -z \"$tree_actual\" ]; then\n+    echo \"FAIL: subtree directory $DIR not found in $COMMIT\" >&2\n+    exit 1\n+fi\n+set $tree_actual\n+tree_actual_type=$2\n+tree_actual_tree=$3\n+echo \"$DIR in $COMMIT currently refers to $tree_actual_type $tree_actual_tree\"\n+if [ \"d$tree_actual_type\" != \"dtree\" ]; then\n+    echo \"FAIL: subtree directory $DIR is not a tree in $COMMIT\" >&2\n+    exit 1\n+fi\n+if [ \"$tree_actual_tree\" != \"$tree_subtree\" ]; then\n+    git diff-tree $tree_actual_tree $tree_subtree >&2\n+    echo \"FAIL: subtree directory tree doesn't match subtree commit tree\" >&2\n+    exit 1\n+fi\n+echo \"GOOD\""
      },
      {
        "sha": "f82362fe417e3f2e7ed46282420c823414b8c417",
        "filename": "contrib/devtools/github-merge.py",
        "status": "added",
        "additions": 251,
        "deletions": 0,
        "changes": 251,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,251 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016 Bitcoin Core Developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# This script will locally construct a merge commit for a pull request on a\n+# github repository, inspect it, sign it and optionally push it.\n+\n+# The following temporary branches are created/overwritten and deleted:\n+# * pull/$PULL/base (the current master we're merging onto)\n+# * pull/$PULL/head (the current state of the remote pull request)\n+# * pull/$PULL/merge (github's merge)\n+# * pull/$PULL/local-merge (our merge)\n+\n+# In case of a clean merge that is accepted by the user, the local branch with\n+# name $BRANCH is overwritten with the merged result, and optionally pushed.\n+from __future__ import division,print_function,unicode_literals\n+import os,sys\n+from sys import stdin,stdout,stderr\n+import argparse\n+import subprocess\n+import json,codecs\n+try:\n+    from urllib.request import Request,urlopen\n+except:\n+    from urllib2 import Request,urlopen\n+\n+# External tools (can be overridden using environment)\n+GIT = os.getenv('GIT','git')\n+BASH = os.getenv('BASH','bash')\n+\n+# OS specific configuration for terminal attributes\n+ATTR_RESET = ''\n+ATTR_PR = ''\n+COMMIT_FORMAT = '%h %s (%an)%d'\n+if os.name == 'posix': # if posix, assume we can use basic terminal escapes\n+    ATTR_RESET = '\\033[0m'\n+    ATTR_PR = '\\033[1;36m'\n+    COMMIT_FORMAT = '%C(bold blue)%h%Creset %s %C(cyan)(%an)%Creset%C(green)%d%Creset'\n+\n+def git_config_get(option, default=None):\n+    '''\n+    Get named configuration option from git repository.\n+    '''\n+    try:\n+        return subprocess.check_output([GIT,'config','--get',option]).rstrip().decode('utf-8')\n+    except subprocess.CalledProcessError as e:\n+        return default\n+\n+def retrieve_pr_info(repo,pull):\n+    '''\n+    Retrieve pull request information from github.\n+    Return None if no title can be found, or an error happens.\n+    '''\n+    try:\n+        req = Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n+        result = urlopen(req)\n+        reader = codecs.getreader('utf-8')\n+        obj = json.load(reader(result))\n+        return obj\n+    except Exception as e:\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        return None\n+\n+def ask_prompt(text):\n+    print(text,end=\" \",file=stderr)\n+    stderr.flush()\n+    reply = stdin.readline().rstrip()\n+    print(\"\",file=stderr)\n+    return reply\n+\n+def parse_arguments():\n+    epilog = '''\n+        In addition, you can set the following git configuration variables:\n+        githubmerge.repository (mandatory),\n+        user.signingkey (mandatory),\n+        githubmerge.host (default: git@github.com),\n+        githubmerge.branch (no default),\n+        githubmerge.testcmd (default: none).\n+    '''\n+    parser = argparse.ArgumentParser(description='Utility to merge, sign and push github pull requests',\n+            epilog=epilog)\n+    parser.add_argument('pull', metavar='PULL', type=int, nargs=1,\n+        help='Pull request ID to merge')\n+    parser.add_argument('branch', metavar='BRANCH', type=str, nargs='?',\n+        default=None, help='Branch to merge against (default: githubmerge.branch setting, or base branch for pull, or \\'master\\')')\n+    return parser.parse_args()\n+\n+def main():\n+    # Extract settings from git repo\n+    repo = git_config_get('githubmerge.repository')\n+    host = git_config_get('githubmerge.host','git@github.com')\n+    opt_branch = git_config_get('githubmerge.branch',None)\n+    testcmd = git_config_get('githubmerge.testcmd')\n+    signingkey = git_config_get('user.signingkey')\n+    if repo is None:\n+        print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n+        print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n+        exit(1)\n+    if signingkey is None:\n+        print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n+        print(\"git config --global user.signingkey <key>\",file=stderr)\n+        exit(1)\n+\n+    host_repo = host+\":\"+repo # shortcut for push/pull target\n+\n+    # Extract settings from command line\n+    args = parse_arguments()\n+    pull = str(args.pull[0])\n+\n+    # Receive pull information from github\n+    info = retrieve_pr_info(repo,pull)\n+    if info is None:\n+        exit(1)\n+    title = info['title']\n+    # precedence order for destination branch argument:\n+    #   - command line argument\n+    #   - githubmerge.branch setting\n+    #   - base branch for pull (as retrieved from github)\n+    #   - 'master'\n+    branch = args.branch or opt_branch or info['base']['ref'] or 'master'\n+\n+    # Initialize source branches\n+    head_branch = 'pull/'+pull+'/head'\n+    base_branch = 'pull/'+pull+'/base'\n+    merge_branch = 'pull/'+pull+'/merge'\n+    local_merge_branch = 'pull/'+pull+'/local-merge'\n+\n+    devnull = open(os.devnull,'w')\n+    try:\n+        subprocess.check_call([GIT,'checkout','-q',branch])\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*'])\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/heads/'+branch+':refs/heads/'+base_branch])\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find branch %s on %s.\" % (branch,host_repo), file=stderr)\n+        exit(3)\n+    subprocess.check_call([GIT,'checkout','-q',base_branch])\n+    subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n+    subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n+\n+    try:\n+        # Create unsigned merge commit.\n+        if title:\n+            firstline = 'Merge #%s: %s' % (pull,title)\n+        else:\n+            firstline = 'Merge #%s' % (pull,)\n+        message = firstline + '\\n\\n'\n+        message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%h %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n+        try:\n+            subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','-m',message.encode('utf-8'),head_branch])\n+        except subprocess.CalledProcessError as e:\n+            print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n+            subprocess.check_call([GIT,'merge','--abort'])\n+            exit(4)\n+        logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n+        if logmsg.rstrip() != firstline.rstrip():\n+            print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n+            exit(4)\n+\n+        print('%s#%s%s %s %sinto %s%s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title,ATTR_RESET+ATTR_PR,branch,ATTR_RESET))\n+        subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n+        print()\n+        # Run test command if configured.\n+        if testcmd:\n+            # Go up to the repository's root.\n+            toplevel = subprocess.check_output([GIT,'rev-parse','--show-toplevel']).strip()\n+            os.chdir(toplevel)\n+            if subprocess.call(testcmd,shell=True):\n+                print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n+                exit(5)\n+\n+            # Show the created merge.\n+            diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n+            subprocess.check_call([GIT,'diff',base_branch+'..'+local_merge_branch])\n+            if diff:\n+                print(\"WARNING: merge differs from github!\",file=stderr)\n+                reply = ask_prompt(\"Type 'ignore' to continue.\")\n+                if reply.lower() == 'ignore':\n+                    print(\"Difference with github ignored.\",file=stderr)\n+                else:\n+                    exit(6)\n+            reply = ask_prompt(\"Press 'd' to accept the diff.\")\n+            if reply.lower() == 'd':\n+                print(\"Diff accepted.\",file=stderr)\n+            else:\n+                print(\"ERROR: Diff rejected.\",file=stderr)\n+                exit(6)\n+        else:\n+            # Verify the result manually.\n+            print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n+            print(\"Run 'git diff HEAD~' to show the changes being merged.\",file=stderr)\n+            print(\"Type 'exit' when done.\",file=stderr)\n+            if os.path.isfile('/etc/debian_version'): # Show pull number on Debian default prompt\n+                os.putenv('debian_chroot',pull)\n+            subprocess.call([BASH,'-i'])\n+            reply = ask_prompt(\"Type 'm' to accept the merge.\")\n+            if reply.lower() == 'm':\n+                print(\"Merge accepted.\",file=stderr)\n+            else:\n+                print(\"ERROR: Merge rejected.\",file=stderr)\n+                exit(7)\n+\n+        # Sign the merge commit.\n+        reply = ask_prompt(\"Type 's' to sign off on the merge.\")\n+        if reply == 's':\n+            try:\n+                subprocess.check_call([GIT,'commit','-q','--gpg-sign','--amend','--no-edit'])\n+            except subprocess.CalledProcessError as e:\n+                print(\"Error signing, exiting.\",file=stderr)\n+                exit(1)\n+        else:\n+            print(\"Not signing off on merge, exiting.\",file=stderr)\n+            exit(1)\n+\n+        # Put the result in branch.\n+        subprocess.check_call([GIT,'checkout','-q',branch])\n+        subprocess.check_call([GIT,'reset','-q','--hard',local_merge_branch])\n+    finally:\n+        # Clean up temporary branches.\n+        subprocess.call([GIT,'checkout','-q',branch])\n+        subprocess.call([GIT,'branch','-q','-D',head_branch],stderr=devnull)\n+        subprocess.call([GIT,'branch','-q','-D',base_branch],stderr=devnull)\n+        subprocess.call([GIT,'branch','-q','-D',merge_branch],stderr=devnull)\n+        subprocess.call([GIT,'branch','-q','-D',local_merge_branch],stderr=devnull)\n+\n+    # Push the result.\n+    reply = ask_prompt(\"Type 'push' to push the result to %s, branch %s.\" % (host_repo,branch))\n+    if reply.lower() == 'push':\n+        subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n+\n+if __name__ == '__main__':\n+    main()\n+"
      },
      {
        "sha": "6f68496ed86b871be598b12af3816574bf6deab8",
        "filename": "contrib/devtools/github-merge.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 176,
        "changes": 176,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/devtools/github-merge.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/devtools/github-merge.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.sh?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,176 +0,0 @@\n-#!/bin/bash\n-\n-# This script will locally construct a merge commit for a pull request on a\n-# github repository, inspect it, sign it and optionally push it.\n-\n-# The following temporary branches are created/overwritten and deleted:\n-# * pull/$PULL/base (the current master we're merging onto)\n-# * pull/$PULL/head (the current state of the remote pull request)\n-# * pull/$PULL/merge (github's merge)\n-# * pull/$PULL/local-merge (our merge)\n-\n-# In case of a clean merge that is accepted by the user, the local branch with\n-# name $BRANCH is overwritten with the merged result, and optionally pushed.\n-\n-REPO=\"$(git config --get githubmerge.repository)\"\n-if [[ \"d$REPO\" == \"d\" ]]; then\n-  echo \"ERROR: No repository configured. Use this command to set:\" >&2\n-  echo \"git config githubmerge.repository <owner>/<repo>\" >&2\n-  echo \"In addition, you can set the following variables:\" >&2\n-  echo \"- githubmerge.host (default git@github.com)\" >&2\n-  echo \"- githubmerge.branch (default master)\" >&2\n-  echo \"- githubmerge.testcmd (default none)\" >&2\n-  exit 1\n-fi\n-\n-HOST=\"$(git config --get githubmerge.host)\"\n-if [[ \"d$HOST\" == \"d\" ]]; then\n-  HOST=\"git@github.com\"\n-fi\n-\n-BRANCH=\"$(git config --get githubmerge.branch)\"\n-if [[ \"d$BRANCH\" == \"d\" ]]; then\n-  BRANCH=\"master\"\n-fi\n-\n-TESTCMD=\"$(git config --get githubmerge.testcmd)\"\n-\n-PULL=\"$1\"\n-\n-if [[ \"d$PULL\" == \"d\" ]]; then\n-  echo \"Usage: $0 pullnumber [branch]\" >&2\n-  exit 2\n-fi\n-\n-if [[ \"d$2\" != \"d\" ]]; then\n-  BRANCH=\"$2\"\n-fi\n-\n-# Initialize source branches.\n-git checkout -q \"$BRANCH\"\n-if git fetch -q \"$HOST\":\"$REPO\" \"+refs/pull/$PULL/*:refs/heads/pull/$PULL/*\"; then\n-  if ! git log -q -1 \"refs/heads/pull/$PULL/head\" >/dev/null 2>&1; then\n-    echo \"ERROR: Cannot find head of pull request #$PULL on $HOST:$REPO.\" >&2\n-    exit 3\n-  fi\n-  if ! git log -q -1 \"refs/heads/pull/$PULL/merge\" >/dev/null 2>&1; then\n-    echo \"ERROR: Cannot find merge of pull request #$PULL on $HOST:$REPO.\" >&2\n-    exit 3\n-  fi\n-else\n-  echo \"ERROR: Cannot find pull request #$PULL on $HOST:$REPO.\" >&2\n-  exit 3\n-fi\n-if git fetch -q \"$HOST\":\"$REPO\" +refs/heads/\"$BRANCH\":refs/heads/pull/\"$PULL\"/base; then\n-  true\n-else\n-  echo \"ERROR: Cannot find branch $BRANCH on $HOST:$REPO.\" >&2\n-  exit 3\n-fi\n-git checkout -q pull/\"$PULL\"/base\n-git branch -q -D pull/\"$PULL\"/local-merge 2>/dev/null\n-git checkout -q -b pull/\"$PULL\"/local-merge\n-TMPDIR=\"$(mktemp -d -t ghmXXXXX)\"\n-\n-function cleanup() {\n-  git checkout -q \"$BRANCH\"\n-  git branch -q -D pull/\"$PULL\"/head 2>/dev/null\n-  git branch -q -D pull/\"$PULL\"/base 2>/dev/null\n-  git branch -q -D pull/\"$PULL\"/merge 2>/dev/null\n-  git branch -q -D pull/\"$PULL\"/local-merge 2>/dev/null\n-  rm -rf \"$TMPDIR\"\n-}\n-\n-# Create unsigned merge commit.\n-(\n-  echo \"Merge pull request #$PULL\"\n-  echo \"\"\n-  git log --no-merges --topo-order --pretty='format:%h %s (%an)' pull/\"$PULL\"/base..pull/\"$PULL\"/head\n-)>\"$TMPDIR/message\"\n-if git merge -q --commit --no-edit --no-ff -m \"$(<\"$TMPDIR/message\")\" pull/\"$PULL\"/head; then\n-  if [ \"d$(git log --pretty='format:%s' -n 1)\" != \"dMerge pull request #$PULL\" ]; then\n-    echo \"ERROR: Creating merge failed (already merged?).\" >&2\n-    cleanup\n-    exit 4\n-  fi\n-else\n-  echo \"ERROR: Cannot be merged cleanly.\" >&2\n-  git merge --abort\n-  cleanup\n-  exit 4\n-fi\n-\n-# Run test command if configured.\n-if [[ \"d$TESTCMD\" != \"d\" ]]; then\n-  # Go up to the repository's root.\n-  while [ ! -d .git ]; do cd ..; done\n-  if ! $TESTCMD; then\n-    echo \"ERROR: Running $TESTCMD failed.\" >&2\n-    cleanup\n-    exit 5\n-  fi\n-  # Show the created merge.\n-  git diff pull/\"$PULL\"/merge..pull/\"$PULL\"/local-merge >\"$TMPDIR\"/diff\n-  git diff pull/\"$PULL\"/base..pull/\"$PULL\"/local-merge\n-  if [[ \"$(<\"$TMPDIR\"/diff)\" != \"\" ]]; then\n-    echo \"WARNING: merge differs from github!\" >&2\n-    read -p \"Type 'ignore' to continue. \" -r >&2\n-    if [[ \"d$REPLY\" =~ ^d[iI][gG][nN][oO][rR][eE]$ ]]; then\n-      echo \"Difference with github ignored.\" >&2\n-    else\n-      cleanup\n-      exit 6\n-    fi\n-  fi\n-  read -p \"Press 'd' to accept the diff. \" -n 1 -r >&2\n-  echo\n-  if [[ \"d$REPLY\" =~ ^d[dD]$ ]]; then\n-    echo \"Diff accepted.\" >&2\n-  else\n-    echo \"ERROR: Diff rejected.\" >&2\n-    cleanup\n-    exit 6\n-  fi\n-else\n-  # Verify the result.\n-  echo \"Dropping you on a shell so you can try building/testing the merged source.\" >&2\n-  echo \"Run 'git diff HEAD~' to show the changes being merged.\" >&2\n-  echo \"Type 'exit' when done.\" >&2\n-  if [[ -f /etc/debian_version ]]; then # Show pull number in prompt on Debian default prompt\n-      export debian_chroot=\"$PULL\"\n-  fi\n-  bash -i\n-  read -p \"Press 'm' to accept the merge. \" -n 1 -r >&2\n-  echo\n-  if [[ \"d$REPLY\" =~ ^d[Mm]$ ]]; then\n-    echo \"Merge accepted.\" >&2\n-  else\n-    echo \"ERROR: Merge rejected.\" >&2\n-    cleanup\n-    exit 7\n-  fi\n-fi\n-\n-# Sign the merge commit.\n-read -p \"Press 's' to sign off on the merge. \" -n 1 -r >&2\n-echo\n-if [[ \"d$REPLY\" =~ ^d[Ss]$ ]]; then\n-  if [[ \"$(git config --get user.signingkey)\" == \"\" ]]; then\n-    echo \"WARNING: No GPG signing key set, not signing. Set one using:\" >&2\n-    echo \"git config --global user.signingkey <key>\" >&2\n-    git commit -q --signoff --amend --no-edit\n-  else\n-    git commit -q --gpg-sign --amend --no-edit\n-  fi\n-fi\n-\n-# Clean up temporary branches, and put the result in $BRANCH.\n-git checkout -q \"$BRANCH\"\n-git reset -q --hard pull/\"$PULL\"/local-merge\n-cleanup\n-\n-# Push the result.\n-read -p \"Type 'push' to push the result to $HOST:$REPO, branch $BRANCH. \" -r >&2\n-if [[ \"d$REPLY\" =~ ^d[Pp][Uu][Ss][Hh]$ ]]; then\n-  git push \"$HOST\":\"$REPO\" refs/heads/\"$BRANCH\"\n-fi"
      },
      {
        "sha": "799e0cc7d0fb15b6e9338c711d5ca4d813a06a32",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,75 @@\n+#!/usr/bin/env python\n+'''\n+Run this script every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n+#pngcrush -brute -ow -rem gAMA -rem cHRM -rem iCCP -rem sRGB -rem alla -rem text\n+'''\n+import os\n+import sys\n+import subprocess\n+import hashlib\n+from PIL import Image\n+\n+def file_hash(filename):\n+    '''Return hash of raw file contents'''\n+    with open(filename, 'rb') as f:\n+        return hashlib.sha256(f.read()).hexdigest()\n+\n+def content_hash(filename):\n+    '''Return hash of RGBA contents of image'''\n+    i = Image.open(filename)\n+    i = i.convert('RGBA')\n+    data = i.tobytes()\n+    return hashlib.sha256(data).hexdigest()\n+\n+pngcrush = 'pngcrush'\n+git = 'git'\n+folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n+basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel']).rstrip('\\n')\n+totalSaveBytes = 0\n+noHashChange = True\n+\n+outputArray = []\n+for folder in folders:\n+    absFolder=os.path.join(basePath, folder)\n+    for file in os.listdir(absFolder):\n+        extension = os.path.splitext(file)[1]\n+        if extension.lower() == '.png':\n+            print(\"optimizing \"+file+\"...\"),\n+            file_path = os.path.join(absFolder, file)\n+            fileMetaMap = {'file' : file, 'osize': os.path.getsize(file_path), 'sha256Old' : file_hash(file_path)};\n+            fileMetaMap['contentHashPre'] = content_hash(file_path)\n+        \n+            pngCrushOutput = \"\"\n+            try:\n+                pngCrushOutput = subprocess.check_output(\n+                        [pngcrush, \"-brute\", \"-ow\", \"-rem\", \"gAMA\", \"-rem\", \"cHRM\", \"-rem\", \"iCCP\", \"-rem\", \"sRGB\", \"-rem\", \"alla\", \"-rem\", \"text\", file_path],\n+                        stderr=subprocess.STDOUT).rstrip('\\n')\n+            except:\n+                print \"pngcrush is not installed, aborting...\"\n+                sys.exit(0)\n+        \n+            #verify\n+            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT):\n+                print \"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\"\n+                sys.exit(1)\n+            \n+            fileMetaMap['sha256New'] = file_hash(file_path)\n+            fileMetaMap['contentHashPost'] = content_hash(file_path)\n+\n+            if fileMetaMap['contentHashPre'] != fileMetaMap['contentHashPost']:\n+                print \"Image contents of PNG file \"+file+\" before and after crushing don't match\"\n+                sys.exit(1)\n+\n+            fileMetaMap['psize'] = os.path.getsize(file_path)\n+            outputArray.append(fileMetaMap)\n+            print(\"done\\n\"),\n+\n+print \"summary:\\n+++++++++++++++++\"\n+for fileDict in outputArray:\n+    oldHash = fileDict['sha256Old']\n+    newHash = fileDict['sha256New']\n+    totalSaveBytes += fileDict['osize'] - fileDict['psize']\n+    noHashChange = noHashChange and (oldHash == newHash)\n+    print fileDict['file']+\"\\n  size diff from: \"+str(fileDict['osize'])+\" to: \"+str(fileDict['psize'])+\"\\n  old sha256: \"+oldHash+\"\\n  new sha256: \"+newHash+\"\\n\"\n+    \n+print \"completed. Checksum stable: \"+str(noHashChange)+\". Total reduction: \"+str(totalSaveBytes)+\" bytes\""
      },
      {
        "sha": "301fea85c1f6f4e26d51efe1ce70297e350f6a01",
        "filename": "contrib/devtools/security-check.py",
        "status": "added",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,181 @@\n+#!/usr/bin/python2\n+'''\n+Perform basic ELF security checks on a series of executables.\n+Exit status will be 0 if successful, and the program will be silent.\n+Otherwise the exit status will be 1 and it will log which executables failed which checks.\n+Needs `readelf` (for ELF) and `objdump` (for PE).\n+'''\n+from __future__ import division,print_function,unicode_literals\n+import subprocess\n+import sys\n+import os\n+\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+\n+def check_ELF_PIE(executable):\n+    '''\n+    Check for position independent executable (PIE), allowing for address space randomization.\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '-h', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+\n+    ok = False\n+    for line in stdout.split(b'\\n'):\n+        line = line.split()\n+        if len(line)>=2 and line[0] == b'Type:' and line[1] == b'DYN':\n+            ok = True\n+    return ok\n+\n+def get_ELF_program_headers(executable):\n+    '''Return type and flags for ELF program headers'''\n+    p = subprocess.Popen([READELF_CMD, '-l', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    in_headers = False\n+    count = 0\n+    headers = []\n+    for line in stdout.split(b'\\n'):\n+        if line.startswith(b'Program Headers:'):\n+            in_headers = True\n+        if line == b'':\n+            in_headers = False\n+        if in_headers:\n+            if count == 1: # header line\n+                ofs_typ = line.find(b'Type')\n+                ofs_offset = line.find(b'Offset')\n+                ofs_flags = line.find(b'Flg')\n+                ofs_align = line.find(b'Align')\n+                if ofs_typ == -1 or ofs_offset == -1 or ofs_flags == -1 or ofs_align  == -1:\n+                    raise ValueError('Cannot parse elfread -lW output')\n+            elif count > 1:\n+                typ = line[ofs_typ:ofs_offset].rstrip()\n+                flags = line[ofs_flags:ofs_align].rstrip()\n+                headers.append((typ, flags))\n+            count += 1\n+    return headers\n+\n+def check_ELF_NX(executable):\n+    '''\n+    Check that no sections are writable and executable (including the stack)\n+    '''\n+    have_wx = False\n+    have_gnu_stack = False\n+    for (typ, flags) in get_ELF_program_headers(executable):\n+        if typ == b'GNU_STACK':\n+            have_gnu_stack = True\n+        if b'W' in flags and b'E' in flags: # section is both writable and executable\n+            have_wx = True\n+    return have_gnu_stack and not have_wx\n+\n+def check_ELF_RELRO(executable):\n+    '''\n+    Check for read-only relocations.\n+    GNU_RELRO program header must exist\n+    Dynamic section must have BIND_NOW flag\n+    '''\n+    have_gnu_relro = False\n+    for (typ, flags) in get_ELF_program_headers(executable):\n+        # Note: not checking flags == 'R': here as linkers set the permission differently\n+        # This does not affect security: the permission flags of the GNU_RELRO program header are ignored, the PT_LOAD header determines the effective permissions.\n+        # However, the dynamic linker need to write to this area so these are RW.\n+        # Glibc itself takes care of mprotecting this area R after relocations are finished.\n+        # See also http://permalink.gmane.org/gmane.comp.gnu.binutils/71347\n+        if typ == b'GNU_RELRO':\n+            have_gnu_relro = True\n+\n+    have_bindnow = False\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    for line in stdout.split(b'\\n'):\n+        tokens = line.split()\n+        if len(tokens)>1 and tokens[1] == b'(BIND_NOW)' or (len(tokens)>2 and tokens[1] == b'(FLAGS)' and b'BIND_NOW' in tokens[2]):\n+            have_bindnow = True\n+    return have_gnu_relro and have_bindnow\n+\n+def check_ELF_Canary(executable):\n+    '''\n+    Check for use of stack canary\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    ok = False\n+    for line in stdout.split(b'\\n'):\n+        if b'__stack_chk_fail' in line:\n+            ok = True\n+    return ok\n+\n+def get_PE_dll_characteristics(executable):\n+    '''\n+    Get PE DllCharacteristics bits\n+    '''\n+    p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    for line in stdout.split('\\n'):\n+        tokens = line.split()\n+        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n+            return int(tokens[1],16)\n+    return 0\n+\n+\n+def check_PE_PIE(executable):\n+    '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n+    return bool(get_PE_dll_characteristics(executable) & 0x40)\n+\n+def check_PE_NX(executable):\n+    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n+    return bool(get_PE_dll_characteristics(executable) & 0x100)\n+\n+CHECKS = {\n+'ELF': [\n+    ('PIE', check_ELF_PIE),\n+    ('NX', check_ELF_NX),\n+    ('RELRO', check_ELF_RELRO),\n+    ('Canary', check_ELF_Canary)\n+],\n+'PE': [\n+    ('PIE', check_PE_PIE),\n+    ('NX', check_PE_NX)\n+]\n+}\n+\n+def identify_executable(executable):\n+    with open(filename, 'rb') as f:\n+        magic = f.read(4)\n+    if magic.startswith(b'MZ'):\n+        return 'PE'\n+    elif magic.startswith(b'\\x7fELF'):\n+        return 'ELF'\n+    return None\n+\n+if __name__ == '__main__':\n+    retval = 0\n+    for filename in sys.argv[1:]:\n+        try:\n+            etype = identify_executable(filename)\n+            if etype is None:\n+                print('%s: unknown format' % filename)\n+                retval = 1\n+                continue\n+\n+            failed = []\n+            for (name, func) in CHECKS[etype]:\n+                if not func(filename):\n+                    failed.append(name)\n+            if failed:\n+                print('%s: failed %s' % (filename, ' '.join(failed)))\n+                retval = 1\n+        except IOError:\n+            print('%s: cannot open' % filename)\n+            retval = 1\n+    exit(retval)\n+"
      },
      {
        "sha": "deda49cc541043d0a05aee05038c69ee1dee51b3",
        "filename": "contrib/devtools/split-debug.sh.in",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/split-debug.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/split-debug.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/split-debug.sh.in?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,10 @@\n+#!/bin/sh\n+\n+if [ $# -ne 3 ];\n+    then echo \"usage: $0 <input> <stripped-binary> <debug-binary>\"\n+fi\n+\n+@OBJCOPY@ --enable-deterministic-archives -p --only-keep-debug $1 $3\n+@OBJCOPY@ --enable-deterministic-archives -p --strip-debug $1 $2\n+@STRIP@ --enable-deterministic-archives -p -s $2\n+@OBJCOPY@ --enable-deterministic-archives -p --add-gnu-debuglink=$3 $2"
      },
      {
        "sha": "e26c0fbb94455c56281f1d1cc524966a807f3750",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 62,
        "deletions": 17,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,6 +1,6 @@\n-#!/usr/bin/python\n+#!/usr/bin/python2\n # Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT/X11 software license, see the accompanying\n+# Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n A script to check that the (Linux) executables produced by gitian only contain\n@@ -11,10 +11,11 @@\n \n     find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py\n '''\n-from __future__ import division, print_function\n+from __future__ import division, print_function, unicode_literals\n import subprocess\n import re\n import sys\n+import os\n \n # Debian 6.0.9 (Squeeze) has:\n #\n@@ -41,12 +42,34 @@\n 'GLIBCXX': (3,4,13),\n 'GLIBC':   (2,11)\n }\n+# See here for a description of _IO_stdin_used:\n+# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n+\n # Ignore symbols that are exported as part of every executable\n IGNORE_EXPORTS = {\n-'_edata', '_end', '_init', '__bss_start', '_fini'\n+b'_edata', b'_end', b'_init', b'__bss_start', b'_fini', b'_IO_stdin_used'\n+}\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n+# Allowed NEEDED libraries\n+ALLOWED_LIBRARIES = {\n+# bitcoind and bitcoin-qt\n+b'libgcc_s.so.1', # GCC base support\n+b'libc.so.6', # C library\n+b'libpthread.so.0', # threading\n+b'libanl.so.1', # DNS resolve\n+b'libm.so.6', # math library\n+b'librt.so.1', # real-time (clock)\n+b'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n+b'ld-linux.so.2', # 32-bit dynamic linker\n+# bitcoin-qt only\n+b'libX11-xcb.so.1', # part of X11\n+b'libX11.so.6', # part of X11\n+b'libxcb.so.1', # part of X11\n+b'libfontconfig.so.1', # font support\n+b'libfreetype.so.6', # font parsing\n+b'libdl.so.2' # programming interface to dynamic linker\n }\n-READELF_CMD = '/usr/bin/readelf'\n-CPPFILT_CMD = '/usr/bin/c++filt'\n \n class CPPFilt(object):\n     '''\n@@ -58,7 +81,8 @@ def __init__(self):\n         self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n \n     def __call__(self, mangled):\n-        self.proc.stdin.write(mangled + '\\n')\n+        self.proc.stdin.write(mangled + b'\\n')\n+        self.proc.stdin.flush()\n         return self.proc.stdout.readline().rstrip()\n \n     def close(self):\n@@ -76,43 +100,64 @@ def read_symbols(executable, imports=True):\n     if p.returncode:\n         raise IOError('Could not read symbols for %s: %s' % (executable, stderr.strip()))\n     syms = []\n-    for line in stdout.split('\\n'):\n+    for line in stdout.split(b'\\n'):\n         line = line.split()\n-        if len(line)>7 and re.match('[0-9]+:$', line[0]):\n-            (sym, _, version) = line[7].partition('@')\n-            is_import = line[6] == 'UND'\n-            if version.startswith('@'):\n+        if len(line)>7 and re.match(b'[0-9]+:$', line[0]):\n+            (sym, _, version) = line[7].partition(b'@')\n+            is_import = line[6] == b'UND'\n+            if version.startswith(b'@'):\n                 version = version[1:]\n             if is_import == imports:\n                 syms.append((sym, version))\n     return syms\n \n def check_version(max_versions, version):\n-    if '_' in version:\n-        (lib, _, ver) = version.rpartition('_')\n+    if b'_' in version:\n+        (lib, _, ver) = version.rpartition(b'_')\n     else:\n         lib = version\n         ver = '0'\n-    ver = tuple([int(x) for x in ver.split('.')])\n+    ver = tuple([int(x) for x in ver.split(b'.')])\n     if not lib in max_versions:\n         return False\n     return ver <= max_versions[lib]\n \n+def read_libraries(filename):\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.split(b'\\n'):\n+        tokens = line.split()\n+        if len(tokens)>2 and tokens[1] == b'(NEEDED)':\n+            match = re.match(b'^Shared library: \\[(.*)\\]$', b' '.join(tokens[2:]))\n+            if match:\n+                libraries.append(match.group(1))\n+            else:\n+                raise ValueError('Unparseable (NEEDED) specification')\n+    return libraries\n+\n if __name__ == '__main__':\n     cppfilt = CPPFilt()\n     retval = 0\n     for filename in sys.argv[1:]:\n         # Check imported symbols\n         for sym,version in read_symbols(filename, True):\n             if version and not check_version(MAX_VERSIONS, version):\n-                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym), version))\n+                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym).decode('utf-8'), version.decode('utf-8')))\n                 retval = 1\n         # Check exported symbols\n         for sym,version in read_symbols(filename, False):\n             if sym in IGNORE_EXPORTS:\n                 continue\n-            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n+            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym).decode('utf-8')))\n             retval = 1\n+        # Check dependency libraries\n+        for library_name in read_libraries(filename):\n+            if library_name not in ALLOWED_LIBRARIES:\n+                print('%s: NEEDED library %s is not allowed' % (filename, library_name.decode('utf-8')))\n+                retval = 1\n \n     exit(retval)\n "
      },
      {
        "sha": "fed7626aabaaf34a7ab4ed1e13a7b5e47769f950",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,60 @@\n+#!/usr/bin/python2\n+'''\n+Test script for security-check.py\n+'''\n+from __future__ import division,print_function\n+import subprocess\n+import sys\n+import unittest\n+\n+def write_testcode(filename):\n+    with open(filename, 'w') as f:\n+        f.write('''\n+    #include <stdio.h>\n+    int main()\n+    {\n+        printf(\"the quick brown fox jumps over the lazy god\\\\n\");\n+        return 0;\n+    }\n+    ''')\n+\n+def call_security_check(cc, source, executable, options):\n+    subprocess.check_call([cc,source,'-o',executable] + options)\n+    p = subprocess.Popen(['./security-check.py',executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    return (p.returncode, stdout.rstrip())\n+\n+class TestSecurityChecks(unittest.TestCase):\n+    def test_ELF(self):\n+        source = 'test1.c'\n+        executable = 'test1'\n+        cc = 'gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+                (1, executable+': failed PIE NX RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+                (1, executable+': failed PIE RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro']), \n+                (1, executable+': failed PIE RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE']), \n+                (1, executable+': failed RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']), \n+                (0, ''))\n+\n+    def test_PE(self):\n+        source = 'test1.c'\n+        executable = 'test1.exe'\n+        cc = 'i686-w64-mingw32-gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, []), \n+                (1, executable+': failed PIE NX'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat']), \n+                (1, executable+': failed PIE'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']), \n+                (0, ''))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n+"
      },
      {
        "sha": "2b6e807b4718c3c4985d20003eabc4af559bac01",
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 19,
        "deletions": 5,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/python\n # Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT/X11 software license, see the accompanying\n+# Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n Run this script from the root of the repository to update all translations from\n@@ -29,6 +29,8 @@\n SOURCE_LANG = 'bitcoin_en.ts'\n # Directory with locale files\n LOCALE_DIR = 'src/qt/locale'\n+# Minimum number of messages for translation to be considered at all\n+MIN_NUM_MESSAGES = 10\n \n def check_at_repository_root():\n     if not os.path.exists('.git'):\n@@ -37,7 +39,7 @@ def check_at_repository_root():\n         exit(1)\n \n def fetch_all_translations():\n-    if subprocess.call([TX, 'pull', '-f']):\n+    if subprocess.call([TX, 'pull', '-f', '-a']):\n         print('Error while fetching translations', file=sys.stderr)\n         exit(1)\n \n@@ -70,18 +72,21 @@ def sanitize_string(s):\n     '''Sanitize string for printing'''\n     return s.replace('\\n',' ')\n \n-def check_format_specifiers(source, translation, errors):\n+def check_format_specifiers(source, translation, errors, numerus):\n     source_f = split_format_specifiers(find_format_specifiers(source))\n     # assert that no source messages contain both Qt and strprintf format specifiers\n     # if this fails, go change the source as this is hacky and confusing!\n     assert(not(source_f[0] and source_f[1]))\n     try:\n         translation_f = split_format_specifiers(find_format_specifiers(translation))\n     except IndexError:\n-        errors.append(\"Parse error in translation '%s'\" % sanitize_string(translation))\n+        errors.append(\"Parse error in translation for '%s': '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n         return False\n     else:\n         if source_f != translation_f:\n+            if numerus and source_f == (set(), ['n']) and translation_f == (set(), []) and translation.find('%') == -1:\n+                # Allow numerus translations to omit %n specifier (usually when it only has one possible value)\n+                return True\n             errors.append(\"Mismatch between '%s' and '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n             return False\n     return True\n@@ -148,7 +153,7 @@ def postprocess_translations(reduce_diff_hacks=False):\n                     if translation is None:\n                         continue\n                     errors = []\n-                    valid = check_format_specifiers(source, translation, errors)\n+                    valid = check_format_specifiers(source, translation, errors, numerus)\n \n                     for error in errors:\n                         print('%s: %s' % (filename, error))\n@@ -166,6 +171,15 @@ def postprocess_translations(reduce_diff_hacks=False):\n                 if translation_node.get('type') == 'unfinished':\n                     context.remove(message)\n \n+        # check if document is (virtually) empty, and remove it if so\n+        num_messages = 0\n+        for context in root.findall('context'):\n+            for message in context.findall('message'):\n+                num_messages += 1\n+        if num_messages < MIN_NUM_MESSAGES:\n+            print('Removing %s, as it contains only %i messages' % (filepath, num_messages))\n+            continue\n+\n         # write fixed-up tree\n         # if diff reduction requested, replace some XML to 'sanitize' to qt formatting\n         if reduce_diff_hacks:"
      },
      {
        "sha": "614970659660f8fee76b8859467e192795829de4",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,8 +1,7 @@\n-### Gavin's notes on getting gitian builds up and running using KVM:###\n+### Gavin's notes on getting gitian builds up and running using KVM\n \n-These instructions distilled from:\n-[  https://help.ubuntu.com/community/KVM/Installation](  https://help.ubuntu.com/community/KVM/Installation)\n-... see there for complete details.\n+These instructions distilled from\n+[https://help.ubuntu.com/community/KVM/Installation](https://help.ubuntu.com/community/KVM/Installation).\n \n You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n \n@@ -27,20 +26,20 @@ Once you've got the right hardware and software:\n \n     # Create base images\n     cd gitian-builder\n-    bin/make-base-vm --suite precise --arch amd64\n+    bin/make-base-vm --suite trusty --arch amd64\n     cd ..\n \n     # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n     ...\n \n-    # For further build instructions see doc/release-notes.md\n+    # For further build instructions see doc/release-process.md\n     ...\n \n ---------------------\n \n `gitian-builder` now also supports building using LXC. See\n-[  https://help.ubuntu.com/12.04/serverguide/lxc.html](  https://help.ubuntu.com/12.04/serverguide/lxc.html)\n-... for how to get LXC up and running under Ubuntu.\n+[help.ubuntu.com](https://help.ubuntu.com/14.04/serverguide/lxc.html)\n+for how to get LXC up and running under Ubuntu.\n \n If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n and at least 10 gigabytes of free disk space, you can `gitian-build` using"
      },
      {
        "sha": "aaff127b5e7ec35a5d15673e5576128379192a97",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 99,
        "deletions": 24,
        "changes": 123,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,31 +1,46 @@\n ---\n-name: \"bitcoin-linux-0.10\"\n+name: \"bitcoin-linux-0.13\"\n enable_cache: true\n suites:\n-- \"precise\"\n+- \"trusty\"\n architectures:\n - \"amd64\"\n-packages: \n-- \"g++-multilib\"\n+packages:\n+- \"curl\"\n+- \"g++-aarch64-linux-gnu\"\n+- \"g++-4.8-aarch64-linux-gnu\"\n+- \"gcc-4.8-aarch64-linux-gnu\"\n+- \"binutils-aarch64-linux-gnu\"\n+- \"g++-arm-linux-gnueabihf\"\n+- \"g++-4.8-arm-linux-gnueabihf\"\n+- \"gcc-4.8-arm-linux-gnueabihf\"\n+- \"binutils-arm-linux-gnueabihf\"\n+- \"g++-4.8-multilib\"\n+- \"gcc-4.8-multilib\"\n+- \"binutils-gold\"\n - \"git-core\"\n - \"pkg-config\"\n-- \"autoconf2.13\"\n+- \"autoconf\"\n - \"libtool\"\n - \"automake\"\n - \"faketime\"\n - \"bsdmainutils\"\n-- \"binutils-gold\"\n-reference_datetime: \"2013-06-01 00:00:00\"\n+- \"ca-certificates\"\n+- \"python\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files: []\n script: |\n+\n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"i686-pc-linux-gnu x86_64-unknown-linux-gnu\"\n-  CONFIGFLAGS=\"--enable-upnp-default --enable-glibc-back-compat\"\n+  HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu\"\n+  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n   FAKETIME_HOST_PROGS=\"\"\n-  FAKETIME_PROGS=\"date ar ranlib nm strip\"\n+  FAKETIME_PROGS=\"date ar ranlib nm\"\n+  HOST_CFLAGS=\"-O2 -g\"\n+  HOST_CXXFLAGS=\"-O2 -g\"\n+  HOST_LDFLAGS=-static-libstdc++\n \n   export QT_RCC_TEST=1\n   export GZIP=\"-9n\"\n@@ -39,48 +54,95 @@ script: |\n     mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n   fi\n \n-  # Create global faketime wrappers\n+  function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n   done\n+  }\n \n-  # Create per-host faketime wrappers\n+  function create_per-host_faketime_wrappers {\n   for i in $HOSTS; do\n     for prog in ${FAKETIME_HOST_PROGS}; do\n         echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n     done\n   done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n+  EXTRA_INCLUDES_BASE=$WRAP_DIR/extra_includes\n+  mkdir -p $EXTRA_INCLUDES_BASE\n+\n+  # x86 needs /usr/include/i386-linux-gnu/asm pointed to /usr/include/x86_64-linux-gnu/asm,\n+  # but we can't write there. Instead, create a link here and force it to be included in the\n+  # search paths by wrapping gcc/g++.\n+\n+  mkdir -p $EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\n+  rm -f $WRAP_DIR/extra_includes/i686-pc-linux-gnu/asm\n+  ln -s /usr/include/x86_64-linux-gnu/asm $EXTRA_INCLUDES_BASE/i686-pc-linux-gnu/asm\n+\n+  for prog in gcc g++; do\n+  rm -f ${WRAP_DIR}/${prog}\n+  cat << EOF > ${WRAP_DIR}/${prog}\n+  #!/bin/bash\n+  REAL=\"`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1`\"\n+  for var in \"\\$@\"\n+  do\n+    if [ \"\\$var\" = \"-m32\" ]; then\n+      export C_INCLUDE_PATH=\"$EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\"\n+      export CPLUS_INCLUDE_PATH=\"$EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\"\n+      break\n+    fi\n+  done\n+  \\$REAL \\$@\n+  EOF\n+  chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n   cd bitcoin\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n+    EXTRA_INCLUDES=\"$EXTRA_INCLUDES_BASE/$i\"\n+    if [ -d \"$EXTRA_INCLUDES\" ]; then\n+      export HOST_ID_SALT=\"$EXTRA_INCLUDES\"\n+    fi\n     make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+    unset HOST_ID_SALT\n   done\n \n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n   # Create the release tarball using (arbitrarily) the first host\n   export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n-  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n+  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n   SOURCEDIST=`echo bitcoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion -c -T - | gzip -9n > ../$SOURCEDIST\n+  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n   ORIGPATH=\"$PATH\"\n@@ -93,18 +155,31 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n-    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${INSTALLPATH}/bin --includedir=${INSTALLPATH}/include --libdir=${INSTALLPATH}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n     make ${MAKEOPTS}\n-    make install-strip\n+    make ${MAKEOPTS} -C src check-security\n+\n+    #TODO: This is a quick hack that disables symbol checking for arm.\n+    #      Instead, we should investigate why these are popping up.\n+    #      For aarch64, we'll need to bump up the min GLIBC version, as the abi\n+    #      support wasn't introduced until 2.17.\n+    case $i in\n+       aarch64-*) : ;;\n+       arm-*) : ;;\n+       *) make ${MAKEOPTS} -C src check-symbols ;;\n+    esac\n+\n+    make install DESTDIR=${INSTALLPATH}\n     cd installed\n     find . -name \"lib*.la\" -delete\n     find . -name \"lib*.a\" -delete\n     rm -rf ${DISTNAME}/lib/pkgconfig\n-    find . | sort | tar --no-recursion -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    find ${DISTNAME}/bin -type f -executable -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n+    find ${DISTNAME}/lib -type f -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n+    find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    find ${DISTNAME} -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n     cd ../../\n+    rm -rf distsrc-${i}\n   done\n   mkdir -p $OUTDIR/src\n   mv $SOURCEDIST $OUTDIR/src\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-linux64.tar.gz\n-  mv ${OUTDIR}/${DISTNAME}-i686-*.tar.gz ${OUTDIR}/${DISTNAME}-linux32.tar.gz\n-"
      },
      {
        "sha": "f6e9414ab1bf2ec0fa0f098fa62972bb06281f43",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,17 +1,16 @@\n ---\n name: \"bitcoin-dmg-signer\"\n suites:\n-- \"precise\"\n+- \"trusty\"\n architectures:\n - \"amd64\"\n packages:\n-- \"libc6:i386\"\n - \"faketime\"\n-reference_datetime: \"2013-06-01 00:00:00\"\n-remotes: []\n+remotes:\n+- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+  \"dir\": \"signature\"\n files:\n-- \"bitcoin-0.9.99-osx-unsigned.tar.gz\"\n-- \"signature.tar.gz\"\n+- \"bitcoin-osx-unsigned.tar.gz\"\n script: |\n   WRAP_DIR=$HOME/wrapped\n   mkdir -p ${WRAP_DIR}\n@@ -22,16 +21,17 @@ script: |\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n   done\n \n-  UNSIGNED=`echo bitcoin-*.tar.gz`\n-  SIGNED=`echo ${UNSIGNED} | sed 's/.tar.*//' | sed 's/-unsigned//'`.dmg\n+  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n+  SIGNED=bitcoin-osx-signed.dmg\n \n   tar -xf ${UNSIGNED}\n-  ./detached-sig-apply.sh ${UNSIGNED} signature.tar.gz\n-  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"Bitcoin-Qt\" -no-pad -r -apple -o uncompressed.dmg signed-app\n+  OSX_VOLNAME=\"$(cat osx_volname)\"\n+  ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n+  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"${OSX_VOLNAME}\" -no-pad -r -dir-mode 0755 -apple -o uncompressed.dmg signed-app\n   ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "318fb03ef2e85fe166c3a44e431d3576ce2251ea",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 46,
        "deletions": 22,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,33 +1,41 @@\n ---\n-name: \"bitcoin-osx-0.10\"\n+name: \"bitcoin-osx-0.13\"\n enable_cache: true\n suites:\n-- \"precise\"\n+- \"trusty\"\n architectures:\n - \"amd64\"\n-packages: \n-- \"g++-multilib\"\n+packages:\n+- \"ca-certificates\"\n+- \"curl\"\n+- \"g++\"\n - \"git-core\"\n - \"pkg-config\"\n-- \"autoconf2.13\"\n+- \"autoconf\"\n+- \"librsvg2-bin\"\n+- \"libtiff-tools\"\n - \"libtool\"\n - \"automake\"\n - \"faketime\"\n - \"bsdmainutils\"\n - \"cmake\"\n+- \"imagemagick\"\n - \"libcap-dev\"\n - \"libz-dev\"\n - \"libbz2-dev\"\n-reference_datetime: \"2013-06-01 00:00:00\"\n+- \"python\"\n+- \"python-dev\"\n+- \"python-setuptools\"\n+- \"fonts-tuffy\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"MacOSX10.7.sdk.tar.gz\"\n+- \"MacOSX10.11.sdk.tar.gz\"\n script: |\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-apple-darwin11\"\n-  CONFIGFLAGS=\"--enable-upnp-default GENISOIMAGE=$WRAP_DIR/genisoimage\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n \n@@ -45,44 +53,57 @@ script: |\n \n   export ZERO_AR_DATE=1\n \n-  # Create global faketime wrappers\n+  function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n   done\n+  }\n \n-  # Create per-host faketime wrappers\n+  function create_per-host_faketime_wrappers {\n   for i in $HOSTS; do\n     for prog in ${FAKETIME_HOST_PROGS}; do\n         echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n     done\n   done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n   BASEPREFIX=`pwd`/depends\n \n   mkdir -p ${BASEPREFIX}/SDKs\n-  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.7.sdk.tar.gz\n+  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.11.sdk.tar.gz\n \n   # Build dependencies for each host\n   for i in $HOSTS; do\n     make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n   done\n \n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n   # Create the release tarball using (arbitrarily) the first host\n   export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n-  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n+  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n   SOURCEDIST=`echo bitcoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n@@ -91,7 +112,7 @@ script: |\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion -c -T - | gzip -9n > ../$SOURCEDIST\n+  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n   ORIGPATH=\"$PATH\"\n@@ -104,30 +125,33 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n-    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${INSTALLPATH}/bin --includedir=${INSTALLPATH}/include --libdir=${INSTALLPATH}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n     make ${MAKEOPTS}\n-    make install-strip\n+    make install-strip DESTDIR=${INSTALLPATH}\n \n+    make osx_volname\n     make deploydir\n+    OSX_VOLNAME=\"$(cat osx_volname)\"\n     mkdir -p unsigned-app-${i}\n+    cp osx_volname unsigned-app-${i}/\n     cp contrib/macdeploy/detached-sig-apply.sh unsigned-app-${i}\n     cp contrib/macdeploy/detached-sig-create.sh unsigned-app-${i}\n     cp ${BASEPREFIX}/${i}/native/bin/dmg ${BASEPREFIX}/${i}/native/bin/genisoimage unsigned-app-${i}\n     cp ${BASEPREFIX}/${i}/native/bin/${i}-codesign_allocate unsigned-app-${i}/codesign_allocate\n     cp ${BASEPREFIX}/${i}/native/bin/${i}-pagestuff unsigned-app-${i}/pagestuff\n     mv dist unsigned-app-${i}\n     pushd unsigned-app-${i}\n-    find . | sort | tar --no-recursion -czf ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz -T -\n+    find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz\n     popd\n \n     make deploy\n-    ${WRAP_DIR}/dmg dmg Bitcoin-Qt.dmg ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n+    ${WRAP_DIR}/dmg dmg \"${OSX_VOLNAME}.dmg\" ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n \n     cd installed\n     find . -name \"lib*.la\" -delete\n     find . -name \"lib*.a\" -delete\n     rm -rf ${DISTNAME}/lib/pkgconfig\n-    find . | sort | tar --no-recursion -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    find ${DISTNAME} | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n     cd ../../\n   done\n   mkdir -p $OUTDIR/src"
      },
      {
        "sha": "3c1e0214a0aa6bfd31c54fabfdc444aad705c0b0",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,38 @@\n+---\n+name: \"bitcoin-win-signer\"\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"libssl-dev\"\n+- \"autoconf\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+  \"dir\": \"signature\"\n+files:\n+- \"osslsigncode-1.7.1.tar.gz\"\n+- \"osslsigncode-Backports-to-1.7.1.patch\"\n+- \"bitcoin-win-unsigned.tar.gz\"\n+script: |\n+  BUILD_DIR=`pwd`\n+  SIGDIR=${BUILD_DIR}/signature/win\n+  UNSIGNED_DIR=${BUILD_DIR}/unsigned\n+\n+  echo \"f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9  osslsigncode-1.7.1.tar.gz\" | sha256sum -c\n+  echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n+\n+  mkdir -p ${UNSIGNED_DIR}\n+  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n+\n+  tar xf osslsigncode-1.7.1.tar.gz\n+  cd osslsigncode-1.7.1\n+  patch -p1 < ${BUILD_DIR}/osslsigncode-Backports-to-1.7.1.patch\n+\n+  ./configure --without-gsf --without-curl --disable-dependency-tracking\n+  make\n+  find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n+    INFILE=\"`basename \"${i}\"`\"\n+    OUTFILE=\"`echo \"${INFILE}\" | sed s/-unsigned//`\"\n+    ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n+  done"
      },
      {
        "sha": "63177375efa3c3fc3573d405df76309fe6130520",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 74,
        "deletions": 21,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,15 +1,16 @@\n ---\n-name: \"bitcoin-win-0.10\"\n+name: \"bitcoin-win-0.13\"\n enable_cache: true\n suites:\n-- \"precise\"\n+- \"trusty\"\n architectures:\n - \"amd64\"\n-packages: \n+packages:\n+- \"curl\"\n - \"g++\"\n - \"git-core\"\n - \"pkg-config\"\n-- \"autoconf2.13\"\n+- \"autoconf\"\n - \"libtool\"\n - \"automake\"\n - \"faketime\"\n@@ -18,17 +19,20 @@ packages:\n - \"g++-mingw-w64\"\n - \"nsis\"\n - \"zip\"\n-reference_datetime: \"2013-06-01 00:00:00\"\n+- \"ca-certificates\"\n+- \"python\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files: []\n script: |\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"x86_64-w64-mingw32 i686-w64-mingw32\"\n-  CONFIGFLAGS=\"--enable-upnp-default\"\n-  FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip objcopy\"\n   FAKETIME_PROGS=\"date makensis zip\"\n+  HOST_CFLAGS=\"-O2 -g\"\n+  HOST_CXXFLAGS=\"-O2 -g\"\n \n   export QT_RCC_TEST=1\n   export GZIP=\"-9n\"\n@@ -42,27 +46,59 @@ script: |\n     mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n   fi\n \n-  # Create global faketime wrappers\n+  function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n   done\n+  }\n \n-  # Create per-host faketime wrappers\n+  function create_per-host_faketime_wrappers {\n   for i in $HOSTS; do\n     for prog in ${FAKETIME_HOST_PROGS}; do\n         echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n     done\n   done\n+  }\n+\n+  function create_per-host_linker_wrapper {\n+  # This is only needed for trusty, as the mingw linker leaks a few bytes of\n+  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n+  for i in $HOSTS; do\n+    mkdir -p ${WRAP_DIR}/${i}\n+    for prog in collect2; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}/${prog}\n+        REAL=$(${i}-gcc -print-prog-name=${prog})\n+        echo \"export MALLOC_PERTURB_=255\" >> ${WRAP_DIR}/${i}/${prog}\n+        echo \"${REAL} \\$@\" >> $WRAP_DIR/${i}/${prog}\n+        chmod +x ${WRAP_DIR}/${i}/${prog}\n+    done\n+    for prog in gcc g++; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export COMPILER_PATH=${WRAP_DIR}/${i}\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_linker_wrapper \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n@@ -72,10 +108,17 @@ script: |\n     make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n   done\n \n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_linker_wrapper \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n   # Create the release tarball using (arbitrarily) the first host\n   export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n-  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n+  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n   SOURCEDIST=`echo bitcoin-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n@@ -84,7 +127,9 @@ script: |\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion -c -T - | gzip -9n > ../$SOURCEDIST\n+  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  mkdir -p $OUTDIR/src\n+  cp ../$SOURCEDIST $OUTDIR/src\n   popd\n \n   ORIGPATH=\"$PATH\"\n@@ -97,20 +142,28 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n-    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${INSTALLPATH}/bin --includedir=${INSTALLPATH}/include --libdir=${INSTALLPATH}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n     make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n     make deploy\n-    make install-strip\n+    make install DESTDIR=${INSTALLPATH}\n     cp -f bitcoin-*setup*.exe $OUTDIR/\n     cd installed\n     mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n     find . -name \"lib*.la\" -delete\n     find . -name \"lib*.a\" -delete\n     rm -rf ${DISTNAME}/lib/pkgconfig\n-    find . -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}.zip\n-    cd ../..\n+    find ${DISTNAME}/bin -type f -executable -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n+    find ${DISTNAME}/lib -type f -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n+    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}.zip\n+    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}-debug.zip\n+    cd ../../\n+    rm -rf distsrc-${i}\n   done\n-  mkdir -p $OUTDIR/src\n-  mv $SOURCEDIST $OUTDIR/src\n+  cd $OUTDIR\n+  rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n+  find . -name \"*-setup-unsigned.exe\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n+  mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n+  mv ${OUTDIR}/${DISTNAME}-i686-*-debug.zip ${OUTDIR}/${DISTNAME}-win32-debug.zip\n   mv ${OUTDIR}/${DISTNAME}-x86_64-*.zip ${OUTDIR}/${DISTNAME}-win64.zip\n   mv ${OUTDIR}/${DISTNAME}-i686-*.zip ${OUTDIR}/${DISTNAME}-win32.zip"
      },
      {
        "sha": "fb6d9eb28423d2c8ece89179f8e67ae06fa6dc13",
        "filename": "contrib/gitian-downloader/bluematt-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-downloader/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-downloader/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/bluematt-key.pgp?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "f5e6382b846d1826f3c4a8306a1d39d4cf1031bc",
        "filename": "contrib/gitian-downloader/linux-download-config",
        "status": "removed",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-downloader/linux-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-downloader/linux-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/linux-download-config?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,42 +0,0 @@\n---- \n-name: bitcoin\n-urls:\n-- http://bitcoin.org/bitcoin-latest-linux-gitian.zip\n-rss:\n-- url: http://sourceforge.net/api/file/index/project-id/244765/mtime/desc/limit/100/rss\n-  xpath: //item/link/text()\n-  pattern: bitcoin-\\d+.\\d+.\\d+-linux-gitian.zip\n-signers:\n-  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n-    name: BlueMatt\n-    key: bluematt\n-  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n-    name: Devrandom\n-    key: devrandom\n-  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n-    name: Luke-Jr\n-    key: luke-jr\n-  D762373D24904A3E42F33B08B9A408E71DAAC974:\n-    name: \"Pieter Wuille\"\n-    key: sipa\n-  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n-    name: tcatm\n-    key: tcatm\n-  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n-    name: \"Gavin Andresen\"\n-    key: gavinandresen\n-  71A3B16735405025D447E8F274810B012346C9A6:\n-    name: \"Wladimir J. van der Laan\"\n-    key: laanwj\n-  AEC1884398647C47413C1C3FB1179EB7347DC10D:\n-    name: \"Warren Togami\"\n-    key: wtogami\n-  9692B91BBF0E8D34DFD33B1882C5C009628ECF0C:\n-    name: michagogo\n-    key: michagogo\n-  E944AE667CF960B1004BC32FCA662BE18B877A60:\n-    name: \"Andreas Schildbach\"\n-    key: aschildbach\n-  C060A6635913D98A3587D7DB1C2491FFEB0EF770:\n-    name: \"Cory Fields\"\n-    key: \"cfields\""
      },
      {
        "sha": "275b041d2059ece19e1a4ade74b32654ab3a2c56",
        "filename": "contrib/gitian-downloader/luke-jr-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-downloader/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-downloader/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/luke-jr-key.pgp?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "06c164180d5076483c83119ce378f830a671ccb4",
        "filename": "contrib/gitian-downloader/win32-download-config",
        "status": "removed",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-downloader/win32-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/gitian-downloader/win32-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/win32-download-config?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,42 +0,0 @@\n---- \n-name: bitcoin\n-urls:\n-- http://bitcoin.org/bitcoin-latest-win32-gitian.zip\n-rss:\n-- url: http://sourceforge.net/api/file/index/project-id/244765/mtime/desc/limit/100/rss\n-  xpath: //item/link/text()\n-  pattern: bitcoin-\\d+.\\d+.\\d+-win32-gitian.zip\n-signers:\n-  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n-    name: BlueMatt\n-    key: bluematt\n-  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n-    name: Devrandom\n-    key: devrandom\n-  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n-    name: Luke-Jr\n-    key: luke-jr\n-  D762373D24904A3E42F33B08B9A408E71DAAC974:\n-    name: \"Pieter Wuille\"\n-    key: sipa\n-  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n-    name: tcatm\n-    key: tcatm\n-  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n-    name: \"Gavin Andresen\"\n-    key: gavinandresen\n-  71A3B16735405025D447E8F274810B012346C9A6:\n-    name: \"Wladimir J. van der Laan\"\n-    key: laanwj\n-  AEC1884398647C47413C1C3FB1179EB7347DC10D:\n-    name: \"Warren Togami\"\n-    key: wtogami\n-  9692B91BBF0E8D34DFD33B1882C5C009628ECF0C:\n-    name: michagogo\n-    key: michagogo\n-  E944AE667CF960B1004BC32FCA662BE18B877A60:\n-    name: \"Andreas Schildbach\"\n-    key: aschildbach\n-  C060A6635913D98A3587D7DB1C2491FFEB0EF770:\n-    name: \"Cory Fields\"\n-    key: \"cfields\""
      },
      {
        "sha": "030fd5cf3cd389976b9d07e6e48bb8d3524442fe",
        "filename": "contrib/gitian-keys/achow101-key.pgp",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/achow101-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/achow101-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/achow101-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1\n+\n+mQINBFT4snkBEACx90Wf5XLo1Xv09p81eaOXc+8bbkSYzqx3ThDNUPRzjYpex9A9\n+8FxfBenAykD3EgYuBTco4cbn7Dw11ppyXUw0VjWaagnnAVGxt3SDeY3ADwPss6xg\n+78FZXxT06xSHZXq1X6pOqhwTAnx3VGx+tR/A2DCsX0vHE6IVThZqyUq2Ei2C0Chc\n+od8y6JZ1CGNzlRkEgL9A0Zp0If6Uq4tXFxnLL6PtiS1b9V5rNfCSC7l99kIkG5oy\n++SPsGRwVqTE2kqtuzkt9qVn6v8KKoZr0BY4IO3KMfJJ4eidOkB+OZK9REEQguDvv\n+tJfkF2HcMYa1efvQObyvVIfS5gxs7+kcSJxgDVZI5YxRV1OOfI7+w3EW3G+bPBQF\n+gSBwEaLbD+udr9lDZ4NZc7vTeoZtYVNZ+EQtG+6I9GzxJwEgO5LIwZ3//vh/R4iy\n+z9W91r7TrlkHUuOGg1hXMCI9sRa65NJtP4BWD0xO07zDKj0JHzeyKwgxB/ixZF2V\n+kc8EzJSKzRfr+638BMXONcf6NW8n6qIlJT2U2qIwiixjM8AUujGKb8DEgU1vIAn9\n+7esOhceOtU/6iLuJrlK+TzMe97NoZCtt6ktmiAp8fu6l9uk3mr8JYLzIMtK+Asf4\n+np5YLizABwbt9gEretnGpHrdKMN88mPYwsLjjCh9wiM0bHZNL52JQRkt3QARAQAB\n+tDNBbmRyZXcgQ2hvdyAoT2ZmaWNpYWwgTmV3IEtleSkgPGFjaG93MTAxQGdtYWls\n+LmNvbT6JAjYEEwEKACAFAlT4snkCGwMFCwkIBwMFFQoJCAsEFgIBAAIeAQIXgAAK\n+CRAXVlcy4I5eQfyGD/9idtVjybuXl+LXS4ph4M738PrZfQeLDmnwhVjfZiEOLLs2\n+sAwGtL/CC0t9f7K7y+n5HtQoMX52jfVehnTDzeKCjRMs+5ssou+L9zadIAz68beU\n+7BZ0J1rR3n1kzwsFE3vx3IRno0VCTOgfL48AuuzMPxvEaLMxWQX8mL0PCV5/8Yxx\n+ftqg4kQ1JKMt5UTxE9/w0cBMphLTwV1Rx6lZILPJgOxYSQ0oOzQYSmucwzH1uOqH\n+wpgZ7SZIHfRWyi4TjQpU/5T2kMOlN/XdyWsj5+Eq+Y6zI6hq2se1vU3TOc8xN2S3\n+7YOza1onUj4if0rWtkJZ2yDnR4lIASUD+/VP2NoWtoy7rB0vIfzbojfwxAp8WuHT\n+sUTxXd52c3OB+673OlOA+GAg2FfFjR8REojsTbeip35/KmFMpafazVRn+E0c3MfP\n+/iS43UTlcxewRcDrx/gRplmgO0+CLgLstZOon7Dz0msypeSArhX2xEj4tJb/ccKd\n+CR/IQl8q/ULQsHX1LwRj0u9doAlkqgIQdKXou4+EmD1jKF92oJMZ+20AJCqfwYQY\n+9HlCB9SQeCRUtU/fHkAZLPApze6C7a1r0LVIuM6iolWyha5KJ++mj84fAagwy/ag\n+8TU8kHTLSGPYeg5G/TAbr1XU5kbbqfWfQFMK1xtdZd1BaGP2cDC2QGkr2ot1SLkC\n+DQRU+LJ5ARAArDftuFPE+ZhgJRuJK163fsD15aHPfv5s+h8kPFv0AuwVs+D75w3y\n+YGfaRtlwSvK+8EucKOoHI1AQYjTG0dtKJuwEGhQ2qsTWUKe05tEAWu0eN62MOZ/r\n+Awjxqotj4TeFksfyKedVAYSizD0Xj16fizeWFrfUBNND4OgUgD8KM79oRchtzKBE\n+HRBP27JksU8tQWc4YcEJUHV66Pji5OCiXxHXJ+JpqKSKeCrVvrvro+pwsY1I3ARA\n+F4UmLxCcb4GnNq+s76cb2K7XJtWJu5FHeHOsef5ped43pYs35UXI+EvOYNs39XI4\n+emMsI0KmuLME2LHO3CJNBirwRFxui27axZk/CSVE1lglnbb25n3QHvbs/31ASCCT\n+QKZ7+Gce89iow6yG4MkN5W4hLdkGAyNI74b6yAUfugSqPLNSj3YHvVFY3y1acge+\n+H7xDO/owRN1kbz+9VMJZxsxB/oZEyEVAE0szHxXbMBhqOME0Y3O6UBrXr7z6R8NG\n+S20RPet4kxCCTLZOvM/X5FtvimgR2u5qRPHs+zf2VPXIRsJsM3zq9EvmePryGM3r\n+1rEAvYagukuyt68lOWgKP/2wB0/NIFAs69b1QSJS3U4CQVIs2h84Ucvbh9gX9Y0B\n+LbV5mxvDDfC/4Nhf4yMfH/CwZDLOUsaRAjCv/lQuN9mnMz9aYnsPha0AEQEAAYkC\n+HwQYAQoACQUCVPiyeQIbDAAKCRAXVlcy4I5eQec+EACi14L8Vp7tw3tDm/Lrb9fM\n+LHfoOnZiDCGaXhiXqckbTSogp7hU82m1fIy4VwY7DWbs1iIq7QdDJMBuNn174Qd3\n+ZPxHeGwBbR04gEsHkbjXBAA5hMacLvmxYFiPlibz+AO4orUiYu/vlEXhXoFCjSlB\n+pw0kUG8W8yQ/RyE7ryLv5/bT4LkwUWF7/+gdDzLUy1VeaPDKmBupKVSbEACe4QRH\n+dUUqE3suKoJ/GylO2sGtFW8BM7+CffX+nvc8hJWzXdYW5InSh0omYJIypIgnQ1gM\n+MhUdu4gbtYwo44Tlax2mTSg8vSVboYO6pBZVX3IEUnjRHLOCZVZIBFXIFdRrHXO8\n+TTkzx9ZoDmZ/DH+Md1NDnS4QsvFbRO/EeDRQAI4cgGhCc4CTrrJSQv8jtl7x8OTx\n+fnDUbE/n8pLV93j9t1Gd07h0VJSmYj3AR7PiefHS7s2yxS9oOqRayGBqrJFzd2gS\n++oXvUBC6pUvM68NgNVCKH7HmIM9tFbqgy8kofTsVDkq9TEJRO+X4hn7UDNJhTjVE\n+AVRUdku6CJR6wj3RPCbERSNB8uabuv1lgo41baeepLn+tJNO/4hilJ0zvEoryVnJ\n+ldZ73mHRRRtXoPRXq7OKuDn10AvtYX8y3/q5z6XhLUePFKM91PO8GF0J6bNWrQSq\n+Khvd4+XHE/ecjLOPvLweAg==\n+=+hz7\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "df06e19fa4b109286dbbb7596c86d31fe0f1052f",
        "filename": "contrib/gitian-keys/aschildbach-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/aschildbach-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/aschildbach-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/aschildbach-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "contrib/gitian-downloader/aschildbach-key.pgp"
      },
      {
        "sha": "2389d4657fb7f5f225f5d76e08841fd6e21d4be9",
        "filename": "contrib/gitian-keys/bluematt-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/bluematt-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "60d76c0ec7ab86635637ee9f49948e004fadfee4",
        "filename": "contrib/gitian-keys/btcdrak-key.pgp",
        "status": "added",
        "additions": 142,
        "deletions": 0,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/btcdrak-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/btcdrak-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/btcdrak-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,142 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v2\n+\n+mQINBFWpKewBEACzsuhtkin1MdQCKCEcFypjEstg0jA0nNVOpsGDTtdwfMpWiLJH\n+bV7b3V1p5hgaPdSyZsUezvHbkVEQxmU47C9lwph3svu6v8HInBwnOa5zj4L0Ih18\n+7yfeEJOvWzULzNxtiIqvWQBFxrVBbgHMhUMg0j6KCYOWeTmTuUKgvbQB8dExCoV9\n+7l+mb0k6eOZhwGWl6KD8mVkdhfXhoCZY5g79BTJf7lAQqnVbjxdyEKD2HSSs5Jnx\n+mTeZg40ottXa1puT+x9ES7L/IOY5kcrp6lU8iyKAoUS4vOJt4nPqY59Pr9j2nUak\n+2BUY0yojH41a752OYW59R+0uTNcUAwpNFucOb4TrNqjGJaPtxvFBZPTLImfSE+Jj\n+VTT6eZixOXPlOWm/7PgR66JF70p3gDwCL19bwUeOKX3UbkjhmYG48d9y1FNFZlVM\n+Yf36xj0c2IOz34VVY6GcCfnIN6xus5qWgHWiQ6RRdlRc9TbcCsUGttXuFP/n4nX2\n+OHo6I/HBNidLScfD2sXZtYHLcqvi2CcvEmmDdwBZrZncz+cHpjz8xmONb3bEMNT0\n+euPcEC5PXUItCSk9KHSgJhAWqfB2WcZ0RUYLp5lbtIZGHqY34LJRWXVKeOQIq4Gn\n+8uCyM5oQUY9zK4x7fdRz5tOjInYg+eSqtnLVDACqmazQHZ6kuGspAvwW8QARAQAB\n+tBtCdGNEcmFrIDxidGNkcmFrQGdtYWlsLmNvbT6JAj0EEwECACgFAlWpKewCGwEF\n+CQWjmoAGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJEOXROPXnOhryKiAP+L3B\n+4c4eZcp8OSRwtYMiNmlxqhzEe+Va8T748rP8oULBFi7b7Nw9FILtp0Vtt2Xw9Pd9\n+EMsv5ZfgPpFL58ZeaO5f4uyrxipfUE5XdhkMOtqqlTfuCGh5fvNv1sWgf5tOFS2+\n+4TCtcSSywl/OlbRmWW/rsJ+RPrE32iSn171WRUXmGGBGSTF2mxCELLIW/rnY1qUw\n+u81BN4SYQOSyd1ha4XAlVYnPcEdpD5mBhwh2mdw7nCtJ9G/lPJ+1VT5axsONbEKK\n+utoU8CRt7OBlAUe0GbAcp7FcniKaFF2nUuhNbMjFcqZ9pddb6aWHVcaXIHwjoR8T\n+Br8ygIoODNEauc0e1xbtsXByD76pcz3yzZOFCKxtjtjsln23Drko4JA2LyLxx8WY\n+BCZcf8/8QSZJOocFOoUIHEfdljo/41kF1MF1Ra2Pr5ZHx/qNcI3U+4+uBoc1AuWS\n+5gJl6xXicLByqweSGKzAfq+SGXM+8ZdJ5KuHISMq7tfkzkmIJ7fRy+cdprXYVnhK\n+CW5EWA6+xQqpt0QGaOyRPJvQqJJvO42Eg9slHkfON1499pwaIwblWuNRs/jq5xCY\n+b21m50JmPas6o5lCcF0SFiFLEJa8spWxMrsLZGUf8KfwriDrssw0XzI74E//BFb0\n+8TLeC7daL3bsCe3FD/Nlcplz0oPKOm6Zb7fNf8mJAYEEEwEIAGsFAlWtJa0FgwWf\n+nr9eFIAAAAAAFQBAYmxvY2toYXNoQGJpdGNvaW4ub3JnMDAwMDAwMDAwMDAwMDAw\n+MDEzNjM5NmE3M2YxOTBmZDRiMjRkMmNjOWM5N2UxNDgxMjcyZWI1YjE3YzU1YzVm\n+MgAKCRB/qxFCZ+T6BHGbB/9wvhZ2rgT4vOT7HENDXF+Bv9TItBF7JQ4mehCenWme\n+23qxBLttfQp3AbwA2K2FyrshGM0fmtmpO5pcXjjHMVzlIDa1fKvbQGbhok5Y+94w\n+hswGS8O0XTU6sB3JxC4vpqdS1pryA/7g3YI+EuzYCkubNxvYnAy80Rf098xZzj2r\n+Yov2c73qg8+kb+5MS2fTjOMQhJo8N70YOew9FVOeZoeepv7SWLDI5Ya/YQ+1fFKN\n+2ovfBq/fzAD4PJbPJCz0miq1T5GL2nTXLcJmj46uV3wNvppNm/w8492de5VO0JqG\n+qlRurp6Jp2k37jqRSIIXG2wxCkND0cYftjS13pHnerPyuQENBFWpKiUBCADiSsd/\n+CmoZV2/UCqAnxm5/kxF8rW5hVYsYmfGO6lY868j5GMOVhWkrjl2CNWrFwQRqyiol\n+FNvyOro2IpOGXlM87AU3MP2/Zz+zkO3zY4ZH40t/UqcO2MPpKdkmGofCt+C6IFGS\n+Y23FqdfOLxV3aczN2aLzL2C6hHdXTcs99NGSf51iHLXn9b+hT4k2AxLPnOnnjgJL\n+eC6+s2sh4loSuvCh5FjVQfhQDLyTn93r9xvEhUMUUxBLz1Iy+e+w1elSwqNT5wEI\n+V5Iontm63lN37GrkRyX90PBtKf6VYXE1yKhNLmPBOIc1vx02og6Psu5eilzKfoK/\n+tQeYr4M/6HOcNvEnABEBAAGJAiUEGAECAA8FAlWpKiUCGwwFCQHhM4AACgkQ5dE4\n+9ec6GvJmFQ/+IoBituRcR394sVPiK7apDIPzPziVT4Qu8aBuHHREhK1Vl5C5tLZ7\n+Q6wA5Xc6O2/G+37HqKX3rqD7XBdFwcPXQa6g54uVs8l2+1UIwnFqZm8bJwubkHU7\n+U6addHacbX2itqb4EiQ82mAQqPSwx36QGLtPF2htl5z1XWj6queqjVrteAl2cbz5\n+KKGklTjReaX1jmun/3nL1yJuYRpZ0L7lF3IU17FVckCL/y3CXhdWOK1fGRfsnZWe\n+XQT+00dKhW5uRfpa8hR1/HJnaczAZnjjpRJZq8hBLamTjPypwjLf+gFAPiAJRuug\n+Bh4saYoE3ciNDzB3B7RR8oqNwxaF316vurrcKqEvnpQechFudDKYz6Pd09lFM1U2\n+MlyJ/jMwwlEvwoTlKFvgYmXOHPZoyf4Vdq+RPfRy+pDI1et9fN4wsy/Foj5hb7Yw\n+/hPOAjWElc4huCwaHIbGN+gHd+AbO6dOkWC7GgsOTGopyU0NXWfud7HB1V/NQ7o1\n+EMrEEPg3eMBMpksuNJ4TaesJ3keW+9OwIMDvsIGcRvqcAVL0R0ZkMGiYG3ITna7l\n+KRcCZwWaHmE6WJTuffBu9oyRFfSH6YbI4pFuFulxghNe3gD1AFZyWPlS/M6jw87I\n+4nBWSNoyPs1UxEGtntBkWiBJq79WAUSAeiDPVzvekQfaZxSpCrZh1cy5AQ0EVapR\n+MwEIAIpPUS3x6zTo9YoFxf2CCNho62MZfoN4ZpVQyY+NLhZ0p1XQBullafZdQjF2\n+mGPXysg7SEZflkcwBGjS6B/CJUoe+zGRL0DXrpoGrqEZzDshiOQ7lM08iloZ9X7V\n+UqhZdi7CFQCO9lAPgrFnvlTVvc7z+1L01/I+9H+w7rmnVsa4NyR/3W1zpOjAO7Wh\n+telWGTcLGYM5fWE3XnUTsWHUQnvdJ9qkDQB6emAOSzBreGmxzru1VSKIPrGsYmlW\n+Q/5Z82ihJ9uCYswUmh+hXRnAXTZTw9jQ+/hw75YuKUGjxXnMGJPMWIlBgB65h1fz\n+a6cTU1ZuS/wEEWEsiDWIob+B4qUAEQEAAYkCPgQoAQoAKAUCVd+TsSEdA0xvc3Qg\n+aW4gbWFsZnVuY3Rpb25pbmcgaGFyZHdhcmUACgkQ5dE49ec6GvIMfQ//SVwsyixG\n+w77pubV8R3LHjVqjo8CNWR2CedzT2/2xfRqjiz9juxpVSunPLTCUWhJTp8bAJzVY\n+UteZ3G1ctKuA/cnUbiAduU4CNlKrZ6AjmUysPVrsyw3kUDm8LSKKiARb0hCAFbvO\n+AO3Lm0YbpBtVYOUpWLoxpkFPx4PKRSyS+mkmFCgBV3baf6YOfPimGyEkVOhF5vZ9\n+WDjnlxPHWhjrpWOpWYPOlDMfSxsvYe4JTd/QXEqx0Ki1inNM4AnLiDf/rnyliQiQ\n+RFlHNnfo/FyqO9wvY8Hu0YLUJqee3WWTVDoYnQYSdHVM8w5JYXiUG8Cc8H2kQ79f\n+sYwIQEXPdJUCeFYnWwkltAjd95AvNDv/5/4kSBBGWUY80TH8qoxuPLekPmuvS8QE\n+TP2AeEcL8Hi5GnKbl9xb3bu/cuauLp1D23qC3HMoigFEgUPQ3egB7Z66PVWo+ko9\n++niqujCFBZBmkS23fvp4EgejYkvvhH9NcWDXWhnIaghLq6ngrj+zHDTTb5dCp9aM\n+JKOyKZIjEtT+AOi8g7yQ7bDyI0eJxOhKamBcVYHcvUU3DMsRSao8cEE6ee/G9564\n+sQ15Ma7W+wqee8SbaND84A2tAQcFtd7kvRn8C3Ac/bHuL5UIihNruTzOsfIHlXmE\n+jqjNA37tatNGoAK6//UHCzX6rLZSBUJtsDWJA0QEGAECAA8FAlWqUTMCGwIFCQHh\n+M4ABKQkQ5dE49ec6GvLAXSAEGQECAAYFAlWqUTMACgkQ3qOE7dYp+kBF2AgAiI8O\n+mFVfhCSJl7ofMMO2g92JfeWevQsn+GITexaYs/FEBb4NmWAyItJ1mL0jCVOhRXwj\n+AcKbKiWhuco17EdXi3xvu5FrfsN/lOmmyhkKyHSR+LS2XPb+xG5JJrafS7m2nxMx\n+4m0yH6tUcsBnqBPFFZ+w+Fxtg8ngUbo9B/gaXr7mvHwir0P2LYpcqlwpD0Zxmu1W\n+HpKT/DQa09Zjr5l9WDGtF6U6ZuSH8sdh/tD///x7AJ6eoiYadcy3YWRLFKKpfMSI\n+tSDhOlWBFFNRwrsZRXCrETYoJNWb/kvcHOaWNzPWcePjQ5RdOkQwnidUd1iy/Uqr\n+2+cT9WWfkHAND4uHlP1wD/sF+nQWOoWcQLFqTx9qt9h7tbgNAzXfEec7fwQ+NMwS\n+bKocjb5OOdzInEMDufusOWgKBfJtPQSMUe+W2orxBWtJb7WY9Xeshjs4q42GooPz\n+e9AN5B2M1V+wmSYEMyhHSTldjj/ZUWBmzZGH7skPHFUwFB633NOA97Mrt/F1RhiO\n+kw1TTn61x1op+wF919DnKdXaFiFX02XzqjJgnuUoGN/72cnfRzIkSaq9b9uX/dQK\n+z2Uk19ENQ3ipmAqBnzOzz+kjSqh8PdHgTGSyy8Ump8+dfhXjC98wVwP6YEn7tOv0\n+iaRzOiKd2kkCvSYexiqWYtKLU8icUFmvd6SROkcAHhPr1+oPS7LJpYDuES17iN3X\n+YaYHGGyvNsh1RseJvE7saosVGQwM539W61JUS9A3TP5jaL8ka8Q5AiXyIee+CD5h\n+2wFQnvdnmnc4QVkdVdrpNRBZyGySgyrO9E+iogfMSfcdDApgiETUOuMTvuCZSPhQ\n+YZ3+rddfgyDXYN3y5oW7Piro19r6R0D7DcGSstk1+1mEjJbb7s5Gc7oGq+EgLm0K\n+VYKa4Ky12osPCHFAoYLHe2upSHFhtgPgfzHKE8Uo5hnAVmx9jAi2XxBi4y5ezPPD\n+C0cCKsRTVrbvNavTSMYdfcxWuB4vlrMZIsvV0RcyP9jPXZm3XPrMik8xRbLR9AzR\n+C7kBDQRVqlGOAQgArkX9q/xZbvceeW0vzxI1UfbZnVoO3E+lL8W40RtBoF7R/7bD\n+68/dNYa1/geUc1jVyrycdp5RkTfnHnIHDt1WZfi6Ywdw9val+BpT/X9ZkxEXgYxO\n+tzMq0zO+ipeLgiqBRck7kgsOEgv+zaqMFXXrH+Zbsg1QbDEug61iCoKzpR8b2+5Z\n+QHxklnGd1RbiMWpioTmacOQE9yTfWvastJXIvZoZ8gdaLR8hA5o/ePP+GcSgntAd\n+NlMYTqqNujAymBJvMAu+ybyFRKN/L/X+IX2elhJWM1x4d1OjM/4sk31g6pucWRcd\n+vimPWouDIWVh+sh1g/IRsO295QKzXUCDELc/QQARAQABiQI4BCgBCgAiBQJV35N0\n+Gx0Da2V5IGxvc3QgaW4gZmF1bHR5IGRvbmdsZQAKCRDl0Tj15zoa8lAJD/93voL9\n+dqZ9IViyULsWsEkQDD20HQ+mxbuJcAE526If/x9JIMR1JcuE/C7pAtNjg5VBCOeB\n+sk0JC+Z7M80ivU1xov+rmjRvVNAX22/rBLpCTmUe0gzIBnWG5+O2/sccutigvvQE\n+O1rqLTEp0dzLoYbVAwJedELZnmK04Y8uXXQ1XSHXJOJmvEBpbDF0U3FXl7Sw4C+u\n+hI8IR6l2D/BYKIZgNIkh4ppFa6RJY0DtEWR94POZYBjjjToeCTRBG9IxudDy1jm4\n+k6bF/ByOecN4B3HRcBXUM1yJEmOZlPSZu2v7XvFp2VnFJfN2UjmtpYsKamV/xUsw\n+DE0voGp15TOfb+6QzfnLSI7vXcm1CfkBS++lYKcYcJ9Kj90ZPjtKy25vKcBvG68o\n+nYgS0Jnzm6j2yE2KBc90CWS1Txgu1Rd5ZrP8pM1ZK20/dq9CjtPLE94WFIc77k0R\n+3z8DJPG8I8M2RJ1XoqENrBvG5U0B+eeGA7mY8QSRH0COhslJ7j0WjOyO8xBSGTCq\n+QKGppFmDLs440cCVUOpnPz1kYG3YFgdCsFxOQ1GBJuHFLUdA1BEbb/nG4C4+y3Ek\n+Bihhu+3ZRoaBgE7ZmVOMEV7xdslPNssiTh+CxIUtugY2mhGnANvEcWrqTgG9+EHf\n+ax2avHR4CQMn7onZAPt2sOMoPkE8R3H3Knlta4kCJQQYAQIADwUCVapRjgIbIAUJ\n+AeEzgAAKCRDl0Tj15zoa8rK4EACFfSUffkm80uzBxFDbo3+fWf2k5hnjXheZxE5w\n+gpT4Z6QGH70GjR+rbH5a6fMM4hkmqNRYWLf6n8RTYNvCLxopVg2l1QbHYFbA+pAB\n+0tM7HOng8iyvc+uUJ4hTicpePm66A4uc1/z+mr5mcLTQS6Nfix2j3hduzzCVIbuF\n+/3UUxS9hFAXOu1F1Oz6auFkeQ8R/w/49yXrq/MYYSUsWtOR66Yu4664TJKBkZGlw\n+CiGPYmpeE7To7LqdhAop+ZnZnc5agSnB9QZw1HVbMY0nwbPuiJx+6mmbh7Gf/OHu\n+2pHSAStvFUGA6ngbYVH2LlRC2XgAA/yFAy1FNFegxTXO+3DI9ykj/3WBmjbNZMIA\n+mhcvPPwwJCNdxbZJbCcot82FBGPpwmsiZJWynD4m4+aGErp/pZmKjfMwP5NAgOQd\n+77XaRlJTvW4GqAdmT0ib7tCqGwFAx5o80SszhgRCUqu8oLGAUlTfMoRgmFNRznP9\n+7xptwjNSl19YrlXdgbhOvVvNO0/J6uXnRc3v9yfaa8J7xU6GvuR5smejYNLUxccl\n+N1UmouS3Vol5z6hOmqnembN/zC3THOHqmJ1G6SdiCcn5dG5Tc+jmBKLRAnoIimWT\n+dO/UoWhm2EB40Hlj6HRFXure47oD9x28d48E0+HI9Jzlh4Wuu6kkr+ugOpdC0TbN\n+H/+RObkBDQRV35PpAQgAo1+V52e+8VFsDKyceNNEVE8NdUiPRKBZuVfCSP8nqNCj\n+hYf4lY/iygHCNZDtKaBs6BUCj0Ev1CLm+Uxvdl1trEr1FGz8E1kdUsh0LocKJgjh\n+wbuDrxM/6LNBxYTR9fEIGx+ka8o9OMLqWav+QjZtDC/nTWaJkXxvcgZPhadCmkkz\n+P0g/vnJVYbvDBBmxI9ofkxZIrwNR2Y8VO2oLVP0MpCA06cuUQWym/gQ2uqBToGqr\n+M/gc+vq0XQyFrNmH/iP8MuASrOoQfGhvZDg/x8rcFRs37itZWpUfP3pZ5zWztX3G\n+TBtc1EktSjs8fU828lPxtG80r4RB2sWVDJfoqhi7XQARAQABiQNEBBgBCgAPBQJV\n+35PpAhsCBQkB4TOAASkJEOXROPXnOhrywF0gBBkBCgAGBQJV35PpAAoJEPxkNPw6\n+MelWLCsH/R69Q2jgT2+sHVWbDsmNjTOkJIteKbz0uW8/vBJqZ2VEwKozGruCTkNI\n+orYKj52ZRcxKiAijN2XGw1TEccP0s5Trap1Z+xgjDDLByLswoVBUzAjbq77hedT+\n+ZUuQFKnm0Cc+PzB/Nz96I8AV4AxYc7RW4keGtvEv7qgdIlb6fbPpFB7Z5W573OZ7\n+G72B/T6QL43HRaN+ZbjwRJaY66tYKSl0Vd0WrO2p5xVdbTarVFn6q/A0IYEafVKY\n+QaRTh+VQbN7vNZCn1Gi6fvnjtWRsj0vMkafdAzVYqF42P+cf6iHrglE6DwR5AsaS\n+O9G+8kLpkXFRjDQJBaijWdBtaeOulCxTog/7BZwo1kpTC3ZCTxr/SHJDc1Nsxt8K\n+xnMCPxFSrHRJb/fUQDjhLv6lXXAm5SCBdFzAc9oDKUbcuGSEz2nZQjL1OADn9rVo\n+j/Y6wJ+okOCOs9AI1H+VW/rz5Z7wxvw3YOVa+dnYdV0w7FklCn+xFdZLj8Z5WjcZ\n+zoyqGlVAFGOZ4MbO+fz/+8f0Y7K/bW7E6smhnomTy2ZOk64eiO12d8quHTHMi7Xh\n+mmVYDiNn1gW9IxZwt/Ga9AvZbIAYhL2m/xBbdfMKAG7Ttjzd3Ac+8wrGm3lOesBD\n+AJUtBmURu8b1Eyj72IQcV0AJM8gvc1B0H345oX6VBgkBB0bf3nuUVftv6r529jTr\n+Jix6yrs4uf25tefzcFuqqE1s1r+pSZFIDpaNsP+jjMgYj/zn4dLOZaq4V3SHvnsU\n+v8KOUC2/qNH9U0KC6bh4mw0fVsHzhkaOjOM7SF1Doc8Lz4vZuk4BpumHpkHEG90x\n+CLg2k/R9iIDQfcGtKY++1/GitjXakPuKrJctZ1SJuW1KWyzFeF4qvuowmLGMFRVi\n++CG5JJSLCUr+cPXa8NbjZv9BwSHqWbn3grr7ZE/j6SFNhuLmByeePPNKRt0cae6a\n+3TQkQFh/yvSIkB5BrB1n2x+xNoWMME+GR0zYQCOncCe8W+a5BZ1mTiVGacHgVqSN\n+eEaG0RH54+pi4gw=\n+=fFMC\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "928a74b3155da22877d1b6ad32fa2a7cb745e0ba",
        "filename": "contrib/gitian-keys/cdecker-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/cdecker-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/cdecker-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/cdecker-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "71a42e514881bc6383531ea2c82c93998453245e",
        "filename": "contrib/gitian-keys/centaur1-key.pgp",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/centaur1-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/centaur1-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/centaur1-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,30 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.12 (GNU/Linux)\n+\n+mQENBFTjy20BCAC7q/tpPQ9tdEALpDqe8kpVAT5ysOJDLDeFEE1J5O8NuDFuibiN\n+XYkb2nAt4Vdr23in9z0LAiTSgr7znndnab/rOSn6pXbXQfLTHrSnAeClTHVQVPSq\n+m5kNg1vWvNxFtIpZ/fGsc6LLmIHxdgeLn+NOpvNx7RzF/N5ctX51vMxMUeDq3daZ\n+tLneJVRj5tXHRJcjW62cyiNFasYAZ3JC8wjwzr0SOndc7kygbEVCTWNkTAGd1Lax\n+KSJW6TjhBPK7j+RljS5nfx/Tf+OG4AoA7/53593YL7Shfx8rwWVIeF4nS6efFnuf\n+eIj+aS5haGyFvNgw8DE7QUCrPiUxeA8wuXu7ABEBAAG0H2NlbnRhdXIgPGNlbnRh\n+dXJAcGhvbmVib29rLmNvbT6JATgEEwECACIFAlTjy20CGwMGCwkIBwMCBhUIAgkK\n+CwQWAgMBAh4BAheAAAoJEP+V+qlxaXQF8r4IAKnE8D9AOTdM/YvYxpCeI6ndEUUs\n+8NcotpbIBJ67vr1Dsot7Ee0PrmIYOiInA+T81lPUDecJYrnemVefhquiyJ5VJ4/d\n+z2zUKBfxjeOsj/PHgcowVxMco8fNEWQa2fZX6X8RVADIsUnIIwpRFVUcbssK/3xJ\n+k46vjWwYNQywht/ZgFBesOgywyz5GozmwrK6TixJxKk8M69GFz2fHhJjp1bxDZuk\n+Rs3YmWeOcCasoJ6GbvIboKQSPHGyEOCqIuiBL63YMa0n1FU0ooDteNZ04eRinIhc\n+fo9JC66fQrUFn8CmmRTtdZOrZ/efYjQtfLAunCkzSM3p6DE9u4Y7d8E5Ar65AQ0E\n+VOPLbQEIANhxtouZuQmw+k89toBWXw75s+csxKHKZuhw8QntaFyFYq3IOnIeV1sK\n+PRENkWsqDInjEM8k9eZ6pnS11EQ1rrFffss+mprTbL3I4S489tJETYZKHrmmox7h\n+ustRi5eXBEmGeKW0mqpb/9r4okpTaIfs+EJ4C9jj0ghWkqU0acyzanJiUY/0R46F\n+vPfGfHnhZ5TAl3eiL0H2JkF6taG8K1XOLemahdZHE9wJh0ZFWnDDkA1l6j2rtYga\n+jEi/ucOp5GkmumxbFiVgponDBqBpsscRrCV6SbZs9gz3dQNgqe5A3CKGZRuVCY6s\n+djRJelgqCF5+dV0fAT0oF3C/3E5KAgcAEQEAAYkBHwQYAQIACQUCVOPLbQIbDAAK\n+CRD/lfqpcWl0BUSxCACjEFwQSHcfZINWD+KdNMayxyHQlBwsEDX+xQkgnn+/Q3hW\n+9VI3SSSfFV3ustlUa3IaNHwuWzsrSqG6mLG47LAQ6vPAWVh723gVCpyJf42Oms/e\n+qeyn0f/PT/6RuNMXQeHbfddmRp4PFjyKOms5Bmf3oi4t4JSvOS4yABBBKzhDQYC9\n+e+qv6Y1sDYpSiCxstQLzIHKiB5bfZ8Szfk09EyyLdqLGkiB0MFhHoXWwQxKiLVc+\n+xNFj2a/jw0rQVgN5DZgHBWU5WqvS5CWIczi+2S9MFI26iBhCn3urZToaaQ/DObqC\n+qmekFrJ/GOj5vB1Mm014lWjG2X3EovLZ1XkgWI7W\n+=vtNZ\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "6b0bd240ba4cf8df485a8caa689717a12ef6b3c8",
        "filename": "contrib/gitian-keys/cfields-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/cfields-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/cfields-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/cfields-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "contrib/gitian-downloader/cfields-key.pgp"
      },
      {
        "sha": "71898127ba0d6c9976ab7225d8c71ffc6380b0a2",
        "filename": "contrib/gitian-keys/devrandom-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/devrandom-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/devrandom-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/devrandom-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "contrib/gitian-downloader/devrandom-key.pgp"
      },
      {
        "sha": "9d3f060627ee9cb4143e3b8945a261e90c39ba13",
        "filename": "contrib/gitian-keys/erkmos.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/erkmos.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/erkmos.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/erkmos.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "9c03ff45226c5629d24e5f9925da7210df0760a5",
        "filename": "contrib/gitian-keys/fanquake-key.pgp",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/fanquake-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/fanquake-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/fanquake-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,63 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG/MacGPG2 v2.0.26\n+\n+mQINBFFlV7oBEAC3dRAS7gSWQ1fV4JySD0HMBOtY+Y2oCX8vEuTI4atGcxbwXr4/\n+OElRYhDK6Zirk8rMoKPxmr8OVek5LNnY3gcDffco6NXmZ+wTstQm6oqUxFfgzznG\n+X/ExEVuCqiaPAwdWSKn9tC1GuOqRFcD+p2zmxw5mNH5XdsqaPSEGsKESY1IK+dMv\n+K+YUrfrtexZyb66wCtupYziEeag6iEK/i2x2wewOji6IvtI+wB5FO+YMXw+LKucw\n+PoHUOxjoz6YX3s04UxFaZo4R8x6J9XnJBSB2E5kfsSAzz3xR+zuapXY6H6mo/grq\n+nr3c6ACcbAHnMWwQLYvWzde6iwswhyl0whebsajJH7Rd3G4c1U3L/oj4RwUFmZYU\n+5Prs+Q5PepKAJfBeWCXZtUY2BNFCFj7b2H2NXYFR92Oc2GtoHAYACNeP070I9d3m\n+IeuYhOrOckkunwaijUczq4rb3n3Vaq6YrdwZIzs8fALwc9Th98jj2dCUq0fljpSh\n+UQFnPG83UsNkeWzUSgw+lBeEQqgOqUQQ293MbgRg0mJ8q677Iv+WaFqPKZzXxkwT\n+QCCXhjcBmUKgXIHLFcbfmkR8pCcCToWXBD8CU441cBsootDD7SanPHbpcwZjt74x\n+uLrVoCIyaju0T1jSrsPnm2A/8VkWLSCh1WRAlbjvMr7DwizGnRtzTiB6HQARAQAB\n+tC9NaWNoYWVsIEZvcmQgKGJpdGNvaW4tb3RjKSA8ZmFucXVha2VAZ21haWwuY29t\n+PokCNwQTAQoAIQUCUWVXugIbLwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgAAKCRCU\n+TTX5rD23agJgEAC0ouDjufjCMHL4DkaVkOnFbHzP+nR2Mq7pcjdiPNIt9tj8B6cI\n+PRh/E+tt2iEJJ4lzlfj0uEqjqexmSBaMgY+pFb6ESg42EPQjRQ95oBoyZfp+uL/0\n+KC3+Hh+EgmZGIFPZy2HneVfusiBUz2/YTOoqFkzmHalJe9Yvl2+dO0SUC7i6TUdJ\n++ugSr/91hkjQC52LXgHzurH4zOz7ZjzRtZgUIG3oOx8mtEDf46eJ0IUsr+tWJqOp\n+ce5xFh6nkKfS92B7YjGJ4YrkBHC7F9vmbrtIeuWiaxGzVqhHFmLvQe+4xyOpRgHM\n+kcyD5uJNmSMO9gT3udut4hd0yUKg5rdqaUzqsvv19eNL/pZ7aBK2aDAK/yAi1T7X\n+/nrhBJAU49zg1JRS6atRnhKSyd7wRSwVPJAXfVuelHsUgenSdLmSBxRha+9mL6Lb\n+bLK/Dij/0r2fyhBJx4pV6V1n4BpHjv5ivkpgCvOupx8wx3PIxZq/rx+hK+ZBe2EQ\n+7vq8rmLfBkSavHWyNxXEKWQed+mFS3d+Qsoy90bi7gQygIYNZOIBYwsy+qjCZ3om\n+LwkzRjypH23ps7WmiaoenOaCjRYooNL4qtQwNVaDGYwvbMnXJ8Vb4/2j/Riz7+Ui\n+BBVww+Wd72Fml/OFPDFep6HG/PuwFB9m5hmfSzrA01TIdjcWljtTDneufbkCDQRR\n+ZVe6ARAAvi1IAxn9xKQCCqhsoKOiXNbpnmf6lYnoEwGtgI+0a0YQwtzm39P5T8P0\n+esZ65/Re6jCCHLc23/urFPfW9VfrKPmNJncyzlx7OopJ7G1MWdRLEUzwqSaglC6x\n+Zb4r1xR6eq2lBX6CAa5Q+AuAqkoGCEiYBpTyKij4sXE0c+Y9nIDIZhru7EnZvpL3\n+SQvxzFryQLbWCGri0x9GKXZ2ZcDM7jRi/P+iX6yX6sVvOvyKz6NW2BI5OmpI1JbJ\n+3fIXt/R6Wl2xpAFL/pxtYTYbfL6277HWtLDTqIkkRFKh64JdkH8n4G4m6VNUtGEu\n+qP3SxtyShauxY44WzR0YX4rag6tU2Hks6h1JmyF8aQTBAkdP7UrQ0oxZ8f+iG9n6\n+3GtTxgw2NyrqVMx3kBLm8DipyslbA2wCeZLrW6Co0j3pebJsDrMP/3zcmbJqRSLq\n+qnkcxA4gn5j/N0oe8t26Y2WjovndhoR0QQxw8D/BKoMXbl0lvvRAtcnWtyG0COut\n+AGB2PUbGdAX2Ky+uYKrG4uhu1edfV8JZVvB7NIQGzM2P8F9PrDRz7EtG6z7ky/pq\n+HQwRbqwLWGs4QpQmHZchFmXH7pHmLC8i29W+xYhdeUstvx7oESbunICGrPjJOShJ\n+G4191Zg0m/M6jeWV/v+piUXe3YVrgs42UWFusm5ZIduPUfgqUtkAEQEAAYkEPgQY\n+AQoACQUCUWVXugIbLgIpCRCUTTX5rD23asFdIAQZAQoABgUCUWVXugAKCRAu659c\n+wJUmwaduEACCiiRpBeKF5fSaM0cTb97hAHVQJL9Wk3xvA49YuROsSwtCzq9v+js5\n+f/fE+QV/dIQUNwifEPQk8MqUVKpe1lIXwRp23GinzDAnOhfWnECqrMdR0dP99D49\n+Zb7Dd4LDvP9c0mYtnX/78qQilxWmXhzDXcunnPsfCqsrduk9hMwkjmIrWFeSWSAg\n+BEJDuZ4WLuqjni1udth0iZtZYrDaDgX/RWcTFW8QCc5hLsCRcInAxb75AWfWq6i/\n+s3Ibg5tGm4+UfqGbFPuNyy6ow3ggqkovBp6ABMxe8dAYVXSmM2tKWZXBb3L6eho8\n+QKKzyoezqpbQ2YUaYZ8XAdLuumXCtAHKP3/DI1JBefE0mxi1CXjdLK9sE5OO5KNt\n+FXR8Dnot5C4BHrcaF6Iq2sqbhPxnhcDrEwv2mUgruD7n04LKIztAG0A35rcu6A2i\n+IUq/PsXjS/5rX/p4CeYvnTTspXkhXgkvfhWz1cISXyfcNTWBKwOsLW4lY8bi05cv\n+4Axl88tTg2dNYXIxSK7Jtu1YCEsZ8uaT3AAiTp1sKAOcRX8hIOTmPPxMxbIm8yg1\n+jl71ovsV5rAyuVTUouFnljXyuLWXLotUOkmC6DjJUuRaxzt23/eByJ45x94T/A2U\n+iT1oU+voigQGARrDkApXlgSI4oekg3Zgq57y6toV9F7o9A1PMtBq3AvDD/0as1K0\n+wCRZIXinSwW2F6tFnVV+z+vvE0i54yHaskkuJYZRSQ/yJR1VgmW/BtAr7ooXF7l+\n+9g7XOH7D8T28h+m4ABLN5ZDOxfTMZuV5Y4MnELh4dlBIfKGG2kjmW8+y/PUqMMGE\n+BYRmGOD1qtWvFYoZ2ss5yrlvfenRRhQbIYSRz/YiT8OTogaNcYNpArUwT4z+05af\n+kdxx0AaqauHqKRo/XTO5GIZQ6NbtPH6G++2Ie+oP8AyBWEpL3rvjZpzn7jxTBXMc\n+MOMmhnb0Go4hD+BSphgDTZOgMLOLcorjb1Ct2VnajxPZD0aTB13SCgZjJhs9j3on\n+EoI3gTHkRgiBjMBNtw7iaAumIRgrDwGzyuIL6bbyfDnbE02zxCqkYP6P0u48FGLs\n+E4U60GrYSlFxa1MexF+HIPgqWsTOv4D2zXEJYvm1XEu1VOGQUkw7J5RFTDxHgkbh\n+qvmkZ492iW2IC4L9hSdSqiZ5LhD2JwpgrMt8vrCzVitkjYQnXJ6WbWYfCybPsmLb\n+mfQ03i9E+a50UC2SGDf8e3oxImAbbXLP/LyI7oczCxyb0EzcQlIIOtBgl3gI6KAh\n+PTRQGeHCzIOSgUf7B0ihY7qiDeR1OshvTY0wdykdS0c+hzwuS5TZvfY4YM7Tssvt\n+XwbdK0Zpx/oDtRHpuDMGKJBV2LWAZYkEbFsmtg==\n+=3o2I\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "f81f44e874707837c13446858db2fed14ad5c501",
        "filename": "contrib/gitian-keys/gavinandresen-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/gavinandresen-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/gavinandresen-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/gavinandresen-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "contrib/gitian-downloader/gavinandresen-key.pgp"
      },
      {
        "sha": "b8aad7fd88b42770c4aaab3ca97a115694bcb9c7",
        "filename": "contrib/gitian-keys/jl2012-key.pgp",
        "status": "added",
        "additions": 105,
        "deletions": 0,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/jl2012-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/jl2012-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jl2012-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,105 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Comment: GPGTools - https://gpgtools.org\n+\n+mQINBFYhRd0BEAC+2VU+8+f9RTPLtl0C815oxaOCA9Tle13xNER8NjFrVwIuFQ64\n+nO8Fbhd5KEEARuMS/lc5G6IV0QxBpDGE1sEjPQXrA6UnX8SDkNGhmoAsV07MP2Xl\n+glN9qqYUEoVD7ueh7Cp3A9rFjg7wcMJCPQDP6lZY4cPgYlE1C31TCrEdAsVVTQg+\n+xIYWnhB92VxOJhk0N0h6xtCQ2MOtYDjYcBndQ5iK7L5jy5LI89YVRfbKtWqWZdwR\n+lgj2JCLeXKauXBI1qbedCJrz5e8nXcdqZt9TXSHo/XhNlqvsLiqBq4aXNU3xRkrv\n+fcweZ9jR9DjyQzefYFGaiCk37R4qLbaqQRm0luUizkCegIuTv44e/zig0im8yPAI\n+WtGnmBPSy4MpvvWiVVb+jHikdQG1T7g9kF6gEmj4kj9UseWnasiq+kkSNE67vLxb\n+uZDfA3QhavRMJbCNEY49/IX6urIsiCLFbe6C7JVWvJ7d5l3MAHE8Sut+ytjX7z7O\n+LFt7YD6loxGAdopEUZm50xs8PswKDajlzWGFXjDZdzQA1tb2CpHUtDkAInYDutR4\n+qA29qtxaBswozzUYiDptGSkBqD1Nus7UAJYkwe2EjeszNPhmIAQXGWx2yWplPOJk\n+ZWDuhQtrDXZikl70q0ekIJ7bxkpMO8xUuhsBCS3Wn6GAtySy0XTttmItfQARAQAB\n+tBZqbDIwMTIgPGpsMjAxMkB4YnQuaGs+iQI3BBMBCgAhBQJWIUXdAhsBBQsJCAcD\n+BRUKCQgLBRYCAwEAAh4BAheAAAoJEMUkKhqzk2UXsbIQAJnXDjhEoKSILJRrKbg+\n+MXP3Rhxc/ThXu5C8yhfYqKblqCaNNfEmrlercJKJVMvjY0tVTXYo8BEJmNN7nSNI\n+su8NheJ9vXacN3XrgkMPuFiUyKj9PGpSsM6Q8MjT0Bzd0pxodk+g0UEjyMktfu/3\n+TqLsnoFPOtIjMOkr/uBzZn5d0AXIZQbAz4Xa2zBW+uR3OSXRRXCRJjCSWGIfDX0Y\n+i/Ea+3Be+y9bMqDa3nPULEkW7+RNuyjLr6QwPZ0/BpTTDcM6Vic2daFPO5B0+o3z\n+PMFmPcEd4nRHTPM9A5SaJtC8MjF/89mjhpxG3v8RqkqCdqdM2cezi/T4YD4jcynE\n+F36Ya3GuuewxEZci/N5ySG5gG8Y+80Wgc1e+sNtvIffHk3Wju2kOvNcBA2TBw36V\n+XCJXHROTA5+Cx4lUxOkQTJoYSVzx852WS6WHeLg1+XnDZvT7ciVIV0ExJQ9C1XOM\n+wjFMRsTWl+vflxmgCeHCIari57Jw3ij7ghRCgeqLp7FIXK5qSI4Tw2eajJpoTKPs\n+wlaO6kvOXtaCDH30FuVhKbPxII01Xi/A2ALtTkpA6mfnf19orQjv+HxX/iwUlpHM\n+UwsuhpZSQYIxIv/BOQnXDfw4TcjnHsqXZbqNzzFEjGurMTlOUX4KeTPscdOLUpnO\n+1FM4JIVybHHfhCH9Mpq+MIwCiQGBBBMBCABrBQJWpym9BYMJZgGAXhSAAAAAABUA\n+QGJsb2NraGFzaEBiaXRjb2luLm9yZzAwMDAwMDAwMDAwMDAwMDAwNWJiZWZkNGM3\n+Mzk5OTE0OGRmZDQ1MjA5ZjA2MTUwMTljMTNjMGVjOWUwYmQ4MzUACgkQf6sRQmfk\n++gQcZAgApPqnaIIE8Q5sruzua50RFRmmBtQys8sM95ciWYE4QaTXUnlhHl4QR4z/\n+TQTRSBqXpdHQ9HBWrhFb6E0ykDEVx9zdEt0fvtlhHx1ItrZetfiA4PwidnyoDKs/\n+/nt01RGreKSMDGInaQVEQxvEW+A0fwvcCdE8Mh3LcIydohfqUViB0c5zb7rUmize\n++2Kt4Uth9T+ooo+UE87pHSJcxlcPOv6Dc7KeoUicD8DwWdsT7oxAMk9jj/ut4UNx\n+xOEp9Sa3sFN20tHMqyOZwnl22Py0y4ayJnceawpuka/bx7samg/2uUrO+dNKXObN\n+trebP83+8UFHOo7VGhesuawgwNjWW7kBjQRWIUbHAQwAy6re/3ur/fgNfE9yKivp\n+Bqmjq0eU5l3iT59hvKr7S+6GHUa+YvE9BBsawDSI4UILNQX0YGT1LRa20mC1okBX\n+5SIEpWzoZhybTMVMwS2ZHkUyO6VBAieUVojP3XQHFcDAiBvW7RRhJ2BU+v9DGo88\n+HAYqKEB85P/i/E/a1xUfTWiiIhA8Dd/Hv6pzIG5QvN8XfrMIayLwpOV1G6KvBIJb\n+zyUVUvLyQySiZOyDczrAxzYq7b1qv8xwHDUzyUl6skPqbex1cFWIeiML9EY4DnZ9\n+l3qb31Bhp+EHydv0esclM5XKQriSg/hsnJOLlCS45z/YhqGOCoD8QxXUJ71NhD/H\n+QR/AvGyTDcPr1/U1DJ0lG778wCOEe1Nad0G/8rcpHSY66RZR/Wf318S7uJt0mUw2\n+JMt1BRxfbdgJaleUAqYjNQAMDb8LfPO6jhQnmf0nN99dpdzkwV/drVRcLDEnupDr\n+keBsokcuohzE0gbjUT4cNc0DuUsIELMTApG8KQCgzJy/ABEBAAGJA8QEGAEKAA8C\n+GwIFAlbi67wFCQGu8u4BqcDdIAQZAQoABgUCViFGxwAKCRDunlUgNL4k0qceC/91\n+2ocEDwiu9kpBGCW0HD+VSyMVjLWMiClk+jPngvNEt63ZkYqRiy7fwnPuJrLFlaL0\n+E0JLIweihC5AyPSJT1Q0LnOwbqCHn1s+9RfIodG/v6M48Ez4GffOtmYwW9KqogK7\n+4FwdIx/wOIYDeh4rT7LRaWBNcIXO8J1+v/83u+Vx6TWKZTiZKQMEV8VOJWfSmTCE\n+6HVgUYvLCPB6DI+X4aVead1kayKOSuXlG/l94B5RHlJB/xQXZd1INyrZetTZxYzZ\n+CBhIWaZ/ji5vqFot0xVNYplRkbg1Mc96X+hwee8eiB/ySSWxUV/DDkA5ZzuE8n8R\n+EEjzqazjMNe50P7XKVg/eBE+TpgCDlqv69dqnOF326m6T3+FH/LDOHguQfB7pQKx\n+siviqjO3molBSyMHL39XFWyteVbgbbSaTRkpX//b7dQoFMiVhigcM78qoymBi6yX\n+qwpN13JoNuNJhEOwex5eEEUCVibFReUkBrYoGnWbwuOxiLORx/IbuNYOvsTGYEAJ\n+EMUkKhqzk2UXWScQAIvAgEpQpzuE1CWMBWcM/n4ruUrOVTeo6dYpUGN1LI0758xm\n+4VI47I8wPEy4pAbdPcqoaNnMcA/NpSYa3hV0svQDLqT96qKTrN71N1gNJa+5w+KN\n+rwev8MRpjuze9b4dn3avs4L9f0fkpzjSzezKwVb7loFSZqgKAaI0aSoOUTec9+OU\n+5ymgkYPEEF12ydkyMzLwyKrtEnIqgwQpjYTN/3P1x7Gkhv+E8Lz06TSga84yVy5I\n+5gO1Hklc3MW0J9jPJe3uALUtEh49KxCE2rdbIX7YbkxWaHHfK98Mu998IXr/4eUe\n+Zhf2CLC2cuuYbk1/rOcxPmeIJKa6S5PlWOf3Y2yLRO0VKcjD5pcGxiImoDVXC4VM\n+hztCVLddjU70c1ktSIBQBu9gkpPcECrzjYtpeAavOUgmpP/zQ8X2NGp6+5n9Wwii\n+tAgByNCg0s+PqcAZxup34b3ZY/t475tDlAmIOovH14Aa8g+0Ketj++9rPpmg9kGs\n+sGmn4mVItClaA7L9vZQQFnSxjyfICKsSxBhqded0lsinlzBfXDEh3N6fEXh81/Gg\n+zLUmTlkhcGaFXplYqrUIlkdO9PD4R2h5P6laLhK2dAf7oKavWHZQp02Yb5nVBiDc\n+KiVWKBP4nuTkWZCG5R966wpR1IOQQ3LykSd5SstcZX6iTpv4NZpCxI4CXpaCuQGN\n+BFYhSHABDADHaEJVygBdwU81c4YynyTOnWTZX+BR3EvRW51GcnfvjqkqgmlWNLET\n+JkswQ8+s0mjKGVnz4dkdr4cUbVegj/St7wzoO+m5mYIDMJf1j83Vo6lTo9FJFzbc\n+HrYC9RS7NkQmD7qzJz4KY/h0n5szFIC/JpYECBNzYrJQc8m2kZiSlyUQJve5/I5J\n+iI6QnM0x4kixNe32GITmKw9s3E2iRf6yXVlsrPouNS33lPXKtvmO1ae7R+G8Ve+D\n+JDv+TLxccy2iU9wuz4I3k20+rlmEwk17feDhfleh5Q+qjI4vkaNcXFa5coZE0HyW\n+SwAtLPSOv2vWkuFeYncXRyzg/CvKR57i9wnqMzNTMt3bHY2HezE13bHln5B/Jqr4\n+ihhFQBqPG+UZlGYRfAI60PLh2yftX5xkm/POiLgEKF76/yIZI8wcPzzurAhFaZBp\n+8/MUv2ZJ/OUT4rdEVV+6XnrijNqVBU8mf8BML5CvjyhsU69yf1mvpiLQr34FNEcn\n+JekDGPIk97cAEQEAAYkCJQQYAQoADwIbDAUCVuLr0AUJAa7xWwAKCRDFJCoas5Nl\n+F8NMD/4hRoOKENEq940Z0iJg0TDvRvRnaIYsbneRQ3yg1DGVIQ+4RHmzQdpN9MW0\n+5RTRLqJsW25ydWwh7y0O/oBRjaoDRAkMSIyOo/Fy+E9WWBmAwzeYCi91MyfetKIO\n+ocrXxpXXKnotAFDOgWGF8K+LlTDH/biOrd8ftgOVJWhz3X04ma7xvT2tQTqfFdbt\n+EivA+jFExq3No0Iq+Ctt/e0H2d9np62SeKBVdpbx9xAc2tPKKDSl+FyB7lj5CK5/\n+FKhotl2bJhVXET48P6e+bFVwfRO7o48zuK5CJVbbdjhavQGhQoxfedW2dn9y7QoM\n+qayUuVIhULE/k+y3jsJBUT7p567nSdUGbc3uKt1sfPKYTdsFbHiTRltXmsIiv4bG\n+PslbXSvOQblFOXWrAE22CdKmGzhlEiFnbviZCCl0BFf4CwEVBJ3p9Lcoir1l9Aty\n+HIIFI3z1mmTz4F9BMbe6saNwBzO+Kh4+US5NV/hqvyz0aOLltb6KfI8WF8kOa1Cx\n+Djz/DTHnvMWO/dIOJuKsThfuxZZq3R1w3O36RB8XzDT/8NV86gfQwN07NWz1rdy4\n+60fK36EjOJDqm/434/BDzWh8TqmnSamENxBTbICmWOj/25M26tA2S9zcPLJHTGMA\n+3yL3QlBtjWY2uNqr51cnZHgPKxBWzaRvcrZ+lUq5EG+F4J7q5rkBjQRWIUitAQwA\n+5A2AhW9DFxVsM105WEErD2NuM2rvtq7dTwArBEi2KdWkSGQvCE9xgyH8u5AEWxj8\n+XXHE/rfunW0d9oF7Z9FbOuV+1HQOAj5hQQWLWHERwZ4gOAqG8ZKAbuwTlqitdiXE\n+PZiJYZSq0NXtngyeTx7XqzQSatfFOIQLzIiwPQXX0Tt+JB3B2SN/D2NP7rubzfS2\n+Bg0ErhV20fPDl8YloEJFfj9lpF0ZJnJ5hXYP9Fl4MoPkyBkGPrJPooZ4FqUFHDiw\n+mttzP1BzFlwpAPGpI0NrkBdBlfFAtvhjreeB5Z4VYwt1xqoXgI+jYXAxoMl+rtkK\n+FdWaoT7wHwqDBeBWYXoyXA2dYIY8Ux1jeDBnREck7vaXhln6zXqMAQowE+F9OQnr\n+Wgf/LoOn5MYxsBDY9mPAO8urxUDE+Dq43JBXlS+jybMNZWdtkaBrIde7dw9IT8Fn\n+p8pG78DmgPxmRFH9QoypTqMfB+x7ZuB0fk1ud4ut33qLo78BWZoW0H++13CbSmrZ\n+ABEBAAGJAiUEGAEKAA8CGyAFAlbi690FCQGu8SoACgkQxSQqGrOTZRcNQBAAmeL1\n+8Wr7vuvL5dySoYmWqHFvM8gRUwIGza5c3D29NYZJcPJRRkdGCV2IXEuUSOLtnjAN\n+kTM1TVMMnetqNR8Uryr7z3XjqYLnVwGqOPnFnlkE2zS3pG8AGG6OxxBhuEMvkwcd\n+1s3tWUlJYRWi1XhEjVZ5Km2pHsVxvoXeJCUVsa8nSXzqF8gOLm409NFMiKkp8QOG\n+heEV4yWrHkySi1fVfOdrHfBzu2lUmHGgSbmJIpLcK+cL3TjpJ+DkSNbniI13I/Eb\n+PO4Uai4a3QYz6sspZ7UzF/pjY5v6WpWXiVB5PP2Y5BrMUgWRlFxPYTc3KiIHUYVi\n+IjVtSOsVaRCHL/SYRq/qHs63XxlxKIhhilbR4OO+CvJ6N/vEpSbx69SqlxgDArZy\n+g3QQqerlLGpSFim9iWk3QBGWtQ96Ek6rjLLOn7b34I6bxXtfcOEo7gl0Y1TFkfOp\n+nsXAcRLrrXCpAhgC/vIQRTMKEcC18kj/vY144DwefzYCBhbI/rCSohAq8a/zhq2T\n+E+xlCYy931HWlUAGx/hms/0q+KQ712Zgk4XxXEx4RZiv3zl9Uph6c7SXxAMb8o2v\n+PzAxd3ShNOnng9hAl8zk5O1RZPa5u51ppkO1FsJ9zjb2Kvdg4ZEBtK8jETv9ckuq\n+yj9YmZZSRRQ2dujg81sLQ9CrO7WB3IGpwh+4lHQ=\n+=1irw\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "3831eaea114f77f30f9638e6772f446055f3c68d",
        "filename": "contrib/gitian-keys/jonasschnelli-key.pgp",
        "status": "added",
        "additions": 110,
        "deletions": 0,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/jonasschnelli-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/jonasschnelli-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jonasschnelli-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,110 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\r\n+Version: GnuPG v1\r\n+\r\n+mQINBFSBrDIBEACrZEqObmtlTf7fOKttE39qqisFfMg0VeEPS37uETMGYsgTEvzv\r\n+kfMsXCGsGFLQ78XsHqUeW4uQrtpJH3nUP/Sua1Q12K3lNKTSvVQyEpKoPJwXZahp\r\n+jm6GA1ApDxZ/KlmxyobR3X0urnMYNZobl5IKJXlxoKGl4OkGNeFlh42pCXZDnR9n\r\n+1Y17ZcDdybkWcqPbDAz8ilOQcFMhDBFg3Di3IVMAaDZP1uwWFb5vx60YB5NhkOpF\r\n+nZUH09NJx/7u7QdGPSHOdzW4Xo1HUYtYNDkdOvgZtxpbYEFIaBtVBURMUGwAFagA\r\n+3a6qaGnCBWEQftyISLiqcKqKqXudOg/cLa1CAiQFkz+IBhY9BCGDRnB8Dcae6EGI\r\n+Djt2lqZTuMSiheTWeNFMGBioHfPLedcwae8KflrIBC+hNS4ay6HJdIc03WMQ4JKK\r\n+At8Y8CRLym30/RlqZ2v8CHYqg9Ddlz3+g5JkRKaJTQwFRcX46/tAX+I2NZ8Ra1ea\r\n+rF5cRHuCk/oaw5ZXYhj4zJO74rjAoSewAARlrTMSM541atJU1u6aWT7rNiF9QKIj\r\n+i8vEufUxN0YfdmvDD3OXwbO7GnfWXS4sPklFIRACp+Y4ib+QnRY0/qGE0yh3RAG4\r\n+r/dyIQ1m3z7Pc9eyPKAhE4S7SxAwoR4yOqQ5NAfZXgFuqWzkW51gkQgGzQARAQAB\r\n+tCtKb25hcyBTY2huZWxsaSA8am9uYXMuc2NobmVsbGlAaW5jbHVkZTcuY2g+iQI+\r\n+BBMBAgAoBQJUgawyAhsDBQkDwmcABgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAK\r\n+CRAicOMMUic59iKUD/93DF04C3lptLjtrhyd4wgpBMJV8yzagGyG+Wk0UR7elQw4\r\n+F1MIvEtIFpuGrcnNfKcqeGGmnnKFTeBjkmgcYvej2fW9XlRA1HgIS0t0ttDv8uVX\r\n+vy1xVj1qISB+17EiftxJjCOl2pZFEVpLQ7sSgqnVRMsCS45ag6rioGxtq1j3ifQN\r\n+TENnJWhzOXvwzZhLgsyWLjeYvTDbzfAQLpZFowAMibOwu6ObCkn4dhaW+lI3AnPu\r\n+76pLsrOljqGvXes6o2d28vjqMrlmsz2xVEJ4bnRPUbLv3bUl6t+19XpiMj94ZCZX\r\n+/kvepzSNAs+aYvoldFn0/8haU5wIDXO/zgXSlm4KnhaDf1zutVq/Ng6TGb66mZKc\r\n+RoiGHnnuQ45e7VIXRfOmgbbUTUIg+h4YvgCTR8dMoOWpd5AL8lZ3bjYVi1yFd+p1\r\n+dPfrrnN9Yd5ojoZBSrV2j1wLgv7jRIeXL5dWzeAs/JBzltAHWO+9O6NsYXtRTUky\r\n+eQa+oBKG1OsEXf63k8PgQf6Nw+di3gy23tKEiCz8lbA2MtekxaZ9Xu9CSEEPIH7t\r\n+Aoki6Ey6rD1NUZQPuxQ3aCUTRE2JK4b6nPuAsOEv+cZL0VxNENpbedtGPh4aAA8U\r\n+9yvBykWIjRS95k4NDVKIdzhd1geJsUJZq4BKh9Atf/kI+Gb0sqq2Lrf8a1pNX7kC\r\n+DQRUgawyARAAwLiAxqv7PsdtJg8tBO+dAnTYtAtBHn8g5GlXtorymB9Aqy0Nzpd1\r\n+de27dYlBdlWdHZavMh27JieZ4rk++74SMAo0PACp6FDnfuu2PmJZTr/Bzvld+B9+\r\n+lOZrMWwDIVSW1npJGUjF1rjgPjvmcGo/IreVFpJ0A33J1p/qsYZsLTXTDDoz0fq8\r\n+3XvwTlkTOkuk6Z6LPo2feDHYydUmdG+9MrgIMpidvywRHRC8nnkix/aX0S72kZuR\r\n+qvWwSVs229gtfuWHfvmaQgbugZMqANla3ZYdzExhIIizu7qQPXSYfhsCoywWE2So\r\n+9QXZIiVJge2P/hUr2gTiRNTfmhupDeqb1E+i7x9txTrNc40gbTu3qs3/fjKIWrXw\r\n+Dy5tuZsviLQnEQtY4sEnHl7oL1crOuIHjZfgZfoZ5CK+jqb2b0B9uIm/SMl6Kt8S\r\n+m6ZtK0QTjtUSIputPEYdLycdOpWDDtAHrWkTlRzKJoLG4hsywBAgQe7n9nLf7Zmi\r\n+DhXyXRKyJuuuG5mt7UZhjW95loFFVcGXHIxNmxVqNb1YaG3kEa9PdQMoOc0hRZb9\r\n+77yaGfpLV8Vo4CB1eAuVU0UdNRyChrZK5dKXBN/0uZq5HgpI1GiK/C3YUuQI3t9p\r\n+zeJYD3jPGYCI9xxLaqt7whoOILPmZ1KW2UfXTvcMgBUMkFpZrqhTGscAEQEAAYkC\r\n+JQQYAQIADwUCVIGsMgIbDAUJA8JnAAAKCRAicOMMUic59oqeD/9SvgUx60AhyCPl\r\n+1G64eII9M2LU4vmHj8g6wnjh3xaWXvlQU1xnz/5I0XrlbHm31ExEHK+7Zla4AQ/P\r\n+OrJhMNZh9oes3iOh+pAEn/vtixddM/oiivLBxMcIzq31PS8lZWrAjqOX/FFYa8GM\r\n+NZI0bNWu92J7cL/bRVwsIVUXh2DkUu7wXwicNERYkKDTBaK7FE06C/hIGTwmENlR\r\n+b1+H7e00nzWqoHyd0fhG7d8RaF2IF95YH5+r+aS20cHVCTI/0Z32FmlnCA6QlkZx\r\n+JZiXKssHLpegeegAOOR3t2keB5rN4J/8KSzIEWUG5sjXkshMIM7w1a6urc/iE9PW\r\n+YGgbG7Wt1AcEO5cnU72DzoENrOxRKdFLZWemLbncLPTY2GERPutJgDSYvaxmwnQy\r\n+eGsnRIOmAMgN9+8NEs9wZnzrYpkvk/Vw1FwNcCCUYb0ZPYoRVRhP2UXYm7OxdKdk\r\n+zPXfS7Uqs9oto1FiD7iomhtBs+RW8ndaO9wHGoCn2/UAD9fxNIkTQvK61amyjGX3\r\n+gdwrOwt73I+wjgt78jmZsKfnPWYnOIUg2/12P4iB6KhWD8MIIeFLl9TFfZ8f06WV\r\n+WIUTcA4cgSYgGOScxB0En+B3LDCkmVabu/JzBedT9N8rXvgdywk2UR4vKqiyJT1O\r\n+9ArEfToN7J0gclhUoadr0im67BGyMZkCDQRVXu6kARAAwR/cg0kJja6u1YToEM+g\r\n+SOOPZK6Bn745y0cvf6+YFVefLcManUCyI+/DWZhO+D/im569MApbTz1qdaLE54Kh\r\n+z2CtOJBlWP8cjlnVZ95hBK+Z9COuk60dXI7DySRn3DVryNpYjRCe+8SBTQJSj8b0\r\n+JEk5VVYPYUOIc3L6g7LBL2/ycxV3LVFTQ/A9LGBev7y2emgC7lqkPPoDU1vJeO1N\r\n+4G0nFsIxuml81pfgi/2aMbGF8l7LVAI8qMc0c4RAjL/yTPzVX5qq5+zAaXMcyhgy\r\n+yqOvlXlCG9aisnmPCEiShxmLvGfGdPmi+apxZNUW3384vVcOxzl1VcU6sVZT30/a\r\n+Jaa8RxZqC6S5kOr7uPO8CD1wB1rXzD8SA4Adcq9SwOkVE7QfnQi6+BIgdrsLKUfg\r\n+2vBjcgA/IsLETlnp2792m3w01OKe2/w9Uq3N45lWVTNVx2UcbWAIz6bwWoMDJ1DN\r\n+B4XQHb5Ag+VI7lIGr45Ep4ohOfIcpBCMa1WVGyTYoQFc66mPZ2MotADOHtgGpm6v\r\n+ZyJEp2qWj0at+tDepf0bFPHmGGhVj+N4HTBWMzsu3sLCAh3QWStr+gkffUl2CsdG\r\n+Y3RL6kVkCCW0o/o+V0mc8ZV8kAtFPyYGllsP9HEvjeXkHg+DAvRFZhSPI1mxGkGg\r\n+gZlEtHqZ9Lofoco9wedCJPEAEQEAAbQlSm9uYXMgU2NobmVsbGkgPGRldkBqb25h\r\n+c3NjaG5lbGxpLmNoPokCPgQTAQIAKAUCVV7upAIbAwUJCWYBgAYLCQgHAwIGFQgC\r\n+CQoLBBYCAwECHgECF4AACgkQKdS8tkFvU+ytjhAAwQqTK7pSjSSK91QZAvsV+CgN\r\n+AzC8AydcdpWAnJpsE+nw76snAexMctDfae9uPSGSVM9PAgouUg2YJxNd9RzPCv7j\r\n+vx3bevO3ArNZxvdKSXffPVzt01j53z99/Ltmev5rpIcNQk2nqL3iZaZ5O7Vxre8k\r\n+H5KxncFCUxlnX/stLz9WOmnIN1X5qVq3lSzh8xvm7DuyOmi1Z94GHCW4BHN6wxtX\r\n+nXqYeI45jPcbuJWC8P8qtNicZ0N2XLjpAoLSvQ68VTrvvLN0X2HT9Ol9y5t7re8J\r\n+PEY52TvrPCLYz4hQD0fPe3w14LkcdbWTjJwQ3Y7KWd67SOn+l8VDPj2jT0yDBDG2\r\n+YazByLqV29SgXm9WsfYXYF4FB9NSApbrAmhTWVa4K4DFXrLvcIpaIR4Ii3JQZDag\r\n+2tO1VTgxF+10S66qrwXwawBbGfDVchWgSi9T1hNn2wgLypsLN1ZDy7ixPCD+SHHd\r\n+xgTN8yv+/WNRNZ+LtUKNCIBHQmUBesNfN+wOrvOoWPAP6XjlUIlA2RIH6zKcNbDb\r\n+a4jjx1ENiHAlapVxzPTQiTfj0TDRXBdjboiswXfkN76upHdgdMdeFz9hiH0PSbxA\r\n+TmlmA7NrsENHLp89SB/gnGT2I/lLP5/DsoN3Qv8GCoy7aUNDT7abi1AeoBVVye2c\r\n+AL3d+hDPgOzJHjf0eJGJAhwEEAECAAYFAlZFyF4ACgkQInDjDFInOfZtGg//f4xQ\r\n+PvS6gQdIosesV458LtIUnrqdPx/8PGnIbkObSzjevEoj3RQ+D7PHvF57lj6m45aB\r\n+Tr6huXC2RQzOIjRXM9dYi6SVZzQ1xnjMep72ylVYawQS3VBeuQbhU2BgYTeLa55+\r\n+0sHBA/hX9ufH7a3UvSTgvssX44SH5mGg2h4I3O+4cNQIDf/G7xkzkJKcQmATRmIR\r\n+10JaaBKtx4JVNVzCWTOpEqW6/QA8X94LapK8Rh/mhKyd38v3CEHI7hH0ex0o2mOF\r\n+kAsPY1vvfxWzGKMolJp1b/1FPcb7Fl+nCoqlfnv0cCnZYsQvYXrOs/1Kj0anv9yR\r\n+iutEp2DyaAnhadadrFpWjXQNUeYtFlJ1aC+6HO//uw2spKFqcQ4tTvu9HgHJO1gn\r\n+GTsmDskwXqHOYNvH9QjtwlhPhOWQdHgLPrWBiUBvkT9H8uoNRGWg0VGA4J51IkRh\r\n+0ZyoLmRgejpj7SOpwLX6gemprn0Z4fgohKyj6z4/Bop2gliXSPB37qdun6M92g8m\r\n+SkxaEXF2ZyIXdeVRT6Xgp+zoGDNbMG3PlhZiFFCvH3Hk8o9zAz/65de6D+14EHYj\r\n+WBRKfu7jaL2RSwUSRwRAAYKwu6kgRy8G7+4SihuSHT2k/90il6iwpzXdyY7qQXWG\r\n+VxfrmGWZLYT0u7d+EZ1pc02UKYCFptlVCIZtaQK5Ag0EVV7upAEQAKpWFoCqFFqQ\r\n+5xH6+TFvbUFWBb1dWy89GMXCkmqAsoy8Ss2Ru8gNuy7Xt4l1dQhVpN0QWiuVGkEO\r\n+f2PmXQhnLquaSz7XLZjjdO5E3kYzcwOpIbb2TCWH4QQtHEotowRslQAXAZ53jN9u\r\n+NIEQHCPPBNocj0CLQmZl+av1MqRJrRcYzgkPIs34mBo6iVoRrD5CkSohbz01BMWJ\r\n+ZLk0E+JvalML7+ttiwu+gI90uRGiKEz5xsDMtyx0mAcAm+/EjcuQbhGrD6p7dLKv\r\n+9nuUU/T743N2LoDTBMzvX/JXjoQ/uS1nzuiJrc/vYHqy9uucgviuYWFH/Q+LhwMr\r\n+6tjJYUiN4JIQ85OLvq6g71RnpWzy3ce25HL1YWbLNuzi8ZKIB/sL4LXG2iTwwSFk\r\n+tVjfAc4zP/VWpRC5VbxG76atRkPLatgA6b2sawgQ6L/7XB5Wd5F0bJc3ndwPBKos\r\n+FFXgzOBgOkI6kYERQo8h2GzWfU8LWxl0a420ZHEfUZoYmitg/evA3v+23FrCMGg6\r\n+2cdNzU5/mqsQ5HWktTQ5BZQZyn5UT3zpNCOVyeZc/ezzGXcWbEXOLQwDcolxjatL\r\n+ED3eNA1OMQD8S++FPPGCukIzCyYiPq49zJCTMCWd3qTt2Bwea9xOQnoetCTU9goX\r\n+/eEGj/1zQDAXCGOVgdd34VrOX4qtpmp3ABEBAAGJAiUEGAECAA8FAlVe7qQCGwwF\r\n+CQlmAYAACgkQKdS8tkFvU+xj8Q//VNzFYM/kyHSa0xio4e8vBZA2vmR8IEUmtOSR\r\n+zr487Z8W1dapGxR7OLQ52oWdRZVpG1B5rCuJtsWbjdY94Y8RpcO6FBemneGebBhu\r\n+UKc60qwEanYnZva9PEFNyBzpj3xk3Ms7K4O2dZTcXPGj+hlep9Tjo09sklqbKfgW\r\n+2fCUu2EKXWwUrnZ2LZtb/Ya8WPCrsbJFk+WbrLhWt7jIsadVl4AfblcgBGb8aN98\r\n+GxnYOh+TGSMJtq1NSfchQwLHrpTPYm4McAwOBBYDdA+ik3//eLbwRiX9szFk658p\r\n++4LErMBJAKLreSluBkqOG3AzT22Hdffvl8G2U4WhPPG33NzWomb+wKohjjzMVUlx\r\n+YRCO57wkURqEW9/+a4riuBWGQqqRsW1wHEMu1lYdAhLJ5f0s3vO/fVe43ktaXNjW\r\n+6k+mXDlIdKkQgQ736sBk3DAUc+YcmWmStPr1+TtT91eC23GLWP7gVDnNGEOBOscw\r\n+U+m1bEOJN2duAMJSRK7U0r2ipmRKDcwK9XmVpJcTePfB2l+T3RdHEZIOlaTELEX6\r\n+WJfpU4Kc1KJeKdp+l9gf2JD8eOZAlwxA4r2wxyzoCVg1Bk3XiBfoI7Gl78Wysp+/\r\n+ChQcErPJWEUglBfrESpqmjxH/qSy6yjyNmd4Az2ii7IzWILfuheZR4drjHQj6mCA\r\n+S5rowLE=\r\n+=ZVPf\r\n+-----END PGP PUBLIC KEY BLOCK-----\n\\ No newline at end of file"
      },
      {
        "sha": "559295109d9646f4baa3f2d7c1eb374333899fd9",
        "filename": "contrib/gitian-keys/laanwj-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/laanwj-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/laanwj-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/laanwj-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "contrib/gitian-downloader/laanwj-key.pgp"
      },
      {
        "sha": "a2d34e75e1c16c17cb721633038813800dbe45b3",
        "filename": "contrib/gitian-keys/luke-jr-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/luke-jr-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "ee626500a482448cb2c7717ba352260262a3422f",
        "filename": "contrib/gitian-keys/marcofalke-key.pgp",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/marcofalke-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/marcofalke-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/marcofalke-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,69 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1\n+\n+mQINBFZu2toBEADGuBiRutibv2SlW/A7vBGeGA0n58coQaPkmi04QGMeGxdZyvad\n+h8olkPO1q5B0/5E1olEjs1YquHTjSjerLz8nUg8K5OEu14KtCGvFbmtSFW7fOUHD\n+/u+EykJrJczqcJJ31r4B51L8CdS1ODdBbinQRlTjtLq+pE/fJAjHI3iQ2E06vkpc\n+BRVA628fZKHIcd6uXZBrDyAcKtqq1TITlcYoVlYbvMrov9bPz1NW3P6pgnO1S+UK\n+RfkhG+N3bC8ttsTXo0aevz3klaVFEZ4Oo4N8TUcYoYDTZIfu/Gk23r0hBONI75IE\n+pbF8u+r0M5mpXxCHqmrUgmU33CBTeuCZon5r0iEsweF+ldh5rhEOhXWxHcUUz62S\n+64XoqzuOlorpWzIS53oyVTZcH6XszF+iLqSuMQCgOYhF/u47rt3Vh9D+TYJcnvGd\n+0ozRuajLIRGCdVlKt212ER9QLxZ6BTOePbb+g99I2DOx6heSUDzwXWKTxt00Lr89\n+LyBFa9kj2fI0BNuzx9XI0l+GK5M9xkNi5LwL5gaLsPCJHEEPaG2pcBIBbw6hjIka\n+L1fgDWng6MQ/eml5JsyA3G3J07/xxoVPaN9vZ8LLO9BEiz7e3Oss8a3Mw+SfsMcH\n+mJJIFT/CguJCxW3FeKs16XiDpO2Eg2WRoMJMB+psdfgo8e2q7dXIE6kCtwARAQAB\n+tCNNYXJjbyBGYWxrZSA8ZmFsa2UubWFyY29AZ21haWwuY29tPokCOAQTAQIAIgUC\n+Vm7a2gIbAwYLCQgHAwIGFQgCCQoLBBYCAwECHgECF4AACgkQNkiogvQxa5vgkA//\n+Q200J62bnplhyuWMvKmpCNFG7lTtLHmwVtZmvBJiHsRwe42KRWKz6IaQgEHfBMCU\n+tSra4i2KY47j4s/kyTgWeQooH9Zxh7c4EMeyOrxpqPmnKF/0tFnDyk9SCqbrrUQ+\n+VuL9/JrZ3zB74GtRikvWXS43cuBheKPZSwdGrGWtP74Z48eKXa8mOZtDfQJACqpZ\n+lF2Hv0GOFKDNfaol6BkANpeDv3orhnysY5TqE8iA4VuHAL2MDmWg68Rb9sjPoj7U\n+TIYyeqiok/R56SkN+WnGGI7l4+pk8pBqhkjZUjVTEEABR81Vu+Rn8OxTqpKu6gW3\n+YACXnk/kXYY4I3Ri63eK0BQEeZ6Q8nrPhqHYK7fzlbwwL4Id5bDJpBZW+a6Hvlw+\n+zQXpObhMSxtDJZzEonqq5PwJLlkLPU4sbS1tuinCdAII0Qz0Tv3Nwvcrr+KWiNqr\n+vf1ed7CecDcQpSqHfhhibgykLfdAJGNpGxyA4yhOUHax4TbYZctL3ZYXRWGrF//z\n+Gv33w+8DMb3zM+BP2SBR5D7MFTqE2X7bTn/0pRnfYObjgU7+pT0bed4SyEY2mnqb\n+ikPTKfz/g+xLL46lMaJKLgBdS14A6+k3qVUDaBNMb7crSQlutmU3fRhNYq1KW9IX\n+vEI7YuEfMa6vj4rLW+68CKYBu2pNBSQZ9LHedx1UM3u5AQ0EVm7hJQEIAMTDtNiw\n+0WJUO8T7G2vA4WFHbvBoGM4CH9LaOm0JpH3L0DQ+XD5EWGICwlpkoiQiRPpGSmSc\n+KAbAgtfS+a91z4GSWEgL+q9HqVZO22yQSeCbtbnJs44BMJzgMcVxiFOc0JQU0KPR\n+zrT2TtD/Z4ryOvI2nuepv3aRz0RSQEsBnhMx/aNIV9YbRJ0YofC8BPReK5hQ6rYT\n+V2C4P0RoPCdjeGx//0Ilg+xTbPSG1urSKVUEz6UCT21MaCBsyxN5Z+Wa2K9F/894\n+y+TsWMQQcUYZ57DXFHM1dOkfDYorVATNOnv3dIJEjQDU0dYEE0yNUYG5nu+UjluJ\n+LG/ZTiXhkNQla+MAEQEAAYkDRAQYAQIADwUCVm7hJQIbAgUJAO1OAAEpCRA2SKiC\n+9DFrm8BdIAQZAQIABgUCVm7hJQAKCRAtfyNy5Q/hN0XMB/94V+GgGRgCxvwdAT92\n+RCatOJcf1YJuw1aKWjAiib0FVeChZebZYqW+jwvMkXZwxlVFhcpFlUzAqCRwcJx/\n+QoalF7u2yTL6DEEGcC8bUKrhtXQch4/D28BWJAJlR/7bItdWMIuw4WV/8s97t8Ca\n+Fn2Fc1T6/B20VclsxoeaAoXZUcWG9YIKRbEaogt3LxsRjgQLZiIicjRl0C5YpYDt\n+JvnENKuLwSRte6gKkuUi7Xw4iIP1aEwTTdZe0km6If6pVPwCK1cU9xMpsMftT1Fl\n+NdK/dJbfWoYrS24U30XvCxsFMogD5jJ+PiXUoXDBjPJmDiXrGUDR+je/RqsUKBH5\n+zyKaI1oP/A5Dq/EU5ceIfMPaS8iK4DjgwKdh8zuprDQ+JSf4iD1b/HHlwcrXmGFG\n+4uRO0X/V0ybIdYj4U4qXRm2FTA20x7MDEDW0i/cJQKNrVZC7HQnvrdG7ggG0KVok\n+tTvsIWJTmpQ3MY47rTtWQrmRdiiSRWeTFyE4sPUy3XpuPA5ZKGF5vN7A1p1WYSZH\n+gl6NBv2vp3wjwplSpYumzh0q+o7W4bhdy9+BR+K8l5a9LKyCrwL92XKLqp3iAyvq\n+RdbCrTvfppYtNwJ06JBww/b+aO08vTFY08eYbMTOVxNJUtzpq+JUe9QHOzbBNCv5\n+viIVqNRJEQw8ITQQ1AjgN3iWdnbVQEwYv3D6VNkpzDpZD6tzOmJwwbRc5rISCVL3\n+DQQglc7BYIkcI47QHBdf979H8EvA39U4yFHW3DfApHBl/gzHcEbb5RoBYc5yb+02\n+U8xGHxGJ7q4h40N+oLCc4S04gepqtCeIQ8cgCPjRdPKuP8o2O2wzDYvqr3RlzM1M\n+l+GWmv+3em/RWwhWggDIf/XhYkSbC/USJuPjQEYqJRcpx+60HYV7Ro6/RryOoLUA\n+0ZXu6IYs2qT+KEcLQ4D1XKNb0GFnHW+3SXqehl4qI0zdPUOLKpXhCpThhC8BlqV5\n+O1aP/5jnogwcW1HF+tUc4h3nwrgvcajrikjffdBIrUidoDVEN04WuQENBFZu4oYB\n+CADQwtiaFcDxMms3bNyRrfaIA5gNWEhoTRFNXMKY5SacsavamWzlfNRBIlYMl27z\n+oMZK4hpxH568UKhwQyb/qLt7gI9hLBOdgRaWZuOCghNGX3MQCBodDLXTahnvUlXp\n+pXnUOtuQmODPjTDIjNXjcsZUUzSJoanQ+Zt8OWPBYumrFC9Xw5fFRcrNmSbWnllx\n+Nveyrm6mlOydSUXq8D1vh4vkNGtQ/0nrFuSTBGsl2vY+ClX4o8iYunaHmhEboqjp\n+BMEC4WdBql6N5CI64HQ0e2iGXVSTPiMHnpqQlnaOvx3gdaYPW15hjISgjPb6ygdp\n+uyGXyPRa+0X7TlTtGXLLcoB/ABEBAAGJAiUEGAECAA8FAlZu4oYCGwwFCQDtTgAA\n+CgkQNkiogvQxa5sE5w//VrTdVm1ak3RCtZU1D25D6yiSMKZ05j6PDyJfZNI/QubJ\n+5Qq/VKzITa4kr50LNnM/wZzQPxEM5K6HyA5Wk3tt4IXqmqyZ8VUS+55sl1b5Tg6q\n+NSLc2qXmY+BeVGmQZwke4nY8wvTNI3wGDekJTPd5a1rjkw64l8n2Xy5ErVaYlhkW\n+8KyD96PTKhsJgRqGmAtZjJ2i1e64oR/VYR1B9daghGzueV/uvdhD5DxH7UsKSBUZ\n+vb7lCeOK9Fuvs12/ULgMmymFxSvKeD5+etGUPsNA3gRpqwNcipp0QNhiQmm8nRq9\n+vH8Kv9tPmaXL2JHWJB4pMXQXX/DIww3I2gaFfHL60Dr120Ddte3uqdG9KSYQHz7s\n+/bH+vFsvqr17CHflA/Ogto4rfrlL5qo3SaJVRQwI5vhA3Nx/K22WeH7l25Mu6mAw\n+kQo0c76fmSvOTpvCVC8aDvhLlm1nF1ao+dq4QafnCrKU3PTn1SlkZ2hwfFzRy/Ru\n+Vdep6Xd2M3tux3O82UoHLF7Z+4G+NgP69h87rMOSikszRsNiCi80xO3aT2CU8Yt/\n+l3sduhFP5TqvfKjTJAK6EfUIukVC0JEL8ktpYCyxb9tN6DTPHEhCJUTXZI9Y60iT\n+ZIrV7MYY51HatEEJKhpUtLeYSyutj0ubbETfrt2b3cjHNfQh+OLEVUjaQwZXKdU=\n+=GC3s\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "47bc404554b41866c5626384c30a9e4f9261958c",
        "filename": "contrib/gitian-keys/michagogo-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/michagogo-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/michagogo-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/michagogo-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "contrib/gitian-downloader/michagogo-key.pgp"
      },
      {
        "sha": "5ee82a6f7ea42f0f4ecacbfc0b2541b3d98a48d7",
        "filename": "contrib/gitian-keys/petertodd-key.pgp",
        "status": "added",
        "additions": 1901,
        "deletions": 0,
        "changes": 1901,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/petertodd-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/petertodd-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/petertodd-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "0870c88b9b3608b761565063dcbdc33536250227",
        "filename": "contrib/gitian-keys/prab-key.pgp",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/prab-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/prab-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/prab-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,81 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v2\n+\n+mQINBFYHMLQBEADLpvMbTQZ28jaV/tEcHpt/a2YiIqBdNreh6rE2MkTTjdkZJ5Mp\n+RAFOTrRYRWyBL9jmCjvjt4TToiV4quv9ubRWdTKn0cKaqcl8kwZ5rtoX6EEhcLJO\n+CAL13kDzkBrG3OqRxM7VWn/0IGf++Eq0yT2eqBi7Ae3FvC4m64TKLI2NK7GB/MQD\n+JqcXuh/0yMsPiCNZrTDBX+3SzTuSLjWt2Le1Ap2nWXf68cWqP6nhT+f76epZyA4D\n+NI48/KeylUzPSJtqBmBM+YLg/XGcxDpbIotnr7D27ThJQIXDzut9O9f7RjdlKaeh\n+G73W/hDqTqLpkR5LMa7K3unUuvlyQqYGXfHINjJibNUTLCi7YcJtuDv/DJwQxu45\n+/UUYS2xH6HpgOTdWs6VjHRCDzeAoKzkdDB+8Mvi2lZXxY0iFQeQtRNkmN9D3M4oT\n+voG0cZWjPGeKSalGVSRS3TGhdf+IqOPhOl9yrwEArlZ8HtsTUFdx/jAsWHsycCVb\n+LjkD8Mdgit39UZCln3e0bY862wF7Gm7P3ITMnTofO9w6Pqffh9WWQBtLrxIXrgII\n+vstC8H9ajIl1FDuYs1Mf8u7iq1zHh6GNzoxkm+FEvYc3mkSfx6KJD3STWqSrJcQK\n+q/1SsjBb+RiuqeFdY8krWfm2xkuUoGLEQnr14UQz1hQTTLEgSoHBSHxuHwARAQAB\n+tB9QYXVsIFJhYmFoeSA8UFJhYmFoeUBnbWFpbC5jb20+iQI5BBMBCAAjBQJWBzC0\n+AhsDBwsJCAcDAgEGFQgCCQoLBBYCAwECHgECF4AACgkQvNBNjpzMrCp8dA//Yaob\n+cnFuzLjIeWyz996DPJvU62WmAE4GkZot/wk+dtIAnOCxO9YbhWVU/b1WG2PjGdqt\n+LiB6COG28/HzJoUh2zjG0lDcjvu060Bdw9rQ/kJWW22ylNAoKiY9jd3Abde5nBGK\n+0wwJ8+aMMDrO6euwgcJymJ+yZ6ZiWyG4TXXCbSdCDSsBtaaAugMlzZWeyEBEgUK4\n+nX3ZCoNiF3s2bYojr6VcgG2clM9gsSBW03XLW3lRLOvDFmdEAFp8KSJNSkGBlcOS\n+iba6zAKTY80W/+D3soBP6Lr2uP0AOFr+ZnfxvaH9YvXIFDq/jT3CH2RxiZLd1m59\n+ehUbU878ebOMlJCJYiUBY6H+vChytqy51o1np+KTQtpxKzigWiPbtyJ9zYoVVczI\n+Ds8APCqL729BPMhhTDm8I9jeEhjXNmmiJjGVJGVB5X/3w+7jQrEz6f1Ebi+cCrgN\n+tfN22bMs9hh5KkQ4JhRVfDM0DOXCvokXjdo9yXUf+Doc96ruCJKH0qR9L7qIASiD\n+hSEK3CNGY1G05Bb4wCS+FrexL11whAxlX7HCwbgjgHu07QJBYITdn3J4fUFYGsyS\n+G/2D5aLASiKGfq2TL1G9e/qI49/TksDQ6Xy4ue4cQYbf6JigfYjDcSDOZmkHPuXG\n+kSd60WPWJT6OqLrhq2c7exYCUGZaKrWBoie5yoGJAhwEEAEIAAYFAlYHcWAACgkQ\n+0cuiohvNiPY3BQ//TVOxm3UncyGyXOs+ss3fBSPE5q3lR71H4uo4CxE5pi9Y10tK\n+Qf0ULe0gRpnF2FMUkCCE5hu2oG+kPpqKON8/jwcnRCO9h2AndIZ3NRPAOXO2pn9f\n+bkDHMlInhPUxDk5zCHMTOdCONDvhocZ69gYHJdgt4w3Joji1YxTkHr2n8dFyNY7Q\n+LgqT1tpuXgopjKsUcYRhDCRN/iFsMa4D+XZR+rflvX5hkee19DzUIWmaHitfHZlo\n+VsJ7uVZKqUevS3rbBr3i+tpvvlrqDXAGksGWOdK7QFD6GtRgOD91IB82K0NvyX6t\n+M0TMh/aAAslxfH3YeTIGnETuBkp9QBCa1c966ipoHyzItmK9sF/ONPEfYR/ad3gB\n+Nc4G5w0UEROX0v4AWMfYc2CD+un3beH6rkWnopsIRJcQ71XvufqweWsPFALuBBzR\n+PTiugTi0SSSr/ayA543s90Ko2Fxrg20UYJZj1u/DEukpNJwjRSS/yyjk0hMWtzW8\n+rY1Br4Djbq3uQQj8EQojHgg3vlpHcbO77kXIJAlWYIzfHY69RGXCQG6Y7tavIiXm\n+vveP54CPFCs8Kl9t8Pq0IrWKnBGklE/KwfMzkzvrKFmi+nk9yRgwyN9G/geQt4Vo\n+W2mHmO1lvY8Zu2zpzLkvkYGXpL1VkIefmBYV/SWgyYGhLOJIFodJcMrrnje5AQ0E\n+Vgc1VQEIALsxaGYOnwWdgE2e7zX4uFz7jY5fZh0+RqGOe+Sk2g/QVKEDSLDgVF/V\n+tneG8AFgYukHPFCm0IZdKrewrkzdQOwxjyxiyFxOV/LYPesElVe8OWIs0lrMrWlL\n+ZLDguF63wnxWhjolfBzQAG29UTXYaJt6onEB59R2l426LBl3W9wvq19jolOECISw\n+r9z2IRUJ3poqBckT9j11p8yuPjGyht90dvg4htGPBV7nHDIijUnqLfk9mnAj8NwW\n+2Gf7TwW2uNA2rHV6riFzYVe2t1sB5Gdlx5ostJzo67yIc5Dffca901VhmpJTUPox\n+W2KmTpl3ObvaS0U0mkAyVObVHSuT6UsAEQEAAYkDRAQYAQgADwUCVgc1VQIbAgUJ\n+A8JnAAEpCRC80E2OnMysKsBdIAQZAQgABgUCVgc1VQAKCRAyXl7AXCempkrrB/9H\n+tOAstawkJ1IflUztgknEDE7MWuNR5XGqN7ROJAZvL8YfB5J7a4HJxTzCWft2QQUu\n+x3uwSfBpm+hRftBjm4aACrhDS6OOH4eFOUIdDASb2lgnhLmygKhAO9LW2z8jSrRs\n+tKNj9nyCo56mtd2awFESgpskavv/ilc9wU830C82FFdyBqgy5OBdWBurnb3SV5F7\n+23uD1t1n8b9gseIxNdF6Q//szAeHa4VRzzqykExXqHCEFCtH2gs9EjiZ3YeCyygK\n+cPbe6/+FP6UD810PBqnWaCShOIeT56JsOu2gMZ5+epWB+piUTn38N2Znu3EA3Q64\n+Gc7P8AtrNUCv56bof5NoTuwP/0rP4n1bsTy7siBuPqc9YvYkVCxNsGmg1Qs5h2Jr\n+ZmQlAnz8JXfi/TRxarUNQTZEsXVQzq+4C9eEMey440kXvDE2sd3p4MKnbtkDmahJ\n+XcMG5lsMMAQTpmyBf1EBEIFOwjZBqUqEkHl4FGRpEx/Q2p9/pVlogGW7SE5Ck6W/\n+A63ClJUJLsHaWiv9zJ23tzT+ooNy/iO1Y+GfV6MY1tBfLd4ZHHd2n1urFB362sgY\n+2x1TfvfXN0Myw7m1X0l9bYFycuuWfSo6qK+LCU/4P3jm21+i9lWBYX5l+NLz5mlC\n+V5aN57zmtGK7QMSp+6VY8mwG1TuhUt91S2fEScLax6qEASiEChB8m3YJOjKycP27\n+Sq9WactijiVTPslHjCNfyM4BbE9crAbDWGkIbzbka8ix3t4uBWt0YO0Ug9S3eZBt\n+w1OVxUI+LWjF5XlkfXn8W+pZ/C+M9Cs6QsAXEbfHXVZKwlAGZfvYE25UTr11RRnY\n+pl8JZglq0Z2Gip3YzJewC1pjjQTnnPoPT79elBuPmiGwNm5L8HsKUZ1IMf1k5mQB\n+FX0CilHMF/JAO+r8Obs1l7FHXvO0a95tStcjpFodZjHARi5B3VGghcypy2J9hWfH\n+YF23EcE4GzpqqSEO/SJoxuLNNtj5ZVJOxmeRz2CKCe1sI8xO7wY7ckjRaGmrvK+c\n+dAxeuQENBFYHOocBCACxVJwkGbqcgKTrg6APMxWO77ielcac8FOVpd0ns1h4TGZM\n+iCwwTR5WPRiIA6zuS3VTuPAntnK3VF9fQsLBORHIb4CzMeU3F/64SPt8NFajEQ+P\n+vPsZlyv29RSVmvhIRDTDry3Z/KQxnZ3rzazrBqGVuLBgsG45n97MQ8Xq0gkY42jU\n+VDldULYGMco5zHj/MFSQ6L3z0j1lL+aiX2xIdRyDNzOhRqaA1ByZvsRSsqW2JWox\n+78c6AbclWw0QLdQd4Pxk8k5hpeN/EtneVnFDX3hOq/C9fZs6f5aAKn81WXqPPPk6\n+G0b7KzlUoCWGlO7M5LzEzWmWvGPs7W8y2Uil99CVABEBAAGJAiUEGAEIAA8FAlYH\n+OocCGwwFCQPCZwAACgkQvNBNjpzMrCr50BAApY22DRYqmtALFieREu78BvjQT/DY\n+f9Smkga1YVr9/Ph9NJ5iSVeM8mrVkwZnGRK1UCjk16rsmB70IqlnJnyJGXqPMj7M\n+3ioOWY8fCL8fmLI2g0TbXXKl3e0nGByGXW4pwyLYa/hR7XJMco/PxqIGhEKcCIRP\n+dxq/6U9T9SYe2IkfXBYZAxfUTE2FkRpw1zSfZN3z32LM7ICZ26NRHRWo4Kv5sij4\n+0mYYecFmWdf6ib5pPCI0HmPGpblbmZgR1LoJNmuNxfpgEnPe8BbxtO4mueNW5A39\n+y7gLCmDZ8MaOGxvjGByBoXxXP62BiU910iZZZurjSD+3FD+NUX0m4yxVIZCkuInY\n+QzLxFACr26IYpcsPHIYGnEjDBFw9hHdP6tzKbjzgVSZESheQf2zwit0YYSjwHQN/\n+XGnBy8+p66As61jg8mcAN2Zd8vwFKZOvfEnSsaoK5ssAh8jixhPj+Ujgs0/PB8t/\n+ON20yr+YRAwU+RVnC/vfvrM83mjoz4mbmSLapFz/xWNhoS0ZczYEI5CyxE8peGPX\n+gd/7tim2OqUuZ3SlH5TZP3pdJcqxTNN7iNaWy1wAY/sb8As3Pge/Vv5hSYmHNjQy\n+h/62SSbTf6OZCuUGjy8fvVj51SclVKqGNprmAqVrIy0J+VeTKj4r7PGesPWJavRc\n+RFdDYRHByRDDL1I=\n+=dOwX\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "a1930ddee905f688dcb3a189a88e1317e7006a0f",
        "filename": "contrib/gitian-keys/sipa-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/sipa-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/sipa-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/sipa-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "contrib/gitian-downloader/sipa-key.pgp"
      },
      {
        "sha": "baaec76b8c656a04beb4a91155dff40658c87bd7",
        "filename": "contrib/gitian-keys/tcatm-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/tcatm-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/tcatm-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/tcatm-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "contrib/gitian-downloader/tcatm-key.pgp"
      },
      {
        "sha": "e0f6c4c5fdf56ffbd6308d4e0a6624290feadff6",
        "filename": "contrib/gitian-keys/wtogami-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/wtogami-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/gitian-keys/wtogami-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/wtogami-key.pgp?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "contrib/gitian-downloader/wtogami-key.pgp"
      },
      {
        "sha": "eb5d30accef8bfc9dfbf7e4b38b0ca5b924fa508",
        "filename": "contrib/init/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -4,6 +4,8 @@ SystemD: bitcoind.service\n Upstart: bitcoind.conf\n OpenRC:  bitcoind.openrc\n          bitcoind.openrcconf\n+CentOS:  bitcoind.init\n+OS X:    org.bitcoin.bitcoind.plist\n \n have been made available to assist packagers in creating node packages here.\n "
      },
      {
        "sha": "db5061874b3a923278fa11d4f3117fca19da1bcc",
        "filename": "contrib/init/bitcoind.init",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,67 @@\n+#!/bin/bash\n+#\n+#  bitcoind The bitcoin core server.\n+#\n+#\n+# chkconfig: 345 80 20\n+# description: bitcoind\n+# processname: bitcoind\n+#\n+\n+# Source function library.\n+. /etc/init.d/functions\n+\n+# you can override defaults in /etc/sysconfig/bitcoind, see below\n+if [ -f /etc/sysconfig/bitcoind ]; then\n+        . /etc/sysconfig/bitcoind\n+fi\n+\n+RETVAL=0\n+\n+prog=bitcoind\n+# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n+lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n+\n+# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n+bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n+\n+# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n+bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n+\n+start() {\n+    echo -n $\"Starting $prog: \"\n+    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n+    RETVAL=$?\n+    echo\n+    [ $RETVAL -eq 0 ] && touch $lockfile\n+    return $RETVAL\n+}\n+\n+stop() {\n+    echo -n $\"Stopping $prog: \"\n+    killproc $prog\n+    RETVAL=$?\n+    echo\n+    [ $RETVAL -eq 0 ] && rm -f $lockfile\n+    return $RETVAL\n+}\n+\n+case \"$1\" in\n+    start)\n+        start\n+        ;;\n+    stop)\n+        stop\n+        ;;\n+    status)\n+        status $prog\n+        ;;\n+    restart)\n+        stop\n+        start\n+        ;;\n+    *)\n+        echo \"Usage: service $prog {start|stop|status|restart}\"\n+        exit 1\n+        ;;\n+esac"
      },
      {
        "sha": "eda1a96fb4fcbaf3a61cafcd80368b5104ec0f56",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -12,12 +12,14 @@ BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n-BITCOIND_USER=${BITCOIND_USER:-bitcoin}\n+BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n+BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n+BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n \n name=\"Bitcoin Core Daemon\"\n-description=\"Bitcoin crypto-currency p2p network daemon\"\n+description=\"Bitcoin cryptocurrency P2P network daemon\"\n \n command=\"/usr/bin/bitcoind\"\n command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n@@ -28,9 +30,13 @@ command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n \n required_files=\"${BITCOIND_CONFIGFILE}\"\n start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n-\t\t\t-N ${BITCOIND_NICE:-0} -w 2000\"\n+\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n pidfile=\"${BITCOIND_PIDFILE}\"\n-retry=60\n+\n+# The retry schedule to use when stopping the daemon. Could be either\n+# a timeout in seconds or multiple signal/timeout pairs (like\n+# \"SIGKILL/180 SIGTERM/300\")\n+retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n \n depend() {\n \tneed localmount net"
      },
      {
        "sha": "0cbff6d30d2d66bbafaaf2205f4dd7609b2113a1",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -25,3 +25,9 @@\n # Additional options (avoid -conf and -datadir, use flags above)\n BITCOIND_OPTS=\"-disablewallet\"\n \n+# The timeout in seconds OpenRC will wait for bitcoind to terminate\n+# after a SIGTERM has been raised.\n+# Note that this will be mapped as argument to start-stop-daemon's\n+# '--retry' option, which means you can specify a retry schedule\n+# here. For more information see man 8 start-stop-daemon.\n+BITCOIND_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "e94cd4466d226a992e2bb2e24d594dcb49b58dac",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+<dict>\n+\t<key>Label</key>\n+\t<string>org.bitcoin.bitcoind</string>\n+\t<key>ProgramArguments</key>\n+\t<array>\n+\t\t<string>/usr/local/bin/bitcoind</string>\n+\t\t<string>-daemon</string>\n+\t</array>\n+\t<key>RunAtLoad</key>\n+\t<true/>\n+</dict>\n+</plist>"
      },
      {
        "sha": "06f278f3b3c710ed237ee81b1357970b583bd457",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -3,7 +3,7 @@ Construct a linear, no-fork, best version of the blockchain.\n \n ## Step 1: Download hash list\n \n-   $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n+    $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n \n Required configuration file settings for linearize-hashes:\n * RPC: rpcuser, rpcpassword\n@@ -14,7 +14,7 @@ Optional config file setting for linearize-hashes:\n \n ## Step 2: Copy local block data\n \n-   $ ./linearize-data.py linearize.cfg\n+    $ ./linearize-data.py linearize.cfg\n \n Required configuration file settings:\n * \"input\": bitcoind blocks/ directory containing blkNNNNN.dat\n@@ -26,7 +26,7 @@ output.\n \n Optional config file setting for linearize-data:\n * \"netmagic\": network magic number\n-* \"max_out_sz\": maximum output file size (default 1000*1000*1000)\n+* \"max_out_sz\": maximum output file size (default `1000*1000*1000`)\n * \"split_timestamp\": Split files when a new month is first seen, in addition to\n reaching a maximum file size.\n * \"file_timestamp\": Set each file's last-modified time to that of the"
      },
      {
        "sha": "38da02e66c1e7a46688afea10e8dfc9dbbb38959",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -4,13 +4,23 @@ rpcuser=someuser\n rpcpassword=somepassword\n host=127.0.0.1\n port=8332\n+#port=18332\n \n # bootstrap.dat hashlist settings (linearize-hashes)\n max_height=313000\n \n # bootstrap.dat input/output settings (linearize-data)\n+\n+# mainnet\n netmagic=f9beb4d9\n+genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n input=/home/example/.bitcoin/blocks\n+\n+# testnet\n+#netmagic=0b110907\n+#genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n+#input=/home/example/.bitcoin/testnet3/blocks\n+\n output_file=/home/example/Downloads/bootstrap.dat\n hashlist=hashlist.txt\n split_year=1"
      },
      {
        "sha": "0f6fde2a6e05216873f29cb8ec47d416f5c484d3",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 16,
        "deletions": 12,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -2,8 +2,8 @@\n #\n # linearize-data.py: Construct a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2014 The Bitcoin developers\n-# Distributed under the MIT/X11 software license, see the accompanying\n+# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n \n@@ -12,6 +12,7 @@\n import struct\n import re\n import os\n+import os.path\n import base64\n import httplib\n import sys\n@@ -115,19 +116,20 @@ def __init__(self, settings, blkindex, blkmap):\n \t\t\tself.setFileTime = True\n \t\tif settings['split_timestamp'] != 0:\n \t\t\tself.timestampSplit = True\n-        # Extents and cache for out-of-order blocks\n+\t\t# Extents and cache for out-of-order blocks\n \t\tself.blockExtents = {}\n \t\tself.outOfOrderData = {}\n \t\tself.outOfOrderSize = 0 # running total size for items in outOfOrderData\n \n \tdef writeBlock(self, inhdr, blk_hdr, rawblock):\n-\t\tif not self.fileOutput and ((self.outsz + self.inLen) > self.maxOutSz):\n+\t\tblockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n+\t\tif not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n \t\t\tself.outF.close()\n \t\t\tif self.setFileTime:\n \t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n \t\t\tself.outF = None\n \t\t\tself.outFname = None\n-\t\t\tself.outFn = outFn + 1\n+\t\t\tself.outFn = self.outFn + 1\n \t\t\tself.outsz = 0\n \n \t\t(blkDate, blkTS) = get_blk_dt(blk_hdr)\n@@ -147,8 +149,8 @@ def writeBlock(self, inhdr, blk_hdr, rawblock):\n \t\t\tif self.fileOutput:\n \t\t\t\toutFname = self.settings['output_file']\n \t\t\telse:\n-\t\t\t\toutFname = \"%s/blk%05d.dat\" % (self.settings['output'], outFn)\n-\t\t\tprint(\"Output file\" + outFname)\n+\t\t\t\toutFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n+\t\t\tprint(\"Output file \" + outFname)\n \t\t\tself.outF = open(outFname, \"wb\")\n \n \t\tself.outF.write(inhdr)\n@@ -165,7 +167,7 @@ def writeBlock(self, inhdr, blk_hdr, rawblock):\n \t\t\t\t\t(self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n \n \tdef inFileName(self, fn):\n-\t\treturn \"%s/blk%05d.dat\" % (self.settings['input'], fn)\n+\t\treturn os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n \n \tdef fetchBlock(self, extent):\n \t\t'''Fetch block contents from disk given extents'''\n@@ -189,7 +191,7 @@ def run(self):\n \t\twhile self.blkCountOut < len(self.blkindex):\n \t\t\tif not self.inF:\n \t\t\t\tfname = self.inFileName(self.inFn)\n-\t\t\t\tprint(\"Input file\" + fname)\n+\t\t\t\tprint(\"Input file \" + fname)\n \t\t\t\ttry:\n \t\t\t\t\tself.inF = open(fname, \"rb\")\n \t\t\t\texcept IOError:\n@@ -205,7 +207,7 @@ def run(self):\n \n \t\t\tinMagic = inhdr[:4]\n \t\t\tif (inMagic != self.settings['netmagic']):\n-\t\t\t\tprint(\"Invalid magic:\" + inMagic)\n+\t\t\t\tprint(\"Invalid magic: \" + inMagic.encode('hex'))\n \t\t\t\treturn\n \t\t\tinLenLE = inhdr[4:]\n \t\t\tsu = struct.unpack(\"<I\", inLenLE)\n@@ -265,6 +267,8 @@ def run(self):\n \n \tif 'netmagic' not in settings:\n \t\tsettings['netmagic'] = 'f9beb4d9'\n+\tif 'genesis' not in settings:\n+\t\tsettings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n \tif 'input' not in settings:\n \t\tsettings['input'] = 'input'\n \tif 'hashlist' not in settings:\n@@ -291,8 +295,8 @@ def run(self):\n \tblkindex = get_block_hashes(settings)\n \tblkmap = mkblockmap(blkindex)\n \n-\tif not \"000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\" in blkmap:\n-\t\tprint(\"not found\")\n+\tif not settings['genesis'] in blkmap:\n+\t\tprint(\"Genesis block not found in hashlist\")\n \telse:\n \t\tBlockDataCopier(settings, blkindex, blkmap).run()\n "
      },
      {
        "sha": "854cf1f9eeb3d70e818fea418ffca9620366dde4",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -2,8 +2,8 @@\n #\n # linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2014 The Bitcoin developers\n-# Distributed under the MIT/X11 software license, see the accompanying\n+# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n "
      },
      {
        "sha": "7527dc671fbe8730abc2497c2717778a19a024c6",
        "filename": "contrib/macdeploy/DS_Store",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/macdeploy/DS_Store",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/macdeploy/DS_Store",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/DS_Store?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "6163734e623bd3a21ac5e1ef83a42dd45febe746",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -11,5 +11,5 @@ This script should not be run manually, instead, after building as usual:\n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-When finished, it will produce `Bitcoin-Qt.dmg`.\n+When finished, it will produce `Bitcoin-Core.dmg`.\n "
      },
      {
        "sha": "fce12e380793b5ba9e893d7e1ed4ac75e69fd02d",
        "filename": "contrib/macdeploy/background.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/macdeploy/background.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/macdeploy/background.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.png?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "5889676f8e3d805568b63d9702eced2376ca8f7e",
        "filename": "contrib/macdeploy/background.psd",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/macdeploy/background.psd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/macdeploy/background.psd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.psd?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "9c330af45142e011e78b4b86874ac4b3457ed457",
        "filename": "contrib/macdeploy/background.svg",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\n+ \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n+<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n+\t<!-- kate: space-indent off;\n+\tCopyright (c) 2015 The Bitcoin Core developers\n+\tDistributed under the MIT software license, see the accompanying\n+\tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\t-->\n+\t<style type=\"text/css\"><![CDATA[\n+\t\ttext {\n+\t\t\tfont-family: \"Tuffy\";\n+\t\t\tfont-size: 86px;\n+\t\t\tfill: gray;\n+\t\t\ttext-anchor: middle;\n+\t\t}\n+\t]]></style>\n+\t<defs>\n+\t\t<linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n+\t\t\t<stop offset=\"0%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n+\t\t\t<stop offset=\"33%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n+\t\t\t<stop offset=\"80%\" style=\"stop-color:rgb(205,205,205);stop-opacity:1\" />\n+\t\t\t<stop offset=\"100%\" style=\"stop-color:rgb(204,204,204);stop-opacity:1\" />\n+\t\t</linearGradient>\n+\t</defs>\n+\t<rect width=\"1000\" height=\"640\" style=\"fill:url(#gradient);stroke-width:0\" />\n+\t<g transform=\"translate(500,0) scale(0.9, 1)\">\n+\t\t<text x=\"0\" y=\"114\">PACKAGE_NAME</text>\n+\t</g>\n+\t<g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\"\n+\tfill=\"#000000\" stroke=\"none\">\n+\t\t<path d=\"M4995 3705 c-24 -23 -25 -29 -25 -165 l0 -140 -306 0 -306 0 -29 -29 c-29 -29 -29 -31 -29 -141 0 -110 0 -112 29 -141 l29 -29 306 0 306 0 0 -140 c0 -136 1 -142 25 -165 16 -17 35 -25 57 -25 29 0 72 32 306 226 180 149 274 233 278 250 13 53 -2 70 -278 299 -235 194 -277 225 -306 225 -22 0 -41 -8 -57 -25z\" fixlter=\"url(#glow)\"/>\n+\t</g>\n+</svg>"
      },
      {
        "sha": "03e2325fc0c3cd890c0e22091447d9463c5f3856",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,60 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2013-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+from __future__ import division,print_function,unicode_literals\n+import biplist\n+from ds_store import DSStore\n+from mac_alias import Alias\n+import sys\n+\n+output_file = sys.argv[1]\n+package_name_ns = sys.argv[2]\n+\n+ds = DSStore.open(output_file, 'w+')\n+ds['.']['bwsp'] = {\n+    'ShowStatusBar': False,\n+    'WindowBounds': b'{{300, 280}, {500, 343}}',\n+    'ContainerShowSidebar': False,\n+    'SidebarWidth': 0,\n+    'ShowTabView': False,\n+    'PreviewPaneVisibility': False,\n+    'ShowToolbar': False,\n+    'ShowSidebar': False,\n+    'ShowPathbar': True\n+}\n+\n+icvp = {\n+    'gridOffsetX': 0.0,\n+    'textSize': 12.0,\n+    'viewOptionsVersion': 1,\n+    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n+    'backgroundColorBlue': 1.0,\n+    'iconSize': 96.0,\n+    'backgroundColorGreen': 1.0,\n+    'arrangeBy': 'none',\n+    'showIconPreview': True,\n+    'gridSpacing': 100.0,\n+    'gridOffsetY': 0.0,\n+    'showItemInfo': False,\n+    'labelOnBottom': True,\n+    'backgroundType': 2,\n+    'backgroundColorRed': 1.0\n+}\n+alias = Alias.from_bytes(icvp['backgroundImageAlias'])\n+alias.volume.name = package_name_ns\n+alias.volume.posix_path = '/Volumes/' + package_name_ns\n+alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n+alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n+icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n+ds['.']['icvp'] = icvp\n+\n+ds['.']['vSrn'] = ('long', 1)\n+\n+ds['Applications']['Iloc'] = (370, 156)\n+ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n+\n+ds.flush()\n+ds.close()"
      },
      {
        "sha": "781fe315edab5046fca0ce5dc59090cfe44760ae",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "modified",
        "additions": 11,
        "deletions": 12,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,11 +1,10 @@\n #!/bin/sh\n set -e\n \n-UNSIGNED=$1\n-SIGNATURE=$2\n+UNSIGNED=\"$1\"\n+SIGNATURE=\"$2\"\n ARCH=x86_64\n ROOTDIR=dist\n-BUNDLE=${ROOTDIR}/Bitcoin-Qt.app\n TEMPDIR=signed.temp\n OUTDIR=signed-app\n \n@@ -21,7 +20,7 @@ fi\n \n rm -rf ${TEMPDIR} && mkdir -p ${TEMPDIR}\n tar -C ${TEMPDIR} -xf ${UNSIGNED}\n-tar -C ${TEMPDIR} -xf ${SIGNATURE}\n+cp -rf \"${SIGNATURE}\"/* ${TEMPDIR}\n \n if [ -z \"${PAGESTUFF}\" ]; then\n   PAGESTUFF=${TEMPDIR}/pagestuff\n@@ -31,21 +30,21 @@ if [ -z \"${CODESIGN_ALLOCATE}\" ]; then\n   CODESIGN_ALLOCATE=${TEMPDIR}/codesign_allocate\n fi\n \n-for i in `find ${TEMPDIR} -name \"*.sign\"`; do\n-  SIZE=`stat -c %s ${i}`\n-  TARGET_FILE=`echo ${i} | sed 's/\\.sign$//'`\n+find ${TEMPDIR} -name \"*.sign\" | while read i; do\n+  SIZE=`stat -c %s \"${i}\"`\n+  TARGET_FILE=\"`echo \"${i}\" | sed 's/\\.sign$//'`\"\n \n   echo \"Allocating space for the signature of size ${SIZE} in ${TARGET_FILE}\"\n-  ${CODESIGN_ALLOCATE} -i ${TARGET_FILE} -a ${ARCH} ${SIZE} -o ${i}.tmp\n+  ${CODESIGN_ALLOCATE} -i \"${TARGET_FILE}\" -a ${ARCH} ${SIZE} -o \"${i}.tmp\"\n \n-  OFFSET=`${PAGESTUFF} ${i}.tmp -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n+  OFFSET=`${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n   if [ -z ${QUIET} ]; then\n     echo \"Attaching signature at offset ${OFFSET}\"\n   fi\n \n-  dd if=$i of=${i}.tmp bs=1 seek=${OFFSET} count=${SIZE} 2>/dev/null\n-  mv ${i}.tmp ${TARGET_FILE}\n-  rm ${i}\n+  dd if=\"$i\" of=\"${i}.tmp\" bs=1 seek=${OFFSET} count=${SIZE} 2>/dev/null\n+  mv \"${i}.tmp\" \"${TARGET_FILE}\"\n+  rm \"${i}\"\n   echo \"Success.\"\n done\n mv ${TEMPDIR}/${ROOTDIR} ${OUTDIR}"
      },
      {
        "sha": "89a2da32f7a1c9ea34bc4798dbe642c5f2901013",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 14,
        "deletions": 13,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -2,11 +2,12 @@\n set -e\n \n ROOTDIR=dist\n-BUNDLE=${ROOTDIR}/Bitcoin-Qt.app\n+BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n CODESIGN=codesign\n TEMPDIR=sign.temp\n TEMPLIST=${TEMPDIR}/signatures.txt\n OUT=signature.tar.gz\n+OUTROOT=osx\n \n if [ ! -n \"$1\" ]; then\n   echo \"usage: $0 <codesign args>\"\n@@ -19,20 +20,20 @@ mkdir -p ${TEMPDIR}\n \n ${CODESIGN} -f --file-list ${TEMPLIST} \"$@\" \"${BUNDLE}\"\n \n-for i in `grep -v CodeResources ${TEMPLIST}`; do\n-  TARGETFILE=\"${BUNDLE}/`echo ${i} | sed \"s|.*${BUNDLE}/||\"`\"\n-  SIZE=`pagestuff $i -p | tail -2 | grep size | sed 's/[^0-9]*//g'`\n-  OFFSET=`pagestuff $i -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n-  SIGNFILE=\"${TEMPDIR}/${TARGETFILE}.sign\"\n-  DIRNAME=\"`dirname ${SIGNFILE}`\"\n+grep -v CodeResources < \"${TEMPLIST}\" | while read i; do\n+  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n+  SIZE=`pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g'`\n+  OFFSET=`pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n+  SIGNFILE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}.sign\"\n+  DIRNAME=\"`dirname \"${SIGNFILE}\"`\"\n   mkdir -p \"${DIRNAME}\"\n   echo \"Adding detached signature for: ${TARGETFILE}. Size: ${SIZE}. Offset: ${OFFSET}\"\n-  dd if=$i of=${SIGNFILE} bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n+  dd if=\"$i\" of=\"${SIGNFILE}\" bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n done\n \n-for i in `grep CodeResources ${TEMPLIST}`; do\n-  TARGETFILE=\"${BUNDLE}/`echo ${i} | sed \"s|.*${BUNDLE}/||\"`\"\n-  RESOURCE=\"${TEMPDIR}/${TARGETFILE}\"\n+grep CodeResources < \"${TEMPLIST}\" | while read i; do\n+  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n+  RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n   DIRNAME=\"`dirname \"${RESOURCE}\"`\"\n   mkdir -p \"${DIRNAME}\"\n   echo \"Adding resource for: \"${TARGETFILE}\"\"\n@@ -41,6 +42,6 @@ done\n \n rm ${TEMPLIST}\n \n-tar -C ${TEMPDIR} -czf ${OUT} .\n-rm -rf ${TEMPDIR}\n+tar -C \"${TEMPDIR}\" -czf \"${OUT}\" .\n+rm -rf \"${TEMPDIR}\"\n echo \"Created ${OUT}\""
      },
      {
        "sha": "ef277a7f14ad66ecdb8597a865a54b9506fd0ff9",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -10,7 +10,7 @@\n \t\t<integer>620</integer>\n \t</array>\n \t<key>background_picture</key>\n-\t<string>background.png</string>\n+\t<string>background.tiff</string>\n \t<key>icon_size</key>\n \t<integer>96</integer>\n \t<key>applications_symlink</key>"
      },
      {
        "sha": "f8201e72c649dd6f2f111ed136436c3c5d770762",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 89,
        "deletions": 80,
        "changes": 169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python\n-\n+from __future__ import division, print_function, unicode_literals\n #\n # Copyright (C) 2011  Patrick \"p2k\" Schneider <me@p2k-network.org>\n #\n@@ -155,7 +155,7 @@ class FrameworkInfo(object):\n class ApplicationBundleInfo(object):\n     def __init__(self, path):\n         self.path = path\n-        appName = os.path.splitext(os.path.basename(path))[0]\n+        appName = \"Bitcoin-Qt\"\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n         if not os.path.exists(self.binaryPath):\n             raise RuntimeError(\"Could not find bundle binary for \" + path)\n@@ -201,7 +201,7 @@ class DeploymentInfo(object):\n \n def getFrameworks(binaryPath, verbose):\n     if verbose >= 3:\n-        print \"Inspecting with otool: \" + binaryPath\n+        print(\"Inspecting with otool: \" + binaryPath)\n     otoolbin=os.getenv(\"OTOOL\", \"otool\")\n     otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n     o_stdout, o_stderr = otool.communicate()\n@@ -210,8 +210,8 @@ def getFrameworks(binaryPath, verbose):\n             sys.stderr.write(o_stderr)\n             sys.stderr.flush()\n             raise RuntimeError(\"otool failed with return code %d\" % otool.returncode)\n-    \n-    otoolLines = o_stdout.split(\"\\n\")\n+\n+    otoolLines = o_stdout.decode().split(\"\\n\")\n     otoolLines.pop(0) # First line is the inspected binary\n     if \".framework\" in binaryPath or binaryPath.endswith(\".dylib\"):\n         otoolLines.pop(0) # Frameworks and dylibs list themselves as a dependency.\n@@ -222,8 +222,8 @@ def getFrameworks(binaryPath, verbose):\n         info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n         if info is not None:\n             if verbose >= 3:\n-                print \"Found framework:\"\n-                print info\n+                print(\"Found framework:\")\n+                print(info)\n             libraries.append(info)\n     \n     return libraries\n@@ -234,24 +234,24 @@ def runInstallNameTool(action, *args):\n \n def changeInstallName(oldName, newName, binaryPath, verbose):\n     if verbose >= 3:\n-        print \"Using install_name_tool:\"\n-        print \" in\", binaryPath\n-        print \" change reference\", oldName\n-        print \" to\", newName\n+        print(\"Using install_name_tool:\")\n+        print(\" in\", binaryPath)\n+        print(\" change reference\", oldName)\n+        print(\" to\", newName)\n     runInstallNameTool(\"change\", oldName, newName, binaryPath)\n \n def changeIdentification(id, binaryPath, verbose):\n     if verbose >= 3:\n-        print \"Using install_name_tool:\"\n-        print \" change identification in\", binaryPath\n-        print \" to\", id\n+        print(\"Using install_name_tool:\")\n+        print(\" change identification in\", binaryPath)\n+        print(\" to\", id)\n     runInstallNameTool(\"id\", id, binaryPath)\n \n def runStrip(binaryPath, verbose):\n     stripbin=os.getenv(\"STRIP\", \"strip\")\n     if verbose >= 3:\n-        print \"Using strip:\"\n-        print \" stripped\", binaryPath\n+        print(\"Using strip:\")\n+        print(\" stripped\", binaryPath)\n     subprocess.check_call([stripbin, \"-x\", binaryPath])\n \n def copyFramework(framework, path, verbose):\n@@ -274,8 +274,8 @@ def copyFramework(framework, path, verbose):\n     \n     shutil.copy2(fromPath, toPath)\n     if verbose >= 3:\n-        print \"Copied:\", fromPath\n-        print \" to:\", toPath\n+        print(\"Copied:\", fromPath)\n+        print(\" to:\", toPath)\n \n     permissions = os.stat(toPath)\n     if not permissions.st_mode & stat.S_IWRITE:\n@@ -288,14 +288,14 @@ def copyFramework(framework, path, verbose):\n         if not os.path.exists(linkfrom):\n             os.symlink(linkto, linkfrom)\n             if verbose >= 2:\n-                print \"Linked:\", linkfrom, \"->\", linkto\n+                print(\"Linked:\", linkfrom, \"->\", linkto)\n         fromResourcesDir = framework.sourceResourcesDirectory\n         if os.path.exists(fromResourcesDir):\n             toResourcesDir = os.path.join(path, framework.destinationResourcesDirectory)\n             shutil.copytree(fromResourcesDir, toResourcesDir, symlinks=True)\n             if verbose >= 3:\n-                print \"Copied resources:\", fromResourcesDir\n-                print \" to:\", toResourcesDir\n+                print(\"Copied resources:\", fromResourcesDir)\n+                print(\" to:\", toResourcesDir)\n         fromContentsDir = framework.sourceVersionContentsDirectory\n         if not os.path.exists(fromContentsDir):\n             fromContentsDir = framework.sourceContentsDirectory\n@@ -304,16 +304,16 @@ def copyFramework(framework, path, verbose):\n             shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n             contentslinkfrom = os.path.join(path, framework.destinationContentsDirectory)\n             if verbose >= 3:\n-                print \"Copied Contents:\", fromContentsDir\n-                print \" to:\", toContentsDir\n+                print(\"Copied Contents:\", fromContentsDir)\n+                print(\" to:\", toContentsDir)\n     elif framework.frameworkName.startswith(\"libQtGui\"): # Copy qt_menu.nib (applies to non-framework layout)\n         qtMenuNibSourcePath = os.path.join(framework.frameworkDirectory, \"Resources\", \"qt_menu.nib\")\n         qtMenuNibDestinationPath = os.path.join(path, \"Contents\", \"Resources\", \"qt_menu.nib\")\n         if os.path.exists(qtMenuNibSourcePath) and not os.path.exists(qtMenuNibDestinationPath):\n             shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath, symlinks=True)\n             if verbose >= 3:\n-                print \"Copied for libQtGui:\", qtMenuNibSourcePath\n-                print \" to:\", qtMenuNibDestinationPath\n+                print(\"Copied for libQtGui:\", qtMenuNibSourcePath)\n+                print(\" to:\", qtMenuNibDestinationPath)\n     \n     return toPath\n \n@@ -326,15 +326,15 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n         deploymentInfo.deployedFrameworks.append(framework.frameworkName)\n         \n         if verbose >= 2:\n-            print \"Processing\", framework.frameworkName, \"...\"\n+            print(\"Processing\", framework.frameworkName, \"...\")\n         \n         # Get the Qt path from one of the Qt frameworks\n         if deploymentInfo.qtPath is None and framework.isQtFramework():\n             deploymentInfo.detectQtPath(framework.frameworkDirectory)\n         \n         if framework.installName.startswith(\"@executable_path\") or framework.installName.startswith(bundlePath):\n             if verbose >= 2:\n-                print framework.frameworkName, \"already deployed, skipping.\"\n+                print(framework.frameworkName, \"already deployed, skipping.\")\n             continue\n         \n         # install_name_tool the new id into the binary\n@@ -366,7 +366,7 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n def deployFrameworksForAppBundle(applicationBundle, strip, verbose):\n     frameworks = getFrameworks(applicationBundle.binaryPath, verbose)\n     if len(frameworks) == 0 and verbose >= 1:\n-        print \"Warning: Could not find any external frameworks to deploy in %s.\" % (applicationBundle.path)\n+        print(\"Warning: Could not find any external frameworks to deploy in %s.\" % (applicationBundle.path))\n         return DeploymentInfo()\n     else:\n         return deployFrameworks(frameworks, applicationBundle.path, applicationBundle.binaryPath, strip, verbose)\n@@ -444,7 +444,7 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n     \n     for pluginDirectory, pluginName in plugins:\n         if verbose >= 2:\n-            print \"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\"\n+            print(\"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\")\n         \n         sourcePath = os.path.join(deploymentInfo.pluginPath, pluginDirectory, pluginName)\n         destinationDirectory = os.path.join(appBundleInfo.pluginPath, pluginDirectory)\n@@ -454,8 +454,8 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n         destinationPath = os.path.join(destinationDirectory, pluginName)\n         shutil.copy2(sourcePath, destinationPath)\n         if verbose >= 3:\n-            print \"Copied:\", sourcePath\n-            print \" to:\", destinationPath\n+            print(\"Copied:\", sourcePath)\n+            print(\" to:\", destinationPath)\n         \n         if strip:\n             runStrip(destinationPath, verbose)\n@@ -495,6 +495,7 @@ ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fan\n ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's ressources; the language list must be separated with commas, not with whitespace\")\n ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n+ap.add_argument(\"-volname\", nargs=1, metavar=\"volname\", default=[], help=\"custom volume name for dmg\")\n \n config = ap.parse_args()\n \n@@ -524,7 +525,7 @@ if config.translations_dir and config.translations_dir[0]:\n \n for p in config.add_resources:\n     if verbose >= 3:\n-        print \"Checking for \\\"%s\\\"...\" % p\n+        print(\"Checking for \\\"%s\\\"...\" % p)\n     if not os.path.exists(p):\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Could not find additional resource file \\\"%s\\\"\\n\" % (p))\n@@ -534,7 +535,7 @@ for p in config.add_resources:\n \n if len(config.fancy) == 1:\n     if verbose >= 3:\n-        print \"Fancy: Importing plistlib...\"\n+        print(\"Fancy: Importing plistlib...\")\n     try:\n         import plistlib\n     except ImportError:\n@@ -544,7 +545,7 @@ if len(config.fancy) == 1:\n     \n     p = config.fancy[0]\n     if verbose >= 3:\n-        print \"Fancy: Loading \\\"%s\\\"...\" % p\n+        print(\"Fancy: Loading \\\"%s\\\"...\" % p)\n     if not os.path.exists(p):\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n@@ -558,23 +559,23 @@ if len(config.fancy) == 1:\n         sys.exit(1)\n     \n     try:\n-        assert not fancy.has_key(\"window_bounds\") or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n-        assert not fancy.has_key(\"background_picture\") or isinstance(fancy[\"background_picture\"], str)\n-        assert not fancy.has_key(\"icon_size\") or isinstance(fancy[\"icon_size\"], int)\n-        assert not fancy.has_key(\"applications_symlink\") or isinstance(fancy[\"applications_symlink\"], bool)\n-        if fancy.has_key(\"items_position\"):\n+        assert \"window_bounds\" not in fancy or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n+        assert \"background_picture\" not in fancy or isinstance(fancy[\"background_picture\"], str)\n+        assert \"icon_size\" not in fancy or isinstance(fancy[\"icon_size\"], int)\n+        assert \"applications_symlink\" not in fancy or isinstance(fancy[\"applications_symlink\"], bool)\n+        if \"items_position\" in fancy:\n             assert isinstance(fancy[\"items_position\"], dict)\n-            for key, value in fancy[\"items_position\"].iteritems():\n+            for key, value in fancy[\"items_position\"].items():\n                 assert isinstance(value, list) and len(value) == 2 and isinstance(value[0], int) and isinstance(value[1], int)\n     except:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n         sys.exit(1)\n     \n-    if fancy.has_key(\"background_picture\"):\n+    if \"background_picture\" in fancy:\n         bp = fancy[\"background_picture\"]\n         if verbose >= 3:\n-            print \"Fancy: Resolving background picture \\\"%s\\\"...\" % bp\n+            print(\"Fancy: Resolving background picture \\\"%s\\\"...\" % bp)\n         if not os.path.exists(bp):\n             bp = os.path.join(os.path.dirname(p), bp)\n             if not os.path.exists(bp):\n@@ -590,18 +591,25 @@ else:\n \n if os.path.exists(\"dist\"):\n     if verbose >= 2:\n-        print \"+ Removing old dist folder +\"\n+        print(\"+ Removing old dist folder +\")\n     \n     shutil.rmtree(\"dist\")\n \n # ------------------------------------------------\n \n-target = os.path.join(\"dist\", app_bundle)\n+if len(config.volname) == 1:\n+    volname = config.volname[0]\n+else:\n+    volname = app_bundle_name\n+\n+# ------------------------------------------------\n+\n+target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n \n if verbose >= 2:\n-    print \"+ Copying source bundle +\"\n+    print(\"+ Copying source bundle +\")\n if verbose >= 3:\n-    print app_bundle, \"->\", target\n+    print(app_bundle, \"->\", target)\n \n os.mkdir(\"dist\")\n shutil.copytree(app_bundle, target, symlinks=True)\n@@ -611,7 +619,7 @@ applicationBundle = ApplicationBundleInfo(target)\n # ------------------------------------------------\n \n if verbose >= 2:\n-    print \"+ Deploying frameworks +\"\n+    print(\"+ Deploying frameworks +\")\n \n try:\n     deploymentInfo = deployFrameworksForAppBundle(applicationBundle, config.strip, verbose)\n@@ -630,7 +638,7 @@ except RuntimeError as e:\n \n if config.plugins:\n     if verbose >= 2:\n-        print \"+ Deploying plugins +\"\n+        print(\"+ Deploying plugins +\")\n     \n     try:\n         deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n@@ -656,7 +664,7 @@ else:\n     for lng_file in add_qt_tr:\n         p = os.path.join(qt_tr_dir, lng_file)\n         if verbose >= 3:\n-            print \"Checking for \\\"%s\\\"...\" % p\n+            print(\"Checking for \\\"%s\\\"...\" % p)\n         if not os.path.exists(p):\n             if verbose >= 1:\n                 sys.stderr.write(\"Error: Could not find Qt translation file \\\"%s\\\"\\n\" % (lng_file))\n@@ -665,31 +673,31 @@ else:\n # ------------------------------------------------\n \n if verbose >= 2:\n-    print \"+ Installing qt.conf +\"\n+    print(\"+ Installing qt.conf +\")\n \n f = open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\")\n-f.write(qt_conf)\n+f.write(qt_conf.encode())\n f.close()\n \n # ------------------------------------------------\n \n if len(add_qt_tr) > 0 and verbose >= 2:\n-    print \"+ Adding Qt translations +\"\n+    print(\"+ Adding Qt translations +\")\n \n for lng_file in add_qt_tr:\n     if verbose >= 3:\n-        print os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file)\n+        print(os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file))\n     shutil.copy2(os.path.join(qt_tr_dir, lng_file), os.path.join(applicationBundle.resourcesPath, lng_file))\n \n # ------------------------------------------------\n \n if len(config.add_resources) > 0 and verbose >= 2:\n-    print \"+ Adding additional resources +\"\n+    print(\"+ Adding additional resources +\")\n \n for p in config.add_resources:\n     t = os.path.join(applicationBundle.resourcesPath, os.path.basename(p))\n     if verbose >= 3:\n-        print p, \"->\", t\n+        print(p, \"->\", t)\n     if os.path.isdir(p):\n         shutil.copytree(p, t, symlinks=True)\n     else:\n@@ -698,10 +706,10 @@ for p in config.add_resources:\n # ------------------------------------------------\n \n if config.sign and 'CODESIGNARGS' not in os.environ:\n-    print \"You must set the CODESIGNARGS environment variable. Skipping signing.\"\n+    print(\"You must set the CODESIGNARGS environment variable. Skipping signing.\")\n elif config.sign:\n     if verbose >= 1:\n-        print \"Code-signing app bundle %s\"%(target,)\n+        print(\"Code-signing app bundle %s\"%(target,))\n     subprocess.check_call(\"codesign --force %s %s\"%(os.environ['CODESIGNARGS'], target), shell=True)\n \n # ------------------------------------------------\n@@ -726,7 +734,7 @@ if config.dmg is not None:\n \n     def runHDIUtil(verb, image_basename, **kwargs):\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n-        if kwargs.has_key(\"capture_stdout\"):\n+        if \"capture_stdout\" in kwargs:\n             del kwargs[\"capture_stdout\"]\n             run = subprocess.check_output\n         else:\n@@ -736,7 +744,7 @@ if config.dmg is not None:\n                 hdiutil_args.append(\"-verbose\")\n             run = subprocess.check_call\n         \n-        for key, value in kwargs.iteritems():\n+        for key, value in kwargs.items():\n             hdiutil_args.append(\"-\" + key)\n             if not value is True:\n                 hdiutil_args.append(str(value))\n@@ -745,9 +753,9 @@ if config.dmg is not None:\n     \n     if verbose >= 2:\n         if fancy is None:\n-            print \"+ Creating .dmg disk image +\"\n+            print(\"+ Creating .dmg disk image +\")\n         else:\n-            print \"+ Preparing .dmg disk image +\"\n+            print(\"+ Preparing .dmg disk image +\")\n     \n     if config.dmg != \"\":\n         dmg_name = config.dmg\n@@ -757,27 +765,27 @@ if config.dmg is not None:\n     \n     if fancy is None:\n         try:\n-            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=app_bundle_name, ov=True)\n+            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=volname, ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n     else:\n         if verbose >= 3:\n-            print \"Determining size of \\\"dist\\\"...\"\n+            print(\"Determining size of \\\"dist\\\"...\")\n         size = 0\n         for path, dirs, files in os.walk(\"dist\"):\n             for file in files:\n                 size += os.path.getsize(os.path.join(path, file))\n-        size += int(size * 0.1)\n+        size += int(size * 0.15)\n         \n         if verbose >= 3:\n-            print \"Creating temp image for modification...\"\n+            print(\"Creating temp image for modification...\")\n         try:\n-            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=app_bundle_name, ov=True)\n+            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=volname, ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n         \n         if verbose >= 3:\n-            print \"Attaching temp image...\"\n+            print(\"Attaching temp image...\")\n         try:\n             output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n         except subprocess.CalledProcessError as e:\n@@ -788,12 +796,13 @@ if config.dmg is not None:\n         disk_name = m.group(1)\n         \n         if verbose >= 2:\n-            print \"+ Applying fancy settings +\"\n+            print(\"+ Applying fancy settings +\")\n         \n-        if fancy.has_key(\"background_picture\"):\n-            bg_path = os.path.join(disk_root, os.path.basename(fancy[\"background_picture\"]))\n+        if \"background_picture\" in fancy:\n+            bg_path = os.path.join(disk_root, \".background\", os.path.basename(fancy[\"background_picture\"]))\n+            os.mkdir(os.path.dirname(bg_path))\n             if verbose >= 3:\n-                print fancy[\"background_picture\"], \"->\", bg_path\n+                print(fancy[\"background_picture\"], \"->\", bg_path)\n             shutil.copy2(fancy[\"background_picture\"], bg_path)\n         else:\n             bg_path = None\n@@ -830,27 +839,27 @@ if config.dmg is not None:\n \n         itemscript = Template('set position of item \"${item}\" of container window to {${position}}')\n         items_positions = []\n-        if fancy.has_key(\"items_position\"):\n-            for name, position in fancy[\"items_position\"].iteritems():\n+        if \"items_position\" in fancy:\n+            for name, position in fancy[\"items_position\"].items():\n                 params = { \"item\" : name, \"position\" : \",\".join([str(p) for p in position]) }\n                 items_positions.append(itemscript.substitute(params))\n \n         params = {\n-            \"disk\" : \"Bitcoin-Qt\",\n+            \"disk\" : volname,\n             \"window_bounds\" : \"300,300,800,620\",\n             \"icon_size\" : \"96\",\n             \"background_commands\" : \"\",\n             \"items_positions\" : \"\\n                   \".join(items_positions)\n             }\n-        if fancy.has_key(\"window_bounds\"):\n+        if \"window_bounds\" in fancy:\n             params[\"window.bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n-        if fancy.has_key(\"icon_size\"):\n+        if \"icon_size\" in fancy:\n             params[\"icon_size\"] = str(fancy[\"icon_size\"])\n         if bg_path is not None:\n             # Set background file, then call SetFile to make it invisible.\n             # (note: making it invisible first makes set background picture fail)\n-            bgscript = Template(\"\"\"set background picture of theViewOptions to file \"$bgpic\"\n-                   do shell script \"SetFile -a V /Volumes/$disk/$bgpic\" \"\"\")\n+            bgscript = Template(\"\"\"set background picture of theViewOptions to file \".background:$bgpic\"\n+                   do shell script \"SetFile -a V /Volumes/$disk/.background/$bgpic\" \"\"\")\n             params[\"background_commands\"] = bgscript.substitute({\"bgpic\" : os.path.basename(bg_path), \"disk\" : params[\"disk\"]})\n \n         s = appscript.substitute(params)\n@@ -864,7 +873,7 @@ if config.dmg is not None:\n             print(\"Error running osascript.\")\n \n         if verbose >= 2:\n-            print \"+ Finalizing .dmg disk image +\"\n+            print(\"+ Finalizing .dmg disk image +\")\n             time.sleep(5)\n         \n         try:\n@@ -877,6 +886,6 @@ if config.dmg is not None:\n # ------------------------------------------------\n \n if verbose >= 2:\n-    print \"+ Done +\"\n+    print(\"+ Done +\")\n \n sys.exit(0)"
      },
      {
        "sha": "aecb3ba84f20d4575569fb1fc2e4eddb5018c645",
        "filename": "contrib/rpm/README.md",
        "status": "added",
        "additions": 185,
        "deletions": 0,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/rpm/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/rpm/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,185 @@\n+RPM Spec File Notes\n+-------------------\n+\n+The RPM spec file provided here is for Bitcoin-Core 0.12.0 and builds on CentOS\n+7 with either the CentOS provided OpenSSL library or with LibreSSL as packaged\n+at [LibreLAMP.com](https://librelamp.com/). It should hopefully not be too\n+difficult to port the RPM spec file to most RPM based Linux distributions.\n+\n+When porting the spec file to build for a particular distribution, there are\n+some important notes.\n+\n+## Sources\n+\n+It is considered good form for all sources to reference a URL where the source\n+can be downloaded.\n+\n+Sources 0-9 should be reserved for source code tarballs. `Source0` should\n+reference the release tarball available from https://bitcoin.org/bin/ and\n+`Source1` should reference the BerkeleyDB source.\n+\n+Sources 10-99 are for source files that are maintained in the\n+[Bitcoin git repository](https://github.com/bitcoin/bitcoin) but are not part of\n+the release tarball. Most of these will reside in the `contrib` sub-directory.\n+\n+Sources 10-19 should be reserved for miscellaneous configuration files.\n+Currently only `Source10` is used, for the example `bitcoin.conf` file.\n+\n+Sources 20-29 should be reserved for man pages. Currently only `Source20`\n+through `Source23` are used.\n+\n+Sources 30-39 should be reserved for SELinux related files. Currently only\n+`Source30` through `Source32` are used. Until those files are in a tagged\n+release, the full URL specified in the RPM spec file will not work. You can get\n+them from the git ropository where you retrieved this file.\n+\n+Sources 100+ are for files that are not source tarballs and are not maintained\n+in the bitcoin git repository. At present only an SVG version of the Bitcoin\n+icon is used.\n+\n+## Patches\n+\n+In general, patches should be avoided. When a packager feels a patch is\n+necessary, the packager should bring the problem to the attention of the bitcoin\n+developers so that an official fix to the issue can make it into the next\n+release.\n+\n+### Patch0 bitcoin-0.12.0-libressl.patch\n+\n+This patch is only needed if building against LibreSSL. LibreSSL is not the\n+standard TLS library on most Linux distributions. The patch will likely not be\n+needed when 0.12.1 is released, a proper fix is already in the Bitcoin git\n+master branch.\n+\n+## BuildRequires\n+\n+The packages specified in the `BuildRequires` are specified according to the\n+package naming convention currently used in CentOS 7 and EPEL for CentOS 7. You\n+may need to change some of the package names for other distributions. This is\n+most likely to be the case with the Qt packages.\n+\n+## BerkeleyDB\n+\n+The `build-unix.md` file recommends building against BerkeleyDB 4.8.30. Even if\n+that is the version your Linux distribution ships with, it probably is a good\n+idea to build Bitcoin Core against a static version of that library compiled\n+according to the instructions in the `build-unix.md` file so that any changes\n+the distribution may make in the future will not result in a problem for users.\n+\n+The problem that can exist, clients built against different versions of\n+BerkeleyDB may not be able read each other's `wallet.dat` file which can make it\n+difficult for a user to recover from backup in the event of a system failure.\n+\n+## Graphical User Interface and Qt Version\n+\n+The RPM spec file will by default build the GUI client linked against the Qt5\n+libraries. If you wish instead to link against the Qt4 libraries you need to\n+pass the switch `-D '_use_qt4 1'` at build time to the `rpmbuild` or `mock`\n+command used to build the packages.\n+\n+If you would prefer not to build the GUI at all, you can pass the switch\n+`-D '_no_gui 1'` to the `rpmbuild` or `mock` build command.\n+\n+## Desktop and KDE Files\n+\n+The desktop and KDE meta files are created in the spec file itself with the\n+`cat` command. This is done to allow easy distribution specific changes without\n+needing to use any patches. A specific time stamp is given to the files so that\n+it does not they do not appear to have been updated every time the package is\n+built. If you do make changes to them, you probably should update time stamp\n+assigned to them in the `touch` command that specifies the time stamp.\n+\n+## SVG, PNG, and XPM Icons\n+\n+The `bitcoin.svg` file is from the source listed as `Source100`. It is used as\n+the source for the PNG and XPM files. The generated PNG and XPM files are given\n+the same time stamp as the source SVG file as a means of indicating they are\n+derived from it.\n+\n+## Systemd\n+\n+This spec file assumes the target distribution uses systemd. That really only\n+matters for the `bitcoin-server` package. At this point, most RPM based\n+distributions that still receive vendor updates do in fact use systemd.\n+\n+The files to control the service are created in the RPM spec file itself using\n+the `cat` command. This is done to make it easy to modify for other\n+distributions that may implement things differently without needing to patch\n+source. A specific time stamp is given to the files so that they do not appear\n+to have been updated every time the package is built. If you do make changes to\n+them, you probably should update the time stamp assigned to them in the `touch`\n+command that specifies the time stamp.\n+\n+## SELinux\n+\n+The `bitcoin-server` package should have SELinux support. How to properly do\n+that *may* vary by distribution and version of distribution.\n+\n+The SELinux stuff in this RPM spec file *should* be correct for CentOS, RHEL,\n+and Fedora but it would be a good idea to review it before building the package\n+on other distributions.\n+\n+## Tests\n+\n+The `%check` section takes a very long time to run. If your build system has a\n+time limit for package build, you may need to make an exception for this\n+package. On CentOS 7 the `%check` section completes successfully with both\n+OpenSSL and LibreSSL, a failure really does mean something is wrong.\n+\n+## LibreSSL Build Notes\n+\n+To build against LibreSSL you will need to pass the switch\n+`-D '_use_libressl 1'` to the `rpmbuild` or `mock` command or the spec file will\n+want the OpenSSL development files.\n+\n+### LibreSSL and Boost\n+\n+LibreSSL (and some newer builds of OpenSSL) do not have support for SSLv3. This\n+can cause issues with the Boost package if the Boost package has not been\n+patched accordingly. On those distributions, you will either need to build\n+Bitcoin-Core against OpenSSL or use a patched version of Boost in the build\n+system.\n+\n+As SSLv3 is no longer safe, distributions that have not patched Boost to work\n+with TLS libraries that do not support SSLv3 should have bug reports filed\n+against the Boost package. This bug report has already been filed for RHEL 7 but\n+it may need to be filed for other distributions.\n+\n+A patch for Boost: https://github.com/boostorg/asio/pull/23/files\n+\n+## ZeroMQ\n+\n+At this time, this RPM spec file does not support the ZeroMQ build options. A\n+suitable version of ZeroMQ is not available for the platform this spec file was\n+developed on (CentOS 7).\n+\n+## Legacy Credit\n+\n+This RPM spec file is largely based upon the work of Michael Hampton at\n+[Ringing Liberty](https://www.ringingliberty.com/bitcoin/). He has been\n+packaging Bitcoin for Fedora at least since 2012.\n+\n+Most of the differences between his packaging and this package are stylistic in\n+nature. The major differences:\n+\n+1. He builds from a github tagged release rather than a release tarball. This\n+should not result in different source code.\n+\n+2. He does not build BerkeleyDB but instead uses the BerkeleyDB provided by the\n+Linux distribution. For the distributions he packages for, they currently all\n+use the same version of BerkeleyDB so that difference is *probably* just\n+academic.\n+\n+3. As of his 10.11.2 package he did not allow for building against LibreSSL,\n+specifying a build without the Qt GUI, or specifying which version of the Qt\n+libraries to use.\n+\n+4. I renamed the `bitcoin` package that contains the Qt GUI to `bitcoin-core` as\n+that appears to be how the general population refers to it, in contrast to\n+`bitcoin-xt` or `bitcoin-classic`. I wanted to make sure the general population\n+knows what they are getting when installing the GUI package.\n+\n+As far as minor differences, I generally prefer to assign the file permissions\n+in the `%files` portion of an RPM spec file rather than specifying the\n+permissions of a file during `%install` and other minor things like that that\n+are largely just cosmetic."
      },
      {
        "sha": "555614a06d49ab820fce1e08f723005b26cdcb01",
        "filename": "contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin-0.12.0-libressl.patch?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,24 @@\n+diff -ur bitcoin-0.12.0.orig/src/init.cpp bitcoin-0.12.0/src/init.cpp\n+--- bitcoin-0.12.0.orig/src/init.cpp\t2015-12-31 16:00:00.000000000 -0800\n++++ bitcoin-0.12.0/src/init.cpp\t2016-02-23 06:03:47.133227757 -0800\n+@@ -1075,7 +1075,7 @@\n+     if (fPrintToDebugLog)\n+         OpenDebugLog();\n+ \n+-#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n++#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n+     LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n+ #else\n+     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n+diff -ur bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp bitcoin-0.12.0/src/qt/rpcconsole.cpp\n+--- bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp\t2015-12-31 16:00:00.000000000 -0800\n++++ bitcoin-0.12.0/src/qt/rpcconsole.cpp\t2016-02-23 15:09:42.881126841 -0800\n+@@ -264,7 +264,7 @@\n+ \n+     // set library version labels\n+ \n+-#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n++#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n+     ui->openSSLVersion->setText(SSLeay_version(SSLEAY_VERSION));\n+ #else\n+     ui->openSSLVersion->setText(OpenSSL_version(OPENSSL_VERSION));"
      },
      {
        "sha": "6f5eef6375255381f7c4552715ffdaf329e4a502",
        "filename": "contrib/rpm/bitcoin.fc",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/rpm/bitcoin.fc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/rpm/bitcoin.fc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.fc?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,8 @@\n+/usr/bin/bitcoin-cli\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n+/usr/sbin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n+/usr/lib(64)?/bitcoin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n+\n+/etc/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_conf_t,s0)\n+/var/lib/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_var_lib_t,s0)\n+\n+(/var)?/run/bitcoind(/.*)?   gen_context(system_u:object_r:bitcoin_var_run_t,s0)"
      },
      {
        "sha": "2b096c24dc32396ef071aedecc6907c28bfba855",
        "filename": "contrib/rpm/bitcoin.if",
        "status": "added",
        "additions": 157,
        "deletions": 0,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/rpm/bitcoin.if",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/rpm/bitcoin.if",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.if?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,157 @@\n+\n+## <summary>policy for bitcoin</summary>\n+\n+\n+########################################\n+## <summary>\n+##\tTransition to bitcoin.\n+## </summary>\n+## <param name=\"domain\">\n+## <summary>\n+##\tDomain allowed to transition.\n+## </summary>\n+## </param>\n+#\n+interface(`bitcoin_domtrans',`\n+\tgen_require(`\n+\t\ttype bitcoin_t, bitcoin_exec_t;\n+\t')\n+\n+\tcorecmd_search_bin($1)\n+\tdomtrans_pattern($1, bitcoin_exec_t, bitcoin_t)\n+')\n+\n+\n+########################################\n+## <summary>\n+##\tExecute bitcoin server in the bitcoin domain.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_initrc_domtrans',`\n+\tgen_require(`\n+\t\ttype bitcoin_initrc_exec_t;\n+\t')\n+\n+\tinit_labeled_script_domtrans($1, bitcoin_initrc_exec_t)\n+')\n+\n+\n+########################################\n+## <summary>\n+##\tSearch bitcoin lib directories.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_search_lib',`\n+\tgen_require(`\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tallow $1 bitcoin_var_lib_t:dir search_dir_perms;\n+\tfiles_search_var_lib($1)\n+')\n+\n+########################################\n+## <summary>\n+##\tRead bitcoin lib files.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_read_lib_files',`\n+\tgen_require(`\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tfiles_search_var_lib($1)\n+\tread_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+')\n+\n+########################################\n+## <summary>\n+##\tManage bitcoin lib files.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_manage_lib_files',`\n+\tgen_require(`\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tfiles_search_var_lib($1)\n+\tmanage_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+')\n+\n+########################################\n+## <summary>\n+##\tManage bitcoin lib directories.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_manage_lib_dirs',`\n+\tgen_require(`\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tfiles_search_var_lib($1)\n+\tmanage_dirs_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+')\n+\n+\n+########################################\n+## <summary>\n+##\tAll of the rules required to administrate\n+##\tan bitcoin environment\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+## <param name=\"role\">\n+##\t<summary>\n+##\tRole allowed access.\n+##\t</summary>\n+## </param>\n+## <rolecap/>\n+#\n+interface(`bitcoin_admin',`\n+\tgen_require(`\n+\t\ttype bitcoin_t;\n+\t\ttype bitcoin_initrc_exec_t;\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tallow $1 bitcoin_t:process { ptrace signal_perms };\n+\tps_process_pattern($1, bitcoin_t)\n+\n+\tbitcoin_initrc_domtrans($1)\n+\tdomain_system_change_exemption($1)\n+\trole_transition $2 bitcoin_initrc_exec_t system_r;\n+\tallow $2 system_r;\n+\n+\tfiles_search_var_lib($1)\n+\tadmin_pattern($1, bitcoin_var_lib_t)\n+\n+')\n+"
      },
      {
        "sha": "38ae0381807661da3b53ee2af5493ab7ca1e3cd1",
        "filename": "contrib/rpm/bitcoin.spec",
        "status": "added",
        "additions": 444,
        "deletions": 0,
        "changes": 444,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/rpm/bitcoin.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/rpm/bitcoin.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.spec?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,444 @@\n+%define bdbv 4.8.30\n+%global selinux_variants mls strict targeted\n+\n+%if 0%{?_no_gui:1}\n+%define _buildqt 0\n+%define buildargs --with-gui=no\n+%else\n+%define _buildqt 1\n+%if 0%{?_use_qt4}\n+%define buildargs --with-qrencode --with-gui=qt4\n+%else\n+%define buildargs --with-qrencode --with-gui=qt5\n+%endif\n+%endif\n+\n+Name:\t\tbitcoin\n+Version:\t0.12.0\n+Release:\t2%{?dist}\n+Summary:\tPeer to Peer Cryptographic Currency\n+\n+Group:\t\tApplications/System\n+License:\tMIT\n+URL:\t\thttps://bitcoin.org/\n+Source0:\thttps://bitcoin.org/bin/bitcoin-core-%{version}/bitcoin-%{version}.tar.gz\n+Source1:\thttp://download.oracle.com/berkeley-db/db-%{bdbv}.NC.tar.gz\n+\n+Source10:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/examples/bitcoin.conf\n+\n+#man pages\n+Source20:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoind.1\n+Source21:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoin-cli.1\n+Source22:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoin-qt.1\n+Source23:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoin.conf.5\n+\n+#selinux\n+Source30:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.te\n+# Source31 - what about bitcoin-tx and bench_bitcoin ???\n+Source31:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.fc\n+Source32:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.if\n+\n+Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\n+\n+%if 0%{?_use_libressl:1}\n+BuildRequires:\tlibressl-devel\n+%else\n+BuildRequires:\topenssl-devel\n+%endif\n+BuildRequires:\tboost-devel\n+BuildRequires:\tminiupnpc-devel\n+BuildRequires:\tautoconf automake libtool\n+BuildRequires:\tlibevent-devel\n+\n+\n+Patch0:\t\tbitcoin-0.12.0-libressl.patch\n+\n+\n+%description\n+Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n+operate with no central authority or banks; managing transactions and the\n+issuing of bitcoins is carried out collectively by the network.\n+\n+%if %{_buildqt}\n+%package core\n+Summary:\tPeer to Peer Cryptographic Currency\n+Group:\t\tApplications/System\n+Obsoletes:\t%{name} < %{version}-%{release}\n+Provides:\t%{name} = %{version}-%{release}\n+%if 0%{?_use_qt4}\n+BuildRequires:\tqt-devel\n+%else\n+BuildRequires:\tqt5-qtbase-devel\n+# for /usr/bin/lrelease-qt5\n+BuildRequires:\tqt5-linguist\n+%endif\n+BuildRequires:\tprotobuf-devel\n+BuildRequires:\tqrencode-devel\n+BuildRequires:\t%{_bindir}/desktop-file-validate\n+# for icon generation from SVG\n+BuildRequires:\t%{_bindir}/inkscape\n+BuildRequires:\t%{_bindir}/convert\n+\n+%description core\n+Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n+operate with no central authority or banks; managing transactions and the\n+issuing of bitcoins is carried out collectively by the network.\n+\n+This package contains the Qt based graphical client and node. If you are looking\n+to run a Bitcoin wallet, this is probably the package you want.\n+%endif\n+\n+\n+%package libs\n+Summary:\tBitcoin shared libraries\n+Group:\t\tSystem Environment/Libraries\n+\n+%description libs\n+This package provides the bitcoinconsensus shared libraries. These libraries\n+may be used by third party software to provide consensus verification\n+functionality.\n+\n+Unless you know need this package, you probably do not.\n+\n+%package devel\n+Summary:\tDevelopment files for bitcoin\n+Group:\t\tDevelopment/Libraries\n+Requires:\t%{name}-libs = %{version}-%{release}\n+\n+%description devel\n+This package contains the header files and static library for the\n+bitcoinconsensus shared library. If you are developing or compiling software\n+that wants to link against that library, then you need this package installed.\n+\n+Most people do not need this package installed.\n+\n+%package server\n+Summary:\tThe bitcoin daemon\n+Group:\t\tSystem Environment/Daemons\n+Requires:\tbitcoin-utils = %{version}-%{release}\n+Requires:\tselinux-policy policycoreutils-python\n+Requires(pre):\tshadow-utils\n+Requires(post):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n+Requires(postun):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n+BuildRequires:\tsystemd\n+BuildRequires:\tcheckpolicy\n+BuildRequires:\t%{_datadir}/selinux/devel/Makefile\n+\n+%description server\n+This package provides a stand-alone bitcoin-core daemon. For most users, this\n+package is only needed if they need a full-node without the graphical client.\n+\n+Some third party wallet software will want this package to provide the actual\n+bitcoin-core node they use to connect to the network.\n+\n+If you use the graphical bitcoin-core client then you almost certainly do not\n+need this package.\n+\n+%package utils\n+Summary:\tBitcoin utilities\n+Group:\t\tApplications/System\n+\n+%description utils\n+This package provides several command line utilities for interacting with a\n+bitcoin-core daemon.\n+\n+The bitcoin-cli utility allows you to communicate and control a bitcoin daemon\n+over RPC, the bitcoin-tx utility allows you to create a custom transaction, and\n+the bench_bitcoin utility can be used to perform some benchmarks.\n+\n+This package contains utilities needed by the bitcoin-server package.\n+\n+\n+%prep\n+%setup -q\n+%patch0 -p1 -b .libressl\n+cp -p %{SOURCE10} ./bitcoin.conf.example\n+tar -zxf %{SOURCE1}\n+cp -p db-%{bdbv}.NC/LICENSE ./db-%{bdbv}.NC-LICENSE\n+mkdir db4 SELinux\n+cp -p %{SOURCE30} %{SOURCE31} %{SOURCE32} SELinux/\n+\n+\n+%build\n+CWD=`pwd`\n+cd db-%{bdbv}.NC/build_unix/\n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${CWD}/db4\n+make install\n+cd ../..\n+\n+./autogen.sh\n+%configure LDFLAGS=\"-L${CWD}/db4/lib/\" CPPFLAGS=\"-I${CWD}/db4/include/\" --with-miniupnpc --enable-glibc-back-compat %{buildargs}\n+make %{?_smp_mflags}\n+\n+pushd SELinux\n+for selinuxvariant in %{selinux_variants}; do\n+\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile\n+\tmv bitcoin.pp bitcoin.pp.${selinuxvariant}\n+\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile clean\n+done\n+popd\n+\n+\n+%install\n+make install DESTDIR=%{buildroot}\n+\n+mkdir -p -m755 %{buildroot}%{_sbindir}\n+mv %{buildroot}%{_bindir}/bitcoind %{buildroot}%{_sbindir}/bitcoind\n+\n+# systemd stuff\n+mkdir -p %{buildroot}%{_tmpfilesdir}\n+cat <<EOF > %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n+d /run/bitcoind 0750 bitcoin bitcoin -\n+EOF\n+touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n+\n+mkdir -p %{buildroot}%{_sysconfdir}/sysconfig\n+cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n+# Provide options to the bitcoin daemon here, for example\n+# OPTIONS=\"-testnet -disable-wallet\"\n+\n+OPTIONS=\"\"\n+\n+# System service defaults.\n+# Don't change these unless you know what you're doing.\n+CONFIG_FILE=\"%{_sysconfdir}/bitcoin/bitcoin.conf\"\n+DATA_DIR=\"%{_localstatedir}/lib/bitcoin\"\n+PID_FILE=\"/run/bitcoind/bitcoind.pid\"\n+EOF\n+touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n+\n+mkdir -p %{buildroot}%{_unitdir}\n+cat <<EOF > %{buildroot}%{_unitdir}/bitcoin.service\n+[Unit]\n+Description=Bitcoin daemon\n+After=syslog.target network.target\n+\n+[Service]\n+Type=forking\n+ExecStart=%{_sbindir}/bitcoind -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n+EnvironmentFile=%{_sysconfdir}/sysconfig/bitcoin\n+User=bitcoin\n+Group=bitcoin\n+\n+Restart=on-failure\n+PrivateTmp=true\n+TimeoutStopSec=120\n+TimeoutStartSec=60\n+StartLimitInterval=240\n+StartLimitBurst=5\n+\n+[Install]\n+WantedBy=multi-user.target\n+EOF\n+touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/bitcoin.service\n+#end systemd stuff\n+\n+mkdir %{buildroot}%{_sysconfdir}/bitcoin\n+mkdir -p %{buildroot}%{_localstatedir}/lib/bitcoin\n+\n+#SELinux\n+for selinuxvariant in %{selinux_variants}; do\n+\tinstall -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}\n+\tinstall -p -m 644 SELinux/bitcoin.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/bitcoin.pp\n+done\n+\n+%if %{_buildqt}\n+# qt icons\n+install -D -p share/pixmaps/bitcoin.ico %{buildroot}%{_datadir}/pixmaps/bitcoin.ico\n+install -p share/pixmaps/nsis-header.bmp %{buildroot}%{_datadir}/pixmaps/\n+install -p share/pixmaps/nsis-wizard.bmp %{buildroot}%{_datadir}/pixmaps/\n+install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/bitcoin.svg\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin16.png -w16 -h16\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin32.png -w32 -h32\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin64.png -w64 -h64\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin128.png -w128 -h128\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin256.png -w256 -h256\n+%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin16.xpm\n+%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin32.xpm\n+%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin64.xpm\n+%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin128.xpm\n+%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin256.xpm\n+touch %{buildroot}%{_datadir}/pixmaps/*.png -r %{SOURCE100}\n+touch %{buildroot}%{_datadir}/pixmaps/*.xpm -r %{SOURCE100}\n+\n+# Desktop File - change the touch timestamp if modifying\n+mkdir -p %{buildroot}%{_datadir}/applications\n+cat <<EOF > %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+[Desktop Entry]\n+Encoding=UTF-8\n+Name=Bitcoin\n+Comment=Bitcoin P2P Cryptocurrency\n+Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=bitcoin-qt %u\n+Terminal=false\n+Type=Application\n+Icon=bitcoin128\n+MimeType=x-scheme-handler/bitcoin;\n+Categories=Office;Finance;\n+EOF\n+# change touch date when modifying desktop\n+touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+\n+# KDE protocol - change the touch timestamp if modifying\n+mkdir -p %{buildroot}%{_datadir}/kde4/services\n+cat <<EOF > %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n+[Protocol]\n+exec=bitcoin-qt '%u'\n+protocol=bitcoin\n+input=none\n+output=none\n+helper=true\n+listing=\n+reading=false\n+writing=false\n+makedir=false\n+deleting=false\n+EOF\n+# change touch date when modifying protocol\n+touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n+%endif\n+\n+# man pages\n+install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/bitcoind.1\n+install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/bitcoin-cli.1\n+%if %{_buildqt}\n+install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/bitcoin-qt.1\n+%endif\n+install -D -p %{SOURCE23} %{buildroot}%{_mandir}/man5/bitcoin.conf.5\n+\n+# nuke these, we do extensive testing of binaries in %%check before packaging\n+rm -f %{buildroot}%{_bindir}/test_*\n+\n+%check\n+make check\n+pushd src\n+srcdir=. test/bitcoin-util-test.py\n+popd\n+qa/pull-tester/rpc-tests.py -extended\n+\n+%post libs -p /sbin/ldconfig\n+\n+%postun libs -p /sbin/ldconfig\n+\n+%pre server\n+getent group bitcoin >/dev/null || groupadd -r bitcoin\n+getent passwd bitcoin >/dev/null ||\n+\tuseradd -r -g bitcoin -d /var/lib/bitcoin -s /sbin/nologin \\\n+\t-c \"Bitcoin wallet server\" bitcoin\n+exit 0\n+\n+%post server\n+%systemd_post bitcoin.service\n+# SELinux\n+if [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n+for selinuxvariant in %{selinux_variants}; do\n+\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/bitcoin.pp &> /dev/null || :\n+done\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8332\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8333\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18332\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18333\n+%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n+%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin || :\n+fi\n+\n+%posttrans server\n+%{_bindir}/systemd-tmpfiles --create\n+\n+%preun server\n+%systemd_preun bitcoin.service\n+\n+%postun server\n+%systemd_postun bitcoin.service\n+# SELinux\n+if [ $1 -eq 0 ]; then\n+\tif [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n+\t%{_sbindir}/semanage port -d -p tcp 8332\n+\t%{_sbindir}/semanage port -d -p tcp 8333\n+\t%{_sbindir}/semanage port -d -p tcp 18332\n+\t%{_sbindir}/semanage port -d -p tcp 18333\n+\tfor selinuxvariant in %{selinux_variants}; do\n+\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r bitcoin &> /dev/null || :\n+\tdone\n+\t%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n+\t[ -d %{_localstatedir}/lib/bitcoin ] && \\\n+\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin &> /dev/null || :\n+\tfi\n+fi\n+\n+%clean\n+rm -rf %{buildroot}\n+\n+%if %{_buildqt}\n+%files core\n+%defattr(-,root,root,-)\n+%license COPYING db-%{bdbv}.NC-LICENSE\n+%doc COPYING bitcoin.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n+%attr(0755,root,root) %{_bindir}/bitcoin-qt\n+%attr(0644,root,root) %{_datadir}/applications/bitcoin-core.desktop\n+%attr(0644,root,root) %{_datadir}/kde4/services/bitcoin-core.protocol\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.ico\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.bmp\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.svg\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.png\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.xpm\n+%attr(0644,root,root) %{_mandir}/man1/bitcoin-qt.1*\n+%endif\n+\n+%files libs\n+%defattr(-,root,root,-)\n+%license COPYING\n+%doc COPYING doc/README.md doc/shared-libraries.md\n+%{_libdir}/lib*.so.*\n+\n+%files devel\n+%defattr(-,root,root,-)\n+%license COPYING\n+%doc COPYING doc/README.md doc/developer-notes.md doc/shared-libraries.md\n+%attr(0644,root,root) %{_includedir}/*.h\n+%{_libdir}/*.so\n+%{_libdir}/*.a\n+%{_libdir}/*.la\n+%attr(0644,root,root) %{_libdir}/pkgconfig/*.pc\n+\n+%files server\n+%defattr(-,root,root,-)\n+%license COPYING db-%{bdbv}.NC-LICENSE\n+%doc COPYING bitcoin.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n+%attr(0755,root,root) %{_sbindir}/bitcoind\n+%attr(0644,root,root) %{_tmpfilesdir}/bitcoin.conf\n+%attr(0644,root,root) %{_unitdir}/bitcoin.service\n+%dir %attr(0750,bitcoin,bitcoin) %{_sysconfdir}/bitcoin\n+%dir %attr(0750,bitcoin,bitcoin) %{_localstatedir}/lib/bitcoin\n+%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/bitcoin\n+%attr(0644,root,root) %{_datadir}/selinux/*/*.pp\n+%attr(0644,root,root) %{_mandir}/man1/bitcoind.1*\n+%attr(0644,root,root) %{_mandir}/man5/bitcoin.conf.5*\n+\n+%files utils\n+%defattr(-,root,root,-)\n+%license COPYING\n+%doc COPYING bitcoin.conf.example doc/README.md\n+%attr(0755,root,root) %{_bindir}/bitcoin-cli\n+%attr(0755,root,root) %{_bindir}/bitcoin-tx\n+%attr(0755,root,root) %{_bindir}/bench_bitcoin\n+%attr(0644,root,root) %{_mandir}/man1/bitcoin-cli.1*\n+%attr(0644,root,root) %{_mandir}/man5/bitcoin.conf.5*\n+\n+\n+\n+%changelog\n+* Fri Feb 26 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-2\n+- Rename Qt package from bitcoin to bitcoin-core\n+- Make building of the Qt package optional\n+- When building the Qt package, default to Qt5 but allow building\n+-  against Qt4\n+- Only run SELinux stuff in post scripts if it is not set to disabled\n+\n+* Wed Feb 24 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-1\n+- Initial spec file for 0.12.0 release\n+\n+# This spec file is written from scratch but a lot of the packaging decisions are directly\n+# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/bitcoin/"
      },
      {
        "sha": "d6231c591a24312b3c073f7658533587279aeba7",
        "filename": "contrib/rpm/bitcoin.te",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/rpm/bitcoin.te",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/rpm/bitcoin.te",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.te?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,81 @@\n+policy_module(bitcoin, 1.100.1)\n+\n+########################################\n+#\n+# Declarations\n+#\n+\n+type bitcoin_t;\n+type bitcoin_exec_t;\n+init_daemon_domain(bitcoin_t, bitcoin_exec_t)\n+\n+permissive bitcoin_t;\n+\n+type bitcoin_initrc_exec_t;\n+init_script_file(bitcoin_initrc_exec_t)\n+\n+type bitcoin_conf_t;\n+files_type(bitcoin_conf_t)\n+\n+type bitcoin_var_lib_t;\n+files_type(bitcoin_var_lib_t)\n+\n+type bitcoin_var_run_t;\n+files_type(bitcoin_var_run_t)\n+\n+type bitcoin_port_t;\n+corenet_port(bitcoin_port_t)\n+\n+########################################\n+#\n+# bitcoin local policy\n+#\n+allow bitcoin_t self:process { fork };\n+\n+allow bitcoin_t self:fifo_file rw_fifo_file_perms;\n+allow bitcoin_t self:unix_stream_socket create_stream_socket_perms;\n+\n+manage_dirs_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n+manage_files_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n+\n+manage_dirs_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+manage_files_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+files_var_lib_filetrans(bitcoin_t, bitcoin_var_lib_t, { dir file })\n+\n+manage_dirs_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n+manage_files_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n+\n+sysnet_dns_name_resolve(bitcoin_t)\n+corenet_all_recvfrom_unlabeled(bitcoin_t)\n+\n+allow bitcoin_t self:tcp_socket create_stream_socket_perms;\n+corenet_tcp_sendrecv_generic_if(bitcoin_t)\n+corenet_tcp_sendrecv_generic_node(bitcoin_t)\n+corenet_tcp_sendrecv_all_ports(bitcoin_t)\n+corenet_tcp_bind_generic_node(bitcoin_t)\n+\n+gen_require(`\n+    type bitcoin_port_t;\n+')\n+allow bitcoin_t bitcoin_port_t:tcp_socket name_bind;\n+\n+gen_require(`\n+    type bitcoin_port_t;\n+')\n+allow bitcoin_t bitcoin_port_t:tcp_socket name_connect;\n+\n+domain_use_interactive_fds(bitcoin_t)\n+\n+files_read_etc_files(bitcoin_t)\n+\n+miscfiles_read_localization(bitcoin_t)\n+\n+sysnet_dns_name_resolve(bitcoin_t)\n+\n+allow bitcoin_t bitcoin_exec_t:file execute_no_trans;\n+allow bitcoin_t self:process setsched;\n+corecmd_exec_ls(bitcoin_t)\n+corenet_tcp_connect_http_port(bitcoin_t)\n+dev_read_urand(bitcoin_t)\n+fs_getattr_xattr_fs(bitcoin_t)\n+kernel_read_system_state(bitcoin_t)"
      },
      {
        "sha": "c595f83eb95b20eea68f5f54a2ec0a715f6d75de",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,11 +1,11 @@\n ### Seeds ###\n \n-Utility to generate the pnSeed[] array that is compiled into the client\n-(see [src/net.cpp](/src/net.cpp)).\n+Utility to generate the seeds.txt list that is compiled into the client\n+(see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n \n-The 600 seeds compiled into the 0.8 release were created from sipa's DNS seed data, like this:\n+The seeds compiled into the release are created from sipa's DNS seed data, like this:\n \n-\tcurl -s http://bitcoin.sipa.be/seeds.txt | head -1000 | makeseeds.py\n+    curl -s http://bitcoin.sipa.be/seeds.txt > seeds_main.txt\n+    python makeseeds.py < seeds_main.txt > nodes_main.txt\n+    python generate-seeds.py . > ../../src/chainparamsseeds.h\n \n-The input to makeseeds.py is assumed to be approximately sorted from most-reliable to least-reliable,\n-with IP:port first on each line (lines that don't match IPv4:port are ignored)."
      },
      {
        "sha": "a3d035218789b8f74871a5c7885d4aa7a55c0b79",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "renamed",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/python\n-# Copyright (c) 2014 Wladmir J. van der Laan\n+# Copyright (c) 2014 Wladimir J. van der Laan\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -77,6 +77,9 @@ def parse_spec(s, defaultport):\n     if match: # ipv6\n         host = match.group(1)\n         port = match.group(2)\n+    elif s.count(':') > 1: # ipv6, no port\n+        host = s\n+        port = ''\n     else:\n         (host,_,port) = s.partition(':')\n \n@@ -118,7 +121,7 @@ def main():\n     g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n     g.write('/**\\n')\n     g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n-    g.write(' * AUTOGENERATED by share/seeds/generate-seeds.py\\n')\n+    g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n     g.write(' *\\n')\n     g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n     g.write(' * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\\n')",
        "previous_filename": "share/seeds/generate-seeds.py"
      },
      {
        "sha": "4072405ef509a80176bf7314b46eca525cffe1da",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 152,
        "deletions": 15,
        "changes": 167,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,32 +1,169 @@\n #!/usr/bin/env python\n #\n-# Generate pnSeed[] from Pieter's DNS seeder\n+# Generate seeds.txt from Pieter's DNS seeder\n #\n \n-NSEEDS=600\n+NSEEDS=512\n+\n+MAX_SEEDS_PER_ASN=2\n+\n+MIN_BLOCKS = 337600\n+\n+# These are hosts that have been observed to be behaving strangely (e.g.\n+# aggressively connecting to every node).\n+SUSPICIOUS_HOSTS = set([\n+    \"130.211.129.106\", \"178.63.107.226\",\n+    \"83.81.130.26\", \"88.198.17.7\", \"148.251.238.178\", \"176.9.46.6\",\n+    \"54.173.72.127\", \"54.174.10.182\", \"54.183.64.54\", \"54.194.231.211\",\n+    \"54.66.214.167\", \"54.66.220.137\", \"54.67.33.14\", \"54.77.251.214\",\n+    \"54.94.195.96\", \"54.94.200.247\"\n+])\n \n import re\n import sys\n-from subprocess import check_output\n+import dns.resolver\n+import collections\n \n-def main():\n-    lines = sys.stdin.readlines()\n+PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n+PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n+PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n+PATTERN_AGENT = re.compile(r\"^(\\/Satoshi:0\\.8\\.6\\/|\\/Satoshi:0\\.9\\.(2|3|4|5)\\/|\\/Satoshi:0\\.10\\.\\d{1,2}\\/|\\/Satoshi:0\\.11\\.\\d{1,2}\\/)$\")\n \n-    ips = []\n-    pattern = re.compile(r\"^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3}):8333\")\n-    for line in lines:\n-        m = pattern.match(line)\n+def parseline(line):\n+    sline = line.split()\n+    if len(sline) < 11:\n+       return None\n+    m = PATTERN_IPV4.match(sline[0])\n+    sortkey = None\n+    ip = None\n+    if m is None:\n+        m = PATTERN_IPV6.match(sline[0])\n         if m is None:\n-            continue\n+            m = PATTERN_ONION.match(sline[0])\n+            if m is None:\n+                return None\n+            else:\n+                net = 'onion'\n+                ipstr = sortkey = m.group(1)\n+                port = int(m.group(2))\n+        else:\n+            net = 'ipv6'\n+            if m.group(1) in ['::']: # Not interested in localhost\n+                return None\n+            ipstr = m.group(1)\n+            sortkey = ipstr # XXX parse IPv6 into number, could use name_to_ipv6 from generate-seeds\n+            port = int(m.group(2))\n+    else:\n+        # Do IPv4 sanity check\n         ip = 0\n         for i in range(0,4):\n-            ip = ip + (int(m.group(i+1)) << (8*(i)))\n+            if int(m.group(i+2)) < 0 or int(m.group(i+2)) > 255:\n+                return None\n+            ip = ip + (int(m.group(i+2)) << (8*(3-i)))\n         if ip == 0:\n-            continue\n-        ips.append(ip)\n+            return None\n+        net = 'ipv4'\n+        sortkey = ip\n+        ipstr = m.group(1)\n+        port = int(m.group(6))\n+    # Skip bad results.\n+    if sline[1] == 0:\n+        return None\n+    # Extract uptime %.\n+    uptime30 = float(sline[7][:-1])\n+    # Extract Unix timestamp of last success.\n+    lastsuccess = int(sline[2])\n+    # Extract protocol version.\n+    version = int(sline[10])\n+    # Extract user agent.\n+    agent = sline[11][1:-1]\n+    # Extract service flags.\n+    service = int(sline[9], 16)\n+    # Extract blocks.\n+    blocks = int(sline[8])\n+    # Construct result.\n+    return {\n+        'net': net,\n+        'ip': ipstr,\n+        'port': port,\n+        'ipnum': ip,\n+        'uptime': uptime30,\n+        'lastsuccess': lastsuccess,\n+        'version': version,\n+        'agent': agent,\n+        'service': service,\n+        'blocks': blocks,\n+        'sortkey': sortkey,\n+    }\n+\n+def filtermultiport(ips):\n+    '''Filter out hosts with more nodes per IP'''\n+    hist = collections.defaultdict(list)\n+    for ip in ips:\n+        hist[ip['sortkey']].append(ip)\n+    return [value[0] for (key,value) in hist.items() if len(value)==1]\n+\n+# Based on Greg Maxwell's seed_filter.py\n+def filterbyasn(ips, max_per_asn, max_total):\n+    # Sift out ips by type\n+    ips_ipv4 = [ip for ip in ips if ip['net'] == 'ipv4']\n+    ips_ipv6 = [ip for ip in ips if ip['net'] == 'ipv6']\n+    ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n+\n+    # Filter IPv4 by ASN\n+    result = []\n+    asn_count = {}\n+    for ip in ips_ipv4:\n+        if len(result) == max_total:\n+            break\n+        try:\n+            asn = int([x.to_text() for x in dns.resolver.query('.'.join(reversed(ip['ip'].split('.'))) + '.origin.asn.cymru.com', 'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n+            if asn not in asn_count:\n+                asn_count[asn] = 0\n+            if asn_count[asn] == max_per_asn:\n+                continue\n+            asn_count[asn] += 1\n+            result.append(ip)\n+        except:\n+            sys.stderr.write('ERR: Could not resolve ASN for \"' + ip['ip'] + '\"\\n')\n+\n+    # TODO: filter IPv6 by ASN\n+\n+    # Add back non-IPv4\n+    result.extend(ips_ipv6)\n+    result.extend(ips_onion)\n+    return result\n+\n+def main():\n+    lines = sys.stdin.readlines()\n+    ips = [parseline(line) for line in lines]\n+\n+    # Skip entries with valid address.\n+    ips = [ip for ip in ips if ip is not None]\n+    # Skip entries from suspicious hosts.\n+    ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n+    # Enforce minimal number of blocks.\n+    ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n+    # Require service bit 1.\n+    ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n+    # Require at least 50% 30-day uptime.\n+    ips = [ip for ip in ips if ip['uptime'] > 50]\n+    # Require a known and recent user agent.\n+    ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n+    # Sort by availability (and use last success as tie breaker)\n+    ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n+    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n+    ips = filtermultiport(ips)\n+    # Look up ASNs and limit results, both per ASN and globally.\n+    ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n+    # Sort the results by IP address (for deterministic output).\n+    ips.sort(key=lambda x: (x['net'], x['sortkey']))\n \n-    for row in range(0, min(NSEEDS,len(ips)), 8):\n-        print \"    \" + \", \".join([ \"0x%08x\"%i for i in ips[row:row+8] ]) + \",\"\n+    for ip in ips:\n+        if ip['net'] == 'ipv6':\n+            print '[%s]:%i' % (ip['ip'], ip['port'])\n+        else:\n+            print '%s:%i' % (ip['ip'], ip['port'])\n \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "f1854b27f9a5983ca77e3bec8005aede562cedb8",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "added",
        "additions": 937,
        "deletions": 0,
        "changes": 937,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,937 @@\n+5.2.145.201:8333\n+5.22.142.214:8333\n+5.53.172.197:8333\n+5.189.161.164:8333\n+5.230.140.166:8333\n+5.231.3.130:8333\n+5.255.80.103:8333\n+14.202.230.49:8333\n+18.85.11.130:8333\n+23.91.97.25:8333\n+23.94.100.122:8333\n+23.95.99.132:8333\n+24.115.8.206:8333\n+24.127.128.191:8333\n+24.154.178.25:8333\n+24.207.103.43:8333\n+24.207.104.105:8333\n+24.210.230.150:8333\n+24.224.18.84:8333\n+24.246.168.106:8333\n+27.254.64.47:8333\n+31.6.71.123:8333\n+31.6.71.124:8333\n+31.14.134.13:8333\n+31.30.36.220:8333\n+31.164.6.104:8333\n+31.170.106.203:8333\n+31.185.134.201:8333\n+31.204.128.99:8333\n+31.204.128.219:8333\n+37.1.219.88:8333\n+37.97.132.109:8333\n+37.120.160.55:8333\n+37.120.169.123:8333\n+37.139.32.46:8333\n+37.221.163.218:8333\n+38.130.192.72:8333\n+41.75.96.80:8333\n+45.3.0.49:8333\n+45.33.72.185:8333\n+45.33.96.129:8333\n+45.56.4.63:8333\n+45.79.0.127:8333\n+45.79.80.102:8333\n+45.79.97.30:8333\n+45.79.132.219:8333\n+46.21.97.135:8333\n+46.28.205.67:8333\n+46.28.206.188:8333\n+46.29.20.209:8333\n+46.50.234.179:8333\n+46.101.160.168:8333\n+46.166.161.35:8333\n+46.166.161.103:8333\n+46.182.132.100:8333\n+46.218.227.92:8333\n+46.226.109.20:8333\n+46.227.66.132:8333\n+46.227.66.138:8333\n+46.229.165.154:8333\n+46.229.165.155:8333\n+46.229.238.187:8333\n+46.234.104.48:8333\n+46.239.107.74:8333\n+46.244.0.138:8333\n+46.254.72.195:8333\n+50.5.13.44:8333\n+50.7.37.114:8333\n+50.30.37.103:8333\n+50.39.105.60:8333\n+50.106.40.231:8333\n+52.29.0.37:8333\n+52.76.192.246:8333\n+54.152.192.179:8333\n+54.169.64.174:8333\n+54.175.160.22:8333\n+54.199.128.0:8333\n+58.96.171.129:8333\n+58.161.238.57:8333\n+60.251.195.221:8333\n+61.35.225.19:8333\n+62.43.130.178:8333\n+62.65.39.12:8333\n+62.107.200.30:8333\n+62.133.194.2:8333\n+62.181.238.186:8333\n+62.183.22.50:8333\n+62.210.85.120:8333\n+62.210.162.89:8333\n+62.238.34.125:8333\n+64.25.171.73:8333\n+64.27.166.30:8333\n+64.53.137.101:8333\n+64.71.72.44:8333\n+64.83.225.146:8333\n+64.121.3.163:8333\n+64.203.102.86:8333\n+65.94.131.59:8333\n+65.188.136.233:8333\n+66.11.162.218:8333\n+66.23.228.133:8333\n+66.90.137.89:8333\n+66.114.33.49:8333\n+66.150.105.77:8333\n+66.172.10.4:8333\n+66.194.38.250:8333\n+66.194.38.253:8333\n+66.194.38.254:8333\n+66.231.97.172:8333\n+66.240.237.155:8333\n+67.159.13.34:8333\n+67.205.74.206:8333\n+67.221.193.55:8333\n+67.227.72.17:8333\n+68.65.120.53:8333\n+68.65.205.226:9000\n+68.144.4.34:8333\n+69.39.49.199:8333\n+69.50.171.205:8333\n+69.65.41.21:8333\n+69.113.98.61:8333\n+69.119.97.39:8333\n+69.146.70.124:8333\n+69.193.71.2:8333\n+70.46.10.237:8333\n+70.80.200.187:8333\n+70.185.97.117:8333\n+71.254.160.25:8333\n+72.28.203.5:8333\n+72.52.130.110:8333\n+72.83.194.122:8333\n+72.128.32.167:8333\n+72.179.136.80:8333\n+72.235.38.70:8333\n+74.50.44.193:8333\n+74.72.60.83:8333\n+74.80.234.116:8333\n+74.207.233.193:8333\n+75.112.233.128:8333\n+75.118.166.197:8333\n+75.140.0.241:8333\n+75.159.240.66:8333\n+75.174.5.26:8333\n+76.72.160.252:8333\n+76.72.160.254:8333\n+76.74.170.112:8333\n+76.79.201.54:8333\n+76.175.166.164:8333\n+76.179.105.27:8333\n+77.68.37.200:8333\n+77.234.49.196:8333\n+77.247.229.93:8333\n+78.24.72.78:8333\n+78.47.32.147:8333\n+78.84.100.95:8333\n+78.121.69.23:8333\n+78.129.167.5:8333\n+78.193.96.155:8333\n+79.19.37.179:8333\n+79.132.230.144:8333\n+79.133.43.63:8333\n+79.134.201.66:8333\n+79.169.35.235:8333\n+80.57.227.14:8333\n+80.64.65.87:8333\n+80.86.92.70:8333\n+80.100.203.151:8333\n+80.101.32.121:8333\n+80.161.178.73:8333\n+80.240.129.170:8333\n+81.7.11.50:8333\n+81.7.11.55:8333\n+81.17.17.40:9333\n+81.30.39.83:8333\n+81.90.36.7:9444\n+81.136.224.77:8333\n+81.162.231.211:8333\n+81.184.0.143:8333\n+81.198.128.86:8333\n+82.11.33.229:8333\n+82.79.128.134:8333\n+82.118.233.111:8333\n+82.135.139.30:8333\n+82.199.102.10:8333\n+82.221.106.17:8333\n+82.221.108.21:8333\n+82.221.108.27:8333\n+83.137.41.3:8333\n+83.142.197.168:8333\n+83.143.130.19:8333\n+83.150.9.196:8333\n+83.183.17.191:8333\n+83.227.173.83:8333\n+83.230.5.15:8333\n+83.233.105.151:443\n+83.246.75.8:8333\n+83.250.133.158:8333\n+83.255.66.118:8334\n+84.24.69.59:8333\n+84.42.193.6:8333\n+84.45.98.87:8333\n+84.54.128.11:8333\n+84.212.200.24:8333\n+84.215.198.109:8333\n+84.230.4.177:8333\n+85.95.228.83:8333\n+85.95.228.123:8333\n+85.114.128.134:8333\n+85.214.66.168:8333\n+85.214.147.162:8333\n+85.243.168.4:8333\n+86.1.0.18:8333\n+87.79.77.106:8333\n+87.91.156.110:8333\n+87.236.196.222:8333\n+88.85.75.152:8333\n+88.87.1.230:8333\n+88.87.92.102:8333\n+88.89.69.202:8333\n+88.97.72.229:8333\n+88.164.117.99:8333\n+88.198.32.131:8333\n+88.202.230.87:8333\n+88.214.193.154:8343\n+88.214.194.226:8343\n+89.10.155.88:8333\n+89.46.101.44:8333\n+89.163.224.212:8333\n+89.174.248.20:8333\n+89.202.231.198:8333\n+89.212.75.6:8333\n+90.149.38.172:8333\n+90.169.106.139:8333\n+91.64.101.150:8333\n+91.65.196.179:8333\n+91.121.80.17:8333\n+91.126.77.77:8333\n+91.145.76.156:8333\n+91.152.150.35:8333\n+91.192.137.17:8333\n+91.196.170.110:8333\n+91.197.44.133:8333\n+91.207.68.144:8333\n+91.210.105.28:8333\n+91.211.102.101:8333\n+91.211.106.34:8333\n+91.214.200.205:8333\n+91.220.43.146:8333\n+91.222.71.89:8333\n+91.224.140.242:8333\n+91.229.76.14:8333\n+92.27.7.209:8333\n+92.51.167.88:8333\n+92.247.229.163:8333\n+93.84.114.106:8333\n+93.113.36.172:8333\n+93.188.224.253:8333\n+94.75.239.69:8333\n+94.190.227.112:8333\n+94.214.2.74:8333\n+94.224.162.65:8333\n+94.236.198.253:8333\n+94.242.229.158:8333\n+95.84.138.99:8333\n+95.95.168.87:8333\n+95.110.234.93:8333\n+95.130.9.200:8333\n+95.165.168.168:8333\n+95.170.235.254:8333\n+95.211.130.154:8333\n+96.46.68.104:8333\n+96.127.202.148:8333\n+97.76.171.35:8333\n+98.160.160.67:8333\n+99.126.197.187:8333\n+99.198.173.1:8333\n+101.100.174.138:8333\n+101.164.201.208:8333\n+103.224.165.48:8333\n+104.128.225.223:8333\n+104.128.228.252:8333\n+104.131.192.94:8333\n+104.155.45.201:8334\n+104.194.28.195:8663\n+104.211.1.27:8333\n+104.221.38.177:8333\n+104.236.9.79:8333\n+104.236.129.178:8333\n+104.236.186.249:8333\n+104.236.194.15:8333\n+104.238.128.214:8333\n+104.238.130.182:8333\n+106.38.234.84:8333\n+106.185.36.204:8333\n+106.185.38.67:8333\n+107.6.4.145:8333\n+107.150.2.6:8333\n+107.150.40.234:8333\n+107.170.13.184:8333\n+107.181.250.216:8333\n+107.191.101.111:8333\n+107.191.106.115:8333\n+108.59.12.163:8333\n+108.161.129.247:8333\n+109.193.160.140:8333\n+109.197.13.54:8333\n+109.230.7.248:8333\n+109.234.106.191:8333\n+109.236.137.80:8333\n+109.251.161.121:8333\n+112.65.231.226:8333\n+115.70.166.57:8333\n+115.159.42.80:8333\n+117.18.73.34:8333\n+118.67.201.40:8333\n+118.100.86.246:8333\n+118.110.104.152:8333\n+119.224.64.141:8333\n+120.55.193.136:8333\n+122.106.169.178:8333\n+123.203.174.15:8333\n+123.255.232.94:8333\n+124.148.165.165:8333\n+124.232.141.31:8333\n+128.30.92.69:8333\n+128.39.141.182:8333\n+128.84.167.20:8333\n+128.111.73.10:8333\n+128.127.38.195:8333\n+128.140.224.162:8333\n+128.199.101.104:8333\n+128.233.224.35:8333\n+128.253.3.193:20020\n+130.180.228.138:8333\n+130.185.144.213:8333\n+130.255.73.207:8333\n+133.218.233.11:8333\n+134.249.128.23:8333\n+136.159.234.234:8333\n+137.116.160.176:8333\n+139.162.2.145:8333\n+139.162.23.117:8333\n+141.134.69.253:8333\n+141.255.162.215:8333\n+144.122.163.187:8333\n+145.131.3.54:8333\n+145.255.4.94:8333\n+146.0.32.101:8337\n+147.83.72.91:8333\n+148.103.28.68:8333\n+149.5.32.102:8333\n+149.210.164.195:8333\n+150.101.163.241:8333\n+151.236.11.189:8333\n+152.3.136.56:8333\n+154.20.208.25:8333\n+158.181.104.149:8333\n+159.253.96.226:8333\n+160.36.130.180:8333\n+162.209.1.233:8333\n+162.209.4.125:8333\n+162.209.106.123:8333\n+162.210.198.184:8333\n+162.248.99.164:53011\n+162.248.102.117:8333\n+162.251.108.53:8333\n+163.44.2.48:8333\n+163.158.36.17:8333\n+166.230.71.67:8333\n+167.160.36.62:8333\n+167.160.169.92:8333\n+168.93.129.220:8333\n+169.55.99.84:8333\n+169.228.66.43:8333\n+172.9.169.242:8333\n+173.32.11.194:8333\n+173.230.228.136:8333\n+173.246.107.34:8333\n+173.254.235.34:8333\n+174.0.128.222:8333\n+174.25.130.148:8333\n+174.50.64.101:8333\n+175.140.232.141:8333\n+176.36.37.62:8333\n+176.46.9.96:8333\n+176.124.110.27:8333\n+177.39.16.102:8333\n+178.17.173.2:8333\n+178.62.5.248:8333\n+178.62.70.16:8333\n+178.62.203.185:8333\n+178.79.160.118:8333\n+178.169.206.244:8333\n+178.193.234.62:8333\n+178.199.96.108:8333\n+178.254.18.96:8333\n+178.254.34.161:8333\n+178.255.41.123:8333\n+180.210.34.58:9801\n+182.92.226.212:8333\n+182.171.246.142:8333\n+184.23.8.9:8333\n+184.58.162.35:8333\n+184.154.9.170:8333\n+185.8.238.165:8333\n+185.24.97.11:8333\n+185.31.137.139:8333\n+185.38.44.64:8333\n+185.53.128.180:8333\n+185.53.129.244:8333\n+185.77.129.119:8333\n+185.77.129.156:8333\n+185.82.203.92:8333\n+188.20.97.18:8333\n+188.126.8.14:8333\n+188.138.33.239:8333\n+188.155.136.70:8333\n+188.166.229.112:8333\n+188.182.108.129:8333\n+188.226.225.174:8010\n+188.242.171.8:8333\n+188.243.4.139:8333\n+190.10.9.234:8333\n+190.10.10.147:8333\n+190.81.160.184:8333\n+190.85.201.37:8333\n+192.34.227.230:8333\n+192.77.189.200:8333\n+192.124.224.7:8333\n+192.146.137.1:8333\n+192.203.228.71:8333\n+192.206.202.20:8333\n+193.0.109.3:8333\n+193.41.229.130:8333\n+193.41.229.156:8333\n+193.49.43.219:8333\n+193.147.71.120:8333\n+193.179.65.233:8333\n+193.183.99.46:8333\n+193.192.37.135:8333\n+193.234.224.195:8333\n+194.58.108.213:8333\n+194.187.96.2:8333\n+194.255.31.59:8333\n+195.36.6.101:8333\n+195.58.238.243:8333\n+195.197.175.190:8333\n+195.239.1.66:8333\n+198.48.196.230:8333\n+198.50.192.160:8333\n+198.57.210.27:8333\n+198.84.195.179:8333\n+198.167.140.8:8333\n+198.204.224.106:8333\n+199.127.226.245:8333\n+199.201.110.8:8333\n+199.233.234.90:8333\n+200.116.98.185:8333\n+202.60.70.18:8333\n+203.151.140.14:8333\n+204.112.203.52:8333\n+205.200.247.149:8333\n+207.226.141.253:8333\n+207.255.42.202:8333\n+208.53.164.19:8333\n+208.66.68.127:8333\n+208.66.68.130:8333\n+208.71.171.232:8341\n+208.76.200.200:8333\n+208.82.98.189:8333\n+208.85.193.31:8333\n+208.111.48.41:8333\n+208.111.48.45:8333\n+209.34.232.72:8333\n+209.81.9.223:8333\n+209.90.224.2:8333\n+209.90.224.4:8333\n+209.126.98.174:8333\n+209.136.72.69:8333\n+209.195.4.74:8333\n+209.197.13.62:8333\n+211.72.227.8:8333\n+212.51.144.42:8333\n+212.71.233.127:8333\n+212.126.14.122:8333\n+212.159.44.50:8333\n+213.5.36.58:8333\n+213.57.33.10:8333\n+213.66.205.194:8333\n+213.136.73.125:8333\n+213.155.3.216:8333\n+213.155.7.24:8333\n+213.167.17.6:8333\n+213.223.138.13:8333\n+216.15.78.182:8333\n+216.38.129.164:8333\n+216.48.168.8:8333\n+216.169.141.169:8333\n+216.245.206.181:8333\n+216.249.204.161:8333\n+216.250.138.230:8333\n+217.11.225.189:8333\n+217.12.34.158:8333\n+217.12.202.33:8333\n+217.20.171.43:8333\n+217.23.1.126:8333\n+217.23.11.138:8333\n+217.111.66.79:8333\n+217.155.202.191:8333\n+217.158.9.102:8333\n+217.172.32.18:20993\n+220.245.196.37:8333\n+[2001:1291:2bf:1::100]:8333\n+[2001:1620:f00:282::2]:8333\n+[2001:1620:f00:8282::1]:8333\n+[2001:19f0:5000:8de8:5400:ff:fe12:55e4]:8333\n+[2001:19f0:6c00:9103:5400:ff:fe10:a8d3]:8333\n+[2001:1b60:3:172:142b:6dff:fe7a:117]:8333\n+[2001:410:a000:4050:8463:90b0:fffb:4e58]:8333\n+[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n+[2001:41d0:1008:761::17c]:8333\n+[2001:41d0:1:45d8::1]:8333\n+[2001:41d0:1:6cd3::]:8333\n+[2001:41d0:1:8b26::1]:8333\n+[2001:41d0:1:afda::]:8200\n+[2001:41d0:1:b26b::1]:8333\n+[2001:41d0:1:c139::1]:8333\n+[2001:41d0:1:c8d7::1]:8333\n+[2001:41d0:1:f59f::33]:8333\n+[2001:41d0:1:f7cc::1]:8333\n+[2001:41d0:2:1021::1]:8333\n+[2001:41d0:2:37c3::]:8200\n+[2001:41d0:2:4797:2323:2323:2323:2323]:8333\n+[2001:41d0:2:53df::]:8333\n+[2001:41d0:2:9c94::1]:8333\n+[2001:41d0:2:9d3e::1]:8333\n+[2001:41d0:2:a24f::]:8333\n+[2001:41d0:2:a35a::]:8333\n+[2001:41d0:2:b2b8::]:8333\n+[2001:41d0:2:c1d9::]:8333\n+[2001:41d0:2:c6e::]:8333\n+[2001:41d0:2:c9bf::]:8333\n+[2001:41d0:2:f1a5::]:8333\n+[2001:41d0:52:a00::105f]:8333\n+[2001:41d0:52:cff::6f5]:8333\n+[2001:41d0:52:d00::6e2]:8333\n+[2001:41d0:8:3e75::1]:8333\n+[2001:41d0:8:62ab::1]:8333\n+[2001:41d0:8:6728::]:8333\n+[2001:41d0:8:b30a::1]:8333\n+[2001:41d0:8:bc26::1]:8333\n+[2001:41d0:8:be9a::1]:8333\n+[2001:41d0:8:d984::]:8333\n+[2001:41d0:8:eb8b::]:8333\n+[2001:41d0:a:13a2::1]:8333\n+[2001:41d0:a:2b18::1]:8333\n+[2001:41d0:a:2d14::]:8333\n+[2001:41d0:a:4558::1df2:76d3]:8333\n+[2001:41d0:a:4aaa::]:8333\n+[2001:41d0:a:635b::1]:8333\n+[2001:41d0:a:63d8::1]:8333\n+[2001:41d0:a:6c29::1]:8333\n+[2001:41d0:a:f9cd::1]:8333\n+[2001:41d0:d:20a4::]:8333\n+[2001:41d0:e:26b::1]:8333\n+[2001:41d0:fc8c:a200:7a24:afff:fe9d:c69b]:8333\n+[2001:41f0:61::7]:8333\n+[2001:41f0::2]:8333\n+[2001:44b8:41bd:6101:148e:4022:4950:e861]:8333\n+[2001:470:1:2f9:0:1:107a:a301]:8333\n+[2001:470:1f0b:ad6::2]:8333\n+[2001:470:1f11:12d5::ae1:5611]:8333\n+[2001:470:1f14:7d::2]:8333\n+[2001:470:27:ce::2]:8333\n+[2001:470:41:6::2]:8333\n+[2001:470:507d:0:6ab5:99ff:fe73:ac18]:8333\n+[2001:470:583e::2a]:8333\n+[2001:470:5f:5f::232]:8333\n+[2001:470:66:119::2]:8333\n+[2001:470:6c4f::cafe]:8333\n+[2001:470:6f:327:913b:7fe:8545:a4f5]:8333\n+[2001:470:7dda:1::1]:8333\n+[2001:470:95c1::2]:8333\n+[2001:470:b1d0:ffff::1000]:8333\n+[2001:470:d00d:0:3664:a9ff:fe9a:5150]:8333\n+[2001:470:fab7:1::1]:8333\n+[2001:4800:7819:104:be76:4eff:fe05:c828]:8333\n+[2001:4800:7819:104:be76:4eff:fe05:c9a0]:8333\n+[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n+[2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n+[2001:4801:7828:104:be76:4eff:fe10:1325]:8333\n+[2001:4802:7800:1:be76:4eff:fe20:f023]:8333\n+[2001:4802:7800:2:30d7:1775:ff20:1858]:8333\n+[2001:4802:7800:2:be76:4eff:fe20:6c26]:8333\n+[2001:4802:7802:101:be76:4eff:fe20:256]:8333\n+[2001:4802:7802:103:be76:4eff:fe20:2de8]:8333\n+[2001:4830:1100:2e8::2]:8333\n+[2001:4b98:dc2:41:216:3eff:fe56:f659]:8333\n+[2001:4ba0:fffa:5d::93]:8333\n+[2001:4ba0:ffff:1be:1:1005:0:1]:8333\n+[2001:4dd0:ff00:867f::3]:8333\n+[2001:4dd0:ff00:9a67::9]:8333\n+[2001:5c0:1400:b::3cc7]:8333\n+[2001:610:1b19::3]:8333\n+[2001:610:600:a41::2]:8333\n+[2001:67c:26b4::]:8333\n+[2001:8d8:840:500::39:1ae]:8333\n+[2001:8d8:965:4a00::10:9343]:8333\n+[2001:980:4650:1:2e0:53ff:fe13:2449]:8333\n+[2001:981:46:1:ba27:ebff:fe5b:edee]:8333\n+[2001:9c8:53e9:369a:226:2dff:fe1b:7472]:8333\n+[2001:9d8:cafe:3::87]:8333\n+[2001:b10:11:21:3e07:54ff:fe48:7248]:8333\n+[2001:ba8:1f1:f34c::2]:8333\n+[2001:bc8:2310:100::1]:8333\n+[2001:bc8:3427:101:7a4f:8be:2611:6e79]:8333\n+[2001:bc8:3505:200::1]:8333\n+[2001:cc0:a004::30:1d]:8333\n+[2001:e42:102:1209:153:121:76:171]:8333\n+[2002:17ea:14eb::17ea:14eb]:8333\n+[2002:2f8:2bc5::2f8:2bc5]:8333\n+[2002:4047:482c::4047:482c]:8333\n+[2002:45c3:8cca::45c3:8cca]:8333\n+[2002:46bb:8a41:0:226:b0ff:feed:5f12]:8888\n+[2002:46bb:8c3c:0:8d55:8fbb:15fa:f4e0]:8765\n+[2002:4c48:a0fe::4c48:a0fe]:8333\n+[2002:4d44:25c8::4d44:25c8]:8333\n+[2002:505f:aaa2::505f:aaa2]:8333\n+[2002:5bc1:799d::5bc1:799d]:8333\n+[2002:6dec:5472::6dec:5472]:8333\n+[2002:8c6d:6521:9617:12bf:48ff:fed8:1724]:8333\n+[2002:ac52:94e2::ac52:94e2]:8333\n+[2002:af7e:3eca::af7e:3eca]:8333\n+[2002:b009:20c5::b009:20c5]:8333\n+[2002:c06f:39a0::c06f:39a0]:8333\n+[2002:c23a:738a::c23a:738a]:8333\n+[2002:c70f:7442::c70f:7442]:8333\n+[2002:cec5:be4f::cec5:be4f]:8333\n+[2002:d149:9e3a::d149:9e3a]:8333\n+[2002:d917:ca5::d917:ca5]:8333\n+[2400:8900::f03c:91ff:fe50:153f]:8333\n+[2400:8900::f03c:91ff:fe6e:823e]:8333\n+[2400:8900::f03c:91ff:fea8:1934]:8333\n+[2400:8901::f03c:91ff:fe26:c4d6]:8333\n+[2400:8901::f03c:91ff:fec8:4280]:8333\n+[2400:8901::f03c:91ff:fec8:660f]:8333\n+[2401:1800:7800:102:be76:4eff:fe1c:559]:8333\n+[2401:1800:7800:102:be76:4eff:fe1c:a7d]:8333\n+[2405:aa00:2::40]:8333\n+[2600:3c00::f03c:91ff:fe18:59b2]:8333\n+[2600:3c00::f03c:91ff:fe26:bfb6]:8333\n+[2600:3c00::f03c:91ff:fe33:88e3]:8333\n+[2600:3c00::f03c:91ff:fe6e:7297]:8333\n+[2600:3c00::f03c:91ff:fe84:8a6e]:8333\n+[2600:3c01::f03c:91ff:fe18:6adf]:8333\n+[2600:3c01::f03c:91ff:fe26:c4b8]:8333\n+[2600:3c01::f03c:91ff:fe3b:1f76]:8333\n+[2600:3c01::f03c:91ff:fe50:5e06]:8333\n+[2600:3c01::f03c:91ff:fe61:289b]:8333\n+[2600:3c01::f03c:91ff:fe69:89e9]:8333\n+[2600:3c01::f03c:91ff:fe84:ac15]:8333\n+[2600:3c01::f03c:91ff:fe98:68bb]:8333\n+[2600:3c02::f03c:91ff:fe26:713]:8333\n+[2600:3c02::f03c:91ff:fe26:c49e]:8333\n+[2600:3c02::f03c:91ff:fe84:97d8]:8333\n+[2600:3c02::f03c:91ff:fec8:8feb]:8333\n+[2600:3c03::f03c:91ff:fe18:da80]:8333\n+[2600:3c03::f03c:91ff:fe26:c49b]:8333\n+[2600:3c03::f03c:91ff:fe50:5fa7]:8333\n+[2600:3c03::f03c:91ff:fe67:d2e]:8333\n+[2600:3c03::f03c:91ff:fe6e:1803]:8333\n+[2600:3c03::f03c:91ff:fec8:4bbe]:8333\n+[2600:3c03::f03c:91ff:fee4:4e16]:8333\n+[2601:18d:8300:58a6::2e4]:8333\n+[2601:240:4600:40c0:250:56ff:fea4:6305]:8333\n+[2601:581:c200:a719:542c:9cd5:4852:f7d9]:8333\n+[2601:647:4900:85f1:ca2a:14ff:fe51:bb35]:8333\n+[2601:c2:c002:b300:54a0:15b5:19f7:530d]:8333\n+[2602:306:ccff:ad7f:b116:52be:64ba:db3a]:8333\n+[2602:ae:1982:9400:846:f78c:fec:4d57]:8333\n+[2602:ffc5:1f::1f:2d61]:8333\n+[2602:ffc5:1f::1f:9211]:8333\n+[2602:ffc5::75d5:c1c3]:8333\n+[2602:ffc5::ffc5:b844]:8333\n+[2602:ffe8:100:2::457:936b]:8333\n+[2602:ffe8:100:2::9d20:2e3c]:8333\n+[2602:ffea:1001:72b::578b]:8333\n+[2602:ffea:a::24c4:d9fd]:8333\n+[2604:0:c1:100:1ec1:deff:fe54:2235]:8333\n+[2604:180:1:1af::42a9]:8333\n+[2604:180:3:702::c9de]:8333\n+[2604:4080:1114:0:3285:a9ff:fe93:850c]:8333\n+[2604:6000:ffc0:3c:64a3:94d0:4f1d:1da8]:8333\n+[2605:6000:f380:9a01:ba09:8aff:fed4:3511]:8333\n+[2605:6001:e00f:7b00:c587:6d91:6eff:eeba]:8333\n+[2605:f700:c0:1::25c3:2a3e]:8333\n+[2606:6000:a441:9903:5054:ff:fe78:66ff]:8333\n+[2607:5300:100:200::1c83]:9334\n+[2607:5300:10::a1]:8333\n+[2607:5300:60:1c2f::1]:8333\n+[2607:5300:60:2b90::1]:8333\n+[2607:5300:60:3320::1]:8333\n+[2607:5300:60:385::1]:8333\n+[2607:5300:60:4a85::]:8333\n+[2607:5300:60:65e4::]:8333\n+[2607:5300:60:6918::]:8333\n+[2607:5300:60:711a:78::a7b5]:8333\n+[2607:5300:60:714::1]:8333\n+[2607:5300:60:870::1]:8333\n+[2607:5300:60:952e:3733::1414]:8333\n+[2607:f1c0:848:1000::48:943c]:8333\n+[2607:f2e0:f:5df::2]:8333\n+[2607:f748:1200:f8:21e:67ff:fe99:8f07]:8333\n+[2607:f948:0:1::7]:8333\n+[2607:ff68:100:36::131]:8333\n+[2803:6900:1::117]:8333\n+[2a00:1098:0:80:1000:25:0:1]:8333\n+[2a00:1178:2:43:5054:ff:fe84:f86f]:8333\n+[2a00:1178:2:43:5054:ff:fee7:2eb6]:8333\n+[2a00:1178:2:43:8983:cc27:d72:d97a]:8333\n+[2a00:1328:e100:cc42:230:48ff:fe92:55c]:8333\n+[2a00:14f0:e000:80d2:cd1a::1]:8333\n+[2a00:1630:2:1802:188:122:91:11]:8333\n+[2a00:18e0:0:1800::1]:8333\n+[2a00:18e0:0:dcc5:109:234:106:191]:8333\n+[2a00:1a28:1157:87::94c7]:8333\n+[2a00:1ca8:37::a5fc:40d1]:8333\n+[2a00:1ca8:37::ab6d:ce2c]:8333\n+[2a00:7143:100:0:216:3eff:fe2e:74a3]:8333\n+[2a00:7143:100:0:216:3eff:fed3:5c21]:8333\n+[2a00:7c80:0:45::123]:8333\n+[2a00:dcc0:eda:98:183:193:c382:6bdb]:8333\n+[2a00:dcc0:eda:98:183:193:f72e:d943]:8333\n+[2a00:f820:17::4af:1]:8333\n+[2a00:f940:2:1:2::101d]:8333\n+[2a00:f940:2:1:2::6ac]:8333\n+[2a01:1b0:7999:402::131]:8333\n+[2a01:238:42dd:f900:7a6c:2bc6:4041:c43]:8333\n+[2a01:238:4313:6300:2189:1c97:696b:5ea]:8333\n+[2a01:488:66:1000:5c33:91f9:0:1]:8333\n+[2a01:488:66:1000:b01c:178d:0:1]:8333\n+[2a01:4f8:100:34ce::2]:8333\n+[2a01:4f8:100:34e4::2]:8333\n+[2a01:4f8:100:44e7::2]:8333\n+[2a01:4f8:100:510e::2]:8333\n+[2a01:4f8:100:5128::2]:8333\n+[2a01:4f8:110:5105::2]:8333\n+[2a01:4f8:110:516c::2]:8333\n+[2a01:4f8:120:43e4::2]:8333\n+[2a01:4f8:120:62e6::2]:8333\n+[2a01:4f8:120:702e::2]:8333\n+[2a01:4f8:120:8203::2]:8333\n+[2a01:4f8:121:234d::2]:8333\n+[2a01:4f8:121:261::2]:8333\n+[2a01:4f8:130:11ea::2]:8333\n+[2a01:4f8:130:3332::2]:8333\n+[2a01:4f8:130:40ab::2]:8333\n+[2a01:4f8:130:632c::2]:8333\n+[2a01:4f8:130:6366::2]:8333\n+[2a01:4f8:130:934f::2]:8333\n+[2a01:4f8:131:33ad:fea1::666]:8333\n+[2a01:4f8:140:2195::2]:8333\n+[2a01:4f8:140:6333::2]:8333\n+[2a01:4f8:140:930d::2]:8333\n+[2a01:4f8:140:93b0::2]:8333\n+[2a01:4f8:141:1167::2]:8333\n+[2a01:4f8:141:186::2]:8333\n+[2a01:4f8:141:53f0::2]:8333\n+[2a01:4f8:150:336a::2]:8333\n+[2a01:4f8:150:72ee::4202]:8333\n+[2a01:4f8:150:8324::2]:9001\n+[2a01:4f8:151:21ca::2]:8333\n+[2a01:4f8:151:41c2:0:5404:a67e:f250]:8333\n+[2a01:4f8:151:5128::2]:8333\n+[2a01:4f8:151:52c6::154]:8333\n+[2a01:4f8:151:6347::2]:9001\n+[2a01:4f8:160:5136::2]:8333\n+[2a01:4f8:160:72c5::2858:e1c5]:8333\n+[2a01:4f8:160:72c5::593b:60d5]:8333\n+[2a01:4f8:160:814f::2]:8333\n+[2a01:4f8:161:13d0::2]:8333\n+[2a01:4f8:161:228f::2]:8333\n+[2a01:4f8:161:51c4::2]:8333\n+[2a01:4f8:161:60a7::2]:8333\n+[2a01:4f8:161:7026::2]:8333\n+[2a01:4f8:161:9184::2]:8333\n+[2a01:4f8:162:2108::2]:8333\n+[2a01:4f8:162:218c::2]:8333\n+[2a01:4f8:162:4443::2]:8333\n+[2a01:4f8:162:51a3::2]:8333\n+[2a01:4f8:171:b93::2]:8333\n+[2a01:4f8:190:1483::1]:8333\n+[2a01:4f8:190:4495::2]:8333\n+[2a01:4f8:190:64c9::2]:8333\n+[2a01:4f8:190:91ce::2]:8333\n+[2a01:4f8:191:2194::83]:8333\n+[2a01:4f8:191:40e8::2]:8333\n+[2a01:4f8:191:44b4::2]:8333\n+[2a01:4f8:191:8242::2]:8333\n+[2a01:4f8:191:83a2::2]:8333\n+[2a01:4f8:192:11b2::2]:8333\n+[2a01:4f8:192:216c::2]:8333\n+[2a01:4f8:192:22b3::2]:8333\n+[2a01:4f8:192:440b::2]:8333\n+[2a01:4f8:192:db::2]:8333\n+[2a01:4f8:200:1012::2]:8333\n+[2a01:4f8:200:23d1::dead:beef]:8333\n+[2a01:4f8:200:506d::2]:8333\n+[2a01:4f8:200:51f0::2]:8333\n+[2a01:4f8:200:5389::2]:8333\n+[2a01:4f8:200:53e3::2]:8333\n+[2a01:4f8:200:6344::2]:8333\n+[2a01:4f8:200:6396::2]:8333\n+[2a01:4f8:200:63af::119]:8333\n+[2a01:4f8:200:71e3:78b4:f3ff:fead:e8cf]:8333\n+[2a01:4f8:201:214c::2]:8333\n+[2a01:4f8:201:233:1::3]:8333\n+[2a01:4f8:201:3e3::2]:8333\n+[2a01:4f8:201:6011::4]:8333\n+[2a01:4f8:201:60d5::2]:8333\n+[2a01:4f8:202:265::2]:8333\n+[2a01:4f8:202:3115::2]:8333\n+[2a01:4f8:202:31e3::2]:8333\n+[2a01:4f8:202:31ef::2]:8333\n+[2a01:4f8:202:3392::2]:8333\n+[2a01:4f8:202:53c3::2]:8333\n+[2a01:4f8:202:63f4::2]:8333\n+[2a01:4f8:202:7227::2]:8333\n+[2a01:4f8:210:2227::2]:8333\n+[2a01:4f8:210:24aa::2]:8333\n+[2a01:4f8:211:14cf::2]:8333\n+[2a01:4f8:211:181b::2]:8333\n+[2a01:4f8:212:289e::2]:8333\n+[2a01:4f8:212:33db::2]:18333\n+[2a01:4f8:a0:112f::2]:8333\n+[2a01:4f8:a0:3174::2]:8333\n+[2a01:4f8:a0:328c::2]:8333\n+[2a01:4f8:a0:5243::2]:8333\n+[2a01:4f8:c17:19b9::2]:8333\n+[2a01:4f8:c17:1a41::2]:8333\n+[2a01:4f8:c17:1a92::2]:8333\n+[2a01:4f8:c17:273::2]:8333\n+[2a01:4f8:c17:435::2]:8333\n+[2a01:4f8:c17:755::2]:8333\n+[2a01:4f8:c17:b54::2]:8333\n+[2a01:4f8:d16:9384::2]:8333\n+[2a01:608:ffff:a009:8bf5:879d:e51a:f837]:8333\n+[2a01:680:10:10:f2de:f1ff:fec9:dc0]:8333\n+[2a01:7c8:aaac:1f6:5054:ff:fe30:e585]:8333\n+[2a01:7c8:aaac:20b:5054:ff:fe24:435e]:8333\n+[2a01:7c8:aaac:43d:5054:ff:fe4e:3dd4]:8333\n+[2a01:7c8:aaad:256::1]:8333\n+[2a01:7c8:aab6:ea:5054:ff:feff:eac3]:8333\n+[2a01:7c8:aab9:5a:5054:ff:fe89:7b26]:8333\n+[2a01:7c8:aabc:2c8:5054:ff:fe35:6581]:8333\n+[2a01:7e00::f03c:91ff:fe18:301e]:8333\n+[2a01:7e00::f03c:91ff:fe18:3942]:8333\n+[2a01:7e00::f03c:91ff:fe26:8c87]:8333\n+[2a01:7e00::f03c:91ff:fe50:6206]:8333\n+[2a01:7e00::f03c:91ff:fe67:559d]:8333\n+[2a01:7e00::f03c:91ff:fe84:434f]:8333\n+[2a01:7e00::f03c:91ff:fe89:1143]:8333\n+[2a01:7e00::f03c:91ff:fe98:2505]:8333\n+[2a01:7e00::f03c:91ff:fedb:352e]:8333\n+[2a01:7e01::f03c:91ff:fec8:d7b5]:8333\n+[2a01:e34:ee33:1640:c504:f677:b28a:ba42]:8333\n+[2a01:e35:2e7e:bc0:e079:f55e:cef3:b5d7]:8333\n+[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n+[2a01:e35:8a3f:47c0:c617:feff:fe3c:9fbd]:8333\n+[2a01:e35:8aca:6a0:211:aff:fe5e:295e]:8333\n+[2a02:180:a:18:81:7:11:50]:8333\n+[2a02:1810:1d87:6a00:5604:a6ff:fe60:d87d]:8333\n+[2a02:2168:1144:5c01:d63d:7eff:fedd:4f8e]:8333\n+[2a02:2498:6d7b:7001:b508:b39d:2cea:5b7a]:8333\n+[2a02:2528:503:2::15]:8333\n+[2a02:2528:fa:1a56:216:44ff:fe6a:d112]:8333\n+[2a02:27f8:2012:0:e9f7:268f:c441:6129]:8333\n+[2a02:348:86:3011::1]:8333\n+[2a02:4780:1:1::1:8a01]:8333\n+[2a02:578:5002:116::2]:8333\n+[2a02:6080::1:190b:69e3]:8333\n+[2a02:6080::1:e893:d9d6]:8333\n+[2a02:770:4000::139]:8333\n+[2a02:7aa0:1201::deb3:81a2]:8333\n+[2a02:8010:b001::5860:59b5]:8333\n+[2a02:810d:21c0:f00:a248:1cff:feb8:5348]:8333\n+[2a02:a50::21b:24ff:fe93:4e39]:8333\n+[2a02:a80:0:1200::2]:8333\n+[2a02:c200:0:10:2:1:5830:1]:8333\n+[2a02:c200:0:10:2:5:4692:1]:8333\n+[2a02:c200:0:10:3:0:7158:1]:8333\n+[2a02:c200:0:10::2244:1]:8333\n+[2a02:c200:1:10:2:3:3339:1]:8333\n+[2a02:c200:1:10:2:3:7844:1]:8333\n+[2a02:c200:1:10:2:5:6288:1]:8333\n+[2a02:c200:1:10:3:0:5912:1]:8333\n+[2a03:4000:2:496::8]:8333\n+[2a03:4000:6:8009::1]:8333\n+[2a03:4000:6:8063::bcd0]:8333\n+[2a03:4900:fffc:b::2]:8333\n+[2a03:b0c0:1:d0::d:5001]:8333\n+[2a03:f80:ed15:149:154:155:235:1]:8333\n+[2a03:f80:ed15:149:154:155:241:1]:8333\n+[2a03:f80:ed16:ca7:ea75:b12d:2af:9e2a]:8333\n+[2a04:1980:3100:1aab:290:faff:fe70:a3d8]:8333\n+[2a04:1980:3100:1aab:e61d:2dff:fe29:f590]:8333\n+[2a04:2f80:6:200::89]:8333\n+[2a04:ac00:1:4a0b:5054:ff:fe00:5af5]:8333\n+[2a04:ad80:0:68::35da]:8333\n+3ffk7iumtx3cegbi.onion:8333\n+3nmbbakinewlgdln.onion:8333\n+4j77gihpokxu2kj4.onion:8333\n+546esc6botbjfbxb.onion:8333\n+5at7sq5nm76xijkd.onion:8333\n+77mx2jsxaoyesz2p.onion:8333\n+7g7j54btiaxhtsiy.onion:8333\n+a6obdgzn67l7exu3.onion:8333\n+ab64h7olpl7qpxci.onion:8333\n+am2a4rahltfuxz6l.onion:8333\n+azuxls4ihrr2mep7.onion:8333\n+bitcoin7bi4op7wb.onion:8333\n+bitcoinostk4e4re.onion:8333\n+bk7yp6epnmcllq72.onion:8333\n+bmutjfrj5btseddb.onion:8333\n+ceeji4qpfs3ms3zc.onion:8333\n+clexmzqio7yhdao4.onion:8333\n+gb5ypqt63du3wfhn.onion:8333\n+h2vlpudzphzqxutd.onion:8333\n+n42h7r6oumcfsbrs.onion:4176\n+ncwk3lutemffcpc4.onion:8333\n+okdzjarwekbshnof.onion:8333\n+pjghcivzkoersesd.onion:8333\n+rw7ocjltix26mefn.onion:8333\n+uws7itep7o3yinxo.onion:8333\n+vk3qjdehyy4dwcxw.onion:8333\n+vqpye2k5rcqvj5mq.onion:8333\n+wpi7rpvhnndl52ee.onion:8333"
      },
      {
        "sha": "98365ee505ced2410cdc7ea841bf52198b405662",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,11 @@\n+# List of fixed seed nodes for testnet\n+\n+# Onion nodes\n+thfsmmn2jbitcoin.onion\n+it2pj4f7657g3rhi.onion\n+nkf5e6b7pl4jfd4a.onion\n+4zhkir2ofl7orfom.onion\n+t6xj6wilh4ytvcs7.onion\n+i6y6ivorwakd7nw3.onion\n+ubqj4rsu3nqtxmtp.onion\n+"
      },
      {
        "sha": "def40b0d6c2a5459ce26df10258a0485ecdb5bd1",
        "filename": "contrib/test-patches/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/test-patches/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/test-patches/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/test-patches/README.md?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,7 +0,0 @@\n-### Test Patches ###\n-\n-These patches are applied when the automated pull-tester\n-tests each pull and when master is tested using jenkins.\n-You can find more information about the tests run at\n-[http://jenkins.bluematt.me/pull-tester/files/\n-](http://jenkins.bluematt.me/pull-tester/files/)\n\\ No newline at end of file"
      },
      {
        "sha": "1cd043d0d7739e927c297ec93afad552525aed7b",
        "filename": "contrib/test-patches/temp-revert-2.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/test-patches/temp-revert-2.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/contrib/test-patches/temp-revert-2.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/test-patches/temp-revert-2.patch?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,20 +0,0 @@\n-commit cfae26916dba311f6f75d444301c1f9362267c3e\n-Author: Matt Corallo <git@bluematt.me>\n-Date:   Sun Mar 24 20:45:50 2013 -0400\n-\n-    Revert \"Checkpoint at first block in 11 March chain fork\"\n-    \n-    This reverts commit f817c496a1482d05b22c8e539de67f07db1c09d9.\n-\n-diff --git a/src/checkpoints.cpp b/src/checkpoints.cpp\n-index 62234b9..9b11f0b 100644\n---- a/src/checkpoints.cpp\n-+++ b/src/checkpoints.cpp\n-@@ -44,7 +44,6 @@ namespace Checkpoints\n-         (193000, uint256(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\"))\n-         (210000, uint256(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\"))\n-         (216116, uint256(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\"))\n--        (225430, uint256(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\"))\n-         ;\n-     static const CCheckpointData data = {\n-         &mapCheckpoints,"
      },
      {
        "sha": "e9e3f65da292a5bd80377f43cbc21cdb9e7f2c37",
        "filename": "contrib/verify-commits/README.md",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,26 @@\n+Tooling for verification of PGP signed commits\n+----------------------------------------------\n+\n+This is an incomplete work in progress, but currently includes a pre-push hook\n+script (`pre-push-hook.sh`) for maintainers to ensure that their own commits\n+are PGP signed (nearly always merge commits), as well as a script to verify\n+commits against a trusted keys list.\n+\n+\n+Using verify-commits.sh safely\n+------------------------------\n+\n+Remember that you can't use an untrusted script to verify itself. This means\n+that checking out code, then running `verify-commits.sh` against `HEAD` is\n+_not_ safe, because the version of `verify-commits.sh` that you just ran could\n+be backdoored. Instead, you need to use a trusted version of verify-commits\n+prior to checkout to make sure you're checking out only code signed by trusted\n+keys:\n+\n+    git fetch origin && \\\n+      ./contrib/verify-commits/verify-commits.sh origin/master && \\\n+      git checkout origin/master\n+\n+Note that the above isn't a good UI/UX yet, and needs significant improvements\n+to make it more convenient and reduce the chance of errors; pull-reqs\n+improving this process would be much appreciated."
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/__init__.py"
      },
      {
        "sha": "375d71172570773c38647c2f58bdbfa5aa41384f",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,33 @@\n+#!/bin/sh\n+INPUT=$(cat /dev/stdin)\n+VALID=false\n+REVSIG=false\n+IFS='\n+'\n+for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n+\tcase \"$LINE\" in\n+\t\"[GNUPG:] VALIDSIG \"*)\n+\t\twhile read KEY; do\n+\t\t\tcase \"$LINE\" in \"[GNUPG:] VALIDSIG $KEY \"*) VALID=true;; esac\n+\t\tdone < ./contrib/verify-commits/trusted-keys\n+\t\t;;\n+\t\"[GNUPG:] REVKEYSIG \"*)\n+\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n+\t\twhile read KEY; do\n+\t\t\tcase \"$LINE\" in \"[GNUPG:] REVKEYSIG ${KEY#????????????????????????} \"*)\n+\t\t\t\tREVSIG=true\n+\t\t\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${KEY#????????????????????????} \"\n+\t\t\tesac\n+\t\tdone < ./contrib/verify-commits/trusted-keys\n+\t\t;;\n+\tesac\n+done\n+if ! $VALID; then\n+\texit 1\n+fi\n+if $VALID && $REVSIG; then\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\" 2>/dev/null\n+\techo \"$GOODREVSIG\"\n+else\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n+fi"
      },
      {
        "sha": "c57222818ab8a3deb8a78a338e6792f204f97c91",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,16 @@\n+#!/bin/bash\n+if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n+    exit 0\n+fi\n+\n+while read LINE; do\n+    set -- A $LINE\n+    if [ \"$4\" != \"refs/heads/master\" ]; then\n+        continue\n+    fi\n+    if ! ./contrib/verify-commits/verify-commits.sh $3 > /dev/null 2>&1; then\n+        echo \"ERROR: A commit is not signed, can't push\"\n+        ./contrib/verify-commits/verify-commits.sh\n+        exit 1\n+    fi\n+done < /dev/stdin"
      },
      {
        "sha": "c60f8ab695e9c0fb01feafb1c28074cb98ab122d",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1 @@\n+82bcf405f6db1d55b684a1f63a4aabad376cdad7"
      },
      {
        "sha": "75242c2a9760b6c500a38ff62ccacd89c766cb0a",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,4 @@\n+71A3B16735405025D447E8F274810B012346C9A6\n+3F1888C6DCA92A6499C4911FDBA1A67379A1A931\n+32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC\n+FE09B823E6D83A3BC7983EAA2D7F2372E50FE137"
      },
      {
        "sha": "5219331e2e5bc7da41ac1175662ba0800bfea62a",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,58 @@\n+#!/bin/sh\n+# Not technically POSIX-compliant due to use of \"local\", but almost every\n+# shell anyone uses today supports it, so its probably fine\n+\n+DIR=$(dirname \"$0\")\n+[ \"/${DIR#/}\" != \"$DIR\" ] && DIR=$(dirname \"$(pwd)/$0\")\n+\n+VERIFIED_ROOT=$(cat \"${DIR}/trusted-git-root\")\n+REVSIG_ALLOWED=$(cat \"${DIR}/allow-revsig-commits\")\n+\n+HAVE_FAILED=false\n+IS_SIGNED () {\n+\tif [ $1 = $VERIFIED_ROOT ]; then\n+\t\treturn 0;\n+\tfi\n+\tif [ \"${REVSIG_ALLOWED#*$1}\" != \"$REVSIG_ALLOWED\" ]; then\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n+\telse\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n+\tfi\n+\tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit $1 > /dev/null 2>&1; then\n+\t\treturn 1;\n+\tfi\n+\tlocal PARENTS\n+\tPARENTS=$(git show -s --format=format:%P $1)\n+\tfor PARENT in $PARENTS; do\n+\t\tif IS_SIGNED $PARENT > /dev/null; then\n+\t\t\treturn 0;\n+\t\tfi\n+\tdone\n+\tif ! \"$HAVE_FAILED\"; then\n+\t\techo \"No parent of $1 was signed with a trusted key!\" > /dev/stderr\n+\t\techo \"Parents are:\" > /dev/stderr\n+\t\tfor PARENT in $PARENTS; do\n+\t\t\tgit show -s $PARENT > /dev/stderr\n+\t\tdone\n+\t\tHAVE_FAILED=true\n+\tfi\n+\treturn 1;\n+}\n+\n+if [ x\"$1\" = \"x\" ]; then\n+\tTEST_COMMIT=\"HEAD\"\n+else\n+\tTEST_COMMIT=\"$1\"\n+fi\n+\n+IS_SIGNED \"$TEST_COMMIT\"\n+RES=$?\n+if [ \"$RES\" = 1 ]; then\n+\tif ! \"$HAVE_FAILED\"; then\n+\t\techo \"$TEST_COMMIT was not signed with a trusted key!\"\n+\tfi\n+else\n+\techo \"There is a valid path from $TEST_COMMIT to $VERIFIED_ROOT where all commits are signed!\"\n+fi\n+\n+exit $RES"
      },
      {
        "sha": "8970f3daa406ad19a5d1d029346b22826efe6917",
        "filename": "contrib/verifybinaries/README.md",
        "status": "renamed",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,6 +1,13 @@\n-### Verify SF Binaries ###\n+### Verify Binaries\n This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n \n It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n \n-The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2.\n\\ No newline at end of file\n+The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2.\n+\n+Usage:\n+\n+```sh\n+./verify.sh bitcoin-core-0.11.2\n+./verify.sh bitcoin-core-0.12.0\n+```",
        "previous_filename": "contrib/verifysfbinaries/README.md"
      },
      {
        "sha": "657c3bd33c2e26f150733b2146c066d5e45ee06d",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "renamed",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -17,13 +17,10 @@ function clean_up {\n WORKINGDIR=\"/tmp/bitcoin\"\n TMPFILE=\"hashes.tmp\"\n \n-#this URL is used if a version number is not specified as an argument to the script\n-SIGNATUREFILE=\"https://bitcoin.org/bin/0.9.2.1/SHA256SUMS.asc\"\n-\n SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n RCSUBDIR=\"test/\"\n BASEDIR=\"https://bitcoin.org/bin/\"\n-VERSIONPREFIX=\"bitcoin-\"\n+VERSIONPREFIX=\"bitcoin-core-\"\n RCVERSIONSTRING=\"rc\"\n \n if [ ! -d \"$WORKINGDIR\" ]; then\n@@ -53,7 +50,8 @@ if [ -n \"$1\" ]; then\n \n    SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n else\n-   BASEDIR=\"${SIGNATUREFILE%/*}/\"\n+   echo \"Error: need to specify a version on the command line\"\n+   exit 2\n fi\n \n #first we fetch the file containing the signature\n@@ -62,7 +60,7 @@ WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n #and then see if wget completed successfully\n if [ $? -ne 0 ]; then\n    echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n-   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.9.2-rc1)\"\n+   echo \"[$VERSIONPREFIX]<version>-[$RCVERSIONSTRING[0-9]] (example: \"$VERSIONPREFIX\"0.10.4-\"$RCVERSIONSTRING\"1)\"\n    echo \"wget output:\"\n    echo \"$WGETOUT\"|sed 's/^/\\t/g'\n    exit 2\n@@ -82,7 +80,7 @@ if [ $RET -ne 0 ]; then\n       echo \"Bad signature.\"\n    elif [ $RET -eq 2 ]; then\n       #or if a gpg error has occurred\n-      echo \"gpg error. Do you have Gavin's code signing key installed?\"\n+      echo \"gpg error. Do you have the Bitcoin Core binary release signing key installed?\"\n    fi\n \n    echo \"gpg output:\"\n@@ -116,4 +114,6 @@ fi\n #everything matches! clean up the mess\n clean_up $FILES $SIGNATUREFILENAME $TMPFILE\n \n+echo -e \"Verified hashes of \\n$FILES\"\n+\n exit 0",
        "previous_filename": "contrib/verifysfbinaries/verify.sh"
      },
      {
        "sha": "6268123dd8e5302917ce1d7e2bc7de8efd2c9b5d",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,41 @@\n+#!/usr/bin/env python2\n+\n+import array\n+import binascii\n+import zmq\n+import struct\n+\n+port = 28332\n+\n+zmqContext = zmq.Context()\n+zmqSubSocket = zmqContext.socket(zmq.SUB)\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashblock\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashtx\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawblock\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawtx\")\n+zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n+\n+try:\n+    while True:\n+        msg = zmqSubSocket.recv_multipart()\n+        topic = str(msg[0])\n+        body = msg[1]\n+        sequence = \"Unknown\";\n+        if len(msg[-1]) == 4:\n+          msgSequence = struct.unpack('<I', msg[-1])[-1]\n+          sequence = str(msgSequence)\n+        if topic == \"hashblock\":\n+            print '- HASH BLOCK ('+sequence+') -'\n+            print binascii.hexlify(body)\n+        elif topic == \"hashtx\":\n+            print '- HASH TX  ('+sequence+') -'\n+            print binascii.hexlify(body)\n+        elif topic == \"rawblock\":\n+            print '- RAW BLOCK HEADER ('+sequence+') -'\n+            print binascii.hexlify(body[:80])\n+        elif topic == \"rawtx\":\n+            print '- RAW TX ('+sequence+') -'\n+            print binascii.hexlify(body)\n+\n+except KeyboardInterrupt:\n+    zmqContext.destroy()"
      },
      {
        "sha": "3cb4b9ac15557906446b56ab75eb2d23ec0187e9",
        "filename": "depends/.gitignore",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -3,3 +3,8 @@ work/\n built/\n sources/\n config.site\n+x86_64*\n+i686*\n+mips*\n+arm*\n+aarch64*"
      },
      {
        "sha": "dedb0674cf14974702cefc520b4ad0da309a940b",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 66,
        "deletions": 11,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -6,7 +6,6 @@ SDK_PATH ?= $(BASEDIR)/SDKs\n NO_QT ?=\n NO_WALLET ?=\n NO_UPNP ?=\n-USE_LINUX_STATIC_QT5 ?=\n FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n \n BUILD = $(shell ./config.guess)\n@@ -16,6 +15,8 @@ BASEDIR = $(CURDIR)\n HASH_LENGTH:=11\n DOWNLOAD_CONNECT_TIMEOUT:=10\n DOWNLOAD_RETRIES:=3\n+HOST_ID_SALT ?= salt\n+BUILD_ID_SALT ?= salt\n \n host:=$(BUILD)\n ifneq ($(HOST),)\n@@ -31,6 +32,7 @@ endif\n \n base_build_dir=$(BASEDIR)/work/build\n base_staging_dir=$(BASEDIR)/work/staging\n+base_download_dir=$(BASEDIR)/work/download\n canonical_host:=$(shell ./config.sub $(HOST))\n build:=$(shell ./config.sub $(BUILD))\n \n@@ -73,13 +75,31 @@ include builders/$(build_os).mk\n include builders/default.mk\n include packages/packages.mk\n \n-qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages)\n-qt_native_packages_$(NO_QT) = $(qt_native_packages)\n+build_id_string:=$(BUILD_ID_SALT)\n+build_id_string+=$(shell $(build_CC) --version 2>/dev/null)\n+build_id_string+=$(shell $(build_AR) --version 2>/dev/null)\n+build_id_string+=$(shell $(build_CXX) --version 2>/dev/null)\n+build_id_string+=$(shell $(build_RANLIB) --version 2>/dev/null)\n+build_id_string+=$(shell $(build_STRIP) --version 2>/dev/null)\n+\n+$(host_arch)_$(host_os)_id_string:=$(HOST_ID_SALT)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_CC) --version 2>/dev/null)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_AR) --version 2>/dev/null)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_CXX) --version 2>/dev/null)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_RANLIB) --version 2>/dev/null)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_STRIP) --version 2>/dev/null)\n+\n+qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch)_$(host_os)_packages)\n wallet_packages_$(NO_WALLET) = $(wallet_packages)\n upnp_packages_$(NO_UPNP) = $(upnp_packages)\n \n packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_)\n-native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages) $(qt_native_packages_)\n+native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages)\n+\n+ifneq ($(qt_packages_),)\n+native_packages += $(qt_native_packages)\n+endif\n+\n all_packages = $(packages) $(native_packages)\n \n meta_depends = Makefile funcs.mk builders/default.mk hosts/default.mk hosts/$(host_os).mk builders/$(build_os).mk\n@@ -90,13 +110,13 @@ include funcs.mk\n \n toolchain_path=$($($(host_arch)_$(host_os)_native_toolchain)_prefixbin)\n final_build_id_long+=$(shell $(build_SHA256SUM) config.site.in)\n-final_build_id+=$(shell echo -n $(final_build_id_long) | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH))\n-$(host_prefix)/.stamp_$(final_build_id): | $(native_packages) $(packages)\n+final_build_id+=$(shell echo -n \"$(final_build_id_long)\" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH))\n+$(host_prefix)/.stamp_$(final_build_id): $(native_packages) $(packages)\n \t$(AT)rm -rf $(@D)\n \t$(AT)mkdir -p $(@D)\n-\t$(AT)echo copying packages: $|\n+\t$(AT)echo copying packages: $^\n \t$(AT)echo to: $(@D)\n-\t$(AT)cd $(@D); $(foreach package,$|, tar xf $($(package)_cached); )\n+\t$(AT)cd $(@D); $(foreach package,$^, tar xf $($(package)_cached); )\n \t$(AT)touch $@\n \n $(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_build_id)\n@@ -121,6 +141,41 @@ $(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_\n             $< > $@\n \t$(AT)touch $@\n \n-install: $(host_prefix)/share/config.site\n-download: $(all_sources)\n-.PHONY: install cached\n+\n+define check_or_remove_cached\n+  mkdir -p $(BASE_CACHE)/$(host)/$(package) && cd $(BASE_CACHE)/$(host)/$(package); \\\n+  $(build_SHA256SUM) -c $($(package)_cached_checksum) >/dev/null 2>/dev/null || \\\n+  ( rm -f $($(package)_cached_checksum); \\\n+    if test -f \"$($(package)_cached)\"; then echo \"Checksum mismatch for $(package). Forcing rebuild..\"; rm -f $($(package)_cached_checksum) $($(package)_cached); fi )\n+endef\n+\n+define check_or_remove_sources\n+  mkdir -p $($(package)_source_dir); cd $($(package)_source_dir); \\\n+  test -f $($(package)_fetched) && ( $(build_SHA256SUM) -c $($(package)_fetched) >/dev/null 2>/dev/null || \\\n+    ( echo \"Checksum missing or mismatched for $(package) source. Forcing re-download.\"; \\\n+      rm -f $($(package)_all_sources) $($(1)_fetched))) || true\n+endef\n+\n+check-packages:\n+\t@$(foreach package,$(all_packages),$(call check_or_remove_cached,$(package));)\n+check-sources:\n+\t@$(foreach package,$(all_packages),$(call check_or_remove_sources,$(package));)\n+\n+$(host_prefix)/share/config.site: check-packages\n+\n+check-packages: check-sources\n+\n+install: check-packages $(host_prefix)/share/config.site\n+\n+\n+download-one: check-sources $(all_sources)\n+\n+download-osx:\n+\t@$(MAKE) -s HOST=x86_64-apple-darwin11 download-one\n+download-linux:\n+\t@$(MAKE) -s HOST=x86_64-unknown-linux-gnu download-one\n+download-win:\n+\t@$(MAKE) -s HOST=x86_64-w64-mingw32 download-one\n+download: download-osx download-linux download-win\n+\n+.PHONY: install cached download-one download-osx download-linux download-win download check-packages check-sources"
      },
      {
        "sha": "6053c531b46a7130fbc0f5b308d1e7258ecbbe80",
        "filename": "depends/README.md",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,59 @@\n+### Usage\n+\n+To build dependencies for the current arch+OS:\n+\n+    make\n+\n+To build for another arch/OS:\n+\n+    make HOST=host-platform-triplet\n+\n+For example:\n+\n+    make HOST=x86_64-w64-mingw32 -j4\n+\n+A prefix will be generated that's suitable for plugging into Bitcoin's\n+configure. In the above example, a dir named x86_64-w64-mingw32 will be\n+created. To use it for Bitcoin:\n+\n+    ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n+\n+Common `host-platform-triplets` for cross compilation are:\n+\n+- `i686-w64-mingw32` for Win32\n+- `x86_64-w64-mingw32` for Win64\n+- `x86_64-apple-darwin11` for MacOSX\n+- `arm-linux-gnueabihf` for Linux ARM 32 bit\n+- `aarch64-linux-gnu` for Linux ARM 64 bit\n+\n+No other options are needed, the paths are automatically configured.\n+\n+Dependency Options:\n+The following can be set when running make: make FOO=bar\n+\n+    SOURCES_PATH: downloaded sources will be placed here\n+    BASE_CACHE: built packages will be placed here\n+    SDK_PATH: Path where sdk's can be found (used by OSX)\n+    FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n+    NO_QT: Don't download/build/cache qt and its dependencies\n+    NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n+    NO_UPNP: Don't download/build/cache packages needed for enabling upnp\n+    DEBUG: disable some optimizations and enable more runtime checking\n+    HOST_ID_SALT: Optional salt to use when generating host package ids\n+    BUILD_ID_SALT: Optional salt to use when generating build package ids\n+\n+If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n+options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n+\n+Additional targets:\n+\n+    download: run 'make download' to fetch all sources without building them\n+    download-osx: run 'make download-osx' to fetch all sources needed for osx builds\n+    download-win: run 'make download-win' to fetch all sources needed for win builds\n+    download-linux: run 'make download-linux' to fetch all sources needed for linux builds\n+\n+### Other documentation\n+\n+- [description.md](description.md): General description of the depends system\n+- [packages.md](packages.md): Steps for adding packages\n+"
      },
      {
        "sha": "e768feecf76a5d74427d57c6746964feb65e08be",
        "filename": "depends/README.usage",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/depends/README.usage",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/depends/README.usage",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.usage?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,32 +0,0 @@\n-To build dependencies for the current arch+OS:\n-    make\n-To build for another arch/OS:\n-  make HOST=host-platform-triplet && make HOST=host-platform-triplet\n-  (For example: make HOST=i686-w64-mingw32 -j4)\n-\n-A prefix will be generated that's suitable for plugging into Bitcoin's\n-configure. In the above example, a dir named i686-w64-mingw32 will be\n-created. To use it for Bitcoin:\n-\n-./configure --prefix=`pwd`/depends/i686-w64-mingw32\n-\n-No other options are needed, the paths are automatically configured.\n-\n-Dependency Options:\n-The following can be set when running make: make FOO=bar\n-\n-SOURCES_PATH: downloaded sources will be placed here\n-BASE_CACHE: built packages will be placed here\n-SDK_PATH: Path where sdk's can be found (used by OSX)\n-FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n-NO_QT: Don't download/build/cache qt and its dependencies\n-NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n-NO_UPNP: Don't download/build/cache packages needed for enabling upnp\n-DEBUG: disable some optimizations and enable more runtime checking\n-USE_LINUX_STATIC_QT5: Build a static qt5 rather than shared qt4. Linux only.\n-\n-If some packages are not built, for example 'make NO_WALLET=1', the appropriate\n-options will be passed to bitcoin's configure. In this case, --disable-wallet.\n-\n-Additional targets:\n-download: run 'make download' to fetch sources without building them"
      },
      {
        "sha": "27f550ab036aeea9ced0a003d40aceaff5e3dc9c",
        "filename": "depends/builders/darwin.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -7,11 +7,11 @@ build_darwin_OTOOL: = $(shell xcrun -f otool)\n build_darwin_NM: = $(shell xcrun -f nm)\n build_darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n build_darwin_SHA256SUM = shasum -a 256\n-build_darwin_DOWNLOAD = curl --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -L -o\n+build_darwin_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o\n \n #darwin host on darwin builder. overrides darwin host preferences.\n darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION)\n-darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION)\n+darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION) -stdlib=libc++\n darwin_AR:=$(shell xcrun -f ar)\n darwin_RANLIB:=$(shell xcrun -f ranlib)\n darwin_STRIP:=$(shell xcrun -f strip)"
      },
      {
        "sha": "b03f42401047adf98bc997a7eece42c2c79a2c2c",
        "filename": "depends/builders/linux.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/builders/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/builders/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/linux.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,2 +1,2 @@\n build_linux_SHA256SUM = sha256sum\n-build_linux_DOWNLOAD = wget --timeout=$(DOWNLOAD_CONNECT_TIMEOUT) --tries=$(DOWNLOAD_RETRIES) -nv -O\n+build_linux_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o"
      },
      {
        "sha": "c4bd827a7bedcf6f78866a27bf01d896c047b516",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 102,
        "deletions": 66,
        "changes": 168,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n-#   Copyright 1992-2014 Free Software Foundation, Inc.\n+#   Copyright 1992-2016 Free Software Foundation, Inc.\n \n-timestamp='2014-03-23'\n+timestamp='2016-05-15'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -24,12 +24,12 @@ timestamp='2014-03-23'\n # program.  This Exception is an additional permission under section 7\n # of the GNU General Public License, version 3 (\"GPLv3\").\n #\n-# Originally written by Per Bothner.\n+# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n #\n # You can get the latest version of this script from:\n-# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\n+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n #\n-# Please send patches with a ChangeLog entry to config-patches@gnu.org.\n+# Please send patches to <config-patches@gnu.org>.\n \n \n me=`echo \"$0\" | sed -e 's,.*/,,'`\n@@ -50,7 +50,7 @@ version=\"\\\n GNU config.guess ($timestamp)\n \n Originally written by Per Bothner.\n-Copyright 1992-2014 Free Software Foundation, Inc.\n+Copyright 1992-2016 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -168,19 +168,29 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t# Note: NetBSD doesn't particularly care about the vendor\n \t# portion of the name.  We always set it to \"unknown\".\n \tsysctl=\"sysctl -n hw.machine_arch\"\n-\tUNAME_MACHINE_ARCH=`(/sbin/$sysctl 2>/dev/null || \\\n-\t    /usr/sbin/$sysctl 2>/dev/null || echo unknown)`\n+\tUNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \\\n+\t    /sbin/$sysctl 2>/dev/null || \\\n+\t    /usr/sbin/$sysctl 2>/dev/null || \\\n+\t    echo unknown)`\n \tcase \"${UNAME_MACHINE_ARCH}\" in\n \t    armeb) machine=armeb-unknown ;;\n \t    arm*) machine=arm-unknown ;;\n \t    sh3el) machine=shl-unknown ;;\n \t    sh3eb) machine=sh-unknown ;;\n \t    sh5el) machine=sh5le-unknown ;;\n+\t    earmv*)\n+\t\tarch=`echo ${UNAME_MACHINE_ARCH} | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n+\t\tendian=`echo ${UNAME_MACHINE_ARCH} | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n+\t\tmachine=${arch}${endian}-unknown\n+\t\t;;\n \t    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;\n \tesac\n \t# The Operating System including object format, if it has switched\n-\t# to ELF recently, or will in the future.\n+\t# to ELF recently (or will in the future) and ABI.\n \tcase \"${UNAME_MACHINE_ARCH}\" in\n+\t    earm*)\n+\t\tos=netbsdelf\n+\t\t;;\n \t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n \t\teval $set_cc_for_build\n \t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n@@ -197,6 +207,13 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t\tos=netbsd\n \t\t;;\n \tesac\n+\t# Determine ABI tags.\n+\tcase \"${UNAME_MACHINE_ARCH}\" in\n+\t    earm*)\n+\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n+\t\tabi=`echo ${UNAME_MACHINE_ARCH} | sed -e \"$expr\"`\n+\t\t;;\n+\tesac\n \t# The OS release\n \t# Debian GNU/NetBSD machines have a different userland, and\n \t# thus, need a distinct triplet. However, they do not need\n@@ -207,13 +224,13 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \t\trelease='-gnu'\n \t\t;;\n \t    *)\n-\t\trelease=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n+\t\trelease=`echo ${UNAME_RELEASE} | sed -e 's/[-_].*//' | cut -d. -f1,2`\n \t\t;;\n \tesac\n \t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n \t# contains redundant information, the shorter form:\n \t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n-\techo \"${machine}-${os}${release}\"\n+\techo \"${machine}-${os}${release}${abi}\"\n \texit ;;\n     *:Bitrig:*:*)\n \tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n@@ -223,6 +240,10 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n \techo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}\n \texit ;;\n+    *:LibertyBSD:*:*)\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n+\techo ${UNAME_MACHINE_ARCH}-unknown-libertybsd${UNAME_RELEASE}\n+\texit ;;\n     *:ekkoBSD:*:*)\n \techo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}\n \texit ;;\n@@ -235,6 +256,9 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n     *:MirBSD:*:*)\n \techo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}\n \texit ;;\n+    *:Sortix:*:*)\n+\techo ${UNAME_MACHINE}-unknown-sortix\n+\texit ;;\n     alpha:OSF1:*:*)\n \tcase $UNAME_RELEASE in\n \t*4.0)\n@@ -251,42 +275,42 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n \tcase \"$ALPHA_CPU_TYPE\" in\n \t    \"EV4 (21064)\")\n-\t\tUNAME_MACHINE=\"alpha\" ;;\n+\t\tUNAME_MACHINE=alpha ;;\n \t    \"EV4.5 (21064)\")\n-\t\tUNAME_MACHINE=\"alpha\" ;;\n+\t\tUNAME_MACHINE=alpha ;;\n \t    \"LCA4 (21066/21068)\")\n-\t\tUNAME_MACHINE=\"alpha\" ;;\n+\t\tUNAME_MACHINE=alpha ;;\n \t    \"EV5 (21164)\")\n-\t\tUNAME_MACHINE=\"alphaev5\" ;;\n+\t\tUNAME_MACHINE=alphaev5 ;;\n \t    \"EV5.6 (21164A)\")\n-\t\tUNAME_MACHINE=\"alphaev56\" ;;\n+\t\tUNAME_MACHINE=alphaev56 ;;\n \t    \"EV5.6 (21164PC)\")\n-\t\tUNAME_MACHINE=\"alphapca56\" ;;\n+\t\tUNAME_MACHINE=alphapca56 ;;\n \t    \"EV5.7 (21164PC)\")\n-\t\tUNAME_MACHINE=\"alphapca57\" ;;\n+\t\tUNAME_MACHINE=alphapca57 ;;\n \t    \"EV6 (21264)\")\n-\t\tUNAME_MACHINE=\"alphaev6\" ;;\n+\t\tUNAME_MACHINE=alphaev6 ;;\n \t    \"EV6.7 (21264A)\")\n-\t\tUNAME_MACHINE=\"alphaev67\" ;;\n+\t\tUNAME_MACHINE=alphaev67 ;;\n \t    \"EV6.8CB (21264C)\")\n-\t\tUNAME_MACHINE=\"alphaev68\" ;;\n+\t\tUNAME_MACHINE=alphaev68 ;;\n \t    \"EV6.8AL (21264B)\")\n-\t\tUNAME_MACHINE=\"alphaev68\" ;;\n+\t\tUNAME_MACHINE=alphaev68 ;;\n \t    \"EV6.8CX (21264D)\")\n-\t\tUNAME_MACHINE=\"alphaev68\" ;;\n+\t\tUNAME_MACHINE=alphaev68 ;;\n \t    \"EV6.9A (21264/EV69A)\")\n-\t\tUNAME_MACHINE=\"alphaev69\" ;;\n+\t\tUNAME_MACHINE=alphaev69 ;;\n \t    \"EV7 (21364)\")\n-\t\tUNAME_MACHINE=\"alphaev7\" ;;\n+\t\tUNAME_MACHINE=alphaev7 ;;\n \t    \"EV7.9 (21364A)\")\n-\t\tUNAME_MACHINE=\"alphaev79\" ;;\n+\t\tUNAME_MACHINE=alphaev79 ;;\n \tesac\n \t# A Pn.n version is a patched version.\n \t# A Vn.n version is a released version.\n \t# A Tn.n version is a released field test version.\n \t# A Xn.n version is an unreleased experimental baselevel.\n \t# 1.2 uses \"1.2\" for uname -r.\n-\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n+\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n \t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n \texitcode=$?\n \ttrap '' 0\n@@ -359,16 +383,16 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \texit ;;\n     i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n \teval $set_cc_for_build\n-\tSUN_ARCH=\"i386\"\n+\tSUN_ARCH=i386\n \t# If there is a compiler, see if it is configured for 64-bit objects.\n \t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n \t# This test works for both compilers.\n-\tif [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n+\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n \t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n-\t\t(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t(CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n \t\tgrep IS_64BIT_ARCH >/dev/null\n \t    then\n-\t\tSUN_ARCH=\"x86_64\"\n+\t\tSUN_ARCH=x86_64\n \t    fi\n \tfi\n \techo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n@@ -393,7 +417,7 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n \texit ;;\n     sun*:*:4.2BSD:*)\n \tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n-\ttest \"x${UNAME_RELEASE}\" = \"x\" && UNAME_RELEASE=3\n+\ttest \"x${UNAME_RELEASE}\" = x && UNAME_RELEASE=3\n \tcase \"`/bin/arch`\" in\n \t    sun3)\n \t\techo m68k-sun-sunos${UNAME_RELEASE}\n@@ -579,8 +603,9 @@ EOF\n \telse\n \t\tIBM_ARCH=powerpc\n \tfi\n-\tif [ -x /usr/bin/oslevel ] ; then\n-\t\tIBM_REV=`/usr/bin/oslevel`\n+\tif [ -x /usr/bin/lslpp ] ; then\n+\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc |\n+\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n \telse\n \t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n \tfi\n@@ -617,13 +642,13 @@ EOF\n \t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n \t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n \t\t    case \"${sc_cpu_version}\" in\n-\t\t      523) HP_ARCH=\"hppa1.0\" ;; # CPU_PA_RISC1_0\n-\t\t      528) HP_ARCH=\"hppa1.1\" ;; # CPU_PA_RISC1_1\n+\t\t      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0\n+\t\t      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1\n \t\t      532)                      # CPU_PA_RISC2_0\n \t\t\tcase \"${sc_kernel_bits}\" in\n-\t\t\t  32) HP_ARCH=\"hppa2.0n\" ;;\n-\t\t\t  64) HP_ARCH=\"hppa2.0w\" ;;\n-\t\t\t  '') HP_ARCH=\"hppa2.0\" ;;   # HP-UX 10.20\n+\t\t\t  32) HP_ARCH=hppa2.0n ;;\n+\t\t\t  64) HP_ARCH=hppa2.0w ;;\n+\t\t\t  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20\n \t\t\tesac ;;\n \t\t    esac\n \t\tfi\n@@ -662,11 +687,11 @@ EOF\n \t\t    exit (0);\n \t\t}\n EOF\n-\t\t    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`\n+\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`\n \t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n \t\tfi ;;\n \tesac\n-\tif [ ${HP_ARCH} = \"hppa2.0w\" ]\n+\tif [ ${HP_ARCH} = hppa2.0w ]\n \tthen\n \t    eval $set_cc_for_build\n \n@@ -679,12 +704,12 @@ EOF\n \t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n \t    # => hppa64-hp-hpux11.23\n \n-\t    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |\n+\t    if echo __LP64__ | (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) |\n \t\tgrep -q __LP64__\n \t    then\n-\t\tHP_ARCH=\"hppa2.0w\"\n+\t\tHP_ARCH=hppa2.0w\n \t    else\n-\t\tHP_ARCH=\"hppa64\"\n+\t\tHP_ARCH=hppa64\n \t    fi\n \tfi\n \techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n@@ -789,14 +814,14 @@ EOF\n \techo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n \texit ;;\n     F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n-\tFUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n-\tFUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n+\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n+\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n \tFUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n \techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n \texit ;;\n     5000:UNIX_System_V:4.*:*)\n-\tFUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n-\tFUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`\n+\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n+\tFUJITSU_REL=`echo ${UNAME_RELEASE} | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n \techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n \texit ;;\n     i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n@@ -878,7 +903,7 @@ EOF\n \texit ;;\n     *:GNU/*:*:*)\n \t# other systems with GNU libc and userland\n-\techo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}\n+\techo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}\n \texit ;;\n     i*86:Minix:*:*)\n \techo ${UNAME_MACHINE}-pc-minix\n@@ -901,7 +926,7 @@ EOF\n \t  EV68*) UNAME_MACHINE=alphaev68 ;;\n \tesac\n \tobjdump --private-headers /bin/sh | grep -q ld.so.1\n-\tif test \"$?\" = 0 ; then LIBC=\"gnulibc1\" ; fi\n+\tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n \texit ;;\n     arc:Linux:*:* | arceb:Linux:*:*)\n@@ -932,6 +957,9 @@ EOF\n     crisv32:Linux:*:*)\n \techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n \texit ;;\n+    e2k:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n     frv:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n \texit ;;\n@@ -944,6 +972,9 @@ EOF\n     ia64:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n \texit ;;\n+    k1om:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n     m32r*:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n \texit ;;\n@@ -1020,7 +1051,7 @@ EOF\n \techo ${UNAME_MACHINE}-dec-linux-${LIBC}\n \texit ;;\n     x86_64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n \texit ;;\n     xtensa*:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n@@ -1099,7 +1130,7 @@ EOF\n \t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n \t# the processor, so we play safe by assuming i586.\n \t# Note: whatever this is, it MUST be the same as what config.sub\n-\t# prints for the \"djgpp\" host, or else GDB configury will decide that\n+\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n \t# this is a cross-build.\n \techo i586-pc-msdosdjgpp\n \texit ;;\n@@ -1248,6 +1279,9 @@ EOF\n     SX-8R:SUPER-UX:*:*)\n \techo sx8r-nec-superux${UNAME_RELEASE}\n \texit ;;\n+    SX-ACE:SUPER-UX:*:*)\n+\techo sxace-nec-superux${UNAME_RELEASE}\n+\texit ;;\n     Power*:Rhapsody:*:*)\n \techo powerpc-apple-rhapsody${UNAME_RELEASE}\n \texit ;;\n@@ -1261,9 +1295,9 @@ EOF\n \t    UNAME_PROCESSOR=powerpc\n \tfi\n \tif test `echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'` -le 10 ; then\n-\t    if [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n+\t    if [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n \t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n-\t\t    (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n \t\t    grep IS_64BIT_ARCH >/dev/null\n \t\tthen\n \t\t    case $UNAME_PROCESSOR in\n@@ -1285,7 +1319,7 @@ EOF\n \texit ;;\n     *:procnto*:*:* | *:QNX:[0123456789]*:*)\n \tUNAME_PROCESSOR=`uname -p`\n-\tif test \"$UNAME_PROCESSOR\" = \"x86\"; then\n+\tif test \"$UNAME_PROCESSOR\" = x86; then\n \t\tUNAME_PROCESSOR=i386\n \t\tUNAME_MACHINE=pc\n \tfi\n@@ -1316,7 +1350,7 @@ EOF\n \t# \"uname -m\" is not consistent, so use $cputype instead. 386\n \t# is converted to i386 for consistency with other x86\n \t# operating systems.\n-\tif test \"$cputype\" = \"386\"; then\n+\tif test \"$cputype\" = 386; then\n \t    UNAME_MACHINE=i386\n \telse\n \t    UNAME_MACHINE=\"$cputype\"\n@@ -1358,7 +1392,7 @@ EOF\n \techo i386-pc-xenix\n \texit ;;\n     i*86:skyos:*:*)\n-\techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'\n+\techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE} | sed -e 's/ .*$//'`\n \texit ;;\n     i*86:rdos:*:*)\n \techo ${UNAME_MACHINE}-pc-rdos\n@@ -1369,23 +1403,25 @@ EOF\n     x86_64:VMkernel:*:*)\n \techo ${UNAME_MACHINE}-unknown-esx\n \texit ;;\n+    amd64:Isilon\\ OneFS:*:*)\n+\techo x86_64-unknown-onefs\n+\texit ;;\n esac\n \n cat >&2 <<EOF\n $0: unable to guess system type\n \n-This script, last modified $timestamp, has failed to recognize\n-the operating system you are using. It is advised that you\n-download the most up to date version of the config scripts from\n+This script (version $timestamp), has failed to recognize the\n+operating system you are using. If your script is old, overwrite\n+config.guess and config.sub with the latest versions from:\n \n-  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\n+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n and\n-  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n \n-If the version you run ($0) is already up to date, please\n-send the following data and any information you think might be\n-pertinent to <config-patches@gnu.org> in order to provide the needed\n-information to handle your system.\n+If $0 has already been updated, send the following data and any\n+information you think might be pertinent to config-patches@gnu.org to\n+provide the necessary information to handle your system.\n \n config.guess timestamp = $timestamp\n "
      },
      {
        "sha": "e731537bf76bde92e429612dcffa5044ca743f88",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 17,
        "deletions": 14,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,24 +1,26 @@\n+depends_prefix=\"`dirname ${ac_site_file}`/..\"\n+\n cross_compiling=maybe\n host_alias=@HOST@\n ac_tool_prefix=${host_alias}-\n \n if test -z $with_boost; then\n-  with_boost=$prefix\n+  with_boost=$depends_prefix\n fi\n if test -z $with_qt_plugindir; then\n-  with_qt_plugindir=$prefix/plugins\n+  with_qt_plugindir=$depends_prefix/plugins\n fi\n if test -z $with_qt_translationdir; then\n-  with_qt_translationdir=$prefix/translations\n+  with_qt_translationdir=$depends_prefix/translations\n fi\n if test -z $with_qt_bindir; then\n-  with_qt_bindir=$prefix/native/bin\n+  with_qt_bindir=$depends_prefix/native/bin\n fi\n if test -z $with_protoc_bindir; then\n-  with_protoc_bindir=$prefix/native/bin\n+  with_protoc_bindir=$depends_prefix/native/bin\n fi\n if test -z $with_comparison_tool; then\n-  with_comparison_tool=$prefix/native/share/BitcoindComparisonTool_jar/BitcoindComparisonTool.jar\n+  with_comparison_tool=$depends_prefix/native/share/BitcoindComparisonTool_jar/BitcoindComparisonTool.jar\n fi\n \n \n@@ -41,31 +43,32 @@ fi\n \n if test x@host_os@ = xmingw32; then\n   if test -z $with_qt_incdir; then\n-    with_qt_incdir=$prefix/include\n+    with_qt_incdir=$depends_prefix/include\n   fi\n   if test -z $with_qt_libdir; then\n-    with_qt_libdir=$prefix/lib\n+    with_qt_libdir=$depends_prefix/lib\n   fi\n fi\n \n-PATH=$prefix/native/bin:$PATH\n+PATH=$depends_prefix/native/bin:$PATH\n PKG_CONFIG=\"`which pkg-config` --static\"\n \n # These two need to remain exported because pkg-config does not see them\n # otherwise. That means they must be unexported at the end of configure.ac to\n # avoid ruining the cache. Sigh.\n \n-export PKG_CONFIG_LIBDIR=$prefix/lib/pkgconfig\n-export PKG_CONFIG_PATH=$prefix/share/pkgconfig\n+export PKG_CONFIG_LIBDIR=$depends_prefix/lib/pkgconfig\n+export PKG_CONFIG_PATH=$depends_prefix/share/pkgconfig\n \n-CPPFLAGS=\"-I$prefix/include/ $CPPFLAGS\"\n-LDFLAGS=\"-L$prefix/lib $LDFLAGS\"\n+CPPFLAGS=\"-I$depends_prefix/include/ $CPPFLAGS\"\n+LDFLAGS=\"-L$depends_prefix/lib $LDFLAGS\"\n \n CC=\"@CC@\"\n CXX=\"@CXX@\"\n OBJC=\"${CC}\"\n OBJCXX=\"${CXX}\"\n-CCACHE=$prefix/native/bin/ccache\n+CCACHE=$depends_prefix/native/bin/ccache\n+PYTHONPATH=$depends_prefix/native/lib/python/dist-packages:$PYTHONPATH\n \n if test -n \"@AR@\"; then\n   AR=@AR@"
      },
      {
        "sha": "6d86a1e2f77b3f89d0ce8efa7741c611aa2d6edf",
        "filename": "depends/config.sub",
        "status": "modified",
        "additions": 38,
        "deletions": 17,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Configuration validation subroutine script.\n-#   Copyright 1992-2014 Free Software Foundation, Inc.\n+#   Copyright 1992-2016 Free Software Foundation, Inc.\n \n-timestamp='2014-05-01'\n+timestamp='2016-05-10'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -25,15 +25,15 @@ timestamp='2014-05-01'\n # of the GNU General Public License, version 3 (\"GPLv3\").\n \n \n-# Please send patches with a ChangeLog entry to config-patches@gnu.org.\n+# Please send patches to <config-patches@gnu.org>.\n #\n # Configuration subroutine to validate and canonicalize a configuration type.\n # Supply the specified configuration type as an argument.\n # If it is invalid, we print an error message on stderr and exit with code 1.\n # Otherwise, we print the canonical config type on stdout and succeed.\n \n # You can get the latest version of this script from:\n-# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n \n # This file is supposed to be the same for all GNU packages\n # and recognize all the CPU types, system types and aliases\n@@ -53,8 +53,7 @@ timestamp='2014-05-01'\n me=`echo \"$0\" | sed -e 's,.*/,,'`\n \n usage=\"\\\n-Usage: $0 [OPTION] CPU-MFR-OPSYS\n-       $0 [OPTION] ALIAS\n+Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n \n Canonicalize a configuration name.\n \n@@ -68,7 +67,7 @@ Report bugs and patches to <config-patches@gnu.org>.\"\n version=\"\\\n GNU config.sub ($timestamp)\n \n-Copyright 1992-2014 Free Software Foundation, Inc.\n+Copyright 1992-2016 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -117,7 +116,7 @@ maybe_os=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\2/'`\n case $maybe_os in\n   nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \\\n   linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \\\n-  knetbsd*-gnu* | netbsd*-gnu* | \\\n+  knetbsd*-gnu* | netbsd*-gnu* | netbsd*-eabi* | \\\n   kopensolaris*-gnu* | \\\n   storm-chaos* | os2-emx* | rtmk-nova*)\n     os=-$maybe_os\n@@ -255,12 +254,13 @@ case $basic_machine in\n \t| arc | arceb \\\n \t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv7[arm] \\\n \t| avr | avr32 \\\n+\t| ba \\\n \t| be32 | be64 \\\n \t| bfin \\\n \t| c4x | c8051 | clipper \\\n \t| d10v | d30v | dlx | dsp16xx \\\n-\t| epiphany \\\n-\t| fido | fr30 | frv \\\n+\t| e2k | epiphany \\\n+\t| fido | fr30 | frv | ft32 \\\n \t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n \t| hexagon \\\n \t| i370 | i860 | i960 | ia64 \\\n@@ -302,16 +302,18 @@ case $basic_machine in\n \t| pdp10 | pdp11 | pj | pjl \\\n \t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n \t| pyramid \\\n+\t| riscv32 | riscv64 \\\n \t| rl78 | rx \\\n \t| score \\\n-\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n+\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n \t| sh64 | sh64le \\\n \t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n \t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n \t| spu \\\n \t| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \\\n \t| ubicom32 \\\n \t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n+\t| visium \\\n \t| we32k \\\n \t| x86 | xc16x | xstormy16 | xtensa \\\n \t| z8k | z80)\n@@ -326,6 +328,9 @@ case $basic_machine in\n \tc6x)\n \t\tbasic_machine=tic6x-unknown\n \t\t;;\n+\tleon|leon[3-9])\n+\t\tbasic_machine=sparc-$basic_machine\n+\t\t;;\n \tm6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip)\n \t\tbasic_machine=$basic_machine-unknown\n \t\tos=-none\n@@ -371,12 +376,13 @@ case $basic_machine in\n \t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n \t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n \t| avr-* | avr32-* \\\n+\t| ba-* \\\n \t| be32-* | be64-* \\\n \t| bfin-* | bs2000-* \\\n \t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n \t| c8051-* | clipper-* | craynv-* | cydra-* \\\n \t| d10v-* | d30v-* | dlx-* \\\n-\t| elxsi-* \\\n+\t| e2k-* | elxsi-* \\\n \t| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \\\n \t| h8300-* | h8500-* \\\n \t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n@@ -423,19 +429,21 @@ case $basic_machine in\n \t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n \t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n \t| pyramid-* \\\n+\t| riscv32-* | riscv64-* \\\n \t| rl78-* | romp-* | rs6000-* | rx-* \\\n \t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n \t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n \t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n \t| sparclite-* \\\n-\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx?-* \\\n+\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \\\n \t| tahoe-* \\\n \t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n \t| tile*-* \\\n \t| tron-* \\\n \t| ubicom32-* \\\n \t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n \t| vax-* \\\n+\t| visium-* \\\n \t| we32k-* \\\n \t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n \t| xstormy16-* | xtensa*-* \\\n@@ -512,6 +520,9 @@ case $basic_machine in\n \t\tbasic_machine=i386-pc\n \t\tos=-aros\n \t\t;;\n+\tasmjs)\n+\t\tbasic_machine=asmjs-unknown\n+\t\t;;\n \taux)\n \t\tbasic_machine=m68k-apple\n \t\tos=-aux\n@@ -773,6 +784,9 @@ case $basic_machine in\n \t\tbasic_machine=m68k-isi\n \t\tos=-sysv\n \t\t;;\n+\tleon-*|leon[3-9]-*)\n+\t\tbasic_machine=sparc-`echo $basic_machine | sed 's/-.*//'`\n+\t\t;;\n \tm68knommu)\n \t\tbasic_machine=m68k-unknown\n \t\tos=-linux\n@@ -828,6 +842,10 @@ case $basic_machine in\n \t\tbasic_machine=powerpc-unknown\n \t\tos=-morphos\n \t\t;;\n+\tmoxiebox)\n+\t\tbasic_machine=moxie-unknown\n+\t\tos=-moxiebox\n+\t\t;;\n \tmsdos)\n \t\tbasic_machine=i386-pc\n \t\tos=-msdos\n@@ -1360,11 +1378,11 @@ case $os in\n \t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \\\n \t      | -sym* | -kopensolaris* | -plan9* \\\n \t      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \\\n-\t      | -aos* | -aros* \\\n+\t      | -aos* | -aros* | -cloudabi* | -sortix* \\\n \t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n \t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n \t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \\\n-\t      | -bitrig* | -openbsd* | -solidbsd* \\\n+\t      | -bitrig* | -openbsd* | -solidbsd* | -libertybsd* \\\n \t      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \\\n \t      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n \t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n@@ -1373,14 +1391,15 @@ case $os in\n \t      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n \t      | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \\\n \t      | -linux-newlib* | -linux-musl* | -linux-uclibc* \\\n-\t      | -uxpv* | -beos* | -mpeix* | -udk* \\\n+\t      | -uxpv* | -beos* | -mpeix* | -udk* | -moxiebox* \\\n \t      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \\\n \t      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \\\n \t      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \\\n \t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n \t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n \t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n-\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* | -tirtos*)\n+\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \\\n+\t      | -onefs* | -tirtos* | -phoenix*)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n \t-qnx*)\n@@ -1512,6 +1531,8 @@ case $os in\n \t\t;;\n \t-nacl*)\n \t\t;;\n+\t-ios)\n+\t\t;;\n \t-none)\n \t\t;;\n \t*)"
      },
      {
        "sha": "74f9ef3f205ec0e12f6ac9e75f03da81dd7d96e7",
        "filename": "depends/description.md",
        "status": "renamed",
        "additions": 9,
        "deletions": 11,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,28 +1,26 @@\n-This is a system of building and caching dependencies necessary for building\n-Bitcoin.\n-\n+This is a system of building and caching dependencies necessary for building Bitcoin. \n There are several features that make it different from most similar systems:\n \n-- It is designed to be builder and host agnostic\n+### It is designed to be builder and host agnostic\n \n In theory, binaries for any target OS/architecture can be created, from a\n builder running any OS/architecture. In practice, build-side tools must be\n-specified when the defaults don't fit, and packages must be ammended to work\n+specified when the defaults don't fit, and packages must be amended to work\n on new hosts. For now, a build architecture of x86_64 is assumed, either on\n Linux or OSX.\n \n-- No reliance on timestamps\n+### No reliance on timestamps\n \n File presence is used to determine what needs to be built. This makes the\n results distributable and easily digestable by automated builders.\n \n-- Each build only has its specified dependencies available at build-time.\n+### Each build only has its specified dependencies available at build-time.\n \n For each build, the sysroot is wiped and the (recursive) dependencies are\n installed. This makes each build deterministic, since there will never be any\n unknown files available to cause side-effects.\n \n-- Each package is cached and only rebuilt as needed.\n+### Each package is cached and only rebuilt as needed.\n \n Before building, a unique build-id is generated for each package. This id\n consists of a hash of all files used to build the package (Makefiles, packages,\n@@ -32,7 +30,7 @@ any other package that depends on it. If any of the main makefiles (Makefile,\n funcs.mk, etc) are changed, all packages will be rebuilt. After building, the\n results are cached into a tarball that can be re-used and distributed.\n \n-- Package build results are (relatively) deterministic.\n+### Package build results are (relatively) deterministic.\n \n Each package is configured and patched so that it will yield the same\n build-results with each consequent build, within a reasonable set of\n@@ -41,13 +39,13 @@ beyond the scope of this system. Additionally, the toolchain itself must be\n capable of deterministic results. When revisions are properly bumped, a cached\n build should represent an exact single payload.\n \n-- Sources are fetched and verified automatically\n+### Sources are fetched and verified automatically\n \n Each package must define its source location and checksum. The build will fail\n if the fetched source does not match. Sources may be pre-seeded and/or cached\n as desired.\n \n-- Self-cleaning\n+### Self-cleaning\n \n Build and staging dirs are wiped after use, and any previous version of a\n cached result is removed following a successful build. Automated builders",
        "previous_filename": "depends/README"
      },
      {
        "sha": "15e404e42dcf372e8d75f9c3945cf4bad9a21837",
        "filename": "depends/funcs.mk",
        "status": "modified",
        "additions": 29,
        "deletions": 16,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -19,43 +19,52 @@ define int_get_all_dependencies\n $(sort $(foreach dep,$(2),$(2) $(call int_get_all_dependencies,$(1),$($(dep)_dependencies))))\n endef\n \n+define fetch_file_inner\n+    ( mkdir -p $$($(1)_download_dir) && echo Fetching $(3) from $(2) && \\\n+    $(build_DOWNLOAD) \"$$($(1)_download_dir)/$(4).temp\" \"$(2)/$(3)\" && \\\n+    echo \"$(5)  $$($(1)_download_dir)/$(4).temp\" > $$($(1)_download_dir)/.$(4).hash && \\\n+    $(build_SHA256SUM) -c $$($(1)_download_dir)/.$(4).hash && \\\n+    mv $$($(1)_download_dir)/$(4).temp $$($(1)_source_dir)/$(4) && \\\n+    rm -rf $$($(1)_download_dir) )\n+endef\n+\n define fetch_file\n-(test -f $(SOURCES_PATH)/$(4) || \\\n-  ( mkdir -p $$($(1)_extract_dir) && \\\n-  ( $(build_DOWNLOAD) \"$$($(1)_extract_dir)/$(4).temp\" \"$(2)/$(3)\" || \\\n-    $(build_DOWNLOAD) \"$$($(1)_extract_dir)/$(4).temp\" \"$(FALLBACK_DOWNLOAD_PATH)/$(3)\" ) && \\\n-    echo \"$(5)  $$($(1)_extract_dir)/$(4).temp\" > $$($(1)_extract_dir)/.$(4).hash && \\\n-    $(build_SHA256SUM) -c $$($(1)_extract_dir)/.$(4).hash && \\\n-    mv $$($(1)_extract_dir)/$(4).temp $(SOURCES_PATH)/$(4) ))\n+    ( test -f $$($(1)_source_dir)/$(4) || \\\n+    ( $(call fetch_file_inner,$(1),$(2),$(3),$(4),$(5)) || \\\n+      $(call fetch_file_inner,$(1),$(FALLBACK_DOWNLOAD_PATH),$(3),$(4),$(5))))\n endef\n \n define int_get_build_recipe_hash\n-$(eval $(1)_all_file_checksums:=$(shell $(build_SHA256SUM) $(meta_depends) packages/$(1).mk $(addprefix $(PATCHES_PATH)/$(1)/,$($(1)_patches))))\n-$(eval $(1)_recipe_hash:=$(shell echo -n \"$($(1)_all_file_checksums)\" | $(build_SHA256SUM)))\n+$(eval $(1)_all_file_checksums:=$(shell $(build_SHA256SUM) $(meta_depends) packages/$(1).mk $(addprefix $(PATCHES_PATH)/$(1)/,$($(1)_patches)) | cut -d\" \" -f1))\n+$(eval $(1)_recipe_hash:=$(shell echo -n \"$($(1)_all_file_checksums)\" | $(build_SHA256SUM) | cut -d\" \" -f1))\n endef\n \n define int_get_build_id\n $(eval $(1)_dependencies += $($(1)_$(host_arch)_$(host_os)_dependencies) $($(1)_$(host_os)_dependencies))\n $(eval $(1)_all_dependencies:=$(call int_get_all_dependencies,$(1),$($($(1)_type)_native_toolchain) $($(1)_dependencies)))\n $(foreach dep,$($(1)_all_dependencies),$(eval $(1)_build_id_deps+=$(dep)-$($(dep)_version)-$($(dep)_recipe_hash)))\n-$(eval $(1)_build_id_long:=$(1)-$($(1)_version)-$($(1)_recipe_hash)-$(release_type) $($(1)_build_id_deps))\n+$(eval $(1)_build_id_long:=$(1)-$($(1)_version)-$($(1)_recipe_hash)-$(release_type) $($(1)_build_id_deps) $($($(1)_type)_id_string))\n $(eval $(1)_build_id:=$(shell echo -n \"$($(1)_build_id_long)\" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH)))\n final_build_id_long+=$($(package)_build_id_long)\n \n #compute package-specific paths\n $(1)_build_subdir?=.\n $(1)_download_file?=$($(1)_file_name)\n-$(1)_source:=$(SOURCES_PATH)/$($(1)_file_name)\n+$(1)_source_dir:=$(SOURCES_PATH)\n+$(1)_source:=$$($(1)_source_dir)/$($(1)_file_name)\n $(1)_staging_dir=$(base_staging_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)\n $(1)_staging_prefix_dir:=$$($(1)_staging_dir)$($($(1)_type)_prefix)\n $(1)_extract_dir:=$(base_build_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)\n+$(1)_download_dir:=$(base_download_dir)/$(1)-$($(1)_version)\n $(1)_build_dir:=$$($(1)_extract_dir)/$$($(1)_build_subdir)\n+$(1)_cached_checksum:=$(BASE_CACHE)/$(host)/$(1)/$(1)-$($(1)_version)-$($(1)_build_id).tar.gz.hash\n $(1)_patch_dir:=$(base_build_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)/.patches-$($(1)_build_id)\n $(1)_prefixbin:=$($($(1)_type)_prefix)/bin/\n $(1)_cached:=$(BASE_CACHE)/$(host)/$(1)/$(1)-$($(1)_version)-$($(1)_build_id).tar.gz\n+$(1)_all_sources=$($(1)_file_name) $($(1)_extra_sources)\n \n #stamps\n-$(1)_fetched=$$($(1)_extract_dir)/.stamp_fetched\n+$(1)_fetched=$(SOURCES_PATH)/download-stamps/.stamp_fetched-$(1)-$($(1)_file_name).hash\n $(1)_extracted=$$($(1)_extract_dir)/.stamp_extracted\n $(1)_preprocessed=$$($(1)_extract_dir)/.stamp_preprocessed\n $(1)_cleaned=$$($(1)_extract_dir)/.stamp_cleaned\n@@ -150,9 +159,11 @@ endef\n \n define int_add_cmds\n $($(1)_fetched):\n-\t$(AT)echo Fetching $(1)...\n \t$(AT)mkdir -p $$(@D) $(SOURCES_PATH)\n+\t$(AT)rm -f $$@\n+\t$(AT)touch $$@\n \t$(AT)cd $$(@D); $(call $(1)_fetch_cmds,$(1))\n+\t$(AT)cd $($(1)_source_dir); $(foreach source,$($(1)_all_sources),$(build_SHA256SUM) $(source) >> $$(@);)\n \t$(AT)touch $$@\n $($(1)_extracted): | $($(1)_fetched)\n \t$(AT)echo Extracting $(1)...\n@@ -193,17 +204,19 @@ $($(1)_cached): | $($(1)_dependencies) $($(1)_postprocessed)\n \t$(AT)rm -rf $$(@D) && mkdir -p $$(@D)\n \t$(AT)mv $$($(1)_staging_dir)/$$(@F) $$(@)\n \t$(AT)rm -rf $($(1)_staging_dir)\n+$($(1)_cached_checksum): $($(1)_cached)\n+\t$(AT)cd $$(@D); $(build_SHA256SUM) $$(<F) > $$(@)\n \n .PHONY: $(1)\n-$(1): | $($(1)_cached)\n-.SECONDARY: $($(1)_postprocessed) $($(1)_staged) $($(1)_built) $($(1)_configured) $($(1)_preprocessed) $($(1)_extracted) $($(1)_fetched)\n+$(1): | $($(1)_cached_checksum)\n+.SECONDARY: $($(1)_cached) $($(1)_postprocessed) $($(1)_staged) $($(1)_built) $($(1)_configured) $($(1)_preprocessed) $($(1)_extracted) $($(1)_fetched)\n \n endef\n \n # These functions create the build targets for each package. They must be\n # broken down into small steps so that each part is done for all packages\n # before moving on to the next step. Otherwise, a package's info\n-# (build-id for example) would only be avilable to another package if it\n+# (build-id for example) would only be available to another package if it\n # happened to be computed already.\n \n #set the type for host/build packages."
      },
      {
        "sha": "985649619ffec384ea55f076ff56fba43fd6c2e8",
        "filename": "depends/hosts/darwin.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,8 +1,9 @@\n-OSX_MIN_VERSION=10.6\n-OSX_SDK_VERSION=10.7\n+OSX_MIN_VERSION=10.7\n+OSX_SDK_VERSION=10.11\n OSX_SDK=$(SDK_PATH)/MacOSX$(OSX_SDK_VERSION).sdk\n-darwin_CC=clang -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK)\n-darwin_CXX=clang++ -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK)\n+LD64_VERSION=253.9\n+darwin_CC=clang -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION)\n+darwin_CXX=clang++ -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION) -stdlib=libc++\n \n darwin_CFLAGS=-pipe\n darwin_CXXFLAGS=$(darwin_CFLAGS)"
      },
      {
        "sha": "7c80362509e989e975e499e0242009e7e098ddf4",
        "filename": "depends/packages.md",
        "status": "renamed",
        "additions": 74,
        "deletions": 55,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -4,119 +4,137 @@ variables, and defining build commands.\n The package \"mylib\" will be used here as an example\n \n General tips:\n-mylib_foo is written as $(package)_foo in order to make recipes more similar.\n+- mylib_foo is written as $(package)_foo in order to make recipes more similar.\n \n-Identifiers:\n+## Identifiers\n Each package is required to define at least these variables:\n-  $(package)_version:\n+\n+    $(package)_version:\n     Version of the upstream library or program. If there is no version, a\n     placeholder such as 1.0 can be used.\n-  $(package)_download_path:\n+\n+    $(package)_download_path:\n     Location of the upstream source, without the file-name. Usually http or\n     ftp.\n-  $(package)_file_name:\n+\n+    $(package)_file_name:\n     The upstream source filename available at the download path.\n-  $(package)_sha256_hash:\n+\n+    $(package)_sha256_hash:\n     The sha256 hash of the upstream file\n \n These variables are optional:\n-  $(package)_build_subdir:\n+\n+    $(package)_build_subdir:\n     cd to this dir before running configure/build/stage commands.\n-  $(package)_download_file:\n+    \n+    $(package)_download_file:\n     The file-name of the upstream source if it differs from how it should be\n     stored locally. This can be used to avoid storing file-names with strange\n     characters.\n-  $(package)_dependencies:\n+    \n+    $(package)_dependencies:\n     Names of any other packages that this one depends on.\n-  $(package)_patches:\n+    \n+    $(package)_patches:\n     Filenames of any patches needed to build the package\n \n+    $(package)_extra_sources:\n+    Any extra files that will be fetched via $(package)_fetch_cmds. These are\n+    specified so that they can be fetched and verified via 'make download'.\n+\n \n-Build Variables:\n+## Build Variables:\n After defining the main identifiers, build variables may be added or customized\n before running the build commands. They should be added to a function called\n $(package)_set_vars. For example:\n \n-define $(package)_set_vars\n-...\n-endef\n+    define $(package)_set_vars\n+    ...\n+    endef\n \n Most variables can be prefixed with the host, architecture, or both, to make\n the modifications specific to that case. For example:\n \n-  Universal:         $(package)_cc=gcc\n-  Linux only:        $(package)_linux_cc=gcc\n-  x86_64 only:       $(package)_x86_64_cc = gcc\n-  x86_64 linux only: $(package)_x86_64_linux_cc = gcc\n+    Universal:     $(package)_cc=gcc\n+    Linux only:    $(package)_linux_cc=gcc\n+    x86_64 only:       $(package)_x86_64_cc = gcc\n+    x86_64 linux only: $(package)_x86_64_linux_cc = gcc\n \n These variables may be set to override or append their default values.\n-  $(package)_cc\n-  $(package)_cxx\n-  $(package)_objc\n-  $(package)_objcxx\n-  $(package)_ar\n-  $(package)_ranlib\n-  $(package)_libtool\n-  $(package)_nm\n-  $(package)_cflags\n-  $(package)_cxxflags\n-  $(package)_ldflags\n-  $(package)_cppflags\n-  $(package)_config_env\n-  $(package)_build_env\n-  $(package)_stage_env\n-  $(package)_build_opts\n-  $(package)_config_opts\n+\n+    $(package)_cc\n+    $(package)_cxx\n+    $(package)_objc\n+    $(package)_objcxx\n+    $(package)_ar\n+    $(package)_ranlib\n+    $(package)_libtool\n+    $(package)_nm\n+    $(package)_cflags\n+    $(package)_cxxflags\n+    $(package)_ldflags\n+    $(package)_cppflags\n+    $(package)_config_env\n+    $(package)_build_env\n+    $(package)_stage_env\n+    $(package)_build_opts\n+    $(package)_config_opts\n \n The *_env variables are used to add environment variables to the respective\n commands.\n \n Many variables respect a debug/release suffix as well, in order to use them for\n only the appropriate build config. For example:\n-  $(package)_cflags_release = -O3\n-  $(package)_cflags_i686_debug = -g\n-  $(package)_config_opts_release = --disable-debug\n+\n+    $(package)_cflags_release = -O3\n+    $(package)_cflags_i686_debug = -g\n+    $(package)_config_opts_release = --disable-debug\n \n These will be used in addition to the options that do not specify\n debug/release. All builds are considered to be release unless DEBUG=1 is set by\n-the user.\n+the user. Other variables may be defined as needed.\n \n-Other variables may be defined as needed.\n-\n-Build commands:\n+## Build commands:\n \n   For each build, a unique build dir and staging dir are created. For example,\n-  work/build/mylib/1.0-1adac830f6e and work/staging/mylib/1.0-1adac830f6e.\n+  `work/build/mylib/1.0-1adac830f6e` and `work/staging/mylib/1.0-1adac830f6e`.\n \n   The following build commands are available for each recipe:\n \n-  $(package)_fetch_cmds:\n+    $(package)_fetch_cmds:\n     Runs from: build dir\n     Fetch the source file. If undefined, it will be fetched and verified\n     against its hash.\n-  $(package)_extract_cmds:\n+\n+    $(package)_extract_cmds:\n     Runs from: build dir\n     Verify the source file against its hash and extract it. If undefined, the\n     source is assumed to be a tarball.\n-  $(package)_preprocess_cmds:\n+\n+    $(package)_preprocess_cmds:\n     Runs from: build dir/$(package)_build_subdir\n     Preprocess the source as necessary. If undefined, does nothing.\n-  $(package)_config_cmds:\n+\n+    $(package)_config_cmds:\n     Runs from: build dir/$(package)_build_subdir\n     Configure the source. If undefined, does nothing.\n-  $(package)_build_cmds:\n+\n+    $(package)_build_cmds:\n     Runs from: build dir/$(package)_build_subdir\n     Build the source. If undefined, does nothing.\n-  $(package)_stage_cmds:\n+\n+    $(package)_stage_cmds:\n     Runs from: build dir/$(package)_build_subdir\n     Stage the build results. If undefined, does nothing.\n \n   The following variables are available for each recipe:\n-  $(1)_staging_dir: package's destination sysroot path\n-  $(1)_staging_prefix_dir: prefix path inside of the package's staging dir\n-  $(1)_extract_dir: path to the package's extracted sources\n-  $(1)_build_dir: path where configure/build/stage commands will be run\n-  $(1)_patch_dir: path where the package's patches (if any) are found\n+    \n+    $(1)_staging_dir: package's destination sysroot path\n+    $(1)_staging_prefix_dir: prefix path inside of the package's staging dir\n+    $(1)_extract_dir: path to the package's extracted sources\n+    $(1)_build_dir: path where configure/build/stage commands will be run\n+    $(1)_patch_dir: path where the package's patches (if any) are found\n \n Notes on build commands:\n \n@@ -125,4 +143,5 @@ configure step to (usually) correctly configure automatically. Any\n $($(package)_config_opts) will be appended.\n \n Most autotools projects can be properly staged using:\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+\n+    $(MAKE) DESTDIR=$($(package)_staging_dir) install",
        "previous_filename": "depends/README.packages"
      },
      {
        "sha": "6c9876c2c7c7c0d884f49dd00de58b5a12d42a31",
        "filename": "depends/packages/bdb.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -9,10 +9,13 @@ define $(package)_set_vars\n $(package)_config_opts=--disable-shared --enable-cxx --disable-replication\n $(package)_config_opts_mingw32=--enable-mingw\n $(package)_config_opts_linux=--with-pic\n+$(package)_cxxflags=-std=c++11\n endef\n \n define $(package)_preprocess_cmds\n-  sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' dbinc/atomic.h\n+  sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' dbinc/atomic.h && \\\n+  sed -i.old 's/atomic_init/atomic_init_db/' dbinc/atomic.h mp/mp_region.c mp/mp_mvcc.c mp/mp_fget.c mutex/mut_method.c mutex/mut_tas.c && \\\n+  cp -f $(BASEDIR)/config.guess $(BASEDIR)/config.sub dist\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "ef1307c241b6619f53fc38a68a0d0a93d19fa3f2",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,9 +1,8 @@\n package=boost\n-$(package)_version=1_55_0\n-$(package)_download_path=http://sourceforge.net/projects/boost/files/boost/1.55.0\n+$(package)_version=1_59_0\n+$(package)_download_path=http://sourceforge.net/projects/boost/files/boost/1.59.0\n $(package)_file_name=$(package)_$($(package)_version).tar.bz2\n-$(package)_sha256_hash=fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52\n-$(package)_patches=darwin_boost_atomic-1.patch darwin_boost_atomic-2.patch\n+$(package)_sha256_hash=727a932322d94287b62abb1bd2d41723eec4356a7728909e38adb65ca25241ca\n \n define $(package)_set_vars\n $(package)_config_opts_release=variant=release\n@@ -21,13 +20,11 @@ $(package)_archiver_$(host_os)=$($(package)_ar)\n $(package)_toolset_darwin=darwin\n $(package)_archiver_darwin=$($(package)_libtool)\n $(package)_config_libraries=chrono,filesystem,program_options,system,thread,test\n-$(package)_cxxflags=-fvisibility=hidden\n+$(package)_cxxflags=-std=c++11 -fvisibility=hidden\n $(package)_cxxflags_linux=-fPIC\n endef\n \n define $(package)_preprocess_cmds\n-  patch -p2 < $($(package)_patch_dir)/darwin_boost_atomic-1.patch && \\\n-  patch -p2 < $($(package)_patch_dir)/darwin_boost_atomic-2.patch && \\\n   echo \"using $(boost_toolset_$(host_os)) : : $($(package)_cxx) : <cxxflags>\\\"$($(package)_cxxflags) $($(package)_cppflags)\\\" <linkflags>\\\"$($(package)_ldflags)\\\" <archiver>\\\"$(boost_archiver_$(host_os))\\\" <striper>\\\"$(host_STRIP)\\\"  <ranlib>\\\"$(host_RANLIB)\\\" <rc>\\\"$(host_WINDRES)\\\" : ;\" > user-config.jam\n endef\n "
      },
      {
        "sha": "bd2927563850b4c3e45bace08a15af56db4750da",
        "filename": "depends/packages/expat.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,8 +1,8 @@\n package=expat\n-$(package)_version=2.1.0\n-$(package)_download_path=http://sourceforge.net/projects/expat/files/expat/$($(package)_version)\n-$(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=823705472f816df21c8f6aa026dd162b280806838bb55b3432b0fb1fcca7eb86\n+$(package)_version=2.1.1\n+$(package)_download_path=https://downloads.sourceforge.net/project/expat/expat/$($(package)_version)\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=aff584e5a2f759dcfc6d48671e9529f6afe1e30b0cd6a4cec200cbe3f793de67\n \n define $(package)_set_vars\n $(package)_config_opts=--disable-static"
      },
      {
        "sha": "7cea28ff0bbf926f207745a8710fac3f5fd63041",
        "filename": "depends/packages/freetype.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,8 +1,8 @@\n package=freetype\n-$(package)_version=2.5.3\n-$(package)_download_path=http://downloads.sourceforge.net/$(package)\n+$(package)_version=2.6.3\n+$(package)_download_path=http://download.savannah.gnu.org/releases/$(package)\n $(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=c0848b29d52ef3ca27ad92e08351f023c5e24ce8cea7d8fe69fc96358e65f75e\n+$(package)_sha256_hash=371e707aa522acf5b15ce93f11183c725b8ed1ee8546d7b3af549863045863a2\n \n define $(package)_set_vars\n   $(package)_config_opts=--without-zlib --without-png --disable-static"
      },
      {
        "sha": "2e9be1e98ccedda520459b8d4deed2f686473746",
        "filename": "depends/packages/libevent.mk",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,31 @@\n+package=libevent\n+$(package)_version=2.0.22\n+$(package)_download_path=https://github.com/libevent/libevent/releases/download/release-2.0.22-stable\n+$(package)_file_name=$(package)-$($(package)_version)-stable.tar.gz\n+$(package)_sha256_hash=71c2c49f0adadacfdbe6332a372c38cf9c8b7895bb73dabeaa53cdcc1d4e1fa3\n+$(package)_patches=reuseaddr.patch\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/reuseaddr.patch\n+endef\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress\n+  $(package)_config_opts_release=--disable-debug-mode\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+endef"
      },
      {
        "sha": "28f2bd6f25343de809c9b2c568bd88b778bb26ec",
        "filename": "depends/packages/libxcb.mk",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -13,8 +13,13 @@ define $(package)_preprocess_cmds\n   sed \"s/pthread-stubs//\" -i configure\n endef\n \n+# Don't install xcb headers to the default path in order to work around a qt\n+# build issue: https://bugreports.qt.io/browse/QTBUG-34748\n+# When using qt's internal libxcb, it may end up finding the real headers in\n+# depends staging. Use a non-default path to avoid that.\n+\n define $(package)_config_cmds\n-  $($(package)_autoconf)\n+  $($(package)_autoconf) --includedir=$(host_prefix)/include/xcb-shared\n endef\n \n define $(package)_build_cmds"
      },
      {
        "sha": "e34cf7be2f1bf42606c5d6549c1f8022f1780cbe",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,12 +1,12 @@\n package=miniupnpc\n-$(package)_version=1.9.20140701\n+$(package)_version=2.0\n $(package)_download_path=http://miniupnp.free.fr/files\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=26f3985bad7768b8483b793448ae49414cdc4451d0ec83e7c1944367e15f9f07\n+$(package)_sha256_hash=d434ceb8986efbe199c5ca53f90ed53eab290b1e6d0530b717eb6fa49d61f93b\n \n define $(package)_set_vars\n $(package)_build_opts=CC=\"$($(package)_cc)\"\n-$(package)_build_opts_darwin=OS=Darwin\n+$(package)_build_opts_darwin=OS=Darwin LIBTOOL=\"$($(package)_libtool)\"\n $(package)_build_opts_mingw32=-f Makefile.mingw\n $(package)_build_env+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags)\" AR=\"$($(package)_ar)\"\n endef"
      },
      {
        "sha": "eb8672d556a9cd03b57cb3b6e11d706183345c80",
        "filename": "depends/packages/native_biplist.mk",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,15 @@\n+package=native_biplist\n+$(package)_version=0.9\n+$(package)_download_path=https://pypi.python.org/packages/source/b/biplist\n+$(package)_file_name=biplist-$($(package)_version).tar.gz\n+$(package)_sha256_hash=b57cadfd26e4754efdf89e9e37de87885f9b5c847b2615688ca04adfaf6ca604\n+$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n+\n+define $(package)_build_cmds\n+    python setup.py build\n+endef\n+\n+define $(package)_stage_cmds\n+    mkdir -p $($(package)_install_libdir) && \\\n+    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n+endef"
      },
      {
        "sha": "9216e175983a9b8555778d731aa0110ff64ac364",
        "filename": "depends/packages/native_ccache.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,8 +1,8 @@\n package=native_ccache\n-$(package)_version=3.1.9\n+$(package)_version=3.2.5\n $(package)_download_path=http://samba.org/ftp/ccache\n $(package)_file_name=ccache-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=04d3e2e438ac8d4cc4b110b68cdd61bd59226c6588739a4a386869467f5ced7c\n+$(package)_sha256_hash=7a553809e90faf9de3a23ee9c5b5f786cfd4836bf502744bedb824a24bee1097\n \n define $(package)_set_vars\n $(package)_config_opts="
      },
      {
        "sha": "797480c25eb2f3ff4fd559cb92b4e7a3aae75300",
        "filename": "depends/packages/native_cctools.mk",
        "status": "modified",
        "additions": 40,
        "deletions": 56,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,61 +1,44 @@\n package=native_cctools\n-$(package)_version=809\n-$(package)_download_path=http://www.opensource.apple.com/tarballs/cctools\n-$(package)_file_name=cctools-$($(package)_version).tar.gz\n-$(package)_sha256_hash=03ba62749b843b131c7304a044a98c6ffacd65b1399b921d69add0375f79d8ad\n-$(package)_build_subdir=cctools2odcctools/odcctools-$($(package)_version)\n-$(package)_dependencies=native_libuuid native_openssl\n-$(package)_ld64_download_file=ld64-127.2.tar.gz\n-$(package)_ld64_download_path=http://www.opensource.apple.com/tarballs/ld64\n-$(package)_ld64_file_name=$($(package)_ld64_download_file)\n-$(package)_ld64_sha256_hash=97b75547b2bd761306ab3e15ae297f01e7ab9760b922bc657f4ef72e4e052142\n-$(package)_dyld_download_file=dyld-195.5.tar.gz\n-$(package)_dyld_download_path=http://www.opensource.apple.com/tarballs/dyld\n-$(package)_dyld_file_name=$($(package)_dyld_download_file)\n-$(package)_dyld_sha256_hash=2cf0484c87cf79b606b351a7055a247dae84093ae92c747a74e0cde2c8c8f83c\n-$(package)_toolchain4_download_file=10cc648683617cca8bcbeae507888099b41b530c.tar.gz\n-$(package)_toolchain4_download_path=https://github.com/mingwandroid/toolchain4/archive\n-$(package)_toolchain4_file_name=toolchain4-1.tar.gz\n-$(package)_toolchain4_sha256_hash=18406961fd4a1ec5c7ea35c91d6a80a2f8bb797a2bd243a610bd75e13eff9aca\n-$(package)_clang_download_file=clang+llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n-$(package)_clang_download_path=http://llvm.org/releases/3.2\n-$(package)_clang_file_name=clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n-$(package)_clang_sha256_hash=b9d57a88f9514fa1f327a1a703756d0c1c960f4c58494a5bd80313245d13ffff\n+$(package)_version=807d6fd1be5d2224872e381870c0a75387fe05e6\n+$(package)_download_path=https://github.com/theuni/cctools-port/archive\n+$(package)_file_name=$($(package)_version).tar.gz\n+$(package)_sha256_hash=a09c9ba4684670a0375e42d9d67e7f12c1f62581a27f28f7c825d6d7032ccc6a\n+$(package)_build_subdir=cctools\n+$(package)_clang_version=3.7.1\n+$(package)_clang_download_path=http://llvm.org/releases/$($(package)_clang_version)\n+$(package)_clang_download_file=clang+llvm-$($(package)_clang_version)-x86_64-linux-gnu-ubuntu-14.04.tar.xz\n+$(package)_clang_file_name=clang-llvm-$($(package)_clang_version)-x86_64-linux-gnu-ubuntu-14.04.tar.xz\n+$(package)_clang_sha256_hash=99b28a6b48e793705228a390471991386daa33a9717cd9ca007fcdde69608fd9\n+$(package)_extra_sources=$($(package)_clang_file_name)\n \n define $(package)_fetch_cmds\n $(call fetch_file,$(package),$($(package)_download_path),$($(package)_download_file),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_ld64_download_path),$($(package)_ld64_download_file),$($(package)_ld64_file_name),$($(package)_ld64_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_dyld_download_path),$($(package)_dyld_download_file),$($(package)_dyld_file_name),$($(package)_dyld_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_clang_download_path),$($(package)_clang_download_file),$($(package)_clang_file_name),$($(package)_clang_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_toolchain4_download_path),$($(package)_toolchain4_download_file),$($(package)_toolchain4_file_name),$($(package)_toolchain4_sha256_hash))\n+$(call fetch_file,$(package),$($(package)_clang_download_path),$($(package)_clang_download_file),$($(package)_clang_file_name),$($(package)_clang_sha256_hash))\n endef\n \n-define $(package)_set_vars\n-$(package)_config_opts=--target=$(host) --with-sysroot=$(OSX_SDK)\n-$(package)_cflags+=-m32\n-$(package)_cxxflags+=-m32\n-$(package)_cppflags+=-D__DARWIN_UNIX03 -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS\n-$(package)_ldflags+=-m32 -Wl,-rpath=\\\\$$$$$$$$\\$$$$$$$$ORIGIN/../lib\n-$(package)_ldflags+=-L$$(native_cctools_extract_dir)/clang+llvm-3.2-x86-linux-ubuntu-12.04/lib\n-endef\n define $(package)_extract_cmds\n-  tar --strip-components=1 -xf $(SOURCES_PATH)/$($(package)_toolchain4_file_name) && \\\n-  ln -sf $($(package)_source) cctools2odcctools/$($(package)_file_name) && \\\n-  ln -sf $(SOURCES_PATH)/$($(package)_ld64_file_name) cctools2odcctools/$($(package)_ld64_file_name) && \\\n-  ln -sf $(SOURCES_PATH)/$($(package)_dyld_file_name) cctools2odcctools/$($(package)_dyld_file_name) && \\\n-  tar xf $(SOURCES_PATH)/$($(package)_clang_file_name) && \\\n-  mkdir -p $(SDK_PATH) sdks &&\\\n-  cd sdks; ln -sf $(OSX_SDK) MacOSX$(OSX_SDK_VERSION).sdk\n+  mkdir -p $($(package)_extract_dir) && \\\n+  echo \"$($(package)_sha256_hash)  $($(package)_source)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  echo \"$($(package)_clang_sha256_hash)  $($(package)_source_dir)/$($(package)_clang_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  $(build_SHA256SUM) -c $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  mkdir -p toolchain/bin toolchain/lib/clang/3.5/include && \\\n+  tar --strip-components=1 -C toolchain -xf $($(package)_source_dir)/$($(package)_clang_file_name) && \\\n+  rm -f toolchain/lib/libc++abi.so* && \\\n+  echo \"#!/bin/sh\" > toolchain/bin/$(host)-dsymutil && \\\n+  echo \"exit 0\" >> toolchain/bin/$(host)-dsymutil && \\\n+  chmod +x toolchain/bin/$(host)-dsymutil && \\\n+  tar --strip-components=1 -xf $($(package)_source)\n+endef\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--target=$(host) --disable-lto-support\n+$(package)_ldflags+=-Wl,-rpath=\\\\$$$$$$$$\\$$$$$$$$ORIGIN/../lib\n+$(package)_cc=$($(package)_extract_dir)/toolchain/bin/clang\n+$(package)_cxx=$($(package)_extract_dir)/toolchain/bin/clang++\n endef\n \n define $(package)_preprocess_cmds\n-  sed -i \"s|GCC_DIR|LLVM_CLANG_DIR|g\" cctools2odcctools/extract.sh && \\\n-  sed -i \"s|llvmgcc42-2336.1|clang+llvm-3.2-x86-linux-ubuntu-12.04|g\" cctools2odcctools/extract.sh && \\\n-  sed -i \"s|/llvmCore/include/llvm-c|/include/llvm-c \\$$$${LLVM_CLANG_DIR}/include/llvm |\" cctools2odcctools/extract.sh && \\\n-  sed -i \"s|fAC_INIT|AC_INIT|\" cctools2odcctools/files/configure.ac && \\\n-  sed -i 's/\\# Dynamically linked LTO/\\t ;\\&\\n\\t linux*)\\n# Dynamically linked LTO/' cctools2odcctools/files/configure.ac && \\\n-  cd cctools2odcctools; ./extract.sh --osxver $(OSX_SDK_VERSION) && \\\n-  sed -i \"s|define\\tPC|define\\tPC_|\" odcctools-809/include/architecture/sparc/reg.h\n+  cd $($(package)_build_subdir); ./autogen.sh\n endef\n \n define $(package)_config_cmds\n@@ -68,13 +51,14 @@ endef\n \n define $(package)_stage_cmds\n   $(MAKE) DESTDIR=$($(package)_staging_dir) install && \\\n-  cd ../../clang+llvm-3.2-x86-linux-ubuntu-12.04 && \\\n-  mkdir -p $($(package)_staging_prefix_dir)/lib/clang/3.2/include && \\\n-  mkdir -p $($(package)_staging_prefix_dir)/bin && \\\n-  cp -P bin/clang bin/clang++ $($(package)_staging_prefix_dir)/bin/ &&\\\n+  cd $($(package)_extract_dir)/toolchain && \\\n+  mkdir -p $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include && \\\n+  mkdir -p $($(package)_staging_prefix_dir)/bin $($(package)_staging_prefix_dir)/include && \\\n+  cp bin/clang $($(package)_staging_prefix_dir)/bin/ &&\\\n+  cp -P bin/clang++ $($(package)_staging_prefix_dir)/bin/ &&\\\n   cp lib/libLTO.so $($(package)_staging_prefix_dir)/lib/ && \\\n-  cp lib/clang/3.2/include/* $($(package)_staging_prefix_dir)/lib/clang/3.2/include/ && \\\n-  echo \"#!/bin/sh\" > $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil && \\\n-  echo \"exit 0\" >> $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil && \\\n-  chmod +x $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil\n+  cp -rf lib/clang/$($(package)_clang_version)/include/* $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include/ && \\\n+  cp bin/llvm-dsymutil $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil && \\\n+  if `test -d include/c++/`; then cp -rf include/c++/ $($(package)_staging_prefix_dir)/include/; fi && \\\n+  if `test -d lib/c++/`; then cp -rf lib/c++/ $($(package)_staging_prefix_dir)/lib/; fi\n endef"
      },
      {
        "sha": "cf694edb30e92ecf7a54a4ccdfba172a3eed44b6",
        "filename": "depends/packages/native_cdrkit.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_cdrkit.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_cdrkit.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cdrkit.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,6 +1,6 @@\n package=native_cdrkit\n $(package)_version=1.1.11\n-$(package)_download_path=http://distro.ibiblio.org/fatdog/source/c\n+$(package)_download_path=http://distro.ibiblio.org/fatdog/source/600/c\n $(package)_file_name=cdrkit-$($(package)_version).tar.bz2\n $(package)_sha256_hash=b50d64c214a65b1a79afe3a964c691931a4233e2ba605d793eb85d0ac3652564\n $(package)_patches=cdrkit-deterministic.patch"
      },
      {
        "sha": "e0ae0cec700e921cdfc6c4bdc9760467655dcb4d",
        "filename": "depends/packages/native_comparisontool.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_comparisontool.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_comparisontool.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_comparisontool.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,8 +1,8 @@\n package=native_comparisontool\n-$(package)_version=0f7b5d8\n-$(package)_download_path=https://github.com/TheBlueMatt/test-scripts/raw/38b490a2599d422b12d5ce8f165792f63fd8f54f\n+$(package)_version=8c6666f\n+$(package)_download_path=https://github.com/theuni/bitcoind-comparisontool/raw/master\n $(package)_file_name=pull-tests-$($(package)_version).jar\n-$(package)_sha256_hash=ecd43b988a8b673b483e4f69f931596360a5e90fc415c75c4c259faa690df198\n+$(package)_sha256_hash=a865332b3827abcde684ab79f5f43c083b0b6a4c97ff5508c79f29fee24f11cd\n $(package)_install_dirname=BitcoindComparisonTool_jar\n $(package)_install_filename=BitcoindComparisonTool.jar\n \n@@ -17,5 +17,5 @@ endef\n \n define $(package)_stage_cmds\n   mkdir -p $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname) && \\\n-  mv $(SOURCES_PATH)/$($(package)_file_name) $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname)/$($(package)_install_filename)\n+  cp $($(package)_source) $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname)/$($(package)_install_filename)\n endef"
      },
      {
        "sha": "8e902af1b6e9af0f5c4cb91cf075365c0815f828",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,17 @@\n+package=native_ds_store\n+$(package)_version=c80c23706eae\n+$(package)_download_path=https://bitbucket.org/al45tair/ds_store/get\n+$(package)_download_file=$($(package)_version).tar.bz2\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=ce1aa412211610c63d567bbe3e06213006a2d5ba5d76d89399c151b5472cb0da\n+$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n+$(package)_dependencies=native_biplist\n+\n+define $(package)_build_cmds\n+    python setup.py build\n+endef\n+\n+define $(package)_stage_cmds\n+    mkdir -p $($(package)_install_libdir) && \\\n+    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n+endef"
      },
      {
        "sha": "b25540f80dfab25087062ea064fb9cb6d31a5679",
        "filename": "depends/packages/native_libuuid.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/depends/packages/native_libuuid.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/depends/packages/native_libuuid.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libuuid.mk?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,24 +0,0 @@\n-package:=native_libuuid\n-$(package)_version=1.41.14\n-$(package)_download_path=http://downloads.sourceforge.net/e2fsprogs\n-$(package)_file_name=e2fsprogs-libs-$($(package)_version).tar.gz\n-$(package)_sha256_hash=dbc7a138a3218d9b80a0626b5b692d76934d6746d8cbb762751be33785d8d9f5\n-\n-define $(package)_set_vars\n-$(package)_config_opts=--disable-elf-shlibs --disable-uuidd\n-$(package)_cflags+=-m32\n-$(package)_ldflags+=-m32\n-$(package)_cxxflags+=-m32\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -C lib/uuid\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) -C lib/uuid install\n-endef"
      },
      {
        "sha": "85a8a402bf92cefb0b406a6d8ddefa87984157cc",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,21 @@\n+package=native_mac_alias\n+$(package)_version=1.1.0\n+$(package)_download_path=https://bitbucket.org/al45tair/mac_alias/get\n+$(package)_download_file=v$($(package)_version).tar.bz2\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=87ad827e66790028361e43fc754f68ed041a9bdb214cca03c853f079b04fb120\n+$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n+$(package)_patches=python3.patch\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/python3.patch\n+endef\n+\n+define $(package)_build_cmds\n+    python setup.py build\n+endef\n+\n+define $(package)_stage_cmds\n+    mkdir -p $($(package)_install_libdir) && \\\n+    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n+endef"
      },
      {
        "sha": "1f25d6afccd600956caf1db9322d8c5240e5472d",
        "filename": "depends/packages/native_openssl.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/depends/packages/native_openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/depends/packages/native_openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_openssl.mk?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,21 +0,0 @@\n-package=native_openssl\n-$(package)_version=1.0.1h\n-$(package)_download_path=https://www.openssl.org/source\n-$(package)_file_name=openssl-$($(package)_version).tar.gz\n-$(package)_sha256_hash=9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093\n-define $(package)_set_vars\n-$(package)_build_config_opts= --prefix=$(build_prefix) no-zlib no-shared no-krb5C linux-generic32 -m32\n-endef\n-\n-define $(package)_config_cmds\n-  ./Configure $($(package)_build_config_opts) &&\\\n-  sed -i \"s|engines apps test|engines|\" Makefile\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -j1\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) INSTALL_PREFIX=$($(package)_staging_dir) -j1 install_sw\n-endef"
      },
      {
        "sha": "ce50b366fa74f3fbed838624f9d7ec58396ace02",
        "filename": "depends/packages/native_protobuf.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/native_protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_protobuf.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,8 +1,8 @@\n package=native_protobuf\n-$(package)_version=2.5.0\n-$(package)_download_path=https://protobuf.googlecode.com/files\n+$(package)_version=2.6.1\n+$(package)_download_path=https://github.com/google/protobuf/releases/download/v$($(package)_version)\n $(package)_file_name=protobuf-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677\n+$(package)_sha256_hash=ee445612d544d885ae240ffbcbf9267faa9f593b7b101f21d58beceb92661910\n \n define $(package)_set_vars\n $(package)_config_opts=--disable-shared"
      },
      {
        "sha": "5ee9f17a63235a9d68f74389566f1f257c182d3c",
        "filename": "depends/packages/openssl.mk",
        "status": "modified",
        "additions": 44,
        "deletions": 7,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,26 +1,63 @@\n package=openssl\n-$(package)_version=1.0.1j\n+$(package)_version=1.0.1k\n $(package)_download_path=https://www.openssl.org/source\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=1b60ca8789ba6f03e8ef20da2293b8dc131c39d83814e775069f02d26354edf3\n+$(package)_sha256_hash=8f9faeaebad088e772f4ef5e38252d472be4d878c6b3a2718c10a4fcebe7a41c\n \n define $(package)_set_vars\n $(package)_config_env=AR=\"$($(package)_ar)\" RANLIB=\"$($(package)_ranlib)\" CC=\"$($(package)_cc)\"\n-$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl no-zlib no-shared no-dso\n-$(package)_config_opts+=no-krb5 no-camellia no-capieng no-cast no-cms no-dtls1 no-gost no-gmp no-heartbeats no-idea no-jpake no-md2\n-$(package)_config_opts+=no-mdc2 no-rc5 no-rdrand no-rfc3779 no-rsax no-sctp no-seed no-sha0 no-static_engine no-whirlpool no-rc2 no-rc4 no-ssl2 no-ssl3\n+$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl\n+$(package)_config_opts+=no-camellia\n+$(package)_config_opts+=no-capieng\n+$(package)_config_opts+=no-cast\n+$(package)_config_opts+=no-comp\n+$(package)_config_opts+=no-dso\n+$(package)_config_opts+=no-dtls1\n+$(package)_config_opts+=no-ec_nistp_64_gcc_128\n+$(package)_config_opts+=no-gost\n+$(package)_config_opts+=no-gmp\n+$(package)_config_opts+=no-heartbeats\n+$(package)_config_opts+=no-idea\n+$(package)_config_opts+=no-jpake\n+$(package)_config_opts+=no-krb5\n+$(package)_config_opts+=no-libunbound\n+$(package)_config_opts+=no-md2\n+$(package)_config_opts+=no-mdc2\n+$(package)_config_opts+=no-rc4\n+$(package)_config_opts+=no-rc5\n+$(package)_config_opts+=no-rdrand\n+$(package)_config_opts+=no-rfc3779\n+$(package)_config_opts+=no-rsax\n+$(package)_config_opts+=no-sctp\n+$(package)_config_opts+=no-seed\n+$(package)_config_opts+=no-sha0\n+$(package)_config_opts+=no-shared\n+$(package)_config_opts+=no-ssl-trace\n+$(package)_config_opts+=no-ssl2\n+$(package)_config_opts+=no-ssl3\n+$(package)_config_opts+=no-static_engine\n+$(package)_config_opts+=no-store\n+$(package)_config_opts+=no-unit-test\n+$(package)_config_opts+=no-weak-ssl-ciphers\n+$(package)_config_opts+=no-whirlpool\n+$(package)_config_opts+=no-zlib\n+$(package)_config_opts+=no-zlib-dynamic\n $(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n-$(package)_config_opts_linux=-fPIC\n+$(package)_config_opts_linux=-fPIC -Wa,--noexecstack\n $(package)_config_opts_x86_64_linux=linux-x86_64\n $(package)_config_opts_i686_linux=linux-generic32\n $(package)_config_opts_arm_linux=linux-generic32\n+$(package)_config_opts_aarch64_linux=linux-generic64\n+$(package)_config_opts_mipsel_linux=linux-generic32\n+$(package)_config_opts_mips_linux=linux-generic32\n+$(package)_config_opts_powerpc_linux=linux-generic32\n $(package)_config_opts_x86_64_darwin=darwin64-x86_64-cc\n $(package)_config_opts_x86_64_mingw32=mingw64\n $(package)_config_opts_i686_mingw32=mingw\n endef\n \n define $(package)_preprocess_cmds\n-  sed -i.old \"/define DATE/d\" crypto/Makefile && \\\n+  sed -i.old \"/define DATE/d\" util/mkbuildinf.pl && \\\n   sed -i.old \"s|engines apps test|engines|\" Makefile.org\n endef\n "
      },
      {
        "sha": "ac43ef4a2e304ec166b8b2bc8a8d6c7f492c8a86",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,23 +1,24 @@\n-packages:=boost openssl\n+packages:=boost openssl libevent\n+darwin_packages:=zeromq\n+linux_packages:=zeromq\n native_packages := native_ccache native_comparisontool\n \n qt_native_packages = native_protobuf\n qt_packages = qrencode protobuf\n \n-qt46_linux_packages = qt46 expat dbus libxcb xcb_proto libXau xproto freetype libX11 xextproto libXext xtrans libICE libSM\n-qt5_linux_packages= qt expat dbus libxcb xcb_proto libXau xproto freetype fontconfig libX11 xextproto libXext xtrans\n+qt_x86_64_linux_packages:=qt expat dbus libxcb xcb_proto libXau xproto freetype fontconfig libX11 xextproto libXext xtrans\n+qt_i686_linux_packages:=$(qt_x86_64_linux_packages)\n \n qt_darwin_packages=qt\n qt_mingw32_packages=qt\n \n-qt_linux_$(USE_LINUX_STATIC_QT5):=$(qt5_linux_packages)\n-qt_linux_:=$(qt46_linux_packages)\n-qt_linux_packages:=$(qt_linux_$(USE_LINUX_STATIC_QT5))\n \n wallet_packages=bdb\n \n upnp_packages=miniupnpc\n \n+darwin_native_packages = native_biplist native_ds_store native_mac_alias\n+\n ifneq ($(build_os),darwin)\n-darwin_native_packages=native_libuuid native_openssl native_cctools native_cdrkit native_libdmg-hfsplus\n+darwin_native_packages += native_cctools native_cdrkit native_libdmg-hfsplus\n endif"
      },
      {
        "sha": "54d3fd924519be2ed612830e24c3baf25629c7fa",
        "filename": "depends/packages/protobuf.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -4,6 +4,7 @@ $(package)_download_path=$(native_$(package)_download_path)\n $(package)_file_name=$(native_$(package)_file_name)\n $(package)_sha256_hash=$(native_$(package)_sha256_hash)\n $(package)_dependencies=native_$(package)\n+$(package)_cxxflags=-std=c++11\n \n define $(package)_set_vars\n   $(package)_config_opts=--disable-shared --with-protoc=$(build_prefix)/bin/protoc"
      },
      {
        "sha": "7b21247133f42754d8c67ad940e2ce77357acb98",
        "filename": "depends/packages/qrencode.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,8 +1,8 @@\n package=qrencode\n-$(package)_version=3.4.3\n+$(package)_version=3.4.4\n $(package)_download_path=https://fukuchi.org/works/qrencode/\n $(package)_file_name=qrencode-$(qrencode_version).tar.bz2\n-$(package)_sha256_hash=dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98\n+$(package)_sha256_hash=efe5188b1ddbcbf98763b819b146be6a90481aac30cfc8d858ab78a19cde1fa5\n \n define $(package)_set_vars\n $(package)_config_opts=--disable-shared -without-tools --disable-sdltest"
      },
      {
        "sha": "d41d0b9ea5b15cce2685bd96d4d028d2ff423d5e",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 114,
        "deletions": 34,
        "changes": 148,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,61 +1,143 @@\n PACKAGE=qt\n-$(package)_version=5.2.1\n-$(package)_download_path=http://download.qt-project.org/official_releases/qt/5.2/$($(package)_version)/single\n-$(package)_file_name=$(package)-everywhere-opensource-src-$($(package)_version).tar.gz\n-$(package)_sha256_hash=84e924181d4ad6db00239d87250cc89868484a14841f77fb85ab1f1dbdcd7da1\n+$(package)_version=5.6.1\n+$(package)_download_path=http://download.qt.io/official_releases/qt/5.6/$($(package)_version)/submodules\n+$(package)_suffix=opensource-src-$($(package)_version).tar.gz\n+$(package)_file_name=qtbase-$($(package)_suffix)\n+$(package)_sha256_hash=0ac67cf8d66d52b995f96c31c4b48117a1afb3db99eaa93e20ccd8f7f55f7fde\n $(package)_dependencies=openssl\n-$(package)_linux_dependencies=freetype fontconfig dbus libxcb libX11 xproto libXext\n+$(package)_linux_dependencies=freetype fontconfig libxcb libX11 xproto libXext\n $(package)_build_subdir=qtbase\n $(package)_qt_libs=corelib network widgets gui plugins testlib\n-$(package)_patches=mac-qmake.conf fix-xcb-include-order.patch qt5-tablet-osx.patch\n+$(package)_patches=mac-qmake.conf mingw-uuidof.patch pidlist_absolute.patch fix-xcb-include-order.patch fix_qt_pkgconfig.patch\n+\n+$(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n+$(package)_qttranslations_sha256_hash=dcc1534d247babca1840cb6d0a000671801a341ea352d0535474f86adadaf028\n+\n+\n+$(package)_qttools_file_name=qttools-$($(package)_suffix)\n+$(package)_qttools_sha256_hash=e0f845de28c31230dfa428f0190ccb3b91d1fc02481b1f064698ae4ef8376aa1\n+\n+$(package)_extra_sources  = $($(package)_qttranslations_file_name)\n+$(package)_extra_sources += $($(package)_qttools_file_name)\n \n define $(package)_set_vars\n $(package)_config_opts_release = -release\n $(package)_config_opts_debug   = -debug\n-$(package)_config_opts += -opensource -confirm-license -no-audio-backend -no-sql-tds -no-glib -no-icu\n-$(package)_config_opts += -no-cups -no-iconv -no-gif -no-audio-backend -no-freetype\n-$(package)_config_opts += -no-sql-sqlite -no-nis -no-cups -no-iconv -no-pch\n-$(package)_config_opts += -no-gif -no-feature-style-plastique\n-$(package)_config_opts += -no-qml-debug -no-pch -no-nis -nomake examples -nomake tests\n-$(package)_config_opts += -no-feature-style-cde -no-feature-style-s60 -no-feature-style-motif\n-$(package)_config_opts += -no-feature-style-windowsmobile -no-feature-style-windowsce\n-$(package)_config_opts += -no-feature-style-cleanlooks\n-$(package)_config_opts += -no-sql-db2 -no-sql-ibase -no-sql-oci -no-sql-tds -no-sql-mysql\n-$(package)_config_opts += -no-sql-odbc -no-sql-psql -no-sql-sqlite -no-sql-sqlite2\n-$(package)_config_opts += -skip qtsvg -skip qtwebkit -skip qtwebkit-examples -skip qtserialport\n-$(package)_config_opts += -skip qtdeclarative -skip qtmultimedia -skip qtimageformats -skip qtx11extras\n-$(package)_config_opts += -skip qtlocation -skip qtsensors -skip qtquick1 -skip qtxmlpatterns\n-$(package)_config_opts += -skip qtquickcontrols -skip qtactiveqt -skip qtconnectivity -skip qtmacextras\n-$(package)_config_opts += -skip qtwinextras -skip qtxmlpatterns -skip qtscript -skip qtdoc\n-\n-$(package)_config_opts += -prefix $(host_prefix) -bindir $(build_prefix)/bin\n-$(package)_config_opts += -no-c++11 -openssl-linked  -v -static -silent -pkg-config\n-$(package)_config_opts += -qt-libpng -qt-libjpeg -qt-zlib -qt-pcre\n+$(package)_config_opts += -bindir $(build_prefix)/bin\n+$(package)_config_opts += -c++11\n+$(package)_config_opts += -confirm-license\n+$(package)_config_opts += -dbus-runtime\n+$(package)_config_opts += -hostprefix $(build_prefix)\n+$(package)_config_opts += -no-alsa\n+$(package)_config_opts += -no-audio-backend\n+$(package)_config_opts += -no-cups\n+$(package)_config_opts += -no-egl\n+$(package)_config_opts += -no-eglfs\n+$(package)_config_opts += -no-feature-style-windowsmobile\n+$(package)_config_opts += -no-feature-style-windowsce\n+$(package)_config_opts += -no-freetype\n+$(package)_config_opts += -no-gif\n+$(package)_config_opts += -no-glib\n+$(package)_config_opts += -no-gstreamer\n+$(package)_config_opts += -no-icu\n+$(package)_config_opts += -no-iconv\n+$(package)_config_opts += -no-kms\n+$(package)_config_opts += -no-linuxfb\n+$(package)_config_opts += -no-libudev\n+$(package)_config_opts += -no-mitshm\n+$(package)_config_opts += -no-mtdev\n+$(package)_config_opts += -no-nis\n+$(package)_config_opts += -no-pulseaudio\n+$(package)_config_opts += -no-openvg\n+$(package)_config_opts += -no-reduce-relocations\n+$(package)_config_opts += -no-qml-debug\n+$(package)_config_opts += -no-sql-db2\n+$(package)_config_opts += -no-sql-ibase\n+$(package)_config_opts += -no-sql-oci\n+$(package)_config_opts += -no-sql-tds\n+$(package)_config_opts += -no-sql-mysql\n+$(package)_config_opts += -no-sql-odbc\n+$(package)_config_opts += -no-sql-psql\n+$(package)_config_opts += -no-sql-sqlite\n+$(package)_config_opts += -no-sql-sqlite2\n+$(package)_config_opts += -no-use-gold-linker\n+$(package)_config_opts += -no-xinput2\n+$(package)_config_opts += -no-xrender\n+$(package)_config_opts += -nomake examples\n+$(package)_config_opts += -nomake tests\n+$(package)_config_opts += -opensource\n+$(package)_config_opts += -openssl-linked\n+$(package)_config_opts += -optimized-qmake\n+$(package)_config_opts += -pch\n+$(package)_config_opts += -pkg-config\n+$(package)_config_opts += -prefix $(host_prefix)\n+$(package)_config_opts += -qt-libpng\n+$(package)_config_opts += -qt-libjpeg\n+$(package)_config_opts += -qt-pcre\n+$(package)_config_opts += -qt-zlib\n+$(package)_config_opts += -reduce-exports\n+$(package)_config_opts += -static\n+$(package)_config_opts += -silent\n+$(package)_config_opts += -v\n \n ifneq ($(build_os),darwin)\n-$(package)_config_opts_darwin = -xplatform macx-clang-linux -device-option MAC_SDK_PATH=$(OSX_SDK) -device-option CROSS_COMPILE=\"$(host)-\"\n-$(package)_config_opts_darwin += -device-option MAC_MIN_VERSION=$(OSX_MIN_VERSION) -device-option MAC_TARGET=$(host)\n+$(package)_config_opts_darwin = -xplatform macx-clang-linux\n+$(package)_config_opts_darwin += -device-option MAC_SDK_PATH=$(OSX_SDK)\n+$(package)_config_opts_darwin += -device-option MAC_SDK_VERSION=$(OSX_SDK_VERSION)\n+$(package)_config_opts_darwin += -device-option CROSS_COMPILE=\"$(host)-\"\n+$(package)_config_opts_darwin += -device-option MAC_MIN_VERSION=$(OSX_MIN_VERSION)\n+$(package)_config_opts_darwin += -device-option MAC_TARGET=$(host)\n+$(package)_config_opts_darwin += -device-option MAC_LD64_VERSION=$(LD64_VERSION)\n endif\n \n-$(package)_config_opts_linux  = -qt-xkbcommon -qt-xcb  -no-eglfs -no-linuxfb -system-freetype -no-sm -fontconfig -no-xinput2 -no-libudev -no-egl -no-opengl\n+$(package)_config_opts_linux  = -qt-xkbcommon\n+$(package)_config_opts_linux += -qt-xcb\n+$(package)_config_opts_linux += -system-freetype\n+$(package)_config_opts_linux += -no-sm\n+$(package)_config_opts_linux += -fontconfig\n+$(package)_config_opts_linux += -no-opengl\n $(package)_config_opts_arm_linux  = -platform linux-g++ -xplatform $(host)\n $(package)_config_opts_i686_linux  = -xplatform linux-g++-32\n $(package)_config_opts_mingw32  = -no-opengl -xplatform win32-g++ -device-option CROSS_COMPILE=\"$(host)-\"\n $(package)_build_env  = QT_RCC_TEST=1\n endef\n \n+define $(package)_fetch_cmds\n+$(call fetch_file,$(package),$($(package)_download_path),$($(package)_download_file),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_download_path),$($(package)_qttranslations_file_name),$($(package)_qttranslations_file_name),$($(package)_qttranslations_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_download_path),$($(package)_qttools_file_name),$($(package)_qttools_file_name),$($(package)_qttools_sha256_hash))\n+endef\n+\n+define $(package)_extract_cmds\n+  mkdir -p $($(package)_extract_dir) && \\\n+  echo \"$($(package)_sha256_hash)  $($(package)_source)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  echo \"$($(package)_qttranslations_sha256_hash)  $($(package)_source_dir)/$($(package)_qttranslations_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  echo \"$($(package)_qttools_sha256_hash)  $($(package)_source_dir)/$($(package)_qttools_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  $(build_SHA256SUM) -c $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  mkdir qtbase && \\\n+  tar --strip-components=1 -xf $($(package)_source) -C qtbase && \\\n+  mkdir qttranslations && \\\n+  tar --strip-components=1 -xf $($(package)_source_dir)/$($(package)_qttranslations_file_name) -C qttranslations && \\\n+  mkdir qttools && \\\n+  tar --strip-components=1 -xf $($(package)_source_dir)/$($(package)_qttools_file_name) -C qttools\n+endef\n+\n+\n define $(package)_preprocess_cmds\n   sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n   sed -i.old \"s/src_plugins.depends = src_sql src_xml src_network/src_plugins.depends = src_xml src_network/\" qtbase/src/src.pro && \\\n-  sed -i.old \"/XIproto.h/d\" qtbase/src/plugins/platforms/xcb/qxcbxsettings.cpp && \\\n+  sed -i.old \"s|X11/extensions/XIproto.h|X11/X.h|\" qtbase/src/plugins/platforms/xcb/qxcbxsettings.cpp && \\\n   sed -i.old 's/if \\[ \"$$$$XPLATFORM_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/if \\[ \"$$$$BUILD_ON_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/' qtbase/configure && \\\n+  sed -i.old 's/CGEventCreateMouseEvent(0, kCGEventMouseMoved, pos, 0)/CGEventCreateMouseEvent(0, kCGEventMouseMoved, pos, kCGMouseButtonLeft)/' qtbase/src/plugins/platforms/cocoa/qcocoacursor.mm && \\\n   mkdir -p qtbase/mkspecs/macx-clang-linux &&\\\n   cp -f qtbase/mkspecs/macx-clang/Info.plist.lib qtbase/mkspecs/macx-clang-linux/ &&\\\n   cp -f qtbase/mkspecs/macx-clang/Info.plist.app qtbase/mkspecs/macx-clang-linux/ &&\\\n   cp -f qtbase/mkspecs/macx-clang/qplatformdefs.h qtbase/mkspecs/macx-clang-linux/ &&\\\n   cp -f $($(package)_patch_dir)/mac-qmake.conf qtbase/mkspecs/macx-clang-linux/qmake.conf && \\\n+  patch -p1 < $($(package)_patch_dir)/mingw-uuidof.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/pidlist_absolute.patch && \\\n   patch -p1 < $($(package)_patch_dir)/fix-xcb-include-order.patch && \\\n-  patch -p1 < $($(package)_patch_dir)/qt5-tablet-osx.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/fix_qt_pkgconfig.patch && \\\n   echo \"QMAKE_CFLAGS     += $($(package)_cflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n   echo \"QMAKE_CXXFLAGS   += $($(package)_cxxflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n   echo \"QMAKE_LFLAGS     += $($(package)_ldflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n@@ -68,7 +150,6 @@ define $(package)_config_cmds\n   export PKG_CONFIG_SYSROOT_DIR=/ && \\\n   export PKG_CONFIG_LIBDIR=$(host_prefix)/lib/pkgconfig && \\\n   export PKG_CONFIG_PATH=$(host_prefix)/share/pkgconfig  && \\\n-  export CPATH=$(host_prefix)/include && \\\n   ./configure $($(package)_config_opts) && \\\n   $(MAKE) sub-src-clean && \\\n   cd ../qttranslations && ../qtbase/bin/qmake qttranslations.pro -o Makefile && \\\n@@ -77,7 +158,6 @@ define $(package)_config_cmds\n endef\n \n define $(package)_build_cmds\n-  export CPATH=$(host_prefix)/include && \\\n   $(MAKE) -C src $(addprefix sub-,$($(package)_qt_libs)) && \\\n   $(MAKE) -C ../qttools/src/linguist/lrelease && \\\n   $(MAKE) -C ../qttranslations\n@@ -93,6 +173,6 @@ define $(package)_stage_cmds\n endef\n \n define $(package)_postprocess_cmds\n-  rm -rf mkspecs/ lib/cmake/ && \\\n-  rm lib/libQt5Bootstrap.a lib/lib*.la lib/*.prl plugins/*/*.prl\n+  rm -rf native/mkspecs/ native/lib/ lib/cmake/ && \\\n+  rm -f lib/lib*.la lib/*.prl plugins/*/*.prl\n endef"
      },
      {
        "sha": "f8901f72c26c632ab2757cd7def64fbb67e65061",
        "filename": "depends/packages/zeromq.mk",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,27 @@\n+package=zeromq\n+$(package)_version=4.1.4\n+$(package)_download_path=http://download.zeromq.org\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=e99f44fde25c2e4cb84ce440f87ca7d3fe3271c2b8cfbc67d55e4de25e6fe378\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--without-documentation --disable-shared --without-libsodium\n+  $(package)_config_opts_linux=--with-pic\n+  $(package)_cxxflags=-std=c++11\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) libzmq.la\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-libLTLIBRARIES install-includeHEADERS install-pkgconfigDATA\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf bin share\n+endef"
      },
      {
        "sha": "97f59cb7e4eea0575cf684936c7087d784a39437",
        "filename": "depends/patches/boost/darwin_boost_atomic-1.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/depends/patches/boost/darwin_boost_atomic-1.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/depends/patches/boost/darwin_boost_atomic-1.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/darwin_boost_atomic-1.patch?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,35 +0,0 @@\n-diff --git a/include/boost/atomic/detail/cas128strong.hpp b/include/boost/atomic/detail/cas128strong.hpp\n-index 906c13e..dcb4d7d 100644\n---- a/include/boost/atomic/detail/cas128strong.hpp\n-+++ b/include/boost/atomic/detail/cas128strong.hpp\n-@@ -196,15 +196,17 @@ class base_atomic<T, void, 16, Sign>\n- \n- public:\n-     BOOST_DEFAULTED_FUNCTION(base_atomic(void), {})\n--    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT : v_(0)\n-+    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT\n-     {\n-+        memset(&v_, 0, sizeof(v_));\n-         memcpy(&v_, &v, sizeof(value_type));\n-     }\n- \n-     void\n-     store(value_type const& value, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type value_s = 0;\n-+        storage_type value_s;\n-+        memset(&value_s, 0, sizeof(value_s));\n-         memcpy(&value_s, &value, sizeof(value_type));\n-         platform_fence_before_store(order);\n-         platform_store128(value_s, &v_);\n-@@ -247,7 +249,9 @@ class base_atomic<T, void, 16, Sign>\n-         memory_order success_order,\n-         memory_order failure_order) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type expected_s = 0, desired_s = 0;\n-+        storage_type expected_s, desired_s;\n-+        memset(&expected_s, 0, sizeof(expected_s));\n-+        memset(&desired_s, 0, sizeof(desired_s));\n-         memcpy(&expected_s, &expected, sizeof(value_type));\n-         memcpy(&desired_s, &desired, sizeof(value_type));\n- "
      },
      {
        "sha": "ca50765200ec86d6b5591446326afc91b6d389e7",
        "filename": "depends/patches/boost/darwin_boost_atomic-2.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/depends/patches/boost/darwin_boost_atomic-2.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/depends/patches/boost/darwin_boost_atomic-2.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/darwin_boost_atomic-2.patch?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,55 +0,0 @@\n-diff --git a/include/boost/atomic/detail/gcc-atomic.hpp b/include/boost/atomic/detail/gcc-atomic.hpp\n-index a130590..4af99a1 100644\n---- a/include/boost/atomic/detail/gcc-atomic.hpp\n-+++ b/include/boost/atomic/detail/gcc-atomic.hpp\n-@@ -958,14 +958,16 @@ class base_atomic<T, void, 16, Sign>\n- \n- public:\n-     BOOST_DEFAULTED_FUNCTION(base_atomic(void), {})\n--    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT : v_(0)\n-+    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT\n-     {\n-+        memset(&v_, 0, sizeof(v_));\n-         memcpy(&v_, &v, sizeof(value_type));\n-     }\n- \n-     void store(value_type const& v, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type tmp = 0;\n-+        storage_type tmp;\n-+        memset(&tmp, 0, sizeof(tmp));\n-         memcpy(&tmp, &v, sizeof(value_type));\n-         __atomic_store_n(&v_, tmp, atomics::detail::convert_memory_order_to_gcc(order));\n-     }\n-@@ -980,7 +982,8 @@ class base_atomic<T, void, 16, Sign>\n- \n-     value_type exchange(value_type const& v, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type tmp = 0;\n-+        storage_type tmp;\n-+        memset(&tmp, 0, sizeof(tmp));\n-         memcpy(&tmp, &v, sizeof(value_type));\n-         tmp = __atomic_exchange_n(&v_, tmp, atomics::detail::convert_memory_order_to_gcc(order));\n-         value_type res;\n-@@ -994,7 +997,9 @@ class base_atomic<T, void, 16, Sign>\n-         memory_order success_order,\n-         memory_order failure_order) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type expected_s = 0, desired_s = 0;\n-+        storage_type expected_s, desired_s;\n-+        memset(&expected_s, 0, sizeof(expected_s));\n-+        memset(&desired_s, 0, sizeof(desired_s));\n-         memcpy(&expected_s, &expected, sizeof(value_type));\n-         memcpy(&desired_s, &desired, sizeof(value_type));\n-         const bool success = __atomic_compare_exchange_n(&v_, &expected_s, desired_s, false,\n-@@ -1010,7 +1015,9 @@ class base_atomic<T, void, 16, Sign>\n-         memory_order success_order,\n-         memory_order failure_order) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type expected_s = 0, desired_s = 0;\n-+        storage_type expected_s, desired_s;\n-+        memset(&expected_s, 0, sizeof(expected_s));\n-+        memset(&desired_s, 0, sizeof(desired_s));\n-         memcpy(&expected_s, &expected, sizeof(value_type));\n-         memcpy(&desired_s, &desired, sizeof(value_type));\n-         const bool success = __atomic_compare_exchange_n(&v_, &expected_s, desired_s, true,"
      },
      {
        "sha": "58695c11f5d976bd163429884e02d9a7f6f4eb4d",
        "filename": "depends/patches/libevent/reuseaddr.patch",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/libevent/reuseaddr.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/libevent/reuseaddr.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/reuseaddr.patch?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,21 @@\n+--- old/evutil.c   2015-08-28 19:26:23.488765923 -0400\n++++ new/evutil.c   2015-08-28 19:27:41.392767019 -0400\n+@@ -321,15 +321,16 @@\n+ int\n+ evutil_make_listen_socket_reuseable(evutil_socket_t sock)\n+ {\n+-#ifndef WIN32\n+ \tint one = 1;\n++#ifndef WIN32\n+ \t/* REUSEADDR on Unix means, \"don't hang on to this address after the\n+ \t * listener is closed.\"  On Windows, though, it means \"don't keep other\n+ \t * processes from binding to this address while we're using it. */\n+ \treturn setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (void*) &one,\n+ \t    (ev_socklen_t)sizeof(one));\n+ #else\n+-\treturn 0;\n++\treturn setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (const char*) &one,\n++\t\t(ev_socklen_t)sizeof(one));\n+ #endif\n+ }\n+ "
      },
      {
        "sha": "1a32340be5b13ae1d5be3e775462c3052c12953a",
        "filename": "depends/patches/native_mac_alias/python3.patch",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/native_mac_alias/python3.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/native_mac_alias/python3.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_mac_alias/python3.patch?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,72 @@\n+diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n+--- a/mac_alias/alias.py\t2015-10-19 12:12:48.000000000 +0200\n++++ b/mac_alias/alias.py\t2016-04-03 12:13:12.037159417 +0200\n+@@ -243,10 +243,10 @@\n+         alias = Alias()\n+         alias.appinfo = appinfo\n+             \n+-        alias.volume = VolumeInfo (volname.replace('/',':'),\n++        alias.volume = VolumeInfo (volname.decode().replace('/',':'),\n+                                    voldate, fstype, disktype,\n+                                    volattrs, volfsid)\n+-        alias.target = TargetInfo (kind, filename.replace('/',':'),\n++        alias.target = TargetInfo (kind, filename.decode().replace('/',':'),\n+                                    folder_cnid, cnid,\n+                                    crdate, creator_code, type_code)\n+         alias.target.levels_from = levels_from\n+@@ -261,9 +261,9 @@\n+                 b.read(1)\n+ \n+             if tag == TAG_CARBON_FOLDER_NAME:\n+-                alias.target.folder_name = value.replace('/',':')\n++                alias.target.folder_name = value.decode().replace('/',':')\n+             elif tag == TAG_CNID_PATH:\n+-                alias.target.cnid_path = struct.unpack(b'>%uI' % (length // 4),\n++                alias.target.cnid_path = struct.unpack('>%uI' % (length // 4),\n+                                                            value)\n+             elif tag == TAG_CARBON_PATH:\n+                 alias.target.carbon_path = value\n+@@ -298,9 +298,9 @@\n+                 alias.target.creation_date \\\n+                     = mac_epoch + datetime.timedelta(seconds=seconds)\n+             elif tag == TAG_POSIX_PATH:\n+-                alias.target.posix_path = value\n++                alias.target.posix_path = value.decode()\n+             elif tag == TAG_POSIX_PATH_TO_MOUNTPOINT:\n+-                alias.volume.posix_path = value\n++                alias.volume.posix_path = value.decode()\n+             elif tag == TAG_RECURSIVE_ALIAS_OF_DISK_IMAGE:\n+                 alias.volume.disk_image_alias = Alias.from_bytes(value)\n+             elif tag == TAG_USER_HOME_LENGTH_PREFIX:\n+@@ -422,13 +422,13 @@\n+         #       (so doing so is ridiculous, and nothing could rely on it).\n+         b.write(struct.pack(b'>h28pI2shI64pII4s4shhI2s10s',\n+                             self.target.kind,\n+-                            carbon_volname, voldate,\n++                            carbon_volname, int(voldate),\n+                             self.volume.fs_type,\n+                             self.volume.disk_type,\n+                             self.target.folder_cnid,\n+                             carbon_filename,\n+                             self.target.cnid,\n+-                            crdate,\n++                            int(crdate),\n+                             self.target.creator_code,\n+                             self.target.type_code,\n+                             self.target.levels_from,\n+@@ -449,12 +449,12 @@\n+ \n+         b.write(struct.pack(b'>hhQhhQ',\n+                 TAG_HIGH_RES_VOLUME_CREATION_DATE,\n+-                8, long(voldate * 65536),\n++                8, int(voldate * 65536),\n+                 TAG_HIGH_RES_CREATION_DATE,\n+-                8, long(crdate * 65536)))\n++                8, int(crdate * 65536)))\n+ \n+         if self.target.cnid_path:\n+-            cnid_path = struct.pack(b'>%uI' % len(self.target.cnid_path),\n++            cnid_path = struct.pack('>%uI' % len(self.target.cnid_path),\n+                                     *self.target.cnid_path)\n+             b.write(struct.pack(b'>hh', TAG_CNID_PATH,\n+                                  len(cnid_path)))"
      },
      {
        "sha": "c7dbebedce831edba990aeecc2dd9c2a5941430e",
        "filename": "depends/patches/qt/fix-xcb-include-order.patch",
        "status": "modified",
        "additions": 44,
        "deletions": 16,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/qt/fix-xcb-include-order.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/qt/fix-xcb-include-order.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix-xcb-include-order.patch?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,21 +1,49 @@\n---- old/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\t2014-07-30 18:17:27.384458441 -0400\n-+++ new/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\t2014-07-30 18:18:28.620459303 -0400\n-@@ -101,10 +101,6 @@\n-     }\n- }\n+--- old/qtbase/src/plugins/platforms/xcb/xcb_qpa_lib.pro 2015-03-17 02:06:42.705930685 +0000\n++++ new/qtbase/src/plugins/platforms/xcb/xcb_qpa_lib.pro 2015-03-17 02:08:41.281926351 +0000\n+@@ -74,8 +74,6 @@\n  \n--DEFINES += $$QMAKE_DEFINES_XCB\n--LIBS += $$QMAKE_LIBS_XCB\n+ DEFINES += $$QMAKE_DEFINES_XCB\n+ LIBS += $$QMAKE_LIBS_XCB\n -QMAKE_CXXFLAGS += $$QMAKE_CFLAGS_XCB\n--\n+-QMAKE_CFLAGS += $$QMAKE_CFLAGS_XCB\n+ \n  CONFIG += qpa/genericunixfontdatabase\n  \n- contains(QT_CONFIG, dbus) {\n-@@ -141,3 +137,7 @@\n-         INCLUDEPATH += ../../../3rdparty/xkbcommon/xkbcommon/\n-     }\n- }\n+@@ -87,7 +85,8 @@\n+ contains(QT_CONFIG, xcb-qt) {\n+     DEFINES += XCB_USE_RENDER\n+     XCB_DIR = ../../../3rdparty/xcb\n+-    INCLUDEPATH += $$XCB_DIR/include $$XCB_DIR/sysinclude\n++    QMAKE_CFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n++    QMAKE_CXXFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n+     LIBS += -lxcb -L$$OUT_PWD/xcb-static -lxcb-static\n+ } else {\n+     LIBS += -lxcb -lxcb-image -lxcb-icccm -lxcb-sync -lxcb-xfixes -lxcb-shm -lxcb-randr -lxcb-shape -lxcb-keysyms -lxcb-xinerama\n+--- old/qtbase/src/plugins/platforms/xcb/xcb-static/xcb-static.pro      2015-03-17 02:07:04.641929383 +0000\n++++ new/qtbase/src/plugins/platforms/xcb/xcb-static/xcb-static.pro      2015-03-17 02:10:15.485922059 +0000\n+@@ -9,7 +9,8 @@\n+ \n+ XCB_DIR = ../../../../3rdparty/xcb\n+ \n+-INCLUDEPATH += $$XCB_DIR/include $$XCB_DIR/include/xcb $$XCB_DIR/sysinclude\n++QMAKE_CFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/include/xcb -I$$XCB_DIR/sysinclude\n++QMAKE_CXXFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/include/xcb -I$$XCB_DIR/sysinclude\n+ \n+ QMAKE_CXXFLAGS += $$QMAKE_CFLAGS_XCB\n+ QMAKE_CFLAGS += $$QMAKE_CFLAGS_XCB\n+--- old/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\t2015-07-24 16:02:59.530038830 -0400\n++++ new/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\t2015-07-24 16:01:22.106037459 -0400\n+@@ -6,6 +6,13 @@\n+     qxcbmain.cpp\n+ OTHER_FILES += xcb.json README\n+ \n++contains(QT_CONFIG, xcb-qt) {\n++    DEFINES += XCB_USE_RENDER\n++    XCB_DIR = ../../../3rdparty/xcb\n++    QMAKE_CFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n++    QMAKE_CXXFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n++}\n +\n-+DEFINES += $$QMAKE_DEFINES_XCB\n-+LIBS += $$QMAKE_LIBS_XCB\n-+INCLUDEPATH += $$QMAKE_CFLAGS_XCB\n+ PLUGIN_TYPE = platforms\n+ PLUGIN_CLASS_NAME = QXcbIntegrationPlugin\n+ !equals(TARGET, $$QT_DEFAULT_QPA_PLUGIN): PLUGIN_EXTENDS = -"
      },
      {
        "sha": "3772db4f8b804766d7d1b6eb7a1705609a2cc368",
        "filename": "depends/patches/qt/fix_qt_pkgconfig.patch",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/qt/fix_qt_pkgconfig.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/qt/fix_qt_pkgconfig.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qt_pkgconfig.patch?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,11 @@\n+--- old/qtbase/mkspecs/features/qt_module.prf 2016-03-17 02:06:42.705930685 +0000\n++++ new/qtbase/mkspecs/features/qt_module.prf 2016-03-17 02:06:42.705930685 +0000\n+@@ -244,7 +244,7 @@\n+ load(qt_targets)\n+ \n+ # this builds on top of qt_common\n+-!internal_module:!lib_bundle:if(unix|mingw) {\n++unix|mingw {\n+     CONFIG += create_pc\n+     QMAKE_PKGCONFIG_DESTDIR = pkgconfig\n+     host_build: \\"
      },
      {
        "sha": "a6d0070cca6489848394febfa8a1b6e36925ba6c",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,5 +1,6 @@\n MAKEFILE_GENERATOR = UNIX\n CONFIG += app_bundle incremental global_init_link_order lib_version_first plugin_no_soname absolute_library_soname\n+DEFINES += QT_NO_PRINTER QT_NO_PRINTDIALOG\n QMAKE_INCREMENTAL_STYLE = sublib\n include(../common/macx.conf)\n include(../common/gcc-base-mac.conf)\n@@ -10,12 +11,14 @@ QMAKE_XCODE_VERSION=4.3\n QMAKE_XCODE_DEVELOPER_PATH=/Developer\n QMAKE_MACOSX_DEPLOYMENT_TARGET = $${MAC_MIN_VERSION}\n QMAKE_MAC_SDK=macosx\n-QMAKE_MAC_SDK.macosx.path = $$QMAKE_MAC_SDK_PATH\n+QMAKE_MAC_SDK.macosx.path = $${MAC_SDK_PATH}\n QMAKE_MAC_SDK.macosx.platform_name = macosx\n+QMAKE_MAC_SDK.macosx.version = $${MAC_SDK_VERSION}\n+QMAKE_MAC_SDK.macosx.platform_path = /phony\n QMAKE_CFLAGS += -target $${MAC_TARGET}\n QMAKE_OBJECTIVE_CFLAGS += $$QMAKE_CFLAGS\n QMAKE_CXXFLAGS += $$QMAKE_CFLAGS\n-QMAKE_LFLAGS += -target $${MAC_TARGET}\n+QMAKE_LFLAGS += -target $${MAC_TARGET} -mlinker-version=$${MAC_LD64_VERSION}\n QMAKE_AR = $${CROSS_COMPILE}ar cq\n QMAKE_RANLIB=$${CROSS_COMPILE}ranlib\n QMAKE_LIBTOOL=$${CROSS_COMPILE}libtool"
      },
      {
        "sha": "975366e61229c891974f60f91a74e8c9f7a62d5a",
        "filename": "depends/patches/qt/mingw-uuidof.patch",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/qt/mingw-uuidof.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/qt/mingw-uuidof.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mingw-uuidof.patch?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,44 @@\n+--- old/qtbase/src/plugins/platforms/windows/qwindowscontext.cpp\t2015-06-20 17:40:20.956781548 -0400\n++++ new/qtbase/src/plugins/platforms/windows/qwindowscontext.cpp\t2015-06-20 17:29:32.052772416 -0400\n+@@ -69,7 +69,7 @@\n+ #include <stdlib.h>\n+ #include <stdio.h>\n+ #include <windowsx.h>\n+-#ifndef Q_OS_WINCE\n++#if !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+ #  include <comdef.h>\n+ #endif\n+ \n+@@ -762,7 +762,7 @@\n+                           HWND_MESSAGE, NULL, (HINSTANCE)GetModuleHandle(0), NULL);\n+ }\n+ \n+-#ifndef Q_OS_WINCE\n++#if !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+ // Re-engineered from the inline function _com_error::ErrorMessage().\n+ // We cannot use it directly since it uses swprintf_s(), which is not\n+ // present in the MSVCRT.DLL found on Windows XP (QTBUG-35617).\n+@@ -781,7 +781,7 @@\n+          return QStringLiteral(\"IDispatch error #\") + QString::number(wCode);\n+      return QStringLiteral(\"Unknown error 0x0\") + QString::number(comError.Error(), 16);\n+ }\n+-#endif // !Q_OS_WINCE\n++#endif // !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+ \n+ /*!\n+     \\brief Common COM error strings.\n+@@ -846,12 +846,12 @@\n+     default:\n+         break;\n+     }\n+-#ifndef Q_OS_WINCE\n++#if !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+     _com_error error(hr);\n+     result += QByteArrayLiteral(\" (\");\n+     result += errorMessageFromComError(error);\n+     result += ')';\n+-#endif // !Q_OS_WINCE\n++#endif // !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+     return result;\n+ }\n+ "
      },
      {
        "sha": "0b49c050dcc1f37fc86d289ecd7bf9b1c2607206",
        "filename": "depends/patches/qt/pidlist_absolute.patch",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/qt/pidlist_absolute.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/depends/patches/qt/pidlist_absolute.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/pidlist_absolute.patch?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,37 @@\n+diff -dur old/qtbase/src/plugins/platforms/windows/qwindowscontext.h new/qtbase/src/plugins/platforms/windows/qwindowscontext.h\n+--- old/qtbase/src/plugins/platforms/windows/qwindowscontext.h\t2015-06-29 22:04:40.000000000 +0200\n++++ new/qtbase/src/plugins/platforms/windows/qwindowscontext.h\t2015-11-01 12:55:59.751234846 +0100\n+@@ -124,10 +124,18 @@\n+     inline void init();\n+ \n+     typedef HRESULT (WINAPI *SHCreateItemFromParsingName)(PCWSTR, IBindCtx *, const GUID&, void **);\n++#if defined(Q_CC_MINGW) && (!defined(__MINGW64_VERSION_MAJOR) || __MINGW64_VERSION_MAJOR < 3)\n++    typedef HRESULT (WINAPI *SHGetKnownFolderIDList)(const GUID &, DWORD, HANDLE, ITEMIDLIST **);\n++#else\n+     typedef HRESULT (WINAPI *SHGetKnownFolderIDList)(const GUID &, DWORD, HANDLE, PIDLIST_ABSOLUTE *);\n++#endif\n+     typedef HRESULT (WINAPI *SHGetStockIconInfo)(int , int , _SHSTOCKICONINFO *);\n+     typedef HRESULT (WINAPI *SHGetImageList)(int, REFIID , void **);\n++#if defined(Q_CC_MINGW) && (!defined(__MINGW64_VERSION_MAJOR) || __MINGW64_VERSION_MAJOR < 3)\n++    typedef HRESULT (WINAPI *SHCreateItemFromIDList)(const ITEMIDLIST *, REFIID, void **);\n++#else\n+     typedef HRESULT (WINAPI *SHCreateItemFromIDList)(PCIDLIST_ABSOLUTE, REFIID, void **);\n++#endif\n+ \n+     SHCreateItemFromParsingName sHCreateItemFromParsingName;\n+     SHGetKnownFolderIDList sHGetKnownFolderIDList;\n+diff -dur old/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp new/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\n+--- old/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\t2015-06-29 22:04:40.000000000 +0200\n++++ new/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\t2015-11-01 13:41:09.503149772 +0100\n+@@ -1008,7 +1008,11 @@\n+             qWarning() << __FUNCTION__ << \": Invalid CLSID: \" << url.path();\n+             return Q_NULLPTR;\n+         }\n++#if defined(Q_CC_MINGW) && (!defined(__MINGW64_VERSION_MAJOR) || __MINGW64_VERSION_MAJOR < 3)\n++        ITEMIDLIST *idList;\n++#else\n+         PIDLIST_ABSOLUTE idList;\n++#endif\n+         HRESULT hr = QWindowsContext::shell32dll.sHGetKnownFolderIDList(uuid, 0, 0, &idList);\n+         if (FAILED(hr)) {\n+             qErrnoWarning(\"%s: SHGetKnownFolderIDList(%s)) failed\", __FUNCTION__, qPrintable(url.toString()));"
      },
      {
        "sha": "7deabf8d4e04262c3870e9adbc6eb4b4a185d29f",
        "filename": "depends/patches/qt/qt5-tablet-osx.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/depends/patches/qt/qt5-tablet-osx.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/depends/patches/qt/qt5-tablet-osx.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/qt5-tablet-osx.patch?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,20 +0,0 @@\n---- old/qtbase/src/widgets/kernel/qwidgetwindow.cpp\t2014-09-05 20:45:18.717570370 -0400\n-+++ new/qtbase/src/widgets/kernel/qwidgetwindow.cpp\t2014-09-05 20:52:38.653576561 -0400\n-@@ -57,7 +57,7 @@\n- Q_WIDGETS_EXPORT extern bool qt_tab_all_widgets();\n- \n- QWidget *qt_button_down = 0; // widget got last button-down\n--static QWidget *qt_tablet_target = 0;\n-+static QPointer<QWidget> qt_tablet_target = 0;\n- \n- // popup control\n- QWidget *qt_popup_down = 0; // popup that contains the pressed widget\n-@@ -96,8 +96,6 @@\n- \n- QWidgetWindow::~QWidgetWindow()\n- {\n--    if (m_widget == qt_tablet_target)\n--        qt_tablet_target = 0;\n- }\n- \n- #ifndef QT_NO_ACCESSIBILITY"
      },
      {
        "sha": "428fba98e1ba71cc7314555dba6de3fd14f50b0c",
        "filename": "doc/Doxyfile",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -34,7 +34,7 @@ PROJECT_NAME           = Bitcoin\n # This could be handy for archiving the generated documentation or \n # if some version control system is used.\n \n-PROJECT_NUMBER         = 0.9.99\n+PROJECT_NUMBER         = 0.12.99\n \n # Using the PROJECT_BRIEF tag one can provide an optional one line description \n # for a project that appears at the top of each page and should give viewer "
      },
      {
        "sha": "c30f29452b78652cfe4facca8c4a0024ce63ed3d",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 22,
        "deletions": 21,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,37 +1,28 @@\n-Bitcoin 0.9.99 BETA\n+Bitcoin Core 0.12.99\n =====================\n \n-Copyright (c) 2009-2014 Bitcoin Developers\n-\n-\n Setup\n ---------------------\n-[Bitcoin Core](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more. Thankfully you only have to do this once. If you would like the process to go faster you can [download the blockchain directly](bootstrap.md).\n+[Bitcoin Core](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n \n Running\n ---------------------\n-The following are some helpful notes on how to run Bitcoin on your native platform. \n+The following are some helpful notes on how to run Bitcoin on your native platform.\n \n ### Unix\n \n-You need the Qt4 run-time libraries to run Bitcoin-Qt. On Debian or Ubuntu:\n-\n-\tsudo apt-get install libqtgui4\n-\n Unpack the files into a directory and run:\n \n-- bin/32/bitcoin-qt (GUI, 32-bit) or bin/32/bitcoind (headless, 32-bit)\n-- bin/64/bitcoin-qt (GUI, 64-bit) or bin/64/bitcoind (headless, 64-bit)\n-\n-\n+- `bin/bitcoin-qt` (GUI) or\n+- `bin/bitcoind` (headless)\n \n ### Windows\n \n Unpack the files into a directory, and then run bitcoin-qt.exe.\n \n-### OSX\n+### OS X\n \n-Drag Bitcoin-Qt to your applications folder, and then run Bitcoin-Qt.\n+Drag Bitcoin-Core to your applications folder, and then run Bitcoin-Core.\n \n ### Need Help?\n \n@@ -44,24 +35,34 @@ Building\n ---------------------\n The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n \n-- [OSX Build Notes](build-osx.md)\n+- [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n+- [Windows Build Notes](build-windows.md)\n+- [OpenBSD Build Notes](build-openbsd.md)\n+- [Gitian Building Guide](gitian-building.md)\n \n Development\n ---------------------\n-The Bitcoin repo's [root README](https://github.com/bitcoin/bitcoin/blob/master/README.md) contains relevant information on the development process and automated testing.\n+The Bitcoin repo's [root README](/README.md) contains relevant information on the development process and automated testing.\n \n-- [Coding Guidelines](coding.md)\n+- [Developer Notes](developer-notes.md)\n - [Multiwallet Qt Development](multiwallet-qt.md)\n - [Release Notes](release-notes.md)\n - [Release Process](release-process.md)\n - [Source Code Documentation (External Link)](https://dev.visucore.com/bitcoin/doxygen/)\n - [Translation Process](translation_process.md)\n+- [Translation Strings Policy](translation_strings_policy.md)\n - [Unit Tests](unit-tests.md)\n+- [Unauthenticated REST Interface](REST-interface.md)\n+- [Shared Libraries](shared-libraries.md)\n+- [BIPS](bips.md)\n+- [Dnsseed Policy](dnsseed-policy.md)\n+- [Benchmarking](benchmarking.md)\n \n ### Resources\n * Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss on [#bitcoin-dev](http://webchat.freenode.net/?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n+* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n \n ### Miscellaneous\n - [Assets Attribution](assets-attribution.md)\n@@ -71,6 +72,6 @@ The Bitcoin repo's [root README](https://github.com/bitcoin/bitcoin/blob/master/\n \n License\n ---------------------\n-Distributed under the [MIT/X11 software license](http://www.opensource.org/licenses/mit-license.php).\n+Distributed under the [MIT software license](http://www.opensource.org/licenses/mit-license.php).\n This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](https://www.openssl.org/). This product includes\n cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "aed3cd97e1ecd45d5f74046f6bc0cf8524dbd771",
        "filename": "doc/README_osx.md",
        "status": "renamed",
        "additions": 25,
        "deletions": 25,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,21 +1,19 @@\n-Deterministic OSX Dmg Notes.\n+Deterministic OS X Dmg Notes.\n \n-Working OSX DMG's are created in Linux by combining a recent clang,\n-the Apple's binutils (ld, ar, etc), and DMG authoring tools.\n+Working OS X DMGs are created in Linux by combining a recent clang,\n+the Apple binutils (ld, ar, etc) and DMG authoring tools.\n \n Apple uses clang extensively for development and has upstreamed the necessary\n functionality so that a vanilla clang can take advantage. It supports the use\n of -F, -target, -mmacosx-version-min, and --sysroot, which are all necessary\n-when building for OSX. A pre-compiled version of 3.2 is used because it was not\n-available in the Precise repositories at the time this work was started. In the\n-future, it can be switched to use system packages instead.\n+when building for OS X.\n \n Apple's version of binutils (called cctools) contains lots of functionality\n missing in the FSF's binutils. In addition to extra linker options for\n frameworks and sysroots, several other tools are needed as well such as\n install_name_tool, lipo, and nmedit. These do not build under linux, so they\n have been patched to do so. The work here was used as a starting point:\n-https://github.com/mingwandroid/toolchain4\n+[mingwandroid/toolchain4](https://github.com/mingwandroid/toolchain4).\n \n In order to build a working toolchain, the following source packages are needed\n from Apple: cctools, dyld, and ld64.\n@@ -29,54 +27,56 @@ originally done in toolchain4.\n \n To complicate things further, all builds must target an Apple SDK. These SDKs\n are free to download, but not redistributable.\n-To obtain it, register for a developer account, then download xcode4630916281a.dmg:\n-https://developer.apple.com/downloads/download.action?path=Developer_Tools/xcode_4.6.3/xcode4630916281a.dmg\n+To obtain it, register for a developer account, then download the [Xcode 7.3.1 dmg](https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/Xcode_7.3.1/Xcode_7.3.1.dmg).\n+\n This file is several gigabytes in size, but only a single directory inside is\n-needed: Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk\n+needed:\n+```\n+Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\n+```\n \n Unfortunately, the usual linux tools (7zip, hpmount, loopback mount) are incapable of opening this file.\n-To create a tarball suitable for gitian input, mount the dmg in OSX, then create it with:\n-  $ tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.7.sdk.tar.gz MacOSX10.7.sdk\n-\n+To create a tarball suitable for Gitian input, mount the dmg in OS X, then create it with:\n+```\n+  $ tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.11.sdk.tar.gz MacOSX10.11.sdk\n+```\n \n-The gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\n+The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\n which are created using these tools. The build process has been designed to\n avoid including the SDK's files in Gitian's outputs. All interim tarballs are\n fully deterministic and may be freely redistributed.\n \n genisoimage is used to create the initial DMG. It is not deterministic as-is,\n so it has been patched. A system genisoimage will work fine, but it will not\n be deterministic because the file-order will change between invocations.\n-The patch can be seen here:\n-https://raw.githubusercontent.com/theuni/osx-cross-depends/master/patches/cdrtools/genisoimage.diff\n+The patch can be seen here:  [theuni/osx-cross-depends](https://raw.githubusercontent.com/theuni/osx-cross-depends/master/patches/cdrtools/genisoimage.diff).\n No effort was made to fix this cleanly, so it likely leaks memory badly. But\n it's only used for a single invocation, so that's no real concern.\n \n genisoimage cannot compress DMGs, so afterwards, the 'dmg' tool from the\n libdmg-hfsplus project is used to compress it. There are several bugs in this\n tool and its maintainer has seemingly abandoned the project. It has been forked\n-and is available (with fixes) here: https://github.com/theuni/libdmg-hfsplus .\n+and is available (with fixes) here: [theuni/libdmg-hfsplus](https://github.com/theuni/libdmg-hfsplus).\n \n-The 'dmg' tool has the ability to create DMG's from scratch as well, but this\n+The 'dmg' tool has the ability to create DMGs from scratch as well, but this\n functionality is broken. Only the compression feature is currently used.\n Ideally, the creation could be fixed and genisoimage would no longer be necessary.\n \n Background images and other features can be added to DMG files by inserting a\n-.DS_Store before creation. The easiest way to create this file is to build a\n-DMG without one, move it to a device running OSX, customize the layout, then\n-grab the .DS_Store file for later use. That is the approach taken here.\n+.DS_Store before creation. This is generated by the script\n+contrib/macdeploy/custom_dsstore.py.\n \n-As of OSX Mavericks (10.9), using an Apple-blessed key to sign binaries is a\n+As of OS X Mavericks (10.9), using an Apple-blessed key to sign binaries is a\n requirement in order to satisfy the new Gatekeeper requirements. Because this\n private key cannot be shared, we'll have to be a bit creative in order for the\n build process to remain somewhat deterministic. Here's how it works:\n \n-- Builders use gitian to create an unsigned release. This outputs an unsigned\n+- Builders use Gitian to create an unsigned release. This outputs an unsigned\n   dmg which users may choose to bless and run. It also outputs an unsigned app\n   structure in the form of a tarball, which also contains all of the tools\n   that have been previously (deterministically) built in order to create a\n   final dmg.\n - The Apple keyholder uses this unsigned app to create a detached signature,\n-  using the script that is also included there.\n-- Builders feed the unsigned app + detached signature back into gitian. It\n+  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n+- Builders feed the unsigned app + detached signature back into Gitian. It\n   uses the pre-built tools to recombine the pieces into a deterministic dmg.",
        "previous_filename": "doc/README_osx.txt"
      },
      {
        "sha": "2d1c4503c917767167a9b7033f205ed772a840c1",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 2,
        "deletions": 10,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,13 +1,5 @@\n-Bitcoin 0.9.99 BETA\r\n-\r\n-Copyright (c) 2009-2014 Bitcoin Core Developers\r\n-\r\n-Distributed under the MIT/X11 software license, see the accompanying\r\n-file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n-This product includes software developed by the OpenSSL Project for use in\r\n-the OpenSSL Toolkit (https://www.openssl.org/).  This product includes\r\n-cryptographic software written by Eric Young (eay@cryptsoft.com).\r\n-\r\n+Bitcoin Core 0.12.99\r\n+=====================\r\n \r\n Intro\r\n -----\r"
      },
      {
        "sha": "bf669235e38a2c97a8cce1de70f32c7baf89ba91",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 78,
        "deletions": 9,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -5,23 +5,92 @@ The REST API can be enabled with the `-rest` option.\n \n Supported API\n -------------\n-`GET /rest/tx/TX-HASH.{bin|hex|json}`\n \n-Given a transaction hash,\n-Returns a transaction, in binary, hex-encoded binary or JSON formats.\n+####Transactions\n+`GET /rest/tx/<TX-HASH>.<bin|hex|json>`\n \n-`GET /rest/block/BLOCK-HASH.{bin|hex|json}`\n-`GET /rest/block/notxdetails/BLOCK-HASH.{bin|hex|json}`\n+Given a transaction hash: returns a transaction in binary, hex-encoded binary, or JSON formats.\n \n-Given a block hash,\n-Returns a block, in binary, hex-encoded binary or JSON formats.\n+For full TX query capability, one must enable the transaction index via \"txindex=1\" command line / configuration option.\n+\n+####Blocks\n+`GET /rest/block/<BLOCK-HASH>.<bin|hex|json>`\n+`GET /rest/block/notxdetails/<BLOCK-HASH>.<bin|hex|json>`\n+\n+Given a block hash: returns a block, in binary, hex-encoded binary or JSON formats.\n \n The HTTP request and response are both handled entirely in-memory, thus making maximum memory usage at least 2.66MB (1 MB max block, plus hex encoding) per request.\n \n With the /notxdetails/ option JSON response will only contain the transaction hash instead of the complete transaction details. The option only affects the JSON response.\n \n-For full TX query capability, one must enable the transaction index via \"txindex=1\" command line / configuration option.\n+####Blockheaders\n+`GET /rest/headers/<COUNT>/<BLOCK-HASH>.<bin|hex|json>`\n+\n+Given a block hash: returns <COUNT> amount of blockheaders in upward direction.\n+\n+####Chaininfos\n+`GET /rest/chaininfo.json`\n+\n+Returns various state info regarding block chain processing.\n+Only supports JSON as output format.\n+* chain : (string) current network name as defined in BIP70 (main, test, regtest)\n+* blocks : (numeric) the current number of blocks processed in the server\n+* headers : (numeric) the current number of headers we have validated\n+* bestblockhash : (string) the hash of the currently best block\n+* difficulty : (numeric) the current difficulty\n+* verificationprogress : (numeric) estimate of verification progress [0..1]\n+* chainwork : (string) total amount of work in active chain, in hexadecimal\n+* pruned : (boolean) if the blocks are subject to pruning\n+* pruneheight : (numeric) heighest block available\n+* softforks : (array) status of softforks in progress\n+\n+####Query UTXO set\n+`GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>/.../<txid>-<n>.<bin|hex|json>`\n+\n+The getutxo command allows querying of the UTXO set given a set of outpoints.\n+See BIP64 for input and output serialisation:\n+https://github.com/bitcoin/bips/blob/master/bip-0064.mediawiki\n+\n+Example:\n+```\n+$ curl localhost:18332/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff7627ff72e5e8b0f71210f92ea7a4000c5d75-0.json 2>/dev/null | json_pp\n+{\n+   \"chaintipHash\" : \"00000000fb01a7f3745a717f8caebee056c484e6e0bfe4a9591c235bb70506fb\",\n+   \"chainHeight\" : 325347,\n+   \"utxos\" : [\n+      {\n+         \"scriptPubKey\" : {\n+            \"addresses\" : [\n+               \"mi7as51dvLJsizWnTMurtRmrP8hG2m1XvD\"\n+            ],\n+            \"type\" : \"pubkeyhash\",\n+            \"hex\" : \"76a9141c7cebb529b86a04c683dfa87be49de35bcf589e88ac\",\n+            \"reqSigs\" : 1,\n+            \"asm\" : \"OP_DUP OP_HASH160 1c7cebb529b86a04c683dfa87be49de35bcf589e OP_EQUALVERIFY OP_CHECKSIG\"\n+         },\n+         \"value\" : 8.8687,\n+         \"height\" : 2147483647,\n+         \"txvers\" : 1\n+      }\n+   ],\n+   \"bitmap\" : \"1\"\n+}\n+```\n+\n+####Memory pool\n+`GET /rest/mempool/info.json`\n+\n+Returns various information about the TX mempool.\n+Only supports JSON as output format.\n+* size : (numeric) the number of transactions in the TX mempool\n+* bytes : (numeric) size of the TX mempool in bytes\n+* usage : (numeric) total TX mempool memory usage\n+\n+`GET /rest/mempool/contents.json`\n+\n+Returns transactions in the TX mempool.\n+Only supports JSON as output format.\n \n Risks\n -------------\n-Running a webbrowser on the same node with a REST enabled bitcoind can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:1234/tx/json/1234567890\">` which might break the nodes privacy.\n\\ No newline at end of file\n+Running a web browser on the same node with a REST enabled bitcoind can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:8332/rest/tx/1234567890.json\">` which might break the nodes privacy."
      },
      {
        "sha": "2dd930d6a4f97debef6dba19040f471f75250b6a",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 1,
        "deletions": 103,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,103 +1 @@\n-The following is a list of assets used in the bitcoin source and their proper attribution.\n-\n-[Wladimir van der Laan](https://github.com/laanwj)\n------------------------\n-#### Info\n-* License: MIT\n-\n-### Assets Used\n-\tsrc/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n-\tsrc/qt/res/src/clock_green.svg, src/qt/res/src/clock1.svg,\n-\tsrc/qt/res/src/clock2.svg, src/qt/res/src/clock3.svg,\n-\tsrc/qt/res/src/clock4.svg, src/qt/res/src/clock5.svg,\n-\tsrc/qt/res/src/inout.svg, src/qt/res/src/questionmark.svg\n-\n-[David Vignoni](http://www.icon-king.com)\n------------------------\n-\n-### Info\n-* Icon Pack: NUVOLA ICON THEME for KDE 3.x\n-* Designer: David Vignoni (david@icon-king.com)\n-* License: LGPL\n-* Site: [http://www.icon-king.com/projects/nuvola](http://www.icon-king.com/projects/nuvola)\n-\n-### Assets Used\n-\tsrc/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n-\tsrc/qt/res/icons/history.png, src/qt/res/icons/key.png,\n-\tsrc/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n-\tsrc/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n-\tsrc/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n-\n-schollidesign\n------------------------\n-\n-### Info\n-* Icon Pack: Human-O2\n-* Designer: schollidesign\n-* License: GNU/GPL\n-* Site: [http://findicons.com/icon/93743/blocks_gnome_netstatus_0](http://findicons.com/icon/93743/blocks_gnome_netstatus_0)\n-\n-### Assets Used\n-\tsrc/qt/res/icons/connect*.png\n-\n-md2k7\n------------------------\n-\n-### Info\n-* Designer: md2k7\n-* License: You are free to do with these icons as you wish, including selling, copying, modifying etc.\n-* License: MIT\n-* Site: [https://bitcointalk.org/index.php?topic=15276.0](https://bitcointalk.org/index.php?topic=15276.0)\n-\n-### Assets Used\n-\tsrc/qt/res/icons/transaction*.png\n-\n-[Everaldo.com](http://www.everaldo.com)\n------------------------\n-\n-### Info\n-* Icon Pack: Crystal SVG\n-* Designer: [http://www.everaldo.com](http://www.everaldo.com)\n-* License: LGPL\n-\n-### Assets Used\n-\tsrc/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n-\tsrc/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n-\tsrc/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n-\tsrc/qt/res/icons/remove.png (edited)\n-\n-Everaldo (Everaldo Coelho)\n------------------------\n-\n-### Info\n-* Icon Pack: Kids\n-* Designer: Everaldo (Everaldo Coelho)\n-* License: GNU/GPL \n-* Site: [http://findicons.com/icon/17102/reload?id=17102](http://findicons.com/icon/17102/reload?id=17102)\n-\n-### Assets Used\n-\tscripts/img/reload.xcf (modified), src/qt/res/movies/*.png\n-\n-[Vignoni David](http://techbase.kde.org/Projects/Oxygen)\n------------------------\n-\n-### Info\n-* Designer: Vignoni David\n-* License: Oxygen icon theme is dual licensed. You may copy it under the Creative Common Attribution-ShareAlike 3.0 License or the GNU Library General Public License.\n-* Site: [http://techbase.kde.org/Projects/Oxygen](http://techbase.kde.org/Projects/Oxygen)\n-\n-### Assets Used\n-\tsrc/qt/res/icons/debugwindow.png\n-\n-Jonas Schnelli\n------------------------\n-\n-### Info\n-* Designer: Jonas Schnelli (based on the original bitcoin logo from Bitboy)\n-* License: MIT\n-\n-### Assets Used\n-\tsrc/qt/res/icons/bitcoin.icns, src/qt/res/src/bitcoin.svg,\n-\tsrc/qt/res/src/bitcoin.ico, src/qt/res/src/bitcoin.png,\n-\tsrc/qt/res/src/bitcoin_testnet.png, docs/bitcoin_logo_doxygen.png,\n-\tsrc/qt/res/images/splash.png, src/qt/res/images/splash_testnet.png\n+The list of assets used in the bitcoin source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright)."
      },
      {
        "sha": "0ba75afcda3cbcef4c024c9acec21e35f40017c9",
        "filename": "doc/benchmarking.md",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,30 @@\n+Benchmarking\n+============\n+\n+Bitcoin Core has an internal benchmarking framework, with benchmarks\n+for cryptographic algorithms such as SHA1, SHA256, SHA512 and RIPEMD160. As well as the rolling bloom filter.\n+\n+After compiling bitcoin-core, the benchmarks can be run with:\n+`src/bench/bench_bitcoin`\n+\n+The output will look similar to:\n+```\n+#Benchmark,count,min,max,average\n+RIPEMD160,448,0.001245033173334,0.002638196945190,0.002461894814457\n+RollingBloom-refresh,1,0.000635000000000,0.000635000000000,0.000635000000000\n+RollingBloom-refresh,1,0.000108000000000,0.000108000000000,0.000108000000000\n+RollingBloom-refresh,1,0.000107000000000,0.000107000000000,0.000107000000000\n+RollingBloom-refresh,1,0.000204000000000,0.000204000000000,0.000204000000000\n+SHA1,640,0.000909024336207,0.001938136418660,0.001843086257577\n+SHA256,256,0.002209486499909,0.008500099182129,0.004300644621253\n+SHA512,384,0.001319904176016,0.002813005447388,0.002615700786312\n+Sleep100ms,10,0.205592155456543,0.210056066513062,0.104166316986084\n+Trig,67108864,0.000000014997003,0.000000015448112,0.000000015188842\n+```\n+\n+More benchmarks are needed for, in no particular order:\n+- Script Validation\n+- CCoinDBView caching\n+- Coins database\n+- Memory pool\n+- Wallet coin selection"
      },
      {
        "sha": "039d5114fd9f1ae36dee12d1f343ffdd8a82f0c5",
        "filename": "doc/bips.md",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,29 @@\n+BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.13.0**):\n+\n+* [`BIP 9`](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki): The changes allowing multiple soft-forks to be deployed in parallel have been implemented since **v0.12.1**  ([PR #7575](https://github.com/bitcoin/bitcoin/pull/7575))\n+* [`BIP 11`](https://github.com/bitcoin/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n+* [`BIP 13`](https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki): The address format for P2SH addresses has been implemented since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n+* [`BIP 14`](https://github.com/bitcoin/bips/blob/master/bip-0014.mediawiki): The subversion string is being used as User Agent since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n+* [`BIP 16`](https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki): The pay-to-script-hash evaluation rules have been implemented since **v0.6.0**, and took effect on *April 1st 2012* ([PR #748](https://github.com/bitcoin/bitcoin/pull/748)).\n+* [`BIP 21`](https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki): The URI format for Bitcoin payments has been implemented since **v0.6.0** ([PR #176](https://github.com/bitcoin/bitcoin/pull/176)).\n+* [`BIP 22`](https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki): The 'getblocktemplate' (GBT) RPC protocol for mining has been implemented since **v0.7.0** ([PR #936](https://github.com/bitcoin/bitcoin/pull/936)).\n+* [`BIP 23`](https://github.com/bitcoin/bips/blob/master/bip-0023.mediawiki): Some extensions to GBT have been implemented since **v0.10.0rc1**, including longpolling and block proposals ([PR #1816](https://github.com/bitcoin/bitcoin/pull/1816)).\n+* [`BIP 30`](https://github.com/bitcoin/bips/blob/master/bip-0030.mediawiki): The evaluation rules to forbid creating new transactions with the same txid as previous not-fully-spent transactions were implemented since **v0.6.0**, and the rule took effect on *March 15th 2012* ([PR #915](https://github.com/bitcoin/bitcoin/pull/915)).\n+* [`BIP 31`](https://github.com/bitcoin/bips/blob/master/bip-0031.mediawiki): The 'pong' protocol message (and the protocol version bump to 60001) has been implemented since **v0.6.1** ([PR #1081](https://github.com/bitcoin/bitcoin/pull/1081)).\n+* [`BIP 32`](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki): Hierarchical Deterministic Wallets has been implemented since **v0.13.0** ([PR #8035](https://github.com/bitcoin/bitcoin/pull/8035)).\n+* [`BIP 34`](https://github.com/bitcoin/bips/blob/master/bip-0034.mediawiki): The rule that requires blocks to contain their height (number) in the coinbase input, and the introduction of version 2 blocks has been implemented since **v0.7.0**. The rule took effect for version 2 blocks as of *block 224413* (March 5th 2013), and version 1 blocks are no longer allowed since *block 227931* (March 25th 2013) ([PR #1526](https://github.com/bitcoin/bitcoin/pull/1526)).\n+* [`BIP 35`](https://github.com/bitcoin/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/bitcoin/bitcoin/pull/1641)).\n+* [`BIP 37`](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/bitcoin/bitcoin/pull/1795)).\n+* [`BIP 42`](https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/bitcoin/bitcoin/pull/3842)).\n+* [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)).\n+* [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n+* [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n+* [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been activated since *block 419328*.\n+* [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n+* [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579) and [PR #6641](https://github.com/bitcoin/bitcoin/pull/6641)).\n+* [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)) and has been activated since *block 419328*.\n+* [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)) and have been activated since *block 419328*.\n+* [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)).\n+* [`BIP 130`](https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/bitcoin/bitcoin/pull/6494)).\n+* [`BIP 133`](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki): feefilter messages are respected and sent for peer versions `>=70013` as of **v0.13.0** ([PR 7542](https://github.com/bitcoin/bitcoin/pull/7542)).\n+* [`BIP 152`](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki): Compact block transfer and related optimizations are used as of **v0.13.0** ([PR 8068](https://github.com/bitcoin/bitcoin/pull/8068))."
      },
      {
        "sha": "b84fd24b11d9270a5c3b23dfdb2b2e77ede2ecbd",
        "filename": "doc/bootstrap.md",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/bootstrap.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/bootstrap.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bootstrap.md?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,56 +0,0 @@\n-### Bootstrap the Blockchain Synchronization\n-\n-Normally the Bitcoin client will download the transaction and network information, called the blockchain, from the network by syncing with the other clients. This process can take quite some time as the [Bitcoin blockchain](https://blockchain.info/charts/blocks-size) is growing bigger and bigger for each day. Luckily there is a safe and fast way to speed up this process. We'll show you how to bootstrap your blockchain to bring your client up to speed in just a few simple steps.\n-\n-### Requirements\n-\n-- A fresh install of the Bitcoin client software.\n-\n-### Download the blockchain via BitTorrent\n-\n-Jeff Garzik, Bitcoin Core developer, offers an [torrent file](https://bitcointalk.org/index.php?topic=145386.0) for bootstrapping purposes that is updated often. BitTorrent is a protocol that speeds up the downloading of large files by using the other clients in the network. Examples of free and safe open source clients are [Deluge](http://deluge-torrent.org/) or [qBittorrent](http://www.qbittorrent.org/). A guide to installing and configuring the torrent clients can be found [here](http://dev.deluge-torrent.org/wiki/UserGuide) for Deluge and [here](http://qbforums.shiki.hu/) for qBittorrent. A further in-depth tutorial on BitTorrent can be found [here](http://www.howtogeek.com/howto/31846/bittorrent-for-beginners-how-get-started-downloading-torrents/).\n-\n-With the client installed we'll proceed to download the blockchain torrent file. Use the following magnet link:\n-\n-\tmagnet:?xt=urn:btih:2d4e6c1f96c5d5fb260dff92aea4e600227f1aea&dn=bootstrap.dat&tr=udp://tracker.openbittorrent.com:80&tr=udp://tracker.publicbt.com:80&tr=udp://tracker.ccc.de:80&tr=udp://tracker.istole.it:80\n-\t\n- or go to [Jeff Garzik's topic](https://bitcointalk.org/index.php?topic=145386.0) for a signed magnet link. Alternatively you can use the [.torrent file](http://sourceforge.net/projects/bitcoin/files/Bitcoin/blockchain/bootstrap.dat.torrent/download) found on SourceForge.\n-     \n-![Fig1](img/bootstrap1.png)\n-\n-The download page should look like this, with a countdown to the download. If it does not work click the direct download link.\n-\n-The torrent client installed will recognize the download of the torrent file. Save the bootstrap.dat file to the folder you use for downloads. The image below shows the torrent download in qBittorrent, with current speed and ETA highlighted.\n-\n-![Fig2](img/bootstrap2.png)\n-\n-### Importing the blockchain\n-Exit the Bitcoin client software if you have it running. Be sure not to have an actively used wallet in use. We are going to copy the download of the blockchain to the Bitcoin client data directory. You should run the client software at least once so it can generate the data directory. Copy the downloaded bootstrap.dat file into the Bitcoin data folder.\n-\n-**For Windows users:**\n-Open explorer, and type into the address bar:\n-\n-\t%APPDATA%\\Bitcoin\n-    \n-This will open up the data folder. It should look like the image below. Copy over the bootstrap.dat from your download folder to this directory.\n-![Fig4](img/bootstrap4.png)\n-\n-**For OSX users:**\n-Open Finder by pressing Press [shift] + [cmd] + [g] and enter:\n-\n-\t~/Library/Application Support/Bitcoin/\n-    \n-**For Linux users:**\n-The directory is hidden in your User folder. Go to:\n-\n-\t~/.bitcoin/\n-    \n-### Importing the blockchain\n-Now start the Bitcoin client software. It should show \"Importing blocks from disk\" like the image below. \n-![Fig5](img/bootstrap5.png)\n-\n-Wait until the import finishes. The client will download the last days not covered by the import. Congratulations you have successfully imported the blockchain!\n-\n-### Is this safe?\n-\n-Yes, the above method is safe. The download contains only raw blockchain data and the client verifies this on import. Do not download the blockchain from unofficial sources, especially if they provide `*.rev` and `*.sst` files. These files are not verified and can contain malicious edits."
      },
      {
        "sha": "d923301467a7f0ae394accd19cd7362feff3120a",
        "filename": "doc/build-openbsd.md",
        "status": "added",
        "additions": 162,
        "deletions": 0,
        "changes": 162,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,162 @@\n+OpenBSD build guide\n+======================\n+(updated for OpenBSD 5.7)\n+\n+This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n+\n+As OpenBSD is most common as a server OS, we will not bother with the GUI.\n+\n+Preparation\n+-------------\n+\n+Run the following as root to install the base dependencies for building:\n+\n+```bash\n+pkg_add gmake libtool libevent\n+pkg_add autoconf # (select highest version, e.g. 2.69)\n+pkg_add automake # (select highest version, e.g. 1.15)\n+pkg_add python # (select version 2.7.x, not 3.x)\n+ln -sf /usr/local/bin/python2.7 /usr/local/bin/python2\n+```\n+\n+The default C++ compiler that comes with OpenBSD 5.7 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core. It is possible to patch it up to compile, but with the planned transition to C++11 this is a losing battle. So here we will be installing a newer compiler.\n+\n+GCC\n+-------\n+\n+You can install a newer version of gcc with:\n+\n+```bash\n+pkg_add g++ # (select newest 4.x version, e.g. 4.9.2)\n+```\n+\n+This compiler will not overwrite the system compiler, it will be installed as `egcc` and `eg++` in `/usr/local/bin`.\n+\n+### Building boost\n+\n+Do not use `pkg_add boost`! The boost version installed thus is compiled using the `g++` compiler not `eg++`, which will result in a conflict between `/usr/local/lib/libestdc++.so.XX.0` and `/usr/lib/libstdc++.so.XX.0`, resulting in a test crash:\n+\n+    test_bitcoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n+    ...\n+    Segmentation fault (core dumped)\n+\n+This makes it necessary to build boost, or at least the parts used by Bitcoin Core, manually:\n+\n+```\n+# Pick some path to install boost to, here we create a directory within the bitcoin directory\n+BITCOIN_ROOT=$(pwd)\n+BOOST_PREFIX=\"${BITCOIN_ROOT}/boost\"\n+mkdir -p $BOOST_PREFIX\n+\n+# Fetch the source and verify that it is not tampered with\n+wget http://heanet.dl.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2\n+echo '727a932322d94287b62abb1bd2d41723eec4356a7728909e38adb65ca25241ca  boost_1_59_0.tar.bz2' | sha256 -c\n+# MUST output: (SHA256) boost_1_59_0.tar.bz2: OK\n+tar -xjf boost_1_59_0.tar.bz2\n+\n+# Boost 1.59 needs two small patches for OpenBSD\n+cd boost_1_59_0\n+# Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n+patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp\n+# https://github.com/boostorg/filesystem/commit/90517e459681790a091566dce27ca3acabf9a70c\n+sed 's/__OPEN_BSD__/__OpenBSD__/g' < libs/filesystem/src/path.cpp > libs/filesystem/src/path.cpp.tmp\n+mv libs/filesystem/src/path.cpp.tmp libs/filesystem/src/path.cpp\n+\n+# Build w/ minimum configuration necessary for bitcoin\n+echo 'using gcc : : eg++ : <cxxflags>\"-fvisibility=hidden -fPIC\" <linkflags>\"\" <archiver>\"ar\" <striper>\"strip\"  <ranlib>\"ranlib\" <rc>\"\" : ;' > user-config.jam\n+config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1\"\n+./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test\n+./b2 -d2 -j2 -d1 ${config_opts} --prefix=${BOOST_PREFIX} stage\n+./b2 -d0 -j4 ${config_opts} --prefix=${BOOST_PREFIX} install\n+```\n+\n+### Building BerkeleyDB\n+\n+BerkeleyDB is only necessary for the wallet functionality. To skip this, pass `--disable-wallet` to `./configure`.\n+\n+See \"Berkeley DB\" in [build_unix.md](build_unix.md) for instructions on how to build BerkeleyDB 4.8.\n+You cannot use the BerkeleyDB library from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n+\n+```bash\n+# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n+BITCOIN_ROOT=$(pwd)\n+BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+mkdir -p $BDB_PREFIX\n+\n+# Fetch the source and verify that it is not tampered with\n+wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n+echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz' | sha256 -c\n+# MUST output: (SHA256) db-4.8.30.NC.tar.gz: OK\n+tar -xzf db-4.8.30.NC.tar.gz\n+\n+# Build the library and install to specified prefix\n+cd db-4.8.30.NC/build_unix/\n+#  Note: Do a static build so that it can be embedded into the executable, instead of having to find a .so at runtime\n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX CC=egcc CXX=eg++ CPP=ecpp\n+make install\n+```\n+\n+### Building Bitcoin Core\n+\n+**Important**: use `gmake`, not `make`. The non-GNU `make` will exit with a horrible error.\n+\n+Preparation:\n+```bash\n+export AUTOCONF_VERSION=2.69 # replace this with the autoconf version that you installed\n+export AUTOMAKE_VERSION=1.15 # replace this with the automake version that you installed\n+./autogen.sh\n+```\n+Make sure `BDB_PREFIX` and `BOOST_PREFIX` are set to the appropriate paths from the above steps.\n+\n+To configure with wallet:\n+```bash\n+./configure --with-gui=no --with-boost=$BOOST_PREFIX \\\n+    CC=egcc CXX=eg++ CPP=ecpp \\\n+    LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n+```\n+\n+To configure without wallet:\n+```bash\n+./configure --disable-wallet --with-gui=no --with-boost=$BOOST_PREFIX \\\n+    CC=egcc CXX=eg++ CPP=ecpp\n+```\n+\n+Build and run the tests:\n+```bash\n+gmake\n+gmake check\n+```\n+\n+Clang (not currently working)\n+------------------------------\n+\n+Using a newer g++ results in linking the new code to a new libstdc++.\n+Libraries built with the old g++, will still import the old library.\n+This gives conflicts, necessitating rebuild of all C++ dependencies of the application.\n+\n+With clang this can - at least theoretically - be avoided because it uses the\n+base system's libstdc++.\n+\n+```bash\n+pkg_add llvm boost\n+```\n+\n+```bash\n+./configure --disable-wallet --with-gui=no CC=clang CXX=clang++\n+gmake\n+```\n+\n+However, this does not appear to work. Compilation succeeds, but link fails\n+with many 'local symbol discarded' errors:\n+\n+    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+\n+According to similar reported errors this is a binutils (ld) issue in 2.15, the\n+version installed by OpenBSD 5.7:\n+\n+- http://openbsd-archive.7691.n7.nabble.com/UPDATE-cppcheck-1-65-td248900.html\n+- https://llvm.org/bugs/show_bug.cgi?id=9758\n+\n+There is no known workaround for this."
      },
      {
        "sha": "c9eb4225abb5c3af074e1282ccad17bc4100119a",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 52,
        "deletions": 101,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,144 +1,95 @@\n Mac OS X Build Instructions and Notes\n ====================================\n-This guide will show you how to build bitcoind(headless client) for OSX.\n-\n-Notes\n------\n-\n-* Tested on OS X 10.7 through 10.10 on 64-bit Intel processors only.\n-\n-* All of the commands should be executed in a Terminal application. The\n-built-in one is located in `/Applications/Utilities`.\n+The commands in this guide should be executed in a Terminal application.\n+The built-in one is located in `/Applications/Utilities/Terminal.app`.\n \n Preparation\n -----------\n+Install the OS X command line tools:\n \n-You need to install XCode with all the options checked so that the compiler\n-and everything is available in /usr not just /Developer. XCode should be\n-available on your OS X installation media, but if not, you can get the\n-current version from https://developer.apple.com/xcode/. If you install\n-Xcode 4.3 or later, you'll need to install its command line tools. This can\n-be done in `Xcode > Preferences > Downloads > Components` and generally must\n-be re-done or updated every time Xcode is updated.\n-\n-There's also an assumption that you already have `git` installed. If\n-not, it's the path of least resistance to install [Github for Mac](https://mac.github.com/)\n-(OS X 10.7+) or\n-[Git for OS X](https://code.google.com/p/git-osx-installer/). It is also\n-available via Homebrew.\n+`xcode-select --install`\n \n-You will also need to install [Homebrew](http://brew.sh) in order to install library\n-dependencies.\n+When the popup appears, click `Install`.\n \n-The installation of the actual dependencies is covered in the Instructions\n-sections below.\n+Then install [Homebrew](http://brew.sh).\n \n-Instructions: Homebrew\n+Dependencies\n ----------------------\n \n-#### Install dependencies using Homebrew\n+    brew install automake berkeley-db4 libtool boost --c++11 miniupnpc openssl pkg-config protobuf --c++11 qt5 libevent\n \n-        brew install autoconf automake libtool boost miniupnpc openssl pkg-config protobuf qt\n+NOTE: Building with Qt4 is still supported, however, could result in a broken UI. Building with Qt5 is recommended.\n \n-#### Installing berkeley-db4 using Homebrew\n-\n-The homebrew package for berkeley-db4 has been broken for some time.  It will install without Java though.\n-\n-Running this command takes you into brew's interactive mode, which allows you to configure, make, and install by hand:\n-```\n-$ brew install https://raw.github.com/mxcl/homebrew/master/Library/Formula/berkeley-db4.rb -\u2013without-java \n-```\n-\n-The rest of these commands are run inside brew interactive mode:\n-```\n-/private/tmp/berkeley-db4-UGpd0O/db-4.8.30 $ cd ..\n-/private/tmp/berkeley-db4-UGpd0O $ db-4.8.30/dist/configure --prefix=/usr/local/Cellar/berkeley-db4/4.8.30 --mandir=/usr/local/Cellar/berkeley-db4/4.8.30/share/man --enable-cxx\n-/private/tmp/berkeley-db4-UGpd0O $ make\n-/private/tmp/berkeley-db4-UGpd0O $ make install\n-/private/tmp/berkeley-db4-UGpd0O $ exit\n-```\n-\n-After exiting, you'll get a warning that the install is keg-only, which means it wasn't symlinked to `/usr/local`.  You don't need it to link it to build bitcoin, but if you want to, here's how:\n-\n-    $ brew link --force berkeley-db4\n+Build Bitcoin Core\n+------------------------\n \n+1. Clone the bitcoin source code and cd into `bitcoin`\n \n-### Building `bitcoind`\n+        git clone https://github.com/bitcoin/bitcoin\n+        cd bitcoin\n \n-1. Clone the github tree to get the source code and go into the directory.\n+2.  Build bitcoin-core:\n \n-        git clone https://github.com/bitcoin/bitcoin.git\n-        cd bitcoin\n+    Configure and build the headless bitcoin binaries as well as the GUI (if Qt is found).\n \n-2.  Build bitcoind:\n+    You can disable the GUI build by passing `--without-gui` to configure.\n \n         ./autogen.sh\n         ./configure\n         make\n \n-3.  It is also a good idea to build and run the unit tests:\n+3.  It is recommended to build and run the unit tests:\n \n         make check\n \n-4.  (Optional) You can also install bitcoind to your path:\n+4.  You can also create a .dmg that contains the .app bundle (optional):\n \n-        make install\n+        make deploy\n \n-Use Qt Creator as IDE\n-------------------------\n-You can use Qt Creator as IDE, for debugging and for manipulating forms, etc.\n-Download Qt Creator from http://www.qt.io/download/. Download the \"community edition\" and only install Qt Creator (uncheck the rest during the installation process).\n+Running\n+-------\n \n-1. Make sure you installed everything through homebrew mentioned above \n-2. Do a proper ./configure --with-gui=qt5 --enable-debug\n-3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n-4. Enter \"bitcoin-qt\" as project name, enter src/qt as location\n-5. Leave the file selection as it is\n-6. Confirm the \"summary page\"\n-7. In the \"Projects\" tab select \"Manage Kits...\"\n-8. Select the default \"Desktop\" kit and select \"Clang (x86 64bit in /usr/bin)\" as compiler\n-9. Select LLDB as debugger (you might need to set the path to your installtion)\n-10. Start debugging with Qt Creator\n+Bitcoin Core is now available at `./src/bitcoind`\n \n-Creating a release build\n-------------------------\n-You can ignore this section if you are building `bitcoind` for your own use.\n+Before running, it's recommended you create an RPC configuration file.\n \n-bitcoind/bitcoin-cli binaries are not included in the Bitcoin-Qt.app bundle.\n+    echo -e \"rpcuser=bitcoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n \n-If you are building `bitcoind` or `Bitcoin-Qt` for others, your build machine should be set up\n-as follows for maximum compatibility:\n+    chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n \n-All dependencies should be compiled with these flags:\n+The first time you run bitcoind, it will start downloading the blockchain. This process could take several hours.\n \n- -mmacosx-version-min=10.7\n- -arch x86_64\n- -isysroot $(xcode-select --print-path)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk\n+You can monitor the download process by looking at the debug.log file:\n \n-Once dependencies are compiled, see release-process.md for how the Bitcoin-Qt.app\n-bundle is packaged and signed to create the .dmg disk image that is distributed.\n+    tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n \n-Running\n+Other commands:\n -------\n \n-It's now available at `./bitcoind`, provided that you are still in the `src`\n-directory. We have to first create the RPC configuration file, though.\n-\n-Run `./bitcoind` to get the filename where it should be put, or just try these\n-commands:\n+    ./src/bitcoind -daemon # Starts the bitcoin daemon.\n+    ./src/bitcoin-cli --help # Outputs a list of command-line options.\n+    ./src/bitcoin-cli help # Outputs a list of RPC commands when the daemon is running.\n \n-    echo -e \"rpcuser=bitcoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n-    chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+Using Qt Creator as IDE\n+------------------------\n+You can use Qt Creator as an IDE, for bitcoin development.\n+Download and install the community edition of [Qt Creator](https://www.qt.io/download/).\n+Uncheck everything except Qt Creator during the installation process.\n \n-The next time you run it, it will start downloading the blockchain, but it won't\n-output anything while it's doing this. This process may take several hours;\n-you can monitor its process by looking at the debug.log file, like this:\n+1. Make sure you installed everything through Homebrew mentioned above\n+2. Do a proper ./configure --enable-debug\n+3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n+4. Enter \"bitcoin-qt\" as project name, enter src/qt as location\n+5. Leave the file selection as it is\n+6. Confirm the \"summary page\"\n+7. In the \"Projects\" tab select \"Manage Kits...\"\n+8. Select the default \"Desktop\" kit and select \"Clang (x86 64bit in /usr/bin)\" as compiler\n+9. Select LLDB as debugger (you might need to set the path to your installation)\n+10. Start debugging with Qt Creator\n \n-    tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n+Notes\n+-----\n \n-Other commands:\n--------\n+* Tested on OS X 10.7 through 10.11 on 64-bit Intel processors only.\n \n-    ./bitcoind -daemon # to start the bitcoin daemon.\n-    ./bitcoin-cli --help  # for a list of command-line options.\n-    ./bitcoin-cli help    # When the daemon is running, to get a list of RPC commands\n+* Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714)"
      },
      {
        "sha": "bd89978cc2a74270808eb95cc24d42618021e62d",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 117,
        "deletions": 49,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,15 +1,17 @@\n UNIX BUILD NOTES\n ====================\n-Some notes on how to build Bitcoin in Unix. \n+Some notes on how to build Bitcoin Core in Unix.\n+\n+(for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))\n \n Note\n ---------------------\n Always use absolute paths to configure and compile bitcoin and the dependencies,\n-for example, when specifying the the path of the dependency:\n+for example, when specifying the path of the dependency:\n \n \t../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n \n-Here BDB_PREFIX must absolute path - it is defined using $(pwd) which ensures\n+Here BDB_PREFIX must be an absolute path - it is defined using $(pwd) which ensures\n the usage of the absolute path.\n \n To Build\n@@ -31,8 +33,9 @@ These dependencies are required:\n \n  Library     | Purpose          | Description\n  ------------|------------------|----------------------\n- libssl      | SSL Support      | Secure communications\n- libboost    | Boost            | C++ Library\n+ libssl      | Crypto           | Random Number Generation, Elliptic Curve Cryptography\n+ libboost    | Utility          | Library for threading, data structures, etc\n+ libevent    | Networking       | OS independent asynchronous networking\n \n Optional dependencies:\n \n@@ -43,69 +46,76 @@ Optional dependencies:\n  qt          | GUI              | GUI toolkit (only needed when GUI enabled)\n  protobuf    | Payments in GUI  | Data interchange format used for payment protocol (only needed when GUI enabled)\n  libqrencode | QR codes in GUI  | Optional for generating QR codes (only needed when GUI enabled)\n+ univalue    | Utility          | JSON parsing and encoding (bundled version will be used unless --with-system-univalue passed to configure)\n+ libzmq3     | ZMQ notification | Optional, allows generating ZMQ notifications (requires ZMQ version >= 4.x)\n \n For the versions used in the release, see [release-process.md](release-process.md) under *Fetch and build inputs*.\n \n-System requirements\n+Memory Requirements\n --------------------\n \n-C++ compilers are memory-hungry. It is recommended to have at least 1 GB of\n-memory available when compiling Bitcoin Core. With 512MB of memory or less\n-compilation will take much longer due to swap thrashing.\n+C++ compilers are memory-hungry. It is recommended to have at least 1.5 GB of\n+memory available when compiling Bitcoin Core. On systems with less, gcc can be\n+tuned to conserve memory with additional CXXFLAGS:\n+\n+\n+    ./configure CXXFLAGS=\"--param ggc-min-expand=1 --param ggc-min-heapsize=32768\"\n \n Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-\tsudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev\n-\t\n-for Ubuntu 12.04 and later or Debian 7 and later libboost-all-dev has to be installed:\n+    sudo apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils\n \n-\tsudo apt-get install libboost-all-dev\n+Options when installing required Boost library files:\n \n- db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n- You can add the repository using the following command:\n+1. On at least Ubuntu 14.04+ and Debian 7+ there are generic names for the\n+individual boost development packages, so the following can be used to only\n+install necessary parts of boost:\n \n-        sudo add-apt-repository ppa:bitcoin/bitcoin\n-        sudo apt-get update\n+        sudo apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev\n \n- Ubuntu 12.04 and later have packages for libdb5.1-dev and libdb5.1++-dev,\n- but using these will break binary wallet compatibility, and is not recommended.\n+2. If that doesn't work, you can install all boost development packages with:\n \n-for Debian 7 (Wheezy) and later:\n- The oldstable repository contains db4.8 packages.\n- Add the following line to /etc/apt/sources.list,\n- replacing [mirror] with any official debian mirror.\n+        sudo apt-get install libboost-all-dev\n \n-\tdeb http://[mirror]/debian/ oldstable main\n+BerkeleyDB is required for the wallet. db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n+You can add the repository and install using the following commands:\n \n-To enable the change run\n+    sudo add-apt-repository ppa:bitcoin/bitcoin\n+    sudo apt-get update\n+    sudo apt-get install libdb4.8-dev libdb4.8++-dev\n \n-\tsudo apt-get update\n+Ubuntu and Debian have their own libdb-dev and libdb++-dev packages, but these will install\n+BerkeleyDB 5.1 or later, which break binary wallet compatibility with the distributed executables which\n+are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\n+pass `--with-incompatible-bdb` to configure.\n \n-for other Debian & Ubuntu (with ppa):\n-\n-\tsudo apt-get install libdb4.8-dev libdb4.8++-dev\n+See the section \"Disable-wallet mode\" to build Bitcoin Core without wallet.\n \n Optional:\n \n-\tsudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n+    sudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n+\n+ZMQ dependencies:\n+\n+    sudo apt-get install libzmq3-dev (provides ZMQ API 4.x)\n \n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n \n If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n-are installed. Either Qt 4 or Qt 5 are necessary to build the GUI.\n-If both Qt 4 and Qt 5 are installed, Qt 4 will be used. Pass `--with-gui=qt5` to configure to choose Qt5.\n+are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.\n+If both Qt 4 and Qt 5 are installed, Qt 5 will be used. Pass `--with-gui=qt4` to configure to choose Qt4.\n To build without GUI pass `--without-gui`.\n \n-To build with Qt 4 you need the following:\n+To build with Qt 5 (recommended) you need the following:\n \n-    sudo apt-get install libqt4-dev libprotobuf-dev protobuf-compiler\n+    sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n \n-For Qt 5 you need the following:\n+Alternatively, to build with Qt 4 you need the following:\n \n-    sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n+    sudo apt-get install libqt4-dev libprotobuf-dev protobuf-compiler\n \n libqrencode (optional) can be installed with:\n \n@@ -114,6 +124,24 @@ libqrencode (optional) can be installed with:\n Once these are installed, they will be found by configure and a bitcoin-qt executable will be\n built by default.\n \n+Dependency Build Instructions: Fedora\n+-------------------------------------\n+Build requirements:\n+\n+    sudo dnf install gcc-c++ libtool make autoconf automake openssl-devel libevent-devel boost-devel libdb4-devel libdb4-cxx-devel\n+\n+Optional:\n+\n+    sudo dnf install miniupnpc-devel\n+\n+To build with Qt 5 (recommended) you need the following:\n+\n+    sudo dnf install qt5-qttools-devel qt5-qtbase-devel protobuf-devel\n+\n+libqrencode (optional) can be installed with:\n+\n+    sudo dnf install qrencode-devel\n+\n Notes\n -----\n The release is built with GCC and then \"strip bitcoind\" to strip the debug\n@@ -131,14 +159,6 @@ turned off by default.  See the configure options for upnp behavior desired:\n \t--disable-upnp-default   (the default) UPnP support turned off by default at runtime\n \t--enable-upnp-default    UPnP support turned on by default at runtime\n \n-To build:\n-\n-\ttar -xzvf miniupnpc-1.6.tar.gz\n-\tcd miniupnpc-1.6\n-\tmake\n-\tsudo su\n-\tmake install\n-\n \n Berkeley DB\n -----------\n@@ -159,13 +179,14 @@ tar -xzvf db-4.8.30.NC.tar.gz\n \n # Build the library and install to our prefix\n cd db-4.8.30.NC/build_unix/\n-#  Note: Do a static build so that it can be embedded into the exectuable, instead of having to find a .so at runtime\n+#  Note: Do a static build so that it can be embedded into the executable, instead of having to find a .so at runtime\n ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n make install\n \n # Configure Bitcoin Core to use our own-built instance of BDB\n cd $BITCOIN_ROOT\n-./configure (other args...) LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n+./autogen.sh\n+./configure LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\" # (other args...)\n ```\n \n **Note**: You only need Berkeley DB if the wallet is enabled (see the section *Disable-Wallet mode* below).\n@@ -195,19 +216,20 @@ Hardening enables the following features:\n \n * Position Independent Executable\n     Build position independent code to take advantage of Address Space Layout Randomization\n-    offered by some kernels. An attacker who is able to cause execution of code at an arbitrary\n-    memory location is thwarted if he doesn't know where anything useful is located.\n+    offered by some kernels. Attackers who can cause execution of code at an arbitrary memory\n+    location are thwarted if they don't know where anything useful is located.\n     The stack and heap are randomly located by default but this allows the code section to be\n     randomly located as well.\n \n-    On an Amd64 processor where a library was not compiled with -fPIC, this will cause an error\n+    On an AMD64 processor where a library was not compiled with -fPIC, this will cause an error\n     such as: \"relocation R_X86_64_32 against `......' can not be used when making a shared object;\"\n \n     To test that you have built PIE executable, install scanelf, part of paxutils, and use:\n \n     \tscanelf -e ./bitcoin\n \n     The output should contain:\n+\n      TYPE\n     ET_DYN\n \n@@ -239,3 +261,49 @@ In this case there is no dependency on Berkeley DB 4.8.\n Mining is also possible in disable-wallet mode, but only using the `getblocktemplate` RPC\n call not `getwork`.\n \n+Additional Configure Flags\n+--------------------------\n+A list of additional configure flags can be displayed with:\n+\n+    ./configure --help\n+\n+\n+Setup and Build Example: Arch Linux\n+-----------------------------------\n+This example lists the steps necessary to setup and build a command line only, non-wallet distribution of the latest changes on Arch Linux:\n+\n+    pacman -S git base-devel boost libevent python\n+    git clone https://github.com/bitcoin/bitcoin.git\n+    cd bitcoin/\n+    ./autogen.sh\n+    ./configure --disable-wallet --without-gui --without-miniupnpc\n+    make check\n+\n+Note:\n+Enabling wallet support requires either compiling against a Berkeley DB newer than 4.8 (package `db`) using `--with-incompatible-bdb`,\n+or building and depending on a local version of Berkeley DB 4.8. The readily available Arch Linux packages are currently built using\n+`--with-incompatible-bdb` according to the [PKGBUILD](https://projects.archlinux.org/svntogit/community.git/tree/bitcoin/trunk/PKGBUILD).\n+As mentioned above, when maintaining portability of the wallet between the standard Bitcoin Core distributions and independently built\n+node software is desired, Berkeley DB 4.8 must be used.\n+\n+\n+ARM Cross-compilation\n+-------------------\n+These steps can be performed on, for example, an Ubuntu VM. The depends system\n+will also work on other Linux distributions, however the commands for\n+installing the toolchain will be different.\n+\n+First install the toolchain:\n+\n+    sudo apt-get install g++-arm-linux-gnueabihf\n+\n+To build executables for ARM:\n+\n+    cd depends\n+    make HOST=arm-linux-gnueabihf NO_QT=1\n+    cd ..\n+    ./configure --prefix=$PWD/depends/arm-linux-gnueabihf --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\n+    make\n+\n+\n+For further documentation on the depends system see [README.md](../depends/README.md) in the depends directory."
      },
      {
        "sha": "2b9233d1e140631d3bc18a311a7737981710b87d",
        "filename": "doc/build-windows.md",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,40 @@\n+WINDOWS BUILD NOTES\n+====================\n+\n+Some notes on how to build Bitcoin Core for Windows.\n+\n+Most developers use cross-compilation from Ubuntu to build executables for\n+Windows. This is also used to build the release binaries.\n+\n+Building on Windows itself is possible (for example using msys / mingw-w64),\n+but no one documented the steps to do this. If you are doing this, please contribute them.\n+\n+Cross-compilation\n+-------------------\n+\n+These steps can be performed on, for example, an Ubuntu VM. The depends system\n+will also work on other Linux distributions, however the commands for\n+installing the toolchain will be different.\n+\n+First install the toolchains:\n+\n+    sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev g++-mingw-w64-x86-64 mingw-w64-x86-64-dev\n+\n+To build executables for Windows 32-bit:\n+\n+    cd depends\n+    make HOST=i686-w64-mingw32 -j4\n+    cd ..\n+    ./configure --prefix=`pwd`/depends/i686-w64-mingw32\n+    make\n+\n+To build executables for Windows 64-bit:\n+\n+    cd depends\n+    make HOST=x86_64-w64-mingw32 -j4\n+    cd ..\n+    ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n+    make\n+\n+For further documentation on the depends system see [README.md](../depends/README.md) in the depends directory.\n+"
      },
      {
        "sha": "43294dbe4c116aaae4678b6cbae3d67965d6e10b",
        "filename": "doc/coding.md",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/coding.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/coding.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/coding.md?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262",
        "patch": "@@ -1,138 +0,0 @@\n-Coding\n-====================\n-\n-Various coding styles have been used during the history of the codebase,\n-and the result is not very consistent. However, we're now trying to converge to\n-a single style, so please use it in new code. Old code will be converted\n-gradually.\n-- Basic rules specified in src/.clang-format. Use a recent clang-format-3.5 to format automatically.\n-  - Braces on new lines for namespaces, classes, functions, methods.\n-  - Braces on the same line for everything else.\n-  - 4 space indentation (no tabs) for every block except namespaces.\n-  - No indentation for public/protected/private or for namespaces.\n-  - No extra spaces inside parenthesis; don't do ( this )\n-  - No space after function names; one space after if, for and while.\n-\n-Block style example:\n-```c++\n-namespace foo\n-{\n-class Class\n-{\n-    bool Function(char* psz, int n)\n-    {\n-        // Comment summarising what this section of code does\n-        for (int i = 0; i < n; i++) {\n-            // When something fails, return early\n-            if (!Something())\n-                return false;\n-            ...\n-        }\n-\n-        // Success return is usually at the end\n-        return true;\n-    }\n-}\n-}\n-```\n-\n-Doxygen comments\n------------------\n-\n-To facilitate the generation of documentation, use doxygen-compatible comment blocks for functions, methods and fields.\n-\n-For example, to describe a function use:\n-```c++\n-/**\n- * ... text ...\n- * @param[in] arg1    A description\n- * @param[in] arg2    Another argument description\n- * @pre Precondition for function...\n- */\n-bool function(int arg1, const char *arg2)\n-```\n-A complete list of `@xxx` commands can be found at http://www.stack.nl/~dimitri/doxygen/manual/commands.html.\n-As Doxygen recognizes the comments by the delimiters (`/**` and `*/` in this case), you don't\n-*need* to provide any commands for a comment to be valid, just a description text is fine. \n-\n-To describe a class use the same construct above the class definition:\n-```c++\n-/** \n- * Alerts are for notifying old versions if they become too obsolete and\n- * need to upgrade. The message is displayed in the status bar.\n- * @see GetWarnings()\n- */\n-class CAlert\n-{\n-```\n-\n-To describe a member or variable use:\n-```c++\n-int var; //!< Detailed description after the member\n-```\n-\n-Also OK:\n-```c++\n-///\n-/// ... text ...\n-///\n-bool function2(int arg1, const char *arg2)\n-```\n-\n-Not OK (used plenty in the current source, but not picked up):\n-```c++\n-//\n-// ... text ...\n-//\n-```\n-\n-A full list of comment syntaxes picked up by doxygen can be found at http://www.stack.nl/~dimitri/doxygen/manual/docblocks.html,\n-but if possible use one of the above styles.\n-\n-Locking/mutex usage notes\n--------------------------\n-\n-The code is multi-threaded, and uses mutexes and the\n-LOCK/TRY_LOCK macros to protect data structures.\n-\n-Deadlocks due to inconsistent lock ordering (thread 1 locks cs_main\n-and then cs_wallet, while thread 2 locks them in the opposite order:\n-result, deadlock as each waits for the other to release its lock) are\n-a problem. Compile with -DDEBUG_LOCKORDER to get lock order\n-inconsistencies reported in the debug.log file.\n-\n-Re-architecting the core code so there are better-defined interfaces\n-between the various components is a goal, with any necessary locking\n-done by the components (e.g. see the self-contained CKeyStore class\n-and its cs_KeyStore lock for example).\n-\n-Threads\n--------\n-\n-- ThreadScriptCheck : Verifies block scripts.\n-\n-- ThreadImport : Loads blocks from blk*.dat files or bootstrap.dat.\n-\n-- StartNode : Starts other threads.\n-\n-- ThreadDNSAddressSeed : Loads addresses of peers from the DNS.\n-\n-- ThreadMapPort : Universal plug-and-play startup/shutdown\n-\n-- ThreadSocketHandler : Sends/Receives data from peers on port 8333.\n-\n-- ThreadOpenAddedConnections : Opens network connections to added nodes.\n-\n-- ThreadOpenConnections : Initiates new connections to peers.\n-\n-- ThreadMessageHandler : Higher-level message handling (sending and receiving).\n-\n-- DumpAddresses : Dumps IP addresses of nodes to peers.dat.\n-\n-- ThreadFlushWalletDB : Close the wallet.dat file if it hasn't been used in 500ms.\n-\n-- ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n-\n-- BitcoinMiner : Generates bitcoins (if wallet is enabled).\n-\n-- Shutdown : Does an orderly shutdown of everything."
      },
      {
        "sha": "95c46b05fe203e06bcbd089da482d1a00bae802d",
        "filename": "doc/developer-notes.md",
        "status": "added",
        "additions": 430,
        "deletions": 0,
        "changes": 430,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,430 @@\n+Developer Notes\n+===============\n+\n+Various coding styles have been used during the history of the codebase,\n+and the result is not very consistent. However, we're now trying to converge to\n+a single style, so please use it in new code. Old code will be converted\n+gradually.\n+- Basic rules specified in [src/.clang-format](/src/.clang-format).\n+  Use a recent clang-format to format automatically using one of the [dev scripts]\n+  (/contrib/devtools/README.md#clang-formatpy).\n+  - Braces on new lines for namespaces, classes, functions, methods.\n+  - Braces on the same line for everything else.\n+  - 4 space indentation (no tabs) for every block except namespaces.\n+  - No indentation for public/protected/private or for namespaces.\n+  - No extra spaces inside parenthesis; don't do ( this )\n+  - No space after function names; one space after if, for and while.\n+\n+Block style example:\n+```c++\n+namespace foo\n+{\n+class Class\n+{\n+    bool Function(char* psz, int n)\n+    {\n+        // Comment summarising what this section of code does\n+        for (int i = 0; i < n; i++) {\n+            // When something fails, return early\n+            if (!Something())\n+                return false;\n+            ...\n+        }\n+\n+        // Success return is usually at the end\n+        return true;\n+    }\n+}\n+}\n+```\n+\n+Doxygen comments\n+-----------------\n+\n+To facilitate the generation of documentation, use doxygen-compatible comment blocks for functions, methods and fields.\n+\n+For example, to describe a function use:\n+```c++\n+/**\n+ * ... text ...\n+ * @param[in] arg1    A description\n+ * @param[in] arg2    Another argument description\n+ * @pre Precondition for function...\n+ */\n+bool function(int arg1, const char *arg2)\n+```\n+A complete list of `@xxx` commands can be found at http://www.stack.nl/~dimitri/doxygen/manual/commands.html.\n+As Doxygen recognizes the comments by the delimiters (`/**` and `*/` in this case), you don't\n+*need* to provide any commands for a comment to be valid; just a description text is fine.\n+\n+To describe a class use the same construct above the class definition:\n+```c++\n+/**\n+ * Alerts are for notifying old versions if they become too obsolete and\n+ * need to upgrade. The message is displayed in the status bar.\n+ * @see GetWarnings()\n+ */\n+class CAlert\n+{\n+```\n+\n+To describe a member or variable use:\n+```c++\n+int var; //!< Detailed description after the member\n+```\n+\n+or\n+```cpp\n+//! Description before the member\n+int var;\n+```\n+\n+Also OK:\n+```c++\n+///\n+/// ... text ...\n+///\n+bool function2(int arg1, const char *arg2)\n+```\n+\n+Not OK (used plenty in the current source, but not picked up):\n+```c++\n+//\n+// ... text ...\n+//\n+```\n+\n+A full list of comment syntaxes picked up by doxygen can be found at http://www.stack.nl/~dimitri/doxygen/manual/docblocks.html,\n+but if possible use one of the above styles.\n+\n+Development tips and tricks\n+---------------------------\n+\n+**compiling for debugging**\n+\n+Run configure with the --enable-debug option, then make. Or run configure with\n+CXXFLAGS=\"-g -ggdb -O0\" or whatever debug flags you need.\n+\n+**debug.log**\n+\n+If the code is behaving strangely, take a look in the debug.log file in the data directory;\n+error and debugging messages are written there.\n+\n+The -debug=... command-line option controls debugging; running with just -debug or -debug=1 will turn\n+on all categories (and give you a very large debug.log file).\n+\n+The Qt code routes qDebug() output to debug.log under category \"qt\": run with -debug=qt\n+to see it.\n+\n+**testnet and regtest modes**\n+\n+Run with the -testnet option to run with \"play bitcoins\" on the test network, if you\n+are testing multi-machine code that needs to operate across the internet.\n+\n+If you are testing something that can run on one machine, run with the -regtest option.\n+In regression test mode, blocks can be created on-demand; see qa/rpc-tests/ for tests\n+that run in -regtest mode.\n+\n+**DEBUG_LOCKORDER**\n+\n+Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n+can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure\n+CXXFLAGS=\"-DDEBUG_LOCKORDER -g\") inserts run-time checks to keep track of which locks\n+are held, and adds warnings to the debug.log file if inconsistencies are detected.\n+\n+Locking/mutex usage notes\n+-------------------------\n+\n+The code is multi-threaded, and uses mutexes and the\n+LOCK/TRY_LOCK macros to protect data structures.\n+\n+Deadlocks due to inconsistent lock ordering (thread 1 locks cs_main\n+and then cs_wallet, while thread 2 locks them in the opposite order:\n+result, deadlock as each waits for the other to release its lock) are\n+a problem. Compile with -DDEBUG_LOCKORDER to get lock order\n+inconsistencies reported in the debug.log file.\n+\n+Re-architecting the core code so there are better-defined interfaces\n+between the various components is a goal, with any necessary locking\n+done by the components (e.g. see the self-contained CKeyStore class\n+and its cs_KeyStore lock for example).\n+\n+Threads\n+-------\n+\n+- ThreadScriptCheck : Verifies block scripts.\n+\n+- ThreadImport : Loads blocks from blk*.dat files or bootstrap.dat.\n+\n+- StartNode : Starts other threads.\n+\n+- ThreadDNSAddressSeed : Loads addresses of peers from the DNS.\n+\n+- ThreadMapPort : Universal plug-and-play startup/shutdown\n+\n+- ThreadSocketHandler : Sends/Receives data from peers on port 8333.\n+\n+- ThreadOpenAddedConnections : Opens network connections to added nodes.\n+\n+- ThreadOpenConnections : Initiates new connections to peers.\n+\n+- ThreadMessageHandler : Higher-level message handling (sending and receiving).\n+\n+- DumpAddresses : Dumps IP addresses of nodes to peers.dat.\n+\n+- ThreadFlushWalletDB : Close the wallet.dat file if it hasn't been used in 500ms.\n+\n+- ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n+\n+- BitcoinMiner : Generates bitcoins (if wallet is enabled).\n+\n+- Shutdown : Does an orderly shutdown of everything.\n+\n+Ignoring IDE/editor files\n+--------------------------\n+\n+In closed-source environments in which everyone uses the same IDE it is common\n+to add temporary files it produces to the project-wide `.gitignore` file.\n+\n+However, in open source software such as Bitcoin Core, where everyone uses\n+their own editors/IDE/tools, it is less common. Only you know what files your\n+editor produces and this may change from version to version. The canonical way\n+to do this is thus to create your local gitignore. Add this to `~/.gitconfig`:\n+\n+```\n+[core]\n+        excludesfile = /home/.../.gitignore_global\n+```\n+\n+(alternatively, type the command `git config --global core.excludesfile ~/.gitignore_global`\n+on a terminal)\n+\n+Then put your favourite tool's temporary filenames in that file, e.g.\n+```\n+# NetBeans\n+nbproject/\n+```\n+\n+Another option is to create a per-repository excludes file `.git/info/exclude`.\n+These are not committed but apply only to one repository.\n+\n+If a set of tools is used by the build system or scripts the repository (for\n+example, lcov) it is perfectly acceptable to add its files to `.gitignore`\n+and commit them.\n+\n+Development guidelines\n+============================\n+\n+A few non-style-related recommendations for developers, as well as points to\n+pay attention to for reviewers of Bitcoin Core code.\n+\n+General Bitcoin Core\n+----------------------\n+\n+- New features should be exposed on RPC first, then can be made available in the GUI\n+\n+  - *Rationale*: RPC allows for better automatic testing. The test suite for\n+    the GUI is very limited\n+\n+- Make sure pull requests pass Travis CI before merging\n+\n+  - *Rationale*: Makes sure that they pass thorough testing, and that the tester will keep passing\n+     on the master branch. Otherwise all new pull requests will start failing the tests, resulting in\n+     confusion and mayhem\n+ \n+  - *Explanation*: If the test suite is to be updated for a change, this has to\n+    be done first \n+\n+Wallet\n+-------\n+\n+- Make sure that no crashes happen with run-time option `-disablewallet`.\n+\n+  - *Rationale*: In RPC code that conditionally uses the wallet (such as\n+    `validateaddress`) it is easy to forget that global pointer `pwalletMain`\n+    can be NULL. See `qa/rpc-tests/disablewallet.py` for functional tests\n+    exercising the API with `-disablewallet`\n+\n+- Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set\n+\n+  - *Rationale*: Otherwise compilation of the disable-wallet build will fail in environments without BerkeleyDB\n+\n+General C++\n+-------------\n+\n+- Assertions should not have side-effects\n+\n+  - *Rationale*: Even though the source code is set to to refuse to compile\n+    with assertions disabled, having side-effects in assertions is unexpected and\n+    makes the code harder to understand\n+\n+- If you use the `.h`, you must link the `.cpp`\n+\n+  - *Rationale*: Include files define the interface for the code in implementation files. Including one but\n+      not linking the other is confusing. Please avoid that. Moving functions from\n+      the `.h` to the `.cpp` should not result in build errors\n+\n+- Use the RAII (Resource Acquisition Is Initialization) paradigm where possible. For example by using\n+  `unique_ptr` for allocations in a function.\n+\n+  - *Rationale*: This avoids memory and resource leaks, and ensures exception safety\n+\n+C++ data structures\n+--------------------\n+\n+- Never use the `std::map []` syntax when reading from a map, but instead use `.find()`\n+\n+  - *Rationale*: `[]` does an insert (of the default element) if the item doesn't\n+    exist in the map yet. This has resulted in memory leaks in the past, as well as\n+    race conditions (expecting read-read behavior). Using `[]` is fine for *writing* to a map\n+\n+- Do not compare an iterator from one data structure with an iterator of\n+  another data structure (even if of the same type)\n+\n+  - *Rationale*: Behavior is undefined. In C++ parlor this means \"may reformat\n+    the universe\", in practice this has resulted in at least one hard-to-debug crash bug\n+\n+- Watch out for out-of-bounds vector access. `&vch[vch.size()]` is illegal,\n+  including `&vch[0]` for an empty vector. Use `vch.data()` and `vch.data() +\n+  vch.size()` instead.\n+\n+- Vector bounds checking is only enabled in debug mode. Do not rely on it\n+\n+- Make sure that constructors initialize all fields. If this is skipped for a\n+  good reason (i.e., optimization on the critical path), add an explicit\n+  comment about this\n+\n+  - *Rationale*: Ensure determinism by avoiding accidental use of uninitialized\n+    values. Also, static analyzers balk about this.\n+\n+- Use explicitly signed or unsigned `char`s, or even better `uint8_t` and\n+  `int8_t`. Do not use bare `char` unless it is to pass to a third-party API.\n+  This type can be signed or unsigned depending on the architecture, which can\n+  lead to interoperability problems or dangerous conditions such as\n+  out-of-bounds array accesses\n+\n+- Prefer explicit constructions over implicit ones that rely on 'magical' C++ behavior\n+\n+  - *Rationale*: Easier to understand what is happening, thus easier to spot mistakes, even for those\n+  that are not language lawyers\n+\n+Strings and formatting\n+------------------------\n+\n+- Be careful of `LogPrint` versus `LogPrintf`. `LogPrint` takes a `category` argument, `LogPrintf` does not.\n+\n+  - *Rationale*: Confusion of these can result in runtime exceptions due to\n+    formatting mismatch, and it is easy to get wrong because of subtly similar naming\n+\n+- Use `std::string`, avoid C string manipulation functions\n+\n+  - *Rationale*: C++ string handling is marginally safer, less scope for\n+    buffer overflows and surprises with `\\0` characters. Also some C string manipulations\n+    tend to act differently depending on platform, or even the user locale\n+\n+- Use `ParseInt32`, `ParseInt64`, `ParseUInt32`, `ParseUInt64`, `ParseDouble` from `utilstrencodings.h` for number parsing\n+\n+  - *Rationale*: These functions do overflow checking, and avoid pesky locale issues\n+\n+- For `strprintf`, `LogPrint`, `LogPrintf` formatting characters don't need size specifiers\n+\n+  - *Rationale*: Bitcoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n+\n+Threads and synchronization\n+----------------------------\n+\n+- Build and run tests with `-DDEBUG_LOCKORDER` to verify that no potential\n+  deadlocks are introduced. As of 0.12, this is defined by default when\n+  configuring with `--enable-debug`\n+\n+- When using `LOCK`/`TRY_LOCK` be aware that the lock exists in the context of\n+  the current scope, so surround the statement and the code that needs the lock\n+  with braces\n+\n+  OK:\n+\n+```c++\n+{\n+    TRY_LOCK(cs_vNodes, lockNodes);\n+    ...\n+}\n+```\n+\n+  Wrong:\n+\n+```c++\n+TRY_LOCK(cs_vNodes, lockNodes);\n+{\n+    ...\n+}\n+```\n+\n+Source code organization\n+--------------------------\n+\n+- Implementation code should go into the `.cpp` file and not the `.h`, unless necessary due to template usage or\n+  when performance due to inlining is critical\n+\n+  - *Rationale*: Shorter and simpler header files are easier to read, and reduce compile time\n+\n+- Don't import anything into the global namespace (`using namespace ...`). Use\n+  fully specified types such as `std::string`.\n+\n+  - *Rationale*: Avoids symbol conflicts\n+\n+GUI\n+-----\n+\n+- Do not display or manipulate dialogs in model code (classes `*Model`)\n+\n+  - *Rationale*: Model classes pass through events and data from the core, they\n+    should not interact with the user. That's where View classes come in. The converse also\n+    holds: try to not directly access core data structures from Views.\n+\n+Git and github tips\n+---------------------\n+\n+- For resolving merge/rebase conflicts, it can be useful to enable diff3 style using\n+  `git config merge.conflictstyle diff3`. Instead of\n+\n+        <<<\n+        yours\n+        ===\n+        theirs\n+        >>>\n+\n+  you will see\n+\n+        <<<\n+        yours\n+        |||\n+        original\n+        ===\n+        theirs\n+        >>>\n+\n+  This may make it much clearer what caused the conflict. In this style, you can often just look\n+  at what changed between *original* and *theirs*, and mechanically apply that to *yours* (or the other way around).\n+\n+- When reviewing patches which change indentation in C++ files, use `git diff -w` and `git show -w`. This makes\n+  the diff algorithm ignore whitespace changes. This feature is also available on github.com, by adding `?w=1`\n+  at the end of any URL which shows a diff.\n+\n+- When reviewing patches that change symbol names in many places, use `git diff --word-diff`. This will instead\n+  of showing the patch as deleted/added *lines*, show deleted/added *words*.\n+\n+- When reviewing patches that move code around, try using\n+  `git diff --patience commit~:old/file.cpp commit:new/file/name.cpp`, and ignoring everything except the\n+  moved body of code which should show up as neither `+` or `-` lines. In case it was not a pure move, this may\n+  even work when combined with the `-w` or `--word-diff` options described above.\n+\n+- When looking at other's pull requests, it may make sense to add the following section to your `.git/config`\n+  file:\n+\n+        [remote \"upstream-pull\"]\n+                fetch = +refs/pull/*:refs/remotes/upstream-pull/*\n+                url = git@github.com:bitcoin/bitcoin.git\n+\n+  This will add an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all`\n+  or `git fetch upstream-pull`. Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`,\n+  `git checkout` and anywhere a commit id would be acceptable to see the changes from pull request NUMBER."
      },
      {
        "sha": "55a5c28258c67704fb926e0ad71d448440babdaa",
        "filename": "doc/dnsseed-policy.md",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -7,19 +7,17 @@ As such, DNS seeds must be run by entities which have some minimum\n level of trust within the Bitcoin community.\n \n Other implementations of Bitcoin software may also use the same\n-seeds and may be more exposed. In light of this exposure this\n-document establishes some basic expectations for the expectations\n-for the operation of dnsseeds.\n+seeds and may be more exposed. In light of this exposure, this\n+document establishes some basic expectations for operating dnsseeds.\n \n-0. A DNS seed operating organization or person is expected\n-to follow good host security practices and maintain control of\n-their serving infrastructure and not sell or transfer control of their\n-DNS seed. Any hosting services contracted by the operator are\n-equally expected to uphold these expectations.\n+0. A DNS seed operating organization or person is expected to follow good\n+host security practices, maintain control of applicable infrastructure,\n+and not sell or transfer control of the DNS seed. Any hosting services\n+contracted by the operator are equally expected to uphold these expectations.\n \n 1. The DNS seed results must consist exclusively of fairly selected and\n functioning Bitcoin nodes from the public network to the best of the\n-operators understanding and capability.\n+operator's understanding and capability.\n \n 2. For the avoidance of doubt, the results may be randomized but must not\n single-out any group of hosts to receive different results unless due to an\n@@ -29,7 +27,7 @@ urgent technical necessity and disclosed.\n \n 4. Any logging of DNS queries should be only that which is necessary\n for the operation of the service or urgent health of the Bitcoin\n-network and must not be retained longer than necessary or disclosed\n+network and must not be retained longer than necessary nor disclosed\n to any third party.\n \n 5. Information gathered as a result of the operators node-spidering\n@@ -45,7 +43,8 @@ related to the DNS seed operation.\n \n If these expectations cannot be satisfied the operator should\n discontinue providing services and contact the active Bitcoin\n-Core development team as well as posting on bitcoin-development.\n+Core development team as well as posting on\n+[bitcoin-dev](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev).\n \n Behavior outside of these expectations may be reasonable in some\n situations but should be discussed in public in advance."
      },
      {
        "sha": "f7eca57dcb08fb3ea3e4e4d7dc274c0a33fa7431",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,12 +1,19 @@\n-Used in 0.8.0\n----------------------\n-* wallet.dat: personal wallet (BDB) with keys and transactions\n-* peers.dat: peer IP address database (custom format); since 0.7.0\n+\n+* banlist.dat: stores the IPs/Subnets of banned nodes\n+* bitcoin.conf: contains configuration settings for bitcoind or bitcoin-qt\n+* bitcoind.pid: stores the process id of bitcoind while running\n * blocks/blk000??.dat: block data (custom, 128 MiB per file); since 0.8.0\n * blocks/rev000??.dat; block undo data (custom); since 0.8.0 (format changed since pre-0.8)\n * blocks/index/*; block index (LevelDB); since 0.8.0\n * chainstate/*; block chain state database (LevelDB); since 0.8.0\n * database/*: BDB database environment; only used for wallet since 0.8.0\n+* db.log: wallet database log file\n+* debug.log: contains debug information and general logging generated by bitcoind or bitcoin-qt\n+* fee_estimates.dat: stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0\n+* peers.dat: peer IP address database (custom format); since 0.7.0\n+* wallet.dat: personal wallet (BDB) with keys and transactions\n+* .cookie: session RPC authentication cookie (written at start when cookie authentication is used, deleted on shutdown): since 0.12.0\n+* onion_private_key: cached Tor hidden service private key for `-listenonion`: since 0.12.0\n \n Only used in pre-0.8.0\n ---------------------"
      },
      {
        "sha": "7796a5fc9c151e884863c7b555ba1bb72b64ede7",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 193,
        "deletions": 126,
        "changes": 319,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,32 +1,32 @@\n Gitian building\n ================\n \n-*Setup instructions for a gitian build of Bitcoin using a Debian VM or physical system.*\n+*Setup instructions for a Gitian build of Bitcoin Core using a Debian VM or physical system.*\n \n Gitian is the deterministic build process that is used to build the Bitcoin\n Core executables. It provides a way to be reasonably sure that the\n-executables are really built from source on GitHub. It also makes sure that\n+executables are really built from the source on GitHub. It also makes sure that\n the same, tested dependencies are used and statically built into the executable.\n \n Multiple developers build the source code by following a specific descriptor\n (\"recipe\"), cryptographically sign the result, and upload the resulting signature.\n These results are compared and only if they match, the build is accepted and uploaded\n to bitcoin.org.\n \n-More independent gitian builders are needed, which is why I wrote this\n-guide. It is preferred to follow these steps yourself instead of using someone else's\n+More independent Gitian builders are needed, which is why this guide exists.\n+It is preferred you follow these steps yourself instead of using someone else's\n VM image to avoid 'contaminating' the build.\n \n Table of Contents\n ------------------\n \n - [Create a new VirtualBox VM](#create-a-new-virtualbox-vm)\n - [Connecting to the VM](#connecting-to-the-vm)\n-- [Setting up Debian for gitian building](#setting-up-debian-for-gitian-building)\n-- [Installing gitian](#installing-gitian)\n-- [Setting up gitian images](#setting-up-gitian-images)\n+- [Setting up Debian for Gitian building](#setting-up-debian-for-gitian-building)\n+- [Installing Gitian](#installing-gitian)\n+- [Setting up the Gitian image](#setting-up-the-gitian-image)\n - [Getting and building the inputs](#getting-and-building-the-inputs)\n-- [Building Bitcoin](#building-bitcoin)\n+- [Building Bitcoin Core](#building-bitcoin-core)\n - [Building an alternative repository](#building-an-alternative-repository)\n - [Signing externally](#signing-externally)\n - [Uploading signatures](#uploading-signatures)\n@@ -39,55 +39,48 @@ This guide explains how to set up the environment, and how to start the builds.\n \n Debian Linux was chosen as the host distribution because it has a lightweight install (in contrast to Ubuntu) and is readily available.\n Any kind of virtualization can be used, for example:\n-- [VirtualBox](https://www.virtualbox.org/), covered by this guide\n+- [VirtualBox](https://www.virtualbox.org/) (covered by this guide)\n - [KVM](http://www.linux-kvm.org/page/Main_Page)\n - [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n \n-You can also install on actual hardware instead of using virtualization.\n+You can also install Gitian on actual hardware instead of using virtualization.\n \n Create a new VirtualBox VM\n ---------------------------\n-In the VirtualBox GUI click \"Create\" and choose the following parameters in the wizard:\n+In the VirtualBox GUI click \"New\" and choose the following parameters in the wizard:\n \n-![](gitian-building/create_vm_page1.png)\n+![](gitian-building/create_new_vm.png)\n \n-- Type: Linux, Debian (64 bit)\n+- Type: Linux, Debian (64-bit)\n \n ![](gitian-building/create_vm_memsize.png)\n \n-- Memory Size: at least 1024MB, anything lower will really slow the build down\n+- Memory Size: at least 1024MB, anything less will really slow down the build.\n \n-![](gitian-building/create_vm_hard_drive.png)\n+![](gitian-building/create_vm_hard_disk.png)\n \n-- Hard Drive: Create a virtual hard drive now\n-    \n-![](gitian-building/create_vm_hard_drive_file_type.png)\n+- Hard Disk: Create a virtual hard disk now\n \n-- Hard Drive file type: Use the default, VDI (VirtualBox Disk Image) \n+![](gitian-building/create_vm_hard_disk_file_type.png)\n \n-![](gitian-building/create_vm_storage_physical_hard_drive.png)\n-    \n-- Storage on Physical hard drive: Dynamically Allocated \n-    \n-![](gitian-building/create_vm_file_location_size.png)\n+- Hard Disk file type: Use the default, VDI (VirtualBox Disk Image)\n \n-- Disk size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side \n-- Push the `Create` button\n+![](gitian-building/create_vm_storage_physical_hard_disk.png)\n \n-Get the [Debian 7.4 net installer](http://ftp.at.debian.org/debian-jigdo/current/amd64/iso-cd/debian-7.4.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n-This DVD image can be validated using a SHA256 hashing tool, for example on\n-Unixy OSes by entering the following in a terminal:\n+- Storage on physical hard disk: Dynamically Allocated\n \n-    echo \"b712a141bc60269db217d3b3e456179bd6b181645f90e4aac9c42ed63de492e9  debian-7.4.0-amd64-netinst.iso\" | sha256sum -c\n-    # (must return OK)\n+![](gitian-building/create_vm_file_location_size.png)\n+\n+- File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side\n+- Click `Create`\n \n-After creating the VM, we need to configure it. \n+After creating the VM, we need to configure it.\n \n-- Click the `Settings` button, then go to the `Network` tab. Adapter 1 should be attacked to `NAT`.\n+- Click the `Settings` button, then go to the `Network` tab. Adapter 1 should be attached to `NAT`.\n \n ![](gitian-building/network_settings.png)\n \n-- Click `Advanced`, then `Port Forwarding`. We want to set up a port through where we can reach the VM to get files in and out.\n+- Click `Advanced`, then `Port Forwarding`. We want to set up a port through which we can reach the VM to get files in and out.\n - Create a new rule by clicking the plus icon.\n \n ![](gitian-building/port_forwarding_rules.png)\n@@ -102,21 +95,29 @@ After creating the VM, we need to configure it.\n \n - Click `Ok` twice to save.\n \n+Get the [Debian 8.x net installer](http://cdimage.debian.org/debian-cd/8.5.0/amd64/iso-cd/debian-8.5.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n+This DVD image can be validated using a SHA256 hashing tool, for example on\n+Unixy OSes by entering the following in a terminal:\n+\n+    echo \"ad4e8c27c561ad8248d5ebc1d36eb172f884057bfeb2c22ead823f59fa8c3dff  debian-8.5.0-amd64-netinst.iso\" | sha256sum -c\n+    # (must return OK)\n+\n Then start the VM. On the first launch you will be asked for a CD or DVD image. Choose the downloaded iso.\n \n ![](gitian-building/select_startup_disk.png)\n \n Installing Debian\n ------------------\n \n-In this section it will be explained how to install Debian on the newly created VM.\n+This section will explain how to install Debian on the newly created VM.\n \n-- Choose the non-graphical installer.  We do not need the graphical environment, it will only increase installation time and disk usage.\n+- Choose the non-graphical installer.  We do not need the graphical environment; it will only increase installation time and disk usage.\n \n ![](gitian-building/debian_install_1_boot_menu.png)\n \n-**Note**: Navigation in the Debian installer: To keep a setting at the default\n-and proceed, just press `Enter`. To select a different button, press `Tab`.\n+**Note**: Navigating in the Debian installer:\n+To keep a setting at the default and proceed, just press `Enter`.\n+To select a different button, press `Tab`.\n \n - Choose locale and keyboard settings (doesn't matter, you can just go with the defaults or select your own information)\n \n@@ -125,99 +126,128 @@ and proceed, just press `Enter`. To select a different button, press `Tab`.\n ![](gitian-building/debian_install_4_configure_keyboard.png)\n \n - The VM will detect network settings using DHCP, this should all proceed automatically\n-- Configure the network: \n-  - System name `debian`.\n+- Configure the network:\n+  - Hostname `debian`.\n   - Leave domain name empty.\n \n ![](gitian-building/debian_install_5_configure_the_network.png)\n \n-- Choose a root password and enter it twice (remember it for later) \n+- Choose a root password and enter it twice (remember it for later)\n \n ![](gitian-building/debian_install_6a_set_up_root_password.png)\n \n-- Name the new user `debian` (the full name doesn't matter, you can leave it empty) \n+- Name the new user `debian` (the full name doesn't matter, you can leave it empty)\n+- Set the account username as `debian`\n \n ![](gitian-building/debian_install_7_set_up_user_fullname.png)\n ![](gitian-building/debian_install_8_set_up_username.png)\n \n-- Choose a user password and enter it twice (remember it for later) \n+- Choose a user password and enter it twice (remember it for later)\n \n ![](gitian-building/debian_install_9_user_password.png)\n \n-- The installer will set up the clock using a time server, this process should be automatic\n+- The installer will set up the clock using a time server; this process should be automatic\n - Set up the clock: choose a time zone (depends on the locale settings that you picked earlier; specifics don't matter)  \n \n ![](gitian-building/debian_install_10_configure_clock.png)\n \n - Disk setup\n-  - Partitioning method: Guided - Use the entire disk \n-  \n+  - Partitioning method: Guided - Use the entire disk\n+\n ![](gitian-building/debian_install_11_partition_disks.png)\n \n-  - Select disk to partition: SCSI1 (0,0,0) \n+  - Select disk to partition: SCSI1 (0,0,0)\n \n ![](gitian-building/debian_install_12_choose_disk.png)\n \n-  - Partitioning scheme: All files in one partition \n-  \n-![](gitian-building/debian_install_13_partition_scheme.png)\n+  - Partition Disks -> *All files in one partition*\n+\n+![](gitian-building/all_files_in_one_partition.png)\n \n   - Finish partitioning and write changes to disk -> *Yes* (`Tab`, `Enter` to select the `Yes` button)\n \n-![](gitian-building/debian_install_14_finish.png) \n+![](gitian-building/debian_install_14_finish.png)\n ![](gitian-building/debian_install_15_write_changes.png)\n \n - The base system will be installed, this will take a minute or so\n-- Choose a mirror (any will do) \n+- Choose a mirror (any will do)\n \n ![](gitian-building/debian_install_16_choose_a_mirror.png)\n \n-- Enter proxy information (unless you are on an intranet, you can leave this empty)\n+- Enter proxy information (unless you are on an intranet, leave this empty)\n \n ![](gitian-building/debian_install_18_proxy_settings.png)\n \n - Wait a bit while 'Select and install software' runs\n - Participate in popularity contest -> *No*\n-- Choose software to install. We need just the base system. \n+- Choose software to install. We need just the base system.\n+- Make sure only 'SSH server' and 'Standard System Utilities' are checked\n+- Uncheck 'Debian Desktop Environment' and 'Print Server'\n \n ![](gitian-building/debian_install_19_software_selection.png)\n \n-- Make sure only 'SSH server' and 'Standard System Utilities' are checked\n-- Uncheck 'Debian Desktop Environment' and 'Print Server'\n+- Install the GRUB boot loader to the master boot record? -> Yes\n \n ![](gitian-building/debian_install_20_install_grub.png)\n \n-- Install the GRUB boot loader to the master boot record? -> Yes \n+- Device for boot loader installation -> ata-VBOX_HARDDISK\n \n-![](gitian-building/debian_install_21_finish_installation.png)\n+![](gitian-building/debian_install_21_install_grub_bootloader.png)\n \n - Installation Complete -> *Continue*\n - After installation, the VM will reboot and you will have a working Debian VM. Congratulations!\n \n+![](gitian-building/debian_install_22_finish_installation.png)\n+\n+\n+After Installation\n+-------------------\n+The next step in the guide involves logging in as root via SSH.\n+SSH login for root users is disabled by default, so we'll enable that now.\n+\n+Login to the VM using username `root` and the root password you chose earlier.\n+You'll be presented with a screen similar to this.\n+\n+![](gitian-building/debian_root_login.png)\n+\n+Type:\n+\n+```\n+sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config\n+```\n+and press enter. Then,\n+```\n+/etc/init.d/ssh restart\n+```\n+and enter to restart SSH. Logout by typing 'logout' and pressing 'enter'.\n+\n Connecting to the VM\n ----------------------\n \n After the VM has booted you can connect to it using SSH, and files can be copied from and to the VM using a SFTP utility.\n Connect to `localhost`, port `22222` (or the port configured when installing the VM).\n-On Windows you can use putty[1] and WinSCP[2].\n+On Windows you can use [putty](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html) and [WinSCP](http://winscp.net/eng/index.php).\n \n-For example to connect as `root` from a Linux command prompt use\n+For example, to connect as `root` from a Linux command prompt use\n \n     $ ssh root@localhost -p 22222\n     The authenticity of host '[localhost]:22222 ([127.0.0.1]:22222)' can't be established.\n-    ECDSA key fingerprint is 8e:71:f9:5b:62:46:de:44:01:da:fb:5f:34:b5:f2:18.\n+    RSA key fingerprint is ae:f5:c8:9f:17:c6:c7:1b:c2:1b:12:31:1d:bb:d0:c7.\n     Are you sure you want to continue connecting (yes/no)? yes\n-    Warning: Permanently added '[localhost]:22222' (ECDSA) to the list of known hosts.\n+    Warning: Permanently added '[localhost]:22222' (RSA) to the list of known hosts.\n     root@localhost's password: (enter root password configured during install)\n-    Linux debian 3.2.0-4-amd64 #1 SMP Debian 3.2.54-2 x86_64\n+\n+    The programs included with the Debian GNU/Linux system are free software;\n+    the exact distribution terms for each program are described in the\n+    individual files in /usr/share/doc/*/copyright.\n+\n+    Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\n+    permitted by applicable law.\n     root@debian:~#\n \n Replace `root` with `debian` to log in as user.\n \n-[1] http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\n-[2] http://winscp.net/eng/index.php\n-\n-Setting up Debian for gitian building\n+Setting up Debian for Gitian building\n --------------------------------------\n \n In this section we will be setting up the Debian installation for Gitian building.\n@@ -226,25 +256,23 @@ First we need to log in as `root` to set up dependencies and make sure that our\n user can use the sudo command. Type/paste the following in the terminal:\n \n ```bash\n-apt-get install git ruby sudo apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils\n+apt-get install git ruby sudo apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils make ubuntu-archive-keyring curl\n adduser debian sudo\n ```\n \n-When you get a colorful screen with a question about the 'LXC directory', just\n-go with the default (`/var/lib/lxc`).\n-\n Then set up LXC and the rest with the following, which is a complex jumble of settings and workarounds:\n \n ```bash\n-# the version of lxc-start in Debian 7.4 needs to run as root, so make sure\n-# that the build script can exectute it without providing a password\n+# the version of lxc-start in Debian needs to run as root, so make sure\n+# that the build script can execute it without providing a password\n echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-start\" > /etc/sudoers.d/gitian-lxc\n-# add cgroup for LXC\n-echo \"cgroup  /sys/fs/cgroup  cgroup  defaults  0   0\" >> /etc/fstab\n+echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-execute\" >> /etc/sudoers.d/gitian-lxc\n # make /etc/rc.local script that sets up bridge between guest and host\n echo '#!/bin/sh -e' > /etc/rc.local\n echo 'brctl addbr br0' >> /etc/rc.local\n echo 'ifconfig br0 10.0.3.2/24 up' >> /etc/rc.local\n+echo 'iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE' >> /etc/rc.local\n+echo 'echo 1 > /proc/sys/net/ipv4/ip_forward' >> /etc/rc.local\n echo 'exit 0' >> /etc/rc.local\n # make sure that USE_LXC is always set when logging in as debian,\n # and configure LXC IP addresses\n@@ -255,9 +283,9 @@ reboot\n ```\n \n At the end the VM is rebooted to make sure that the changes take effect. The steps in this\n-section need only to be performed once.\n+section only need to be performed once.\n \n-Installing gitian\n+Installing Gitian\n ------------------\n \n Re-login as the user `debian` that was created during installation.\n@@ -266,65 +294,62 @@ The rest of the steps in this guide will be performed as that user.\n There is no `python-vm-builder` package in Debian, so we need to install it from source ourselves,\n \n ```bash\n-wget http://archive.ubuntu.com/ubuntu/pool/universe/v/vm-builder/vm-builder_0.12.4+bzr489.orig.tar.gz\n-echo \"ec12e0070a007989561bfee5862c89a32c301992dd2771c4d5078ef1b3014f03  vm-builder_0.12.4+bzr489.orig.tar.gz\" | sha256sum -c\n+wget http://archive.ubuntu.com/ubuntu/pool/universe/v/vm-builder/vm-builder_0.12.4+bzr494.orig.tar.gz\n+echo \"76cbf8c52c391160b2641e7120dbade5afded713afaa6032f733a261f13e6a8e  vm-builder_0.12.4+bzr494.orig.tar.gz\" | sha256sum -c\n # (verification -- must return OK)\n-tar -zxvf vm-builder_0.12.4+bzr489.orig.tar.gz\n-cd vm-builder-0.12.4+bzr489\n+tar -zxvf vm-builder_0.12.4+bzr494.orig.tar.gz\n+cd vm-builder-0.12.4+bzr494\n sudo python setup.py install\n cd ..\n ```\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n-Clone the git repositories for bitcoin and gitian and then checkout the bitcoin version that you want to build.\n+Clone the git repositories for bitcoin and Gitian.\n \n ```bash\n git clone https://github.com/devrandom/gitian-builder.git\n git clone https://github.com/bitcoin/bitcoin\n-cd bitcoin\n-git checkout v${VERSION}\n-cd ..\n+git clone https://github.com/bitcoin-core/gitian.sigs.git\n ```\n \n-Setting up gitian images\n+Setting up the Gitian image\n -------------------------\n \n-Gitian needs virtual images of the operating system to build in.\n-Currently this is Ubuntu Precise for both x86 architectures.\n-These images will be copied and used every time that a build is started to\n+Gitian needs a virtual image of the operating system to build in.\n+Currently this is Ubuntu Trusty x86_64.\n+This image will be copied and used every time that a build is started to\n make sure that the build is deterministic.\n-Creating the images will take a while, but only has to be done once.\n+Creating the image will take a while, but only has to be done once.\n \n Execute the following as user `debian`:\n \n ```bash\n cd gitian-builder\n-bin/make-base-vm --lxc --arch i386 --suite precise\n-bin/make-base-vm --lxc --arch amd64 --suite precise\n+bin/make-base-vm --lxc --arch amd64 --suite trusty\n ```\n \n-There will be a lot of warnings printed during build of the images. These can be ignored.\n+There will be a lot of warnings printed during the build of the image. These can be ignored.\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n Getting and building the inputs\n --------------------------------\n \n-In [doc/release-process.md](release-process.md) in the bitcoin repository under 'Fetch and build inputs'.\n-you will find a list of `wget` commands that can be executed to get the dependencies.\n+Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change)\n+in the bitcoin repository under 'Fetch and build inputs' to install sources which require\n+manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n+and offline git repositories' which will fetch the remaining files required for building\n+offline.\n \n-I needed to add `--no-check-certificate` to the OpenSSL wget line to make it work.\n-Likely this is because the ca-certificates in Debian 7.4 is fairly old. This does not create a \n-security issue as the gitian descriptors check the integrity of the input archives and refuse to work\n-if any one is corrupted.\n+Building Bitcoin Core\n+----------------\n \n-After downloading the archives, execute the `gbuild` commands to build the dependencies.\n-This can take a long time, but only has to be done when the dependencies change, for example\n-to upgrade the used version.\n+To build Bitcoin Core (for Linux, OS X and Windows) just follow the steps under 'perform\n+Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n \n-**Note**: Do not forget to copy the result from `build/out` to `inputs` after every gbuild command! This will save\n-you a lot of time.\n+This may take some time as it will build all the dependencies needed for each descriptor.\n+These dependencies will be cached after a successful build to avoid rebuilding them when possible.\n \n At any time you can check the package installation and build progress with\n \n@@ -333,22 +358,16 @@ tail -f var/install.log\n tail -f var/build.log\n ```\n \n-Building Bitcoin\n-----------------\n-\n-To build Bitcoin (for Linux, OSX and Windows) just follow the steps under 'perform\n-gitian builds' in [doc/release-process.md](release-process.md) in the bitcoin repository.\n-\n Output from `gbuild` will look something like\n \n     Initialized empty Git repository in /home/debian/gitian-builder/inputs/bitcoin/.git/\n-    remote: Reusing existing pack: 35606, done.\n-    remote: Total 35606 (delta 0), reused 0 (delta 0)\n-    Receiving objects: 100% (35606/35606), 26.52 MiB | 4.28 MiB/s, done.\n-    Resolving deltas: 100% (25724/25724), done.\n+    remote: Counting objects: 57959, done.\n+    remote: Total 57959 (delta 0), reused 0 (delta 0), pack-reused 57958\n+    Receiving objects: 100% (57959/57959), 53.76 MiB | 484.00 KiB/s, done.\n+    Resolving deltas: 100% (41590/41590), done.\n     From https://github.com/bitcoin/bitcoin\n     ... (new tags, new branch etc)\n-    --- Building for precise i386 ---\n+    --- Building for trusty amd64 ---\n     Stopping target if it is up\n     Making a new image copy\n     stdin: is not a tty\n@@ -363,14 +382,11 @@ Output from `gbuild` will look something like\n     lxc-start: Connection refused - inotify event with no name (mask 32768)\n     Running build script (log in var/build.log)\n \n-As when building the dependencies, the progress of package installation and building\n-can be inspected in `var/install.log` and `var/build.log`.\n-\n Building an alternative repository\n -----------------------------------\n \n If you want to do a test build of a pull on GitHub it can be useful to point\n-the gitian builder at an alternative repository, using the same descriptors\n+the Gitian builder at an alternative repository, using the same descriptors\n and inputs.\n \n For example:\n@@ -382,10 +398,61 @@ COMMIT=2014_03_windows_unicode_path\n ./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n ```\n \n+Building fully offline\n+-----------------------\n+\n+For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository\n+and the bitcoin git repository with the desired tag must both be available locally, and then gbuild must be\n+told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or\n+manually disabling gitian-builder's use of apt-get to update the VM build environment.\n+\n+To configure apt-cacher-ng as an offline cacher, you will need to first populate its cache with the relevant\n+files. You must additionally patch target-bin/bootstrap-fixup to set its apt sources to something other than\n+plain archive.ubuntu.com: us.archive.ubuntu.com works.\n+\n+So, if you use LXC:\n+\n+```bash\n+export PATH=\"$PATH\":/path/to/gitian-builder/libexec\n+export USE_LXC=1\n+cd /path/to/gitian-builder\n+./libexec/make-clean-vm --suite trusty --arch amd64\n+\n+LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get update\n+LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root \\\n+  -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n+  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../bitcoin/contrib/gitian-descriptors/*|sort|uniq )\n+LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get -q -y purge grub\n+LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade\n+```\n+\n+And then set offline mode for apt-cacher-ng:\n+\n+```\n+/etc/apt-cacher-ng/acng.conf\n+[...]\n+Offlinemode: 1\n+[...]\n+\n+service apt-cacher-ng restart\n+```\n+\n+Then when building, override the remote URLs that gbuild would otherwise pull from the Gitian descriptors::\n+```bash\n+\n+cd /some/root/path/\n+git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n+\n+BTCPATH=/some/root/path/bitcoin\n+SIGPATH=/some/root/path/bitcoin-detached-sigs\n+\n+./bin/gbuild --url bitcoin=${BTCPATH},signature=${SIGPATH} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+```\n+\n Signing externally\n -------------------\n \n-If you want to do the PGP signing on another device that's also possible; just define `SIGNER` as mentioned\n+If you want to do the PGP signing on another device, that's also possible; just define `SIGNER` as mentioned\n and follow the steps in the build process as normal.\n \n     gpg: skipped \"laanwj\": secret key not available\n@@ -394,17 +461,17 @@ When you execute `gsign` you will get an error from GPG, which can be ignored. C\n in `gitian.sigs` to your signing machine and do\n \n ```bash\n-    gpg --detach-sign ${VERSION}-linux/${SIGNER}/bitcoin-build.assert\n-    gpg --detach-sign ${VERSION}-win/${SIGNER}/bitcoin-build.assert\n-    gpg --detach-sign ${VERSION}-osx/${SIGNER}/bitcoin-build.assert\n+    gpg --detach-sign ${VERSION}-linux/${SIGNER}/bitcoin-linux-build.assert\n+    gpg --detach-sign ${VERSION}-win/${SIGNER}/bitcoin-win-build.assert\n+    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/bitcoin-osx-build.assert\n ```\n \n This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n-gitian build.\n+Gitian build.\n \n Uploading signatures\n ---------------------\n \n After building and signing you can push your signatures (both the `.assert` and `.assert.sig` files) to the\n-[bitcoin/gitian.sigs](https://github.com/bitcoin/gitian.sigs/) repository, or if that's not possible create a pull\n-request. You can also mail the files to me (laanwj@gmail.com) and I'll commit them.\n+[bitcoin-core/gitian.sigs](https://github.com/bitcoin-core/gitian.sigs/) repository, or if that's not possible create a pull\n+request. You can also mail the files to Wladimir (laanwj@gmail.com) and he will commit them."
      },
      {
        "sha": "8cbb0d8adc1deda1c7c4023611b65521e054ff69",
        "filename": "doc/gitian-building/all_files_in_one_partition.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/all_files_in_one_partition.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/all_files_in_one_partition.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/all_files_in_one_partition.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "dd22428e176b874afb2f5b9d1b018592fb0175d0",
        "filename": "doc/gitian-building/create_new_vm.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/create_new_vm.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/create_new_vm.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_new_vm.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "5f77206b6fa8f9f0f1bbd6d02819d67bf18327ad",
        "filename": "doc/gitian-building/create_vm_file_location_size.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/create_vm_file_location_size.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/create_vm_file_location_size.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_file_location_size.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "8e29816fab9e7c8f97338ed43f0893f655134a5f",
        "filename": "doc/gitian-building/create_vm_hard_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/create_vm_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/create_vm_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "a157211cf5baf909149e73fddfc2556305f4b123",
        "filename": "doc/gitian-building/create_vm_hard_disk_file_type.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk_file_type.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "a1706e14fda1488dbc180a4f619e5c3de98fae2b",
        "filename": "doc/gitian-building/create_vm_hard_drive.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/gitian-building/create_vm_hard_drive.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/gitian-building/create_vm_hard_drive.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_drive.png?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "251b8ee3e2757a090a8fd045cd3ba76354459915",
        "filename": "doc/gitian-building/create_vm_hard_drive_file_type.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/gitian-building/create_vm_hard_drive_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/gitian-building/create_vm_hard_drive_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_drive_file_type.png?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "5abfee5337058f9bd638a79416040bd6c6496194",
        "filename": "doc/gitian-building/create_vm_memsize.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/create_vm_memsize.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/create_vm_memsize.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_memsize.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "edaebc6223708e1473d893dd480a5ef439a39473",
        "filename": "doc/gitian-building/create_vm_page1.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/gitian-building/create_vm_page1.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/gitian-building/create_vm_page1.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_page1.png?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "cee16a6c63b4f2dcd592ae8c9cdc02f278fbad81",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_disk.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "987efaa40c2e3c57ef7fb6c64fee8efa0e63241e",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_drive.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/gitian-building/create_vm_storage_physical_hard_drive.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/gitian-building/create_vm_storage_physical_hard_drive.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_drive.png?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "7cda038ae47f97ddfaa905478599cafc6572dd1f",
        "filename": "doc/gitian-building/debian_install_10_configure_clock.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_10_configure_clock.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_10_configure_clock.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_10_configure_clock.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "2a648c517f429fb937275d5444a58f4830e8eae4",
        "filename": "doc/gitian-building/debian_install_11_partition_disks.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_11_partition_disks.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_11_partition_disks.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_11_partition_disks.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "0f3acc498e3e9cc04692a9c557a8eecb5029dc25",
        "filename": "doc/gitian-building/debian_install_12_choose_disk.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_12_choose_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_12_choose_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_12_choose_disk.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "2f80f19b631c0cbf7ebeddc71c309aca8cf86eed",
        "filename": "doc/gitian-building/debian_install_13_partition_scheme.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/gitian-building/debian_install_13_partition_scheme.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/gitian-building/debian_install_13_partition_scheme.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_13_partition_scheme.png?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "c8ef0b37ad6232f87593ea448beaba089b568a91",
        "filename": "doc/gitian-building/debian_install_14_finish.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_14_finish.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_14_finish.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_14_finish.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "d8de00dec68c826485034c698079e5808f7dadfd",
        "filename": "doc/gitian-building/debian_install_15_write_changes.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_15_write_changes.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_15_write_changes.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_15_write_changes.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "0bd985b38c113ed9bbbe03808ace284476680edc",
        "filename": "doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_16_choose_a_mirror.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "cef2db07815451cf16099e063f94bb40202ee822",
        "filename": "doc/gitian-building/debian_install_17_choose_a_mirror2.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/gitian-building/debian_install_17_choose_a_mirror2.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/gitian-building/debian_install_17_choose_a_mirror2.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_17_choose_a_mirror2.png?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "2c19919f64b62d89883dc8e1308f179978b95ca4",
        "filename": "doc/gitian-building/debian_install_18_proxy_settings.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_18_proxy_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_18_proxy_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_18_proxy_settings.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "5430456b14f098d9e3561653352b826d19a2c38a",
        "filename": "doc/gitian-building/debian_install_19_software_selection.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_19_software_selection.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_19_software_selection.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_19_software_selection.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "216502e1c6eb6930ce60c1a36e7476e6fb8781d9",
        "filename": "doc/gitian-building/debian_install_1_boot_menu.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_1_boot_menu.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_1_boot_menu.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_1_boot_menu.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "d853c1587188c5fd4ede94ab00f9d8b6731674ac",
        "filename": "doc/gitian-building/debian_install_20_install_grub.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_20_install_grub.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_20_install_grub.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_20_install_grub.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "493ab806a673f5c8ee47db0bb5de6af0d5042b03",
        "filename": "doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_21_install_grub_bootloader.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "7c4445585bc9982a5015959dba70d73b01885e08",
        "filename": "doc/gitian-building/debian_install_22_finish_installation.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_22_finish_installation.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_22_finish_installation.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_22_finish_installation.png?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "doc/gitian-building/debian_install_21_finish_installation.png"
      },
      {
        "sha": "0228ae2c011daeababc75b915a12b28b702456c0",
        "filename": "doc/gitian-building/debian_install_2_select_a_language.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_2_select_a_language.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_2_select_a_language.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_2_select_a_language.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "7b18fba97577b521944f909ed57fd251942a9eab",
        "filename": "doc/gitian-building/debian_install_3_select_location.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_3_select_location.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_3_select_location.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_3_select_location.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "8e46117de4879a6de8b276813bef12c219cb4e8b",
        "filename": "doc/gitian-building/debian_install_4_configure_keyboard.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_4_configure_keyboard.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "8e3720f24322a54ef33893e8eff95383158bf3d9",
        "filename": "doc/gitian-building/debian_install_5_configure_the_network.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_5_configure_the_network.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_5_configure_the_network.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_5_configure_the_network.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "dcade119676ed7e0c0f92cff6d6a064929a07a07",
        "filename": "doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6a_set_up_root_password.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "6763c6e08ade2b17f050da257a76132f916e38f5",
        "filename": "doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_7_set_up_user_fullname.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "bb04de96d23bdaa3e29fbe19891e42b881dd0a99",
        "filename": "doc/gitian-building/debian_install_8_set_up_username.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_8_set_up_username.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_8_set_up_username.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_8_set_up_username.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "981f1181d79d0d7fe2138f036d0f1bb41ec472fa",
        "filename": "doc/gitian-building/debian_install_9_user_password.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_9_user_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_install_9_user_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_9_user_password.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "14cdd5ba5b52cc32fbc0da62cf3671c3679b8d79",
        "filename": "doc/gitian-building/debian_root_login.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_root_login.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/debian_root_login.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_root_login.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "9e714fd15451837980b9d12a931c294fc962b2a2",
        "filename": "doc/gitian-building/network_settings.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/network_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/network_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/network_settings.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "9e1fa2af20f48d482892b722b7288600bece322a",
        "filename": "doc/gitian-building/port_forwarding_rules.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/port_forwarding_rules.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/port_forwarding_rules.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/port_forwarding_rules.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "59bc093e2c3d35bee0d1bdc50f11f2cf2a6fdafe",
        "filename": "doc/gitian-building/select_startup_disk.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/select_startup_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/gitian-building/select_startup_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/select_startup_disk.png?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "075930791b6e7adfa28671acf2768adaff400bb3",
        "filename": "doc/img/bootstrap1.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/img/bootstrap1.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/img/bootstrap1.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/img/bootstrap1.png?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "6461f818107f733391fc14443f07d6c9e4444358",
        "filename": "doc/img/bootstrap2.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/img/bootstrap2.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/img/bootstrap2.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/img/bootstrap2.png?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "ad69737922e6fe1e61990f9a00ed0494e90479af",
        "filename": "doc/img/bootstrap4.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/img/bootstrap4.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/img/bootstrap4.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/img/bootstrap4.png?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "d8d9baaf37acf58203b5c51857fb049ac894a310",
        "filename": "doc/img/bootstrap5.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/img/bootstrap5.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/doc/img/bootstrap5.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/img/bootstrap5.png?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "e3db5b05efcd6f93eaf114d731cf090a4882d07f",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 56,
        "deletions": 23,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -8,12 +8,14 @@ can be found in the contrib/init folder.\n     contrib/init/bitcoind.openrc:     OpenRC compatible SysV style init script\n     contrib/init/bitcoind.openrcconf: OpenRC conf.d file\n     contrib/init/bitcoind.conf:       Upstart service configuration file\n+    contrib/init/bitcoind.init:       CentOS compatible SysV style init script\n \n 1. Service User\n ---------------------------------\n \n-All three startup configurations assume the existence of a \"bitcoin\" user\n+All three Linux startup configurations assume the existence of a \"bitcoin\" user\n and group.  They must be created before attempting to use these scripts.\n+The OS X configuration assumes bitcoind will be set up for the current user.\n \n 2. Configuration\n ---------------------------------\n@@ -28,65 +30,96 @@ file, however it is recommended that a strong and secure password be used\n as this password is security critical to securing the wallet should the\n wallet be enabled.\n \n-If bitcoind is run with \"-daemon\" flag, and no rpcpassword is set, it will\n-print a randomly generated suitable password to stderr.  You can also\n-generate one from the shell yourself like this:\n+If bitcoind is run with the \"-server\" flag (set by default), and no rpcpassword is set,\n+it will use a special cookie file for authentication. The cookie is generated with random\n+content when the daemon starts, and deleted when it exits. Read access to this file\n+controls who can access it through RPC.\n \n-bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\n+By default the cookie is stored in the data directory, but it's location can be overridden\n+with the option '-rpccookiefile'.\n \n-Once you have a password in hand, set rpcpassword= in /etc/bitcoin/bitcoin.conf\n+This allows for running bitcoind without having to do any manual configuration.\n \n-For an example configuration file that describes the configuration settings, \n-see contrib/debian/examples/bitcoin.conf.\n+`conf`, `pid`, and `wallet` accept relative paths which are interpreted as\n+relative to the data directory. `wallet` *only* supports relative paths.\n+\n+For an example configuration file that describes the configuration settings,\n+see `contrib/debian/examples/bitcoin.conf`.\n \n 3. Paths\n ---------------------------------\n \n+3a) Linux\n+\n All three configurations assume several paths that might need to be adjusted.\n \n-Binary:              /usr/bin/bitcoind\n-Configuration file:  /etc/bitcoin/bitcoin.conf\n-Data directory:      /var/lib/bitcoind\n-PID file:            /var/run/bitcoind/bitcoind.pid (OpenRC and Upstart)\n-                     /var/lib/bitcoind/bitcoind.pid (systemd)\n+Binary:              `/usr/bin/bitcoind`  \n+Configuration file:  `/etc/bitcoin/bitcoin.conf`  \n+Data directory:      `/var/lib/bitcoind`  \n+PID file:            `/var/run/bitcoind/bitcoind.pid` (OpenRC and Upstart) or `/var/lib/bitcoind/bitcoind.pid` (systemd)  \n+Lock file:           `/var/lock/subsys/bitcoind` (CentOS)  \n \n The configuration file, PID directory (if applicable) and data directory\n should all be owned by the bitcoin user and group.  It is advised for security\n reasons to make the configuration file and data directory only readable by the\n bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n can then be controlled by group membership.\n \n+3b) Mac OS X\n+\n+Binary:              `/usr/local/bin/bitcoind`  \n+Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`  \n+Data directory:      `~/Library/Application Support/Bitcoin`\n+Lock file:           `~/Library/Application Support/Bitcoin/.lock`\n+\n 4. Installing Service Configuration\n -----------------------------------\n \n 4a) systemd\n \n-Installing this .service file consists on just copying it to\n+Installing this .service file consists of just copying it to\n /usr/lib/systemd/system directory, followed by the command\n-\"systemctl daemon-reload\" in order to update running systemd configuration.\n+`systemctl daemon-reload` in order to update running systemd configuration.\n \n-To test, run \"systemctl start bitcoind\" and to enable for system startup run\n-\"systemctl enable bitcoind\"\n+To test, run `systemctl start bitcoind` and to enable for system startup run\n+`systemctl enable bitcoind`\n \n 4b) OpenRC\n \n Rename bitcoind.openrc to bitcoind and drop it in /etc/init.d.  Double\n check ownership and permissions and make it executable.  Test it with\n-\"/etc/init.d/bitcoind start\" and configure it to run on startup with\n-\"rc-update add bitcoind\"\n+`/etc/init.d/bitcoind start` and configure it to run on startup with\n+`rc-update add bitcoind`\n \n 4c) Upstart (for Debian/Ubuntu based distributions)\n \n-Drop bitcoind.conf in /etc/init.  Test by running \"service bitcoind start\"\n+Drop bitcoind.conf in /etc/init.  Test by running `service bitcoind start`\n it will automatically start on reboot.\n \n NOTE: This script is incompatible with CentOS 5 and Amazon Linux 2014 as they\n-use old versions of Upstart and do not supply the start-stop-daemon uitility.\n+use old versions of Upstart and do not supply the start-stop-daemon utility.\n+\n+4d) CentOS\n+\n+Copy bitcoind.init to /etc/init.d/bitcoind. Test by running `service bitcoind start`.\n+\n+Using this script, you can adjust the path and flags to the bitcoind program by\n+setting the BITCOIND and FLAGS environment variables in the file\n+/etc/sysconfig/bitcoind. You can also use the DAEMONOPTS environment variable here.\n+\n+4e) Mac OS X\n+\n+Copy org.bitcoin.bitcoind.plist into ~/Library/LaunchAgents. Load the launch agent by\n+running `launchctl load ~/Library/LaunchAgents/org.bitcoin.bitcoind.plist`.\n+\n+This Launch Agent will cause bitcoind to start whenever the user logs in.\n+\n+NOTE: This approach is intended for those wanting to run bitcoind as the current user.\n+You will need to modify org.bitcoin.bitcoind.plist if you intend to use it as a\n+Launch Daemon with a dedicated bitcoin user.\n \n 5. Auto-respawn\n -----------------------------------\n \n Auto respawning is currently only configured for Upstart and systemd.\n Reasonable defaults have been chosen but YMMV.\n-\n-"
      },
      {
        "sha": "2d86588eb2ac6e8a65b2ad96aeeae9abbda7cb3a",
        "filename": "doc/reduce-traffic.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,38 @@\n+Reduce Traffic\n+==============\n+\n+Some node operators need to deal with bandwidth caps imposed by their ISPs.\n+\n+By default, bitcoin-core allows up to 125 connections to different peers, 8 of\n+which are outbound. You can therefore, have at most 117 inbound connections.\n+\n+The default settings can result in relatively significant traffic consumption.\n+\n+Ways to reduce traffic:\n+\n+## 1. Use `-maxuploadtarget=<MiB per day>`\n+\n+A major component of the traffic is caused by serving historic blocks to other nodes\n+during the initial blocks download phase (syncing up a new node).\n+This option can be specified in MiB per day and is turned off by default.\n+This is *not* a hard limit; only a threshold to minimize the outbound\n+traffic. When the limit is about to be reached, the uploaded data is cut by no\n+longer serving historic blocks (blocks older than one week).\n+Keep in mind that new nodes require other nodes that are willing to serve\n+historic blocks. **The recommended minimum is 144 blocks per day (max. 144MB\n+per day)**\n+\n+Whitelisted peers will never be disconnected, although their traffic counts for\n+calculating the target.\n+\n+## 2. Disable \"listening\" (`-listen=0`)\n+\n+Disabling listening will result in fewer nodes connected (remember the maximum of 8\n+outbound peers). Fewer nodes will result in less traffic usage as you are relaying\n+blocks and transactions to fewer nodes.\n+\n+## 3. Reduce maximum connections (`-maxconnections=<num>`)\n+\n+Reducing the maximum connected nodes to a minimum could be desirable if traffic\n+limits are tiny. Keep in mind that bitcoin's trustless model works best if you are\n+connected to a handful of nodes."
      },
      {
        "sha": "3d2baaaaeaae1b5b6e4492204fbd572b0094414d",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 183,
        "deletions": 102,
        "changes": 285,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -1,126 +1,207 @@\n (note: this is a temporary file, to be added-to by anybody, and moved to\n release-notes at release time)\n \n-Block file backwards-compatibility warning\n-===========================================\n+Bitcoin Core version *version* is now available from:\n \n-Because release 0.10.0 makes use of headers-first synchronization and parallel\n-block download, the block files and databases are not backwards-compatible\n-with older versions of Bitcoin Core:\n+  <https://bitcoin.org/bin/bitcoin-core-*version*/>\n \n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n+This is a new major version release, including new features, various bugfixes\n+and performance improvements, as well as updated translations.\n \n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n+Please report bugs using the issue tracker at github:\n \n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards.\n+  <https://github.com/bitcoin/bitcoin/issues>\n \n-This does not affect wallet forward or backward compatibility.\n+To receive security and update notifications, please subscribe to:\n \n-Transaction fee changes\n-=======================\n+  <https://bitcoincore.org/en/list/announcements/join/>\n \n-This release automatically estimates how high a transaction fee (or how\n-high a priority) transactions require to be confirmed quickly. The default\n-settings will create transactions that confirm quickly; see the new\n-'txconfirmtarget' setting to control the tradeoff between fees and\n-confirmation times.\n+Compatibility\n+==============\n \n-Prior releases used hard-coded fees (and priorities), and would\n-sometimes create transactions that took a very long time to confirm.\n+Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n+an OS initially released in 2001. This means that not even critical security\n+updates will be released anymore. Without security updates, using a bitcoin\n+wallet on a XP machine is irresponsible at least.\n \n-Statistics used to estimate fees and priorities are saved in the\n-data directory in the `fee_estimates.dat` file just before\n-program shutdown, and are read in at startup.\n+In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\n+randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)\n+what the source of these crashes is, but it is likely that upstream\n+libraries such as Qt are no longer being tested on XP.\n \n-New Command Line Options\n----------------------------\n+We do not have time nor resources to provide support for an OS that is\n+end-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are\n+suggested to upgrade to a newer verion of Windows, or install an alternative OS\n+that is supported.\n \n-- `-txconfirmtarget=n` : create transactions that have enough fees (or priority)\n-so they are likely to confirm within n blocks (default: 1). This setting\n-is over-ridden by the -paytxfee option.\n+No attempt is made to prevent installing or running the software on Windows XP,\n+you can still do so at your own risk, but do not expect it to work: do not\n+report issues about Windows XP to the issue tracker.\n \n-New RPC methods\n-----------------\n+Notable changes\n+===============\n \n-- `estimatefee nblocks` : Returns approximate fee-per-1,000-bytes needed for\n-a transaction to be confirmed within nblocks. Returns -1 if not enough\n-transactions have been observed to compute a good estimate.\n+Database cache memory increased\n+--------------------------------\n \n-- `estimatepriority nblocks` : Returns approximate priority needed for\n-a zero-fee transaction to confirm within nblocks. Returns -1 if not\n-enough free transactions have been observed to compute a good\n-estimate.\n+As a result of growth of the UTXO set, performance with the prior default\n+database cache of 100 MiB has suffered.\n+For this reason the default was changed to 300 MiB in this release.\n \n-RPC access control changes\n-==========================================\n+For nodes on low-memory systems, the database cache can be changed back to\n+100 MiB (or to another value) by either:\n \n-Subnet matching for the purpose of access control is now done\n-by matching the binary network address, instead of with string wildcard matching.\n-For the user this means that `-rpcallowip` takes a subnet specification, which can be\n+- Adding `dbcache=100` in bitcoin.conf\n+- Changing it in the GUI under `Options \u2192 Size of database cache`\n \n-- a single IP address (e.g. `1.2.3.4` or `fe80::0012:3456:789a:bcde`)\n-- a network/CIDR (e.g. `1.2.3.0/24` or `fe80::0000/64`)\n-- a network/netmask (e.g. `1.2.3.4/255.255.255.0` or `fe80::0012:3456:789a:bcde/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff`)\n+Note that the database cache setting has the most performance impact\n+during initial sync of a node, and when catching up after downtime.\n \n-An arbitrary number of `-rpcallow` arguments can be given. An incoming connection will be accepted if its origin address\n-matches one of them.\n+bitcoin-cli: arguments privacy\n+--------------------------------\n \n+The RPC command line client gained a new argument, `-stdin`\n+to read extra arguments from standard input, one per line until EOF/Ctrl-D.\n For example:\n \n-| 0.9.x and before                           | 0.10.x                                |\n-|--------------------------------------------|---------------------------------------|\n-| `-rpcallowip=192.168.1.1`                  | `-rpcallowip=192.168.1.1` (unchanged) |\n-| `-rpcallowip=192.168.1.*`                  | `-rpcallowip=192.168.1.0/24`          |\n-| `-rpcallowip=192.168.*`                    | `-rpcallowip=192.168.0.0/16`          |\n-| `-rpcallowip=*` (dangerous!)               | `-rpcallowip=::/0`                    |\n-\n-Using wildcards will result in the rule being rejected with the following error in debug.log:\n-\n-    Error: Invalid -rpcallowip subnet specification: *. Valid are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).\n-\n-RPC Server \"Warm-Up\" Mode\n-=========================\n-\n-The RPC server is started earlier now, before most of the expensive\n-intialisations like loading the block index.  It is available now almost\n-immediately after starting the process.  However, until all initialisations\n-are done, it always returns an immediate error with code -28 to all calls.\n-\n-This new behaviour can be useful for clients to know that a server is already\n-started and will be available soon (for instance, so that they do not\n-have to start it themselves).\n-\n-Improved signing security\n-=========================\n-\n-For 0.10 the security of signing against unusual attacks has been\n-improved by making the signatures constant time and deterministic.\n-\n-This change is a result of switching signing to use libsecp256k1\n-instead of OpenSSL. Libsecp256k1 is a cryptographic library\n-optimized for the curve Bitcoin uses which was created by Bitcoin\n-Core developer Pieter Wuille.\n-\n-There exist attacks[1] against most ECC implementations where an\n-attacker on shared virtual machine hardware could extract a private\n-key if they could cause a target to sign using the same key hundreds\n-of times. While using shared hosts and reusing keys are inadvisable\n-for other reasons, it's a better practice to avoid the exposure.\n-\n-OpenSSL has code in their source repository for derandomization\n-and reduction in timing leaks, and we've  eagerly wanted to use\n-it for a long time but this functionality has still not made its\n-way into a released version of OpenSSL. Libsecp256k1 achieves\n-significantly stronger protection: As far as we're aware this is\n-the only deployed implementation of constant time signing for\n-the curve Bitcoin uses and we have reason to believe that\n-libsecp256k1 is better tested and more thoroughly reviewed\n-than the implementation in OpenSSL.\n-\n-[1] https://eprint.iacr.org/2014/161.pdf\n+    $ echo -e \"mysecretcode\\n120\" | src/bitcoin-cli -stdin walletpassphrase\n+\n+It is recommended to use this for sensitive information such as wallet\n+passphrases, as command-line arguments can usually be read from the process\n+table by any user on the system.\n+\n+RPC low-level changes\n+----------------------\n+\n+- `gettxoutsetinfo` UTXO hash (`hash_serialized`) has changed. There was a divergence between\n+  32-bit and 64-bit platforms, and the txids were missing in the hashed data. This has been\n+  fixed, but this means that the output will be different than from previous versions.\n+\n+- Full UTF-8 support in the RPC API. Non-ASCII characters in, for example,\n+  wallet labels have always been malformed because they weren't taken into account\n+  properly in JSON RPC processing. This is no longer the case. This also affects\n+  the GUI debug console.\n+\n+C++11 and Python 3\n+-------------------\n+\n+Various code modernizations have been done. The Bitcoin Core code base has\n+started using C++11. This means that a C++11-capable compiler is now needed for\n+building. Effectively this means GCC 4.7 or higher, or Clang 3.3 or higher.\n+\n+When cross-compiling for a target that doesn't have C++11 libraries, configure with\n+`./configure --enable-glibc-back-compat ... LDFLAGS=-static-libstdc++`.\n+\n+For running the functional tests in `qa/rpc-tests`, Python3.4 or higher is now\n+required.\n+\n+Linux ARM builds\n+------------------\n+\n+Due to popular request, Linux ARM builds have been added to the uploaded\n+executables.\n+\n+The following extra files can be found in the download directory or torrent:\n+\n+- `bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz`: Linux binaries for the most\n+  common 32-bit ARM architecture.\n+- `bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz`: Linux binaries for the most\n+  common 64-bit ARM architecture.\n+\n+ARM builds are still experimental. If you have problems on a certain device or\n+Linux distribution combination please report them on the bug tracker, it may be\n+possible to resolve them.\n+\n+Note that Android is not considered ARM Linux in this context. The executables\n+are not expected to work out of the box on Android.\n+\n+0.13.0 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n+### RPC and REST\n+\n+Asm script outputs replacements for OP_NOP2 and OP_NOP3\n+-------------------------------------------------------\n+\n+OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP \n+65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki)\n+\n+OP_NOP3 has been renamed to OP_CHECKSEQUENCEVERIFY by [BIP \n+112](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki)\n+\n+The following outputs are affected by this change:\n+- RPC `getrawtransaction` (in verbose mode)\n+- RPC `decoderawtransaction`\n+- RPC `decodescript`\n+- REST `/rest/tx/` (JSON format)\n+- REST `/rest/block/` (JSON format when including extended tx details)\n+- `bitcoin-tx -json`\n+\n+New mempool information RPC calls\n+---------------------------------\n+\n+RPC calls have been added to output detailed statistics for individual mempool\n+entries, as well as to calculate the in-mempool ancestors or descendants of a\n+transaction: see `getmempoolentry`, `getmempoolancestors`, `getmempooldescendants`.\n+\n+### ZMQ\n+\n+Each ZMQ notification now contains an up-counting sequence number that allows\n+listeners to detect lost notifications.\n+The sequence number is always the last element in a multi-part ZMQ notification and\n+therefore backward compatible.\n+Each message type has its own counter.\n+(https://github.com/bitcoin/bitcoin/pull/7762)\n+\n+### Configuration and command-line options\n+\n+### Block and transaction handling\n+\n+### P2P protocol and network code\n+\n+The p2p alert system has been removed in #7692 and the 'alert' message is no longer supported.\n+\n+\n+Fee filtering of invs (BIP 133)\n+------------------------------------\n+\n+The optional new p2p message \"feefilter\" is implemented and the protocol\n+version is bumped to 70013. Upon receiving a feefilter message from a peer,\n+a node will not send invs for any transactions which do not meet the filter\n+feerate. [BIP 133](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki)\n+\n+### Validation\n+\n+### Build system\n+\n+### Wallet\n+\n+Hierarchical Deterministic Key Generation\n+-----------------------------------------\n+Newly created wallets will use hierarchical deterministic key generation\n+according to BIP32 (keypath m/0'/0'/k').\n+Existing wallets will still use traditional key generation.\n+\n+Backups of HD wallets, regardless of when they have been created, can\n+therefore be used to re-generate all possible private keys, even the\n+ones which haven't already been generated during the time of the backup.\n+\n+HD key generation for new wallets can be disabled by `-usehd=0`. Keep in\n+mind that this flag only has affect on newly created wallets.\n+You can't disable HD key generation once you have created a HD wallet.\n+\n+There is no distinction between internal (change) and external keys.\n+\n+[Pull request](https://github.com/bitcoin/bitcoin/pull/8035/files), [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)\n+\n+### GUI\n+\n+### Tests\n+\n+### Miscellaneous\n+"
      },
      {
        "sha": "986b8832ec1893a5cc061ea14ac609e7836fbb4f",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "added",
        "additions": 762,
        "deletions": 0,
        "changes": 762,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,762 @@\n+Bitcoin Core version 0.10.0 is now available from:\n+\n+  https://bitcoin.org/bin/0.10.0/\n+\n+This is a new major version release, bringing both new features and\n+bug fixes.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrading warning\n+---------------------\n+\n+Because release 0.10.0 makes use of headers-first synchronization and parallel\n+block download (see further), the block files and databases are not\n+backwards-compatible with older versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility.\n+\n+\n+Notable changes\n+===============\n+\n+Faster synchronization\n+----------------------\n+\n+Bitcoin Core now uses 'headers-first synchronization'. This means that we first\n+ask peers for block headers (a total of 27 megabytes, as of December 2014) and\n+validate those. In a second stage, when the headers have been discovered, we\n+download the blocks. However, as we already know about the whole chain in\n+advance, the blocks can be downloaded in parallel from all available peers.\n+\n+In practice, this means a much faster and more robust synchronization. On\n+recent hardware with a decent network link, it can be as little as 3 hours\n+for an initial full synchronization. You may notice a slower progress in the\n+very first few minutes, when headers are still being fetched and verified, but\n+it should gain speed afterwards.\n+\n+A few RPCs were added/updated as a result of this:\n+- `getblockchaininfo` now returns the number of validated headers in addition to\n+the number of validated blocks.\n+- `getpeerinfo` lists both the number of blocks and headers we know we have in\n+common with each peer. While synchronizing, the heights of the blocks that we\n+have requested from peers (but haven't received yet) are also listed as\n+'inflight'.\n+- A new RPC `getchaintips` lists all known branches of the block chain,\n+including those we only have headers for.\n+\n+Transaction fee changes\n+-----------------------\n+\n+This release automatically estimates how high a transaction fee (or how\n+high a priority) transactions require to be confirmed quickly. The default\n+settings will create transactions that confirm quickly; see the new\n+'txconfirmtarget' setting to control the tradeoff between fees and\n+confirmation times. Fees are added by default unless the 'sendfreetransactions' \n+setting is enabled.\n+\n+Prior releases used hard-coded fees (and priorities), and would\n+sometimes create transactions that took a very long time to confirm.\n+\n+Statistics used to estimate fees and priorities are saved in the\n+data directory in the `fee_estimates.dat` file just before\n+program shutdown, and are read in at startup.\n+\n+New command line options for transaction fee changes:\n+- `-txconfirmtarget=n` : create transactions that have enough fees (or priority)\n+so they are likely to begin confirmation within n blocks (default: 1). This setting\n+is over-ridden by the -paytxfee option.\n+- `-sendfreetransactions` : Send transactions as zero-fee transactions if possible \n+(default: 0)\n+\n+New RPC commands for fee estimation:\n+- `estimatefee nblocks` : Returns approximate fee-per-1,000-bytes needed for\n+a transaction to begin confirmation within nblocks. Returns -1 if not enough\n+transactions have been observed to compute a good estimate.\n+- `estimatepriority nblocks` : Returns approximate priority needed for\n+a zero-fee transaction to begin confirmation within nblocks. Returns -1 if not\n+enough free transactions have been observed to compute a good\n+estimate.\n+\n+RPC access control changes\n+--------------------------\n+\n+Subnet matching for the purpose of access control is now done\n+by matching the binary network address, instead of with string wildcard matching.\n+For the user this means that `-rpcallowip` takes a subnet specification, which can be\n+\n+- a single IP address (e.g. `1.2.3.4` or `fe80::0012:3456:789a:bcde`)\n+- a network/CIDR (e.g. `1.2.3.0/24` or `fe80::0000/64`)\n+- a network/netmask (e.g. `1.2.3.4/255.255.255.0` or `fe80::0012:3456:789a:bcde/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff`)\n+\n+An arbitrary number of `-rpcallow` arguments can be given. An incoming connection will be accepted if its origin address\n+matches one of them.\n+\n+For example:\n+\n+| 0.9.x and before                           | 0.10.x                                |\n+|--------------------------------------------|---------------------------------------|\n+| `-rpcallowip=192.168.1.1`                  | `-rpcallowip=192.168.1.1` (unchanged) |\n+| `-rpcallowip=192.168.1.*`                  | `-rpcallowip=192.168.1.0/24`          |\n+| `-rpcallowip=192.168.*`                    | `-rpcallowip=192.168.0.0/16`          |\n+| `-rpcallowip=*` (dangerous!)               | `-rpcallowip=::/0` (still dangerous!) |\n+\n+Using wildcards will result in the rule being rejected with the following error in debug.log:\n+\n+    Error: Invalid -rpcallowip subnet specification: *. Valid are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).\n+\n+\n+REST interface\n+--------------\n+\n+A new HTTP API is exposed when running with the `-rest` flag, which allows\n+unauthenticated access to public node data.\n+\n+It is served on the same port as RPC, but does not need a password, and uses\n+plain HTTP instead of JSON-RPC.\n+\n+Assuming a local RPC server running on port 8332, it is possible to request:\n+- Blocks: http://localhost:8332/rest/block/*HASH*.*EXT*\n+- Blocks without transactions: http://localhost:8332/rest/block/notxdetails/*HASH*.*EXT*\n+- Transactions (requires `-txindex`): http://localhost:8332/rest/tx/*HASH*.*EXT*\n+\n+In every case, *EXT* can be `bin` (for raw binary data), `hex` (for hex-encoded\n+binary) or `json`.\n+\n+For more details, see the `doc/REST-interface.md` document in the repository.\n+\n+RPC Server \"Warm-Up\" Mode\n+-------------------------\n+\n+The RPC server is started earlier now, before most of the expensive\n+intialisations like loading the block index.  It is available now almost\n+immediately after starting the process.  However, until all initialisations\n+are done, it always returns an immediate error with code -28 to all calls.\n+\n+This new behaviour can be useful for clients to know that a server is already\n+started and will be available soon (for instance, so that they do not\n+have to start it themselves).\n+\n+Improved signing security\n+-------------------------\n+\n+For 0.10 the security of signing against unusual attacks has been\n+improved by making the signatures constant time and deterministic.\n+\n+This change is a result of switching signing to use libsecp256k1\n+instead of OpenSSL. Libsecp256k1 is a cryptographic library\n+optimized for the curve Bitcoin uses which was created by Bitcoin\n+Core developer Pieter Wuille.\n+\n+There exist attacks[1] against most ECC implementations where an\n+attacker on shared virtual machine hardware could extract a private\n+key if they could cause a target to sign using the same key hundreds\n+of times. While using shared hosts and reusing keys are inadvisable\n+for other reasons, it's a better practice to avoid the exposure.\n+\n+OpenSSL has code in their source repository for derandomization\n+and reduction in timing leaks that we've eagerly wanted to use for a\n+long time, but this functionality has still not made its\n+way into a released version of OpenSSL. Libsecp256k1 achieves\n+significantly stronger protection: As far as we're aware this is\n+the only deployed implementation of constant time signing for\n+the curve Bitcoin uses and we have reason to believe that\n+libsecp256k1 is better tested and more thoroughly reviewed\n+than the implementation in OpenSSL.\n+\n+[1] https://eprint.iacr.org/2014/161.pdf\n+\n+Watch-only wallet support\n+-------------------------\n+\n+The wallet can now track transactions to and from wallets for which you know\n+all addresses (or scripts), even without the private keys.\n+\n+This can be used to track payments without needing the private keys online on a\n+possibly vulnerable system. In addition, it can help for (manual) construction\n+of multisig transactions where you are only one of the signers.\n+\n+One new RPC, `importaddress`, is added which functions similarly to\n+`importprivkey`, but instead takes an address or script (in hexadecimal) as\n+argument.  After using it, outputs credited to this address or script are\n+considered to be received, and transactions consuming these outputs will be\n+considered to be sent.\n+\n+The following RPCs have optional support for watch-only:\n+`getbalance`, `listreceivedbyaddress`, `listreceivedbyaccount`,\n+`listtransactions`, `listaccounts`, `listsinceblock`, `gettransaction`. See the\n+RPC documentation for those methods for more information.\n+\n+Compared to using `getrawtransaction`, this mechanism does not require\n+`-txindex`, scales better, integrates better with the wallet, and is compatible\n+with future block chain pruning functionality. It does mean that all relevant\n+addresses need to added to the wallet before the payment, though.\n+\n+Consensus library\n+-----------------\n+\n+Starting from 0.10.0, the Bitcoin Core distribution includes a consensus library.\n+\n+The purpose of this library is to make the verification functionality that is\n+critical to Bitcoin's consensus available to other applications, e.g. to language\n+bindings such as [python-bitcoinlib](https://pypi.python.org/pypi/python-bitcoinlib) or\n+alternative node implementations.\n+\n+This library is called `libbitcoinconsensus.so` (or, `.dll` for Windows).\n+Its interface is defined in the C header [bitcoinconsensus.h](https://github.com/bitcoin/bitcoin/blob/0.10/src/script/bitcoinconsensus.h).\n+\n+In its initial version the API includes two functions:\n+\n+- `bitcoinconsensus_verify_script` verifies a script. It returns whether the indicated input of the provided serialized transaction \n+correctly spends the passed scriptPubKey under additional constraints indicated by flags\n+- `bitcoinconsensus_version` returns the API version, currently at an experimental `0`\n+\n+The functionality is planned to be extended to e.g. UTXO management in upcoming releases, but the interface\n+for existing methods should remain stable.\n+\n+Standard script rules relaxed for P2SH addresses\n+------------------------------------------------\n+\n+The IsStandard() rules have been almost completely removed for P2SH\n+redemption scripts, allowing applications to make use of any valid\n+script type, such as \"n-of-m OR y\", hash-locked oracle addresses, etc.\n+While the Bitcoin protocol has always supported these types of script,\n+actually using them on mainnet has been previously inconvenient as\n+standard Bitcoin Core nodes wouldn't relay them to miners, nor would\n+most miners include them in blocks they mined.\n+\n+bitcoin-tx\n+----------\n+\n+It has been observed that many of the RPC functions offered by bitcoind are\n+\"pure functions\", and operate independently of the bitcoind wallet. This\n+included many of the RPC \"raw transaction\" API functions, such as\n+createrawtransaction.\n+\n+bitcoin-tx is a newly introduced command line utility designed to enable easy\n+manipulation of bitcoin transactions. A summary of its operation may be\n+obtained via \"bitcoin-tx --help\" Transactions may be created or signed in a\n+manner similar to the RPC raw tx API. Transactions may be updated, deleting\n+inputs or outputs, or appending new inputs and outputs. Custom scripts may be\n+easily composed using a simple text notation, borrowed from the bitcoin test\n+suite.\n+\n+This tool may be used for experimenting with new transaction types, signing\n+multi-party transactions, and many other uses. Long term, the goal is to\n+deprecate and remove \"pure function\" RPC API calls, as those do not require a\n+server round-trip to execute.\n+\n+Other utilities \"bitcoin-key\" and \"bitcoin-script\" have been proposed, making\n+key and script operations easily accessible via command line.\n+\n+Mining and relay policy enhancements\n+------------------------------------\n+\n+Bitcoin Core's block templates are now for version 3 blocks only, and any mining\n+software relying on its `getblocktemplate` must be updated in parallel to use\n+libblkmaker either version 0.4.2 or any version from 0.5.1 onward.\n+If you are solo mining, this will affect you the moment you upgrade Bitcoin\n+Core, which must be done prior to BIP66 achieving its 951/1001 status.\n+If you are mining with the stratum mining protocol: this does not affect you.\n+If you are mining with the getblocktemplate protocol to a pool: this will affect\n+you at the pool operator's discretion, which must be no later than BIP66\n+achieving its 951/1001 status.\n+\n+The `prioritisetransaction` RPC method has been added to enable miners to\n+manipulate the priority of transactions on an individual basis.\n+\n+Bitcoin Core now supports BIP 22 long polling, so mining software can be\n+notified immediately of new templates rather than having to poll periodically.\n+\n+Support for BIP 23 block proposals is now available in Bitcoin Core's\n+`getblocktemplate` method. This enables miners to check the basic validity of\n+their next block before expending work on it, reducing risks of accidental\n+hardforks or mining invalid blocks.\n+\n+Two new options to control mining policy:\n+- `-datacarrier=0/1` : Relay and mine \"data carrier\" (OP_RETURN) transactions\n+if this is 1.\n+- `-datacarriersize=n` : Maximum size, in bytes, we consider acceptable for\n+\"data carrier\" outputs.\n+\n+The relay policy has changed to more properly implement the desired behavior of not \n+relaying free (or very low fee) transactions unless they have a priority above the \n+AllowFreeThreshold(), in which case they are relayed subject to the rate limiter.\n+\n+BIP 66: strict DER encoding for signatures\n+------------------------------------------\n+\n+Bitcoin Core 0.10 implements BIP 66, which introduces block version 3, and a new\n+consensus rule, which prohibits non-DER signatures. Such transactions have been\n+non-standard since Bitcoin v0.8.0 (released in February 2013), but were\n+technically still permitted inside blocks.\n+\n+This change breaks the dependency on OpenSSL's signature parsing, and is\n+required if implementations would want to remove all of OpenSSL from the\n+consensus code.\n+\n+The same miner-voting mechanism as in BIP 34 is used: when 751 out of a\n+sequence of 1001 blocks have version number 3 or higher, the new consensus\n+rule becomes active for those blocks. When 951 out of a sequence of 1001\n+blocks have version number 3 or higher, it becomes mandatory for all blocks.\n+\n+Backward compatibility with current mining software is NOT provided, thus miners\n+should read the first paragraph of \"Mining and relay policy enhancements\" above.\n+\n+0.10.0 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect external\n+behavior, not code moves, refactors or string updates.\n+\n+RPC:\n+- `f923c07` Support IPv6 lookup in bitcoin-cli even when IPv6 only bound on localhost\n+- `b641c9c` Fix addnode \"onetry\": Connect with OpenNetworkConnection\n+- `171ca77` estimatefee / estimatepriority RPC methods\n+- `b750cf1` Remove cli functionality from bitcoind\n+- `f6984e8` Add \"chain\" to getmininginfo, improve help in getblockchaininfo\n+- `99ddc6c` Add nLocalServices info to RPC getinfo\n+- `cf0c47b` Remove getwork() RPC call\n+- `2a72d45` prioritisetransaction <txid> <priority delta> <priority tx fee>\n+- `e44fea5` Add an option `-datacarrier` to allow users to disable relaying/mining data carrier transactions\n+- `2ec5a3d` Prevent easy RPC memory exhaustion attack\n+- `d4640d7` Added argument to getbalance to include watchonly addresses and fixed errors in balance calculation\n+- `83f3543` Added argument to listaccounts to include watchonly addresses\n+- `952877e` Showing 'involvesWatchonly' property for transactions returned by 'listtransactions' and 'listsinceblock'. It is only appended when the transaction involves a watchonly address\n+- `d7d5d23` Added argument to listtransactions and listsinceblock to include watchonly addresses\n+- `f87ba3d` added includeWatchonly argument to 'gettransaction' because it affects balance calculation\n+- `0fa2f88` added includedWatchonly argument to listreceivedbyaddress/...account\n+- `6c37f7f` `getrawchangeaddress`: fail when keypool exhausted and wallet locked\n+- `ff6a7af` getblocktemplate: longpolling support\n+- `c4a321f` Add peerid to getpeerinfo to allow correlation with the logs\n+- `1b4568c` Add vout to ListTransactions output\n+- `b33bd7a` Implement \"getchaintips\" RPC command to monitor blockchain forks\n+- `733177e` Remove size limit in RPC client, keep it in server\n+- `6b5b7cb` Categorize rpc help overview\n+- `6f2c26a` Closely track mempool byte total. Add \"getmempoolinfo\" RPC\n+- `aa82795` Add detailed network info to getnetworkinfo RPC\n+- `01094bd` Don't reveal whether password is <20 or >20 characters in RPC\n+- `57153d4` rpc: Compute number of confirmations of a block from block height\n+- `ff36cbe` getnetworkinfo: export local node's client sub-version string\n+- `d14d7de` SanitizeString: allow '(' and ')'\n+- `31d6390` Fixed setaccount accepting foreign address\n+- `b5ec5fe` update getnetworkinfo help with subversion\n+- `ad6e601` RPC additions after headers-first\n+- `33dfbf5` rpc: Fix leveldb iterator leak, and flush before `gettxoutsetinfo`\n+- `2aa6329` Enable customising node policy for datacarrier data size with a -datacarriersize option\n+- `f877aaa` submitblock: Use a temporary CValidationState to determine accurately the outcome of ProcessBlock\n+- `e69a587` submitblock: Support for returning specific rejection reasons\n+- `af82884` Add \"warmup mode\" for RPC server\n+- `e2655e0` Add unauthenticated HTTP REST interface to public blockchain data\n+- `683dc40` Disable SSLv3 (in favor of TLS) for the RPC client and server\n+- `44b4c0d` signrawtransaction: validate private key\n+- `9765a50` Implement BIP 23 Block Proposal\n+- `f9de17e` Add warning comment to getinfo\n+\n+Command-line options:\n+- `ee21912` Use netmasks instead of wildcards for IP address matching\n+- `deb3572` Add `-rpcbind` option to allow binding RPC port on a specific interface\n+- `96b733e` Add `-version` option to get just the version\n+- `1569353` Add `-stopafterblockimport` option\n+- `77cbd46` Let -zapwallettxes recover transaction meta data\n+- `1c750db` remove -tor compatibility code (only allow -onion)\n+- `4aaa017` rework help messages for fee-related options\n+- `4278b1d` Clarify error message when invalid -rpcallowip\n+- `6b407e4` -datadir is now allowed in config files\n+- `bdd5b58` Add option `-sysperms` to disable 077 umask (create new files with system default umask)\n+- `cbe39a3` Add \"bitcoin-tx\" command line utility and supporting modules\n+- `dbca89b` Trigger -alertnotify if network is upgrading without you\n+- `ad96e7c` Make -reindex cope with out-of-order blocks\n+- `16d5194` Skip reindexed blocks individually\n+- `ec01243` --tracerpc option for regression tests\n+- `f654f00` Change -genproclimit default to 1\n+- `3c77714` Make -proxy set all network types, avoiding a connect leak\n+- `57be955` Remove -printblock, -printblocktree, and -printblockindex\n+- `ad3d208` remove -maxorphanblocks config parameter since it is no longer functional\n+\n+Block and transaction handling:\n+- `7a0e84d` ProcessGetData(): abort if a block file is missing from disk\n+- `8c93bf4` LoadBlockIndexDB(): Require block db reindex if any `blk*.dat` files are missing\n+- `77339e5` Get rid of the static chainMostWork (optimization)\n+- `4e0eed8` Allow ActivateBestChain to release its lock on cs_main\n+- `18e7216` Push cs_mains down in ProcessBlock\n+- `fa126ef` Avoid undefined behavior using CFlatData in CScript serialization\n+- `7f3b4e9` Relax IsStandard rules for pay-to-script-hash transactions\n+- `c9a0918` Add a skiplist to the CBlockIndex structure\n+- `bc42503` Use unordered_map for CCoinsViewCache with salted hash (optimization)\n+- `d4d3fbd` Do not flush the cache after every block outside of IBD (optimization)\n+- `ad08d0b` Bugfix: make CCoinsViewMemPool support pruned entries in underlying cache\n+- `5734d4d` Only remove actualy failed blocks from setBlockIndexValid\n+- `d70bc52` Rework block processing benchmark code\n+- `714a3e6` Only keep setBlockIndexValid entries that are possible improvements\n+- `ea100c7` Reduce maximum coinscache size during verification (reduce memory usage)\n+- `4fad8e6` Reject transactions with excessive numbers of sigops\n+- `b0875eb` Allow BatchWrite to destroy its input, reducing copying (optimization)\n+- `92bb6f2` Bypass reloading blocks from disk (optimization)\n+- `2e28031` Perform CVerifyDB on pcoinsdbview instead of pcoinsTip (reduce memory usage)\n+- `ab15b2e` Avoid copying undo data (optimization)\n+- `341735e` Headers-first synchronization\n+- `afc32c5` Fix rebuild-chainstate feature and improve its performance\n+- `e11b2ce` Fix large reorgs\n+- `ed6d1a2` Keep information about all block files in memory\n+- `a48f2d6` Abstract context-dependent block checking from acceptance\n+- `7e615f5` Fixed mempool sync after sending a transaction\n+- `51ce901` Improve chainstate/blockindex disk writing policy\n+- `a206950` Introduce separate flushing modes\n+- `9ec75c5` Add a locking mechanism to IsInitialBlockDownload to ensure it never goes from false to true\n+- `868d041` Remove coinbase-dependant transactions during reorg\n+- `723d12c` Remove txn which are invalidated by coinbase maturity during reorg\n+- `0cb8763` Check against MANDATORY flags prior to accepting to mempool\n+- `8446262` Reject headers that build on an invalid parent\n+- `008138c` Bugfix: only track UTXO modification after lookup\n+\n+P2P protocol and network code:\n+- `f80cffa` Do not trigger a DoS ban if SCRIPT_VERIFY_NULLDUMMY fails\n+- `c30329a` Add testnet DNS seed of Alex Kotenko\n+- `45a4baf` Add testnet DNS seed of Andreas Schildbach\n+- `f1920e8` Ping automatically every 2 minutes (unconditionally)\n+- `806fd19` Allocate receive buffers in on the fly\n+- `6ecf3ed` Display unknown commands received\n+- `aa81564` Track peers' available blocks\n+- `caf6150` Use async name resolving to improve net thread responsiveness\n+- `9f4da19` Use pong receive time rather than processing time\n+- `0127a9b` remove SOCKS4 support from core and GUI, use SOCKS5\n+- `40f5cb8` Send rejects and apply DoS scoring for errors in direct block validation\n+- `dc942e6` Introduce whitelisted peers\n+- `c994d2e` prevent SOCKET leak in BindListenPort()\n+- `a60120e` Add built-in seeds for .onion\n+- `60dc8e4` Allow -onlynet=onion to be used\n+- `3a56de7` addrman: Do not propagate obviously poor addresses onto the network\n+- `6050ab6` netbase: Make SOCKS5 negotiation interruptible\n+- `604ee2a` Remove tx from AlreadyAskedFor list once we receive it, not when we process it\n+- `efad808` Avoid reject message feedback loops\n+- `71697f9` Separate protocol versioning from clientversion\n+- `20a5f61` Don't relay alerts to peers before version negotiation\n+- `b4ee0bd` Introduce preferred download peers\n+- `845c86d` Do not use third party services for IP detection\n+- `12a49ca` Limit the number of new addressses to accumulate\n+- `35e408f` Regard connection failures as attempt for addrman\n+- `a3a7317` Introduce 10 minute block download timeout\n+- `3022e7d` Require sufficent priority for relay of free transactions\n+- `58fda4d` Update seed IPs, based on bitcoin.sipa.be crawler data\n+- `18021d0` Remove bitnodes.io from dnsseeds.\n+\n+Validation:\n+- `6fd7ef2` Also switch the (unused) verification code to low-s instead of even-s\n+- `584a358` Do merkle root and txid duplicates check simultaneously\n+- `217a5c9` When transaction outputs exceed inputs, show the offending amounts so as to aid debugging\n+- `f74fc9b` Print input index when signature validation fails, to aid debugging\n+- `6fd59ee` script.h: set_vch() should shift a >32 bit value\n+- `d752ba8` Add SCRIPT_VERIFY_SIGPUSHONLY (BIP62 rule 2) (test only)\n+- `698c6ab` Add SCRIPT_VERIFY_MINIMALDATA (BIP62 rules 3 and 4) (test only)\n+- `ab9edbd` script: create sane error return codes for script validation and remove logging\n+- `219a147` script: check ScriptError values in script tests\n+- `0391423` Discourage NOPs reserved for soft-fork upgrades\n+- `98b135f` Make STRICTENC invalid pubkeys fail the script rather than the opcode\n+- `307f7d4` Report script evaluation failures in log and reject messages\n+- `ace39db` consensus: guard against openssl's new strict DER checks\n+- `12b7c44` Improve robustness of DER recoding code\n+- `76ce5c8` fail immediately on an empty signature\n+\n+Build system:\n+- `f25e3ad` Fix build in OS X 10.9\n+- `65e8ba4` build: Switch to non-recursive make\n+- `460b32d` build: fix broken boost chrono check on some platforms\n+- `9ce0774` build: Fix windows configure when using --with-qt-libdir\n+- `ea96475` build: Add mention of --disable-wallet to bdb48 error messages\n+- `1dec09b` depends: add shared dependency builder\n+- `c101c76` build: Add --with-utils (bitcoin-cli and bitcoin-tx, default=yes). Help string consistency tweaks. Target sanity check fix\n+- `e432a5f` build: add option for reducing exports (v2)\n+- `6134b43` Fixing condition 'sabotaging' MSVC build\n+- `af0bd5e` osx: fix signing to make Gatekeeper happy (again)\n+- `a7d1f03` build: fix dynamic boost check when --with-boost= is used\n+- `d5fd094` build: fix qt test build when libprotobuf is in a non-standard path\n+- `2cf5f16` Add libbitcoinconsensus library\n+- `914868a` build: add a deterministic dmg signer \n+- `2d375fe` depends: bump openssl to 1.0.1k\n+- `b7a4ecc` Build: Only check for boost when building code that requires it\n+\n+Wallet:\n+- `b33d1f5` Use fee/priority estimates in wallet CreateTransaction\n+- `4b7b1bb` Sanity checks for estimates\n+- `c898846` Add support for watch-only addresses\n+- `d5087d1` Use script matching rather than destination matching for watch-only\n+- `d88af56` Fee fixes\n+- `a35b55b` Dont run full check every time we decrypt wallet\n+- `3a7c348` Fix make_change to not create half-satoshis\n+- `f606bb9` fix a possible memory leak in CWalletDB::Recover\n+- `870da77` fix possible memory leaks in CWallet::EncryptWallet\n+- `ccca27a` Watch-only fixes\n+- `9b1627d` [Wallet] Reduce minTxFee for transaction creation to 1000 satoshis\n+- `a53fd41` Deterministic signing\n+- `15ad0b5` Apply AreSane() checks to the fees from the network\n+- `11855c1` Enforce minRelayTxFee on wallet created tx and add a maxtxfee option\n+\n+GUI:\n+- `c21c74b` osx: Fix missing dock menu with qt5\n+- `b90711c` Fix Transaction details shows wrong To:\n+- `516053c` Make links in 'About Bitcoin Core' clickable\n+- `bdc83e8` Ensure payment request network matches client network\n+- `65f78a1` Add GUI view of peer information\n+- `06a91d9` VerifyDB progress reporting\n+- `fe6bff2` Add BerkeleyDB version info to RPCConsole\n+- `b917555` PeerTableModel: Fix potential deadlock. #4296\n+- `dff0e3b` Improve rpc console history behavior\n+- `95a9383` Remove CENT-fee-rule from coin control completely\n+- `56b07d2` Allow setting listen via GUI\n+- `d95ba75` Log messages with type>QtDebugMsg as non-debug\n+- `8969828` New status bar Unit Display Control and related changes\n+- `674c070` seed OpenSSL PNRG with Windows event data\n+- `509f926` Payment request parsing on startup now only changes network if a valid network name is specified\n+- `acd432b` Prevent balloon-spam after rescan\n+- `7007402` Implement SI-style (thin space) thoudands separator\n+- `91cce17` Use fixed-point arithmetic in amount spinbox\n+- `bdba2dd` Remove an obscure option no-one cares about\n+- `bd0aa10` Replace the temporary file hack currently used to change Bitcoin-Qt's dock icon (OS X) with a buffer-based solution\n+- `94e1b9e` Re-work overviewpage UI\n+- `8bfdc9a` Better looking trayicon\n+- `b197bf3` disable tray interactions when client model set to 0\n+- `1c5f0af` Add column Watch-only to transactions list\n+- `21f139b` Fix tablet crash. closes #4854\n+- `e84843c` Broken addresses on command line no longer trigger testnet\n+- `a49f11d` Change splash screen to normal window\n+- `1f9be98` Disable App Nap on OSX 10.9+\n+- `27c3e91` Add proxy to options overridden if necessary\n+- `4bd1185` Allow \"emergency\" shutdown during startup\n+- `d52f072` Don't show wallet options in the preferences menu when running with -disablewallet\n+- `6093aa1` Qt: QProgressBar CPU-Issue workaround\n+- `0ed9675` [Wallet] Add global boolean whether to send free transactions (default=true)\n+- `ed3e5e4` [Wallet] Add global boolean whether to pay at least the custom fee (default=true)\n+- `e7876b2` [Wallet] Prevent user from paying a non-sense fee\n+- `c1c9d5b` Add Smartfee to GUI\n+- `e0a25c5` Make askpassphrase dialog behave more sanely\n+- `94b362d` On close of splashscreen interrupt verifyDB\n+- `b790d13` English translation update\n+- `8543b0d` Correct tooltip on address book page\n+\n+Tests:\n+- `b41e594` Fix script test handling of empty scripts\n+- `d3a33fc` Test CHECKMULTISIG with m == 0 and n == 0\n+- `29c1749` Let tx (in)valid tests use any SCRIPT_VERIFY flag\n+- `6380180` Add rejection of non-null CHECKMULTISIG dummy values\n+- `21bf3d2` Add tests for BoostAsioToCNetAddr\n+- `b5ad5e7` Add Python test for -rpcbind and -rpcallowip\n+- `9ec0306` Add CODESEPARATOR/FindAndDelete() tests\n+- `75ebced` Added many rpc wallet tests\n+- `0193fb8` Allow multiple regression tests to run at once\n+- `92a6220` Hook up sanity checks\n+- `3820e01` Extend and move all crypto tests to crypto_tests.cpp\n+- `3f9a019` added list/get received by address/ account tests\n+- `a90689f` Remove timing-based signature cache unit test\n+- `236982c` Add skiplist unit tests\n+- `f4b00be` Add CChain::GetLocator() unit test\n+- `b45a6e8` Add test for getblocktemplate longpolling\n+- `cdf305e` Set -discover=0 in regtest framework\n+- `ed02282` additional test for OP_SIZE in script_valid.json\n+- `0072d98` script tests: BOOLAND, BOOLOR decode to integer\n+- `833ff16` script tests: values that overflow to 0 are true\n+- `4cac5db` script tests: value with trailing 0x00 is true\n+- `89101c6` script test: test case for 5-byte bools\n+- `d2d9dc0` script tests: add tests for CHECKMULTISIG limits\n+- `d789386` Add \"it works\" test for bitcoin-tx\n+- `df4d61e` Add bitcoin-tx tests\n+- `aa41ac2` Test IsPushOnly() with invalid push\n+- `6022b5d` Make `script_{valid,invalid}.json` validation flags configurable\n+- `8138cbe` Add automatic script test generation, and actual checksig tests\n+- `ed27e53` Add coins_tests with a large randomized CCoinViewCache test\n+- `9df9cf5` Make SCRIPT_VERIFY_STRICTENC compatible with BIP62\n+- `dcb9846` Extend getchaintips RPC test\n+- `554147a` Ensure MINIMALDATA invalid tests can only fail one way\n+- `dfeec18` Test every numeric-accepting opcode for correct handling of the numeric minimal encoding rule\n+- `2b62e17` Clearly separate PUSHDATA and numeric argument MINIMALDATA tests\n+- `16d78bd` Add valid invert of invalid every numeric opcode tests\n+- `f635269` tests: enable alertnotify test for Windows\n+- `7a41614` tests: allow rpc-tests to get filenames for bitcoind and bitcoin-cli from the environment\n+- `5122ea7` tests: fix forknotify.py on windows\n+- `fa7f8cd` tests: remove old pull-tester scripts\n+- `7667850` tests: replace the old (unused since Travis) tests with new rpc test scripts\n+- `f4e0aef` Do signature-s negation inside the tests\n+- `1837987` Optimize -regtest setgenerate block generation\n+- `2db4c8a` Fix node ranges in the test framework\n+- `a8b2ce5` regression test only setmocktime RPC call\n+- `daf03e7` RPC tests: create initial chain with specific timestamps\n+- `8656dbb` Port/fix txnmall.sh regression test\n+- `ca81587` Test the exact order of CHECKMULTISIG sig/pubkey evaluation\n+- `7357893` Prioritize and display -testsafemode status in UI\n+- `f321d6b` Add key generation/verification to ECC sanity check\n+- `132ea9b` miner_tests: Disable checkpoints so they don't fail the subsidy-change test\n+- `bc6cb41` QA RPC tests: Add tests block block proposals\n+- `f67a9ce` Use deterministically generated script tests\n+- `11d7a7d` [RPC] add rpc-test for http keep-alive (persistent connections)\n+- `34318d7` RPC-test based on invalidateblock for mempool coinbase spends\n+- `76ec867` Use actually valid transactions for script tests\n+- `c8589bf` Add actual signature tests\n+- `e2677d7` Fix smartfees test for change to relay policy\n+- `263b65e` tests: run sanity checks in tests too\n+\n+Miscellaneous:\n+- `122549f` Fix incorrect checkpoint data for testnet3\n+- `5bd02cf` Log used config file to debug.log on startup\n+- `68ba85f` Updated Debian example bitcoin.conf with config from wiki + removed some cruft and updated comments\n+- `e5ee8f0` Remove -beta suffix\n+- `38405ac` Add comment regarding experimental-use service bits\n+- `be873f6` Issue warning if collecting RandSeed data failed\n+- `8ae973c` Allocate more space if necessary in RandSeedAddPerfMon\n+- `675bcd5` Correct comment for 15-of-15 p2sh script size\n+- `fda3fed` libsecp256k1 integration\n+- `2e36866` Show nodeid instead of addresses in log (for anonymity) unless otherwise requested\n+- `cd01a5e` Enable paranoid corruption checks in LevelDB >= 1.16\n+- `9365937` Add comment about never updating nTimeOffset past 199 samples\n+- `403c1bf` contrib: remove getwork-based pyminer (as getwork API call has been removed)\n+- `0c3e101` contrib: Added systemd .service file in order to help distributions integrate bitcoind\n+- `0a0878d` doc: Add new DNSseed policy\n+- `2887bff` Update coding style and add .clang-format\n+- `5cbda4f` Changed LevelDB cursors to use scoped pointers to ensure destruction when going out of scope\n+- `b4a72a7` contrib/linearize: split output files based on new-timestamp-year or max-file-size\n+- `e982b57` Use explicit fflush() instead of setvbuf()\n+- `234bfbf` contrib: Add init scripts and docs for Upstart and OpenRC\n+- `01c2807` Add warning about the merkle-tree algorithm duplicate txid flaw\n+- `d6712db` Also create pid file in non-daemon mode\n+- `772ab0e` contrib: use batched JSON-RPC in linarize-hashes (optimization)\n+- `7ab4358` Update bash-completion for v0.10\n+- `6e6a36c` contrib: show pull # in prompt for github-merge script\n+- `5b9f842` Upgrade leveldb to 1.18, make chainstate databases compatible between ARM and x86 (issue #2293)\n+- `4e7c219` Catch UTXO set read errors and shutdown\n+- `867c600` Catch LevelDB errors during flush\n+- `06ca065` Fix CScriptID(const CScript& in) in empty script case\n+\n+Credits\n+=======\n+\n+Thanks to everyone who contributed to this release:\n+\n+- 21E14\n+- Adam Weiss\n+- Aitor Pazos\n+- Alexander Jeng\n+- Alex Morcos\n+- Alon Muroch\n+- Andreas Schildbach\n+- Andrew Poelstra\n+- Andy Alness\n+- Ashley Holman\n+- Benedict Chan\n+- Ben Holden-Crowther\n+- Bryan Bishop\n+- BtcDrak\n+- Christian von Roques\n+- Clinton Christian\n+- Cory Fields\n+- Cozz Lovan\n+- daniel\n+- Daniel Kraft\n+- David Hill\n+- Derek701\n+- dexX7\n+- dllud\n+- Dominyk Tiller\n+- Doug\n+- elichai\n+- elkingtowa\n+- ENikS\n+- Eric Shaw\n+- Federico Bond\n+- Francis GASCHET\n+- Gavin Andresen\n+- Giuseppe Mazzotta\n+- Glenn Willen\n+- Gregory Maxwell\n+- gubatron\n+- HarryWu\n+- himynameismartin\n+- Huang Le\n+- Ian Carroll\n+- imharrywu\n+- Jameson Lopp\n+- Janusz Lenar\n+- JaSK\n+- Jeff Garzik\n+- JL2035\n+- Johnathan Corgan\n+- Jonas Schnelli\n+- jtimon\n+- Julian Haight\n+- Kamil Domanski\n+- kazcw\n+- kevin\n+- kiwigb\n+- Kosta Zertsekel\n+- LongShao007\n+- Luke Dashjr\n+- Mark Friedenbach\n+- Mathy Vanvoorden\n+- Matt Corallo\n+- Matthew Bogosian\n+- Micha\n+- Michael Ford\n+- Mike Hearn\n+- mrbandrews\n+- mruddy\n+- ntrgn\n+- Otto Allmendinger\n+- paveljanik\n+- Pavel Vasin\n+- Peter Todd\n+- phantomcircuit\n+- Philip Kaufmann\n+- Pieter Wuille\n+- pryds\n+- randy-waterhouse\n+- R E Broadley\n+- Rose Toomey\n+- Ross Nicoll\n+- Roy Badami\n+- Ruben Dario Ponticelli\n+- Rune K. Svendsen\n+- Ryan X. Charles\n+- Saivann\n+- sandakersmann\n+- SergioDemianLerner\n+- shshshsh\n+- sinetek\n+- Stuart Cardall\n+- Suhas Daftuar\n+- Tawanda Kembo\n+- Teran McKinney\n+- tm314159\n+- Tom Harding\n+- Trevin Hofmann\n+- Whit J\n+- Wladimir J. van der Laan\n+- Yoichi Hirai\n+- Zak Wilcox\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,143 @@\n+Bitcoin Core version 0.10.1 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.10.1/>\n+\n+This is a new minor version release, bringing bug fixes and translation \n+updates. It is recommended to upgrade to this version.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+------------------\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility.\n+\n+Notable changes\n+===============\n+\n+This is a minor release and hence there are no notable changes.\n+For the notable changes in 0.10, refer to the release notes for the\n+0.10.0 release at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md\n+\n+0.10.1 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect external\n+behavior, not code moves, refactors or string updates.\n+\n+RPC:\n+- `7f502be` fix crash: createmultisig and addmultisigaddress\n+- `eae305f` Fix missing lock in submitblock\n+\n+Block (database) and transaction handling:\n+- `1d2cdd2` Fix InvalidateBlock to add chainActive.Tip to setBlockIndexCandidates\n+- `c91c660` fix InvalidateBlock to repopulate setBlockIndexCandidates\n+- `002c8a2` fix possible block db breakage during re-index\n+- `a1f425b` Add (optional) consistency check for the block chain data structures\n+- `1c62e84` Keep mempool consistent during block-reorgs\n+- `57d1f46` Fix CheckBlockIndex for reindex\n+- `bac6fca` Set nSequenceId when a block is fully linked\n+\n+P2P protocol and network code:\n+- `78f64ef` don't trickle for whitelisted nodes\n+- `ca301bf` Reduce fingerprinting through timestamps in 'addr' messages.\n+- `200f293` Ignore getaddr messages on Outbound connections.\n+- `d5d8998` Limit message sizes before transfer\n+- `aeb9279` Better fingerprinting protection for non-main-chain getdatas.\n+- `cf0218f` Make addrman's bucket placement deterministic (countermeasure 1 against eclipse attacks, see http://cs-people.bu.edu/heilman/eclipse/)\n+- `0c6f334` Always use a 50% chance to choose between tried and new entries (countermeasure 2 against eclipse attacks)\n+- `214154e` Do not bias outgoing connections towards fresh addresses (countermeasure 2 against eclipse attacks)\n+- `aa587d4` Scale up addrman (countermeasure 6 against eclipse attacks)\n+- `139cd81` Cap nAttempts penalty at 8 and switch to pow instead of a division loop\n+\n+Validation:\n+- `d148f62` Acquire CCheckQueue's lock to avoid race condition\n+\n+Build system:\n+- `8752b5c` 0.10 fix for crashes on OSX 10.6\n+\n+Wallet:\n+- N/A\n+\n+GUI:\n+- `2c08406` some mac specifiy cleanup (memory handling, unnecessary code)\n+- `81145a6` fix OSX dock icon window reopening\n+- `786cf72` fix a issue where \"command line options\"-action overwrite \"Preference\"-action (on OSX)\n+\n+Tests:\n+- `1117378` add RPC test for InvalidateBlock\n+\n+Miscellaneous:\n+- `c9e022b` Initialization: set Boost path locale in main thread\n+- `23126a0` Sanitize command strings before logging them.\n+- `323de27` Initialization: setup environment before starting Qt tests\n+- `7494e09` Initialization: setup environment before starting tests\n+- `df45564` Initialization: set fallback locale as environment variable\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Alex Morcos\n+- Cory Fields\n+- dexX7\n+- fsb4000\n+- Gavin Andresen\n+- Gregory Maxwell\n+- Ivan Pustogarov\n+- Jonas Schnelli\n+- Matt Corallo\n+- mrbandrews\n+- Pieter Wuille\n+- Ruben de Vries\n+- Suhas Daftuar\n+- Wladimir J. van der Laan\n+\n+And all those who contributed additional code review and/or security research:\n+- 21E14\n+- Alison Kendler\n+- Aviv Zohar\n+- Ethan Heilman\n+- Evil-Knievel\n+- fanquake\n+- Jeff Garzik\n+- Jonas Nick\n+- Luke Dashjr\n+- Patrick Strateman\n+- Philip Kaufmann\n+- Sergio Demian Lerner\n+- Sharon Goldberg\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "192ed69d299811b8b662f28905f73479266be820",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,86 @@\n+Bitcoin Core version 0.10.2 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.10.2/>\n+\n+This is a new minor version release, bringing minor bug fixes and translation \n+updates. It is recommended to upgrade to this version.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+------------------\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility.\n+\n+Notable changes\n+===============\n+\n+This fixes a serious problem on Windows with data directories that have non-ASCII\n+characters (https://github.com/bitcoin/bitcoin/issues/6078).\n+\n+For other platforms there are no notable changes.\n+\n+For the notable changes in 0.10, refer to the release notes\n+at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md\n+\n+0.10.2 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect external\n+behavior, not code moves, refactors or string updates.\n+\n+Wallet:\n+- `824c011` fix boost::get usage with boost 1.58\n+\n+Miscellaneous:\n+- `da65606` Avoid crash on start in TestBlockValidity with gen=1.\n+- `424ae66` don't imbue boost::filesystem::path with locale \"C\" on windows (fixes #6078)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Cory Fields\n+- Gregory Maxwell\n+- Jonas Schnelli\n+- Wladimir J. van der Laan\n+\n+And all those who contributed additional code review and/or security research:\n+\n+- dexX7\n+- Pieter Wuille\n+- vayvanne\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "added",
        "additions": 165,
        "deletions": 0,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,165 @@\n+Bitcoin Core version 0.10.3 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.10.3/>\n+\n+This is a new minor version release, bringing security fixes and translation \n+updates. It is recommended to upgrade to this version as soon as possible.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+------------------\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility.\n+\n+Notable changes\n+===============\n+\n+Fix buffer overflow in bundled upnp\n+------------------------------------\n+\n+Bundled miniupnpc was updated to 1.9.20151008. This fixes a buffer overflow in\n+the XML parser during initial network discovery.\n+\n+Details can be found here: http://talosintel.com/reports/TALOS-2015-0035/\n+\n+This applies to the distributed executables only, not when building from source or\n+using distribution provided packages.\n+\n+Additionally, upnp has been disabled by default. This may result in a lower\n+number of reachable nodes on IPv4, however this prevents future libupnpc\n+vulnerabilities from being a structural risk to the network\n+(see https://github.com/bitcoin/bitcoin/pull/6795).\n+\n+Test for LowS signatures before relaying\n+-----------------------------------------\n+\n+Make the node require the canonical 'low-s' encoding for ECDSA signatures when\n+relaying or mining.  This removes a nuisance malleability vector.\n+\n+Consensus behavior is unchanged.\n+\n+If widely deployed this change would eliminate the last remaining known vector\n+for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n+it will block most transactions made by sufficiently out of date software.\n+\n+Unlike the other avenues to change txids on transactions this\n+one was randomly violated by all deployed bitcoin software prior to\n+its discovery. So, while other malleability vectors where made\n+non-standard as soon as they were discovered, this one has remained\n+permitted. Even BIP62 did not propose applying this rule to\n+old version transactions, but conforming implementations have become\n+much more common since BIP62 was initially written.\n+\n+Bitcoin Core has produced compatible signatures since a28fb70e in\n+September 2013, but this didn't make it into a release until 0.9\n+in March 2014; Bitcoinj has done so for a similar span of time.\n+Bitcoinjs and electrum have been more recently updated.\n+\n+This does not replace the need for BIP62 or similar, as miners can\n+still cooperate to break transactions.  Nor does it replace the\n+need for wallet software to handle malleability sanely[1]. This\n+only eliminates the cheap and irritating DOS attack.\n+\n+[1] On the Malleability of Bitcoin Transactions\n+Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n+http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n+\n+Minimum relay fee default increase\n+-----------------------------------\n+\n+The default for the `-minrelaytxfee` setting has been increased from `0.00001`\n+to `0.00005`.\n+\n+This is necessitated by the current transaction flooding, causing\n+outrageous memory usage on nodes due to the mempool ballooning. This is a\n+temporary measure, bridging the time until a dynamic method for determining\n+this fee is merged (which will be in 0.12).\n+\n+(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11.0\n+release notes, in which this value was suggested)\n+\n+0.10.3 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect external\n+behavior, not code moves, refactors or string updates.\n+\n+- #6186 `e4a7d51` Fix two problems in CSubnet parsing\n+- #6153 `ebd7d8d` Parameter interaction: disable upnp if -proxy set\n+- #6203 `ecc96f5` Remove P2SH coinbase flag, no longer interesting\n+- #6226 `181771b` json: fail read_string if string contains trailing garbage\n+- #6244 `09334e0` configure: Detect (and reject) LibreSSL\n+- #6276 `0fd8464` Fix getbalance * 0\n+- #6274 `be64204` Add option `-alerts` to opt out of alert system\n+- #6319 `3f55638` doc: update mailing list address\n+- #6438 `7e66e9c` openssl: avoid config file load/race\n+- #6439 `255eced` Updated URL location of netinstall for Debian\n+- #6412 `0739e6e` Test whether created sockets are select()able\n+- #6694 `f696ea1` [QT] fix thin space word wrap line brake issue\n+- #6704 `743cc9e` Backport bugfixes to 0.10\n+- #6769 `1cea6b0` Test LowS in standardness, removes nuisance malleability vector.\n+- #6789 `093d7b5` Update miniupnpc to 1.9.20151008\n+- #6795 `f2778e0` net: Disable upnp by default\n+- #6797 `91ef4d9` Do not store more than 200 timedata samples\n+- #6793 `842c48d` Bump minrelaytxfee default\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Adam Weiss\n+- Alex Morcos\n+- Casey Rodarmor\n+- Cory Fields\n+- fanquake\n+- Gregory Maxwell\n+- Jonas Schnelli\n+- J Ross Nicoll\n+- Luke Dashjr\n+- Pavel Vasin\n+- Pieter Wuille\n+- randy-waterhouse\n+- \u0e3ftcDrak\n+- Tom Harding\n+- Veres Lajos\n+- Wladimir J. van der Laan\n+\n+And all those who contributed additional code review and/or security research:\n+\n+- timothy on IRC for reporting the issue\n+- Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "38a2c1347d0b8afbfe0c0481cd90b9db06854328",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,172 @@\n+Bitcoin Core version 0.10.4 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.10.4/>\n+\n+This is a new minor version release, bringing bug fixes, the BIP65\n+(CLTV) consensus change, and relay policy preparation for BIP113. It is\n+recommended to upgrade to this version as soon as possible.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+------------------\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility. There are no\n+known problems when downgrading from 0.11.x to 0.10.x.\n+\n+Notable changes since 0.10.3\n+============================\n+\n+BIP65 soft fork to enforce OP_CHECKLOCKTIMEVERIFY opcode\n+--------------------------------------------------------\n+\n+This release includes several changes related to the [BIP65][] soft fork\n+which redefines the existing OP_NOP2 opcode as OP_CHECKLOCKTIMEVERIFY\n+(CLTV) so that a transaction output can be made unspendable until a\n+specified point in the future.\n+\n+1. This release will only relay and mine transactions spending a CLTV\n+   output if they comply with the BIP65 rules as provided in code.\n+\n+2. This release will produce version 4 blocks by default. Please see the\n+   *notice to miners* below.\n+\n+3. Once 951 out of a sequence of 1,001 blocks on the local node's best block\n+   chain contain version 4 (or higher) blocks, this release will no\n+   longer accept new version 3 blocks and it will only accept version 4\n+   blocks if they comply with the BIP65 rules for CLTV.\n+\n+For more information about the soft-forking change, please see\n+<https://github.com/bitcoin/bitcoin/pull/6351>\n+\n+Graphs showing the progress towards block version 4 adoption may be\n+found at the URLs below:\n+\n+- Block versions over the last 50,000 blocks as progress towards BIP65\n+  consensus enforcement: <http://bitcoin.sipa.be/ver-50k.png>\n+\n+- Block versions over the last 2,000 blocks showing the days to the\n+  earliest possible BIP65 consensus-enforced block: <http://bitcoin.sipa.be/ver-2k.png>\n+\n+**Notice to miners:** Bitcoin Core\u2019s block templates are now for\n+version 4 blocks only, and any mining software relying on its\n+getblocktemplate must be updated in parallel to use libblkmaker either\n+version FIXME or any version from FIXME onward.\n+\n+- If you are solo mining, this will affect you the moment you upgrade\n+  Bitcoin Core, which must be done prior to BIP65 achieving its 951/1001\n+  status.\n+\n+- If you are mining with the stratum mining protocol: this does not\n+  affect you.\n+\n+- If you are mining with the getblocktemplate protocol to a pool: this\n+  will affect you at the pool operator\u2019s discretion, which must be no\n+  later than BIP65 achieving its 951/1001 status.\n+\n+[BIP65]: https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki\n+\n+Windows bug fix for corrupted UTXO database on unclean shutdowns\n+----------------------------------------------------------------\n+\n+Several Windows users reported that they often need to reindex the\n+entire blockchain after an unclean shutdown of Bitcoin Core on Windows\n+(or an unclean shutdown of Windows itself). Although unclean shutdowns\n+remain unsafe, this release no longer relies on memory-mapped files for\n+the UTXO database, which significantly reduced the frequency of unclean\n+shutdowns leading to required reindexes during testing.\n+\n+For more information, see: <https://github.com/bitcoin/bitcoin/pull/6917>\n+\n+Other fixes for database corruption on Windows are expected in the\n+next major release.\n+\n+0.10.4 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n+- #6953 `8b3311f` alias -h for --help\n+- #6953 `97546fc` Change URLs to https in debian/control\n+- #6953 `38671bf` Update debian/changelog and slight tweak to debian/control\n+- #6953 `256321e` Correct spelling mistakes in doc folder\n+- #6953 `eae0350` Clarification of unit test build instructions\n+- #6953 `90897ab` Update bluematt-key, the old one is long-since revoked\n+- #6953 `a2f2fb6` build: disable -Wself-assign\n+- #6953 `cf67d8b` Bugfix: Allow mining on top of old tip blocks for testnet (fixes testnet-in-a-box use case)\n+- #6953 `b3964e3` Drop \"with minimal dependencies\" from description\n+- #6953 `43c2789` Split bitcoin-tx into its own package\n+- #6953 `dfe0d4d` Include bitcoin-tx binary on Debian/Ubuntu\n+- #6953 `612efe8` [Qt] Raise debug window when requested\n+- #6953 `3ad96bd` Fix locking in GetTransaction\n+- #6953 `9c81005` Fix spelling of Qt\n+- #6946 `94b67e5` Update LevelDB\n+- #6706 `5dc72f8` CLTV: Add more tests to improve coverage\n+- #6706 `6a1343b` Add RPC tests for the CHECKLOCKTIMEVERIFY (BIP65) soft-fork\n+- #6706 `4137248` Add CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic\n+- #6706 `0e01d0f` Enable CHECKLOCKTIMEVERIFY as a standard script verify flag\n+- #6706 `6d01325` Replace NOP2 with CHECKLOCKTIMEVERIFY (BIP65)\n+- #6706 `750d54f` Move LOCKTIME_THRESHOLD to src/script/script.h\n+- #6706 `6897468` Make CScriptNum() take nMaxNumSize as an argument\n+- #6867 `5297194` Set TCP_NODELAY on P2P sockets\n+- #6836 `fb818b6` Bring historical release notes up to date\n+- #6852 `0b3fd07` build: make sure OpenSSL heeds noexecstack\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Alex Morcos\n+- Daniel Cousens\n+- Diego Viola\n+- Eric Lombrozo\n+- Esteban Ordano\n+- Gregory Maxwell\n+- Luke Dashjr\n+- MarcoFalke\n+- Matt Corallo\n+- Micha\n+- Mitchell Cash\n+- Peter Todd\n+- Pieter Wuille\n+- Wladimir J. van der Laan\n+- Zak Wilcox\n+\n+And those who contributed additional code review and/or security research.\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "28e49fb7ea64838f81a72424217e755a62e865c8",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "added",
        "additions": 505,
        "deletions": 0,
        "changes": 505,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,505 @@\n+Bitcoin Core version 0.11.0 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.11.0/>\n+\n+This is a new major version release, bringing both new features and\n+bug fixes.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+------------------\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility. There are no\n+known problems when downgrading from 0.11.x to 0.10.x.\n+\n+Important information\n+======================\n+\n+Transaction flooding\n+---------------------\n+\n+At the time of this release, the P2P network is being flooded with low-fee\n+transactions. This causes a ballooning of the mempool size.\n+\n+If this growth of the mempool causes problematic memory use on your node, it is\n+possible to change a few configuration options to work around this. The growth\n+of the mempool can be monitored with the RPC command `getmempoolinfo`.\n+\n+One is to increase the minimum transaction relay fee `minrelaytxfee`, which\n+defaults to 0.00001. This will cause transactions with fewer BTC/kB fee to be\n+rejected, and thus fewer transactions entering the mempool.\n+\n+The other is to restrict the relaying of free transactions with\n+`limitfreerelay`. This option sets the number of kB/minute at which\n+free transactions (with enough priority) will be accepted. It defaults to 15.\n+Reducing this number reduces the speed at which the mempool can grow due\n+to free transactions.\n+\n+For example, add the following to `bitcoin.conf`:\n+\n+    minrelaytxfee=0.00005 \n+    limitfreerelay=5\n+\n+More robust solutions are being worked on for a follow-up release.\n+\n+Notable changes\n+===============\n+\n+Block file pruning\n+----------------------\n+\n+This release supports running a fully validating node without maintaining a copy \n+of the raw block and undo data on disk. To recap, there are four types of data \n+related to the blockchain in the bitcoin system: the raw blocks as received over \n+the network (blk???.dat), the undo data (rev???.dat), the block index and the \n+UTXO set (both LevelDB databases). The databases are built from the raw data.\n+\n+Block pruning allows Bitcoin Core to delete the raw block and undo data once \n+it's been validated and used to build the databases. At that point, the raw data \n+is used only to relay blocks to other nodes, to handle reorganizations, to look \n+up old transactions (if -txindex is enabled or via the RPC/REST interfaces), or \n+for rescanning the wallet. The block index continues to hold the metadata about \n+all blocks in the blockchain.\n+\n+The user specifies how much space to allot for block & undo files. The minimum \n+allowed is 550MB. Note that this is in addition to whatever is required for the \n+block index and UTXO databases. The minimum was chosen so that Bitcoin Core will \n+be able to maintain at least 288 blocks on disk (two days worth of blocks at 10 \n+minutes per block). In rare instances it is possible that the amount of space \n+used will exceed the pruning target in order to keep the required last 288 \n+blocks on disk.\n+\n+Block pruning works during initial sync in the same way as during steady state, \n+by deleting block files \"as you go\" whenever disk space is allocated. Thus, if \n+the user specifies 550MB, once that level is reached the program will begin \n+deleting the oldest block and undo files, while continuing to download the \n+blockchain.\n+\n+For now, block pruning disables block relay.  In the future, nodes with block \n+pruning will at a minimum relay \"new\" blocks, meaning blocks that extend their \n+active chain. \n+\n+Block pruning is currently incompatible with running a wallet due to the fact \n+that block data is used for rescanning the wallet and importing keys or \n+addresses (which require a rescan.) However, running the wallet with block \n+pruning will be supported in the near future, subject to those limitations.\n+\n+Block pruning is also incompatible with -txindex and will automatically disable \n+it.\n+\n+Once you have pruned blocks, going back to unpruned state requires \n+re-downloading the entire blockchain. To do this, re-start the node with \n+-reindex. Note also that any problem that would cause a user to reindex (e.g., \n+disk corruption) will cause a pruned node to redownload the entire blockchain. \n+Finally, note that when a pruned node reindexes, it will delete any blk???.dat \n+and rev???.dat files in the data directory prior to restarting the download.\n+\n+To enable block pruning on the command line:\n+\n+- `-prune=N`: where N is the number of MB to allot for raw block & undo data.\n+\n+Modified RPC calls:\n+\n+- `getblockchaininfo` now includes whether we are in pruned mode or not.\n+- `getblock` will check if the block's data has been pruned and if so, return an \n+error.\n+- `getrawtransaction` will no longer be able to locate a transaction that has a \n+UTXO but where its block file has been pruned. \n+\n+Pruning is disabled by default.\n+\n+Big endian support\n+--------------------\n+\n+Experimental support for big-endian CPU architectures was added in this\n+release. All little-endian specific code was replaced with endian-neutral\n+constructs. This has been tested on at least MIPS and PPC hosts. The build\n+system will automatically detect the endianness of the target.\n+\n+Memory usage optimization\n+--------------------------\n+\n+There have been many changes in this release to reduce the default memory usage\n+of a node, among which:\n+\n+- Accurate UTXO cache size accounting (#6102); this makes the option `-dbcache`\n+  precise where this grossly underestimated memory usage before\n+- Reduce size of per-peer data structure (#6064 and others); this increases the\n+  number of connections that can be supported with the same amount of memory\n+- Reduce the number of threads (#5964, #5679); lowers the amount of (esp.\n+  virtual) memory needed\n+\n+Fee estimation changes\n+----------------------\n+\n+This release improves the algorithm used for fee estimation.  Previously, -1\n+was returned when there was insufficient data to give an estimate.  Now, -1\n+will also be returned when there is no fee or priority high enough for the\n+desired confirmation target. In those cases, it can help to ask for an estimate\n+for a higher target number of blocks. It is not uncommon for there to be no\n+fee or priority high enough to be reliably (85%) included in the next block and\n+for this reason, the default for `-txconfirmtarget=n` has changed from 1 to 2.\n+\n+Privacy: Disable wallet transaction broadcast\n+----------------------------------------------\n+\n+This release adds an option `-walletbroadcast=0` to prevent automatic\n+transaction broadcast and rebroadcast (#5951). This option allows separating\n+transaction submission from the node functionality.\n+\n+Making use of this, third-party scripts can be written to take care of\n+transaction (re)broadcast:\n+\n+- Send the transaction as normal, either through RPC or the GUI\n+- Retrieve the transaction data through RPC using `gettransaction` (NOT\n+  `getrawtransaction`). The `hex` field of the result will contain the raw\n+  hexadecimal representation of the transaction\n+- The transaction can then be broadcasted through arbitrary mechanisms\n+  supported by the script\n+\n+One such application is selective Tor usage, where the node runs on the normal\n+internet but transactions are broadcasted over Tor.\n+\n+For an example script see [bitcoin-submittx](https://github.com/laanwj/bitcoin-submittx).\n+\n+Privacy: Stream isolation for Tor\n+----------------------------------\n+\n+This release adds functionality to create a new circuit for every peer\n+connection, when the software is used with Tor. The new option,\n+`-proxyrandomize`, is on by default.\n+\n+When enabled, every outgoing connection will (potentially) go through a\n+different exit node. That significantly reduces the chance to get unlucky and\n+pick a single exit node that is either malicious, or widely banned from the P2P\n+network. This improves connection reliability as well as privacy, especially\n+for the initial connections.\n+\n+**Important note:** If a non-Tor SOCKS5 proxy is configured that supports\n+authentication, but doesn't require it, this change may cause that proxy to reject\n+connections. A user and password is sent where they weren't before. This setup\n+is exceedingly rare, but in this case `-proxyrandomize=0` can be passed to\n+disable the behavior.\n+\n+0.11.0 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n+### RPC and REST\n+- #5461 `5f7279a` signrawtransaction: validate private key\n+- #5444 `103f66b` Add /rest/headers/<count>/<hash>.<ext>\n+- #4964 `95ecc0a` Add scriptPubKey field to validateaddress RPC call\n+- #5476 `c986972` Add time offset into getpeerinfo output\n+- #5540 `84eba47` Add unconfirmed and immature balances to getwalletinfo\n+- #5599 `40e96a3` Get rid of the internal miner's hashmeter\n+- #5711 `87ecfb0` Push down RPC locks\n+- #5754 `1c4e3f9` fix getblocktemplate lock issue\n+- #5756 `5d901d8` Fix getblocktemplate_proposals test by mining one block\n+- #5548 `d48ce48` Add /rest/chaininfos\n+- #5992 `4c4f1b4` Push down RPC reqWallet flag\n+- #6036 `585b5db` Show zero value txouts in listunspent\n+- #5199 `6364408` Add RPC call `gettxoutproof` to generate and verify merkle blocks\n+- #5418 `16341cc` Report missing inputs in sendrawtransaction\n+- #5937 `40f5e8d` show script verification errors in signrawtransaction result\n+- #5420 `1fd2d39` getutxos REST command (based on Bip64)\n+- #6193 `42746b0` [REST] remove json input for getutxos, limit to query max. 15 outpoints\n+- #6226 `5901596` json: fail read_string if string contains trailing garbage\n+\n+### Configuration and command-line options\n+- #5636 `a353ad4` Add option `-allowselfsignedrootcertificate` to allow self signed root certs (for testing payment requests)\n+- #5900 `3e8a1f2` Add a consistency check `-checkblockindex` for the block chain data structures\n+- #5951 `7efc9cf` Make it possible to disable wallet transaction broadcast (using `-walletbroadcast=0`)\n+- #5911 `b6ea3bc` privacy: Stream isolation for Tor (on by default, use `-proxyrandomize=0` to disable)\n+- #5863 `c271304` Add autoprune functionality (`-prune=<size>`)\n+- #6153 `0bcf04f` Parameter interaction: disable upnp if -proxy set\n+- #6274 `4d9c7fe` Add option `-alerts` to opt out of alert system\n+\n+### Block and transaction handling\n+- #5367 `dcc1304` Do all block index writes in a batch\n+- #5253 `203632d` Check against MANDATORY flags prior to accepting to mempool\n+- #5459 `4406c3e` Reject headers that build on an invalid parent\n+- #5481 `055f3ae` Apply AreSane() checks to the fees from the network\n+- #5580 `40d65eb` Preemptively catch a few potential bugs\n+- #5349 `f55c5e9` Implement test for merkle tree malleability in CPartialMerkleTree\n+- #5564 `a89b837` clarify obscure uses of EvalScript()\n+- #5521 `8e4578a` Reject non-final txs even in testnet/regtest\n+- #5707 `6af674e` Change hardcoded character constants to descriptive named constants for db keys\n+- #5286 `fcf646c` Change the default maximum OP_RETURN size to 80 bytes\n+- #5710 `175d86e` Add more information to errors in ReadBlockFromDisk\n+- #5948 `b36f1ce` Use GetAncestor to compute new target\n+- #5959 `a0bfc69` Add additional block index consistency checks\n+- #6058 `7e0e7f8` autoprune minor post-merge improvements\n+- #5159 `2cc1372` New fee estimation code\n+- #6102 `6fb90d8` Implement accurate UTXO cache size accounting\n+- #6129 `2a82298` Bug fix for clearing fCheckForPruning\n+- #5947 `e9af4e6` Alert if it is very likely we are getting a bad chain\n+- #6203 `c00ae64` Remove P2SH coinbase flag, no longer interesting\n+- #5985 `37b4e42` Fix removing of orphan transactions\n+- #6221 `6cb70ca` Prune: Support noncontiguous block files\n+- #6256 `fce474c` Use best header chain timestamps to detect partitioning\n+- #6233 `a587606` Advance pindexLastCommonBlock for blocks in chainActive\n+\n+### P2P protocol and network code\n+- #5507 `844ace9` Prevent DOS attacks on in-flight data structures\n+- #5770 `32a8b6a` Sanitize command strings before logging them\n+- #5859 `dd4ffce` Add correct bool combiner for net signals\n+- #5876 `8e4fd0c` Add a NODE_GETUTXO service bit and document NODE_NETWORK\n+- #6028 `b9311fb` Move nLastTry from CAddress to CAddrInfo\n+- #5662 `5048465` Change download logic to allow calling getdata on inbound peers\n+- #5971 `18d2832` replace absolute sleep with conditional wait\n+- #5918 `7bf5d5e` Use equivalent PoW for non-main-chain requests\n+- #6059 `f026ab6` chainparams: use SeedSpec6's rather than CAddress's for fixed seeds\n+- #6080 `31c0bf1` Add jonasschnellis dns seeder\n+- #5976 `9f7809f` Reduce download timeouts as blocks arrive\n+- #6172 `b4bbad1` Ignore getheaders requests when not synced\n+- #5875 `304892f` Be stricter in processing unrequested blocks\n+- #6333 `41bbc85` Hardcoded seeds update June 2015\n+\n+### Validation\n+- #5143 `48e1765` Implement BIP62 rule 6\n+- #5713 `41e6e4c` Implement BIP66\n+\n+### Build system\n+- #5501 `c76c9d2` Add mips, mipsel and aarch64 to depends platforms\n+- #5334 `cf87536` libbitcoinconsensus: Add pkg-config support\n+- #5514 `ed11d53` Fix 'make distcheck'\n+- #5505 `a99ef7d` Build winshutdownmonitor.cpp on Windows only\n+- #5582 `e8a6639` Osx toolchain update\n+- #5684 `ab64022` osx: bump build sdk to 10.9\n+- #5695 `23ef5b7` depends: latest config.guess and config.sub\n+- #5509 `31dedb4` Fixes when compiling in c++11 mode\n+- #5819 `f8e68f7` release: use static libstdc++ and disable reduced exports by default\n+- #5510 `7c3fbc3` Big endian support\n+- #5149 `c7abfa5` Add script to verify all merge commits are signed\n+- #6082 `7abbb7e` qt: disable qt tests when one of the checks for the gui fails\n+- #6244 `0401aa2` configure: Detect (and reject) LibreSSL\n+- #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures\n+- #6285 `ef1d506` Fix scheduler build with some boost versions.\n+- #6280 `25c2216` depends: fix Boost 1.55 build on GCC 5\n+- #6303 `b711599` gitian: add a gitian-win-signer descriptor\n+- #6246 `8ea6d37` Fix build on FreeBSD\n+- #6282 `daf956b` fix crash on shutdown when e.g. changing -txindex and abort action\n+- #6354 `bdf0d94` Gitian windows signing normalization\n+\n+### Wallet\n+- #2340 `811c71d` Discourage fee sniping with nLockTime\n+- #5485 `d01bcc4` Enforce minRelayTxFee on wallet created tx and add a maxtxfee option\n+- #5508 `9a5cabf` Add RandAddSeedPerfmon to MakeNewKey\n+- #4805 `8204e19` Do not flush the wallet in AddToWalletIfInvolvingMe(..)\n+- #5319 `93b7544` Clean up wallet encryption code\n+- #5831 `df5c246` Subtract fee from amount\n+- #6076 `6c97fd1` wallet: fix boost::get usage with boost 1.58\n+- #5511 `23c998d` Sort pending wallet transactions before reaccepting\n+- #6126 `26e08a1` Change default nTxConfirmTarget to 2\n+- #6183 `75a4d51` Fix off-by-one error w/ nLockTime in the wallet\n+- #6276 `c9fd907` Fix getbalance * 0\n+\n+### GUI\n+- #5219 `f3af0c8` New icons\n+- #5228 `bb3c75b` HiDPI (retina) support for splash screen\n+- #5258 `73cbf0a` The RPC Console should be a QWidget to make window more independent\n+- #5488 `851dfc7` Light blue icon color for regtest\n+- #5547 `a39aa74` New icon for the debug window\n+- #5493 `e515309` Adopt style colour for button icons\n+- #5557 `70477a0` On close of splashscreen interrupt verifyDB\n+- #5559 `83be8fd` Make the command-line-args dialog better\n+- #5144 `c5380a9` Elaborate on signverify message dialog warning\n+- #5489 `d1aa3c6` Optimize PNG files\n+- #5649 `e0cd2f5` Use text-color icons for system tray Send/Receive menu entries\n+- #5651 `848f55d` Coin Control: Use U+2248 \"ALMOST EQUAL TO\" rather than a simple tilde\n+- #5626 `ab0d798` Fix icon sizes and column width\n+- #5683 `c7b22aa` add new osx dmg background picture\n+- #5620 `7823598` Payment request expiration bug fix\n+- #5729 `9c4a5a5` Allow unit changes for read-only BitcoinAmountField\n+- #5753 `0f44672` Add bitcoin logo to about screen\n+- #5629 `a956586` Prevent amount overflow problem with payment requests\n+- #5830 `215475a` Don't save geometry for options and about/help window\n+- #5793 `d26f0b2` Honor current network when creating autostart link\n+- #5847 `f238add` Startup script for centos, with documentation\n+- #5915 `5bd3a92` Fix a static qt5 crash when using certain versions of libxcb\n+- #5898 `bb56781` Fix rpc console font size to flexible metrics\n+- #5467 `bc8535b` Payment request / server work - part 2\n+- #6161 `180c164` Remove movable option for toolbar\n+- #6160 `0d862c2` Overviewpage: make sure warning icons gets colored\n+\n+### Tests\n+- #5453 `2f2d337` Add ability to run single test manually to RPC tests\n+- #5421 `886eb57` Test unexecuted OP_CODESEPARATOR\n+- #5530 `565b300` Additional rpc tests\n+- #5611 `37b185c` Fix spurious windows test failures after 012598880c\n+- #5613 `2eda47b` Fix smartfees test for change to relay policy\n+- #5612 `e3f5727` Fix zapwallettxes test\n+- #5642 `30a5b5f` Prepare paymentservertests for new unit tests\n+- #5784 `e3a3cd7` Fix usage of NegateSignatureS in script_tests\n+- #5813 `ee9f2bf` Add unit tests for next difficulty calculations\n+- #5855 `d7989c0` Travis: run unit tests in different orders\n+- #5852 `cdae53e` Reinitialize state in between individual unit tests.\n+- #5883 `164d7b6` tests: add a BasicTestingSetup and apply to all tests\n+- #5940 `446bb70` Regression test for ResendWalletTransactions\n+- #6052 `cf7adad` fix and enable bip32 unit test\n+- #6039 `734f80a` tests: Error when setgenerate is used on regtest\n+- #6074 `948beaf` Correct the PUSHDATA4 minimal encoding test in script_invalid.json\n+- #6032 `e08886d` Stop nodes after RPC tests, even with --nocleanup\n+- #6075 `df1609f` Add additional script edge condition tests\n+- #5981 `da38dc6` Python P2P testing \n+- #5958 `9ef00c3` Add multisig rpc tests\n+- #6112 `fec5c0e` Add more script edge condition tests\n+\n+### Miscellaneous\n+- #5457, #5506, #5952, #6047 Update libsecp256k1\n+- #5437 `84857e8` Add missing CAutoFile::IsNull() check in main\n+- #5490 `ec20fd7` Replace uint256/uint160 with opaque blobs where possible\n+- #5654, #5764 Adding jonasschnelli's GPG key\n+- #5477 `5f04d1d` OS X 10.10: LSSharedFileListItemResolve() is deprecated\n+- #5679 `beff11a` Get rid of DetectShutdownThread\n+- #5787 `9bd8c9b` Add fanquake PGP key\n+- #5366 `47a79bb` No longer check osx compatibility in RenameThread\n+- #5689 `07f4386` openssl: abstract out OPENSSL_cleanse\n+- #5708 `8b298ca` Add list of implemented BIPs\n+- #5809 `46bfbe7` Add bitcoin-cli man page\n+- #5839 `86eb461` keys: remove libsecp256k1 verification until it's actually supported\n+- #5749 `d734d87` Help messages correctly formatted (79 chars)\n+- #5884 `7077fe6` BUGFIX: Stack around the variable 'rv' was corrupted\n+- #5849 `41259ca` contrib/init/bitcoind.openrc: Compatibility with previous OpenRC init script variables\n+- #5950 `41113e3` Fix locale fallback and guard tests against invalid locale settings\n+- #5965 `7c6bfb1` Add git-subtree-check.sh script\n+- #6033 `1623f6e` FreeBSD, OpenBSD thread renaming\n+- #6064 `b46e7c2` Several changes to mruset\n+- #6104 `3e2559c` Show an init message while activating best chain\n+- #6125 `351f73e` Clean up parsing of bool command line args\n+- #5964 `b4c219b` Lightweight task scheduler\n+- #6116 `30dc3c1` [OSX] rename Bitcoin-Qt.app to Bitcoin-Core.app\n+- #6168 `b3024f0` contrib/linearize: Support linearization of testnet blocks\n+- #6098 `7708fcd` Update Windows resource files (and add one for bitcoin-tx)\n+- #6159 `e1412d3` Catch errors on datadir lock and pidfile delete\n+- #6186 `182686c` Fix two problems in CSubnet parsing\n+- #6174 `df992b9` doc: add translation strings policy\n+- #6210 `dfdb6dd` build: disable optional use of gmp in internal secp256k1 build\n+- #6264 `94cd705` Remove translation for -help-debug options\n+- #6286 `3902c15` Remove berkeley-db4 workaround in MacOSX build docs\n+- #6319 `3f8fcc9` doc: update mailing list address\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 21E14\n+- Adam Weiss\n+- Alex Morcos\n+- ayeowch\n+- azeteki\n+- Ben Holden-Crowther\n+- bikinibabe\n+- BitcoinPRReadingGroup\n+- Blake Jakopovic\n+- BtcDrak\n+- charlescharles\n+- Chris Arnesen\n+- Ciemon\n+- CohibAA\n+- Corinne Dashjr\n+- Cory Fields\n+- Cozz Lovan\n+- Daira Hopwood\n+- Daniel Kraft\n+- Dave Collins\n+- David A. Harding\n+- dexX7\n+- Earlz\n+- Eric Lombrozo\n+- Eric R. Schulz\n+- Everett Forth\n+- Flavien Charlon\n+- fsb4000\n+- Gavin Andresen\n+- Gregory Maxwell\n+- Heath\n+- Ivan Pustogarov\n+- Jacob Welsh\n+- Jameson Lopp\n+- Jason Lewicki\n+- Jeff Garzik\n+- Jonas Schnelli\n+- Jonathan Brown\n+- Jorge Tim\u00f3n\n+- joshr\n+- jtimon\n+- Julian Yap\n+- Luca Venturini\n+- Luke Dashjr\n+- Manuel Araoz\n+- MarcoFalke\n+- Matt Bogosian\n+- Matt Corallo\n+- Micha\n+- Michael Ford\n+- Mike Hearn\n+- mrbandrews\n+- Nicolas Benoit\n+- paveljanik\n+- Pavel Jan\u00edk\n+- Pavel Vasin\n+- Peter Todd\n+- Philip Kaufmann\n+- Pieter Wuille\n+- pstratem\n+- randy-waterhouse\n+- rion\n+- Rob Van Mieghem\n+- Ross Nicoll\n+- Ruben de Vries\n+- sandakersmann\n+- Shaul Kfir\n+- Shawn Wilkinson\n+- sinetek\n+- Suhas Daftuar\n+- svost\n+- Thomas Zander\n+- Tom Harding\n+- UdjinM6\n+- Vitalii Demianets\n+- Wladimir J. van der Laan\n+\n+And all those who contributed additional code review and/or security research:\n+\n+- Sergio Demian Lerner\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+"
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,172 @@\n+Bitcoin Core version 0.11.1 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.11.1/>\n+\n+This is a new minor version release, bringing security fixes. It is recommended\n+to upgrade to this version as soon as possible.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+------------------\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility. There are no\n+known problems when downgrading from 0.11.x to 0.10.x.\n+\n+Notable changes\n+===============\n+\n+Fix buffer overflow in bundled upnp\n+------------------------------------\n+\n+Bundled miniupnpc was updated to 1.9.20151008. This fixes a buffer overflow in\n+the XML parser during initial network discovery.\n+\n+Details can be found here: http://talosintel.com/reports/TALOS-2015-0035/\n+\n+This applies to the distributed executables only, not when building from source or\n+using distribution provided packages.\n+\n+Additionally, upnp has been disabled by default. This may result in a lower\n+number of reachable nodes on IPv4, however this prevents future libupnpc\n+vulnerabilities from being a structural risk to the network\n+(see https://github.com/bitcoin/bitcoin/pull/6795).\n+\n+Test for LowS signatures before relaying\n+-----------------------------------------\n+\n+Make the node require the canonical 'low-s' encoding for ECDSA signatures when\n+relaying or mining.  This removes a nuisance malleability vector.\n+\n+Consensus behavior is unchanged.\n+\n+If widely deployed this change would eliminate the last remaining known vector\n+for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n+it will block most transactions made by sufficiently out of date software.\n+\n+Unlike the other avenues to change txids on transactions this\n+one was randomly violated by all deployed bitcoin software prior to\n+its discovery. So, while other malleability vectors where made\n+non-standard as soon as they were discovered, this one has remained\n+permitted. Even BIP62 did not propose applying this rule to\n+old version transactions, but conforming implementations have become\n+much more common since BIP62 was initially written.\n+\n+Bitcoin Core has produced compatible signatures since a28fb70e in\n+September 2013, but this didn't make it into a release until 0.9\n+in March 2014; Bitcoinj has done so for a similar span of time.\n+Bitcoinjs and electrum have been more recently updated.\n+\n+This does not replace the need for BIP62 or similar, as miners can\n+still cooperate to break transactions.  Nor does it replace the\n+need for wallet software to handle malleability sanely[1]. This\n+only eliminates the cheap and irritating DOS attack.\n+\n+[1] On the Malleability of Bitcoin Transactions\n+Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n+http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n+\n+Minimum relay fee default increase\n+-----------------------------------\n+\n+The default for the `-minrelaytxfee` setting has been increased from `0.00001`\n+to `0.00005`.\n+\n+This is necessitated by the current transaction flooding, causing\n+outrageous memory usage on nodes due to the mempool ballooning. This is a\n+temporary measure, bridging the time until a dynamic method for determining\n+this fee is merged (which will be in 0.12).\n+\n+(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11\n+release notes, in which this value was suggested)\n+\n+0.11.1 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n+- #6438 `2531438` openssl: avoid config file load/race\n+- #6439 `980f820` Updated URL location of netinstall for Debian\n+- #6384 `8e5a969` qt: Force TLS1.0+ for SSL connections\n+- #6471 `92401c2` Depends: bump to qt 5.5\n+- #6224 `93b606a` Be even stricter in processing unrequested blocks\n+- #6571 `100ac4e` libbitcoinconsensus: avoid a crash in multi-threaded environments\n+- #6545 `649f5d9` Do not store more than 200 timedata samples.\n+- #6694 `834e299` [QT] fix thin space word wrap line break issue\n+- #6703 `1cd7952` Backport bugfixes to 0.11\n+- #6750 `5ed8d0b` Recent rejects backport to v0.11\n+- #6769 `71cc9d9` Test LowS in standardness, removes nuisance malleability vector.\n+- #6789 `b4ad73f` Update miniupnpc to 1.9.20151008\n+- #6785 `b4dc33e` Backport to v0.11: In (strCommand == \"tx\"), return if AlreadyHave()\n+- #6412 `0095b9a` Test whether created sockets are select()able\n+- #6795 `4dbcec0` net: Disable upnp by default\n+- #6793 `e7bcc4a` Bump minrelaytxfee default\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Adam Weiss\n+- Alex Morcos\n+- Casey Rodarmor\n+- Cory Fields\n+- fanquake\n+- Gregory Maxwell\n+- Jonas Schnelli\n+- J Ross Nicoll\n+- Luke Dashjr\n+- Pavel Jan\u00edk\n+- Pavel Vasin\n+- Peter Todd\n+- Pieter Wuille\n+- randy-waterhouse\n+- Ross Nicoll\n+- Suhas Daftuar\n+- tailsjoin\n+- \u0e3ftcDrak\n+- Tom Harding\n+- Veres Lajos\n+- Wladimir J. van der Laan\n+\n+And those who contributed additional code review and/or security research:\n+\n+- timothy on IRC for reporting the issue\n+- Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+"
      },
      {
        "sha": "2351b80656542c3eee9b27c1f3fae5d3a46179d3",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "added",
        "additions": 217,
        "deletions": 0,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,217 @@\n+Bitcoin Core version 0.11.2 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.11.2/>\n+\n+This is a new minor version release, bringing bug fixes, the BIP65\n+(CLTV) consensus change, and relay policy preparation for BIP113. It is\n+recommended to upgrade to this version as soon as possible.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+------------------\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility. There are no\n+known problems when downgrading from 0.11.x to 0.10.x.\n+\n+Notable changes since 0.11.1\n+============================\n+\n+BIP65 soft fork to enforce OP_CHECKLOCKTIMEVERIFY opcode\n+--------------------------------------------------------\n+\n+This release includes several changes related to the [BIP65][] soft fork\n+which redefines the existing OP_NOP2 opcode as OP_CHECKLOCKTIMEVERIFY\n+(CLTV) so that a transaction output can be made unspendable until a\n+specified point in the future.\n+\n+1. This release will only relay and mine transactions spending a CLTV\n+   output if they comply with the BIP65 rules as provided in code.\n+\n+2. This release will produce version 4 blocks by default. Please see the\n+   *notice to miners* below.\n+\n+3. Once 951 out of a sequence of 1,001 blocks on the local node's best block\n+   chain contain version 4 (or higher) blocks, this release will no\n+   longer accept new version 3 blocks and it will only accept version 4\n+   blocks if they comply with the BIP65 rules for CLTV.\n+\n+For more information about the soft-forking change, please see\n+<https://github.com/bitcoin/bitcoin/pull/6351>\n+\n+Graphs showing the progress towards block version 4 adoption may be\n+found at the URLs below:\n+\n+- Block versions over the last 50,000 blocks as progress towards BIP65\n+  consensus enforcement: <http://bitcoin.sipa.be/ver-50k.png>\n+\n+- Block versions over the last 2,000 blocks showing the days to the\n+  earliest possible BIP65 consensus-enforced block: <http://bitcoin.sipa.be/ver-2k.png>\n+\n+**Notice to miners:** Bitcoin Core\u2019s block templates are now for\n+version 4 blocks only, and any mining software relying on its\n+getblocktemplate must be updated in parallel to use libblkmaker either\n+version 0.4.3 or any version from 0.5.2 onward.\n+\n+- If you are solo mining, this will affect you the moment you upgrade\n+  Bitcoin Core, which must be done prior to BIP65 achieving its 951/1001\n+  status.\n+\n+- If you are mining with the stratum mining protocol: this does not\n+  affect you.\n+\n+- If you are mining with the getblocktemplate protocol to a pool: this\n+  will affect you at the pool operator\u2019s discretion, which must be no\n+  later than BIP65 achieving its 951/1001 status.\n+\n+[BIP65]: https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki\n+\n+BIP113 mempool-only locktime enforcement using GetMedianTimePast()\n+----------------------------------------------------------------\n+\n+Bitcoin transactions currently may specify a locktime indicating when\n+they may be added to a valid block.  Current consensus rules require\n+that blocks have a block header time greater than the locktime specified\n+in any transaction in that block.\n+\n+Miners get to choose what time they use for their header time, with the\n+consensus rule being that no node will accept a block whose time is more\n+than two hours in the future.  This creates a incentive for miners to\n+set their header times to future values in order to include locktimed\n+transactions which weren't supposed to be included for up to two more\n+hours.\n+\n+The consensus rules also specify that valid blocks may have a header\n+time greater than that of the median of the 11 previous blocks.  This\n+GetMedianTimePast() time has a key feature we generally associate with\n+time: it can't go backwards.\n+\n+[BIP113][] specifies a soft fork (**not enforced in this release**) that\n+weakens this perverse incentive for individual miners to use a future\n+time by requiring that valid blocks have a computed GetMedianTimePast()\n+greater than the locktime specified in any transaction in that block.\n+\n+Mempool inclusion rules currently require transactions to be valid for\n+immediate inclusion in a block in order to be accepted into the mempool.\n+This release begins applying the BIP113 rule to received transactions,\n+so transaction whose time is greater than the GetMedianTimePast() will\n+no longer be accepted into the mempool.\n+\n+**Implication for miners:** you will begin rejecting transactions that\n+would not be valid under BIP113, which will prevent you from producing\n+invalid blocks if/when BIP113 is enforced on the network. Any\n+transactions which are valid under the current rules but not yet valid\n+under the BIP113 rules will either be mined by other miners or delayed\n+until they are valid under BIP113. Note, however, that time-based\n+locktime transactions are more or less unseen on the network currently.\n+\n+**Implication for users:** GetMedianTimePast() always trails behind the\n+current time, so a transaction locktime set to the present time will be\n+rejected by nodes running this release until the median time moves\n+forward. To compensate, subtract one hour (3,600 seconds) from your\n+locktimes to allow those transactions to be included in mempools at\n+approximately the expected time.\n+\n+[BIP113]: https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki\n+\n+Windows bug fix for corrupted UTXO database on unclean shutdowns\n+----------------------------------------------------------------\n+\n+Several Windows users reported that they often need to reindex the\n+entire blockchain after an unclean shutdown of Bitcoin Core on Windows\n+(or an unclean shutdown of Windows itself). Although unclean shutdowns\n+remain unsafe, this release no longer relies on memory-mapped files for\n+the UTXO database, which significantly reduced the frequency of unclean\n+shutdowns leading to required reindexes during testing.\n+\n+For more information, see: <https://github.com/bitcoin/bitcoin/pull/6917>\n+\n+Other fixes for database corruption on Windows are expected in the\n+next major release.\n+\n+0.11.2 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n+- #6124 `684636b` Make CScriptNum() take nMaxNumSize as an argument\n+- #6124 `4fa7a04` Replace NOP2 with CHECKLOCKTIMEVERIFY (BIP65)\n+- #6124 `6ea5ca4` Enable CHECKLOCKTIMEVERIFY as a standard script verify flag\n+- #6351 `5e82e1c` Add CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic\n+- #6353 `ba1da90` Show softfork status in getblockchaininfo\n+- #6351 `6af25b0` Add BIP65 to getblockchaininfo softforks list\n+- #6688 `01878c9` Fix locking in GetTransaction\n+- #6653 `b3eaa30` [Qt] Raise debug window when requested\n+- #6600 `1e672ae` Debian/Ubuntu: Include bitcoin-tx binary\n+- #6600 `2394f4d` Debian/Ubuntu: Split bitcoin-tx into its own package\n+- #5987 `33d6825` Bugfix: Allow mining on top of old tip blocks for testnet\n+- #6852 `21e58b8` build: make sure OpenSSL heeds noexecstack\n+- #6846 `af6edac` alias `-h` for `--help`\n+- #6867 `95a5039` Set TCP_NODELAY on P2P sockets.\n+- #6856 `dfe55bd` Do not allow blockfile pruning during reindex.\n+- #6566 `a1d3c6f` Add rules--presently disabled--for using GetMedianTimePast as end point for lock-time calculations\n+- #6566 `f720c5f` Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints\n+- #6917 `0af5b8e` leveldb: Win32WritableFile without memory mapping\n+- #6948 `4e895b0` Always flush block and undo when switching to new file\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Alex Morcos\n+- \u0e3ftcDrak\n+- Chris Kleeschulte\n+- Daniel Cousens\n+- Diego Viola\n+- Eric Lombrozo\n+- Esteban Ordano\n+- Gregory Maxwell\n+- Luke Dashjr\n+- Marco Falke\n+- Mark Friedenbach\n+- Matt Corallo\n+- Micha\n+- Mitchell Cash\n+- Peter Todd\n+- Pieter Wuille\n+- Wladimir J. van der Laan\n+- Zak Wilcox\n+\n+And those who contributed additional code review and/or security research.\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "cf74a1797520713b405da0ac47e54fb978e344da",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "added",
        "additions": 894,
        "deletions": 0,
        "changes": 894,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,894 @@\n+Bitcoin Core version 0.12.0 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.12.0/>\n+\n+This is a new major version release, bringing new features and other improvements.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+-----------------\n+\n+### Downgrade to a version < 0.10.0\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility.\n+\n+### Downgrade to a version < 0.12.0\n+\n+Because release 0.12.0 and later will obfuscate the chainstate on every\n+fresh sync or reindex, the chainstate is not backwards-compatible with\n+pre-0.12 versions of Bitcoin Core or other software.\n+\n+If you want to downgrade after you have done a reindex with 0.12.0 or later,\n+you will need to reindex when you first start Bitcoin Core version 0.11 or\n+earlier.\n+\n+Notable changes\n+===============\n+\n+Signature validation using libsecp256k1\n+---------------------------------------\n+\n+ECDSA signatures inside Bitcoin transactions now use validation using\n+[libsecp256k1](https://github.com/bitcoin-core/secp256k1) instead of OpenSSL.\n+\n+Depending on the platform, this means a significant speedup for raw signature\n+validation speed. The advantage is largest on x86_64, where validation is over\n+five times faster. In practice, this translates to a raw reindexing and new\n+block validation times that are less than half of what it was before.\n+\n+Libsecp256k1 has undergone very extensive testing and validation.\n+\n+A side effect of this change is that libconsensus no longer depends on OpenSSL.\n+\n+Reduce upload traffic\n+---------------------\n+\n+A major part of the outbound traffic is caused by serving historic blocks to\n+other nodes in initial block download state.\n+\n+It is now possible to reduce the total upload traffic via the `-maxuploadtarget`\n+parameter. This is *not* a hard limit but a threshold to minimize the outbound\n+traffic. When the limit is about to be reached, the uploaded data is cut by not\n+serving historic blocks (blocks older than one week).\n+Moreover, any SPV peer is disconnected when they request a filtered block.\n+\n+This option can be specified in MiB per day and is turned off by default\n+(`-maxuploadtarget=0`).\n+The recommended minimum is 144 * MAX_BLOCK_SIZE (currently 144MB) per day.\n+\n+Whitelisted peers will never be disconnected, although their traffic counts for\n+calculating the target.\n+\n+A more detailed documentation about keeping traffic low can be found in\n+[/doc/reduce-traffic.md](/doc/reduce-traffic.md).\n+\n+Direct headers announcement (BIP 130)\n+-------------------------------------\n+\n+Between compatible peers, [BIP 130]\n+(https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki)\n+direct headers announcement is used. This means that blocks are advertised by\n+announcing their headers directly, instead of just announcing the hash. In a\n+reorganization, all new headers are sent, instead of just the new tip. This\n+can often prevent an extra roundtrip before the actual block is downloaded.\n+\n+Memory pool limiting\n+--------------------\n+\n+Previous versions of Bitcoin Core had their mempool limited by checking\n+a transaction's fees against the node's minimum relay fee. There was no\n+upper bound on the size of the mempool and attackers could send a large\n+number of transactions paying just slighly more than the default minimum\n+relay fee to crash nodes with relatively low RAM. A temporary workaround\n+for previous versions of Bitcoin Core was to raise the default minimum\n+relay fee.\n+\n+Bitcoin Core 0.12 will have a strict maximum size on the mempool. The\n+default value is 300 MB and can be configured with the `-maxmempool`\n+parameter. Whenever a transaction would cause the mempool to exceed\n+its maximum size, the transaction that (along with in-mempool descendants) has\n+the lowest total feerate (as a package) will be evicted and the node's effective\n+minimum relay feerate will be increased to match this feerate plus the initial\n+minimum relay feerate. The initial minimum relay feerate is set to\n+1000 satoshis per kB.\n+\n+Bitcoin Core 0.12 also introduces new default policy limits on the length and\n+size of unconfirmed transaction chains that are allowed in the mempool\n+(generally limiting the length of unconfirmed chains to 25 transactions, with a\n+total size of 101 KB).  These limits can be overriden using command line\n+arguments; see the extended help (`--help -help-debug`) for more information.\n+\n+Opt-in Replace-by-fee transactions\n+----------------------------------\n+\n+It is now possible to replace transactions in the transaction memory pool of\n+Bitcoin Core 0.12 nodes. Bitcoin Core will only allow replacement of\n+transactions which have any of their inputs' `nSequence` number set to less\n+than `0xffffffff - 1`.  Moreover, a replacement transaction may only be\n+accepted when it pays sufficient fee, as described in [BIP 125]\n+(https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki).\n+\n+Transaction replacement can be disabled with a new command line option,\n+`-mempoolreplacement=0`.  Transactions signaling replacement under BIP125 will\n+still be allowed into the mempool in this configuration, but replacements will\n+be rejected.  This option is intended for miners who want to continue the\n+transaction selection behavior of previous releases.\n+\n+The `-mempoolreplacement` option is *not recommended* for wallet users seeking\n+to avoid receipt of unconfirmed opt-in transactions, because this option does\n+not prevent transactions which are replaceable under BIP 125 from being accepted\n+(only subsequent replacements, which other nodes on the network that implement\n+BIP 125 are likely to relay and mine).  Wallet users wishing to detect whether\n+a transaction is subject to replacement under BIP 125 should instead use the\n+updated RPC calls `gettransaction` and `listtransactions`, which now have an\n+additional field in the output indicating if a transaction is replaceable under\n+BIP125 (\"bip125-replaceable\").\n+\n+Note that the wallet in Bitcoin Core 0.12 does not yet have support for\n+creating transactions that would be replaceable under BIP 125.\n+\n+\n+RPC: Random-cookie RPC authentication\n+-------------------------------------\n+\n+When no `-rpcpassword` is specified, the daemon now uses a special 'cookie'\n+file for authentication. This file is generated with random content when the\n+daemon starts, and deleted when it exits. Its contents are used as\n+authentication token. Read access to this file controls who can access through\n+RPC. By default it is stored in the data directory but its location can be\n+overridden with the option `-rpccookiefile`.\n+\n+This is similar to Tor's CookieAuthentication: see\n+https://www.torproject.org/docs/tor-manual.html.en\n+\n+This allows running bitcoind without having to do any manual configuration.\n+\n+Relay: Any sequence of pushdatas in OP_RETURN outputs now allowed\n+-----------------------------------------------------------------\n+\n+Previously OP_RETURN outputs with a payload were only relayed and mined if they\n+had a single pushdata. This restriction has been lifted to allow any\n+combination of data pushes and numeric constant opcodes (OP_1 to OP_16) after\n+the OP_RETURN. The limit on OP_RETURN output size is now applied to the entire\n+serialized scriptPubKey, 83 bytes by default. (the previous 80 byte default plus\n+three bytes overhead)\n+\n+Relay: New and only new blocks relayed when pruning\n+---------------------------------------------------\n+\n+When running in pruned mode, the client will now relay new blocks. When\n+responding to the `getblocks` message, only hashes of blocks that are on disk\n+and are likely to remain there for some reasonable time window (1 hour) will be\n+returned (previously all relevant hashes were returned).\n+\n+Relay and Mining: Priority transactions\n+---------------------------------------\n+\n+Bitcoin Core has a heuristic 'priority' based on coin value and age. This\n+calculation is used for relaying of transactions which do not pay the\n+minimum relay fee, and can be used as an alternative way of sorting\n+transactions for mined blocks. Bitcoin Core will relay transactions with\n+insufficient fees depending on the setting of `-limitfreerelay=<r>` (default:\n+`r=15` kB per minute) and `-blockprioritysize=<s>`.\n+\n+In Bitcoin Core 0.12, when mempool limit has been reached a higher minimum\n+relay fee takes effect to limit memory usage. Transactions which do not meet\n+this higher effective minimum relay fee will not be relayed or mined even if\n+they rank highly according to the priority heuristic.\n+\n+The mining of transactions based on their priority is also now disabled by\n+default. To re-enable it, simply set `-blockprioritysize=<n>` where is the size\n+in bytes of your blocks to reserve for these transactions. The old default was\n+50k, so to retain approximately the same policy, you would set\n+`-blockprioritysize=50000`.\n+\n+Additionally, as a result of computational simplifications, the priority value\n+used for transactions received with unconfirmed inputs is lower than in prior\n+versions due to avoiding recomputing the amounts as input transactions confirm.\n+\n+External miner policy set via the `prioritisetransaction` RPC to rank\n+transactions already in the mempool continues to work as it has previously.\n+Note, however, that if mining priority transactions is left disabled, the\n+priority delta will be ignored and only the fee metric will be effective.\n+\n+This internal automatic prioritization handling is being considered for removal\n+entirely in Bitcoin Core 0.13, and it is at this time undecided whether the\n+more accurate priority calculation for chained unconfirmed transactions will be\n+restored. Community direction on this topic is particularly requested to help\n+set project priorities.\n+\n+Automatically use Tor hidden services\n+-------------------------------------\n+\n+Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n+API, to create and destroy 'ephemeral' hidden services programmatically.\n+Bitcoin Core has been updated to make use of this.\n+\n+This means that if Tor is running (and proper authorization is available),\n+Bitcoin Core automatically creates a hidden service to listen on, without\n+manual configuration. Bitcoin Core will also use Tor automatically to connect\n+to other .onion nodes if the control socket can be successfully opened. This\n+will positively affect the number of available .onion nodes and their usage.\n+\n+This new feature is enabled by default if Bitcoin Core is listening, and\n+a connection to Tor can be made. It can be configured with the `-listenonion`,\n+`-torcontrol` and `-torpassword` settings. To show verbose debugging\n+information, pass `-debug=tor`.\n+\n+Notifications through ZMQ\n+-------------------------\n+\n+Bitcoind can now (optionally) asynchronously notify clients through a\n+ZMQ-based PUB socket of the arrival of new transactions and blocks.\n+This feature requires installation of the ZMQ C API library 4.x and\n+configuring its use through the command line or configuration file.\n+Please see [docs/zmq.md](/doc/zmq.md) for details of operation.\n+\n+Wallet: Transaction fees\n+------------------------\n+\n+Various improvements have been made to how the wallet calculates\n+transaction fees.\n+\n+Users can decide to pay a predefined fee rate by setting `-paytxfee=<n>`\n+(or `settxfee <n>` rpc during runtime). A value of `n=0` signals Bitcoin\n+Core to use floating fees. By default, Bitcoin Core will use floating\n+fees.\n+\n+Based on past transaction data, floating fees approximate the fees\n+required to get into the `m`th block from now. This is configurable\n+with `-txconfirmtarget=<m>` (default: `2`).\n+\n+Sometimes, it is not possible to give good estimates, or an estimate\n+at all. Therefore, a fallback value can be set with `-fallbackfee=<f>`\n+(default: `0.0002` BTC/kB).\n+\n+At all times, Bitcoin Core will cap fees at `-maxtxfee=<x>` (default:\n+0.10) BTC.\n+Furthermore, Bitcoin Core will never create transactions paying less than\n+the current minimum relay fee.\n+Finally, a user can set the minimum fee rate for all transactions with\n+`-mintxfee=<i>`, which defaults to 1000 satoshis per kB.\n+\n+Wallet: Negative confirmations and conflict detection\n+-----------------------------------------------------\n+\n+The wallet will now report a negative number for confirmations that indicates\n+how deep in the block chain the conflict is found. For example, if a transaction\n+A has 5 confirmations and spends the same input as a wallet transaction B, B\n+will be reported as having -5 confirmations. If another wallet transaction C\n+spends an output from B, it will also be reported as having -5 confirmations.\n+To detect conflicts with historical transactions in the chain a one-time\n+`-rescan` may be needed.\n+\n+Unlike earlier versions, unconfirmed but non-conflicting transactions will never\n+get a negative confirmation count. They are not treated as spendable unless\n+they're coming from ourself (change) and accepted into our local mempool,\n+however. The new \"trusted\" field in the `listtransactions` RPC output\n+indicates whether outputs of an unconfirmed transaction are considered\n+spendable.\n+\n+Wallet: Merkle branches removed\n+-------------------------------\n+\n+Previously, every wallet transaction stored a Merkle branch to prove its\n+presence in blocks. This wasn't being used for more than an expensive\n+sanity check. Since 0.12, these are no longer stored. When loading a\n+0.12 wallet into an older version, it will automatically rescan to avoid\n+failed checks.\n+\n+Wallet: Pruning\n+---------------\n+\n+With 0.12 it is possible to use wallet functionality in pruned mode.\n+This can reduce the disk usage from currently around 60 GB to\n+around 2 GB.\n+\n+However, rescans as well as the RPCs `importwallet`, `importaddress`,\n+`importprivkey` are disabled.\n+\n+To enable block pruning set `prune=<N>` on the command line or in\n+`bitcoin.conf`, where `N` is the number of MiB to allot for\n+raw block & undo data.\n+\n+A value of 0 disables pruning. The minimal value above 0 is 550. Your\n+wallet is as secure with high values as it is with low ones. Higher\n+values merely ensure that your node will not shut down upon blockchain\n+reorganizations of more than 2 days - which are unlikely to happen in\n+practice. In future releases, a higher value may also help the network\n+as a whole: stored blocks could be served to other nodes.\n+\n+For further information about pruning, you may also consult the [release\n+notes of v0.11.0](https://github.com/bitcoin/bitcoin/blob/v0.11.0/doc/release-notes.md#block-file-pruning).\n+\n+`NODE_BLOOM` service bit\n+------------------------\n+\n+Support for the `NODE_BLOOM` service bit, as described in [BIP\n+111](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki), has been\n+added to the P2P protocol code.\n+\n+BIP 111 defines a service bit to allow peers to advertise that they support\n+bloom filters (such as used by SPV clients) explicitly. It also bumps the protocol\n+version to allow peers to identify old nodes which allow bloom filtering of the\n+connection despite lacking the new service bit.\n+\n+In this version, it is only enforced for peers that send protocol versions\n+`>=70011`. For the next major version it is planned that this restriction will be\n+removed. It is recommended to update SPV clients to check for the `NODE_BLOOM`\n+service bit for nodes that report versions newer than 70011.\n+\n+Option parsing behavior\n+-----------------------\n+\n+Command line options are now parsed strictly in the order in which they are\n+specified. It used to be the case that `-X -noX` ends up, unintuitively, with X\n+set, as `-X` had precedence over `-noX`. This is no longer the case. Like for\n+other software, the last specified value for an option will hold.\n+\n+RPC: Low-level API changes\n+--------------------------\n+\n+- Monetary amounts can be provided as strings. This means that for example the\n+  argument to sendtoaddress can be \"0.0001\" instead of 0.0001. This can be an\n+  advantage if a JSON library insists on using a lossy floating point type for\n+  numbers, which would be dangerous for monetary amounts.\n+\n+* The `asm` property of each scriptSig now contains the decoded signature hash\n+  type for each signature that provides a valid defined hash type.\n+\n+* OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP 65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki)\n+\n+The following items contain assembly representations of scriptSig signatures\n+and are affected by this change:\n+\n+- RPC `getrawtransaction`\n+- RPC `decoderawtransaction`\n+- RPC `decodescript`\n+- REST `/rest/tx/` (JSON format)\n+- REST `/rest/block/` (JSON format when including extended tx details)\n+- `bitcoin-tx -json`\n+\n+For example, the `scriptSig.asm` property of a transaction input that\n+previously showed an assembly representation of:\n+\n+    304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c509001 400000 OP_NOP2\n+\n+now shows as:\n+\n+    304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c5090[ALL] 400000 OP_CHECKLOCKTIMEVERIFY\n+\n+Note that the output of the RPC `decodescript` did not change because it is\n+configured specifically to process scriptPubKey and not scriptSig scripts.\n+\n+RPC: SSL support dropped\n+------------------------\n+\n+SSL support for RPC, previously enabled by the option `rpcssl` has been dropped\n+from both the client and the server. This was done in preparation for removing\n+the dependency on OpenSSL for the daemon completely.\n+\n+Trying to use `rpcssl` will result in an error:\n+\n+    Error: SSL mode for RPC (-rpcssl) is no longer supported.\n+\n+If you are one of the few people that relies on this feature, a flexible\n+migration path is to use `stunnel`. This is an utility that can tunnel\n+arbitrary TCP connections inside SSL. On e.g. Ubuntu it can be installed with:\n+\n+    sudo apt-get install stunnel4\n+\n+Then, to tunnel a SSL connection on 28332 to a RPC server bound on localhost on port 18332 do:\n+\n+    stunnel -d 28332 -r 127.0.0.1:18332 -p stunnel.pem -P ''\n+\n+It can also be set up system-wide in inetd style.\n+\n+Another way to re-attain SSL would be to setup a httpd reverse proxy. This solution\n+would allow the use of different authentication, loadbalancing, on-the-fly compression and\n+caching. A sample config for apache2 could look like:\n+\n+    Listen 443\n+\n+    NameVirtualHost *:443\n+    <VirtualHost *:443>\n+\n+    SSLEngine On\n+    SSLCertificateFile /etc/apache2/ssl/server.crt\n+    SSLCertificateKeyFile /etc/apache2/ssl/server.key\n+\n+    <Location /bitcoinrpc>\n+        ProxyPass http://127.0.0.1:8332/\n+        ProxyPassReverse http://127.0.0.1:8332/\n+        # optional enable digest auth\n+        # AuthType Digest\n+        # ...\n+\n+        # optional bypass bitcoind rpc basic auth\n+        # RequestHeader set Authorization \"Basic <hash>\"\n+        # get the <hash> from the shell with: base64 <<< bitcoinrpc:<password>\n+    </Location>\n+\n+    # Or, balance the load:\n+    # ProxyPass / balancer://balancer_cluster_name\n+\n+    </VirtualHost>\n+\n+Mining Code Changes\n+-------------------\n+\n+The mining code in 0.12 has been optimized to be significantly faster and use less\n+memory. As part of these changes, consensus critical calculations are cached on a\n+transaction's acceptance into the mempool and the mining code now relies on the\n+consistency of the mempool to assemble blocks. However all blocks are still tested\n+for validity after assembly.\n+\n+Other P2P Changes\n+-----------------\n+\n+The list of banned peers is now stored on disk rather than in memory.\n+Restarting bitcoind will no longer clear out the list of banned peers; instead\n+a new RPC call (`clearbanned`) can be used to manually clear the list.  The new\n+`setban` RPC call can also be used to manually ban or unban a peer.\n+\n+0.12.0 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n+### RPC and REST\n+\n+- #6121 `466f0ea` Convert entire source tree from json_spirit to UniValue (Jonas Schnelli)\n+- #6234 `d38cd47` fix rpcmining/getblocktemplate univalue transition logic error (Jonas Schnelli)\n+- #6239 `643114f` Don't go through double in AmountFromValue and ValueFromAmount (Wladimir J. van der Laan)\n+- #6266 `ebab5d3` Fix univalue handling of \\u0000 characters. (Daniel Kraft)\n+- #6276 `f3d4dbb` Fix getbalance * 0 (Tom Harding)\n+- #6257 `5ebe7db` Add `paytxfee` and `errors` JSON fields where appropriate (Stephen)\n+- #6271 `754aae5` New RPC command disconnectnode (Alex van der Peet)\n+- #6158 `0abfa8a` Add setban/listbanned RPC commands (Jonas Schnelli)\n+- #6307 `7ecdcd9` rpcban fixes (Jonas Schnelli)\n+- #6290 `5753988` rpc: make `gettxoutsettinfo` run lock-free (Wladimir J. van der Laan)\n+- #6262 `247b914` Return all available information via RPC call \"validateaddress\" (dexX7)\n+- #6339 `c3f0490` UniValue: don't escape solidus, keep espacing of reverse solidus (Jonas Schnelli)\n+- #6353 `6bcb0a2` Show softfork status in getblockchaininfo (Wladimir J. van der Laan)\n+- #6247 `726e286` Add getblockheader RPC call (Peter Todd)\n+- #6362 `d6db115` Fix null id in RPC response during startup (Forrest Voight)\n+- #5486 `943b322` [REST] JSON support for /rest/headers (Jonas Schnelli)\n+- #6379 `c52e8b3` rpc: Accept scientific notation for monetary amounts in JSON (Wladimir J. van der Laan)\n+- #6388 `fd5dfda` rpc: Implement random-cookie based authentication (Wladimir J. van der Laan)\n+- #6457 `3c923e8` Include pruned state in chaininfo.json (Simon Males)\n+- #6456 `bfd807f` rpc: Avoid unnecessary parsing roundtrip in number formatting, fix locale issue (Wladimir J. van der Laan)\n+- #6380 `240b30e` rpc: Accept strings in AmountFromValue (Wladimir J. van der Laan)\n+- #6346 `6bb2805` Add OP_RETURN support in createrawtransaction RPC call, add tests. (paveljanik)\n+- #6013 `6feeec1` [REST] Add memory pool API (paveljanik)\n+- #6576 `da9beb2` Stop parsing JSON after first finished construct. (Daniel Kraft)\n+- #5677 `9aa9099` libevent-based http server (Wladimir J. van der Laan)\n+- #6633 `bbc2b39` Report minimum ping time in getpeerinfo (Matt Corallo)\n+- #6648 `cd381d7` Simplify logic of REST request suffix parsing. (Daniel Kraft)\n+- #6695 `5e21388` libevent http fixes (Wladimir J. van der Laan)\n+- #5264 `48efbdb` show scriptSig signature hash types in transaction decodes. fixes #3166 (mruddy)\n+- #6719 `1a9f19a` Make HTTP server shutdown more graceful (Wladimir J. van der Laan)\n+- #6859 `0fbfc51` http: Restrict maximum size of http + headers (Wladimir J. van der Laan)\n+- #5936 `bf7c195` [RPC] Add optional locktime to createrawtransaction (Tom Harding)\n+- #6877 `26f5b34` rpc: Add maxmempool and effective min fee to getmempoolinfo (Wladimir J. van der Laan)\n+- #6970 `92701b3` Fix crash in validateaddress with -disablewallet (Wladimir J. van der Laan)\n+- #5574 `755b4ba` Expose GUI labels in RPC as comments (Luke-Jr)\n+- #6990 `dbd2c13` http: speed up shutdown (Wladimir J. van der Laan)\n+- #7013 `36baa9f` Remove LOCK(cs_main) from decodescript (Peter Todd)\n+- #6999 `972bf9c` add (max)uploadtarget infos to getnettotals RPC help (Jonas Schnelli)\n+- #7011 `31de241` Add mediantime to getblockchaininfo (Peter Todd)\n+- #7065 `f91e29f` http: add Boost 1.49 compatibility (Wladimir J. van der Laan)\n+- #7087 `be281d8` [Net]Add -enforcenodebloom option (Patrick Strateman)\n+- #7044 `438ee59` RPC: Added additional config option for multiple RPC users. (Gregory Sanders)\n+- #7072 `c143c49` [RPC] Add transaction size to JSON output (Nikita Zhavoronkov)\n+- #7022 `9afbd96` Change default block priority size to 0 (Alex Morcos)\n+- #7141 `c0c08c7` rpc: Don't translate warning messages (Wladimir J. van der Laan)\n+- #7312 `fd4bd50` Add RPC call abandontransaction (Alex Morcos)\n+- #7222 `e25b158` RPC: indicate which transactions are replaceable (Suhas Daftuar)\n+- #7472 `b2f2b85` rpc: Add WWW-Authenticate header to 401 response (Wladimir J. van der Laan)\n+- #7469 `9cb31e6` net.h fix spelling: misbeha{b,v}ing (Matt)\n+\n+### Configuration and command-line options\n+\n+- #6164 `8d05ec7` Allow user to use -debug=1 to enable all debugging (lpescher)\n+- #5288 `4452205` Added `-whiteconnections=<n>` option (Josh Lehan)\n+- #6284 `10ac38e` Fix argument parsing oddity with -noX (Wladimir J. van der Laan)\n+- #6489 `c9c017a` Give a better error message if system clock is bad (Casey Rodarmor)\n+- #6462 `c384800` implement uacomment config parameter which can add comments to user agent as per BIP-0014 (Pavol Rusnak)\n+- #6647 `a3babc8` Sanitize uacomment (MarcoFalke)\n+- #6742 `3b2d37c` Changed logging to make -logtimestamps to work also for -printtoconsole (arnuschky)\n+- #6846 `2cd020d` alias -h for -help (Daniel Cousens)\n+- #6622 `7939164` Introduce -maxuploadtarget (Jonas Schnelli)\n+- #6881 `2b62551` Debug: Add option for microsecond precision in debug.log (Suhas Daftuar)\n+- #6776 `e06c14f` Support -checkmempool=N, which runs checks once every N transactions (Pieter Wuille)\n+- #6896 `d482c0a` Make -checkmempool=1 not fail through int32 overflow (Pieter Wuille)\n+- #6993 `b632145` Add -blocksonly option (Patrick Strateman)\n+- #7323 `a344880` 0.12: Backport -bytespersigop option (Luke-Jr)\n+- #7386 `da83ecd` Add option `-permitrbf` to set transaction replacement policy (Wladimir J. van der Laan)\n+- #7290 `b16b5bc` Add missing options help (MarcoFalke)\n+- #7440 `c76bfff` Rename permitrbf to mempoolreplacement and provide minimal string-list forward compatibility (Luke-Jr)\n+\n+### Block and transaction handling\n+\n+- #6203 `f00b623` Remove P2SH coinbase flag, no longer interesting (Luke-Jr)\n+- #6222 `9c93ee5` Explicitly set tx.nVersion for the genesis block and mining tests (Mark Friedenbach)\n+- #5985 `3a1d3e8` Fix removing of orphan transactions (Alex Morcos)\n+- #6221 `dd8fe82` Prune: Support noncontiguous block files (Adam Weiss)\n+- #6124 `41076aa` Mempool only CHECKLOCKTIMEVERIFY (BIP65) verification, unparameterized version (Peter Todd)\n+- #6329 `d0a10c1` acceptnonstdtxn option to skip (most) \"non-standard transaction\" checks, for testnet/regtest only (Luke-Jr)\n+- #6410 `7cdefb9` Implement accurate memory accounting for mempool (Pieter Wuille)\n+- #6444 `24ce77d` Exempt unspendable transaction outputs from dust checks (dexX7)\n+- #5913 `a0625b8` Add absurdly high fee message to validation state (Shaul Kfir)\n+- #6177 `2f746c6` Prevent block.nTime from decreasing (Mark Friedenbach)\n+- #6377 `e545371` Handle no chain tip available in InvalidChainFound() (Ross Nicoll)\n+- #6551 `39ddaeb` Handle leveldb::DestroyDB() errors on wipe failure (Adam Weiss)\n+- #6654 `b0ce450` Mempool package tracking (Suhas Daftuar)\n+- #6715 `82d2aef` Fix mempool packages (Suhas Daftuar)\n+- #6680 `4f44530` use CBlockIndex instead of uint256 for UpdatedBlockTip signal (Jonas Schnelli)\n+- #6650 `4fac576` Obfuscate chainstate (James O'Beirne)\n+- #6777 `9caaf6e` Unobfuscate chainstate data in CCoinsViewDB::GetStats (James O'Beirne)\n+- #6722 `3b20e23` Limit mempool by throwing away the cheapest txn and setting min relay fee to it (Matt Corallo)\n+- #6889 `38369dd` fix locking issue with new mempool limiting (Jonas Schnelli)\n+- #6464 `8f3b3cd` Always clean up manual transaction prioritization (Casey Rodarmor)\n+- #6865 `d0badb9` Fix chainstate serialized_size computation (Pieter Wuille)\n+- #6566 `ff057f4` BIP-113: Mempool-only median time-past as endpoint for lock-time calculations (Mark Friedenbach)\n+- #6934 `3038eb6` Restores mempool only BIP113 enforcement (Gregory Maxwell)\n+- #6965 `de7d459` Benchmark sanity checks and fork checks in ConnectBlock (Matt Corallo)\n+- #6918 `eb6172a` Make sigcache faster, more efficient, larger (Pieter Wuille)\n+- #6771 `38ed190` Policy: Lower default limits for tx chains (Alex Morcos)\n+- #6932 `73fa5e6` ModifyNewCoins saves database lookups (Alex Morcos)\n+- #5967 `05d5918` Alter assumptions in CCoinsViewCache::BatchWrite (Alex Morcos)\n+- #6871 `0e93586` nSequence-based Full-RBF opt-in (Peter Todd)\n+- #7008 `eb77416` Lower bound priority (Alex Morcos)\n+- #6915 `2ef5ffa` [Mempool] Improve removal of invalid transactions after reorgs (Suhas Daftuar)\n+- #6898 `4077ad2` Rewrite CreateNewBlock (Alex Morcos)\n+- #6872 `bdda4d5` Remove UTXO cache entries when the tx they were added for is removed/does not enter mempool (Matt Corallo)\n+- #7062 `12c469b` [Mempool] Fix mempool limiting and replace-by-fee for PrioritiseTransaction (Suhas Daftuar)\n+- #7276 `76de36f` Report non-mandatory script failures correctly (Pieter Wuille)\n+- #7217 `e08b7cb` Mark blocks with too many sigops as failed (Suhas Daftuar)\n+- #7387 `f4b2ce8` Get rid of inaccurate ScriptSigArgsExpected (Pieter Wuille)\n+\n+### P2P protocol and network code\n+\n+- #6172 `88a7ead` Ignore getheaders requests when not synced (Suhas Daftuar)\n+- #5875 `9d60602` Be stricter in processing unrequested blocks (Suhas Daftuar)\n+- #6256 `8ccc07c` Use best header chain timestamps to detect partitioning (Gavin Andresen)\n+- #6283 `a903ad7` make CAddrMan::size() return the correct type of size_t (Diapolo)\n+- #6272 `40400d5` Improve proxy initialization (continues #4871) (Wladimir J. van der Laan, Diapolo)\n+- #6310 `66e5465` banlist.dat: store banlist on disk (Jonas Schnelli)\n+- #6412 `1a2de32` Test whether created sockets are select()able (Pieter Wuille)\n+- #6498 `219b916` Keep track of recently rejected transactions with a rolling bloom filter (cont'd) (Peter Todd)\n+- #6556 `70ec975` Fix masking of irrelevant bits in address groups. (Alex Morcos)\n+- #6530 `ea19c2b` Improve addrman Select() performance when buckets are nearly empty (Pieter Wuille)\n+- #6583 `af9305a` add support for miniupnpc api version 14 (Pavel Vasin)\n+- #6374 `69dc5b5` Connection slot exhaustion DoS mitigation (Patrick Strateman)\n+- #6636 `536207f` net: correctly initialize nMinPingUsecTime (Wladimir J. van der Laan)\n+- #6579 `0c27795` Add NODE_BLOOM service bit and bump protocol version (Matt Corallo)\n+- #6148 `999c8be` Relay blocks when pruning (Suhas Daftuar)\n+- #6588 `cf9bb11` In (strCommand == \"tx\"), return if AlreadyHave() (Tom Harding)\n+- #6974 `2f71b07` Always allow getheaders from whitelisted peers (Wladimir J. van der Laan)\n+- #6639 `bd629d7` net: Automatically create hidden service, listen on Tor (Wladimir J. van der Laan)\n+- #6984 `9ffc687` don't enforce maxuploadtarget's disconnect for whitelisted peers (Jonas Schnelli)\n+- #7046 `c322652` Net: Improve blocks only mode. (Patrick Strateman)\n+- #7090 `d6454f6` Connect to Tor hidden services by default (when listening on Tor) (Peter Todd)\n+- #7106 `c894fbb` Fix and improve relay from whitelisted peers (Pieter Wuille)\n+- #7129 `5d5ef3a` Direct headers announcement (rebase of #6494) (Pieter Wuille)\n+- #7079 `1b5118b` Prevent peer flooding inv request queue (redux) (redux) (Gregory Maxwell)\n+- #7166 `6ba25d2` Disconnect on mempool requests from peers when over the upload limit. (Gregory Maxwell)\n+- #7133 `f31955d` Replace setInventoryKnown with a rolling bloom filter (rebase of #7100) (Pieter Wuille)\n+- #7174 `82aff88` Don't do mempool lookups for \"mempool\" command without a filter (Matt Corallo)\n+- #7179 `44fef99` net: Fix sent reject messages for blocks and transactions (Wladimir J. van der Laan)\n+- #7181 `8fc174a` net: Add and document network messages in protocol.h (Wladimir J. van der Laan)\n+- #7125 `10b88be` Replace global trickle node with random delays (Pieter Wuille)\n+- #7415 `cb83beb` net: Hardcoded seeds update January 2016 (Wladimir J. van der Laan)\n+- #7438 `e2d9a58` Do not absolutely protect local peers; decide group ties based on time (Gregory Maxwell)\n+- #7439 `86755bc` Add whitelistforcerelay to control forced relaying. [#7099 redux] (Gregory Maxwell)\n+- #7482 `e16f5b4` Ensure headers count is correct (Suhas Daftuar)\n+\n+### Validation\n+\n+- #5927 `8d9f0a6` Reduce checkpoints' effect on consensus. (Pieter Wuille)\n+- #6299 `24f2489` Bugfix: Don't check the genesis block header before accepting it (Jorge Tim\u00f3n)\n+- #6361 `d7ada03` Use real number of cores for default -par, ignore virtual cores (Wladimir J. van der Laan)\n+- #6519 `87f37e2` Make logging for validation optional (Wladimir J. van der Laan)\n+- #6351 `2a1090d` CHECKLOCKTIMEVERIFY (BIP65) IsSuperMajority() soft-fork (Peter Todd)\n+- #6931 `54e8bfe` Skip BIP 30 verification where not necessary (Alex Morcos)\n+- #6954 `e54ebbf` Switch to libsecp256k1-based ECDSA validation (Pieter Wuille)\n+- #6508 `61457c2` Switch to a constant-space Merkle root/branch algorithm. (Pieter Wuille)\n+- #6914 `327291a` Add pre-allocated vector type and use it for CScript (Pieter Wuille)\n+- #7500 `889e5b3` Correctly report high-S violations (Pieter Wuille)\n+\n+\n+### Build system\n+\n+- #6210 `0e4f2a0` build: disable optional use of gmp in internal secp256k1 build (Wladimir J. van der Laan)\n+- #6214 `87406aa` [OSX] revert renaming of Bitcoin-Qt.app and use CFBundleDisplayName (partial revert of #6116) (Jonas Schnelli)\n+- #6218 `9d67b10` build/gitian misc updates (Cory Fields)\n+- #6269 `d4565b6` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures (Cory Fields)\n+- #6418 `d4a910c` Add autogen.sh to source tarball. (randy-waterhouse)\n+- #6373 `1ae3196` depends: non-qt bumps for 0.12 (Cory Fields)\n+- #6434 `059b352` Preserve user-passed CXXFLAGS with --enable-debug (Gavin Andresen)\n+- #6501 `fee6554` Misc build fixes (Cory Fields)\n+- #6600 `ef4945f` Include bitcoin-tx binary on Debian/Ubuntu (Zak Wilcox)\n+- #6619 `4862708` depends: bump miniupnpc and ccache (Michael Ford)\n+- #6801 `ae69a75` [depends] Latest config.guess and config.sub (Michael Ford)\n+- #6938 `193f7b5` build: If both Qt4 and Qt5 are installed, use Qt5 (Wladimir J. van der Laan)\n+- #7092 `348b281` build: Set osx permissions in the dmg to make Gatekeeper happy (Cory Fields)\n+- #6980 `eccd671` [Depends] Bump Boost, miniupnpc, ccache & zeromq (Michael Ford)\n+- #7424 `aa26ee0` Add security/export checks to gitian and fix current failures (Cory Fields)\n+\n+### Wallet\n+\n+- #6183 `87550ee` Fix off-by-one error w/ nLockTime in the wallet (Peter Todd)\n+- #6057 `ac5476e` re-enable wallet in autoprune (Jonas Schnelli)\n+- #6356 `9e6c33b` Delay initial pruning until after wallet init (Adam Weiss)\n+- #6088 `91389e5` fundrawtransaction (Matt Corallo)\n+- #6415 `ddd8d80` Implement watchonly support in fundrawtransaction (Matt Corallo)\n+- #6567 `0f0f323` Fix crash when mining with empty keypool. (Daniel Kraft)\n+- #6688 `4939eab` Fix locking in GetTransaction. (Alex Morcos)\n+- #6645 `4dbd43e` Enable wallet key imports without rescan in pruned mode. (Gregory Maxwell)\n+- #6550 `5b77244` Do not store Merkle branches in the wallet. (Pieter Wuille)\n+- #5924 `12a7712` Clean up change computation in CreateTransaction. (Daniel Kraft)\n+- #6906 `48b5b84` Reject invalid pubkeys when reading ckey items from the wallet. (Gregory Maxwell)\n+- #7010 `e0a5ef8` Fix fundrawtransaction handling of includeWatching (Peter Todd)\n+- #6851 `616d61b` Optimisation: Store transaction list order in memory rather than compute it every need (Luke-Jr)\n+- #6134 `e92377f` Improve usage of fee estimation code (Alex Morcos)\n+- #7103 `a775182` [wallet, rpc tests] Fix settxfee, paytxfee (MarcoFalke)\n+- #7105 `30c2d8c` Keep track of explicit wallet conflicts instead of using mempool (Pieter Wuille)\n+- #7096 `9490bd7` [Wallet] Improve minimum absolute fee GUI options (Jonas Schnelli)\n+- #6216 `83f06ca` Take the training wheels off anti-fee-sniping (Peter Todd)\n+- #4906 `96e8d12` Issue#1643: Coinselection prunes extraneous inputs from ApproximateBestSubset (Murch)\n+- #7200 `06c6a58` Checks for null data transaction before issuing error to debug.log (Andy Craze)\n+- #7296 `a36d79b` Add sane fallback for fee estimation (Alex Morcos)\n+- #7293 `ff9b610` Add regression test for vValue sort order (MarcoFalke)\n+- #7306 `4707797` Make sure conflicted wallet tx's update balances (Alex Morcos)\n+- #7381 `621bbd8` [walletdb] Fix syntax error in key parser (MarcoFalke)\n+- #7491 `00ec73e` wallet: Ignore MarkConflict if block hash is not known (Wladimir J. van der Laan)\n+- #7502 `1329963` Update the wallet best block marker before pruning (Pieter Wuille)\n+\n+### GUI\n+\n+- #6217 `c57e12a` disconnect peers from peers tab via context menu (Diapolo)\n+- #6209 `ab0ec67` extend rpc console peers tab (Diapolo)\n+- #6484 `1369d69` use CHashWriter also in SignVerifyMessageDialog (Pavel Vasin)\n+- #6487 `9848d42` Introduce PlatformStyle (Wladimir J. van der Laan)\n+- #6505 `100c9d3` cleanup icons (MarcoFalke)\n+- #4587 `0c465f5` allow users to set -onion via GUI (Diapolo)\n+- #6529 `c0f66ce` show client user agent in debug window (Diapolo)\n+- #6594 `878ea69` Disallow duplicate windows. (Casey Rodarmor)\n+- #5665 `6f55cdd` add verifySize() function to PaymentServer (Diapolo)\n+- #6317 `ca5e2a1` minor optimisations in peertablemodel (Diapolo)\n+- #6315 `e59d2a8` allow banning and unbanning over UI->peers table (Jonas Schnelli)\n+- #6653 `e04b2fa` Pop debug window in foreground when opened twice (MarcoFalke)\n+- #6864 `c702521` Use monospace font (MarcoFalke)\n+- #6887 `3694b74` Update coin control and smartfee labels (MarcoFalke)\n+- #7000 `814697c` add shortcurts for debug-/console-window (Jonas Schnelli)\n+- #6951 `03403d8` Use maxTxFee instead of 10000000 (MarcoFalke)\n+- #7051 `a190777` ui: Add \"Copy raw transaction data\" to transaction list context menu (Wladimir J. van der Laan)\n+- #6979 `776848a` simple mempool info in debug window (Jonas Schnelli)\n+- #7006 `26af1ac` add startup option to reset Qt settings (Jonas Schnelli)\n+- #6780 `2a94cd6` Call init's parameter interaction before we create the UI options model (Jonas Schnelli)\n+- #7112 `96b8025` reduce cs_main locks during tip update, more fluently update UI (Jonas Schnelli)\n+- #7206 `f43c2f9` Add \"NODE_BLOOM\" to guiutil so that peers don't get UNKNOWN[4] (Matt Corallo)\n+- #7282 `5cadf3e` fix coincontrol update issue when deleting a send coins entry (Jonas Schnelli)\n+- #7319 `1320300` Intro: Display required space (MarcoFalke)\n+- #7318 `9265e89` quickfix for RPC timer interface problem (Jonas Schnelli)\n+- #7327 `b16b5bc` [Wallet] Transaction View: LastMonth calculation fixed (crowning-)\n+- #7364 `7726c48` [qt] Windows: Make rpcconsole monospace font larger (MarcoFalke)\n+- #7384 `294f432` [qt] Peertable: Increase SUBVERSION_COLUMN_WIDTH (MarcoFalke)\n+\n+### Tests and QA\n+\n+- #6305 `9005c91` build: comparison tool swap (Cory Fields)\n+- #6318 `e307e13` build: comparison tool NPE fix (Cory Fields)\n+- #6337 `0564c5b` Testing infrastructure: mocktime fixes (Gavin Andresen)\n+- #6350 `60abba1` add unit tests for the decodescript rpc (mruddy)\n+- #5881 `3203a08` Fix and improve txn_doublespend.py test (Tom Harding)\n+- #6390 `6a73d66` tests: Fix bitcoin-tx signing test case (Wladimir J. van der Laan)\n+- #6368 `7fc25c2` CLTV: Add more tests to improve coverage (Esteban Ordano)\n+- #6414 `5121c68` Fix intermittent test failure, reduce test time (Tom Harding)\n+- #6417 `44fa82d` [QA] fix possible reorg issue in (fund)rawtransaction(s).py RPC test (Jonas Schnelli)\n+- #6398 `3d9362d` rpc: Remove chain-specific RequireRPCPassword (Wladimir J. van der Laan)\n+- #6428 `bb59e78` tests: Remove old sh-based test framework (Wladimir J. van der Laan)\n+- #5515 `d946e9a` RFC: Assert on probable deadlocks if the second lock isnt try_lock (Matt Corallo)\n+- #6287 `d2464df` Clang lock debug (Cory Fields)\n+- #6465 `410fd74` Don't share objects between TestInstances (Casey Rodarmor)\n+- #6534 `6c1c7fd` Fix test locking issues and un-revert the probable-deadlines assertions commit (Cory Fields)\n+- #6509 `bb4faee` Fix race condition on test node shutdown (Casey Rodarmor)\n+- #6523 `561f8af` Add p2p-fullblocktest.py (Casey Rodarmor)\n+- #6590 `981fd92` Fix stale socket rebinding and re-enable python tests for Windows (Cory Fields)\n+- #6730 `cb4d6d0` build: Remove dependency of bitcoin-cli on secp256k1 (Wladimir J. van der Laan)\n+- #6616 `5ab5dca` Regression Tests: Migrated rpc-tests.sh to all Python rpc-tests.py (Peter Tschipper)\n+- #6720 `d479311` Creates unittests for addrman, makes addrman more testable. (Ethan Heilman)\n+- #6853 `c834f56` Added fPowNoRetargeting field to Consensus::Params (Eric Lombrozo)\n+- #6827 `87e5539` [rpc-tests] Check return code (MarcoFalke)\n+- #6848 `f2c869a` Add DERSIG transaction test cases (Ross Nicoll)\n+- #6813 `5242bb3` Support gathering code coverage data for RPC tests with lcov (dexX7)\n+- #6888 `c8322ff` Clear strMiscWarning before running PartitionAlert (Eric Lombrozo)\n+- #6894 `2675276` [Tests] Fix BIP65 p2p test (Suhas Daftuar)\n+- #6863 `725539e` [Test Suite] Fix test for null tx input (Daniel Kraft)\n+- #6926 `a6d0d62` tests: Initialize networking on windows (Wladimir J. van der Laan)\n+- #6822 `9fa54a1` [tests] Be more strict checking dust (MarcoFalke)\n+- #6804 `5fcc14e` [tests] Add basic coverage reporting for RPC tests (James O'Beirne)\n+- #7045 `72dccfc` Bugfix: Use unique autostart filenames on Linux for testnet/regtest (Luke-Jr)\n+- #7095 `d8368a0` Replace scriptnum_test's normative ScriptNum implementation (Wladimir J. van der Laan)\n+- #7063 `6abf6eb` [Tests] Add prioritisetransaction RPC test (Suhas Daftuar)\n+- #7137 `16f4a6e` Tests: Explicitly set chain limits in replace-by-fee test (Suhas Daftuar)\n+- #7216 `9572e49` Removed offline testnet DNSSeed 'alexykot.me'. (tnull)\n+- #7209 `f3ad812` test: don't override BITCOIND and BITCOINCLI if they're set (Wladimir J. van der Laan)\n+- #7226 `301f16a` Tests: Add more tests to p2p-fullblocktest (Suhas Daftuar)\n+- #7153 `9ef7c54` [Tests] Add mempool_limit.py test (Jonas Schnelli)\n+- #7170 `453c567` tests: Disable Tor interaction (Wladimir J. van der Laan)\n+- #7229 `1ed938b` [qa] wallet: Check if maintenance changes the balance (MarcoFalke)\n+- #7308 `d513405` [Tests] Eliminate intermittent failures in sendheaders.py (Suhas Daftuar)\n+- #7468 `947c4ff` [rpc-tests] Change solve() to use rehash (Brad Andrews)\n+\n+### Miscellaneous\n+\n+- #6213 `e54ff2f` [init] add -blockversion help and extend -upnp help (Diapolo)\n+- #5975 `1fea667` Consensus: Decouple ContextualCheckBlockHeader from checkpoints (Jorge Tim\u00f3n)\n+- #6061 `eba2f06` Separate Consensus::CheckTxInputs and GetSpendHeight in CheckInputs (Jorge Tim\u00f3n)\n+- #5994 `786ed11` detach wallet from miner (Jonas Schnelli)\n+- #6387 `11576a5` [bitcoin-cli] improve error output (Jonas Schnelli)\n+- #6401 `6db53b4` Add BITCOIND_SIGTERM_TIMEOUT to OpenRC init scripts (Florian Schmaus)\n+- #6430 `b01981e` doc: add documentation for shared library libbitcoinconsensus (Braydon Fuller)\n+- #6372 `dcc495e` Update Linearize tool to support Windows paths; fix variable scope; update README and example configuration (Paul Georgiou)\n+- #6453 `8fe5cce` Separate core memory usage computation in core_memusage.h (Pieter Wuille)\n+- #6149 `633fe10` Buffer log messages and explicitly open logs (Adam Weiss)\n+- #6488 `7cbed7f` Avoid leaking file descriptors in RegisterLoad (Casey Rodarmor)\n+- #6497 `a2bf40d` Make sure LogPrintf strings are line-terminated (Wladimir J. van der Laan)\n+- #6504 `b6fee6b` Rationalize currency unit to \"BTC\" (Ross Nicoll)\n+- #6507 `9bb4dd8` Removed contrib/bitrpc (Casey Rodarmor)\n+- #6527 `41d650f` Use unique name for AlertNotify tempfile (Casey Rodarmor)\n+- #6561 `e08a7d9` limitedmap fixes and tests (Casey Rodarmor)\n+- #6565 `a6f2aff` Make sure we re-acquire lock if a task throws (Casey Rodarmor)\n+- #6599 `f4d88c4` Make sure LogPrint strings are line-terminated (Ross Nicoll)\n+- #6630 `195942d` Replace boost::reverse_lock with our own (Casey Rodarmor)\n+- #6103 `13b8282` Add ZeroMQ notifications (Jo\u00e3o Barbosa)\n+- #6692 `d5d1d2e` devtools: don't push if signing fails in github-merge (Wladimir J. van der Laan)\n+- #6728 `2b0567b` timedata: Prevent warning overkill (Wladimir J. van der Laan)\n+- #6713 `f6ce59c` SanitizeString: Allow hypen char (MarcoFalke)\n+- #5987 `4899a04` Bugfix: Fix testnet-in-a-box use case (Luke-Jr)\n+- #6733 `b7d78fd` Simple benchmarking framework (Gavin Andresen)\n+- #6854 `a092970` devtools: Add security-check.py (Wladimir J. van der Laan)\n+- #6790 `fa1d252` devtools: add clang-format.py (MarcoFalke)\n+- #7114 `f3d0fdd` util: Don't set strMiscWarning on every exception (Wladimir J. van der Laan)\n+- #7078 `93e0514` uint256::GetCheapHash bigendian compatibility (arowser)\n+- #7094 `34e02e0` Assert now > 0 in GetTime GetTimeMillis GetTimeMicros (Patrick Strateman)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- accraze\n+- Adam Weiss\n+- Alex Morcos\n+- Alex van der Peet\n+- AlSzacrel\n+- Altoidnerd\n+- Andriy Voskoboinyk\n+- antonio-fr\n+- Arne Brutschy\n+- Ashley Holman\n+- Bob McElrath\n+- Braydon Fuller\n+- BtcDrak\n+- Casey Rodarmor\n+- centaur1\n+- Chris Kleeschulte\n+- Christian Decker\n+- Cory Fields\n+- crowning-\n+- daniel\n+- Daniel Cousens\n+- Daniel Kraft\n+- David Hill\n+- dexX7\n+- Diego Viola\n+- Elias Rohrer\n+- Eric Lombrozo\n+- Erik Mossberg\n+- Esteban Ordano\n+- EthanHeilman\n+- Florian Schmaus\n+- Forrest Voight\n+- Gavin Andresen\n+- Gregory Maxwell\n+- Gregory Sanders / instagibbs\n+- Ian T\n+- Irving Ruan\n+- Jacob Welsh\n+- James O'Beirne\n+- Jeff Garzik\n+- Johnathan Corgan\n+- Jonas Schnelli\n+- Jonathan Cross\n+- Jo\u00e3o Barbosa\n+- Jorge Tim\u00f3n\n+- Josh Lehan\n+- J Ross Nicoll\n+- kazcw\n+- Kevin Cooper\n+- lpescher\n+- Luke Dashjr\n+- MarcoFalke\n+- Mark Friedenbach\n+- Matt\n+- Matt Bogosian\n+- Matt Corallo\n+- Matt Quinn\n+- Micha\n+- Michael\n+- Michael Ford / fanquake\n+- Midnight Magic\n+- Mitchell Cash\n+- mrbandrews\n+- mruddy\n+- Nick\n+- Patrick Strateman\n+- Paul Georgiou\n+- Paul Rabahy\n+- Pavel Jan\u00edk / paveljanik\n+- Pavel Vasin\n+- Pavol Rusnak\n+- Peter Josling\n+- Peter Todd\n+- Philip Kaufmann\n+- Pieter Wuille\n+- ptschip\n+- randy-waterhouse\n+- rion\n+- Ross Nicoll\n+- Ryan Havar\n+- Shaul Kfir\n+- Simon Males\n+- Stephen\n+- Suhas Daftuar\n+- tailsjoin\n+- Thomas Kerin\n+- Tom Harding\n+- tulip\n+- unsystemizer\n+- Veres Lajos\n+- Wladimir J. van der Laan\n+- xor-freenet\n+- Zak Wilcox\n+- zathras-crypto\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "c27f607b5c58e3c2f16bb49bbcf7d8122e40af85",
        "filename": "doc/release-notes/release-notes-0.6.3.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.6.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.6.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.3.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -23,7 +23,7 @@ hundreds of blocks long.\n Bitcoin-Qt no longer automatically selects the first address\n in the address book (Issue #1384).\n \n-Fixed minimize-to-dock behavior of Bitcon-Qt on the Mac.\n+Fixed minimize-to-dock behavior of Bitcoin-Qt on the Mac.\n \n Added a block checkpoint at block 185,333 to speed up initial\n blockchain download."
      },
      {
        "sha": "7ee73246a9b043d643226551b29143857e44bac9",
        "filename": "doc/release-notes/release-notes-0.9.4.md",
        "status": "added",
        "additions": 95,
        "deletions": 0,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.9.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.9.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.4.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,95 @@\n+Bitcoin Core version 0.9.4 is now available from:\n+\n+  https://bitcoin.org/bin/0.9.4/\n+\n+This is a new minor version release, bringing only bug fixes and updated\n+translations. Upgrading to this release is recommended.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+===============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+OpenSSL Warning\n+================\n+\n+OpenSSL 1.0.0p / 1.0.1k was recently released and is being pushed out by\n+various operating system maintainers. Review by Gregory Maxwell determined that\n+this update is incompatible with the Bitcoin system and could lead to consensus\n+forks.\n+\n+Bitcoin Core released binaries from https://bitcoin.org are unaffected,\n+as are any built with the gitian deterministic build system.\n+\n+However, if you are running either\n+\n+- The Ubuntu PPA from https://launchpad.net/~bitcoin/+archive/ubuntu/bitcoin\n+- A third-party or self-compiled Bitcoin Core\n+\n+upgrade to Bitcoin Core 0.9.4, which includes a workaround, **before** updating\n+OpenSSL.\n+\n+The incompatibility is due to the OpenSSL update changing the\n+behavior of ECDSA validation to reject any signature which is\n+not encoded in a very rigid manner. This was a result of\n+OpenSSL's change for CVE-2014-8275 \"Certificate fingerprints\n+can be modified\".\n+\n+We are specifically aware of potential hard-forks due to signature\n+encoding handling and had been hoping to close them via BIP62 in 0.10.\n+BIP62's purpose is to improve transaction malleability handling and\n+as a side effect rigidly defines the encoding for signatures, but the\n+overall scope of BIP62 has made it take longer than we'd like to\n+deploy.\n+\n+0.9.4 changelog\n+================\n+\n+Validation:\n+- `b8e81b7` consensus: guard against openssl's new strict DER checks\n+- `60c51f1` fail immediately on an empty signature\n+- `037bfef` Improve robustness of DER recoding code\n+\n+Command-line options:\n+- `cd5164a` Make -proxy set all network types, avoiding a connect leak.\n+\n+P2P:\n+- `bb424e4` Limit the number of new addressses to accumulate\n+\n+RPC:\n+- `0a94661` Disable SSLv3 (in favor of TLS) for the RPC client and server.\n+\n+Build system:\n+- `f047dfa` gitian: openssl-1.0.1i.tar.gz -> openssl-1.0.1k.tar.gz\n+- `5b9f78d` build: Fix OSX build when using Homebrew and qt5\n+- `ffab1dd` Keep symlinks when copying into .app bundle\n+- `613247f` osx: fix signing to make Gatekeeper happy (again)\n+\n+Miscellaneous:\n+- `25b49b5` Refactor -alertnotify code\n+- `2743529` doc: Add instructions for consistent Mac OS X build names\n+\n+Credits\n+--------\n+\n+Thanks to who contributed to this release, at least:\n+\n+- Cory Fields\n+- Gavin Andresen\n+- Gregory Maxwell\n+- Jeff Garzik\n+- Luke Dashjr\n+- Matt Corallo\n+- Pieter Wuille\n+- Saivann\n+- Sergio Demian Lerner\n+- Wladimir J. van der Laan\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "bed0af9879bf44e651b8726426d0209c4c75ef96",
        "filename": "doc/release-notes/release-notes-0.9.5.md",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.9.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-notes/release-notes-0.9.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.5.md?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "patch": "@@ -0,0 +1,60 @@\n+Bitcoin Core version 0.9.5 is now available from:\n+\n+  https://bitcoin.org/bin/0.9.5/\n+\n+This is a new minor version release, with the goal of backporting BIP66. There\n+are also a few bug fixes and updated translations. Upgrading to this release is\n+recommended.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+===============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Notable changes\n+================\n+\n+Mining and relay policy enhancements\n+------------------------------------\n+\n+Bitcoin Core's block templates are now for version 3 blocks only, and any mining\n+software relying on its `getblocktemplate` must be updated in parallel to use\n+libblkmaker either version 0.4.2 or any version from 0.5.1 onward.\n+If you are solo mining, this will affect you the moment you upgrade Bitcoin\n+Core, which must be done prior to BIP66 achieving its 951/1001 status.\n+If you are mining with the stratum mining protocol: this does not affect you.\n+If you are mining with the getblocktemplate protocol to a pool: this will affect\n+you at the pool operator's discretion, which must be no later than BIP66\n+achieving its 951/1001 status.\n+\n+0.9.5 changelog\n+================\n+\n+- `74f29c2` Check pindexBestForkBase for null\n+- `9cd1dd9` Fix priority calculation in CreateTransaction\n+- `6b4163b` Sanitize command strings before logging them.\n+- `3230b32` Raise version of created blocks, and enforce DERSIG in mempool\n+- `989d499` Backport of some of BIP66's tests\n+- `ab03660` Implement BIP 66 validation rules and switchover logic\n+- `8438074` build: fix dynamic boost check when --with-boost= is used\n+\n+Credits\n+--------\n+\n+Thanks to who contributed to this release, at least:\n+\n+- 21E14\n+- Alex Morcos\n+- Cory Fields\n+- Gregory Maxwell\n+- Pieter Wuille\n+- Wladimir J. van der Laan\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "35ee1edae1175338b8a564932c7eb68c99b4954e",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "ec6f16c8aafe9972bd95675176ab68c14704a8c7",
        "filename": "doc/shared-libraries.md",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "79f1563021094ba01d8efc944472554d0c8f6fc7",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 41,
        "deletions": 10,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "310d560b364fa043539de0e8640c0bb6714759d8",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 80,
        "deletions": 58,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "b95259cdc9debc0285239406396f175ea7d0f3bb",
        "filename": "doc/translation_strings_policy.md",
        "status": "added",
        "additions": 109,
        "deletions": 0,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/translation_strings_policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/translation_strings_policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_strings_policy.md?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "06410405d6de89f363baa43fe610fb8b9baa677b",
        "filename": "doc/travis-ci.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/travis-ci.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/travis-ci.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/travis-ci.txt?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "afaece829c77d4832364231db459f25c23450e49",
        "filename": "doc/unit-tests.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/unit-tests.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/unit-tests.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/unit-tests.md?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "6079e3254f783e4b9df6e3994869a454d10aaf7c",
        "filename": "doc/zmq.md",
        "status": "added",
        "additions": 106,
        "deletions": 0,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "eb920c47eb521e5e42f3cff196c92627015e6dc7",
        "filename": "libbitcoinconsensus.pc.in",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/libbitcoinconsensus.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/libbitcoinconsensus.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/libbitcoinconsensus.pc.in?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "c5b26b52e6cdb5891332f7e87addae9306ba7107",
        "filename": "pkg.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 214,
        "changes": 214,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/pkg.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/pkg.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/pkg.m4?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "723660c6c857e4a431a6e015293db5cca3486fdc",
        "filename": "qa/README.md",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "11b83bac1468d7dea2ea9a38de6eb47b63baf21f",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "added",
        "additions": 341,
        "deletions": 0,
        "changes": 341,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "d6ee00bb7df06a310ae270f5e6c64835a64072ba",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "93c25bb9fca29e20e4b3b75718978e303268fac1",
        "filename": "qa/pull-tester/run-bitcoin-cli",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/qa/pull-tester/run-bitcoin-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/qa/pull-tester/run-bitcoin-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-bitcoin-cli?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "14ae08e4e58f0a0eb36dcf22dc86ad73bb34c5fb",
        "filename": "qa/pull-tester/run-bitcoind-for-test.sh.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-bitcoind-for-test.sh.in?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "a0d0a3d98a86becd64c699fa8bb67bb2ae79629c",
        "filename": "qa/pull-tester/tests_config.py.in",
        "status": "renamed",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/pull-tester/tests_config.py.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/pull-tester/tests_config.py.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests_config.py.in?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "qa/pull-tester/tests-config.sh.in"
      },
      {
        "sha": "651b01f18a4711b1dacc8b9e7408fbc896e1be48",
        "filename": "qa/rpc-tests/README.md",
        "status": "modified",
        "additions": 97,
        "deletions": 32,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "c50c3cc562e5f60811da8bc66e9d3359e954f821",
        "filename": "qa/rpc-tests/abandonconflict.py",
        "status": "added",
        "additions": 160,
        "deletions": 0,
        "changes": 160,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/abandonconflict.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "754b6873b71ff7098535a3822ac04e273959dfe5",
        "filename": "qa/rpc-tests/bip65-cltv-p2p.py",
        "status": "added",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv-p2p.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "abba7fc20e7d9296210f6d77a723a37b8046e8cd",
        "filename": "qa/rpc-tests/bip65-cltv.py",
        "status": "added",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bip65-cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bip65-cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip65-cltv.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "55b3e2a04a03370fa549f95403a214e9a44a857e",
        "filename": "qa/rpc-tests/bip68-112-113-p2p.py",
        "status": "added",
        "additions": 539,
        "deletions": 0,
        "changes": 539,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bip68-112-113-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bip68-112-113-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-112-113-p2p.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "a12bf10ebd75895e31e369572517150a002f6f97",
        "filename": "qa/rpc-tests/bip68-sequence.py",
        "status": "added",
        "additions": 428,
        "deletions": 0,
        "changes": 428,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip68-sequence.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "979d1410c2616189350a7286e7f46345d2abcaec",
        "filename": "qa/rpc-tests/bip9-softforks.py",
        "status": "added",
        "additions": 240,
        "deletions": 0,
        "changes": 240,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bip9-softforks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bip9-softforks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bip9-softforks.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "4e4936a4ae6de0f532154c021779bcc1f14a0f91",
        "filename": "qa/rpc-tests/bipdersig-p2p.py",
        "status": "added",
        "additions": 189,
        "deletions": 0,
        "changes": 189,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bipdersig-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bipdersig-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig-p2p.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "17c2ced79ac1ec6c985e61059bb965331eaddebb",
        "filename": "qa/rpc-tests/bipdersig.py",
        "status": "added",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bipdersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/bipdersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/bipdersig.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "410b85d15e35f04a31834bf3b492f9164dbce67a",
        "filename": "qa/rpc-tests/blockchain.py",
        "status": "added",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/blockchain.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "a112244c744e61cbd3ba7d540f278cdb6ad2d757",
        "filename": "qa/rpc-tests/conflictedbalance.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 147,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98e3dde6a976a2c8f266ee963d6931fd4b37262/qa/rpc-tests/conflictedbalance.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98e3dde6a976a2c8f266ee963d6931fd4b37262/qa/rpc-tests/conflictedbalance.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/conflictedbalance.sh?ref=e98e3dde6a976a2c8f266ee963d6931fd4b37262"
      },
      {
        "sha": "b6161e0917d07593b2ffad50dcaea56b1fd77854",
        "filename": "qa/rpc-tests/create_cache.py",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/create_cache.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/create_cache.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/create_cache.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "24768c265577a49367b9c7c67d8d79059f37e3c2",
        "filename": "qa/rpc-tests/decodescript.py",
        "status": "added",
        "additions": 185,
        "deletions": 0,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/decodescript.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/decodescript.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/decodescript.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "36c147edad3a6f9c94c16e744432ba337e654ce0",
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "5a3f75c8087410b0a8e18990f13b60db26eeeb23",
        "filename": "qa/rpc-tests/forknotify.py",
        "status": "modified",
        "additions": 13,
        "deletions": 11,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/forknotify.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "eeb8476634fcb99dae9b8d010a30a98d95100b8b",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "added",
        "additions": 648,
        "deletions": 0,
        "changes": 648,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "3cddf4046aaf6eed75634c4ef2161a0a607ebc09",
        "filename": "qa/rpc-tests/getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 14,
        "deletions": 32,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_longpoll.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "7a4f8f8fdc3c2a3cc50e3c71030c3578d3919c1e",
        "filename": "qa/rpc-tests/getblocktemplate_proposals.py",
        "status": "modified",
        "additions": 21,
        "deletions": 40,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/getblocktemplate_proposals.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/getblocktemplate_proposals.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate_proposals.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "1c66b8c28927d110947e6430f04787bb9bd2bb0d",
        "filename": "qa/rpc-tests/getchaintips.py",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/getchaintips.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/getchaintips.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getchaintips.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "10bc927e1a51a6ea1aefa2bbc1b89f374c61a3bd",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 93,
        "deletions": 56,
        "changes": 149,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "d86f51b7f3aaf691b721a5f906ca1f3008b51666",
        "filename": "qa/rpc-tests/importprunedfunds.py",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/importprunedfunds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/importprunedfunds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/importprunedfunds.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "0faadd33ab35a55cf68b1e3b20ad71286ca9c2f9",
        "filename": "qa/rpc-tests/invalidateblock.py",
        "status": "added",
        "additions": 76,
        "deletions": 0,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/invalidateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/invalidateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidateblock.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "3d8107a76c661a7890ee9a3abbd5f360291791eb",
        "filename": "qa/rpc-tests/invalidblockrequest.py",
        "status": "added",
        "additions": 117,
        "deletions": 0,
        "changes": 117,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/invalidblockrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/invalidblockrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidblockrequest.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "93205d79dee5bddd8e5e3d0862374dd72d1fdcb1",
        "filename": "qa/rpc-tests/invalidtxrequest.py",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/invalidtxrequest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/invalidtxrequest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/invalidtxrequest.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "c75303ecbfc31b571b9825fb675df119627f0890",
        "filename": "qa/rpc-tests/keypool.py",
        "status": "modified",
        "additions": 65,
        "deletions": 122,
        "changes": 187,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/keypool.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "5ec6ce17e01e8aae3ad4a513b4eaafdf1127edc7",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "modified",
        "additions": 147,
        "deletions": 42,
        "changes": 189,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "1df1c484bea1205ac3f8ec51f5c87830bc505a94",
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "added",
        "additions": 96,
        "deletions": 0,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "125d4eb275190238baa2355e93b0a05f7bc6e4ea",
        "filename": "qa/rpc-tests/maxuploadtarget.py",
        "status": "added",
        "additions": 266,
        "deletions": 0,
        "changes": 266,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxuploadtarget.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "4438c152df10a077c6654e598c63ea19017eaae4",
        "filename": "qa/rpc-tests/mempool_limit.py",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_limit.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "45dc0e65c43c20cb58f82cdf5beb015b87b273ab",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "added",
        "additions": 243,
        "deletions": 0,
        "changes": 243,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "301b094eb08ca6326d64cf8ae9c4ca77303e32ad",
        "filename": "qa/rpc-tests/mempool_reorg.py",
        "status": "renamed",
        "additions": 33,
        "deletions": 26,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_reorg.py?ref=df634908ba758232413c50e8f1f7a80d546d777b",
        "previous_filename": "qa/rpc-tests/mempool_coinbase_spends.py"
      },
      {
        "sha": "3db12cbf76a68f2ba1098f58224c9a7343716c7d",
        "filename": "qa/rpc-tests/mempool_resurrect_test.py",
        "status": "modified",
        "additions": 14,
        "deletions": 21,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/mempool_resurrect_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/mempool_resurrect_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_resurrect_test.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "d5e4bf52d26ce5b8ce8580cd28f4673a62666f83",
        "filename": "qa/rpc-tests/mempool_spendcoinbase.py",
        "status": "modified",
        "additions": 11,
        "deletions": 17,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/mempool_spendcoinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/mempool_spendcoinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_spendcoinbase.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "b2155d7fc33c31b10642dccf2e8e13dbdf10ff7c",
        "filename": "qa/rpc-tests/merkle_blocks.py",
        "status": "added",
        "additions": 88,
        "deletions": 0,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/merkle_blocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/merkle_blocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/merkle_blocks.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "24373b257d7e602b1ff6255b75a1ea328ba00604",
        "filename": "qa/rpc-tests/multi_rpc.py",
        "status": "added",
        "additions": 120,
        "deletions": 0,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/multi_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/multi_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/multi_rpc.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      },
      {
        "sha": "e9682c4908f651366b8b554ab74ab45004975a0d",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df634908ba758232413c50e8f1f7a80d546d777b/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=df634908ba758232413c50e8f1f7a80d546d777b"
      }
    ]
  },
  {
    "sha": "ed1fcdcac0b9388b4e50f5e4ca2d5cd963f1ef27",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDFmY2RjYWMwYjkzODhiNGU1MGY1ZTRjYTJkNWNkOTYzZjFlZjI3",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-12-29T15:24:38Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-12-29T15:24:38Z"
      },
      "message": "Bugfix: Detect genbuild.sh in repo correctly",
      "tree": {
        "sha": "cc0ab03dd0bb69ddaaa87a384f4b463742f5271c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc0ab03dd0bb69ddaaa87a384f4b463742f5271c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed1fcdcac0b9388b4e50f5e4ca2d5cd963f1ef27",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed1fcdcac0b9388b4e50f5e4ca2d5cd963f1ef27",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed1fcdcac0b9388b4e50f5e4ca2d5cd963f1ef27",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed1fcdcac0b9388b4e50f5e4ca2d5cd963f1ef27/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df634908ba758232413c50e8f1f7a80d546d777b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df634908ba758232413c50e8f1f7a80d546d777b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df634908ba758232413c50e8f1f7a80d546d777b"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7db5455f635c7b0c39a30933fd6cd1b3822250fa",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed1fcdcac0b9388b4e50f5e4ca2d5cd963f1ef27/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed1fcdcac0b9388b4e50f5e4ca2d5cd963f1ef27/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=ed1fcdcac0b9388b4e50f5e4ca2d5cd963f1ef27",
        "patch": "@@ -13,9 +13,13 @@ else\n     exit 1\n fi\n \n+git_check_in_repo() {\n+    ! { git status --porcelain -uall --ignored \"$@\" 2>/dev/null || echo '??'; } | grep -q '?'\n+}\n+\n DESC=\"\"\n SUFFIX=\"\"\n-if [ \"${BITCOIN_GENBUILD_NO_GIT}\" != \"1\" -a -e \"$(which git 2>/dev/null)\" -a \"$(git rev-parse --is-inside-work-tree 2>/dev/null)\" = \"true\" -a \"$(git status --porcelain -u no --ignored \"$0\" | cut -b1)\" != \"?\" ]; then\n+if [ \"${BITCOIN_GENBUILD_NO_GIT}\" != \"1\" -a -e \"$(which git 2>/dev/null)\" -a \"$(git rev-parse --is-inside-work-tree 2>/dev/null)\" = \"true\" ] && git_check_in_repo share/genbuild.sh; then\n     # clean 'dirty' status of touched files that haven't been modified\n     git diff >/dev/null 2>/dev/null \n "
      }
    ]
  }
]