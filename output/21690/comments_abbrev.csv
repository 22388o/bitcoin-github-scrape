practicalswift,2021-04-15 07:35:03,"The intermittently failing `BOOST_CHECK` is:\n\nhttps://github.com/bitcoin/bitcoin/blob/9712f75746e3da73471da2e23a4bfc1382c69308/src/test/net_tests.cpp#L310-L312\n\nI don't understand why we test if `ToString()` output includes `%zone_index`: it clearly doesn't on some platforms, so we cannot rely on it anyways. Then why test it? :)",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820193361,820193361,
jonatack,2021-04-15 07:39:58,My understanding when working on this was that Apple might be going in its own direction with this starting with macOS 10.14 but it still seemed worthwhile to test our code on platforms like Linux and Windows where we can.,https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820196586,820196586,
jonatack,2021-04-15 07:42:49,"(Without the fallback, only the macOS 10.14 CI was failing. So coverage on the other CIs seemed good to have.)",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820198523,820198523,
practicalswift,2021-04-15 07:49:13,"> My understanding when working on this was that Apple might be going in its own direction with this starting with macOS 10.14 but it still seemed worthwhile to test our code on platforms like Linux and Windows where we can.\n\nBut the test is not conditional on platform, so AFAICT we're testing that `ToString` either contains `%zone_id` (the `addr_str == scoped_addr` case) or that it _doesn't_ ",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820202947,820202947,
jonatack,2021-04-15 07:57:55,"If you test only the fallback, I found that the change fails on all CIs except the macOS 10.14 one:\n```diff\n-    BOOST_CHECK(addr_str == scoped_addr || addr_str == ""fe80:0:0:0:0:0:0:1"");\n+    BOOST_CHECK(addr_str == ""fe80:0:0:0:0:0:0:1"");\n```\n\n$ src/test/test_bitcoin -t net_tests\nRunning 14 test cases...\ntest/net_tests.cpp(311): error: in ""net_tests/cnetaddr_basic"": check addr_str ",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820208946,820208946,
MarcoFalke,2021-04-15 08:03:25,Does this actually fix the issue or make it only less likely?,https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820212819,820212819,
jonatack,2021-04-15 08:59:55,"As far as I know, the issue began appearing in the CI only this week, so it may be from some recent change in the CI setup, as the tested value of 32 wasn't very high. The CI is green here, so re-pushing now with a very high value (4096). If that causes a failure down the line, I guess we could drop the coverage as suggested above.",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820253961,820253961,
practicalswift,2021-04-15 10:54:34,"@jonatack\n\nI didn't get if you agree with my statement that the intermittently failing `BOOST_CHECK` is basically doing:\n\n```\nBOOST_CHECK(to_string_does_contain_zone_id || to_string_does_not_contain_zone_id);\n```\n\nAnd if so, is there any point in keeping it around? :)\n\n---\n\nFWIW, patch against current `master` to show the issue more clearly:\n\n```diff\ndiff --git a/src/",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820331298,820331298,
jonatack,2021-04-15 12:51:40,@practicalswift It looks like I should document the test better to communicate the context and information. <strike>I'll propose that separately.</strike> Edit: and trying testing by platform to address your concerns.,https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820397623,820397623,
fanquake,2021-04-15 13:57:59,"> It looks like I should document the test better to communicate the context and information. I'll propose that separately.\n\nWhy can't that be done as part of this change?",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820443297,820443297,
jonatack,2021-04-15 15:28:19,"Ok. The CI has been green, and #21696 showed that macOS remains the only CI that fails the `scoped_addr` case.\n\nLet's try (a) improving the documentation and (b) testing `scoped_addr` by platform.\n\nEdit: will update to `BOOST_CHECK_EQUAL` if this works.",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820519948,820519948,
jonatack,2021-04-15 18:49:47,"Great--the per-platform scoped address test is green along with the previous two CI runs.  Pushing an updated version with `BOOST_CHECK( == )` replaced by `BOOST_CHECK_EQUAL( , )` for a 4th CI run. I hope this addresses the feedback above while maintaining coverage and adding clarity and context.",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820656022,820656022,
DrahtBot,2021-04-15 19:35:16,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-820682274,820682274,
MarcoFalke,2021-04-17 09:20:43,Needs rebase after https://github.com/bitcoin/bitcoin/pull/21689#issuecomment-821794629,https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-821794929,821794929,
jonatack,2021-04-17 09:52:05,"> If so, why not simply remove it? :)\n\nI think it is better to improve the test and contextual information it provides and I spent time in a way that I thought was constructive and helpful re-verifying and working to do that.  Unfortunately, it's an order of magnitude more work to refute statements like ""not very meaningful"" in the #21689 PR title and the comment above, than it is to say them ",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-821798318,821798318,
jonatack,2021-04-17 11:07:32,"Rebased, added 6b0e879 for context since this change is not adding a test but hopefully improving it.",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-821806387,821806387,
jonatack,2021-04-28 19:29:34,@practicalswift does this now address your feedback?,https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-828721405,828721405,
practicalswift,2021-04-29 19:56:17,"> @practicalswift does this now address your feedback?\n\nThe `BOOST_CHECK(to_string_does_contain_zone_id || to_string_does_not_contain_zone_id)` issue has been addressed.\n\nI think the issue @MarcoFalke raised about the test outcome being dependent on the user's local configuration remains unfortunately.",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-829554919,829554919,
jonatack,2021-05-11 10:25:19,"This test and informational context involved some trial and error and time to obtain, and I think it's a shame to throw out the coverage and information, particularly as it seems to be not well-known info and I tried to provide context about that. However, it seems like I'm swimming upstream to provide this coverage and information.",https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-838227713,838227713,
jonatack,2021-05-17 11:54:15,The scoped id/zone indices functionality appears to have been dropped entirely by #21756.,https://github.com/bitcoin/bitcoin/pull/21690#issuecomment-842263221,842263221,
MarcoFalke,2021-04-17 09:44:22,Is there a reference that 4096 is guaranteed to be unused or is this something that depends on the operating system and the programs currently running?,https://github.com/bitcoin/bitcoin/pull/21690#discussion_r615234226,615234226,src/test/net_tests.cpp
jonatack,2021-04-17 14:59:12,"Good question. From what I understand, the scope ids / zone indices depend on the number of local network interfaces when there are multiple on a single link-local address. Whereas many machines may have the first 8 or 16 decimal integer scope ids in use, the previous test value of 32 seems to be on the high end of the range. I'm not aware of one that is guaranteed to be free, but a value in the t",https://github.com/bitcoin/bitcoin/pull/21690#discussion_r615264987,615264987,src/test/net_tests.cpp
MarcoFalke,2021-04-30 06:47:54,"```suggestion\n    BOOST_CHECK(addr.ToString().starts_with(""fe80:0:0:0:0:0:0:1""));\n```\n\nMaybe just check the prefix if the suffix is unstable?",https://github.com/bitcoin/bitcoin/pull/21690#discussion_r623648469,623648469,src/test/net_tests.cpp
jonatack,2021-05-11 10:20:39,The suffix is stable but if the first few scope ids are in use locally then they will be another string and not share the same prefix.,https://github.com/bitcoin/bitcoin/pull/21690#discussion_r630040217,630040217,src/test/net_tests.cpp
