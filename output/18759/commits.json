[
  {
    "sha": "fabe44e8154a6068d6cba91ec30f00345ed7b275",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWJlNDRlODE1NGE2MDY4ZDZjYmE5MWVjMzBmMDAzNDVlZDdiMjc1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-24T20:48:21Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-24T20:46:54Z"
      },
      "message": "bench: Start nodes with -nodebuglogfile",
      "tree": {
        "sha": "3a492d6528437403fd51a916c868fbafb450ad57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a492d6528437403fd51a916c868fbafb450ad57"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fabe44e8154a6068d6cba91ec30f00345ed7b275",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhWDgv+JbtbtRWU4fJJ584mNl9CtyLqO8Tf6nR4e+lObbhyz+7D42bnmetBivtB\naU2rPmbvK7kZH5tPuVjzRrFfMJxwzCD9ZsPM3RnpeR1RM3TF3sQne2B/lRbNGgh+\nTjqiXxD3LcBft5EYy3x9Mw3kYQPORVQdqhYMlBM3nLnhJVhasdzUIcI3KnwKSL9m\nl+J0bA0GWszbg2AlMCUzlhoDhvj0V9m2owk+c1CBaGJ4p1HucXvXDJDMuuzUzPYk\nIAUWLAu7FvUyRtXmYYOSzsqLKFMhbo+ivwfT4E1EoiEhtFh2LeibnFH/qo7fi3ow\neyUD3F8EEcygsDRXYccWZz8A2PG/9PYlj/zbxbZ+hqEjJoYFiizllkblkWmX3+0t\n8vdOxthpAe2PbNRWpsYns5bZc+8ti77Bld+2R9mqKU9qV8sQkoPGJb+8TIi4vZuZ\nRy3NlmO3RX8E3UOc/Ehe2YQVt9+HdnAqxH/gy0LK1lEYeUymtjcZXJBP81OO1aKG\nz2QEjNj4\n=k7Eg\n-----END PGP SIGNATURE-----",
        "payload": "tree 3a492d6528437403fd51a916c868fbafb450ad57\nparent 8c0f86f284408f316e27702510733289a6a139e7\nauthor MarcoFalke <falke.marco@gmail.com> 1587761301 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1587761214 -0400\n\nbench: Start nodes with -nodebuglogfile\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabe44e8154a6068d6cba91ec30f00345ed7b275",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fabe44e8154a6068d6cba91ec30f00345ed7b275",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabe44e8154a6068d6cba91ec30f00345ed7b275/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8c0f86f284408f316e27702510733289a6a139e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c0f86f284408f316e27702510733289a6a139e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c0f86f284408f316e27702510733289a6a139e7"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 33,
      "deletions": 7
    },
    "files": [
      {
        "sha": "268f67cadafde92ab488a7e52bb125f7d2f2e159",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabe44e8154a6068d6cba91ec30f00345ed7b275/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabe44e8154a6068d6cba91ec30f00345ed7b275/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=fabe44e8154a6068d6cba91ec30f00345ed7b275",
        "patch": "@@ -16,7 +16,14 @@\n \n static void AssembleBlock(benchmark::State& state)\n {\n-    RegTestingSetup test_setup;\n+    TestingSetup test_setup{\n+        CBaseChainParams::REGTEST,\n+        /* extra_args */ {\n+            \"-nodebuglogfile\",\n+            \"-nodebug\",\n+        },\n+    };\n+\n     const std::vector<unsigned char> op_true{OP_TRUE};\n     CScriptWitness witness;\n     witness.stack.push_back(op_true);"
      },
      {
        "sha": "e87f15042bb318301dfbda6617c9a36f343a6e20",
        "filename": "src/bench/duplicate_inputs.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabe44e8154a6068d6cba91ec30f00345ed7b275/src/bench/duplicate_inputs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabe44e8154a6068d6cba91ec30f00345ed7b275/src/bench/duplicate_inputs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/duplicate_inputs.cpp?ref=fabe44e8154a6068d6cba91ec30f00345ed7b275",
        "patch": "@@ -14,7 +14,13 @@\n \n static void DuplicateInputs(benchmark::State& state)\n {\n-    RegTestingSetup test_setup;\n+    TestingSetup test_setup{\n+        CBaseChainParams::REGTEST,\n+        /* extra_args */ {\n+            \"-nodebuglogfile\",\n+            \"-nodebug\",\n+        },\n+    };\n \n     const CScript SCRIPT_PUB{CScript(OP_TRUE)};\n "
      },
      {
        "sha": "69483f29148f13a1837deddc6318f48d307215d2",
        "filename": "src/bench/mempool_eviction.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabe44e8154a6068d6cba91ec30f00345ed7b275/src/bench/mempool_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabe44e8154a6068d6cba91ec30f00345ed7b275/src/bench/mempool_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_eviction.cpp?ref=fabe44e8154a6068d6cba91ec30f00345ed7b275",
        "patch": "@@ -16,16 +16,22 @@ static void AddTx(const CTransactionRef& tx, const CAmount& nFee, CTxMemPool& po\n     unsigned int sigOpCost = 4;\n     LockPoints lp;\n     pool.addUnchecked(CTxMemPoolEntry(\n-                                         tx, nFee, nTime, nHeight,\n-                                         spendsCoinbase, sigOpCost, lp));\n+        tx, nFee, nTime, nHeight,\n+        spendsCoinbase, sigOpCost, lp));\n }\n \n // Right now this is only testing eviction performance in an extremely small\n // mempool. Code needs to be written to generate a much wider variety of\n // unique transactions for a more meaningful performance measurement.\n static void MempoolEviction(benchmark::State& state)\n {\n-    RegTestingSetup test_setup;\n+    TestingSetup test_setup{\n+        CBaseChainParams::REGTEST,\n+        /* extra_args */ {\n+            \"-nodebuglogfile\",\n+            \"-nodebug\",\n+        },\n+    };\n \n     CMutableTransaction tx1 = CMutableTransaction();\n     tx1.vin.resize(1);"
      },
      {
        "sha": "810c344ab5e6b6d7b26a7e737753b70098e72aa6",
        "filename": "src/bench/wallet_balance.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabe44e8154a6068d6cba91ec30f00345ed7b275/src/bench/wallet_balance.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabe44e8154a6068d6cba91ec30f00345ed7b275/src/bench/wallet_balance.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/wallet_balance.cpp?ref=fabe44e8154a6068d6cba91ec30f00345ed7b275",
        "patch": "@@ -14,7 +14,14 @@\n \n static void WalletBalance(benchmark::State& state, const bool set_dirty, const bool add_watchonly, const bool add_mine)\n {\n-    RegTestingSetup test_setup;\n+    TestingSetup test_setup{\n+        CBaseChainParams::REGTEST,\n+        /* extra_args */ {\n+            \"-nodebuglogfile\",\n+            \"-nodebug\",\n+        },\n+    };\n+\n     const auto& ADDRESS_WATCHONLY = ADDRESS_BCRT1_UNSPENDABLE;\n \n     NodeContext node;\n@@ -25,7 +32,7 @@ static void WalletBalance(benchmark::State& state, const bool set_dirty, const b\n         bool first_run;\n         if (wallet.LoadWallet(first_run) != DBErrors::LOAD_OK) assert(false);\n     }\n-    auto handler = chain->handleNotifications({ &wallet, [](CWallet*) {} });\n+    auto handler = chain->handleNotifications({&wallet, [](CWallet*) {}});\n \n     const Optional<std::string> address_mine{add_mine ? Optional<std::string>{getnewaddress(wallet)} : nullopt};\n     if (add_watchonly) importaddress(wallet, ADDRESS_WATCHONLY);"
      }
    ]
  }
]