[
  {
    "sha": "a206b0ea12eb4606b93323268fc81a4f1f952531",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMjA2YjBlYTEyZWI0NjA2YjkzMzIzMjY4ZmM4MWE0ZjFmOTUyNTMx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-02-17T16:58:02Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-03-03T17:26:36Z"
      },
      "message": "Do not allow overwriting unspent transactions (BIP 30)\n\nIntroduce the following network rule:\n * a block is not valid if it contains a transaction whose hash\n   already exists in the block chain, unless all that transaction's\n   outputs were already spent before said block.\n\nWarning: this is effectively a network rule change, with potential\nrisk for forking the block chain. Leaving this unfixed carries the\nsame risk however, for attackers that can cause a reorganisation\nin part of the network.\n\nThanks to Russell O'Connor and Ben Reeves.",
      "tree": {
        "sha": "9691c6cfc013c7efb7692502a5f43b283ba6e42a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9691c6cfc013c7efb7692502a5f43b283ba6e42a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a206b0ea12eb4606b93323268fc81a4f1f952531",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a206b0ea12eb4606b93323268fc81a4f1f952531",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a206b0ea12eb4606b93323268fc81a4f1f952531",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a206b0ea12eb4606b93323268fc81a4f1f952531/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "50abb5516da51fc518fe363bd445afbab70c71ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50abb5516da51fc518fe363bd445afbab70c71ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50abb5516da51fc518fe363bd445afbab70c71ec"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 24,
      "deletions": 2
    },
    "files": [
      {
        "sha": "20aa069a79310042e232b064762c254fde2a3f4f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 2,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a206b0ea12eb4606b93323268fc81a4f1f952531/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a206b0ea12eb4606b93323268fc81a4f1f952531/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a206b0ea12eb4606b93323268fc81a4f1f952531",
        "patch": "@@ -976,8 +976,10 @@ bool CTransaction::DisconnectInputs(CTxDB& txdb)\n     }\n \n     // Remove transaction from index\n-    if (!txdb.EraseTxIndex(*this))\n-        return error(\"DisconnectInputs() : EraseTxPos failed\");\n+    // This can fail if a duplicate of this transaction was in a chain that got\n+    // reorganized away. This is only possible if this transaction was completely\n+    // spent, so erasing it would be a no-op anway.\n+    txdb.EraseTxIndex(*this);\n \n     return true;\n }\n@@ -1256,6 +1258,26 @@ bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex)\n     if (!CheckBlock())\n         return false;\n \n+    // Do not allow blocks that contain transactions which 'overwrite' older transactions,\n+    // unless those are already completely spent.\n+    // If such overwrites are allowed, coinbases and transactions depending upon those\n+    // can be duplicated to remove the ability to spend the first instance -- even after\n+    // being sent to another address.\n+    // See BIP30 and http://r6.ca/blog/20120206T005236Z.html for more information.\n+    // This logic is not necessary for memory pool transactions, as AcceptToMemoryPool\n+    // already refuses previously-known transaction id's entirely.\n+    // This rule applies to all blocks whose timestamp is after March 15, 2012, 0:00 UTC.\n+    // On testnet it is enabled as of februari 20, 2012, 0:00 UTC.\n+    if (pindex->nTime > 1331769600 || (fTestNet && pindex->nTime > 1329696000))\n+        BOOST_FOREACH(CTransaction& tx, vtx)\n+        {\n+            CTxIndex txindexOld;\n+            if (txdb.ReadTxIndex(tx.GetHash(), txindexOld))\n+                BOOST_FOREACH(CDiskTxPos &pos, txindexOld.vSpent)\n+                    if (pos.IsNull())\n+                        return false;\n+        }\n+\n     // To avoid being on the short end of a block-chain split,\n     // don't do secondary validation of pay-to-script-hash transactions\n     // until blocks with timestamps after paytoscripthashtime (see init.cpp for default)."
      }
    ]
  }
]