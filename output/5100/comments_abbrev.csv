theuni,2014-10-18T01:25:12Z,"Missing some files.\n\nAny reason not to go ahead and move CTxOutCompressor/CTxInUndo/CTxUndo while you're at it, as discussed on IRC?\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59594458,59594458,
jtimon,2014-10-18T02:22:55Z,"Ok, I'll do a more complete PR, closing for now.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59596042,59596042,
sipa,2014-10-18T02:33:59Z,"- Can you move CTxOutCompressor either along with CTransaction (it doesn't depend on anything block, right?), or directly to coins.h.\n- Can you move the remaining part to a coins/block.h? coins.h and coins/transaction.h is a bit strange.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59596317,59596317,
jtimon,2014-10-18T04:04:15Z,1) I don't want to put compressor in core/transaction since script/interpreter doesn't need it.\n2) undotx depends on txcompressor but not on the rest of coins.o\n\nThat means txcompressor goes on its own (maybe take script/compressor with it?)\n\n3) I don't like to have compressor in chain\n4) I don't want to be responsible for putting more stuff in main\n\nDoes that mean txundo goes on its own a,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59598243,59598243,
gmaxwell,2014-10-18T04:13:35Z,"logically the compressor stuff is part of coins-- its the fancy, locally specific highly compressed seralization used only in the utxo set representation.   Is there any reason it can't just go into coins.cpp/coins.h?\n\nUndo seem logically best placed with chain.\*  though it's a bit different since undo data (like the compressor) is only locally significant, most of chain.\* is actually locally ",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59598446,59598446,
jtimon,2014-10-18T04:15:30Z,"Never mind, coins.o also depends on CTxInUndo so they both belong in their own files.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59598481,59598481,
jtimon,2014-10-18T17:26:08Z,"> logically the compressor stuff is part of coins-- its the fancy, locally\n> specific highly compressed seralization used only in the utxo set\n> representation. Is there any reason it can't just go into coins.cpp/coins.h?\n> \n> Txundo depends on it but not in the rest of coins. \n> @theuni also mentioned that moving it to coins caused a circular dependency\n> with main.\n> Additionally, script/",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59622523,59622523,
jtimon,2014-10-18T17:34:52Z,"Oh, and coins depends on CTxInUndo but not in chain or main.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59622813,59622813,
jtimon,2014-10-18T18:11:29Z,"Mhmm, blockundo can get out of main too.\nShould txundo and blockundo go together in undo.h or each separated (ie undotx and undoblock) so that coins doesn't have to include undoblock ?\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59624034,59624034,
sipa,2014-10-18T18:18:25Z,"So undo data (CTxInUndo, CTxUndo, CBlockUndo) is is not directly depended on by chain, but CBlockIndex (in chain) contains references to where undo data is on disk, which makes it sort-of related. I'm fine with a separate file too.\n\nTo avoid coins from depending on undo (or chain), CCoins::Spend could become a method (or function) on CTxInUndo. I think that method doesn't logically belong in coi",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59624246,59624246,
jtimon,2014-10-18T18:35:29Z,"Ok, so here's the plan:\n1) Decouple coins from undo as suggested by @sipa\n2) Move txundo to undo\n3) Move TxCompressor and script/compressor to coins\n4) Move blockundo to undo \n\nI also want to decouple txout from feerate and move it out of core/transaction (to policy/fee ?) but I'll leave that for a later PR.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59624793,59624793,
sipa,2014-10-19T08:09:42Z,Can you move CBlockUndo to undo as well?\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59642774,59642774,
Diapolo,2014-10-19T10:50:50Z,"Suggestion: After this is confirmed to be move-only etc. create a last pull, which does the clang-formatting!?\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59646029,59646029,
jtimon,2014-10-20T02:08:24Z,"I ended up starting with moving  CFeeRate and the Amount constants to amount.o so I had to rebase and I included the nits. I added a last clang commit as suggested.\nCBlockUndo depends on CDiskBlockPos, so I'll leave that for another PR.\nThere's something that is not purely move-only, so someone reviewing the move-only should notice.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59676110,59676110,
sipa,2014-10-20T02:54:26Z,An alternative would be moving the undo stuff to chain.h (it's about auxiliary data about chain validation). I prefer to have all undo stuff together :)\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59678307,59678307,
theuni,2014-10-21T17:35:18Z,Agree with the changes in general. Might be easier to drop the Amount change from here and do that as a separate pull. I'll verify the code movement if/when there are a few more ACKs.\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59966058,59966058,
jtimon,2014-10-21T19:41:41Z,"I think the Amount constants belong in amount.\nDoing the Amount change here makes the PR more readable IMO, since otherwise you would move CFeeRate to core/transaction only to move it later to amount.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59986071,59986071,
jtimon,2014-10-21T19:56:39Z,Fixed alphabetial nits. Since nobody had verified the moveonly and clang changes yet I just rebased instead of piling up nit commits. \n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-59988257,59988257,
theuni,2014-10-22T23:13:09Z,"Verified move-only with one exception:\n\n```\n-static const int64_t COIN = 100000000;\n-static const int64_t CENT = 1000000;\n+static const CAmount COIN = 100000000;\n+static const CAmount CENT = 1000000;\n```\n\nThat seems fine to me, any reason it wasn't done already?\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60170727,60170727,
theuni,2014-10-22T23:14:09Z,clang changes verified as well. Note that some objects aren't exactly equal because assert line-numbers changed.\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60170809,60170809,
jtimon,2014-10-22T23:53:21Z,"Great, thanks for verifying. Yes, those two int64_t -> CAmount were the non-move-only changes. Apparently they got missed in #4234.\nRe: misplaced squash? Probably, I rebased this too many times I guess.\nSadly I have to rebase and the verification becomes outdated, but I can fix the CFeeRate::ToString() leak.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60174163,60174163,
theuni,2014-10-22T23:56:06Z,"Go ahead, I've got your branch cached. I can just verify that it remains identical to your new push.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60174405,60174405,
jtimon,2014-10-23T00:12:36Z,Rebased solving the CFeeRate::ToString() mistake.\nReady for verification again.\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60175752,60175752,
theuni,2014-10-23T00:21:28Z,"Heh, rebasing on top of master kinda defeats the purpose :p. I re-did the rebase locally though, and the diff is clean.\n\nVerified move-only.\n\nEdit: spoke too soon, looks like the rebase on master caused a build problem.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60176435,60176435,
jtimon,2014-10-23T00:53:24Z,I needed to rebase on top of master due to some minor include conflicts.\nThen I needed to fix some missing includes: git is smart but not enough to figure includes by itself.\nThe latest couple of commits should solve it.\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60178660,60178660,
theuni,2014-10-23T04:27:30Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60191393,60191393,
sipa,2014-10-27T12:10:50Z,"The clang fix included here makes the result much harder to review. Can you remove that? We'll do the clang fixes all at once before release, without mixing it with other changes. Sorry, @Diapolo - we'll get to it!\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60583280,60583280,
sipa,2014-10-27T12:14:01Z,"Also, feel free to rebase & squash. As long as all commits are move-only, it's easy to check with git diff merge~:src..merge:dest.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60583636,60583636,
jtimon,2014-10-27T12:57:40Z,Left the clang change out. Not sure if it's worth it to make a separate PR though. Aren't we applying clang to everything just before 0.10 ?\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60588124,60588124,
sipa,2014-10-27T13:00:05Z,"@jtimon yes, that's what I meant - let's not bother with clang fixes now, as we'll do it all at once right before the 0.10 release.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60588375,60588375,
sipa,2014-10-27T13:08:19Z,ACK - verified move-only. Do you plan on moving CBlockUndo to undo.h as well (after turning its read/write methods into main.cpp functions) ?\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60589291,60589291,
jtimon,2014-10-27T13:11:50Z,sipa Since too many of my open PRs depend this I plan to do that in a later PR.\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60589690,60589690,
sipa,2014-10-27T13:12:33Z,"Sure, a later PR sounds good.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60589762,60589762,
jtimon,2014-10-27T15:19:31Z,"Done, CBlockUndo is moved to undo.h as part of #5111.\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60610250,60610250,
TheBlueMatt,2014-10-27T23:01:42Z,```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nACK commithash 99f41b9cf7b8e039cea75500a905498a1f6969f3 (-trailing space)\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAEBAgAGBQJUTs7GAAoJEIm7uGY+LmXOSsYP/2iM4ZuhSAowA7brZAwrzJCE\nYvuhbiY5pVS0OyRtiudWpsHhmQVhB/Be19+YltOZduNo8fAPVRJ68yL/Y8fIlXAQ\nljy/UTNRMlbqKZB9I2W87VHP0aTZy7XlPlVwMP60JjOtXkNVVNzDh19Kytf2ukKP\nlEWo3UcxM2LTpI1YmXQx,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60684936,60684936,
sipa,2014-10-28T08:19:10Z,@laanwj comments?\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60722242,60722242,
laanwj,2014-10-28T12:07:14Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-60745337,60745337,
luke-jr,2014-10-30T01:35:29Z,"```\n$ git pull\nremote: Counting objects: 255, done.\nremote: Compressing objects: 100% (163/163), done.\nremote: Total 255 (delta 131), reused 149 (delta 92)\nReceiving objects: 100% (255/255), 385.22 KiB | 62.00 KiB/s, done.\nResolving deltas: 100% (131/131), done.\nFrom git://github.com/bitcoin/bitcoin\n   2ffdf21..723c752  master     -> origin/master\nUpdating 2ffdf21..723c752\nerror: The fol",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-61033400,61033400,
gmaxwell,2014-10-30T01:38:29Z,On Unix-like systems core is a semi-magical file name since coredumps get written to it.\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-61033639,61033639,
jtimon,2014-10-30T10:56:26Z,"I suspect this wouldn't be a problem if we didn't had executables at /src but...\nWhat about ""datatypes"", ""core_structs"", ""serializable"" or something along these lines?\nWe should have bikeshed before but we need to do it now as well...\n",https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-61074539,61074539,
luke-jr,2014-10-30T11:20:24Z,datatypes +1\n,https://github.com/bitcoin/bitcoin/pull/5100#issuecomment-61077035,61077035,
Diapolo,2014-10-18T19:52:46Z,Nit: Why only 2013?\n,https://github.com/bitcoin/bitcoin/pull/5100#discussion_r19055939,19055939,src/txcompressor.cpp
Diapolo,2014-10-18T19:53:13Z,Same here :).\n,https://github.com/bitcoin/bitcoin/pull/5100#discussion_r19055945,19055945,src/txcompressor.h
Diapolo,2014-10-18T19:53:30Z,And here ^^.\n,https://github.com/bitcoin/bitcoin/pull/5100#discussion_r19055948,19055948,src/undo.h
jtimon,2014-10-19T07:46:04Z,This is annoying. If you fix that in the whole project I will ACK.\n,https://github.com/bitcoin/bitcoin/pull/5100#discussion_r19058459,19058459,src/undo.h
sipa,2014-10-19T07:59:00Z,"ACK, me too.\n",https://github.com/bitcoin/bitcoin/pull/5100#discussion_r19058679,19058679,src/undo.h
Diapolo,2014-10-19T10:37:07Z,Nit: Rename and edit end comment?\n,https://github.com/bitcoin/bitcoin/pull/5100#discussion_r19059319,19059319,src/core/block.h
Diapolo,2014-10-19T10:38:50Z,"I'm currently not going to add anymore pulls to this project, as I want to see how code looks like if no cleanup pulls are made, which (speaking of my pulls) only cause controversial discussions on uncontroversial changes. That said I only watch for such things and give nits/comments.\n",https://github.com/bitcoin/bitcoin/pull/5100#discussion_r19059336,19059336,src/undo.h
Diapolo,2014-10-19T10:40:56Z,"I also like these :), but don't understand why no one is yelling, when you do `whitespace` changes.\n",https://github.com/bitcoin/bitcoin/pull/5100#discussion_r19059347,19059347,src/core/transaction.h
TheBlueMatt,2014-10-27T22:59:41Z,You have a trailing space here.\n,https://github.com/bitcoin/bitcoin/pull/5100#discussion_r19443779,19443779,src/undo.h
