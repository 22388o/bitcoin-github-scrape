laanwj,2016-10-04T09:11:32Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-251335722,251335722,
sipa,2016-10-04T12:35:56Z,Concept ACK. Maybe add a comment that signrawtransaction can be removed from this list if it's ever split into a wallet call and a utility call.\n,https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-251375338,251375338,
achow101,2016-10-04T12:38:01Z,"If we're adding privkey stuff here, then `signmessagewithprivkey` needs to be added.\n\nWon't those commands not show up in history? I think it should at least show that the command happened.\n",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-251375746,251375746,
paveljanik,2016-10-04T13:55:22Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-251394621,251394621,
luke-jr,2016-10-04T14:10:01Z,"@sipa If `signrawtransaction` is split, there will likely still be users trying to use the old usage for at least one release, so I'm not sure it makes sense to remove it from the filter, at least not at the same time?\n\n@achow101 I agree it would be better to add dummy history items, but comments on previous PRs seem to suggest that is a source of disagreement.\n\nAdded `signmessagewithprivkey` ",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-251398827,251398827,
achow101,2016-10-04T14:22:42Z,"@luke-jr instead of masking out the arguments as I did in my PR, what if you just added the command name to the history. Since all the commands pass through that filter method, you could have it return the string that goes into the history. For non-filtered commands, it returns the command itself. For filtered ones, it just returns the command name.\n",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-251402635,251402635,
laanwj,2016-10-04T15:30:27Z,"> Instead of masking out the arguments as I did in my PR, what if you just added the command name to the history. \n\nWould work for me. My main comment on doing it @achow101 's way with masking individual arguments is just that that is too brittle and hard to maintain. If having just the command name to the history is useful in any way, which I doubt a bit with the incredible autocompletion that ",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-251423346,251423346,
luke-jr,2016-10-04T15:38:26Z,"I consider it useful to have _any_ placeholder in history, since otherwise one might &lt;up>-&lt;enter> and get the second-to-last execution instead. At least with a dummy placeholder, they get an error/help.\n",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-251425752,251425752,
jonasschnelli,2016-10-09T08:19:51Z,"1. The passphrase is still visible in the console as executing command when calling `walletpassphrase` (should this be done in a different pull request?)\n2. Nested commands makes this a little bit more complex. Executing ""a dump"" `getnewaddress(walletpassphrase(test))` results in executing `walletpassphrase(test)` but actually not ""hiding"" the passphrase from the history.\n\n<img width=""992"" alt=",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-252472305,252472305,
luke-jr,2016-11-16T12:40:53Z,"Rebased and taught it to handle nested commands. When a filtered command is encountered, all its parameters are replaced with ""(â€¦)"" in the command history. Unit tests now check this.\n",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-260936683,260936683,
jonasschnelli,2016-11-22T14:42:42Z,"Tested a bit.\nNeeds coverage for `importmulti` now.",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-262258231,262258231,
jonasschnelli,2017-01-03T08:35:13Z,Looks good. Squash/combine some commits?,https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-270068991,270068991,
luke-jr,2017-01-03T14:39:37Z,"Rather not squash... They look reasonably logical progression, and squashing is a bad practice anyway.",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-270128047,270128047,
jonasschnelli,2017-01-03T15:19:44Z,Tested ACK 8562792095a78fdef2dacc3c5e32c41206df4c87,https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-270137483,270137483,
btcdrak,2017-01-03T15:55:21Z,Tested ACK 8562792095a78fdef2dacc3c5e32c41206df4c87,https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-270146697,270146697,
paveljanik,2017-01-03T21:55:45Z,"`Wshadow` statistics: \n   1 qt/rpcconsole.cpp:173:56: warning: declaration shadows a local variable [-Wshadow]\n\n```\nqt/rpcconsole.cpp:173:56: warning: declaration shadows a local variable [-Wshadow]\n    auto add_to_current_stack = [&](const std::string& curarg) {\n                                                       ^\nqt/rpcconsole.cpp:167:17: note: previous declaration is here\n  ",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-270236224,270236224,
luke-jr,2017-01-04T14:48:33Z,@paveljanik That looks like a bug in the compiler?,https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-270387714,270387714,
paveljanik,2017-01-05T19:48:40Z,Why do you think so? It is clear that `curarg` inside the block shadows `curarg` outside.,https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-270739372,270739372,
jonasschnelli,2017-01-05T19:57:32Z,@paveljanik: Maybe write a fix PR?,https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-270741496,270741496,
luke-jr,2017-01-05T21:38:53Z,"@paveljanik It's a different scope, and lambda functions do not inherit the scope of the calling function beyond what you tell it to.",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-270765108,270765108,
sipa,2017-01-05T21:41:41Z,"@luke-jr Not by default, but your lambda has capture list `[&]`, which means it does capture everything.",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-270765744,270765744,
luke-jr,2017-01-06T00:43:02Z,I thought `[&]` was only supposed to capture stuff actually referenced?,https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-270800403,270800403,
sipa,2017-01-06T00:47:36Z,"@luke-jr Well, yes. But if -Wshadow wants to catch potential errors resulting from variables being identically named, it should absolutely catch this.",https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-270801160,270801160,
paveljanik,2017-01-09T13:23:03Z,@luke-jr What name do you want me to use inside lambda instead of `curarg`? `strArg`?,https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-271282887,271282887,
luke-jr,2017-01-09T17:22:34Z,Sure,https://github.com/bitcoin/bitcoin/pull/8877#issuecomment-271346856,271346856,
jonasschnelli,2016-11-22T14:34:15Z,nit: newline,https://github.com/bitcoin/bitcoin/pull/8877#discussion_r89126900,89126900,src/qt/rpcconsole.cpp
luke-jr,2016-11-22T23:36:57Z,?,https://github.com/bitcoin/bitcoin/pull/8877#discussion_r89234026,89234026,src/qt/rpcconsole.cpp
