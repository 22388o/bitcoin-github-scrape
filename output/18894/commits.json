[
  {
    "sha": "a8b5f1b133d4f23975a3fbfb7a415b17261466ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGI1ZjFiMTMzZDRmMjM5NzVhM2ZiZmI3YTQxNWIxNzI2MTQ2NmVl",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-05-05T22:56:21Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-05-05T22:56:21Z"
      },
      "message": "gui: Fix manual coin control with multiple wallets loaded",
      "tree": {
        "sha": "136912f1ccc5884530521cbe689a338849ac5373",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/136912f1ccc5884530521cbe689a338849ac5373"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8b5f1b133d4f23975a3fbfb7a415b17261466ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8b5f1b133d4f23975a3fbfb7a415b17261466ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a8b5f1b133d4f23975a3fbfb7a415b17261466ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8b5f1b133d4f23975a3fbfb7a415b17261466ee/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fbd522721cb89ef0efea0c1bc912c00b268d1c2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbd522721cb89ef0efea0c1bc912c00b268d1c2a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fbd522721cb89ef0efea0c1bc912c00b268d1c2a"
      }
    ],
    "stats": {
      "total": 112,
      "additions": 45,
      "deletions": 67
    },
    "files": [
      {
        "sha": "bb8490d73d0696958fc9791d551ea713f0ee31c1",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 31,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8b5f1b133d4f23975a3fbfb7a415b17261466ee/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8b5f1b133d4f23975a3fbfb7a415b17261466ee/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=a8b5f1b133d4f23975a3fbfb7a415b17261466ee",
        "patch": "@@ -41,10 +41,11 @@ bool CCoinControlWidgetItem::operator<(const QTreeWidgetItem &other) const {\n     return QTreeWidgetItem::operator<(other);\n }\n \n-CoinControlDialog::CoinControlDialog(const PlatformStyle *_platformStyle, QWidget *parent) :\n+CoinControlDialog::CoinControlDialog(CCoinControl& coin_control, WalletModel* _model, const PlatformStyle *_platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::CoinControlDialog),\n-    model(nullptr),\n+    m_coin_control(coin_control),\n+    model(_model),\n     platformStyle(_platformStyle)\n {\n     ui->setupUi(this);\n@@ -136,6 +137,13 @@ CoinControlDialog::CoinControlDialog(const PlatformStyle *_platformStyle, QWidge\n         sortView(settings.value(\"nCoinControlSortColumn\").toInt(), (static_cast<Qt::SortOrder>(settings.value(\"nCoinControlSortOrder\").toInt())));\n \n     GUIUtil::handleCloseWindowShortcut(this);\n+\n+    if(_model->getOptionsModel() && _model->getAddressTableModel())\n+    {\n+        updateView();\n+        updateLabelLocked();\n+        CoinControlDialog::updateLabels(m_coin_control, _model, this);\n+    }\n }\n \n CoinControlDialog::~CoinControlDialog()\n@@ -148,18 +156,6 @@ CoinControlDialog::~CoinControlDialog()\n     delete ui;\n }\n \n-void CoinControlDialog::setModel(WalletModel *_model)\n-{\n-    this->model = _model;\n-\n-    if(_model && _model->getOptionsModel() && _model->getAddressTableModel())\n-    {\n-        updateView();\n-        updateLabelLocked();\n-        CoinControlDialog::updateLabels(_model, this);\n-    }\n-}\n-\n // ok button\n void CoinControlDialog::buttonBoxClicked(QAbstractButton* button)\n {\n@@ -185,8 +181,8 @@ void CoinControlDialog::buttonSelectAllClicked()\n                 ui->treeWidget->topLevelItem(i)->setCheckState(COLUMN_CHECKBOX, state);\n     ui->treeWidget->setEnabled(true);\n     if (state == Qt::Unchecked)\n-        coinControl()->UnSelectAll(); // just to be sure\n-    CoinControlDialog::updateLabels(model, this);\n+        m_coin_control.UnSelectAll(); // just to be sure\n+    CoinControlDialog::updateLabels(m_coin_control, model, this);\n }\n \n // context menu\n@@ -371,15 +367,15 @@ void CoinControlDialog::viewItemChanged(QTreeWidgetItem* item, int column)\n         COutPoint outpt(uint256S(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()), item->data(COLUMN_ADDRESS, VOutRole).toUInt());\n \n         if (item->checkState(COLUMN_CHECKBOX) == Qt::Unchecked)\n-            coinControl()->UnSelect(outpt);\n+            m_coin_control.UnSelect(outpt);\n         else if (item->isDisabled()) // locked (this happens if \"check all\" through parent node)\n             item->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);\n         else\n-            coinControl()->Select(outpt);\n+            m_coin_control.Select(outpt);\n \n         // selection changed -> update labels\n         if (ui->treeWidget->isEnabled()) // do not update on every click for (un)select all\n-            CoinControlDialog::updateLabels(model, this);\n+            CoinControlDialog::updateLabels(m_coin_control, model, this);\n     }\n }\n \n@@ -396,7 +392,7 @@ void CoinControlDialog::updateLabelLocked()\n     else ui->labelLocked->setVisible(false);\n }\n \n-void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n+void CoinControlDialog::updateLabels(CCoinControl& m_coin_control, WalletModel *model, QDialog* dialog)\n {\n     if (!model)\n         return;\n@@ -428,7 +424,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     bool fWitness               = false;\n \n     std::vector<COutPoint> vCoinControl;\n-    coinControl()->ListSelected(vCoinControl);\n+    m_coin_control.ListSelected(vCoinControl);\n \n     size_t i = 0;\n     for (const auto& out : model->wallet().getCoins(vCoinControl)) {\n@@ -439,7 +435,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         const COutPoint& outpt = vCoinControl[i++];\n         if (out.is_spent)\n         {\n-            coinControl()->UnSelect(outpt);\n+            m_coin_control.UnSelect(outpt);\n             continue;\n         }\n \n@@ -492,7 +488,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n                 nBytes -= 34;\n \n         // Fee\n-        nPayFee = model->wallet().getMinimumFee(nBytes, *coinControl(), nullptr /* returned_target */, nullptr /* reason */);\n+        nPayFee = model->wallet().getMinimumFee(nBytes, m_coin_control, nullptr /* returned_target */, nullptr /* reason */);\n \n         if (nPayAmount > 0)\n         {\n@@ -584,12 +580,6 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         label->setVisible(nChange < 0);\n }\n \n-CCoinControl* CoinControlDialog::coinControl()\n-{\n-    static CCoinControl coin_control;\n-    return &coin_control;\n-}\n-\n void CoinControlDialog::updateView()\n {\n     if (!model || !model->getOptionsModel() || !model->getAddressTableModel())\n@@ -690,13 +680,13 @@ void CoinControlDialog::updateView()\n              // disable locked coins\n             if (model->wallet().isLockedCoin(output))\n             {\n-                coinControl()->UnSelect(output); // just to be sure\n+                m_coin_control.UnSelect(output); // just to be sure\n                 itemOutput->setDisabled(true);\n                 itemOutput->setIcon(COLUMN_CHECKBOX, platformStyle->SingleColorIcon(\":/icons/lock_closed\"));\n             }\n \n             // set checkbox\n-            if (coinControl()->IsSelected(output))\n+            if (m_coin_control.IsSelected(output))\n                 itemOutput->setCheckState(COLUMN_CHECKBOX, Qt::Checked);\n         }\n "
      },
      {
        "sha": "c4145c48a0e22fc4d0e998a9dd709a26854737aa",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8b5f1b133d4f23975a3fbfb7a415b17261466ee/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8b5f1b133d4f23975a3fbfb7a415b17261466ee/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=a8b5f1b133d4f23975a3fbfb7a415b17261466ee",
        "patch": "@@ -43,20 +43,18 @@ class CoinControlDialog : public QDialog\n     Q_OBJECT\n \n public:\n-    explicit CoinControlDialog(const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n+    explicit CoinControlDialog(CCoinControl& coin_control, WalletModel* model, const PlatformStyle *platformStyle, QWidget *parent = nullptr);\n     ~CoinControlDialog();\n \n-    void setModel(WalletModel *model);\n-\n     // static because also called from sendcoinsdialog\n-    static void updateLabels(WalletModel*, QDialog*);\n+    static void updateLabels(CCoinControl& m_coin_control, WalletModel*, QDialog*);\n \n     static QList<CAmount> payAmounts;\n-    static CCoinControl *coinControl();\n     static bool fSubtractFeeFromAmount;\n \n private:\n     Ui::CoinControlDialog *ui;\n+    CCoinControl& m_coin_control;\n     WalletModel *model;\n     int sortColumn;\n     Qt::SortOrder sortOrder;"
      },
      {
        "sha": "9e23fe78d8b1584a6e93ba7f9c091f0f2103ec11",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 31,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8b5f1b133d4f23975a3fbfb7a415b17261466ee/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8b5f1b133d4f23975a3fbfb7a415b17261466ee/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=a8b5f1b133d4f23975a3fbfb7a415b17261466ee",
        "patch": "@@ -57,6 +57,7 @@ SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *p\n     ui(new Ui::SendCoinsDialog),\n     clientModel(nullptr),\n     model(nullptr),\n+    m_coin_control(new CCoinControl),\n     fNewRecipientAllowed(true),\n     fFeeMinimized(true),\n     platformStyle(_platformStyle)\n@@ -259,14 +260,9 @@ bool SendCoinsDialog::PrepareSendText(QString& question_string, QString& informa\n     m_current_transaction = MakeUnique<WalletModelTransaction>(recipients);\n     WalletModel::SendCoinsReturn prepareStatus;\n \n-    // Always use a CCoinControl instance, use the CoinControlDialog instance if CoinControl has been enabled\n-    CCoinControl ctrl;\n-    if (model->getOptionsModel()->getCoinControlFeatures())\n-        ctrl = *CoinControlDialog::coinControl();\n+    updateCoinControlState(*m_coin_control);\n \n-    updateCoinControlState(ctrl);\n-\n-    prepareStatus = model->prepareTransaction(*m_current_transaction, ctrl);\n+    prepareStatus = model->prepareTransaction(*m_current_transaction, *m_coin_control);\n \n     // process prepareStatus and on error generate message shown to user\n     processSendCoinsReturn(prepareStatus,\n@@ -454,7 +450,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n     }\n     if (!send_failure) {\n         accept();\n-        CoinControlDialog::coinControl()->UnSelectAll();\n+        m_coin_control->UnSelectAll();\n         coinControlUpdateLabels();\n     }\n     fNewRecipientAllowed = true;\n@@ -466,7 +462,7 @@ void SendCoinsDialog::clear()\n     m_current_transaction.reset();\n \n     // Clear coin control settings\n-    CoinControlDialog::coinControl()->UnSelectAll();\n+    m_coin_control->UnSelectAll();\n     ui->checkBoxCoinControlChange->setChecked(false);\n     ui->lineEditCoinControlChange->clear();\n     coinControlUpdateLabels();\n@@ -689,17 +685,11 @@ void SendCoinsDialog::on_buttonMinimizeFee_clicked()\n \n void SendCoinsDialog::useAvailableBalance(SendCoinsEntry* entry)\n {\n-    // Get CCoinControl instance if CoinControl is enabled or create a new one.\n-    CCoinControl coin_control;\n-    if (model->getOptionsModel()->getCoinControlFeatures()) {\n-        coin_control = *CoinControlDialog::coinControl();\n-    }\n-\n     // Include watch-only for wallets without private key\n-    coin_control.fAllowWatchOnly = model->wallet().privateKeysDisabled();\n+    m_coin_control->fAllowWatchOnly = model->wallet().privateKeysDisabled();\n \n     // Calculate available amount to send.\n-    CAmount amount = model->wallet().getAvailableBalance(coin_control);\n+    CAmount amount = model->wallet().getAvailableBalance(*m_coin_control);\n     for (int i = 0; i < ui->entries->count(); ++i) {\n         SendCoinsEntry* e = qobject_cast<SendCoinsEntry*>(ui->entries->itemAt(i)->widget());\n         if (e && !e->isHidden() && e != entry) {\n@@ -758,12 +748,11 @@ void SendCoinsDialog::updateSmartFeeLabel()\n {\n     if(!model || !model->getOptionsModel())\n         return;\n-    CCoinControl coin_control;\n-    updateCoinControlState(coin_control);\n-    coin_control.m_feerate.reset(); // Explicitly use only fee estimation rate for smart fee labels\n+    updateCoinControlState(*m_coin_control);\n+    m_coin_control->m_feerate.reset(); // Explicitly use only fee estimation rate for smart fee labels\n     int returned_target;\n     FeeReason reason;\n-    CFeeRate feeRate = CFeeRate(model->wallet().getMinimumFee(1000, coin_control, &returned_target, &reason));\n+    CFeeRate feeRate = CFeeRate(model->wallet().getMinimumFee(1000, *m_coin_control, &returned_target, &reason));\n \n     ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), feeRate.GetFeePerK()) + \"/kB\");\n \n@@ -834,16 +823,15 @@ void SendCoinsDialog::coinControlFeatureChanged(bool checked)\n     ui->frameCoinControl->setVisible(checked);\n \n     if (!checked && model) // coin control features disabled\n-        CoinControlDialog::coinControl()->SetNull();\n+        m_coin_control->SetNull();\n \n     coinControlUpdateLabels();\n }\n \n // Coin Control: button inputs -> show actual coin control dialog\n void SendCoinsDialog::coinControlButtonClicked()\n {\n-    CoinControlDialog dlg(platformStyle);\n-    dlg.setModel(model);\n+    CoinControlDialog dlg(*m_coin_control, model, platformStyle);\n     dlg.exec();\n     coinControlUpdateLabels();\n }\n@@ -853,7 +841,7 @@ void SendCoinsDialog::coinControlChangeChecked(int state)\n {\n     if (state == Qt::Unchecked)\n     {\n-        CoinControlDialog::coinControl()->destChange = CNoDestination();\n+        m_coin_control->destChange = CNoDestination();\n         ui->labelCoinControlChangeLabel->clear();\n     }\n     else\n@@ -869,7 +857,7 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n     if (model && model->getAddressTableModel())\n     {\n         // Default to no change address until verified\n-        CoinControlDialog::coinControl()->destChange = CNoDestination();\n+        m_coin_control->destChange = CNoDestination();\n         ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n \n         const CTxDestination dest = DecodeDestination(text.toStdString());\n@@ -892,7 +880,7 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n                     QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n \n                 if(btnRetVal == QMessageBox::Yes)\n-                    CoinControlDialog::coinControl()->destChange = dest;\n+                    m_coin_control->destChange = dest;\n                 else\n                 {\n                     ui->lineEditCoinControlChange->setText(\"\");\n@@ -911,7 +899,7 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n                 else\n                     ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n \n-                CoinControlDialog::coinControl()->destChange = dest;\n+                m_coin_control->destChange = dest;\n             }\n         }\n     }\n@@ -923,7 +911,7 @@ void SendCoinsDialog::coinControlUpdateLabels()\n     if (!model || !model->getOptionsModel())\n         return;\n \n-    updateCoinControlState(*CoinControlDialog::coinControl());\n+    updateCoinControlState(*m_coin_control);\n \n     // set pay amounts\n     CoinControlDialog::payAmounts.clear();\n@@ -941,10 +929,10 @@ void SendCoinsDialog::coinControlUpdateLabels()\n         }\n     }\n \n-    if (CoinControlDialog::coinControl()->HasSelected())\n+    if (m_coin_control->HasSelected())\n     {\n         // actual coin control calculation\n-        CoinControlDialog::updateLabels(model, this);\n+        CoinControlDialog::updateLabels(*m_coin_control, model, this);\n \n         // show coin control stats\n         ui->labelCoinControlAutomaticallySelected->hide();"
      },
      {
        "sha": "e4b4464d1aace6e5138fc6726f2ac4522209b520",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8b5f1b133d4f23975a3fbfb7a415b17261466ee/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8b5f1b133d4f23975a3fbfb7a415b17261466ee/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=a8b5f1b133d4f23975a3fbfb7a415b17261466ee",
        "patch": "@@ -12,6 +12,7 @@\n #include <QString>\n #include <QTimer>\n \n+class CCoinControl;\n class ClientModel;\n class PlatformStyle;\n class SendCoinsEntry;\n@@ -60,6 +61,7 @@ public Q_SLOTS:\n     Ui::SendCoinsDialog *ui;\n     ClientModel *clientModel;\n     WalletModel *model;\n+    std::unique_ptr<CCoinControl> m_coin_control;\n     std::unique_ptr<WalletModelTransaction> m_current_transaction;\n     bool fNewRecipientAllowed;\n     bool fFeeMinimized;"
      }
    ]
  }
]