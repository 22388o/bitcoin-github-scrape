MarcoFalke,2020-09-06 12:26:00,"The genesis block has no effect on the utxo set, so the returned result is wrong",https://github.com/bitcoin/bitcoin/pull/19888#issuecomment-687776246,687776246,
fjahr,2020-09-06 23:44:03,"> The genesis block has no effect on the utxo set, so the returned result is wrong\n\nHeh, yeah, the whole RPC actually didn't deal with unspendables at all so far. I am fixing this with my latest changes, fixing the Genesis block but also BIP30 and unspendable outputs. I think the numbers make much more sense this way. I also needed to regenerate the test data because the witness commitment is ",https://github.com/bitcoin/bitcoin/pull/19888#issuecomment-687935999,687935999,
theStack,2020-09-12 14:43:26,"Concept ACK\nBoth enabling getblockstats to work with the genesis block and improving the accuracy of the utxo set statistics make big sense to me.",https://github.com/bitcoin/bitcoin/pull/19888#issuecomment-691500395,691500395,
DrahtBot,2020-10-02 01:13:41,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23545](https://github.com/bitcoin/bitcoin/pull/23545) (scripted-diff: Use clang-tidy syntax for C++ named arguments [WIP",https://github.com/bitcoin/bitcoin/pull/19888#issuecomment-702475912,702475912,
fjahr,2020-12-24 13:35:21,Addressed feedback comments. Thanks for reviewing and sorry for the long wait!,https://github.com/bitcoin/bitcoin/pull/19888#issuecomment-750885027,750885027,
fjahr,2021-04-11 19:12:24,"Finally got back to give this the attention it deserves. First of all, it is rebased. Then I followed some recommendation from @luke-jr which also let me to find some other issue.\n\nHere is a recap per commit to make it easier to understand what changed:\n\nc7ccc0731bae0f263cc9776072dad05462ec8af5: (unchanged) Refactors BIP30 logic into helper functions. This will also be helpful for #19521 w",https://github.com/bitcoin/bitcoin/pull/19888#issuecomment-817357528,817357528,
fjahr,2021-05-31 21:30:20,rebased,https://github.com/bitcoin/bitcoin/pull/19888#issuecomment-851691720,851691720,
fjahr,2021-08-24 22:15:35,"Rebased, fixed silent conflict, and added a commit using `IsBIP30Unspendable` to deduplicate the BIP30 code in `coinstatsindex`.\n\nEDIT: plus another push to fix typo in commit message",https://github.com/bitcoin/bitcoin/pull/19888#issuecomment-905013196,905013196,
fjahr,2021-09-09 23:23:25,rebased,https://github.com/bitcoin/bitcoin/pull/19888#issuecomment-916506900,916506900,
fjahr,2021-09-23 23:49:36,"rebased\n\nEdit: Hm, CI failure looks unrelated",https://github.com/bitcoin/bitcoin/pull/19888#issuecomment-926243981,926243981,
n-thumann,2020-09-05 22:47:11,"```suggestion\n        assert_equal(genesis_stats[""blockhash""], ""0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206"")\n```\nI would suggest making the check more strict by checking for the exact expected blockhash, not just the subsidy which is the same in the next blocks ✌️",https://github.com/bitcoin/bitcoin/pull/19888#discussion_r483997119,483997119,test/functional/rpc_getblockstats.py
fjahr,2020-09-05 22:59:41,done,https://github.com/bitcoin/bitcoin/pull/19888#discussion_r483997890,483997890,test/functional/rpc_getblockstats.py
promag,2020-09-05 23:35:58,Could early return before prune check?,https://github.com/bitcoin/bitcoin/pull/19888#discussion_r484000228,484000228,src/rpc/blockchain.cpp
fjahr,2020-09-06 11:20:26,"yepp, done!",https://github.com/bitcoin/bitcoin/pull/19888#discussion_r484056947,484056947,src/rpc/blockchain.cpp
luke-jr,2020-10-24 15:01:56,"With this change to the documented API, I think you'd better add a new field instead...",https://github.com/bitcoin/bitcoin/pull/19888#discussion_r511479305,511479305,src/rpc/blockchain.cpp
luke-jr,2020-10-24 15:03:53,It would be nice to abstract this to a block-aware `IsUnspendable` instead.,https://github.com/bitcoin/bitcoin/pull/19888#discussion_r511479837,511479837,src/rpc/blockchain.cpp
luke-jr,2020-10-24 15:05:06,Would be nice to test the other corner-case result values,https://github.com/bitcoin/bitcoin/pull/19888#discussion_r511480121,511480121,test/functional/rpc_getblockstats.py
laanwj,2020-12-17 17:57:01,"+1, it would be better not to  repeat this in multiple places",https://github.com/bitcoin/bitcoin/pull/19888#discussion_r545288515,545288515,src/rpc/blockchain.cpp
fjahr,2020-12-24 13:27:41,"Right, but it's a bit more complicated because these blocks' coinbases are not actually unspendable, they are the ones that overwrote the other previous coinbases aifaik. But I have refactored both of these out into helper functions that would also be helpful to me for Coinstatsindex. Let me know what you think about the naming, 'repeat' was the best I came up with.",https://github.com/bitcoin/bitcoin/pull/19888#discussion_r548530496,548530496,src/rpc/blockchain.cpp
fjahr,2020-12-24 13:31:25,Slightly would have preferred to just fix the existing values but I have now introduced new values with a *_actual naming scheme.,https://github.com/bitcoin/bitcoin/pull/19888#discussion_r548531395,548531395,src/rpc/blockchain.cpp
fjahr,2020-12-24 13:34:35,I am not sure if you had more values in mind (let me know) but I have added the old and new values that this PR touches.,https://github.com/bitcoin/bitcoin/pull/19888#discussion_r548532117,548532117,test/functional/rpc_getblockstats.py
luke-jr,2021-02-28 04:20:56,Can you retain the old test?,https://github.com/bitcoin/bitcoin/pull/19888#discussion_r584231101,584231101,test/functional/data/rpc_getblockstats.json
fjahr,2021-04-11 19:15:54,Done now in this particular commit but now need to regenerate it in another commit :-/,https://github.com/bitcoin/bitcoin/pull/19888#discussion_r611233476,611233476,test/functional/data/rpc_getblockstats.json
fjahr,2021-04-11 19:16:31,Added a test with an `OP_RETURN` output.,https://github.com/bitcoin/bitcoin/pull/19888#discussion_r611233534,611233534,test/functional/rpc_getblockstats.py
luke-jr,2021-08-13 01:26:42,Invisible conflict here. But nothing seems to use this function anyway...?,https://github.com/bitcoin/bitcoin/pull/19888#discussion_r688184164,688184164,src/validation.cpp
fjahr,2021-08-24 22:13:04,"Ah, thanks! I had initially planned to use this in `coinstatsindex` to simplify the code there but since I wrote this helper the code in the index has changed a lot and so now this is not helpful anymore and will be using `IsBIP30Unspendable` directly instead. So I removed this method now and added a commit solving the code dedublication Todo in `coinstatsindex`.",https://github.com/bitcoin/bitcoin/pull/19888#discussion_r695252877,695252877,src/validation.cpp
MarcoFalke,2021-08-26 08:35:34,"style-nit:\n\n```suggestion\nbool IsBIP30Repeat(const CBlockIndex& block_index)\n{\n```",https://github.com/bitcoin/bitcoin/pull/19888#discussion_r696415567,696415567,src/validation.cpp
fjahr,2021-08-26 09:30:30,done,https://github.com/bitcoin/bitcoin/pull/19888#discussion_r696459042,696459042,src/validation.cpp
