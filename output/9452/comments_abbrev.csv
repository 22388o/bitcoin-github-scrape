TheBlueMatt,2017-01-01T15:31:53Z,"Hmm, do we care about enforcing the listed copyright holders? As long as it appears in the MIT header, I'm not sure it matters all that much.\nAlso, would it be simple to enforce that all of the copyright date of files modified (according to git timestamp) after date X (ie ignore the issues from #9450) have the right copyright year on them?",https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-269907289,269907289,
isle2983,2017-01-01T18:29:54Z,"If we want it to not care about the holder's name, that would be simple to add in the regex. However, there are two side effects I can think of:\n\n1) It would then have to tolerate bad spelling/punctuation/capitalization.\n2) It would require some more sophisticated logic in the `update` part of the script to make sure that the last holder is the one that is incremented and not necessarily the",https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-269913822,269913822,
nomnombtc,2017-01-02T02:17:26Z,"> ... and hence requires an ACK from @nomnombtc\n\nSure whatever. ACK :)",https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-269929900,269929900,
laanwj,2017-01-02T08:27:12Z,"To be honest I'd prefer not to add to many of these extra bureaucratic rules to Travis. It's reason for existence is to test the code. If too many auxiliary checks are added it becomes too pesky it increases the chance people will just skip it and merge anyway, as sometimes something needs to be merged.\n\nCopyright is a grey area but please don't go on to add code style checks and such...\n",https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-269944158,269944158,
isle2983,2017-01-02T22:01:25Z,"Thanks @laanwj - getting your take is most important. Keeping header adjustments periodic and asynchronous is perfectly reasonable.\n\nThe script improvements here are still useful for assessing and fixing up the headers as they drift over time. I have re-submitted as #9459 with the CI part and 'enforcement' language taken out.\n\n> Copyright is a grey area but please don't go on to add code s",https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-270024811,270024811,
TheBlueMatt,2017-01-03T11:16:01Z,"@laanwj On the flip side, everything that travis enforces is one less thing we need to check in review...Obviously code style checks aren't coming anytime soon, but I think this is reasonable.",https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-270093844,270093844,
TheBlueMatt,2017-01-03T11:17:11Z,"Regarding code style: we're a long way from really enforcing anything regarding code style...would be cool if we could detect indentation errors (since those are likely to introduce real bugs, whereas other code style issues may or may not be as likely), but I'm not sure if we could do ONLY that with many tools.",https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-270094012,270094012,
MarcoFalke,2017-01-07T11:20:21Z,"Well, considering white space errors that caused bugs such as https://github.com/bitcoin/bitcoin/pull/9319#discussion_r95053851 or de8980df9d3a1fc0b257139cef10a0e6ba29a8bd, I think having an indicator that the touched code is clang formatted really makes sense. Some months ago I hacked up a script for travis, which fails when the new code is not formatted, but a failing travis is obviously not som",https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-271077648,271077648,
isle2983,2017-01-07T17:41:46Z,"I am not deeply familiar with Travis CI, but from looking at their docs there doesn't seem to be an obvious way to 'warn' instead of 'fail'.\n\nOne interesting thing in the docs is a workflow they discuss for coverity scans:\n\nhttps://docs.travis-ci.com/user/coverity-scan/#Build-Submission-Frequency\n\nSimilarly, we could have a collection of tools and corresponding side branches that do th",https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-271098074,271098074,
isle2983,2017-01-07T18:12:09Z,"Rebased. The conflict was in the files:\n\ncontrib/linearize/linearize-data.py\ncontrib/linearize/linearize-hashes.py\nshare/rpcuser/rpcuser.py\n\nFor three files, the conflict was with 27765b6403cece54320374b37afb01a0cfe571c3 which incremented the end year to 2016.\n\nFor linearize-data.py and linearize-hashes.py it *also* conflicted with 3c8f63ba7c7be62d462727f4d67633e1064f0f79 which cha",https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-271099947,271099947,
TheBlueMatt,2017-01-07T18:50:09Z,"Heh, #9487 is pretty much exactly what I was referring to that it'd be ideal to fix in https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-270094012.",https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-271102173,271102173,
MarcoFalke,2017-01-07T19:51:34Z,"It should be possible to hack something up with cpplint (c.f. https://github.com/google/styleguide/blob/b282a74fea1455f4648d7f3098c954cce46e3a8d/cpplint/cpplint.py#L246)\n",https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-271105792,271105792,
fanquake,2017-01-21T00:07:37Z,Closing this in favour of #9603. Enforcing copyright header styling (to a sub-tree level) is currently overkill.,https://github.com/bitcoin/bitcoin/pull/9452#issuecomment-274212672,274212672,
