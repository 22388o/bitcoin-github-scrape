DrahtBot,2020-05-28 21:16:22,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19092 (cli: display multiwallet total balance in -getinfo by jonatack)\n\nIf you consider this pull request important, pl",https://github.com/bitcoin/bitcoin/pull/19089#issuecomment-635612399,635612399,
hebasto,2020-06-05 12:08:11,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/19089#issuecomment-639442283,639442283,
jonatack,2020-06-05 17:52:37,"Thanks for reviewing, @hebasto! From what I can tell, it would be best to not change this (yet):\n\n- `ALLOW_BOOL` appears to be unused in the codebase, apart from `-rpcwhitelistdefault`\n- the change would have no effect on `-getinfo` command parsing behavior and tests\n- in the event that we move to using more specific flags and that this one needs to be changed, many commands will need to b",https://github.com/bitcoin/bitcoin/pull/19089#issuecomment-639666300,639666300,
hebasto,2020-06-05 17:59:56,"> Thanks for reviewing, @hebasto! From what I can tell, it would be best to not change this (yet):\n> \n>  - `ALLOW_BOOL` appears to be unused in the codebase, apart from `-rpcwhitelistdefault`\n> \n>  - the change would have no effect on `-getinfo` command parsing behavior and tests\n> \n>  - in the event that we move to using more specific flags and that this one needs to be changed, many ",https://github.com/bitcoin/bitcoin/pull/19089#issuecomment-639670452,639670452,
jonatack,2020-06-22 17:40:31,"Closing, will propose the changes one by one.",https://github.com/bitcoin/bitcoin/pull/19089#issuecomment-647675797,647675797,
MarcoFalke,2020-05-28 12:10:24,"```suggestion\nmode) and a wallet is not specified with `-rpcwallet`. (#18594)\n```",https://github.com/bitcoin/bitcoin/pull/19089#discussion_r431787288,431787288,doc/release-notes-18594.md
jonatack,2020-05-28 12:40:45,"thanks, done",https://github.com/bitcoin/bitcoin/pull/19089#discussion_r431804008,431804008,doc/release-notes-18594.md
luke-jr,2020-05-28 13:21:09,What is this supposed to improve?,https://github.com/bitcoin/bitcoin/pull/19089#discussion_r431829258,431829258,src/bitcoin-cli.cpp
jonatack,2020-05-28 14:42:04,"This is how `-rpcwallet` was parsed before (see diff in 7430775). I don't think it changes anything, but I mistakenly thought the same with respect to `-getinfo` before your feedback in that PR.",https://github.com/bitcoin/bitcoin/pull/19089#discussion_r431891526,431891526,src/bitcoin-cli.cpp
jonatack,2020-05-28 14:44:31,"That said, I added `-rpcwallet` test coverage recently in #18724, so I think either way works.",https://github.com/bitcoin/bitcoin/pull/19089#discussion_r431893421,431893421,src/bitcoin-cli.cpp
jonatack,2020-06-05 09:58:01,Reverted to minimal change.,https://github.com/bitcoin/bitcoin/pull/19089#discussion_r435818298,435818298,src/bitcoin-cli.cpp
hebasto,2020-06-06 04:44:46,What cases are covered by this condition?,https://github.com/bitcoin/bitcoin/pull/19089#discussion_r436237512,436237512,test/functional/test_framework/util.py
jonatack,2020-06-06 07:48:05,The condition is for the case that there's no need to run the assert if the remainder string is the Python shorthand for the correct number of zero digits. But good catch: I should pass the param into it: s/`'0E-8'`/`'0E-{}'.format(decimal_places)`',https://github.com/bitcoin/bitcoin/pull/19089#discussion_r436248266,436248266,test/functional/test_framework/util.py
jonatack,2020-06-06 09:15:54,Fixed and improved. Thanks @hebasto.,https://github.com/bitcoin/bitcoin/pull/19089#discussion_r436253278,436253278,test/functional/test_framework/util.py
hebasto,2020-06-06 12:53:15,"If a number has no fractional part, it should have `digits` zeros after the decimal, no?",https://github.com/bitcoin/bitcoin/pull/19089#discussion_r436266846,436266846,test/functional/test_framework/util.py
jonatack,2020-06-06 15:05:46,"Good idea, done (thanks!)",https://github.com/bitcoin/bitcoin/pull/19089#discussion_r436275721,436275721,test/functional/test_framework/util.py
hebasto,2020-06-06 16:04:06,"I'm not a python expert, but my python 3.6.9 prints numbers in scientific notation using ""e"" rather ""E"".\nBtw, in what cases we could expect values with scientific notation in RPC responses?",https://github.com/bitcoin/bitcoin/pull/19089#discussion_r436279904,436279904,test/functional/test_framework/util.py
jonatack,2020-06-06 16:15:40,"In every run of `interface_bitcoin_cli.py` locally, the tests see zero values like `'paytxfee': Decimal('0E-8')` in the -getinfo response. I see them as well if I add logging like `self.log.info(cli_get_info)` in the test. So, the assert needed to be able to handle that case. It passes in the CI, so not sure it needs to deal with lowercase 'e', but I suppose the value could be uppercased to be cer",https://github.com/bitcoin/bitcoin/pull/19089#discussion_r436280670,436280670,test/functional/test_framework/util.py
jonatack,2020-06-06 16:17:11,"Example:\n```\n2020-06-06T16:11:48.077000Z TestFramework (INFO): Test -getinfo returns expected network and blockchain info\n{\n 'balance': Decimal('50.00000000'),\n 'blocks': 101,\n 'chain': 'regtest',\n 'connections': 0,\n 'difficulty': Decimal('4.656542373906925E-10'),\n 'headers': 101,\n 'keypoolsize': 1,\n 'paytxfee': Decimal('0E-8'),\n 'proxy': '',\n 'relayfee': Decimal('0.00001",https://github.com/bitcoin/bitcoin/pull/19089#discussion_r436280789,436280789,test/functional/test_framework/util.py
jonatack,2020-06-06 16:39:14,Added `upper()` just in case.,https://github.com/bitcoin/bitcoin/pull/19089#discussion_r436282309,436282309,test/functional/test_framework/util.py
