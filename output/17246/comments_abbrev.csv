DrahtBot,2019-10-25 13:12:19,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17331](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17331.html) (Use effective values throughout coin select",https://github.com/bitcoin/bitcoin/pull/17246#issuecomment-546348011,546348011,
achow101,2019-10-25 15:47:37,"I don't think this is really the right approach to allowing subtractFeeFromOutputs. Instead of passing along subtractFeeFromOutputs to BnB, I think it makes more sense to just change the effective_values of each input to be nValue and change the non_input_fees to 0, BnB doesn't need to know whether subtractFeeFromOutputs is being used.\n\nI can work on this as an alternative if you'd like.",https://github.com/bitcoin/bitcoin/pull/17246#issuecomment-546407539,546407539,
Sjors,2019-10-25 18:17:04,"Happy to see an alternative approach. Ideally though, I think BnB _should_ know about `subtractFeeFromOutputs`. It should try to find a set of coins as close to the target as possible, minizing the fees subtracted from the output. With regular wallets this doesn't matter much, but if you have to choose between spending a P2WPK coin or some 15-of-15 multisig it does.",https://github.com/bitcoin/bitcoin/pull/17246#issuecomment-546458438,546458438,
achow101,2019-10-25 18:55:59,"> Ideally though, I think BnB _should_ know about `subtractFeeFromOutputs`. It should try to find a set of coins as close to the target as possible, minizing the fees subtracted from the output. With regular wallets this doesn't matter much, but if you have to choose between spending a P2WPK coin or some 15-of-15 multisig it does.\n\nBnB should already be minimizing transaction fees as part of r",https://github.com/bitcoin/bitcoin/pull/17246#issuecomment-546471871,546471871,
Sjors,2019-10-25 19:06:54,"If the effective value of inputs is equal to their nominal value then, afaik, waste reduction only tries to find the smallest possible set of coins. It won't optimize for which coins are cheapest to spend based on (witness) size.",https://github.com/bitcoin/bitcoin/pull/17246#issuecomment-546475664,546475664,
achow101,2019-10-25 22:45:45,"I looked more closely at your changes, and it seems like you've actually done what I suggested, just in a more verbose way. It could be done with fewer changes.",https://github.com/bitcoin/bitcoin/pull/17246#issuecomment-546536581,546536581,
Sjors,2019-10-26 08:47:43,"That's probably because I went all over the place while trying to get this to work, and chased down a few other rabbit holes (like trying to make BnB find a solution with `subtractFeeFromOutputs` that actually takes input fees into account). Happy to shorten it a bit.",https://github.com/bitcoin/bitcoin/pull/17246#issuecomment-546583893,546583893,
Sjors,2019-11-04 12:33:08,"Closing in favor of #17290, which is simpler and achieves more:\n* it enables BnB with pre-selected coins, which this PR doesn't\n* it has a test that checks that BnB was used (the same effect as the test here that disables knapsack)\n* it still excludes dust inputs (based on input size * fee)\n",https://github.com/bitcoin/bitcoin/pull/17246#issuecomment-549333359,549333359,
