sipa,2012-05-01T16:41:33Z,"If someone wants to test (use -connect= or -addnode=), I run a bitcoind hidden service on a57qr3ydpnyntf5k.onion:8333.\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5442416,5442416,
gavinandresen,2012-05-01T16:50:39Z,"Cool!\n\nCan you add a doc/Tor.txt with ""how to run your bitcoin node as a hidden service"" info in it?\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5442615,5442615,
laanwj,2012-05-01T19:38:38Z,Nice!\n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5446183,5446183,
rebroad,2012-05-02T17:34:05Z,Fantastic! thanks sipa. \n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5467286,5467286,
rebroad,2012-05-02T17:43:40Z,"Hi sipa, I'd like to help test this. I could do with some help using git to apply this patch though. I was wanting to offer a bounty for git help, but I don't have post access on bitcoinforum..., and constantly using meld is becoming a bit too time consuming... :-s\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5467527,5467527,
sipa,2012-05-03T01:44:43Z,"@rebroad: switch to whatever branch you want my patches to be merged with (possibly just master), and type ""git pull git://github.com/sipa/bitcoin.git torhs"".\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5476879,5476879,
rebroad,2012-05-03T11:44:12Z,"@sipa Thanks. doing that now. Has -addnode code been removed from init.cpp, or am I misreading the merge conflict?\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5485789,5485789,
sipa,2012-05-03T12:00:55Z,It's not removed; only the code in init.cpp that added -addnode nodes to addrman was removed (the actual processing of -addnode is in ThreadOpenAddedConnections2 in net.cpp.\n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5485987,5485987,
sipa,2012-05-03T12:48:51Z,"By the way: what are you merging with, that you get a conflict?\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5486711,5486711,
rebroad,2012-05-03T14:10:27Z,"Couple of questions. Why do I get:\n\nCannot connect to a57qr3ydpnyntf5k.onion:8333: unsupported network\n\nwhereas other onion address work? (the above onion address is the one you mentioned in this pull).\n\nAlso, re:-\n\nreceive version message: version 50200, blocks=178423, us=127.0.0.1:47146, them=106.187.36.183:28333, peer=siqdznszjf4e6v5j.onion:8333\n\nDoes this mean bitcoin exposes nodes' ",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5488342,5488342,
sipa,2012-05-03T17:25:15Z,"That ""unsupported network"" error means you're trying to connect to an onion address directly (not through a proxy). Is it possible you didn't use -proxy?\n\nThat received version message means that you connected to siqdznszjf4e6v5j.onion:8333, and thereby reached a peer who thinks you are 127.0.0.1 (so it came from their Tor proxy), and believes he has address 106.187.36.183. Which version was the",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5493037,5493037,
rebroad,2012-05-03T21:42:21Z,"receive version message: version 60000, blocks=178480, us=127.0.0.1:56334, them=24.7.178.63:8333, peer=p2hwc26zdsrqxiix.onion:8333\n\nSeems pretty similar for a 0.6.0 too....\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5499223,5499223,
gmaxwell,2012-05-04T05:32:26Z,"This passes my initial testing.   It's perhaps a little too easy to leak your IP when trying to run as a hidden service. E.g. if you -listen=1 without setting -externalip  ...  still better than what people would get if trying to run a hidden service today, but of course more support will encourage more people to do it.  Also, I the fact that proxydns ran when connect was set was kind of surprisin",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5504531,5504531,
rebroad,2012-05-04T12:25:15Z,"@gmaxwell can you elaborate on what anti-dos you have in mind? ah, you mean such as banning based on IP address. Well, the only way around this would be to make nodes somehow uniquely identifiable. I'm not sure which would be worse, that or lack of ability to ban peers.\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5509277,5509277,
gmaxwell,2012-05-04T12:40:57Z,grep the source for DoS.  \n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5509543,5509543,
rebroad,2012-05-04T19:55:05Z,"@gmaxwell, already did that before my post.\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5518896,5518896,
sipa,2012-05-06T14:20:02Z,"@rebroad the anti-DoS system registers IP addresses which engage in incorrect behavior, and prevents them from connecting or being connected to. In combination with Tor hidden services, you don't know the source IP, so it cannot be banned.\n\nMental note: make sure the proxy is never banned.\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5536037,5536037,
rebroad,2012-05-11T17:03:36Z,Hoping this would have been pulled by now... Re IPv6 testing. What would I need to see in debug.log to confirm that this works?\n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5655778,5655778,
luke-jr,2012-05-18T20:08:23Z,Needs rebasing.\n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5794436,5794436,
sipa,2012-05-21T19:32:48Z,"Here's a proposal for a revamping of the relevant command line arguments: https://gist.github.com/2763381\n\nIt removes the special casing of :9050 as tor port, and defines more convenient defaults for several options.\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5831531,5831531,
sipa,2012-05-25T12:28:46Z,Rebased on top #1389.\n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-5929127,5929127,
sipa,2012-06-12T10:44:11Z,Can I get some ACKs?\n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-6267518,6267518,
Diapolo,2012-06-12T13:21:20Z,"I'm not the one, who can give an ACK, but are you sure this is rebased on current master? At least ApplyProxySettings() in optionsmodel.cpp seems weird, as I know this function is already there.\n\nIt would be also nice, to get a) #1433 in before this (no testing comments currently) or b) I need some infos, what needs to be done for the Tor thing to have all options in the GUI available, so I can ",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-6270128,6270128,
sipa,2012-06-13T14:03:24Z,"Rebased, fixed some sign warnings, and updated a comment as asked by @laanwj.\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-6301802,6301802,
gavinandresen,2012-06-18T15:01:22Z,"ACK if you make the following edit to doc/Tor.txt:\n\nREPLACE:\nIn a typical situation, this suffices to run behind a Tor proxy:\n\nWITH:\nThese instructions assume that Tor is listening as a SOCKS proxy on port 9050; if you use the Tor Browser Bundle, then it (by default) picks a random port every time it starts.  See https://www.torproject.org/docs/faq.html.en#TBBSocksPort for how to properly co",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-6398148,6398148,
gmaxwell,2012-06-22T15:02:40Z,ACK.\n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-6509846,6509846,
Diapolo,2012-06-22T15:24:02Z,"@sipa I would like to make this available for the GUI, can you specify / tell me what is needed?\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-6510367,6510367,
sipa,2012-06-22T15:25:51Z,Rebased and updated documentation a bit.\n\n@Diapolo: I'll explain over IRC if you like.\n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-6510407,6510407,
gavinandresen,2012-06-22T22:54:37Z,make test_bitcoin is giving me:\n\ntest/netbase_tests.cpp:37: error: ‘class CNetAddr’ has no member named ‘IsOnionCat’\n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-6520150,6520150,
sipa,2012-06-22T23:14:20Z,Fixed - the function was renamed to IsTor().\n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-6520376,6520376,
Diapolo,2012-06-24T15:26:44Z,@sipa: I saw that in the source comments the option `-notor` is mentioned. Was this left out of the help message in init.cpp by intention?\n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-6533700,6533700,
sipa,2012-06-24T15:51:01Z,"Some ""advanced"" usages of options aren't mentioned. Explaining everything and all combinations would take too much place. Most is quite straightforward though - many options can be prefixed by ""no"" to disable them already.\n",https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-6533879,6533879,
Diapolo,2012-06-24T16:09:47Z,Thanks for the info and allright then.\n,https://github.com/bitcoin/bitcoin/pull/1174#issuecomment-6534048,6534048,
laanwj,2012-06-13T07:28:39Z,Wouldn't it be saner to just extend the enum? The reason that enums can't be extended later is that the compiler and programmer can make assumptions on what values to expect. This breaks that assumption.\n\nIf there's a good reason to do it this way (I suppose so) please add a comment describing that.\n,https://github.com/bitcoin/bitcoin/pull/1174#discussion_r974099,974099,src/netbase.cpp
sipa,2012-06-13T12:05:52Z,"Regarding not extending enums: it's perfectly sane from a language semantics point of view, in my opinion. enum A { B, C}, enum D : A { E, F } could define B and C as of type enum A, and E and F as of type D, with an implicit conversion between values of enum A to values of enum D.\n\nReason for not extending the enum here: I prefer not to clutter the public list of networks because one function n",https://github.com/bitcoin/bitcoin/pull/1174#discussion_r975312,975312,src/netbase.cpp
laanwj,2012-06-13T12:39:23Z,"Yes, it's ok as long as the values from D do not end up in places where A is supposed to be used. C++ cannot guarantee this, and it wasn't clear to me on first reading the code that the extended values were local to one function.\n\nAnyway, it seems that you have a good reason, and the extended values are local to that function, please add this in the comment. Just ""c++ does not allow this"" looks ",https://github.com/bitcoin/bitcoin/pull/1174#discussion_r975506,975506,src/netbase.cpp
sipa,2012-06-13T14:02:47Z,"Well it is - if C++ would allow extending enums, it wouldn't need this :)\n\nThat said, updated the comment.\n",https://github.com/bitcoin/bitcoin/pull/1174#discussion_r976170,976170,src/netbase.cpp
