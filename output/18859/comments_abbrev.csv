MarcoFalke,2020-05-03 20:33:12,Please don't remove the tests and benchmarks. Just because some imaginary input causes an integer overflow in a helper function doesn't mean all tests using it should be removed. You can inline the function where it is used of move it to the test library in `src/test/util`,https://github.com/bitcoin/bitcoin/pull/18859#issuecomment-623177135,623177135,
practicalswift,2020-05-03 20:49:18,"> Just because some imaginary input causes an integer overflow in a helper function [â€¦]\n\nLeaving this one as up for grabs.",https://github.com/bitcoin/bitcoin/pull/18859#issuecomment-623179724,623179724,
sipa,2020-05-03 21:08:57,@MarcoFalke What is the point of keeping a function around that is not used outside of tests?,https://github.com/bitcoin/bitcoin/pull/18859#issuecomment-623182562,623182562,
MarcoFalke,2020-05-03 21:14:37,"The function calls AccessCoin, which is used to benchmark coin access in the coins_caching benchmark.\n\nSee also the docstring `// Microbenchmark for simple accesses to a CCoinsViewCache database`\n\nIf the call to AccessCoin is removed, the you might as well remove the whole benchmark",https://github.com/bitcoin/bitcoin/pull/18859#issuecomment-623183331,623183331,
practicalswift,2020-05-03 21:14:53,@MarcoFalke Just so that I understand: would you be fine with anyone using `CCoinsViewCache::GetValueIn(...)` as it is currently formulated within Bitcoin Core?,https://github.com/bitcoin/bitcoin/pull/18859#issuecomment-623183361,623183361,
MarcoFalke,2020-05-03 21:16:44,"Oh, wait the benchmark does the coins access via `AreInputsStandard`. My bad.",https://github.com/bitcoin/bitcoin/pull/18859#issuecomment-623183624,623183624,
MarcoFalke,2020-05-03 21:17:20,ACK b56607a89ba112083f2b0a7b64ab18d66b26e2be,https://github.com/bitcoin/bitcoin/pull/18859#issuecomment-623183704,623183704,
promag,2020-05-03 22:55:11,"Code review ACK b56607a89ba112083f2b0a7b64ab18d66b26e2be.\n\nThe removed `CCoinsViewCache::GetValueIn` is similar to `AreInputsStandard` and like @practicalswift mentions the `summation` is meh.",https://github.com/bitcoin/bitcoin/pull/18859#issuecomment-623196630,623196630,
DrahtBot,2020-05-03 23:04:46,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #13525 (policy: Report reason inputs are nonstandard from AreInputsStandard by Empact)\n\nIf you consider this pull reques",https://github.com/bitcoin/bitcoin/pull/18859#issuecomment-623197946,623197946,
jb55,2020-05-04 00:52:27,ACK b56607a89ba112083f2b0a7b64ab18d66b26e2be,https://github.com/bitcoin/bitcoin/pull/18859#issuecomment-623214157,623214157,
MarcoFalke,2020-05-04 11:49:58,"@practicalswift Sorry again that I misread the diff. Looks good to merge now, and thanks for removing the code.",https://github.com/bitcoin/bitcoin/pull/18859#issuecomment-623417403,623417403,
