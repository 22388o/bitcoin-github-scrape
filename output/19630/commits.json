[
  {
    "sha": "dba8196b447b6a85be66890db70928100e867d8b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYmE4MTk2YjQ0N2I2YTg1YmU2Njg5MGRiNzA5MjgxMDBlODY3ZDhi",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2020-07-30T16:33:57Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2020-09-14T13:11:25Z"
      },
      "message": "policy/fees: correct decay explanation comments\n\nThis was confusing: which one is the good one ? After testing the value\nis right but not the comment, so fix it.\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "d77d75419021c885e961314fd8490015fcc2189b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d77d75419021c885e961314fd8490015fcc2189b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dba8196b447b6a85be66890db70928100e867d8b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAl9fa/0ACgkQ4T/BRc0/\nQwQtPgv/QGb4a2cWEQT+K8ELQH1SwjgtoUeSupG/W6byITPrujF2Ek9zZyzcc0xO\nli2P6BPZi66CUwZJX3kl1w0qaw4ta+sRGCNAWayYAIOXD15ReUgNhkSv0+ckijeg\nj4EDLcmbIBtwuNxGrvgrx5wEC/EErOpPdVXC5nGNnPTWKjE5WwvcHORobl7z1+Od\nwPo8ege4eiXzFzmt1Eqb9fvmDeEo2i8i/GUErmAvUhA0+LhRkGrMKNC7V/IVcyhR\nyeOzgHZvyaVkEPTMUe+8NtI9tdNSFbL9Rs/Km0Oa4pOYrG8mCGpfnG8F6vTiC4fm\nrezVVKVJF+RdtYDk6yCqBQWZXP4lmT2X2fROuWvLEtIRn62F273riNBB272jYheL\nUkJMQGxvE2d1l1ARxaFgbGKmm/SPsVfB/lVECl4vDyKcpo1whoPjGC3aolmEXH+p\n5Pa+dJRTL26uZQLNdaRDlBFYU3FT5kS7gjeUOKoBTWIoExIif850yCC2XOLPBzOT\niXUbKe7M\n=qr0D\n-----END PGP SIGNATURE-----",
        "payload": "tree d77d75419021c885e961314fd8490015fcc2189b\nparent 06dbbe76dd027e924eb95ffc4b409daffaefe61b\nauthor Antoine Poinsot <darosior@protonmail.com> 1596126837 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1600089085 +0200\n\npolicy/fees: correct decay explanation comments\n\nThis was confusing: which one is the good one ? After testing the value\nis right but not the comment, so fix it.\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dba8196b447b6a85be66890db70928100e867d8b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dba8196b447b6a85be66890db70928100e867d8b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dba8196b447b6a85be66890db70928100e867d8b/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06dbbe76dd027e924eb95ffc4b409daffaefe61b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06dbbe76dd027e924eb95ffc4b409daffaefe61b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06dbbe76dd027e924eb95ffc4b409daffaefe61b"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8ea8816dc3772a7808bea9fa1330a7b09ae7ece5",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dba8196b447b6a85be66890db70928100e867d8b/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dba8196b447b6a85be66890db70928100e867d8b/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=dba8196b447b6a85be66890db70928100e867d8b",
        "patch": "@@ -138,9 +138,9 @@ class CBlockPolicyEstimator\n \n     /** Decay of .962 is a half-life of 18 blocks or about 3 hours */\n     static constexpr double SHORT_DECAY = .962;\n-    /** Decay of .998 is a half-life of 144 blocks or about 1 day */\n+    /** Decay of .9952 is a half-life of 144 blocks or about 1 day */\n     static constexpr double MED_DECAY = .9952;\n-    /** Decay of .9995 is a half-life of 1008 blocks or about 1 week */\n+    /** Decay of .99931 is a half-life of 1008 blocks or about 1 week */\n     static constexpr double LONG_DECAY = .99931;\n \n     /** Require greater than 60% of X feerate transactions to be confirmed within Y/2 blocks*/"
      }
    ]
  },
  {
    "sha": "5b8cb35621891b681f9b49a9de5f6d8da4ccdecc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YjhjYjM1NjIxODkxYjY4MWY5YjQ5YTlkZTVmNmQ4ZGE0Y2NkZWNj",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2020-07-30T16:48:57Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2020-09-14T13:11:30Z"
      },
      "message": "policy/fee: remove requireGreater parameter in EstimateMedianVal()\n\nIt was always passed as true, and complicates the (already complex)\nlogic of the function.\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "21adc3044366d79dfdb07063d51f23469b122af3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21adc3044366d79dfdb07063d51f23469b122af3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b8cb35621891b681f9b49a9de5f6d8da4ccdecc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAl9fbAIACgkQ4T/BRc0/\nQwRJMAwApov1Ib4jqsskF/IwUkMVMNK3sc4Wb18bONnfOQJi5XXJyXKLlWmI3yzD\nmCajygfEubrrcr8q13+6yPon4jztlsPadBvvi+jO8ORLu5FETo4vcVVGV9ML//KI\nPAJhEUrHerWsIS9HmUVlVo6273gEAriO2SnrRNSij8A5ZriVvKz2jNMcWqreguUG\nD8bezhWv5702rc35GvoU3mosGA+lNI8kaalNeQfx1ac1lJikdyl3ggebbRAsLNVj\nMoDXz6y+i+sTQzPxnKOVPvlz2NJWyPZB8jag8MatgimOlu6Bh9ux9PNfLlUmntYS\n0LiLoLZAWo5UpF7WbafS7zrebifv1HYBUNSm/RQvdlH9sIyQYUI9iL80Z1VVAh7A\nEP83s3kFfTuIgnDLES+c4d7ACSd/gpVHFihL1F95MX94zfbv4bbvgKN6n5Rf+05y\nWkgLJWueuYsk5+vehDZiZjSdZwBeyLMTdAWPfsfvIvFXD5eq/9FIiLnG0hqN0O66\nGf7CukVK\n=VaTL\n-----END PGP SIGNATURE-----",
        "payload": "tree 21adc3044366d79dfdb07063d51f23469b122af3\nparent dba8196b447b6a85be66890db70928100e867d8b\nauthor Antoine Poinsot <darosior@protonmail.com> 1596127737 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1600089090 +0200\n\npolicy/fee: remove requireGreater parameter in EstimateMedianVal()\n\nIt was always passed as true, and complicates the (already complex)\nlogic of the function.\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b8cb35621891b681f9b49a9de5f6d8da4ccdecc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b8cb35621891b681f9b49a9de5f6d8da4ccdecc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b8cb35621891b681f9b49a9de5f6d8da4ccdecc/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dba8196b447b6a85be66890db70928100e867d8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dba8196b447b6a85be66890db70928100e867d8b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dba8196b447b6a85be66890db70928100e867d8b"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 20,
      "deletions": 30
    },
    "files": [
      {
        "sha": "b44e16de4f583305429e0129418cde3efe71e78c",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 30,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b8cb35621891b681f9b49a9de5f6d8da4ccdecc/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b8cb35621891b681f9b49a9de5f6d8da4ccdecc/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=5b8cb35621891b681f9b49a9de5f6d8da4ccdecc",
        "patch": "@@ -114,12 +114,10 @@ class TxConfirmStats\n      * @param confTarget target number of confirmations\n      * @param sufficientTxVal required average number of transactions per block in a bucket range\n      * @param minSuccess the success probability we require\n-     * @param requireGreater return the lowest feerate such that all higher values pass minSuccess OR\n-     *        return the highest feerate such that all lower values fail minSuccess\n      * @param nBlockHeight the current block height\n      */\n     double EstimateMedianVal(int confTarget, double sufficientTxVal,\n-                             double minSuccess, bool requireGreater, unsigned int nBlockHeight,\n+                             double minSuccess, unsigned int nBlockHeight,\n                              EstimationResult *result = nullptr) const;\n \n     /** Return the max number of confirms we're tracking */\n@@ -206,34 +204,26 @@ void TxConfirmStats::UpdateMovingAverages()\n \n // returns -1 on error conditions\n double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n-                                         double successBreakPoint, bool requireGreater,\n-                                         unsigned int nBlockHeight, EstimationResult *result) const\n+                                         double successBreakPoint, unsigned int nBlockHeight,\n+                                         EstimationResult *result) const\n {\n     // Counters for a bucket (or range of buckets)\n     double nConf = 0; // Number of tx's confirmed within the confTarget\n     double totalNum = 0; // Total number of tx's that were ever confirmed\n     int extraNum = 0;  // Number of tx's still in mempool for confTarget or longer\n     double failNum = 0; // Number of tx's that were never confirmed but removed from the mempool after confTarget\n     int periodTarget = (confTarget + scale - 1)/scale;\n-\n     int maxbucketindex = buckets.size() - 1;\n \n-    // requireGreater means we are looking for the lowest feerate such that all higher\n-    // values pass, so we start at maxbucketindex (highest feerate) and look at successively\n-    // smaller buckets until we reach failure.  Otherwise, we are looking for the highest\n-    // feerate such that all lower values fail, and we go in the opposite direction.\n-    unsigned int startbucket = requireGreater ? maxbucketindex : 0;\n-    int step = requireGreater ? -1 : 1;\n-\n     // We'll combine buckets until we have enough samples.\n     // The near and far variables will define the range we've combined\n     // The best variables are the last range we saw which still had a high\n     // enough confirmation rate to count as success.\n     // The cur variables are the current range we're counting.\n-    unsigned int curNearBucket = startbucket;\n-    unsigned int bestNearBucket = startbucket;\n-    unsigned int curFarBucket = startbucket;\n-    unsigned int bestFarBucket = startbucket;\n+    unsigned int curNearBucket = maxbucketindex;\n+    unsigned int bestNearBucket = maxbucketindex;\n+    unsigned int curFarBucket = maxbucketindex;\n+    unsigned int bestFarBucket = maxbucketindex;\n \n     bool foundAnswer = false;\n     unsigned int bins = unconfTxs.size();\n@@ -242,8 +232,8 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n     EstimatorBucket passBucket;\n     EstimatorBucket failBucket;\n \n-    // Start counting from highest(default) or lowest feerate transactions\n-    for (int bucket = startbucket; bucket >= 0 && bucket <= maxbucketindex; bucket += step) {\n+    // Start counting from highest feerate transactions\n+    for (int bucket = maxbucketindex; bucket >= 0; --bucket) {\n         if (newBucketRange) {\n             curNearBucket = bucket;\n             newBucketRange = false;\n@@ -263,7 +253,7 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n             double curPct = nConf / (totalNum + failNum + extraNum);\n \n             // Check to see if we are no longer getting confirmed at the success rate\n-            if ((requireGreater && curPct < successBreakPoint) || (!requireGreater && curPct > successBreakPoint)) {\n+            if (curPct < successBreakPoint) {\n                 if (passing == true) {\n                     // First time we hit a failure record the failed bucket\n                     unsigned int failMinBucket = std::min(curNearBucket, curFarBucket);\n@@ -338,8 +328,8 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n         failBucket.leftMempool = failNum;\n     }\n \n-    LogPrint(BCLog::ESTIMATEFEE, \"FeeEst: %d %s%.0f%% decay %.5f: feerate: %g from (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n-             confTarget, requireGreater ? \">\" : \"<\", 100.0 * successBreakPoint, decay,\n+    LogPrint(BCLog::ESTIMATEFEE, \"FeeEst: %d > %.0f%% decay %.5f: feerate: %g from (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n+             confTarget, 100.0 * successBreakPoint, decay,\n              median, passBucket.start, passBucket.end,\n              100 * passBucket.withinTarget / (passBucket.totalConfirmed + passBucket.inMempool + passBucket.leftMempool),\n              passBucket.withinTarget, passBucket.totalConfirmed, passBucket.inMempool, passBucket.leftMempool,\n@@ -664,7 +654,7 @@ CFeeRate CBlockPolicyEstimator::estimateRawFee(int confTarget, double successThr\n     if (successThreshold > 1)\n         return CFeeRate(0);\n \n-    double median = stats->EstimateMedianVal(confTarget, sufficientTxs, successThreshold, true, nBestSeenHeight, result);\n+    double median = stats->EstimateMedianVal(confTarget, sufficientTxs, successThreshold, nBestSeenHeight, result);\n \n     if (median < 0)\n         return CFeeRate(0);\n@@ -725,26 +715,26 @@ double CBlockPolicyEstimator::estimateCombinedFee(unsigned int confTarget, doubl\n     if (confTarget >= 1 && confTarget <= longStats->GetMaxConfirms()) {\n         // Find estimate from shortest time horizon possible\n         if (confTarget <= shortStats->GetMaxConfirms()) { // short horizon\n-            estimate = shortStats->EstimateMedianVal(confTarget, SUFFICIENT_TXS_SHORT, successThreshold, true, nBestSeenHeight, result);\n+            estimate = shortStats->EstimateMedianVal(confTarget, SUFFICIENT_TXS_SHORT, successThreshold, nBestSeenHeight, result);\n         }\n         else if (confTarget <= feeStats->GetMaxConfirms()) { // medium horizon\n-            estimate = feeStats->EstimateMedianVal(confTarget, SUFFICIENT_FEETXS, successThreshold, true, nBestSeenHeight, result);\n+            estimate = feeStats->EstimateMedianVal(confTarget, SUFFICIENT_FEETXS, successThreshold, nBestSeenHeight, result);\n         }\n         else { // long horizon\n-            estimate = longStats->EstimateMedianVal(confTarget, SUFFICIENT_FEETXS, successThreshold, true, nBestSeenHeight, result);\n+            estimate = longStats->EstimateMedianVal(confTarget, SUFFICIENT_FEETXS, successThreshold, nBestSeenHeight, result);\n         }\n         if (checkShorterHorizon) {\n             EstimationResult tempResult;\n             // If a lower confTarget from a more recent horizon returns a lower answer use it.\n             if (confTarget > feeStats->GetMaxConfirms()) {\n-                double medMax = feeStats->EstimateMedianVal(feeStats->GetMaxConfirms(), SUFFICIENT_FEETXS, successThreshold, true, nBestSeenHeight, &tempResult);\n+                double medMax = feeStats->EstimateMedianVal(feeStats->GetMaxConfirms(), SUFFICIENT_FEETXS, successThreshold, nBestSeenHeight, &tempResult);\n                 if (medMax > 0 && (estimate == -1 || medMax < estimate)) {\n                     estimate = medMax;\n                     if (result) *result = tempResult;\n                 }\n             }\n             if (confTarget > shortStats->GetMaxConfirms()) {\n-                double shortMax = shortStats->EstimateMedianVal(shortStats->GetMaxConfirms(), SUFFICIENT_TXS_SHORT, successThreshold, true, nBestSeenHeight, &tempResult);\n+                double shortMax = shortStats->EstimateMedianVal(shortStats->GetMaxConfirms(), SUFFICIENT_TXS_SHORT, successThreshold, nBestSeenHeight, &tempResult);\n                 if (shortMax > 0 && (estimate == -1 || shortMax < estimate)) {\n                     estimate = shortMax;\n                     if (result) *result = tempResult;\n@@ -763,10 +753,10 @@ double CBlockPolicyEstimator::estimateConservativeFee(unsigned int doubleTarget,\n     double estimate = -1;\n     EstimationResult tempResult;\n     if (doubleTarget <= shortStats->GetMaxConfirms()) {\n-        estimate = feeStats->EstimateMedianVal(doubleTarget, SUFFICIENT_FEETXS, DOUBLE_SUCCESS_PCT, true, nBestSeenHeight, result);\n+        estimate = feeStats->EstimateMedianVal(doubleTarget, SUFFICIENT_FEETXS, DOUBLE_SUCCESS_PCT, nBestSeenHeight, result);\n     }\n     if (doubleTarget <= feeStats->GetMaxConfirms()) {\n-        double longEstimate = longStats->EstimateMedianVal(doubleTarget, SUFFICIENT_FEETXS, DOUBLE_SUCCESS_PCT, true, nBestSeenHeight, &tempResult);\n+        double longEstimate = longStats->EstimateMedianVal(doubleTarget, SUFFICIENT_FEETXS, DOUBLE_SUCCESS_PCT, nBestSeenHeight, &tempResult);\n         if (longEstimate > estimate) {\n             estimate = longEstimate;\n             if (result) *result = tempResult;"
      }
    ]
  },
  {
    "sha": "569d92a4d2924a1f6d50775980b591552f6372e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjlkOTJhNGQyOTI0YTFmNmQ1MDc3NTk4MGI1OTE1NTJmNjM3MmU3",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2020-07-30T19:19:38Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2020-09-14T13:26:44Z"
      },
      "message": "policy/fees: small readability improvements\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "552020a10b18a72a011a7745f3c0fbf188423034",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/552020a10b18a72a011a7745f3c0fbf188423034"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/569d92a4d2924a1f6d50775980b591552f6372e7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAl9fb5YACgkQ4T/BRc0/\nQwR9/wv+NtHaFz2Ngui/U790/B3UKZeA8i3CgJ/IpwtXnouHQbRaMznss2MHMj1P\n+8s82UyICx0wqOeaaTVCJQBr/EXVvOUCsrB1y9AU/IXXxrc1gZc6sStoDBsUjIe2\nK0jE123aLZxs/BcZ6eCCnZTctccjQ9vNLWWUWdZSiaJncCttc9LimNEKqxTRzzQG\naI1uz59DWRXECOBhhQHmX9/pYQPjAiEW5DDec+SuHaAyUToOVJ2OnmpfPsNc9QHx\nfsvzzOx+uZEkaERGV/5OWFjdYaFND4+TVqaZT/Tm8OCtueiGRbDNi7IR07zWANkx\noOyReMXZJdfVX+TW0JcbGH87ARsuE5kiv0EN8+cb+rwcU5sH2UMYqVS0qjCnK1n+\nUlYhslzbJ+UmFyC/MmZ1vyLkdMQZKkxFcBpz+YUYpki3kEpMy6AJJB30mH4nEC4P\nJoNfqKfAG9V1uy2kPKezkUPhkamX4D/M5GrfaGOw/ASv5id1Sw5m4KwwuTCVLuvO\nHa72wfqN\n=etKn\n-----END PGP SIGNATURE-----",
        "payload": "tree 552020a10b18a72a011a7745f3c0fbf188423034\nparent 5b8cb35621891b681f9b49a9de5f6d8da4ccdecc\nauthor Antoine Poinsot <darosior@protonmail.com> 1596136778 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1600090004 +0200\n\npolicy/fees: small readability improvements\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/569d92a4d2924a1f6d50775980b591552f6372e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/569d92a4d2924a1f6d50775980b591552f6372e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/569d92a4d2924a1f6d50775980b591552f6372e7/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b8cb35621891b681f9b49a9de5f6d8da4ccdecc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b8cb35621891b681f9b49a9de5f6d8da4ccdecc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b8cb35621891b681f9b49a9de5f6d8da4ccdecc"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 17,
      "deletions": 19
    },
    "files": [
      {
        "sha": "7820d00fd6165aa173b6127375eba4880639b333",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 19,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/569d92a4d2924a1f6d50775980b591552f6372e7/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/569d92a4d2924a1f6d50775980b591552f6372e7/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=569d92a4d2924a1f6d50775980b591552f6372e7",
        "patch": "@@ -55,7 +55,7 @@ class TxConfirmStats\n \n     // Sum the total feerate of all tx's in each bucket\n     // Track the historical moving average of this total over blocks\n-    std::vector<double> avg;\n+    std::vector<double> m_feerate_avg;\n \n     // Combine the conf counts with tx counts to calculate the confirmation % for each Y,X\n     // Combine the total value with the tx counts to calculate the avg feerate per bucket\n@@ -137,11 +137,9 @@ class TxConfirmStats\n TxConfirmStats::TxConfirmStats(const std::vector<double>& defaultBuckets,\n                                 const std::map<double, unsigned int>& defaultBucketMap,\n                                unsigned int maxPeriods, double _decay, unsigned int _scale)\n-    : buckets(defaultBuckets), bucketMap(defaultBucketMap)\n+    : buckets(defaultBuckets), bucketMap(defaultBucketMap), decay(_decay), scale(_scale)\n {\n-    decay = _decay;\n     assert(_scale != 0 && \"_scale must be non-zero\");\n-    scale = _scale;\n     confAvg.resize(maxPeriods);\n     for (unsigned int i = 0; i < maxPeriods; i++) {\n         confAvg[i].resize(buckets.size());\n@@ -152,7 +150,7 @@ TxConfirmStats::TxConfirmStats(const std::vector<double>& defaultBuckets,\n     }\n \n     txCtAvg.resize(buckets.size());\n-    avg.resize(buckets.size());\n+    m_feerate_avg.resize(buckets.size());\n \n     resizeInMemoryCounters(buckets.size());\n }\n@@ -170,24 +168,24 @@ void TxConfirmStats::resizeInMemoryCounters(size_t newbuckets) {\n void TxConfirmStats::ClearCurrent(unsigned int nBlockHeight)\n {\n     for (unsigned int j = 0; j < buckets.size(); j++) {\n-        oldUnconfTxs[j] += unconfTxs[nBlockHeight%unconfTxs.size()][j];\n+        oldUnconfTxs[j] += unconfTxs[nBlockHeight % unconfTxs.size()][j];\n         unconfTxs[nBlockHeight%unconfTxs.size()][j] = 0;\n     }\n }\n \n \n-void TxConfirmStats::Record(int blocksToConfirm, double val)\n+void TxConfirmStats::Record(int blocksToConfirm, double feerate)\n {\n     // blocksToConfirm is 1-based\n     if (blocksToConfirm < 1)\n         return;\n-    int periodsToConfirm = (blocksToConfirm + scale - 1)/scale;\n-    unsigned int bucketindex = bucketMap.lower_bound(val)->second;\n+    int periodsToConfirm = (blocksToConfirm + scale - 1) / scale;\n+    unsigned int bucketindex = bucketMap.lower_bound(feerate)->second;\n     for (size_t i = periodsToConfirm; i <= confAvg.size(); i++) {\n         confAvg[i - 1][bucketindex]++;\n     }\n     txCtAvg[bucketindex]++;\n-    avg[bucketindex] += val;\n+    m_feerate_avg[bucketindex] += feerate;\n }\n \n void TxConfirmStats::UpdateMovingAverages()\n@@ -197,8 +195,8 @@ void TxConfirmStats::UpdateMovingAverages()\n             confAvg[i][j] = confAvg[i][j] * decay;\n         for (unsigned int i = 0; i < failAvg.size(); i++)\n             failAvg[i][j] = failAvg[i][j] * decay;\n-        avg[j] = avg[j] * decay;\n-        txCtAvg[j] = txCtAvg[j] * decay;\n+        m_feerate_avg[j] *= decay;\n+        txCtAvg[j] *= decay;\n     }\n }\n \n@@ -212,8 +210,8 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n     double totalNum = 0; // Total number of tx's that were ever confirmed\n     int extraNum = 0;  // Number of tx's still in mempool for confTarget or longer\n     double failNum = 0; // Number of tx's that were never confirmed but removed from the mempool after confTarget\n-    int periodTarget = (confTarget + scale - 1)/scale;\n-    int maxbucketindex = buckets.size() - 1;\n+    const int periodTarget = (confTarget + scale - 1) / scale;\n+    const int maxbucketindex = buckets.size() - 1;\n \n     // We'll combine buckets until we have enough samples.\n     // The near and far variables will define the range we've combined\n@@ -243,7 +241,7 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n         totalNum += txCtAvg[bucket];\n         failNum += failAvg[periodTarget - 1][bucket];\n         for (unsigned int confct = confTarget; confct < GetMaxConfirms(); confct++)\n-            extraNum += unconfTxs[(nBlockHeight - confct)%bins][bucket];\n+            extraNum += unconfTxs[(nBlockHeight - confct) % bins][bucket];\n         extraNum += oldUnconfTxs[bucket];\n         // If we have enough transaction data points in this range of buckets,\n         // we can test for success\n@@ -307,7 +305,7 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n             if (txCtAvg[j] < txSum)\n                 txSum -= txCtAvg[j];\n             else { // we're in the right bucket\n-                median = avg[j] / txCtAvg[j];\n+                median = m_feerate_avg[j] / txCtAvg[j];\n                 break;\n             }\n         }\n@@ -351,7 +349,7 @@ void TxConfirmStats::Write(CAutoFile& fileout) const\n {\n     fileout << decay;\n     fileout << scale;\n-    fileout << avg;\n+    fileout << m_feerate_avg;\n     fileout << txCtAvg;\n     fileout << confAvg;\n     fileout << failAvg;\n@@ -374,8 +372,8 @@ void TxConfirmStats::Read(CAutoFile& filein, int nFileVersion, size_t numBuckets\n         throw std::runtime_error(\"Corrupt estimates file. Scale must be non-zero\");\n     }\n \n-    filein >> avg;\n-    if (avg.size() != numBuckets) {\n+    filein >> m_feerate_avg;\n+    if (m_feerate_avg.size() != numBuckets) {\n         throw std::runtime_error(\"Corrupt estimates file. Mismatch in feerate average bucket count\");\n     }\n     filein >> txCtAvg;"
      }
    ]
  },
  {
    "sha": "c36869bbf6a38626833b4aea53be024c48ede475",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzY4NjliYmY2YTM4NjI2ODMzYjRhZWE1M2JlMDI0YzQ4ZWRlNDc1",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2020-07-31T18:28:40Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2020-09-14T13:28:27Z"
      },
      "message": "policy/fees: unify some duplicated for loops\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "8de51638a7b37b1f01eccbf084746a4943c9e48e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8de51638a7b37b1f01eccbf084746a4943c9e48e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c36869bbf6a38626833b4aea53be024c48ede475",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAl9fb/wACgkQ4T/BRc0/\nQwTBCwv/XdX1YfVJAk91opBT49XYPjQCBkF/q8Gqn0PFBH3dsXqEMCztTjvuOnEv\nThTjWvG8p98D5KeLS+hefGXOcvzcli929S3eluC13rO/YJRoe9x0tI0ykD/C9A8S\nWugW14B3y8e9x0tmIfkQZqvFWKB0/ny/xsaBFbpNGiOCNGhqDuiotYxL0yiDm72S\n9zam//wIfjxEf6+hyW2qi1X9c02nzr3mXPuQmvoVD4rhWrFvVTM1MUExrDMZJprM\nVNxn4NkBk+tnhS7Kc0624A/nbf3m4lS90NJVpXgWoxSa5yyG7GKkFtUOjKnU91M4\ntG/nOAXl7PiTqeN+tSwvjpo9godzzbFT25iQiyvRk4FfOuSxZSHpl8uPcHshEAvH\noeicKJH/qo8HF9aS9v36o3KILBFBp9YcWQHl4xXjwuH7cES+dbWHBrxOmZQKtCVf\nzpbgNj3V3RBo68o0KTcFZd5mtdDxD4MjjsOFL8lCd+F+hbTOC1xPaJ0QR+2Eyiyg\nyFrOfg5H\n=Ez0m\n-----END PGP SIGNATURE-----",
        "payload": "tree 8de51638a7b37b1f01eccbf084746a4943c9e48e\nparent 569d92a4d2924a1f6d50775980b591552f6372e7\nauthor Antoine Poinsot <darosior@protonmail.com> 1596220120 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1600090107 +0200\n\npolicy/fees: unify some duplicated for loops\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c36869bbf6a38626833b4aea53be024c48ede475",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c36869bbf6a38626833b4aea53be024c48ede475",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c36869bbf6a38626833b4aea53be024c48ede475/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "569d92a4d2924a1f6d50775980b591552f6372e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/569d92a4d2924a1f6d50775980b591552f6372e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/569d92a4d2924a1f6d50775980b591552f6372e7"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 6,
      "deletions": 7
    },
    "files": [
      {
        "sha": "47ff4a9cbf12163dd2aa93cc733059cd4bcde603",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c36869bbf6a38626833b4aea53be024c48ede475/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c36869bbf6a38626833b4aea53be024c48ede475/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=c36869bbf6a38626833b4aea53be024c48ede475",
        "patch": "@@ -141,11 +141,9 @@ TxConfirmStats::TxConfirmStats(const std::vector<double>& defaultBuckets,\n {\n     assert(_scale != 0 && \"_scale must be non-zero\");\n     confAvg.resize(maxPeriods);\n-    for (unsigned int i = 0; i < maxPeriods; i++) {\n-        confAvg[i].resize(buckets.size());\n-    }\n     failAvg.resize(maxPeriods);\n     for (unsigned int i = 0; i < maxPeriods; i++) {\n+        confAvg[i].resize(buckets.size());\n         failAvg[i].resize(buckets.size());\n     }\n \n@@ -190,11 +188,12 @@ void TxConfirmStats::Record(int blocksToConfirm, double feerate)\n \n void TxConfirmStats::UpdateMovingAverages()\n {\n+    assert(confAvg.size() == failAvg.size());\n     for (unsigned int j = 0; j < buckets.size(); j++) {\n-        for (unsigned int i = 0; i < confAvg.size(); i++)\n-            confAvg[i][j] = confAvg[i][j] * decay;\n-        for (unsigned int i = 0; i < failAvg.size(); i++)\n-            failAvg[i][j] = failAvg[i][j] * decay;\n+        for (unsigned int i = 0; i < confAvg.size(); i++) {\n+            confAvg[i][j] *= decay;\n+            failAvg[i][j] *= decay;\n+        }\n         m_feerate_avg[j] *= decay;\n         txCtAvg[j] *= decay;\n     }"
      }
    ]
  },
  {
    "sha": "a3abeec33a6ae903e514c7a7b6f587b7c17288a0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphM2FiZWVjMzNhNmFlOTAzZTUxNGM3YTdiNmY1ODdiN2MxNzI4OGEw",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2020-08-14T23:57:59Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2020-09-14T14:23:23Z"
      },
      "message": "policy/fees: remove a floating-point division by zero\n\nReported-by: practicalswift <practicalswift@users.noreply.github.com>\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "d6963db7510ef0780138b9432c61670d17043d99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6963db7510ef0780138b9432c61670d17043d99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3abeec33a6ae903e514c7a7b6f587b7c17288a0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAl9ffNsACgkQ4T/BRc0/\nQwQ1UgwAmx3xzPqYUfjKLIacfOi9M6Wd8Wi42AiYzspY8u+eI/iW/jNFHmt3NyVX\nmzBnYKLSOXD0AwXBaV1h9K5HJi4vc2ceHKJC2lrE7r9ZUaAXgIxiadYWG2DtAkjM\nc3l5hLQnMdr5u49inixSB/m43SioItnsONOSAA8UcNoH6EHEPqKUx/EdM5cVUrix\nZk4xruteOhLyQLj90TubXVTZh5oW6tCh+9Ei8h8Xw6DCqkHtvTWO94ckjISPbiMI\nlyYvRq5N+nIr+NicwNlPwDnzYZCk3qApEB9XXxwiYtO1QF0VaQQVPMsbFbAk3JQl\nnzS0r3rYCcadZVW9pjiCOQbI0KKT//zJ8r0S0Egad/BvQ5UdpXX7r7C1Qpm/HpEt\nBwZAwQNkSqRAihRKYJpaF4tMhYXnsnXe1/Dg/Kzu0lpVF8Vr9pJVIMs1/Iw8UeIn\n4BG9MvloY+bsYw0mY/+xKzQk0Rh0Ra0U0oCSWeCardBbcUl9KURlIoGOPen9zAhM\nkg03YGU0\n=YiOB\n-----END PGP SIGNATURE-----",
        "payload": "tree d6963db7510ef0780138b9432c61670d17043d99\nparent c36869bbf6a38626833b4aea53be024c48ede475\nauthor Antoine Poinsot <darosior@protonmail.com> 1597449479 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1600093403 +0200\n\npolicy/fees: remove a floating-point division by zero\n\nReported-by: practicalswift <practicalswift@users.noreply.github.com>\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3abeec33a6ae903e514c7a7b6f587b7c17288a0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a3abeec33a6ae903e514c7a7b6f587b7c17288a0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3abeec33a6ae903e514c7a7b6f587b7c17288a0/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c36869bbf6a38626833b4aea53be024c48ede475",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c36869bbf6a38626833b4aea53be024c48ede475",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c36869bbf6a38626833b4aea53be024c48ede475"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 11,
      "deletions": 3
    },
    "files": [
      {
        "sha": "0f31093dbb6b4b47b089038680771a509172fcb8",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3abeec33a6ae903e514c7a7b6f587b7c17288a0/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3abeec33a6ae903e514c7a7b6f587b7c17288a0/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=a3abeec33a6ae903e514c7a7b6f587b7c17288a0",
        "patch": "@@ -325,13 +325,22 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n         failBucket.leftMempool = failNum;\n     }\n \n+    float passed_within_target_perc = 0.0;\n+    float failed_within_target_perc = 0.0;\n+    if ((passBucket.totalConfirmed + passBucket.inMempool + passBucket.leftMempool)) {\n+        passed_within_target_perc = 100 * passBucket.withinTarget / (passBucket.totalConfirmed + passBucket.inMempool + passBucket.leftMempool);\n+    }\n+    if ((failBucket.totalConfirmed + failBucket.inMempool + failBucket.leftMempool)) {\n+        failed_within_target_perc = 100 * failBucket.withinTarget / (failBucket.totalConfirmed + failBucket.inMempool + failBucket.leftMempool);\n+    }\n+\n     LogPrint(BCLog::ESTIMATEFEE, \"FeeEst: %d > %.0f%% decay %.5f: feerate: %g from (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n              confTarget, 100.0 * successBreakPoint, decay,\n              median, passBucket.start, passBucket.end,\n-             100 * passBucket.withinTarget / (passBucket.totalConfirmed + passBucket.inMempool + passBucket.leftMempool),\n+             passed_within_target_perc,\n              passBucket.withinTarget, passBucket.totalConfirmed, passBucket.inMempool, passBucket.leftMempool,\n              failBucket.start, failBucket.end,\n-             100 * failBucket.withinTarget / (failBucket.totalConfirmed + failBucket.inMempool + failBucket.leftMempool),\n+             failed_within_target_perc,\n              failBucket.withinTarget, failBucket.totalConfirmed, failBucket.inMempool, failBucket.leftMempool);\n \n "
      },
      {
        "sha": "75257d886b3c163800d0da08ac95d2eb07ae252d",
        "filename": "test/sanitizer_suppressions/ubsan",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3abeec33a6ae903e514c7a7b6f587b7c17288a0/test/sanitizer_suppressions/ubsan",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3abeec33a6ae903e514c7a7b6f587b7c17288a0/test/sanitizer_suppressions/ubsan",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/sanitizer_suppressions/ubsan?ref=a3abeec33a6ae903e514c7a7b6f587b7c17288a0",
        "patch": "@@ -1,6 +1,5 @@\n # -fsanitize=undefined suppressions\n # =================================\n-float-divide-by-zero:policy/fees.cpp\n float-divide-by-zero:validation.cpp\n float-divide-by-zero:wallet/wallet.cpp\n "
      }
    ]
  }
]