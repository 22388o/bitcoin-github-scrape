[
  {
    "sha": "faeff577093c4de9eec9491486a2c3766d46dae6",
    "node_id": "C_kwDOABII59oAKGZhZWZmNTc3MDkzYzRkZTllZWM5NDkxNDg2YTJjMzc2NmQ0NmRhZTY",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-07-28T11:56:45Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-10T09:11:47Z"
      },
      "message": "test: Use 4 spaces for indentation",
      "tree": {
        "sha": "9a5075e78edc69ef1b696f258aa25872b6c988b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a5075e78edc69ef1b696f258aa25872b6c988b7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faeff577093c4de9eec9491486a2c3766d46dae6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUihlwv9ElwgRptif7TY9Lv7ZRjRRKdv43im+iQfJcXcRAIPxJbYTr3mvW3/k5/G\nICMM9WE6K/0614oZCTHALcocguWB+eV/yV//NYBerC37DeYiKuy5+ZpBADr7Fsnk\nsZvj5DA494yNMS3Vn2zvdfIKCML9p2z4IZMvn7D10JBXj37hn3R2Dwek6wmSDABs\nb5pa3DXZNQXxa5vJpD84hmovxpw41eq5chyVyUthc4XMc8nwXLX3BCO4bGZ/zEqu\nVa9vZyn0Dp+VnDDDf3YGeQNPeVVkH6tlsemKlzhhz0R6Wrx79qUfcfv1e6l96qkf\nPo5EDARFrhkRuMX6v5lFSHKC3cwnzOhQJPH7w97FJfWeORFg7JjR+pgjObeyGQ9c\ntKvrl6W/uM98CyUH4ET7Z9ZCDLJVWoDxu/k1fUIlFp7ZB3NQQzVKgmrrUfIzzcAD\nkelIdbvMaOZSYyJp55WBSURkB0P8I4ugWAe92Jf8F2KqIJ9md8yCF62unx4tj59p\nfs0E3ofB\n=cCA4\n-----END PGP SIGNATURE-----",
        "payload": "tree 9a5075e78edc69ef1b696f258aa25872b6c988b7\nparent 8ae4ba481ce8f7da173bef24432729c87a36cb70\nauthor MarcoFalke <falke.marco@gmail.com> 1627473405 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1636535507 +0100\n\ntest: Use 4 spaces for indentation\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faeff577093c4de9eec9491486a2c3766d46dae6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faeff577093c4de9eec9491486a2c3766d46dae6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faeff577093c4de9eec9491486a2c3766d46dae6/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ae4ba481ce8f7da173bef24432729c87a36cb70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ae4ba481ce8f7da173bef24432729c87a36cb70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ae4ba481ce8f7da173bef24432729c87a36cb70"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d5214380ef02e1e01407a47667eba106a27bde71",
        "filename": "test/functional/mocks/signer.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faeff577093c4de9eec9491486a2c3766d46dae6/test/functional/mocks/signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faeff577093c4de9eec9491486a2c3766d46dae6/test/functional/mocks/signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mocks/signer.py?ref=faeff577093c4de9eec9491486a2c3766d46dae6",
        "patch": "@@ -18,7 +18,7 @@ def perform_pre_checks():\n             sys.exit(int(mock_result[0]))\n \n def enumerate(args):\n-  sys.stdout.write(json.dumps([{\"fingerprint\": \"00000001\", \"type\": \"trezor\", \"model\": \"trezor_t\"}, {\"fingerprint\": \"00000002\"}]))\n+    sys.stdout.write(json.dumps([{\"fingerprint\": \"00000001\", \"type\": \"trezor\", \"model\": \"trezor_t\"}, {\"fingerprint\": \"00000002\"}]))\n \n def getdescriptors(args):\n     xpub = \"tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B\"\n@@ -93,7 +93,7 @@ def signtx(args):\n if not sys.stdin.isatty():\n     buffer = sys.stdin.read()\n     if buffer and buffer.rstrip() != \"\":\n-       sys.argv.extend(buffer.rstrip().split(\" \"))\n+        sys.argv.extend(buffer.rstrip().split(\" \"))\n \n args = parser.parse_args()\n "
      },
      {
        "sha": "7634462020568f0d79f4f7f0f8c7624564ce1460",
        "filename": "test/functional/wallet_importdescriptors.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faeff577093c4de9eec9491486a2c3766d46dae6/test/functional/wallet_importdescriptors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faeff577093c4de9eec9491486a2c3766d46dae6/test/functional/wallet_importdescriptors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importdescriptors.py?ref=faeff577093c4de9eec9491486a2c3766d46dae6",
        "patch": "@@ -53,7 +53,7 @@ def test_importdesc(self, req, success, error_code=None, error_message=None, war\n         result = wrpc.importdescriptors([req])\n         observed_warnings = []\n         if 'warnings' in result[0]:\n-           observed_warnings = result[0]['warnings']\n+            observed_warnings = result[0]['warnings']\n         assert_equal(\"\\n\".join(sorted(warnings)), \"\\n\".join(sorted(observed_warnings)))\n         assert_equal(result[0]['success'], success)\n         if error_code is not None:"
      }
    ]
  },
  {
    "sha": "fad13991aea6463ecf07dd907de1c1b23837d7e7",
    "node_id": "C_kwDOABII59oAKGZhZDEzOTkxYWVhNjQ2M2VjZjA3ZGQ5MDdkZTFjMWIyMzgzN2Q3ZTc",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-10T10:13:30Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-10T10:09:55Z"
      },
      "message": "test: Properly set sync_fun in NodeNetworkLimitedTest",
      "tree": {
        "sha": "a2cd897f419a096b5c016d279fde7f102d4c6270",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2cd897f419a096b5c016d279fde7f102d4c6270"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad13991aea6463ecf07dd907de1c1b23837d7e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhnPgv/afW5aqbQye1JxI4k1QzxeJP3fPgYlPzH7fKmsFPps6PRSEhywO6HKY1m\nvhDgZ81ZCW1CJulxuV9GbRYuA9wydZazDRxcYLXKlZ7MfstXdFGsaoTG/OdqOWfM\nv68YUWl1cVIxEHRF0Z4q9nPKesYJ8hXgoq/aOJBAe3yDME9id53QuB0LVDZpkJjf\ncnMQs0oJrBRFve65cMgTbCX5pjoCxv8YmhS4O+FiIBR4tXW/LjbGDkvDncFUUBow\nZtnGNlmz+ELzDZ4ldsBvJF7zBMLA3VTlU5UaMcrIuwktZSzDspmowOW8vlbpdaD/\nu5JYiM9rui4Cq4tqYA/3UifrWxxJVgiF3W/NDEyR7P8T1g7qmrMfg2Xyjv/maCqA\n8GtxLeevCIpmyUQ+DfSedKxasfX9iBUe0lIWOswv24wFO9m5RkxrhI/lJNlRo/Ir\n8oRQU5lzbW1By7bAD4xeOlOhLIiRgoS2kMrO8zTJL7AzpnzCMLvtbBvBHPThRPIw\nLKjvpbzD\n=Upig\n-----END PGP SIGNATURE-----",
        "payload": "tree a2cd897f419a096b5c016d279fde7f102d4c6270\nparent faeff577093c4de9eec9491486a2c3766d46dae6\nauthor MarcoFalke <falke.marco@gmail.com> 1636539210 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1636538995 +0100\n\ntest: Properly set sync_fun in NodeNetworkLimitedTest\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad13991aea6463ecf07dd907de1c1b23837d7e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad13991aea6463ecf07dd907de1c1b23837d7e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad13991aea6463ecf07dd907de1c1b23837d7e7/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faeff577093c4de9eec9491486a2c3766d46dae6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faeff577093c4de9eec9491486a2c3766d46dae6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faeff577093c4de9eec9491486a2c3766d46dae6"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e6c320dc0bf683a090e51411dfe0eb9c206468e9",
        "filename": "test/functional/p2p_node_network_limited.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad13991aea6463ecf07dd907de1c1b23837d7e7/test/functional/p2p_node_network_limited.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad13991aea6463ecf07dd907de1c1b23837d7e7/test/functional/p2p_node_network_limited.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_node_network_limited.py?ref=fad13991aea6463ecf07dd907de1c1b23837d7e7",
        "patch": "@@ -59,8 +59,7 @@ def run_test(self):\n \n         self.log.info(\"Mine enough blocks to reach the NODE_NETWORK_LIMITED range.\")\n         self.connect_nodes(0, 1)\n-        blocks = self.generate(self.nodes[1], 292, sync_fun=self.no_op)\n-        self.sync_blocks([self.nodes[0], self.nodes[1]])\n+        blocks = self.generate(self.nodes[1], 292, sync_fun=lambda: self.sync_blocks([self.nodes[0], self.nodes[1]]))\n \n         self.log.info(\"Make sure we can max retrieve block at tip-288.\")\n         node.send_getdata_for_block(blocks[1])  # last block in valid range"
      }
    ]
  },
  {
    "sha": "fa974f1f1417a536636347072e86bcb54a4c909c",
    "node_id": "C_kwDOABII59oAKGZhOTc0ZjFmMTQxN2E1MzY2MzYzNDcwNzJlODZiY2I1NGE0YzkwOWM",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-07-28T10:12:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-10T10:10:15Z"
      },
      "message": "scripted-diff: Remove redundant sync_all and sync_blocks\n\nThe sync calls are redundant after a call to generate, because generate\nalready syncs itself.\n\n-BEGIN VERIFY SCRIPT-\nperl -0777 -pi -e 's/(generate[^\\n]*\\)[^\\n]*)(\\n|\\s)+self.sync_(all|blocks)\\([^\\)]*\\)\\n/\\1\\n/g' $(git grep -l generate ./test)\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "17bf7027544cf4b1120bedf19528c199be9cfe72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/17bf7027544cf4b1120bedf19528c199be9cfe72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa974f1f1417a536636347072e86bcb54a4c909c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgzqQv/R8rotX7EubmCscTGhemjzMD+0f7jBWxejyd4uzlxAJ3PcE3G4iADdroX\nn0meZat6yZJgtAwB6YpOUtotHeRS57a5TCekL88boUr+ktWbf6raHQxVyxDNaLJc\nOlHwU/El6Tg8RLtNs+tE7gLGyJQej9hIiRBMJPSeRIaOM+HkAd5UCQo5AWFIsHCi\n4rFPUnlduz8Ht0fOjdiReesnJb5+yqEdr+RP+7dGPd0VEKVkGBi2BKDNBEKm2nnx\ncdVvllROeGlvQDUUsUHBbjQ8jt1lzFItbWFcByzQtzZLvHqUB6qoLGdYKMZ7nQqh\nSxq+KmEZlqNXFYo9raqwYPOF5hWZA3CGUNX3ZPlzrO/D+g+uERH5hGjWWrSOBNWw\n3awO5tUh4QSFEI3K9zuJM/IKgxWx10SVkNh+rN2G6y5bhvdeHzXUydeOvLeIQw/X\n576uRuuwTKdcmksvML0S+C62qXGw7qmX2vI80DSmsFfMKsL6N6hZldIv0WGfR91+\nHXNFUSI5\n=rPrh\n-----END PGP SIGNATURE-----",
        "payload": "tree 17bf7027544cf4b1120bedf19528c199be9cfe72\nparent fad13991aea6463ecf07dd907de1c1b23837d7e7\nauthor MarcoFalke <falke.marco@gmail.com> 1627467170 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1636539015 +0100\n\nscripted-diff: Remove redundant sync_all and sync_blocks\n\nThe sync calls are redundant after a call to generate, because generate\nalready syncs itself.\n\n-BEGIN VERIFY SCRIPT-\nperl -0777 -pi -e 's/(generate[^\\n]*\\)[^\\n]*)(\\n|\\s)+self.sync_(all|blocks)\\([^\\)]*\\)\\n/\\1\\n/g' $(git grep -l generate ./test)\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa974f1f1417a536636347072e86bcb54a4c909c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa974f1f1417a536636347072e86bcb54a4c909c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa974f1f1417a536636347072e86bcb54a4c909c/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad13991aea6463ecf07dd907de1c1b23837d7e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad13991aea6463ecf07dd907de1c1b23837d7e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad13991aea6463ecf07dd907de1c1b23837d7e7"
      }
    ],
    "stats": {
      "total": 160,
      "additions": 0,
      "deletions": 160
    },
    "files": [
      {
        "sha": "98931bf0245e837c2b538c7da39cb9afc728acae",
        "filename": "test/functional/feature_backwards_compatibility.py",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/feature_backwards_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/feature_backwards_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_backwards_compatibility.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -66,8 +66,6 @@ def setup_nodes(self):\n     def run_test(self):\n         self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 1, self.nodes[0].getnewaddress())\n \n-        self.sync_blocks()\n-\n         # Sanity check the test framework:\n         res = self.nodes[self.num_nodes - 1].getblockchaininfo()\n         assert_equal(res['blocks'], COINBASE_MATURITY + 1)\n@@ -93,15 +91,13 @@ def run_test(self):\n         self.nodes[0].sendtoaddress(address, 10)\n         self.sync_mempools()\n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n         # Create a conflicting transaction using RBF\n         return_address = self.nodes[0].getnewaddress()\n         tx1_id = self.nodes[1].sendtoaddress(return_address, 1)\n         tx2_id = self.nodes[1].bumpfee(tx1_id)[\"txid\"]\n         # Confirm the transaction\n         self.sync_mempools()\n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n         # Create another conflicting transaction using RBF\n         tx3_id = self.nodes[1].sendtoaddress(return_address, 1)\n         tx4_id = self.nodes[1].bumpfee(tx3_id)[\"txid\"]"
      },
      {
        "sha": "cb51a534c3897197c0d714be8bf56ca844bd59ea",
        "filename": "test/functional/feature_blockfilterindex_prune.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/feature_blockfilterindex_prune.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/feature_blockfilterindex_prune.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_blockfilterindex_prune.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -26,9 +26,7 @@ def run_test(self):\n         assert_greater_than(len(self.nodes[0].getblockfilter(self.nodes[0].getbestblockhash())['filter']), 0)\n         # Mine two batches of blocks to avoid hitting NODE_NETWORK_LIMITED_MIN_BLOCKS disconnection\n         self.generate(self.nodes[0], 250)\n-        self.sync_all()\n         self.generate(self.nodes[0], 250)\n-        self.sync_all()\n         self.sync_index(height=700)\n \n         self.log.info(\"prune some blocks\")"
      },
      {
        "sha": "5ce79bf2e3af5b01182abd3287759c57adf3238b",
        "filename": "test/functional/feature_coinstatsindex.py",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/feature_coinstatsindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/feature_coinstatsindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_coinstatsindex.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -72,8 +72,6 @@ def _test_coin_stats_index(self):\n         node.sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n         self.generate(node, 1)\n \n-        self.sync_blocks(timeout=120)\n-\n         self.log.info(\"Test that gettxoutsetinfo() output is consistent with or without coinstatsindex option\")\n         res0 = node.gettxoutsetinfo('none')\n \n@@ -170,7 +168,6 @@ def _test_coin_stats_index(self):\n \n         # Include both txs in a block\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         for hash_option in index_hash_options:\n             # Check all amounts were registered correctly\n@@ -271,7 +268,6 @@ def _test_reorg_index(self):\n         # Add another block, so we don't depend on reconsiderblock remembering which\n         # blocks were touched by invalidateblock\n         self.generate(index_node, 1)\n-        self.sync_all()\n \n         # Ensure that removing and re-adding blocks yields consistent results\n         block = index_node.getblockhash(99)"
      },
      {
        "sha": "361cb19d3257f9a3cc3d7d6e618265b175381b54",
        "filename": "test/functional/feature_fee_estimation.py",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/feature_fee_estimation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/feature_fee_estimation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_fee_estimation.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -218,7 +218,6 @@ def transact_and_mine(self, numblocks, mining_node):\n                 self.fees_per_kb.append(float(fee) / tx_kbytes)\n             self.sync_mempools(wait=.1)\n             mined = mining_node.getblock(self.generate(mining_node, 1)[0], True)[\"tx\"]\n-            self.sync_blocks(wait=.1)\n             # update which txouts are confirmed\n             newmem = []\n             for utx in self.memutxo:\n@@ -278,8 +277,6 @@ def sanity_check_estimates_range(self):\n         # Finish by mining a normal-sized block:\n         while len(self.nodes[1].getrawmempool()) > 0:\n             self.generate(self.nodes[1], 1)\n-\n-        self.sync_blocks(self.nodes[0:3], wait=.1)\n         self.log.info(\"Final estimates after emptying mempools\")\n         check_estimates(self.nodes[1], self.fees_per_kb)\n \n@@ -322,7 +319,6 @@ def sanity_check_rbf_estimates(self, utxos):\n             for txid in txids_to_replace:\n                 miner.prioritisetransaction(txid=txid, fee_delta=-COIN)\n             self.generate(miner, 1)\n-            self.sync_blocks(wait=.1, nodes=[node, miner])\n             # RBF the low-fee transactions\n             while True:\n                 try:\n@@ -334,7 +330,6 @@ def sanity_check_rbf_estimates(self, utxos):\n         # Mine the last replacement txs\n         self.sync_mempools(wait=.1, nodes=[node, miner])\n         self.generate(miner, 1)\n-        self.sync_blocks(wait=.1, nodes=[node, miner])\n \n         # Only 10% of the transactions were really confirmed with a low feerate,\n         # the rest needed to be RBF'd. We must return the 90% conf rate feerate."
      },
      {
        "sha": "71a7e7a659fd31a7ab95e14bb5043e40d2933cc1",
        "filename": "test/functional/feature_notifications.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/feature_notifications.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/feature_notifications.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_notifications.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -112,7 +112,6 @@ def run_test(self):\n             self.log.info(\"test -walletnotify with conflicting transactions\")\n             self.nodes[0].rescanblockchain()\n             self.generatetoaddress(self.nodes[0], 100, ADDRESS_BCRT1_UNSPENDABLE)\n-            self.sync_blocks()\n \n             # Generate transaction on node 0, sync mempools, and check for\n             # notification on node 1."
      },
      {
        "sha": "14e79b6405db9b9a68417a0de1d279e06b2c198e",
        "filename": "test/functional/feature_segwit.py",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/feature_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/feature_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_segwit.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -191,15 +191,13 @@ def run_test(self):\n                     p2sh_ids[n][v].append(send_to_witness(v, self.nodes[0], find_spendable_utxo(self.nodes[0], 50), self.pubkey[n], True, Decimal(\"49.999\")))\n \n         self.generate(self.nodes[0], 1)  # block 163\n-        self.sync_blocks()\n \n         # Make sure all nodes recognize the transactions as theirs\n         assert_equal(self.nodes[0].getbalance(), balance_presetup - 60 * 50 + 20 * Decimal(\"49.999\") + 50)\n         assert_equal(self.nodes[1].getbalance(), 20 * Decimal(\"49.999\"))\n         assert_equal(self.nodes[2].getbalance(), 20 * Decimal(\"49.999\"))\n \n         self.generate(self.nodes[0], 260)  # block 423\n-        self.sync_blocks()\n \n         self.log.info(\"Verify witness txs are skipped for mining before the fork\")\n         self.skip_mine(self.nodes[2], wit_ids[NODE_2][P2WPKH][0], True)  # block 424\n@@ -216,7 +214,6 @@ def run_test(self):\n         self.log.info(\"Verify previous witness txs skipped for mining can now be mined\")\n         assert_equal(len(self.nodes[2].getrawmempool()), 4)\n         blockhash = self.generate(self.nodes[2], 1)[0]  # block 432 (first block with new rules; 432 = 144 * 3)\n-        self.sync_blocks()\n         assert_equal(len(self.nodes[2].getrawmempool()), 0)\n         segwit_tx_list = self.nodes[2].getblock(blockhash)[\"tx\"]\n         assert_equal(len(segwit_tx_list), 5)\n@@ -630,7 +627,6 @@ def mine_and_test_listunspent(self, script_list, ismine):\n         signresults = self.nodes[0].signrawtransactionwithwallet(tx.serialize_without_witness().hex())['hex']\n         txid = self.nodes[0].sendrawtransaction(hexstring=signresults, maxfeerate=0)\n         txs_mined[txid] = self.generate(self.nodes[0], 1)[0]\n-        self.sync_blocks()\n         watchcount = 0\n         spendcount = 0\n         for i in self.nodes[0].listunspent():\n@@ -680,7 +676,6 @@ def create_and_mine_tx_from_txids(self, txids, success=True):\n         signresults = self.nodes[0].signrawtransactionwithwallet(tx.serialize_without_witness().hex())['hex']\n         self.nodes[0].sendrawtransaction(hexstring=signresults, maxfeerate=0)\n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n \n \n if __name__ == '__main__':"
      },
      {
        "sha": "34200b9727b1508a174aea70a17fe55b3b0a5ff6",
        "filename": "test/functional/interface_rest.py",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/interface_rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/interface_rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_rest.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -81,9 +81,7 @@ def run_test(self):\n         not_related_address = \"2MxqoHEdNQTyYeX1mHcbrrpzgojbosTpCvJ\"\n \n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         self.generatetoaddress(self.nodes[1], 100, not_related_address)\n-        self.sync_all()\n \n         assert_equal(self.nodes[0].getbalance(), 50)\n \n@@ -108,7 +106,6 @@ def run_test(self):\n         self.log.info(\"Query an unspent TXO using the /getutxos URI\")\n \n         self.generatetoaddress(self.nodes[1], 1, not_related_address)\n-        self.sync_all()\n         bb_hash = self.nodes[0].getbestblockhash()\n \n         assert_equal(self.nodes[1].getbalance(), Decimal(\"0.1\"))\n@@ -183,7 +180,6 @@ def run_test(self):\n         assert_equal(len(json_obj['utxos']), 0)\n \n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         json_obj = self.test_rest_request(f\"/getutxos/{spending[0]}-{spending[1]}\")\n         assert_equal(len(json_obj['utxos']), 1)\n@@ -204,7 +200,6 @@ def run_test(self):\n         self.test_rest_request(f\"/getutxos/checkmempool/{long_uri}\", http_method='POST', status=200)\n \n         self.generate(self.nodes[0], 1)  # generate block to not affect upcoming tests\n-        self.sync_all()\n \n         self.log.info(\"Test the /block, /blockhashbyheight and /headers URIs\")\n         bb_hash = self.nodes[0].getbestblockhash()\n@@ -275,7 +270,6 @@ def run_test(self):\n \n         # See if we can get 5 headers in one response\n         self.generate(self.nodes[1], 5)\n-        self.sync_all()\n         json_obj = self.test_rest_request(f\"/headers/5/{bb_hash}\")\n         assert_equal(len(json_obj), 5)  # now we should have 5 header objects\n \n@@ -310,7 +304,6 @@ def run_test(self):\n \n         # Now mine the transactions\n         newblockhash = self.generate(self.nodes[1], 1)\n-        self.sync_all()\n \n         # Check if the 3 tx show up in the new block\n         json_obj = self.test_rest_request(f\"/block/{newblockhash[0]}\")"
      },
      {
        "sha": "4c9674cc52104ff11e893dfdc50d129844dcf145",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -190,8 +190,6 @@ def test_basic(self):\n         self.log.info(f\"Generate {num_blocks} blocks (and {num_blocks} coinbase txes)\")\n         genhashes = self.generatetoaddress(self.nodes[0], num_blocks, ADDRESS_BCRT1_UNSPENDABLE)\n \n-        self.sync_all()\n-\n         for x in range(num_blocks):\n             # Should receive the coinbase txid.\n             txid = hashtx.receive()\n@@ -353,7 +351,6 @@ def test_sequence(self):\n             # removed from the mempool by the block mining it.\n             mempool_size = len(self.nodes[0].getrawmempool())\n             c_block = self.generatetoaddress(self.nodes[0], 1, ADDRESS_BCRT1_UNSPENDABLE)[0]\n-            self.sync_all()\n             # Make sure the number of mined transactions matches the number of txs out of mempool\n             mempool_size_delta = mempool_size - len(self.nodes[0].getrawmempool())\n             assert_equal(len(self.nodes[0].getblock(c_block)[\"tx\"])-1, mempool_size_delta)\n@@ -393,7 +390,6 @@ def test_sequence(self):\n             # Other things may happen but aren't wallet-deterministic so we don't test for them currently\n             self.nodes[0].reconsiderblock(best_hash)\n             self.generatetoaddress(self.nodes[1], 1, ADDRESS_BCRT1_UNSPENDABLE)\n-            self.sync_all()\n \n             self.log.info(\"Evict mempool transaction by block conflict\")\n             orig_txid = self.nodes[0].sendtoaddress(address=self.nodes[0].getnewaddress(), amount=1.0, replaceable=True)"
      },
      {
        "sha": "5be192deef5fad6f319f8687cb96ca518f165d8c",
        "filename": "test/functional/mempool_packages.py",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_packages.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -192,7 +192,6 @@ def run_test(self):\n         # Check that prioritising a tx before it's added to the mempool works\n         # First clear the mempool by mining a block.\n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n         assert_equal(len(self.nodes[0].getrawmempool()), 0)\n         # Prioritise a transaction that has been mined, then add it back to the\n         # mempool by using invalidateblock.\n@@ -283,7 +282,6 @@ def run_test(self):\n         # Test reorg handling\n         # First, the basics:\n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n         self.nodes[1].invalidateblock(self.nodes[0].getbestblockhash())\n         self.nodes[1].reconsiderblock(self.nodes[0].getbestblockhash())\n \n@@ -330,7 +328,6 @@ def run_test(self):\n \n         # Mine these in a block\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # Now generate tx8, with a big fee\n         inputs = [ {'txid' : tx1_id, 'vout': 0}, {'txid' : txid, 'vout': 0} ]"
      },
      {
        "sha": "1a9fd523f0a491c7707da382e8a5197f93001ac1",
        "filename": "test/functional/mining_getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/mining_getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/mining_getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_getblocktemplate_longpoll.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -64,7 +64,6 @@ def run_test(self):\n \n         # Add enough mature utxos to the wallets, so that all txs spend confirmed coins\n         self.generate(self.nodes[0], COINBASE_MATURITY)\n-        self.sync_blocks()\n \n         self.log.info(\"Test that introducing a new transaction into the mempool will terminate the longpoll\")\n         thr = LongpollThread(self.nodes[0])"
      },
      {
        "sha": "c454adf77efa3e2da9be0fc93e5c456bef88d7e6",
        "filename": "test/functional/p2p_blockfilters.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/p2p_blockfilters.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/p2p_blockfilters.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_blockfilters.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -57,7 +57,6 @@ def run_test(self):\n \n         # Nodes 0 & 1 share the same first 999 blocks in the chain.\n         self.generate(self.nodes[0], 999)\n-        self.sync_blocks(timeout=600)\n \n         # Stale blocks by disconnecting nodes 0 & 1, mining, then reconnecting\n         self.disconnect_nodes(0, 1)"
      },
      {
        "sha": "c985a1f98d99581fbc4320435b060f4cf18e0d42",
        "filename": "test/functional/p2p_compactblocks_hb.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/p2p_compactblocks_hb.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/p2p_compactblocks_hb.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks_hb.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -31,7 +31,6 @@ def relay_block_through(self, peer):\n         \"\"\"Relay a new block through peer peer, and return HB status between 1 and [2,3,4,5].\"\"\"\n         self.connect_nodes(peer, 0)\n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n         self.disconnect_nodes(peer, 0)\n         status_to = [self.peer_info(1, i)['bip152_hb_to'] for i in range(2, 6)]\n         status_from = [self.peer_info(i, 1)['bip152_hb_from'] for i in range(2, 6)]\n@@ -45,7 +44,6 @@ def run_test(self):\n         for i in range(1, 6):\n             self.connect_nodes(i, 0)\n         self.generate(self.nodes[0], 2)\n-        self.sync_blocks()\n         for i in range(1, 6):\n             self.disconnect_nodes(i, 0)\n "
      },
      {
        "sha": "823a59e71f86c4501b4a136a337dcaca147030fb",
        "filename": "test/functional/p2p_ibd_txrelay.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/p2p_ibd_txrelay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/p2p_ibd_txrelay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_ibd_txrelay.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -30,7 +30,6 @@ def run_test(self):\n \n         # Come out of IBD by generating a block\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         self.log.info(\"Check that nodes reset minfilter after coming out of IBD\")\n         for node in self.nodes:"
      },
      {
        "sha": "ec27185f1021586ee859073b9b070fa02b50194e",
        "filename": "test/functional/p2p_permissions.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/p2p_permissions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/p2p_permissions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_permissions.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -94,7 +94,6 @@ def run_test(self):\n \n     def check_tx_relay(self):\n         block_op_true = self.nodes[0].getblock(self.generatetoaddress(self.nodes[0], 100, ADDRESS_BCRT1_P2WSH_OP_TRUE)[0])\n-        self.sync_all()\n \n         self.log.debug(\"Create a connection from a forcerelay peer that rebroadcasts raw txs\")\n         # A test framework p2p connection is needed to send the raw transaction directly. If a full node was used, it could only"
      },
      {
        "sha": "12bc56f450dfef49bf67d50c55e1ce41d6c2bca7",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -578,7 +578,6 @@ def test_standardness_v0(self):\n         # Mine it on test_node to create the confirmed output.\n         test_transaction_acceptance(self.nodes[0], self.test_node, p2sh_tx, with_witness=True, accepted=True)\n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n \n         # Now test standardness of v0 P2WSH outputs.\n         # Start by creating a transaction with two outputs.\n@@ -651,7 +650,6 @@ def test_standardness_v0(self):\n         test_transaction_acceptance(self.nodes[0], self.test_node, tx3, with_witness=True, accepted=True)\n \n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n         self.utxo.pop(0)\n         self.utxo.append(UTXO(tx3.sha256, 0, tx3.vout[0].nValue))\n         assert_equal(len(self.nodes[1].getrawmempool()), 0)\n@@ -1354,7 +1352,6 @@ def test_segwit_versions(self):\n             temp_utxo.append(UTXO(tx.sha256, 0, tx.vout[0].nValue))\n \n         self.generate(self.nodes[0], 1)  # Mine all the transactions\n-        self.sync_blocks()\n         assert len(self.nodes[0].getrawmempool()) == 0\n \n         # Finally, verify that version 0 -> version 2 transactions\n@@ -1425,7 +1422,6 @@ def test_premature_coinbase_witness_spend(self):\n \n         # Now test a premature spend.\n         self.generate(self.nodes[0], 98)\n-        self.sync_blocks()\n         block2 = self.build_next_block()\n         self.update_witness_block_with_transactions(block2, [spend_tx])\n         test_witness_block(self.nodes[0], self.test_node, block2, accepted=False, reason='bad-txns-premature-spend-of-coinbase')\n@@ -1744,7 +1740,6 @@ def test_non_standard_witness_blinding(self):\n         tx.rehash()\n         test_transaction_acceptance(self.nodes[0], self.test_node, tx, False, True)\n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n \n         # We'll add an unnecessary witness to this transaction that would cause\n         # it to be non-standard, to test that violating policy with a witness\n@@ -1773,7 +1768,6 @@ def test_non_standard_witness_blinding(self):\n         test_transaction_acceptance(self.nodes[0], self.test_node, tx3, False, True)\n \n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n \n         # Update our utxo list; we spent the first entry.\n         self.utxo.pop(0)\n@@ -1808,7 +1802,6 @@ def test_non_standard_witness(self):\n         test_transaction_acceptance(self.nodes[0], self.test_node, tx, with_witness=False, accepted=True)\n \n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n \n         # Creating transactions for tests\n         p2wsh_txs = []"
      },
      {
        "sha": "1bd277bd29740c9d935f074039817e5260ad6a3e",
        "filename": "test/functional/p2p_sendheaders.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/p2p_sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/p2p_sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_sendheaders.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -217,7 +217,6 @@ def mine_reorg(self, length):\n \n         # make sure all invalidated blocks are node0's\n         self.generatetoaddress(self.nodes[0], length, self.nodes[0].get_deterministic_priv_key().address)\n-        self.sync_blocks(self.nodes, wait=0.1)\n         for x in self.nodes[0].p2ps:\n             x.wait_for_block_announcement(int(self.nodes[0].getbestblockhash(), 16))\n             x.clear_block_announcements()\n@@ -226,7 +225,6 @@ def mine_reorg(self, length):\n         hash_to_invalidate = self.nodes[1].getblockhash(tip_height - (length - 1))\n         self.nodes[1].invalidateblock(hash_to_invalidate)\n         all_hashes = self.generatetoaddress(self.nodes[1], length + 1, self.nodes[1].get_deterministic_priv_key().address)  # Must be longer than the orig chain\n-        self.sync_blocks(self.nodes, wait=0.1)\n         return [int(x, 16) for x in all_hashes]\n \n     def run_test(self):"
      },
      {
        "sha": "f16c09400d8e3b07d6ed3cf3a57a3242546ab041",
        "filename": "test/functional/rpc_createmultisig.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_createmultisig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_createmultisig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_createmultisig.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -46,7 +46,6 @@ def run_test(self):\n \n         self.log.info('Generating blocks ...')\n         self.generate(node0, 149)\n-        self.sync_all()\n \n         self.moved = 0\n         for self.nkeys in [3, 5]:\n@@ -117,7 +116,6 @@ def check_addmultisigaddress_errors(self):\n     def checkbalances(self):\n         node0, node1, node2 = self.nodes\n         self.generate(node0, COINBASE_MATURITY)\n-        self.sync_all()\n \n         bal0 = node0.getbalance()\n         bal1 = node1.getbalance()"
      },
      {
        "sha": "455f52e3f1d6798f2c991328a266b04aff84b848",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -99,9 +99,7 @@ def run_test(self):\n         self.fee_tolerance = 2 * self.min_relay_tx_fee / 1000\n \n         self.generate(self.nodes[2], 1)\n-        self.sync_all()\n         self.generate(self.nodes[0], 121)\n-        self.sync_all()\n \n         self.test_change_position()\n         self.test_simple()\n@@ -164,7 +162,6 @@ def test_change_position(self):\n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 5.0)\n \n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         wwatch.unloadwallet()\n \n@@ -550,7 +547,6 @@ def test_spend_2of2(self):\n         # Send 1.2 BTC to msig addr.\n         self.nodes[0].sendtoaddress(mSigObj, 1.2)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         oldBalance = self.nodes[1].getbalance()\n         inputs = []\n@@ -561,7 +557,6 @@ def test_spend_2of2(self):\n         final_psbt = w2.finalizepsbt(signed_psbt['psbt'])\n         self.nodes[2].sendrawtransaction(final_psbt['hex'])\n         self.generate(self.nodes[2], 1)\n-        self.sync_all()\n \n         # Make sure funds are received at node1.\n         assert_equal(oldBalance+Decimal('1.10000000'), self.nodes[1].getbalance())\n@@ -625,7 +620,6 @@ def test_locked_wallet(self):\n         signedTx = self.nodes[1].signrawtransactionwithwallet(fundedTx['hex'])\n         self.nodes[1].sendrawtransaction(signedTx['hex'])\n         self.generate(self.nodes[1], 1)\n-        self.sync_all()\n \n         # Make sure funds are received at node1.\n         assert_equal(oldBalance+Decimal('51.10000000'), self.nodes[0].getbalance())\n@@ -637,12 +631,10 @@ def test_many_inputs_fee(self):\n         # Empty node1, send some small coins from node0 to node1.\n         self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True)\n         self.generate(self.nodes[1], 1)\n-        self.sync_all()\n \n         for _ in range(20):\n             self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.01)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # Fund a tx with ~20 small inputs.\n         inputs = []\n@@ -665,12 +657,10 @@ def test_many_inputs_send(self):\n         # Again, empty node1, send some small coins from node0 to node1.\n         self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True)\n         self.generate(self.nodes[1], 1)\n-        self.sync_all()\n \n         for _ in range(20):\n             self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 0.01)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # Fund a tx with ~20 small inputs.\n         oldBalance = self.nodes[0].getbalance()\n@@ -682,7 +672,6 @@ def test_many_inputs_send(self):\n         fundedAndSignedTx = self.nodes[1].signrawtransactionwithwallet(fundedTx['hex'])\n         self.nodes[1].sendrawtransaction(fundedAndSignedTx['hex'])\n         self.generate(self.nodes[1], 1)\n-        self.sync_all()\n         assert_equal(oldBalance+Decimal('50.19000000'), self.nodes[0].getbalance()) #0.19+block reward\n \n     def test_op_return(self):\n@@ -760,7 +749,6 @@ def test_all_watched_funds(self):\n         assert signedtx[\"complete\"]\n         self.nodes[0].sendrawtransaction(signedtx[\"hex\"])\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         wwatch.unloadwallet()\n \n@@ -1012,7 +1000,6 @@ def test_external_inputs(self):\n         self.nodes[0].sendtoaddress(addr, 10)\n         self.nodes[0].sendtoaddress(wallet.getnewaddress(), 10)\n         self.generate(self.nodes[0], 6)\n-        self.sync_all()\n         ext_utxo = self.nodes[0].listunspent(addresses=[addr])[0]\n \n         # An external input without solving data should result in an error\n@@ -1143,7 +1130,6 @@ def test_feerate_rounding(self):\n         addr = w.getnewaddress(address_type=\"bech32\")\n         self.nodes[0].sendtoaddress(addr, 1)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # A P2WPKH input costs 68 vbytes; With a single P2WPKH output, the rest of the tx is 42 vbytes for a total of 110 vbytes.\n         # At a feerate of 1.85 sat/vb, the input will need a fee of 125.8 sats and the rest 77.7 sats"
      },
      {
        "sha": "6c9aa4205605122da6b0fc21a8d227864f155473",
        "filename": "test/functional/rpc_getblockstats.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_getblockstats.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_getblockstats.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getblockstats.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -48,7 +48,6 @@ def generate_test_data(self, filename):\n         address = self.nodes[0].get_deterministic_priv_key().address\n         self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n         self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)"
      },
      {
        "sha": "f4e299629d0993464a786cda06e9c9df31b6d489",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -81,7 +81,6 @@ def test_getpeerinfo(self):\n         # Create a few getpeerinfo last_block/last_transaction values.\n         self.wallet.send_self_transfer(from_node=self.nodes[0]) # Make a transaction so we can see it in the getpeerinfo results\n         self.generate(self.nodes[1], 1)\n-        self.sync_all()\n         time_now = int(time.time())\n         peer_info = [x.getpeerinfo() for x in self.nodes]\n         # Verify last_block and last_transaction keys/values."
      },
      {
        "sha": "90ee604ee37c2f49d7d091a323feb7ee20875632",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -61,7 +61,6 @@ def test_utxo_conversion(self):\n         wonline.importaddress(offline_addr, \"\", False)\n         mining_node.sendtoaddress(address=offline_addr, amount=1.0)\n         self.generate(mining_node, nblocks=1)\n-        self.sync_blocks([mining_node, online_node])\n \n         # Construct an unsigned PSBT on the online node (who doesn't know the output is Segwit, so will include a non-witness UTXO)\n         utxos = wonline.listunspent(addresses=[offline_addr])\n@@ -76,7 +75,6 @@ def test_utxo_conversion(self):\n         # Make sure we can mine the resulting transaction\n         txid = mining_node.sendrawtransaction(mining_node.finalizepsbt(signed_psbt)[\"hex\"])\n         self.generate(mining_node, 1)\n-        self.sync_blocks([mining_node, online_node])\n         assert_equal(online_node.gettxout(txid,0)[\"confirmations\"], 1)\n \n         wonline.unloadwallet()\n@@ -162,7 +160,6 @@ def run_test(self):\n         signed_tx = self.nodes[0].signrawtransactionwithwallet(rawtx['hex'])['hex']\n         txid = self.nodes[0].sendrawtransaction(signed_tx)\n         self.generate(self.nodes[0], 6)\n-        self.sync_all()\n \n         # Find the output pos\n         p2sh_pos = -1\n@@ -321,7 +318,6 @@ def run_test(self):\n         txid1 = self.nodes[0].sendtoaddress(node1_addr, 13)\n         txid2 = self.nodes[0].sendtoaddress(node2_addr, 13)\n         blockhash = self.generate(self.nodes[0], 6)[0]\n-        self.sync_all()\n         vout1 = find_output(self.nodes[1], txid1, 13, blockhash=blockhash)\n         vout2 = find_output(self.nodes[2], txid2, 13, blockhash=blockhash)\n \n@@ -349,7 +345,6 @@ def run_test(self):\n         finalized = self.nodes[0].finalizepsbt(combined)['hex']\n         self.nodes[0].sendrawtransaction(finalized)\n         self.generate(self.nodes[0], 6)\n-        self.sync_all()\n \n         # Test additional args in walletcreatepsbt\n         # Make sure both pre-included and funded inputs\n@@ -544,7 +539,6 @@ def test_psbt_input_keys(psbt_input, keys):\n         txid4 = self.nodes[0].sendtoaddress(addr4, 5)\n         vout4 = find_output(self.nodes[0], txid4, 5)\n         self.generate(self.nodes[0], 6)\n-        self.sync_all()\n         psbt2 = self.nodes[1].createpsbt([{\"txid\":txid4, \"vout\":vout4}], {self.nodes[0].getnewaddress():Decimal('4.999')})\n         psbt2 = self.nodes[1].walletprocesspsbt(psbt2)['psbt']\n         psbt2_decoded = self.nodes[0].decodepsbt(psbt2)\n@@ -568,7 +562,6 @@ def test_psbt_input_keys(psbt_input, keys):\n         txid = self.nodes[0].sendtoaddress(addr, 7)\n         addrinfo = self.nodes[1].getaddressinfo(addr)\n         blockhash = self.generate(self.nodes[0], 6)[0]\n-        self.sync_all()\n         vout = find_output(self.nodes[0], txid, 7, blockhash=blockhash)\n         psbt = self.nodes[1].createpsbt([{\"txid\":txid, \"vout\":vout}], {self.nodes[0].getnewaddress(\"\", \"p2sh-segwit\"):Decimal('6.999')})\n         analyzed = self.nodes[0].analyzepsbt(psbt)\n@@ -628,7 +621,6 @@ def test_psbt_input_keys(psbt_input, keys):\n \n         self.nodes[0].sendtoaddress(addr, 10)\n         self.generate(self.nodes[0], 6)\n-        self.sync_all()\n         ext_utxo = self.nodes[0].listunspent(addresses=[addr])[0]\n \n         # An external input without solving data should result in an error"
      },
      {
        "sha": "c68d6a41edf621834e44b1d91fdb02339b4d0f36",
        "filename": "test/functional/rpc_rawtransaction.py",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_rawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_rawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_rawtransaction.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -75,14 +75,11 @@ def setup_network(self):\n     def run_test(self):\n         self.log.info(\"Prepare some coins for multiple *rawtransaction commands\")\n         self.generate(self.nodes[2], 1)\n-        self.sync_all()\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-        self.sync_all()\n         for amount in [1.5, 1.0, 5.0]:\n             self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), amount)\n         self.sync_all()\n         self.generate(self.nodes[0], 5)\n-        self.sync_all()\n \n         self.getrawtransaction_tests()\n         self.createrawtransaction_tests()\n@@ -98,13 +95,11 @@ def getrawtransaction_tests(self):\n         addr = self.nodes[1].getnewaddress()\n         txid = self.nodes[0].sendtoaddress(addr, 10)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         vout = find_vout_for_address(self.nodes[1], txid, addr)\n         rawTx = self.nodes[1].createrawtransaction([{'txid': txid, 'vout': vout}], {self.nodes[1].getnewaddress(): 9.999})\n         rawTxSigned = self.nodes[1].signrawtransactionwithwallet(rawTx)\n         txId = self.nodes[1].sendrawtransaction(rawTxSigned['hex'])\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         for n in [0, 3]:\n             self.log.info(f\"Test getrawtransaction {'with' if n == 0 else 'without'} -txindex\")\n@@ -137,7 +132,6 @@ def getrawtransaction_tests(self):\n         # Make a tx by sending, then generate 2 blocks; block1 has the tx in it\n         tx = self.nodes[2].sendtoaddress(self.nodes[1].getnewaddress(), 1)\n         block1, block2 = self.generate(self.nodes[2], 2)\n-        self.sync_all()\n         for n in [0, 3]:\n             self.log.info(f\"Test getrawtransaction {'with' if n == 0 else 'without'} -txindex, with blockhash\")\n             # We should be able to get the raw transaction by providing the correct block\n@@ -369,7 +363,6 @@ def sendrawtransaction_testmempoolaccept_tests(self):\n \n         self.log.info(\"Test sendrawtransaction/testmempoolaccept with tx already in the chain\")\n         self.generate(self.nodes[2], 1)\n-        self.sync_blocks()\n         for node in self.nodes:\n             testres = node.testmempoolaccept([rawTxSigned['hex']])[0]\n             assert_equal(testres['allowed'], False)\n@@ -443,7 +436,6 @@ def raw_multisig_transaction_legacy_tests(self):\n         txId = self.nodes[0].sendtoaddress(mSigObj, 1.2)\n         self.sync_all()\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         # node2 has both keys of the 2of2 ms addr, tx should affect the balance\n         assert_equal(self.nodes[2].getbalance(), bal + Decimal('1.20000000'))\n \n@@ -465,7 +457,6 @@ def raw_multisig_transaction_legacy_tests(self):\n         rawTx = self.nodes[0].decoderawtransaction(decTx['hex'])\n         self.sync_all()\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # THIS IS AN INCOMPLETE FEATURE\n         # NODE2 HAS TWO OF THREE KEYS AND THE FUNDS SHOULD BE SPENDABLE AND COUNT AT BALANCE CALCULATION\n@@ -488,7 +479,6 @@ def raw_multisig_transaction_legacy_tests(self):\n         rawTx = self.nodes[0].decoderawtransaction(rawTxSigned['hex'])\n         self.sync_all()\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         assert_equal(self.nodes[0].getbalance(), bal + Decimal('50.00000000') + Decimal('2.19000000'))  # block reward + tx\n \n         # 2of2 test for combining transactions\n@@ -508,7 +498,6 @@ def raw_multisig_transaction_legacy_tests(self):\n         rawTx2 = self.nodes[0].decoderawtransaction(decTx['hex'])\n         self.sync_all()\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         assert_equal(self.nodes[2].getbalance(), bal)  # the funds of a 2of2 multisig tx should not be marked as spendable\n \n@@ -533,7 +522,6 @@ def raw_multisig_transaction_legacy_tests(self):\n         rawTx2 = self.nodes[0].decoderawtransaction(rawTxComb)\n         self.sync_all()\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         assert_equal(self.nodes[0].getbalance(), bal + Decimal('50.00000000') + Decimal('2.19000000'))  # block reward + tx\n \n "
      },
      {
        "sha": "d07afeb838dda642ab98c7bc8183af84290fe51d",
        "filename": "test/functional/rpc_signrawtransaction.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_signrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_signrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_signrawtransaction.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -203,7 +203,6 @@ def witness_script_test(self):\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n         self.nodes[0].sendtoaddress(p2sh_p2wsh_address[\"address\"], 49.999)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         # Get the UTXO info from scantxoutset\n         unspent_output = self.nodes[1].scantxoutset('start', [p2sh_p2wsh_address['descriptor']])['unspents'][0]\n         spk = script_to_p2sh_p2wsh_script(p2sh_p2wsh_address['redeemScript']).hex()"
      },
      {
        "sha": "efbced58b0d1c561de4aefc2fbdbd148461ddc4c",
        "filename": "test/functional/rpc_txoutproof.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_txoutproof.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/rpc_txoutproof.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_txoutproof.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -31,7 +31,6 @@ def run_test(self):\n         # Add enough mature utxos to the wallet, so that all txs spend confirmed coins\n         self.generate(miniwallet, 5)\n         self.generate(self.nodes[0], COINBASE_MATURITY)\n-        self.sync_all()\n \n         chain_height = self.nodes[1].getblockcount()\n         assert_equal(chain_height, 105)\n@@ -57,7 +56,6 @@ def run_test(self):\n         tx3 = miniwallet.send_self_transfer(from_node=self.nodes[0], utxo_to_spend=txin_spent)\n         txid3 = tx3['txid']\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         txid_spent = txin_spent[\"txid\"]\n         txid_unspent = txid1  # Input was change from txid2, so txid1 should be unspent"
      },
      {
        "sha": "1b104d0f0a6b6a9961ad609f0065411214f467c7",
        "filename": "test/functional/wallet_abandonconflict.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_abandonconflict.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -30,7 +30,6 @@ def skip_test_if_missing_module(self):\n \n     def run_test(self):\n         self.generate(self.nodes[1], COINBASE_MATURITY)\n-        self.sync_blocks()\n         balance = self.nodes[0].getbalance()\n         txA = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n         txB = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))"
      },
      {
        "sha": "9daaf849f908ccc4a283b630799904e5eb167529",
        "filename": "test/functional/wallet_address_types.py",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_address_types.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_address_types.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_address_types.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -221,7 +221,6 @@ def run_test(self):\n         # Mine 101 blocks on node5 to bring nodes out of IBD and make sure that\n         # no coinbases are maturing for the nodes-under-test during the test\n         self.generate(self.nodes[5], COINBASE_MATURITY + 1)\n-        self.sync_blocks()\n \n         uncompressed_1 = \"0496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858ee\"\n         uncompressed_2 = \"047211a824f55b505228e4c3d5194c1fcfaa15a456abdf37f9b9d97a4040afc073dee6c89064984f03385237d92167c13e236446b417ab79a0fcae412ae3316b77\"\n@@ -306,7 +305,6 @@ def run_test(self):\n \n             # node5 collects fee and block subsidy to keep accounting simple\n             self.generate(self.nodes[5], 1)\n-            self.sync_blocks()\n \n             # Verify that the receiving wallet contains a UTXO with the expected address, and expected descriptor\n             for n, to_node in enumerate(range(from_node, from_node + 4)):\n@@ -336,7 +334,6 @@ def run_test(self):\n         # Fund node 4:\n         self.nodes[5].sendtoaddress(self.nodes[4].getnewaddress(), Decimal(\"1\"))\n         self.generate(self.nodes[5], 1)\n-        self.sync_blocks()\n         assert_equal(self.nodes[4].getbalance(), 1)\n \n         self.log.info(\"Nodes with addresstype=legacy never use a P2WPKH change output (unless changetype is set otherwise):\")"
      },
      {
        "sha": "15e69b6a5e1fc09b49c85c17b3c8c7f5d371b9d2",
        "filename": "test/functional/wallet_avoidreuse.py",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_avoidreuse.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_avoidreuse.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_avoidreuse.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -80,7 +80,6 @@ def run_test(self):\n         self.test_immutable()\n \n         self.generate(self.nodes[0], 110)\n-        self.sync_all()\n         self.test_change_remains_change(self.nodes[1])\n         reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n         self.test_sending_from_reused_address_without_avoid_reuse()\n@@ -175,7 +174,6 @@ def test_sending_from_reused_address_without_avoid_reuse(self):\n \n         self.nodes[0].sendtoaddress(fundaddr, 10)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # listunspent should show 1 single, unused 10 btc output\n         assert_unspent(self.nodes[1], total_count=1, total_sum=10, reused_supported=True, reused_count=0)\n@@ -186,7 +184,6 @@ def test_sending_from_reused_address_without_avoid_reuse(self):\n \n         self.nodes[1].sendtoaddress(retaddr, 5)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # listunspent should show 1 single, unused 5 btc output\n         assert_unspent(self.nodes[1], total_count=1, total_sum=5, reused_supported=True, reused_count=0)\n@@ -195,7 +192,6 @@ def test_sending_from_reused_address_without_avoid_reuse(self):\n \n         self.nodes[0].sendtoaddress(fundaddr, 10)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # listunspent should show 2 total outputs (5, 10 btc), one unused (5), one reused (10)\n         assert_unspent(self.nodes[1], total_count=2, total_sum=15, reused_count=1, reused_sum=10)\n@@ -229,7 +225,6 @@ def test_sending_from_reused_address_fails(self, second_addr_type):\n \n         self.nodes[0].sendtoaddress(fundaddr, 10)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # listunspent should show 1 single, unused 10 btc output\n         assert_unspent(self.nodes[1], total_count=1, total_sum=10, reused_supported=True, reused_count=0)\n@@ -238,7 +233,6 @@ def test_sending_from_reused_address_fails(self, second_addr_type):\n \n         self.nodes[1].sendtoaddress(retaddr, 5)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # listunspent should show 1 single, unused 5 btc output\n         assert_unspent(self.nodes[1], total_count=1, total_sum=5, reused_supported=True, reused_count=0)\n@@ -260,7 +254,6 @@ def test_sending_from_reused_address_fails(self, second_addr_type):\n \n             self.nodes[0].sendtoaddress(new_fundaddr, 10)\n             self.generate(self.nodes[0], 1)\n-            self.sync_all()\n \n             # listunspent should show 2 total outputs (5, 10 btc), one unused (5), one reused (10)\n             assert_unspent(self.nodes[1], total_count=2, total_sum=15, reused_count=1, reused_sum=10)\n@@ -303,7 +296,6 @@ def test_getbalances_used(self):\n             self.nodes[0].sendtoaddress(new_addr, 1)\n \n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # send transaction that should not use all the available outputs\n         # per the current coin selection algorithm\n@@ -335,7 +327,6 @@ def test_full_destination_group_is_preferred(self):\n             self.nodes[0].sendtoaddress(new_addr, 1)\n \n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # Sending a transaction that is smaller than each one of the\n         # available outputs\n@@ -364,7 +355,6 @@ def test_all_destination_groups_are_used(self):\n             self.nodes[0].sendtoaddress(new_addr, 1)\n \n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # Sending a transaction that needs to use the full groups\n         # of 100 inputs but also the incomplete group of 2 inputs."
      },
      {
        "sha": "ed2a2be47f33f36b932cb6b9edff7d12824e6495",
        "filename": "test/functional/wallet_backup.py",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_backup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_backup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_backup.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -89,7 +89,6 @@ def do_one_round(self):\n         # Must sync mempools before mining.\n         self.sync_mempools()\n         self.generate(self.nodes[3], 1)\n-        self.sync_blocks()\n \n     # As above, this mirrors the original bash test.\n     def start_three(self, args=()):\n@@ -131,13 +130,9 @@ def init_three(self):\n     def run_test(self):\n         self.log.info(\"Generating initial blockchain\")\n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n         self.generate(self.nodes[1], 1)\n-        self.sync_blocks()\n         self.generate(self.nodes[2], 1)\n-        self.sync_blocks()\n         self.generate(self.nodes[3], COINBASE_MATURITY)\n-        self.sync_blocks()\n \n         assert_equal(self.nodes[0].getbalance(), 50)\n         assert_equal(self.nodes[1].getbalance(), 50)\n@@ -166,7 +161,6 @@ def run_test(self):\n \n         # Generate 101 more blocks, so any fees paid mature\n         self.generate(self.nodes[3], COINBASE_MATURITY + 1)\n-        self.sync_all()\n \n         balance0 = self.nodes[0].getbalance()\n         balance1 = self.nodes[1].getbalance()"
      },
      {
        "sha": "a42c2632e38c5baaeec150032bae8850d22ed83f",
        "filename": "test/functional/wallet_balance.py",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_balance.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_balance.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_balance.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -71,10 +71,8 @@ def run_test(self):\n \n         self.log.info(\"Mining blocks ...\")\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         self.generate(self.nodes[1], 1)\n         self.generatetoaddress(self.nodes[1], COINBASE_MATURITY + 1, ADDRESS_WATCHONLY)\n-        self.sync_all()\n \n         if not self.options.descriptors:\n             # Tests legacy watchonly behavior which is not present (and does not need to be tested) in descriptor wallets\n@@ -197,7 +195,6 @@ def test_balances(*, fee_node_1=0):\n         test_balances(fee_node_1=Decimal('0.02'))\n \n         self.generatetoaddress(self.nodes[1], 1, ADDRESS_WATCHONLY)\n-        self.sync_all()\n \n         # balances are correct after the transactions are confirmed\n         balance_node0 = Decimal('69.99')  # node 1's send plus change from node 0's send\n@@ -211,7 +208,6 @@ def test_balances(*, fee_node_1=0):\n         txs = create_transactions(self.nodes[1], self.nodes[0].getnewaddress(), Decimal('29.97'), [Decimal('0.01')])\n         self.nodes[1].sendrawtransaction(txs[0]['hex'])\n         self.generatetoaddress(self.nodes[1], 2, ADDRESS_WATCHONLY)\n-        self.sync_all()\n \n         # getbalance with a minconf incorrectly excludes coins that have been spent more recently than the minconf blocks ago\n         # TODO: fix getbalance tracking of coin spentness depth\n@@ -258,7 +254,6 @@ def test_balances(*, fee_node_1=0):\n \n         # Now confirm tx_replace\n         block_reorg = self.generatetoaddress(self.nodes[1], 1, ADDRESS_WATCHONLY)[0]\n-        self.sync_all()\n         assert_equal(self.nodes[0].getbalance(minconf=0), total_amount)\n \n         self.log.info('Put txs back into mempool of node 1 (not node 0)')\n@@ -274,7 +269,6 @@ def test_balances(*, fee_node_1=0):\n         self.sync_blocks()\n         self.nodes[1].sendrawtransaction(tx_orig)\n         self.generatetoaddress(self.nodes[1], 1, ADDRESS_WATCHONLY)\n-        self.sync_all()\n         assert_equal(self.nodes[0].getbalance(minconf=0), total_amount + 1)  # The reorg recovered our fee of 1 coin\n \n "
      },
      {
        "sha": "916744c853759598a0987ab8e68c0bcc036ba009",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -342,7 +342,6 @@ def run_test(self):\n \n         self.sync_all()\n         self.generate(self.nodes[1], 1)  # mine a block\n-        self.sync_all()\n \n         unspent_txs = self.nodes[0].listunspent()  # zero value tx must be in listunspents output\n         found = False"
      },
      {
        "sha": "7c0a9ef5377766d6001c519a2f93ddfacdd731fd",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -62,7 +62,6 @@ def skip_test_if_missing_module(self):\n     def clear_mempool(self):\n         # Clear mempool between subtests. The subtests may only depend on chainstate (utxos)\n         self.generate(self.nodes[1], 1)\n-        self.sync_all()\n \n     def run_test(self):\n         # Encrypt wallet for test_locked_wallet_fails test\n@@ -75,12 +74,10 @@ def run_test(self):\n         # fund rbf node with 10 coins of 0.001 btc (100,000 satoshis)\n         self.log.info(\"Mining blocks...\")\n         self.generate(peer_node, 110)\n-        self.sync_all()\n         for _ in range(25):\n             peer_node.sendtoaddress(rbf_node_address, 0.001)\n         self.sync_all()\n         self.generate(peer_node, 1)\n-        self.sync_all()\n         assert_equal(rbf_node.getbalance(), Decimal(\"0.025\"))\n \n         self.log.info(\"Running tests\")\n@@ -444,7 +441,6 @@ def test_watchonly_psbt(self, peer_node, rbf_node, dest_address):\n     funding_address2 = watcher.getnewaddress(address_type='bech32')\n     peer_node.sendmany(\"\", {funding_address1: 0.001, funding_address2: 0.001})\n     self.generate(peer_node, 1)\n-    self.sync_all()\n \n     # Create single-input PSBT for transaction to be bumped\n     psbt = watcher.walletcreatefundedpsbt([], {dest_address: 0.0005}, 0, {\"fee_rate\": 1}, True)['psbt']"
      },
      {
        "sha": "09372da7b192187a60a78abbbb8b166f54a1a482",
        "filename": "test/functional/wallet_groups.py",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_groups.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_groups.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_groups.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -46,7 +46,6 @@ def run_test(self):\n         [self.nodes[0].sendtoaddress(addr, 0.5) for addr in addrs]\n \n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # For each node, send 0.2 coins back to 0;\n         # - node[1] should pick one 0.5 UTXO and leave the rest\n@@ -114,7 +113,6 @@ def run_test(self):\n         self.nodes[0].sendtoaddress(addr_aps, 1.0)\n         self.nodes[0].sendtoaddress(addr_aps, 1.0)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         with self.nodes[3].assert_debug_log(['Fee non-grouped = 2820, grouped = 4160, using grouped']):\n             txid4 = self.nodes[3].sendtoaddress(self.nodes[0].getnewaddress(), 0.1)\n         tx4 = self.nodes[3].getrawtransaction(txid4, True)\n@@ -126,7 +124,6 @@ def run_test(self):\n         addr_aps2 = self.nodes[3].getnewaddress()\n         [self.nodes[0].sendtoaddress(addr_aps2, 1.0) for _ in range(5)]\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         with self.nodes[3].assert_debug_log(['Fee non-grouped = 5520, grouped = 8240, using non-grouped']):\n             txid5 = self.nodes[3].sendtoaddress(self.nodes[0].getnewaddress(), 2.95)\n         tx5 = self.nodes[3].getrawtransaction(txid5, True)\n@@ -140,7 +137,6 @@ def run_test(self):\n         addr_aps3 = self.nodes[4].getnewaddress()\n         [self.nodes[0].sendtoaddress(addr_aps3, 1.0) for _ in range(5)]\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         with self.nodes[4].assert_debug_log(['Fee non-grouped = 5520, grouped = 8240, using grouped']):\n             txid6 = self.nodes[4].sendtoaddress(self.nodes[0].getnewaddress(), 2.95)\n         tx6 = self.nodes[4].getrawtransaction(txid6, True)\n@@ -163,7 +159,6 @@ def run_test(self):\n             signed_tx = self.nodes[0].signrawtransactionwithwallet(funded_tx['hex'])\n             self.nodes[0].sendrawtransaction(signed_tx['hex'])\n             self.generate(self.nodes[0], 1)\n-            self.sync_all()\n \n         # Check that we can create a transaction that only requires ~100 of our\n         # utxos, without pulling in all outputs and creating a transaction that"
      },
      {
        "sha": "73c444b49d37e8c8a6db966bcdb28c6ee55ef796",
        "filename": "test/functional/wallet_hd.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_hd.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -229,7 +229,6 @@ def run_test(self):\n             txid = self.nodes[0].sendtoaddress(addr, 1)\n             origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n             self.generate(self.nodes[0], 1)\n-            self.sync_blocks()\n             origin_rpc.gettransaction(txid)\n             assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, txid)\n             out_of_kp_txid = txid\n@@ -240,7 +239,6 @@ def run_test(self):\n             txid = self.nodes[0].sendtoaddress(last_addr, 1)\n             origin_rpc.sendrawtransaction(self.nodes[0].gettransaction(txid)['hex'])\n             self.generate(self.nodes[0], 1)\n-            self.sync_blocks()\n             origin_rpc.gettransaction(txid)\n             restore_rpc.gettransaction(txid)\n             assert_raises_rpc_error(-5, 'Invalid or non-wallet transaction id', restore_rpc.gettransaction, out_of_kp_txid)"
      },
      {
        "sha": "1a2d343000426e14aca8d8509bab6062e0abdd16",
        "filename": "test/functional/wallet_import_rescan.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_import_rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_import_rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_import_rescan.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -189,7 +189,6 @@ def run_test(self):\n             self.nodes[0].getblockheader(self.nodes[0].getbestblockhash())[\"time\"] + TIMESTAMP_WINDOW + 1,\n         )\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # For each variation of wallet key import, invoke the import RPC and\n         # check the results from getbalance and listtransactions."
      },
      {
        "sha": "eedebf9f5fd9f27eb4173d0a0c3afe2c8e36ec67",
        "filename": "test/functional/wallet_importdescriptors.py",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_importdescriptors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_importdescriptors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importdescriptors.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -406,7 +406,6 @@ def run_test(self):\n                      ismine=True)\n         txid = w0.sendtoaddress(address, 49.99995540)\n         self.generatetoaddress(self.nodes[0], 6, w0.getnewaddress())\n-        self.sync_blocks()\n         tx = wpriv.createrawtransaction([{\"txid\": txid, \"vout\": 0}], {w0.getnewaddress(): 49.999})\n         signed_tx = wpriv.signrawtransactionwithwallet(tx)\n         w1.sendrawtransaction(signed_tx['hex'])\n@@ -452,12 +451,10 @@ def run_test(self):\n         assert_equal(wmulti_priv.getwalletinfo()['keypoolsize'], 1000)\n         txid = w0.sendtoaddress(addr, 10)\n         self.generate(self.nodes[0], 6)\n-        self.sync_all()\n         send_txid = wmulti_priv.sendtoaddress(w0.getnewaddress(), 8)\n         decoded = wmulti_priv.gettransaction(txid=send_txid, verbose=True)['decoded']\n         assert_equal(len(decoded['vin'][0]['txinwitness']), 4)\n         self.generate(self.nodes[0], 6)\n-        self.sync_all()\n \n         self.nodes[1].createwallet(wallet_name=\"wmulti_pub\", disable_private_keys=True, blank=True, descriptors=True)\n         wmulti_pub = self.nodes[1].get_wallet_rpc(\"wmulti_pub\")\n@@ -495,7 +492,6 @@ def run_test(self):\n         vout2 = find_vout_for_address(self.nodes[0], txid2, addr2)\n \n         self.generate(self.nodes[0], 6)\n-        self.sync_all()\n         assert_equal(wmulti_pub.getbalance(), wmulti_priv.getbalance())\n \n         # Make sure that descriptor wallets containing multiple xpubs in a single descriptor load correctly\n@@ -583,7 +579,6 @@ def run_test(self):\n         addr = wmulti_priv_big.getnewaddress()\n         w0.sendtoaddress(addr, 10)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         # It is standard and would relay.\n         txid = wmulti_priv_big.sendtoaddress(w0.getnewaddress(), 9.999)\n         decoded = wmulti_priv_big.gettransaction(txid=txid, verbose=True)['decoded']\n@@ -618,7 +613,6 @@ def run_test(self):\n         addr = multi_priv_big.getnewaddress(\"\", \"legacy\")\n         w0.sendtoaddress(addr, 10)\n         self.generate(self.nodes[0], 6)\n-        self.sync_all()\n         # It is standard and would relay.\n         txid = multi_priv_big.sendtoaddress(w0.getnewaddress(), 10, \"\", \"\", True)\n         decoded = multi_priv_big.gettransaction(txid=txid, verbose=True)['decoded']"
      },
      {
        "sha": "96003eb0d63164a184f29b2841eb9d5bd04f58d1",
        "filename": "test/functional/wallet_importprunedfunds.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_importprunedfunds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_importprunedfunds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importprunedfunds.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -27,8 +27,6 @@ def run_test(self):\n         self.log.info(\"Mining blocks...\")\n         self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n \n-        self.sync_all()\n-\n         # address\n         address1 = self.nodes[0].getnewaddress()\n         # pubkey"
      },
      {
        "sha": "f392dd80fe904301b03081d37c93a84d57b5a0a8",
        "filename": "test/functional/wallet_keypool_topup.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_keypool_topup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_keypool_topup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_keypool_topup.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -66,7 +66,6 @@ def run_test(self):\n             self.generate(self.nodes[0], 1)\n             self.nodes[0].sendtoaddress(addr_extpool, 5)\n             self.generate(self.nodes[0], 1)\n-            self.sync_blocks()\n \n             self.log.info(\"Restart node with wallet backup\")\n             self.stop_node(idx)"
      },
      {
        "sha": "d6b1d603cef81bb9027d43f7f7d640f71ca0ad6a",
        "filename": "test/functional/wallet_listreceivedby.py",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_listreceivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_listreceivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listreceivedby.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -25,7 +25,6 @@ def skip_test_if_missing_module(self):\n     def run_test(self):\n         # Generate block to get out of IBD\n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n \n         # save the number of coinbase reward addresses so far\n         num_cb_reward_addresses = len(self.nodes[1].listreceivedbyaddress(minconf=0, include_empty=True, include_watchonly=True))\n@@ -44,7 +43,6 @@ def run_test(self):\n                             True)\n         # Bury Tx under 10 block so it will be returned by listreceivedbyaddress\n         self.generate(self.nodes[1], 10)\n-        self.sync_all()\n         assert_array_result(self.nodes[1].listreceivedbyaddress(),\n                             {\"address\": addr},\n                             {\"address\": addr, \"label\": \"\", \"amount\": Decimal(\"0.1\"), \"confirmations\": 10, \"txids\": [txid, ]})\n@@ -79,7 +77,6 @@ def run_test(self):\n         other_addr = self.nodes[1].getnewaddress()\n         txid2 = self.nodes[0].sendtoaddress(other_addr, 0.1)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         # Same test as above should still pass\n         expected = {\"address\": addr, \"label\": \"\", \"amount\": Decimal(\"0.1\"), \"confirmations\": 11, \"txids\": [txid, ]}\n         res = self.nodes[1].listreceivedbyaddress(0, True, True, addr)\n@@ -116,7 +113,6 @@ def run_test(self):\n \n         # Bury Tx under 10 block so it will be returned by the default getreceivedbyaddress\n         self.generate(self.nodes[1], 10)\n-        self.sync_all()\n         balance = self.nodes[1].getreceivedbyaddress(addr)\n         assert_equal(balance, Decimal(\"0.1\"))\n \n@@ -145,7 +141,6 @@ def run_test(self):\n         assert_equal(balance, balance_by_label)\n \n         self.generate(self.nodes[1], 10)\n-        self.sync_all()\n         # listreceivedbylabel should return updated received list\n         assert_array_result(self.nodes[1].listreceivedbylabel(),\n                             {\"label\": label},"
      },
      {
        "sha": "14bba3620d157f02bbf9bb0efad617b0fcaf5fda",
        "filename": "test/functional/wallet_listsinceblock.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_listsinceblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_listsinceblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listsinceblock.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -31,7 +31,6 @@ def run_test(self):\n         # only one connection. (See fPreferredDownload in net_processing)\n         self.connect_nodes(1, 2)\n         self.generate(self.nodes[2], COINBASE_MATURITY + 1)\n-        self.sync_all()\n \n         self.test_no_blockhash()\n         self.test_invalid_blockhash()\n@@ -198,7 +197,6 @@ def test_double_spend(self):\n         address = key_to_p2wpkh(eckey.get_pubkey().get_bytes())\n         self.nodes[2].sendtoaddress(address, 10)\n         self.generate(self.nodes[2], 6)\n-        self.sync_all()\n         self.nodes[2].importprivkey(privkey)\n         utxos = self.nodes[2].listunspent()\n         utxo = [u for u in utxos if u[\"address\"] == address][0]"
      },
      {
        "sha": "cda716c5bab22fd20d37b49bca069704bdf6fbf0",
        "filename": "test/functional/wallet_listtransactions.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listtransactions.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -94,7 +94,6 @@ def run_test(self):\n             self.nodes[0].importaddress(multisig[\"redeemScript\"], \"watchonly\", False, True)\n             txid = self.nodes[1].sendtoaddress(multisig[\"address\"], 0.1)\n             self.generate(self.nodes[1], 1)\n-            self.sync_all()\n             assert_equal(len(self.nodes[0].listtransactions(label=\"watchonly\", include_watchonly=True)), 1)\n             assert_equal(len(self.nodes[0].listtransactions(dummy=\"watchonly\", include_watchonly=True)), 1)\n             assert len(self.nodes[0].listtransactions(label=\"watchonly\", count=100, include_watchonly=False)) == 0"
      },
      {
        "sha": "c145fe556e2a45baea8c651ab46d7c4b9e2509cb",
        "filename": "test/functional/wallet_multisig_descriptor_psbt.py",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_multisig_descriptor_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_multisig_descriptor_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multisig_descriptor_psbt.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -111,7 +111,6 @@ def run_test(self):\n         self.log.info(\"Send funds to the resulting multisig receiving address...\")\n         coordinator_wallet.sendtoaddress(multisig_receiving_address, deposit_amount)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         for participant in participants[\"multisigs\"]:\n             assert_approx(participant.getbalance(), deposit_amount, vspan=0.001)\n \n@@ -137,7 +136,6 @@ def run_test(self):\n \n         self.log.info(\"Check that balances are correct after the transaction has been included in a block.\")\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         assert_approx(participants[\"multisigs\"][0].getbalance(), deposit_amount - value, vspan=0.001)\n         assert_equal(participants[\"signers\"][self.N - 1].getbalance(), value)\n \n@@ -154,7 +152,6 @@ def run_test(self):\n \n         self.log.info(\"Check that balances are correct after the transaction has been included in a block.\")\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n         assert_approx(participants[\"multisigs\"][0].getbalance(), deposit_amount - (value * 2), vspan=0.001)\n         assert_equal(participants[\"signers\"][self.N - 1].getbalance(), value * 2)\n "
      },
      {
        "sha": "7295db46536f1f6fd54b7647957c50e0f3f00bfb",
        "filename": "test/functional/wallet_orphanedreward.py",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_orphanedreward.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_orphanedreward.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_orphanedreward.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -26,20 +26,17 @@ def run_test(self):\n         # it later.\n         self.sync_blocks()\n         blk = self.generate(self.nodes[1], 1)[0]\n-        self.sync_blocks()\n \n         # Let the block reward mature and send coins including both\n         # the existing balance and the block reward.\n         self.generate(self.nodes[0], 150)\n-        self.sync_blocks()\n         assert_equal(self.nodes[1].getbalance(), 10 + 25)\n         txid = self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 30)\n \n         # Orphan the block reward and make sure that the original coins\n         # from the wallet can still be spent.\n         self.nodes[0].invalidateblock(blk)\n         self.generate(self.nodes[0], 152)\n-        self.sync_blocks()\n         # Without the following abandontransaction call, the coins are\n         # not considered available yet.\n         assert_equal(self.nodes[1].getbalances()[\"mine\"], {"
      },
      {
        "sha": "fbd870338cef1b30e0beb5518bc5641347fc8031",
        "filename": "test/functional/wallet_reorgsrestore.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_reorgsrestore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_reorgsrestore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_reorgsrestore.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -33,7 +33,6 @@ def run_test(self):\n         # Send a tx from which to conflict outputs later\n         txid_conflict_from = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), Decimal(\"10\"))\n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n \n         # Disconnect node1 from others to reorg its chain later\n         self.disconnect_nodes(0, 1)"
      },
      {
        "sha": "a8627ce3a0bd1378fa0ac1508a588d2967a3179a",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -246,7 +246,6 @@ def run_test(self):\n \n         w0.sendtoaddress(a2_receive, 10) # fund w3\n         self.generate(self.nodes[0], 1)\n-        self.sync_blocks()\n \n         if not self.options.descriptors:\n             # w4 has private keys enabled, but only contains watch-only keys (from w2)\n@@ -265,7 +264,6 @@ def run_test(self):\n \n             w0.sendtoaddress(a2_receive, 10) # fund w4\n             self.generate(self.nodes[0], 1)\n-            self.sync_blocks()\n \n         self.log.info(\"Send to address...\")\n         self.test_send(from_wallet=w0, to_wallet=w1, amount=1)\n@@ -502,7 +500,6 @@ def run_test(self):\n         self.nodes[0].sendtoaddress(addr, 10)\n         self.nodes[0].sendtoaddress(ext_wallet.getnewaddress(), 10)\n         self.generate(self.nodes[0], 6)\n-        self.sync_all()\n         ext_utxo = ext_fund.listunspent(addresses=[addr])[0]\n \n         # An external input without solving data should result in an error"
      },
      {
        "sha": "00aded5ac0e5ce311b40d3d30cd89ae4700f8804",
        "filename": "test/functional/wallet_signer.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_signer.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -112,7 +112,6 @@ def run_test(self):\n         self.log.info('Prepare mock PSBT')\n         self.nodes[0].sendtoaddress(address1, 1)\n         self.generate(self.nodes[0], 1)\n-        self.sync_all()\n \n         # Load private key into wallet to generate a signed PSBT for the mock\n         self.nodes[1].createwallet(wallet_name=\"mock\", disable_private_keys=False, blank=True, descriptors=True)"
      },
      {
        "sha": "855c635fd4855477e5b6b6d5aa785ea8eed276f8",
        "filename": "test/functional/wallet_txn_clone.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_txn_clone.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -129,7 +129,6 @@ def run_test(self):\n         self.nodes[2].sendrawtransaction(node0_tx2[\"hex\"])\n         self.nodes[2].sendrawtransaction(tx2[\"hex\"])\n         self.generate(self.nodes[2], 1)  # Mine another block to make sure we sync\n-        self.sync_blocks()\n \n         # Re-fetch transaction info:\n         tx1 = self.nodes[0].gettransaction(txid1)"
      },
      {
        "sha": "f1af20bedda4a8f1b74efa6cbdb7cb037290a963",
        "filename": "test/functional/wallet_txn_doublespend.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_txn_doublespend.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa974f1f1417a536636347072e86bcb54a4c909c/test/functional/wallet_txn_doublespend.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_txn_doublespend.py?ref=fa974f1f1417a536636347072e86bcb54a4c909c",
        "patch": "@@ -124,7 +124,6 @@ def run_test(self):\n         # Reconnect the split network, and sync chain:\n         self.connect_nodes(1, 2)\n         self.generate(self.nodes[2], 1)  # Mine another block to make sure we sync\n-        self.sync_blocks()\n         assert_equal(self.nodes[0].gettransaction(doublespend_txid)[\"confirmations\"], 2)\n \n         # Re-fetch transaction info:"
      }
    ]
  },
  {
    "sha": "fac23c211407a77af82bb1491c48c8d37022c8b3",
    "node_id": "C_kwDOABII59oAKGZhYzIzYzIxMTQwN2E3N2FmODJiYjE0OTFjNDhjOGQzNzAyMmM4YjM",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-07-28T11:57:16Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-10T10:10:24Z"
      },
      "message": "scripted-diff: Bump copyright headers\n\nThe previous diff touched most files in ./test/, so bump the headers to\navoid having to touch them again for a bump later.\n\n-BEGIN VERIFY SCRIPT-\n./contrib/devtools/copyright_header.py update ./test/\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "39d58eb44ca4a8a8b3b37f0fe0c7cbdbf5745ec9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39d58eb44ca4a8a8b3b37f0fe0c7cbdbf5745ec9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac23c211407a77af82bb1491c48c8d37022c8b3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi3uwv9FeseTshWISW3pdXNijIZQxRTqYyZtuQRc3Szfxc2M802MKAvw2vq+5mL\npsPshaT0Qqm/T68Rf9i6odEugZ/tuVdAG8t0LLoAPMW19IVqq90uiqlrxFDrCzlI\nfzSBfVR3DGyGm40zah2x9j26gDOSUeBW1XsVSi2IcVUaNVIG4ECrjfzfsskC9+/k\ntjEWGRKjV0lRMoeqAs34Rt3U3bjHItbQcsaOwMZYKqMXkrotUWc1L8JAkZFB8zMc\nDBx7cPYIJ8JKpdm49serYgSGQgldnSB9RjX7F6DbbSHApEoUheQZk03/crDid6EQ\nX6UntdW42E2GFqIpJkGQsSGXRnh8fZ4Bit140B4LNMfEqOkwy0vCBjxCtv7Gd2Zw\nYZtbmJdXgZhFw3R43/40JXvu6mKr25q2uMt9Loh/cnUg5HEheJmPp5YporH9VdlO\n/Jq2BMtrud5Vux223o4Dsk/fynpyzWenLzzjzEOAeidoFTqAVEqD4K/7h7+wmOGs\nFdnwC4QA\n=VAV5\n-----END PGP SIGNATURE-----",
        "payload": "tree 39d58eb44ca4a8a8b3b37f0fe0c7cbdbf5745ec9\nparent fa974f1f1417a536636347072e86bcb54a4c909c\nauthor MarcoFalke <falke.marco@gmail.com> 1627473436 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1636539024 +0100\n\nscripted-diff: Bump copyright headers\n\nThe previous diff touched most files in ./test/, so bump the headers to\navoid having to touch them again for a bump later.\n\n-BEGIN VERIFY SCRIPT-\n./contrib/devtools/copyright_header.py update ./test/\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac23c211407a77af82bb1491c48c8d37022c8b3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac23c211407a77af82bb1491c48c8d37022c8b3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac23c211407a77af82bb1491c48c8d37022c8b3/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa974f1f1417a536636347072e86bcb54a4c909c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa974f1f1417a536636347072e86bcb54a4c909c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa974f1f1417a536636347072e86bcb54a4c909c"
      }
    ],
    "stats": {
      "total": 350,
      "additions": 175,
      "deletions": 175
    },
    "files": [
      {
        "sha": "33c81bde131802131028906c98e0de2be5f1ab76",
        "filename": "test/functional/combine_logs.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/combine_logs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/combine_logs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/combine_logs.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Combine logs from multiple bitcoin nodes as well as the test_framework log."
      },
      {
        "sha": "33d628296132da427211016f3105044fad5ebb2a",
        "filename": "test/functional/data/invalid_txs.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/data/invalid_txs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/data/invalid_txs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/data/invalid_txs.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\""
      },
      {
        "sha": "2ad96da8540c91ae8eab9d078213bb6e7bd2a4cf",
        "filename": "test/functional/example_test.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/example_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/example_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/example_test.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"An example functional test"
      },
      {
        "sha": "32cf4a47f488948680bf05b7120dd54dc26790fe",
        "filename": "test/functional/feature_abortnode.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_abortnode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_abortnode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_abortnode.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test bitcoind aborts if can't disconnect a block."
      },
      {
        "sha": "01b6c5f9ebd4df2c6801f3149e60f7a20a870314",
        "filename": "test/functional/feature_anchors.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_anchors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_anchors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_anchors.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test block-relay-only anchors functionality\"\"\""
      },
      {
        "sha": "910ee20ac3b91a34816b970093932623e9401497",
        "filename": "test/functional/feature_asmap.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_asmap.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_asmap.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_asmap.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test asmap config argument for ASN-based IP bucketing."
      },
      {
        "sha": "ad921cc13f5233e8b97d403ba5ce15a5a8549684",
        "filename": "test/functional/feature_assumevalid.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_assumevalid.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_assumevalid.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_assumevalid.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test logic for skipping signature validation on old blocks."
      },
      {
        "sha": "476a6a0c14d0423f0550a6e1fd00d44f78dbcbcc",
        "filename": "test/functional/feature_backwards_compatibility.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_backwards_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_backwards_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_backwards_compatibility.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Backwards compatibility functional test"
      },
      {
        "sha": "af26f94033dde006e9a156ef1f888990cc554757",
        "filename": "test/functional/feature_bind_extra.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_bind_extra.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_bind_extra.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_bind_extra.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2021 The Bitcoin Core developers\n+# Copyright (c) 2014-2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\""
      },
      {
        "sha": "a17638c28eadd5abca4d1af3c0f48552e8838741",
        "filename": "test/functional/feature_bip68_sequence.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_bip68_sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_bip68_sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_bip68_sequence.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test BIP68 implementation.\"\"\""
      },
      {
        "sha": "e93edc8b2babad7ccd2e7b9094d86c0883bebbc9",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test block processing.\"\"\""
      },
      {
        "sha": "39eb700b4fba0c84bc38878ad2a559354bdb6b76",
        "filename": "test/functional/feature_blockfilterindex_prune.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_blockfilterindex_prune.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_blockfilterindex_prune.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_blockfilterindex_prune.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test blockfilterindex in conjunction with prune.\"\"\""
      },
      {
        "sha": "e8d2ec36761588f7658f837e59919acaaf3a52e5",
        "filename": "test/functional/feature_blocksdir.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_blocksdir.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_blocksdir.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_blocksdir.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the blocksdir option."
      },
      {
        "sha": "1702debe170183fc3fd9eb5eef1e3dbf06147fed",
        "filename": "test/functional/feature_cltv.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_cltv.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test BIP65 (CHECKLOCKTIMEVERIFY)."
      },
      {
        "sha": "19bb908b6401f3a04dba594652a5d88dec046383",
        "filename": "test/functional/feature_coinstatsindex.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_coinstatsindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_coinstatsindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_coinstatsindex.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test coinstatsindex across nodes."
      },
      {
        "sha": "eea5fa24eeaad8b9e99053b191d7c62df1e673d8",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test various command line arguments and configuration file parameters.\"\"\""
      },
      {
        "sha": "8aada089bd48622bd83e06dfbc02dde669010675",
        "filename": "test/functional/feature_csv_activation.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_csv_activation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_csv_activation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_csv_activation.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test CSV soft fork activation."
      },
      {
        "sha": "3e60efbb3ca599fad9053bb9002d1a0250346207",
        "filename": "test/functional/feature_dbcrash.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_dbcrash.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_dbcrash.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_dbcrash.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test recovery from a crash during chainstate writing."
      },
      {
        "sha": "fbdb66bf9e20da8db03fc2343b96065acd442fa3",
        "filename": "test/functional/feature_dersig.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_dersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_dersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_dersig.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test BIP66 (DER SIG)."
      },
      {
        "sha": "46d5bcf1a6469b10f936e4cbbb944ae99d39f136",
        "filename": "test/functional/feature_fee_estimation.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_fee_estimation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_fee_estimation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_fee_estimation.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test fee estimation code.\"\"\""
      },
      {
        "sha": "945ece6a33f7dd86616df0540ebac5eb92e7d519",
        "filename": "test/functional/feature_filelock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_filelock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_filelock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_filelock.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Check that it's not possible to start a second bitcoind instance using the same datadir or wallet.\"\"\""
      },
      {
        "sha": "4b66030b47b8a6c918448759e86ed3521604cb1d",
        "filename": "test/functional/feature_help.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_help.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_help.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_help.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Verify that starting bitcoin with -h works as expected.\"\"\""
      },
      {
        "sha": "818e4c923bb0df4927c03ab112ad211cf44559b6",
        "filename": "test/functional/feature_includeconf.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_includeconf.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_includeconf.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_includeconf.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Tests the includeconf argument"
      },
      {
        "sha": "7f030c67739450f9c6986fd8d0766ff12c688ab8",
        "filename": "test/functional/feature_loadblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_loadblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_loadblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_loadblock.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test loadblock option"
      },
      {
        "sha": "fe4f02dfe62dcf00520379c7cd895dd4067cc2f5",
        "filename": "test/functional/feature_logging.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_logging.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_logging.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_logging.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test debug logging.\"\"\""
      },
      {
        "sha": "b4e0df8a113b8defcf19a02cb84fb257721d049f",
        "filename": "test/functional/feature_maxuploadtarget.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_maxuploadtarget.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test behavior of -maxuploadtarget."
      },
      {
        "sha": "489a729cfc70b20753d8c2250eb985f0c2d895d0",
        "filename": "test/functional/feature_minchainwork.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_minchainwork.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_minchainwork.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_minchainwork.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test logic for setting nMinimumChainWork on command line."
      },
      {
        "sha": "e038afa1adedb38b30a1de0bcd312c0ba420f16e",
        "filename": "test/functional/feature_notifications.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_notifications.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_notifications.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_notifications.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the -alertnotify, -blocknotify and -walletnotify options.\"\"\""
      },
      {
        "sha": "951cf38ecb6878f3d3887269666dfc552cc76700",
        "filename": "test/functional/feature_nulldummy.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_nulldummy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_nulldummy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_nulldummy.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test NULLDUMMY softfork."
      },
      {
        "sha": "3d762c8197765a4f520f0bf19d354f5ae392d299",
        "filename": "test/functional/feature_presegwit_node_upgrade.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_presegwit_node_upgrade.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_presegwit_node_upgrade.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_presegwit_node_upgrade.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test a pre-segwit node upgrading to segwit consensus\"\"\""
      },
      {
        "sha": "7d9e5b70fc6433e52234178ea423498208b903f9",
        "filename": "test/functional/feature_proxy.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_proxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_proxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_proxy.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test bitcoind with different proxy configuration."
      },
      {
        "sha": "0edf1d66c85c0500c0c908e66c0e34b980c4464a",
        "filename": "test/functional/feature_pruning.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_pruning.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the pruning code."
      },
      {
        "sha": "e073c8fabd5e178961a7f671449caf0aaa998686",
        "filename": "test/functional/feature_rbf.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_rbf.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_rbf.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_rbf.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the RBF code.\"\"\""
      },
      {
        "sha": "44040f426fbd0afc88c38613c4bcf6db063b982d",
        "filename": "test/functional/feature_reindex.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_reindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_reindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_reindex.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test running bitcoind with -reindex and -reindex-chainstate options."
      },
      {
        "sha": "6d7f1def8848f41679bb0119222a944aa9ff6ab3",
        "filename": "test/functional/feature_segwit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_segwit.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the SegWit changeover logic.\"\"\""
      },
      {
        "sha": "20018f010f538d4f4ca0f224748e2c8e8db913f1",
        "filename": "test/functional/feature_settings.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_settings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_settings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_settings.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test various command line arguments and configuration file parameters.\"\"\""
      },
      {
        "sha": "6578caee3f56d46530efdaa925ee2301910f6f9d",
        "filename": "test/functional/feature_signet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_signet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_signet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_signet.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test basic signet functionality\"\"\""
      },
      {
        "sha": "9e6639f838531600e42e2323e3b2ac16cd5cbfcd",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n # Test Taproot softfork (BIPs 340-342)"
      },
      {
        "sha": "fb4fa61a1c99fd5ede37c6ed7b40d0c2f9f23868",
        "filename": "test/functional/feature_versionbits_warning.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_versionbits_warning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/feature_versionbits_warning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_versionbits_warning.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test version bits warning system."
      },
      {
        "sha": "6076dceeafd32d6ac4fbccd1fa5c3257b6a3fee6",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test bitcoin-cli\"\"\""
      },
      {
        "sha": "6e32009e0516a6277c4c7640a1b285a25bb82998",
        "filename": "test/functional/interface_http.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/interface_http.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/interface_http.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_http.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the RPC HTTP basics.\"\"\""
      },
      {
        "sha": "a2f84573dab8d6740d32f4beb69868fdcfc26750",
        "filename": "test/functional/interface_rest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/interface_rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/interface_rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_rest.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the REST API.\"\"\""
      },
      {
        "sha": "48082f3a17b83925bb418e710065cef12e54c682",
        "filename": "test/functional/interface_rpc.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/interface_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/interface_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_rpc.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Tests some generic aspects of the RPC interface.\"\"\""
      },
      {
        "sha": "395fde18fd5c82ade0c4c6487bc9eee117fd0f26",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the ZMQ notification interface.\"\"\""
      },
      {
        "sha": "44db8bb00a8aa17874d3bffbac593de5e62475d6",
        "filename": "test/functional/mempool_accept.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_accept.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_accept.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_accept.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test mempool acceptance of raw transactions.\"\"\""
      },
      {
        "sha": "a552aed9918f93027565ae272c9490dff30d15a1",
        "filename": "test/functional/mempool_compatibility.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_compatibility.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test that mempool.dat is both backward and forward compatible between versions"
      },
      {
        "sha": "f301b29c254d752b048f97df4b39dd997973b2fb",
        "filename": "test/functional/mempool_expiry.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_expiry.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_expiry.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_expiry.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Tests that a mempool transaction expires after a given timeout and that its"
      },
      {
        "sha": "3619e057619a5b6817a67ae7dd5db9ed4b0b21bf",
        "filename": "test/functional/mempool_limit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_limit.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test mempool limiting together/eviction with the wallet.\"\"\""
      },
      {
        "sha": "a6fb1dcf35ffec5d6e9eee51490126767ed0aac8",
        "filename": "test/functional/mempool_package_onemore.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_package_onemore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_package_onemore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_package_onemore.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test descendant package tracking carve-out allowing one final transaction in"
      },
      {
        "sha": "dcbd340f11430658658d67484849dcea742a773c",
        "filename": "test/functional/mempool_packages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_packages.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test descendant package tracking code.\"\"\""
      },
      {
        "sha": "952e0c36a125f58e637f44be0664c909a8ba8bbe",
        "filename": "test/functional/mempool_persist.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_persist.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_persist.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_persist.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test mempool persistence."
      },
      {
        "sha": "7e940fa3cacf526c973f0dc0b4567e9f9e4349f2",
        "filename": "test/functional/mempool_reorg.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_reorg.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_reorg.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_reorg.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test mempool re-org scenarios."
      },
      {
        "sha": "3e610d02acdc72cd02be179414211832614220e0",
        "filename": "test/functional/mempool_resurrect.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_resurrect.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_resurrect.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_resurrect.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test resurrection of mined transactions when the blockchain is re-organized.\"\"\""
      },
      {
        "sha": "5afa6be925b30cad82d2ec969fce40a8a7ede4a6",
        "filename": "test/functional/mempool_spend_coinbase.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_spend_coinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_spend_coinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_spend_coinbase.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test spending coinbase transactions."
      },
      {
        "sha": "adf7326dac013bb4999bcb237fbcf000da431392",
        "filename": "test/functional/mempool_unbroadcast.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_unbroadcast.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_unbroadcast.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_unbroadcast.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test that the mempool ensures transaction delivery by periodically sending"
      },
      {
        "sha": "16c15e3f7498273581508210bbb29661f9f040fb",
        "filename": "test/functional/mempool_updatefromblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_updatefromblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mempool_updatefromblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_updatefromblock.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test mempool descendants/ancestors information update."
      },
      {
        "sha": "f8d002e6649188c6a958fe8a3986d235c7807365",
        "filename": "test/functional/mining_basic.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mining_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mining_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_basic.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test mining RPCs"
      },
      {
        "sha": "e928ee4936a2b995321f28ec8c20a7677d87a5ce",
        "filename": "test/functional/mining_getblocktemplate_longpoll.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mining_getblocktemplate_longpoll.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mining_getblocktemplate_longpoll.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_getblocktemplate_longpoll.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test longpolling with getblocktemplate.\"\"\""
      },
      {
        "sha": "6f2ac805a0dda0a4b0909f2fd36241880c23824e",
        "filename": "test/functional/mining_prioritisetransaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mining_prioritisetransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mining_prioritisetransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_prioritisetransaction.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2019 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the prioritisetransaction mining RPC.\"\"\""
      },
      {
        "sha": "b732b26a53d0798e291dbb7cd4f18e93f9434a9d",
        "filename": "test/functional/mocks/signer.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mocks/signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/mocks/signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mocks/signer.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "5532056dbeb7656a454862144b1947d36acea485",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\""
      },
      {
        "sha": "9ab190871f9d974fba0c7392d20305e8a424eab0",
        "filename": "test/functional/p2p_addrv2_relay.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_addrv2_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_addrv2_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addrv2_relay.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\""
      },
      {
        "sha": "e73fad439f0fb0b926d12c3dfd6f25632d777d30",
        "filename": "test/functional/p2p_blockfilters.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_blockfilters.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_blockfilters.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_blockfilters.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Tests NODE_COMPACT_FILTERS (BIP 157/158)."
      },
      {
        "sha": "6e48341259468854647a2f991aa30ffb5e5cb4c8",
        "filename": "test/functional/p2p_blocksonly.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_blocksonly.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_blocksonly.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_blocksonly.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test p2p blocksonly mode & block-relay-only connections.\"\"\""
      },
      {
        "sha": "a314e8edfde4c8274e683eb4ff81cde6e1470c57",
        "filename": "test/functional/p2p_compactblocks.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test compact blocks (BIP 152)."
      },
      {
        "sha": "fde1e4bfa27a33dd63f21e19a386b3a283051553",
        "filename": "test/functional/p2p_dos_header_tree.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_dos_header_tree.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_dos_header_tree.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_dos_header_tree.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test that we reject low difficulty headers to prevent our block tree from filling up with useless bloat\"\"\""
      },
      {
        "sha": "1f4797a89d5ef1b905a18871fb534f17ad964ff1",
        "filename": "test/functional/p2p_eviction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_eviction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_eviction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_eviction.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "b65e927d5b819a5513cbafebe9634a53e72cd119",
        "filename": "test/functional/p2p_feefilter.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_feefilter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_feefilter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_feefilter.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test processing of feefilter messages.\"\"\""
      },
      {
        "sha": "2192363a89c80e86c6d3ac93093de9101c0b21fd",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\""
      },
      {
        "sha": "e8bba8555fcf33340ea7781f3ec8d708de1cce59",
        "filename": "test/functional/p2p_fingerprint.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_fingerprint.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_fingerprint.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_fingerprint.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test various fingerprinting protections."
      },
      {
        "sha": "9044ed5cdbccc42da974b15fd78489ac474ac748",
        "filename": "test/functional/p2p_ibd_txrelay.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_ibd_txrelay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_ibd_txrelay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_ibd_txrelay.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test fee filters during and after IBD.\"\"\""
      },
      {
        "sha": "5ccd5a1602816640df7a983c019d53ac3d6e6066",
        "filename": "test/functional/p2p_invalid_block.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_invalid_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_invalid_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_block.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid blocks."
      },
      {
        "sha": "626422370a807f4761e499454a9e71343346cd56",
        "filename": "test/functional/p2p_invalid_locator.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_invalid_locator.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_invalid_locator.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_locator.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid locators."
      },
      {
        "sha": "3109ad2b56b40493fbc615810ddd88499a77950e",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid network messages.\"\"\""
      },
      {
        "sha": "139f4d64e7dd02019ea49de4bf5130aaac64e7e4",
        "filename": "test/functional/p2p_invalid_tx.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_invalid_tx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_invalid_tx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_tx.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid transactions."
      },
      {
        "sha": "af8e45d578353c70668513f70a81c813487c18e5",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test message sending before handshake completion."
      },
      {
        "sha": "4c064b359e0a2ca97ce0e0e55759a9f0ea7c1124",
        "filename": "test/functional/p2p_leak_tx.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_leak_tx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_leak_tx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak_tx.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test that we don't leak txs to inbound peers that we haven't yet announced to\"\"\""
      },
      {
        "sha": "edde9a6ecf53483fe31a85ffec350c48e2df47e0",
        "filename": "test/functional/p2p_message_capture.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_message_capture.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_message_capture.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_message_capture.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test per-peer message capture capability."
      },
      {
        "sha": "5a0003d3efec928b62100363129b35496f124e75",
        "filename": "test/functional/p2p_node_network_limited.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_node_network_limited.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_node_network_limited.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_node_network_limited.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Tests NODE_NETWORK_LIMITED."
      },
      {
        "sha": "1dc3a5b9a0128d8f75bd8c33ad4ce65b3a59399b",
        "filename": "test/functional/p2p_permissions.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_permissions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_permissions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_permissions.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test p2p permission message."
      },
      {
        "sha": "52dae90d194d056e166d9a982c05f2c48d889ab9",
        "filename": "test/functional/p2p_ping.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_ping.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_ping.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_ping.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test ping message"
      },
      {
        "sha": "366632237ad86ac49abbed965b1723ba83057cce",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test segwit transactions and blocks on P2P network.\"\"\""
      },
      {
        "sha": "1ccc447b89b6486387dc53df7adc811cdf5ba209",
        "filename": "test/functional/p2p_sendheaders.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_sendheaders.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test behavior of headers messages to announce blocks."
      },
      {
        "sha": "7356b8bbb37e20aec3b2229fb32b18a44d7bcabd",
        "filename": "test/functional/p2p_tx_download.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_tx_download.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_tx_download.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_tx_download.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\""
      },
      {
        "sha": "3b02a1c61f43ca448802c2bf84bd72c81ae23500",
        "filename": "test/functional/p2p_unrequested_blocks.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_unrequested_blocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/p2p_unrequested_blocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_unrequested_blocks.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test processing of unrequested blocks."
      },
      {
        "sha": "2bf004653aef621ab357b4c1f9715d05a529102e",
        "filename": "test/functional/rpc_blockchain.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_blockchain.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test RPCs related to blockchainstate."
      },
      {
        "sha": "f56e71ae7a7d924afe2569d6386f2820dc77d5df",
        "filename": "test/functional/rpc_createmultisig.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_createmultisig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_createmultisig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_createmultisig.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test multisig RPCs\"\"\""
      },
      {
        "sha": "58432c3dae99c83a933310f9b01e1eca5c10b8d4",
        "filename": "test/functional/rpc_decodescript.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_decodescript.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_decodescript.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_decodescript.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2019 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test decoding scripts via decodescript RPC command.\"\"\""
      },
      {
        "sha": "15c77ed856980746d9317bee728b7dfecbcd9567",
        "filename": "test/functional/rpc_deprecated.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_deprecated.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_deprecated.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_deprecated.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test deprecation of RPC calls.\"\"\""
      },
      {
        "sha": "f54f6008399ae7a71146e744b123ee85c879f4ee",
        "filename": "test/functional/rpc_dumptxoutset.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_dumptxoutset.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_dumptxoutset.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_dumptxoutset.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the generation of UTXO snapshots using `dumptxoutset`."
      },
      {
        "sha": "0d8117bd023b928ffe9890ce49cb2aece0dd6f57",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the fundrawtransaction RPC.\"\"\""
      },
      {
        "sha": "4dc5c63ff360dfff4f75457c1da00f683e080e15",
        "filename": "test/functional/rpc_generateblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_generateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_generateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_generateblock.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''Test generateblock rpc."
      },
      {
        "sha": "b09af9e078107a134f2d8500ed8f83634c7b57fb",
        "filename": "test/functional/rpc_getblockfilter.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_getblockfilter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_getblockfilter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getblockfilter.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the getblockfilter RPC.\"\"\""
      },
      {
        "sha": "8c08d2ced58dbf9db7fcfe19bd0d897ff550a6b3",
        "filename": "test/functional/rpc_getblockstats.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_getblockstats.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_getblockstats.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getblockstats.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "7efa306c8c65339ea16650c23bcfb571de2a428a",
        "filename": "test/functional/rpc_getchaintips.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_getchaintips.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_getchaintips.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getchaintips.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the getchaintips RPC."
      },
      {
        "sha": "ccb380e25ba7c6bab7c5d30625fc84645f284feb",
        "filename": "test/functional/rpc_help.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_help.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_help.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_help.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test RPC help output.\"\"\""
      },
      {
        "sha": "8f9b2c3312d654109b6084102ee8a3f48a85f867",
        "filename": "test/functional/rpc_invalid_address_message.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_invalid_address_message.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_invalid_address_message.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_invalid_address_message.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test error messages for 'getaddressinfo' and 'validateaddress' RPC commands.\"\"\""
      },
      {
        "sha": "f1c2537ef9d14152fa0fd551320f7f3c4ec0ba4b",
        "filename": "test/functional/rpc_invalidateblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_invalidateblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_invalidateblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_invalidateblock.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the invalidateblock RPC.\"\"\""
      },
      {
        "sha": "b3abd9d2362206db452d609828d0ecd8d94a4889",
        "filename": "test/functional/rpc_misc.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_misc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_misc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_misc.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test RPC misc output.\"\"\""
      },
      {
        "sha": "27d5eada3cf13712c9ef3cc4bf161fec9aa598fb",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test RPC calls related to net."
      },
      {
        "sha": "91298937fdd121e86e634b01081df74288bea8b7",
        "filename": "test/functional/rpc_preciousblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_preciousblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_preciousblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_preciousblock.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the preciousblock RPC.\"\"\""
      },
      {
        "sha": "9b00eab346677d0d4e88096345ddcf4f24e675f8",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the Partially Signed Transaction RPCs."
      },
      {
        "sha": "96691b2686492795588bacb6ea36355651379284",
        "filename": "test/functional/rpc_rawtransaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_rawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_rawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_rawtransaction.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the rawtransaction RPCs."
      },
      {
        "sha": "8703bfab8ec2bc243633e7b7c02ddac22927bc54",
        "filename": "test/functional/rpc_scantxoutset.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_scantxoutset.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_scantxoutset.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_scantxoutset.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the scantxoutset rpc call.\"\"\""
      },
      {
        "sha": "97354f480c2eb3fd4eb56b9715cdc61825f7076f",
        "filename": "test/functional/rpc_setban.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_setban.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_setban.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_setban.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the setban rpc call.\"\"\""
      },
      {
        "sha": "f1107197c53a47921689566899bd8a8428ce8309",
        "filename": "test/functional/rpc_signer.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_signer.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test external signer."
      },
      {
        "sha": "80555eab751c3001e55af0ab816bf5a3c717dc17",
        "filename": "test/functional/rpc_signmessagewithprivkey.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_signmessagewithprivkey.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_signmessagewithprivkey.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_signmessagewithprivkey.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2019 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test RPC commands for signing messages with private key.\"\"\""
      },
      {
        "sha": "e648040278753b44f5416b36d95c141138e37968",
        "filename": "test/functional/rpc_signrawtransaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_signrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_signrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_signrawtransaction.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test transaction signing using the signrawtransaction* RPCs.\"\"\""
      },
      {
        "sha": "4e4d1a65fa2b5725d8ca9ef27d90f91a9c6581bb",
        "filename": "test/functional/rpc_txoutproof.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_txoutproof.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_txoutproof.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_txoutproof.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test gettxoutproof and verifytxoutproof RPCs.\"\"\""
      },
      {
        "sha": "1a82d1fa41c592e13bfab06c6d0e37e987255199",
        "filename": "test/functional/rpc_uptime.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_uptime.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/rpc_uptime.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_uptime.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2019 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the RPC call related to the uptime command."
      },
      {
        "sha": "6ade80f9e2f207ebd7bd94c6e4c8aea696df03e4",
        "filename": "test/functional/test_framework/address.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/address.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/address.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/address.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Encode and decode Bitcoin addresses."
      },
      {
        "sha": "41886c09fd4022181ad2d526fdbcd700ab9353f2",
        "filename": "test/functional/test_framework/bdb.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/bdb.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/bdb.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/bdb.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\""
      },
      {
        "sha": "eaa193e357e2e14eb958d3f7e66a6c765014cc81",
        "filename": "test/functional/test_framework/blocktools.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/blocktools.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/blocktools.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/blocktools.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Utilities for manipulating blocks and transactions.\"\"\""
      },
      {
        "sha": "4fb4f8bb821273530664ca93e013e6a87976121c",
        "filename": "test/functional/test_framework/coverage.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/coverage.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/coverage.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/coverage.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2018 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Utilities for doing coverage analysis on the RPC interface."
      },
      {
        "sha": "71ac5c5bfdd0ddbdf59902b9c3797fcf758ae755",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,7 +1,7 @@\n #!/usr/bin/env python3\n # Copyright (c) 2010 ArtForz -- public domain half-a-node\n # Copyright (c) 2012 Jeff Garzik\n-# Copyright (c) 2010-2020 The Bitcoin Core developers\n+# Copyright (c) 2010-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Bitcoin test framework primitive and message structures"
      },
      {
        "sha": "174dc44a2a2f7e7ae337fc4ccf93cdceed673709",
        "filename": "test/functional/test_framework/netutil.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/netutil.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/netutil.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/netutil.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Linux network utilities."
      },
      {
        "sha": "c99868de7230f9f8ba8e35b5eac0d5def7b83524",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,7 +1,7 @@\n #!/usr/bin/env python3\n # Copyright (c) 2010 ArtForz -- public domain half-a-node\n # Copyright (c) 2012 Jeff Garzik\n-# Copyright (c) 2010-2020 The Bitcoin Core developers\n+# Copyright (c) 2010-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test objects for interacting with a bitcoind node over the p2p protocol."
      },
      {
        "sha": "a31ba8d1af7c0a5df31169da62f6d1285ce1eb81",
        "filename": "test/functional/test_framework/script.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Functionality to build scripts, as well as signature hash functions."
      },
      {
        "sha": "f7d8422eee59a935ac8ea03b82e7c07c16b0d5ae",
        "filename": "test/functional/test_framework/script_util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/script_util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/script_util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script_util.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Useful Script constants and utils.\"\"\""
      },
      {
        "sha": "3a7bc7843970bdd990c9d035838762970fff4046",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Base class for RPC testing.\"\"\""
      },
      {
        "sha": "269f2442a9f18ae569b167b98ea1b20ab8322378",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Class for bitcoind node under test\"\"\""
      },
      {
        "sha": "57ef6d99d5d4e8669c92727dc6d409b19e540548",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Helpful routines for regression testing.\"\"\""
      },
      {
        "sha": "5921567dda32f667b5ab9e644d7b768a976500ea",
        "filename": "test/functional/test_framework/wallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/wallet.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"A limited-functionality wallet, which may replace a real wallet in tests\"\"\""
      },
      {
        "sha": "410d85cd8c4c2c7ea89aef44fef0e075e9855c46",
        "filename": "test/functional/test_framework/wallet_util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/wallet_util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_framework/wallet_util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/wallet_util.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Useful util functions for testing the wallet\"\"\""
      },
      {
        "sha": "05656e71f1e843613609b734fda204d7fed4670d",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Run regression test suite."
      },
      {
        "sha": "616ac29b15ac9702f5bc70323ea09e58a83bdd07",
        "filename": "test/functional/tool_wallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/tool_wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/tool_wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/tool_wallet.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test bitcoin-wallet.\"\"\""
      },
      {
        "sha": "27d9d8da8899e49524ebe4f51c0f07b6c95297bb",
        "filename": "test/functional/wallet_abandonconflict.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_abandonconflict.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the abandontransaction RPC."
      },
      {
        "sha": "e4fe150333a48e488870a1ae7e4bcf32550724f9",
        "filename": "test/functional/wallet_address_types.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_address_types.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_address_types.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_address_types.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test that the wallet can send and receive using all combinations of address types."
      },
      {
        "sha": "dc823c2c60206a158e8b541f571b3e0912c02f82",
        "filename": "test/functional/wallet_avoidreuse.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_avoidreuse.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_avoidreuse.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_avoidreuse.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the avoid_reuse and setwalletflag features.\"\"\""
      },
      {
        "sha": "932df4fbff67ac86e792d83a7094aa9d8222a52f",
        "filename": "test/functional/wallet_backup.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_backup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_backup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_backup.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet backup features."
      },
      {
        "sha": "0cfbefb719b13ddc838e4950f767df9421fd81d4",
        "filename": "test/functional/wallet_balance.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_balance.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_balance.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_balance.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet balance RPC methods.\"\"\""
      },
      {
        "sha": "69f9df57d891c642afcca63ad6b1936b2a216647",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet.\"\"\""
      },
      {
        "sha": "b9df79c3df5db362e2aad91dd330b1f2f7f11409",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the bumpfee RPC."
      },
      {
        "sha": "5a6b6cee592bb7d2016c08b08430bc482e5253ee",
        "filename": "test/functional/wallet_coinbase_category.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_coinbase_category.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_coinbase_category.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_coinbase_category.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2018 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test coinbase transactions return the correct categories."
      },
      {
        "sha": "a213a261ef7171e61b0581c9a86316e68a6f6970",
        "filename": "test/functional/wallet_create_tx.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_create_tx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_create_tx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_create_tx.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "a751138d890fba2c192072b044397712bf7f37ff",
        "filename": "test/functional/wallet_createwallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_createwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_createwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_createwallet.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test createwallet arguments."
      },
      {
        "sha": "df2fdb294351a227240b4e51f0be779865370cf3",
        "filename": "test/functional/wallet_descriptor.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_descriptor.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_descriptor.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_descriptor.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test descriptor wallet function.\"\"\""
      },
      {
        "sha": "2c7996ca6b92aa1fd2df4ef7ce41f8457cc065db",
        "filename": "test/functional/wallet_disable.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_disable.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_disable.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_disable.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2015-2020 The Bitcoin Core developers\n+# Copyright (c) 2015-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test a node with the -disablewallet option."
      },
      {
        "sha": "9f0d66627080ff39790760652f1c8acb6ed53530",
        "filename": "test/functional/wallet_dump.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_dump.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the dumpwallet RPC.\"\"\""
      },
      {
        "sha": "acd92097ff8ef46377493a863d33a143116f62ed",
        "filename": "test/functional/wallet_fallbackfee.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_fallbackfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_fallbackfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_fallbackfee.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test wallet replace-by-fee capabilities in conjunction with the fallbackfee.\"\"\""
      },
      {
        "sha": "c228bb122ab3983b6f001388c6ce70aa233567e9",
        "filename": "test/functional/wallet_groups.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_groups.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_groups.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_groups.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test wallet group functionality.\"\"\""
      },
      {
        "sha": "ac878ea0aa8124040c8f643d09242e7aa5d0809c",
        "filename": "test/functional/wallet_hd.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_hd.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_hd.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_hd.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test Hierarchical Deterministic wallet function.\"\"\""
      },
      {
        "sha": "d9acc8cea5b4b9bd90b372f197250c9b7bf58b30",
        "filename": "test/functional/wallet_import_rescan.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_import_rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_import_rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_import_rescan.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test wallet import RPCs."
      },
      {
        "sha": "ac74ff248440c72057e48751ab41bcf730fee31c",
        "filename": "test/functional/wallet_importdescriptors.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_importdescriptors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_importdescriptors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importdescriptors.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the importdescriptors RPC."
      },
      {
        "sha": "436711669e5ccf686cdbb38684242c577cad09e9",
        "filename": "test/functional/wallet_importmulti.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importmulti.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the importmulti RPC."
      },
      {
        "sha": "cdb5823109e2787593209520da0f0e0303db9e22",
        "filename": "test/functional/wallet_importprunedfunds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_importprunedfunds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_importprunedfunds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importprunedfunds.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the importprunedfunds and removeprunedfunds RPCs.\"\"\""
      },
      {
        "sha": "bf7a342be659c068153903e153c0cb44143530a3",
        "filename": "test/functional/wallet_keypool.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_keypool.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet keypool and interaction with wallet encryption/locking.\"\"\""
      },
      {
        "sha": "4c965b71603000e7817850256c47f2185612b3e9",
        "filename": "test/functional/wallet_keypool_topup.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_keypool_topup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_keypool_topup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_keypool_topup.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test HD Wallet keypool restore function."
      },
      {
        "sha": "c29b02e661ce460917e32aca960183619f6eba67",
        "filename": "test/functional/wallet_labels.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_labels.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_labels.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_labels.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2020 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test label RPCs."
      },
      {
        "sha": "42a2685a0fa888d927c4cb835d564d513034543d",
        "filename": "test/functional/wallet_listreceivedby.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_listreceivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_listreceivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listreceivedby.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the listreceivedbyaddress RPC.\"\"\""
      },
      {
        "sha": "fc06565983314f4ba3dde4a5733d3ba309eb7e16",
        "filename": "test/functional/wallet_listsinceblock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_listsinceblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_listsinceblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listsinceblock.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the listsinceblock RPC.\"\"\""
      },
      {
        "sha": "8fd15a164c046626f9d18f480609c940f09cd6fa",
        "filename": "test/functional/wallet_listtransactions.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listtransactions.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the listtransactions API.\"\"\""
      },
      {
        "sha": "0b868dde6c43d3c7c3eab8378ecd47207cd34a11",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test multiwallet."
      },
      {
        "sha": "f2bdb114b74bba8fd4878433934c5eb5fb055dcf",
        "filename": "test/functional/wallet_reorgsrestore.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_reorgsrestore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_reorgsrestore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_reorgsrestore.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "afdeb06d4e83cfcab7c2b651cc7ba192d7668914",
        "filename": "test/functional/wallet_resendwallettransactions.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_resendwallettransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_resendwallettransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_resendwallettransactions.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test that the wallet resends transactions periodically.\"\"\""
      },
      {
        "sha": "d77d554baa326c32a7d0a618b4e9d8ff6e2526ba",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n+# Copyright (c) 2020-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the send RPC command.\"\"\""
      },
      {
        "sha": "6dadc57b1ad8a4a89eda30697d6a466e0d0a71e8",
        "filename": "test/functional/wallet_signer.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_signer.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test external signer."
      },
      {
        "sha": "74a8f2eef239649b4b0c954806bae4dcb8893719",
        "filename": "test/functional/wallet_signmessagewithaddress.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_signmessagewithaddress.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_signmessagewithaddress.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_signmessagewithaddress.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2019 The Bitcoin Core developers\n+# Copyright (c) 2016-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test Wallet commands for signing and verifying messages.\"\"\""
      },
      {
        "sha": "d26d1b9bfae018361ecd4bd734ec85eae140af28",
        "filename": "test/functional/wallet_transactiontime_rescan.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_transactiontime_rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_transactiontime_rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_transactiontime_rescan.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test transaction time during old block rescanning"
      },
      {
        "sha": "5bdde13aa47908f85993355da15be0547d38efe9",
        "filename": "test/functional/wallet_txn_clone.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_txn_clone.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet accounts properly when there are cloned transactions with malleated scriptsigs.\"\"\""
      },
      {
        "sha": "206187fb61f0ea903ff45dd4cb74fa130731da0e",
        "filename": "test/functional/wallet_txn_doublespend.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_txn_doublespend.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_txn_doublespend.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_txn_doublespend.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2020 The Bitcoin Core developers\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet accounts properly when there is a double-spend conflict.\"\"\""
      },
      {
        "sha": "36e72f2dd92dbd50b64779ed9858f6e50224c29c",
        "filename": "test/functional/wallet_upgradewallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_upgradewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_upgradewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_upgradewallet.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"upgradewallet RPC functional test"
      },
      {
        "sha": "69c32ba54ce0827e9a617fd63313959611993a41",
        "filename": "test/functional/wallet_watchonly.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_watchonly.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/functional/wallet_watchonly.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_watchonly.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test createwallet watchonly arguments."
      },
      {
        "sha": "e2eab2a0fecaa9ebaa5869a4a6156129cbe3fc15",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Run fuzz test targets."
      },
      {
        "sha": "177aa74191a90141b4efd32da693379fc41121e6",
        "filename": "test/get_previous_releases.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/get_previous_releases.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/get_previous_releases.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/get_previous_releases.py?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python3\n #\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      },
      {
        "sha": "f7590ddc0368884b406a9364a44fe84e9ce91fe4",
        "filename": "test/lint/commit-script-check.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/commit-script-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/commit-script-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/commit-script-check.sh?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "d9e5a702e495b7f57c3d2bf501484878a905025c",
        "filename": "test/lint/extended-lint-cppcheck.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/extended-lint-cppcheck.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/extended-lint-cppcheck.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/extended-lint-cppcheck.sh?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Copyright (c) 2019-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      },
      {
        "sha": "ab3866d23e4ae7ddf4befe078167c68b1ad2301f",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      },
      {
        "sha": "a013752dbb7557eb1561cca9e42df29f537ee10b",
        "filename": "test/lint/lint-includes.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-includes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-includes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-includes.sh?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      },
      {
        "sha": "3b88fa4da982e4668ad613f894e4ef0f5cf9e12a",
        "filename": "test/lint/lint-locale-dependence.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-locale-dependence.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-locale-dependence.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-locale-dependence.sh?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env bash\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "6d5165f649231f09204a62b55935add823b41727",
        "filename": "test/lint/lint-logs.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-logs.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-logs.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-logs.sh?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      },
      {
        "sha": "6b5e962611ab42f4c27a20ac7ba1f9c43324606d",
        "filename": "test/lint/lint-python.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-python.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-python.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-python.sh?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      },
      {
        "sha": "ff335f5233f23ca2ff8b0cd177831b70c5a73c9d",
        "filename": "test/lint/lint-shell.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-shell.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-shell.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-shell.sh?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018-2020 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      },
      {
        "sha": "e73c7d11d9fd312c6cbdc006876971661c3eac01",
        "filename": "test/lint/lint-spelling.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-spelling.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-spelling.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-spelling.sh?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Copyright (c) 2018-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      },
      {
        "sha": "2d84cf1bf3f416591d89370944dfb3e63492e379",
        "filename": "test/lint/lint-whitespace.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-whitespace.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac23c211407a77af82bb1491c48c8d37022c8b3/test/lint/lint-whitespace.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-whitespace.sh?ref=fac23c211407a77af82bb1491c48c8d37022c8b3",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Copyright (c) 2017-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      }
    ]
  }
]