[
  {
    "sha": "9e7776bf1f1aebbd6e1ef21a4144ba72a54985de",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTc3NzZiZjFmMWFlYmJkNmUxZWYyMWE0MTQ0YmE3MmE1NDk4NWRl",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-11-21T06:57:25Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-11-27T04:21:05Z"
      },
      "message": "Integration tests via RPC calls\n\nqa/rpc-tests/wallet.sh runs a three-node -regtest network,\ngenerates a fresh blockchain, and then exercises basic wallet\nsending/receiving functionality using command-line RPC.",
      "tree": {
        "sha": "e4dd613a97637419dd0013fd7e95827cfd2167cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4dd613a97637419dd0013fd7e95827cfd2167cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e7776bf1f1aebbd6e1ef21a4144ba72a54985de",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e7776bf1f1aebbd6e1ef21a4144ba72a54985de",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e7776bf1f1aebbd6e1ef21a4144ba72a54985de",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e7776bf1f1aebbd6e1ef21a4144ba72a54985de/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "03b6a1cee4fe7f38ca16c0bc2d08d8d4d1288f2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03b6a1cee4fe7f38ca16c0bc2d08d8d4d1288f2f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/03b6a1cee4fe7f38ca16c0bc2d08d8d4d1288f2f"
      }
    ],
    "stats": {
      "total": 190,
      "additions": 190,
      "deletions": 0
    },
    "files": [
      {
        "sha": "86d4d9d0e96f50cad48846ac004a834004efde00",
        "filename": "qa/pull-tester/build-tests.sh.in",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e7776bf1f1aebbd6e1ef21a4144ba72a54985de/qa/pull-tester/build-tests.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e7776bf1f1aebbd6e1ef21a4144ba72a54985de/qa/pull-tester/build-tests.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/build-tests.sh.in?ref=9e7776bf1f1aebbd6e1ef21a4144ba72a54985de",
        "patch": "@@ -68,6 +68,9 @@ fi\n cd @abs_top_srcdir@/linux-build\n make check\n \n+# Run RPC integration test on Linux:\n+@abs_top_srcdir@/qa/rpc-tests/wallet.sh @abs_top_srcdir@/linux-build/src\n+\n if [ $RUN_EXPENSIVE_TESTS = 1 ]; then\n   # Run unit tests and blockchain-tester on Windows:\n   cd @abs_top_srcdir@/win32-build"
      },
      {
        "sha": "c8537247d9455f5c3ab66668905fe38cf54b847f",
        "filename": "qa/rpc-tests/README.md",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e7776bf1f1aebbd6e1ef21a4144ba72a54985de/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e7776bf1f1aebbd6e1ef21a4144ba72a54985de/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=9e7776bf1f1aebbd6e1ef21a4144ba72a54985de",
        "patch": "@@ -0,0 +1,6 @@\n+Regression tests of RPC interface\n+=================================\n+\n+wallet.sh : Test wallet send/receive code (see comments for details)\n+\n+util.sh : useful re-usable functions "
      },
      {
        "sha": "dc2a3199703d85b0e322d5bc5bd6e57b38104b75",
        "filename": "qa/rpc-tests/util.sh",
        "status": "added",
        "additions": 84,
        "deletions": 0,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e7776bf1f1aebbd6e1ef21a4144ba72a54985de/qa/rpc-tests/util.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e7776bf1f1aebbd6e1ef21a4144ba72a54985de/qa/rpc-tests/util.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.sh?ref=9e7776bf1f1aebbd6e1ef21a4144ba72a54985de",
        "patch": "@@ -0,0 +1,84 @@\n+#!/usr/bin/env bash\n+\n+# Functions used by more than one test\n+\n+function echoerr {\n+  echo \"$@\" 1>&2;\n+}\n+\n+# Usage: ExtractKey <key> \"<json_object_string>\"\n+# Warning: this will only work for the very-well-behaved\n+# JSON produced by bitcoind, do NOT use it to try to\n+# parse arbitrary/nested/etc JSON.\n+function ExtractKey {\n+    echo $2 | tr -d ' \"{}\\n' | awk -v RS=',' -F: \"\\$1 ~ /$1/ { print \\$2}\"\n+}\n+\n+function CreateDataDir {\n+  DIR=$1\n+  mkdir -p $DIR\n+  CONF=$DIR/bitcoin.conf\n+  echo \"regtest=1\" >> $CONF\n+  echo \"keypool=2\" >> $CONF\n+  echo \"rpcuser=rt\" >> $CONF\n+  echo \"rpcpassword=rt\" >> $CONF\n+  echo \"rpcwait=1\" >> $CONF\n+  shift\n+  while (( \"$#\" )); do\n+      echo $1 >> $CONF\n+      shift\n+  done\n+}\n+\n+function AssertEqual {\n+  if (( $( echo \"$1 == $2\" | bc ) == 0 ))\n+  then\n+    echoerr \"AssertEqual: $1 != $2\"\n+    exit 1\n+  fi\n+}\n+\n+# CheckBalance -datadir=... amount account minconf\n+function CheckBalance {\n+  B=$( $CLI $1 getbalance $3 $4 )\n+  if (( $( echo \"$B == $2\" | bc ) == 0 ))\n+  then\n+    echoerr \"bad balance: $B (expected $2)\"\n+    exit 1\n+  fi\n+}\n+\n+# Use: Address <datadir> [account]\n+function Address {\n+  $CLI $1 getnewaddress $2\n+}\n+\n+# Send from to amount\n+function Send {\n+  from=$1\n+  to=$2\n+  amount=$3\n+  address=$(Address $to)\n+  txid=$( $CLI $from sendtoaddress $address $amount )\n+}\n+\n+# Use: Unspent <datadir> <n'th-last-unspent> <var>\n+function Unspent {\n+  local r=$( $CLI $1 listunspent | awk -F'[ |:,\"]+' \"\\$2 ~ /$3/ { print \\$3 }\" | tail -n $2 | head -n 1)\n+  echo $r\n+}\n+\n+# Use: CreateTxn1 <datadir> <n'th-last-unspent> <destaddress>\n+# produces hex from signrawtransaction\n+function CreateTxn1 {\n+  TXID=$(Unspent $1 $2 txid)\n+  AMOUNT=$(Unspent $1 $2 amount)\n+  VOUT=$(Unspent $1 $2 vout)\n+  RAWTXN=$( $CLI $1 createrawtransaction \"[{\\\"txid\\\":\\\"$TXID\\\",\\\"vout\\\":$VOUT}]\" \"{\\\"$3\\\":$AMOUNT}\")\n+  ExtractKey hex \"$( $CLI $1 signrawtransaction $RAWTXN )\"\n+}\n+\n+# Use: SendRawTxn <datadir> <hex_txn_data>\n+function SendRawTxn {\n+  $CLI $1 sendrawtransaction $2\n+}"
      },
      {
        "sha": "dd511782d03f1f89c94b9788d8d179f64ce26c99",
        "filename": "qa/rpc-tests/wallet.sh",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e7776bf1f1aebbd6e1ef21a4144ba72a54985de/qa/rpc-tests/wallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e7776bf1f1aebbd6e1ef21a4144ba72a54985de/qa/rpc-tests/wallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.sh?ref=9e7776bf1f1aebbd6e1ef21a4144ba72a54985de",
        "patch": "@@ -0,0 +1,97 @@\n+#!/usr/bin/env bash\n+\n+# Test block generation and basic wallet sending\n+\n+if [ $# -lt 1 ]; then\n+        echo \"Usage: $0 path_to_binaries\"\n+        echo \"e.g. $0 ../../src\"\n+        exit 1\n+fi\n+\n+BITCOIND=${1}/bitcoind\n+CLI=${1}/bitcoin-cli\n+\n+DIR=\"${BASH_SOURCE%/*}\"\n+if [[ ! -d \"$DIR\" ]]; then DIR=\"$PWD\"; fi\n+. \"$DIR/util.sh\"\n+\n+D=$(mktemp -d test.XXXXX)\n+\n+D1=${D}/node1\n+CreateDataDir $D1 port=11000 rpcport=11001\n+B1ARGS=\"-datadir=$D1\"\n+$BITCOIND $B1ARGS &\n+B1PID=$!\n+\n+D2=${D}/node2\n+CreateDataDir $D2 port=11010 rpcport=11011 connect=127.0.0.1:11000\n+B2ARGS=\"-datadir=$D2\"\n+$BITCOIND $B2ARGS &\n+B2PID=$!\n+\n+D3=${D}/node3\n+CreateDataDir $D3 port=11020 rpcport=11021 connect=127.0.0.1:11000\n+B3ARGS=\"-datadir=$D3\"\n+$BITCOIND $BITCOINDARGS $B3ARGS &\n+B3PID=$!\n+\n+trap \"kill -9 $B1PID $B2PID $B3PID; rm -rf $D\" EXIT\n+\n+# 1 block, 50 XBT each == 50 XBT\n+$CLI $B1ARGS setgenerate true 1\n+sleep 1  # sleep is necessary to let block broadcast\n+# 101 blocks, 1 mature == 50 XBT\n+$CLI $B2ARGS setgenerate true 101\n+sleep 1\n+\n+CheckBalance $B1ARGS 50\n+CheckBalance $B2ARGS 50\n+\n+# Send 21 XBT from 1 to 3. Second\n+# transaction will be child of first, and\n+# will require a fee\n+Send $B1ARGS $B3ARGS 11\n+Send $B1ARGS $B3ARGS 10\n+\n+# Have B1 mine a new block, and mature it\n+# to recover transaction fees\n+$CLI $B1ARGS setgenerate true 1\n+sleep 1\n+\n+# Have B2 mine 100 blocks so B1's block is mature:\n+$CLI $B2ARGS setgenerate true 100\n+sleep 1\n+\n+# B1 should end up with 100 XBT in block rewards plus fees,\n+# minus the 21 XBT sent to B3:\n+CheckBalance $B1ARGS \"100-21\"\n+CheckBalance $B3ARGS \"21\"\n+\n+# B1 should have two unspent outputs; create a couple\n+# of raw transactions to send them to B3, submit them through\n+# B2, and make sure both B1 and B3 pick them up properly:\n+RAW1=$(CreateTxn1 $B1ARGS 1 $(Address $B3ARGS \"from1\" ) )\n+RAW2=$(CreateTxn1 $B1ARGS 2 $(Address $B3ARGS \"from1\" ) )\n+RAWTXID1=$(SendRawTxn $B2ARGS $RAW1)\n+RAWTXID2=$(SendRawTxn $B2ARGS $RAW2)\n+\n+# Have B2 mine a block to confirm transactions:\n+$CLI $B2ARGS setgenerate true 1\n+sleep 1 # allow time for block to be relayed\n+\n+# Check balances after confirmation\n+CheckBalance $B1ARGS 0\n+CheckBalance $B3ARGS 100\n+CheckBalance $B3ARGS \"100-21\" \"from1\"\n+\n+$CLI $B3ARGS stop > /dev/null 2>&1\n+wait $B3PID\n+$CLI $B2ARGS stop > /dev/null 2>&1\n+wait $B2PID\n+$CLI $B1ARGS stop > /dev/null 2>&1\n+wait $B1PID\n+\n+echo \"Tests successful, cleaning up\"\n+trap \"\" EXIT\n+rm -rf $D\n+exit 0"
      }
    ]
  }
]