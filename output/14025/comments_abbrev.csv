laanwj,2018-08-22T13:30:44Z,utACK fa5099ceb757c9d56fa54a08d0441750df6c8869,https://github.com/bitcoin/bitcoin/pull/14025#issuecomment-415032212,415032212,
Empact,2018-08-23T00:01:42Z,utACK fa5099c `MIN_PEER_PROTO_VERSION` is `31800`,https://github.com/bitcoin/bitcoin/pull/14025#issuecomment-415226883,415226883,
fanquake,2018-08-23T00:18:10Z,"utACK fa5099c\nLooks like the final place in the code checking for that version is in walletdb:\nhttps://github.com/bitcoin/bitcoin/blob/0738b88fe0b6c840e3cefa810c2b6de6c8b32ed0/src/wallet/walletdb.cpp#L473",https://github.com/bitcoin/bitcoin/pull/14025#issuecomment-415229845,415229845,
practicalswift,2018-08-23T08:09:40Z,utACK fa5099ceb757c9d56fa54a08d0441750df6c8869,https://github.com/bitcoin/bitcoin/pull/14025#issuecomment-415330160,415330160,
jnewbery,2018-08-23T13:50:58Z,"utACK fa5099ceb757c9d56fa54a08d0441750df6c8869\n\nIf you felt like it you could also remove a bunch of additional code from the `msg_version` class in `test_framework/messages.py` since the test framework won't work for anything older than a release or two ago. You could remove the `if self.nVersion >= 106` and `if self.nVersion >= 209:` conditionals.\n\n",https://github.com/bitcoin/bitcoin/pull/14025#issuecomment-415421108,415421108,
jnewbery,2018-08-23T14:07:50Z,"utACK fa74d3d720f72c5f1184ca3e03b0c14a2bc06ed5.\n\nWe could also assert that the version is greater than MIN_PEER_PROTO_VERSION in the desererialize method of msg_version, but maybe that's overkill.",https://github.com/bitcoin/bitcoin/pull/14025#issuecomment-415426683,415426683,
