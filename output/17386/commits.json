[
  {
    "sha": "61af472ef8c148f1fe6dfe4d34fb82b4d4982f36",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MWFmNDcyZWY4YzE0OGYxZmU2ZGZlNGQzNGZiODJiNGQ0OTgyZjM2",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-10-30T21:46:21Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-11-05T22:17:22Z"
      },
      "message": "refactor: Extract CWallet::CompactDatabase\n\nThis removes the last use of CWallet::GetDBHandle, which is a layer\nviolation.",
      "tree": {
        "sha": "5c1c7cf37a87e07c2cb161cf147eb6c9670771fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c1c7cf37a87e07c2cb161cf147eb6c9670771fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/61af472ef8c148f1fe6dfe4d34fb82b4d4982f36",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJdwfT+AAoJEG7l83hfeLNF9HgH/0Ag20ATf3f742IDhZGRDjYf\nMnG/6I0a/iCc1Eu1++dtCZcWEDDO+iTeonAF9mhW/ao9vSSI2IzEQjqanaiOaezf\nqB4vhcAGnFsnTW0xEleTpts0HEXcsB4xF+59ci8X3xr8/8PMH1qFpo8wAPBlWbTP\n8E5mTHmk5Rwbzm0HEaZx9EvJ3kUMOOvmEPABEhzvIepnhE3wGgy9Aoo5log8alXK\n+tphQwrp9pwFlhnumkyza6CQcCpilLzyC2ubLWjXUgtE5TBJaCYNbJBRm4yLuRu/\n7qhdctQwBgKbXVkMOm5dTF5v7Zt6wHEFrS2mLUv4KMDZnX1JdvA5vpMHKkltto8=\n=OqCL\n-----END PGP SIGNATURE-----",
        "payload": "tree 5c1c7cf37a87e07c2cb161cf147eb6c9670771fb\nparent 08e29473126d5cc4df6d2b3f368c6f6f641c0bd8\nauthor Ben Woosley <ben.woosley@gmail.com> 1572471981 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1572992242 -0800\n\nrefactor: Extract CWallet::CompactDatabase\n\nThis removes the last use of CWallet::GetDBHandle, which is a layer\nviolation.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61af472ef8c148f1fe6dfe4d34fb82b4d4982f36",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/61af472ef8c148f1fe6dfe4d34fb82b4d4982f36",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61af472ef8c148f1fe6dfe4d34fb82b4d4982f36/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08e29473126d5cc4df6d2b3f368c6f6f641c0bd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08e29473126d5cc4df6d2b3f368c6f6f641c0bd8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08e29473126d5cc4df6d2b3f368c6f6f641c0bd8"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 21,
      "deletions": 18
    },
    "files": [
      {
        "sha": "e3398de2338dd7421fee69da63a37d32ebd08245",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61af472ef8c148f1fe6dfe4d34fb82b4d4982f36/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61af472ef8c148f1fe6dfe4d34fb82b4d4982f36/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=61af472ef8c148f1fe6dfe4d34fb82b4d4982f36",
        "patch": "@@ -2384,6 +2384,23 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nC\n     return true;\n }\n \n+void CWallet::CompactDatabase() {\n+    WalletDatabase& dbh = *database;\n+\n+    unsigned int nUpdateCounter = dbh.nUpdateCounter;\n+\n+    if (dbh.nLastSeen != nUpdateCounter) {\n+        dbh.nLastSeen = nUpdateCounter;\n+        dbh.nLastWalletUpdate = GetTime();\n+    }\n+\n+    if (dbh.nLastFlushed != nUpdateCounter && GetTime() - dbh.nLastWalletUpdate >= 2) {\n+        if (BerkeleyBatch::PeriodicFlush(dbh)) {\n+            dbh.nLastFlushed = nUpdateCounter;\n+        }\n+    }\n+}\n+\n static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, interfaces::Chain::Lock& locked_chain)\n {\n     if (chain.isInitialBlockDownload()) {"
      },
      {
        "sha": "3c553139136f990006cd020a946920095ed7c2de",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61af472ef8c148f1fe6dfe4d34fb82b4d4982f36/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61af472ef8c148f1fe6dfe4d34fb82b4d4982f36/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=61af472ef8c148f1fe6dfe4d34fb82b4d4982f36",
        "patch": "@@ -688,13 +688,12 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n      */\n     mutable CCriticalSection cs_wallet;\n \n+    /** Compact the wallet database */\n+    void CompactDatabase();\n+\n     /** Get database handle used by this wallet. Ideally this function would\n      * not be necessary.\n      */\n-    WalletDatabase& GetDBHandle()\n-    {\n-        return *database;\n-    }\n     WalletDatabase& GetDatabase() override { return *database; }\n \n     /**"
      },
      {
        "sha": "49bb37b0cb3d5adc3f1fb5fdf446ba794e1d62d5",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 14,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61af472ef8c148f1fe6dfe4d34fb82b4d4982f36/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61af472ef8c148f1fe6dfe4d34fb82b4d4982f36/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=61af472ef8c148f1fe6dfe4d34fb82b4d4982f36",
        "patch": "@@ -670,20 +670,7 @@ void MaybeCompactWalletDB()\n     }\n \n     for (const std::shared_ptr<CWallet>& pwallet : GetWallets()) {\n-        WalletDatabase& dbh = pwallet->GetDBHandle();\n-\n-        unsigned int nUpdateCounter = dbh.nUpdateCounter;\n-\n-        if (dbh.nLastSeen != nUpdateCounter) {\n-            dbh.nLastSeen = nUpdateCounter;\n-            dbh.nLastWalletUpdate = GetTime();\n-        }\n-\n-        if (dbh.nLastFlushed != nUpdateCounter && GetTime() - dbh.nLastWalletUpdate >= 2) {\n-            if (BerkeleyBatch::PeriodicFlush(dbh)) {\n-                dbh.nLastFlushed = nUpdateCounter;\n-            }\n-        }\n+        pwallet->CompactDatabase();\n     }\n \n     fOneThread = false;"
      }
    ]
  }
]