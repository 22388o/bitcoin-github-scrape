MarcoFalke,2020-01-16 20:20:43,Thanks. Much needed!,https://github.com/bitcoin/bitcoin/pull/17942#issuecomment-575329349,575329349,
jonasschnelli,2020-01-20 04:11:31,"Thanks!\nutACK 76f589d6b8a4d74735f3987fdf054eaad662a2a0",https://github.com/bitcoin/bitcoin/pull/17942#issuecomment-576098578,576098578,
fjahr,2020-01-23 23:14:14,Updated to include feedback by @eriknylund and @fanquake .,https://github.com/bitcoin/bitcoin/pull/17942#issuecomment-577921582,577921582,
fjahr,2020-01-28 11:16:33,"With the fix in #18008 the fuzzers compiled with libFuzzer run for me now. I did not need to specify the system path or `--disable-asm`. After looking at some of the build code I agree with @fanquake that the system path should not be necessary in any case, so I removed it. But I left `--disable-asm` and linked to the mention of the problem in the developer notes. I also made some minor editing ch",https://github.com/bitcoin/bitcoin/pull/17942#issuecomment-579197708,579197708,
MarcoFalke,2020-01-29 13:44:14,ACK b6c3e84e87055be311347d7b636d68a6a828f563,https://github.com/bitcoin/bitcoin/pull/17942#issuecomment-579761106,579761106,
eriknylund,2020-01-16 19:57:31,"If you are using clang you will need to substitute `afl-gcc` with `afl-clang`\nand `afl-g++` with `afl-clang++` so the first line above becomes:\n```\n./configure --disable-ccache --disable-shared --enable-tests --enable-fuzz CC=${AFLPATH}/afl-clang CXX=${AFLPATH}/afl-clang++\n```",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r367620113,367620113,doc/fuzzing.md
eriknylund,2020-01-16 20:06:17,I seem to be missing the ${FUZZ_TARGET} declaration. The comment below contains the two rows from the similar section at https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r367623864,367623864,doc/fuzzing.md
fanquake,2020-01-17 07:04:16,What errors are you seeing with the asm? Can you post logs?,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r367793910,367793910,doc/fuzzing.md
fanquake,2020-01-17 07:04:52,What errors are you seeing with Boost? Can you post logs?,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r367794053,367794053,doc/fuzzing.md
fanquake,2020-01-17 07:17:31,"If this is needed, we should be using something like `$(xcrun --show-sdk-path)` (same as we do in [depends](https://github.com/bitcoin/bitcoin/blob/master/depends/builders/darwin.mk#L14)), rather than hard-coding a path to a specific SDK version.\n\n\nAlthough I'm curious to know why this is would be required, as it's already added to the compiler flags by clang. i.e:\n\n```bash\n/usr/local/",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r367797061,367797061,doc/fuzzing.md
fjahr,2020-01-17 15:42:52,I have not seen this particular error myself but included it for others since it seems to have been an issue here: https://github.com/bitcoin/bitcoin/issues/17657#issuecomment-562869600. So I can remove it or improve it as you describe in the comment on the flags. Or maybe @brakmic can help (sorry for including you unsolicited).,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r368000737,368000737,doc/fuzzing.md
fjahr,2020-01-17 15:46:31,"Hm, I am sure I had an issue without it before but I can not reproduce it right now and I did not keep the logs since I tried libFuzzer one week ago. So it is possible that it is not an issue anymore or I simply mistook this as fixing an unrelated issue. However, the issue is also noted in the docs on sanitizers: https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#sanitizers",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r368002707,368002707,doc/fuzzing.md
brakmic,2020-01-18 09:50:07,"I have seen such errors when experimenting with libFuzzer and after some search through GitHub I found a solution to a similar problem: macOS should be provided an **isysroot** variable that points to the proper SDK. However, this could maybe only be a problem when working with macOs Catalina. I've never tested it under older variants. Catalina, in many ways, is a ""breaking change"" regarding handl",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r368218269,368218269,doc/fuzzing.md
brakmic,2020-01-18 09:54:15,The **sysroot** there is pointing to /Library/Developer which is not correct when using under Catalina (but could be correct under previous macOS versions). Here a link to a question from SO regarding this particular problem: https://stackoverflow.com/questions/58278260/cant-compile-a-c-program-on-a-mac-after-upgrading-to-catalina-10-15,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r368218457,368218457,doc/fuzzing.md
fanquake,2020-01-20 01:02:58,"> The sysroot there is pointing to /Library/Developer which is not correct when using under Catalina (but could be correct under previous macOS versions). \n\n@brakmic Sure, however that's why we'd want to use `xcrun --show-sdk-path`, because it should point to the right location for the SDK regardless of the OS it's being run on. What does it output when you run it on Catalina?",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r368339639,368339639,doc/fuzzing.md
eriknylund,2020-01-20 20:36:24,"```suggestion\nexport FUZZ_TARGET=fuzz_target_foo  # Pick a fuzz_target from ${DIR_FUZZ_IN}\nmkdir ${AFLOUT}/${FUZZ_TARGET}\nAFL_NO_FORKSRV=1 $AFLPATH/afl-fuzz -i ${DIR_FUZZ_IN}/${FUZZ_TARGET} -o ${AFLOUT}/${FUZZ_TARGET} -m52 -- test/fuzz/${FUZZ_TARGET}\n```",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r368717877,368717877,doc/fuzzing.md
fjahr,2020-01-23 23:09:47,done,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r370403117,370403117,doc/fuzzing.md
fjahr,2020-01-23 23:11:24,Updated to use xcrun --show-sdk-path.,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r370403630,370403630,doc/fuzzing.md
fjahr,2020-01-23 23:11:40,done,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r370403722,370403722,doc/fuzzing.md
fjahr,2020-01-23 23:11:48,done,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r370403764,370403764,doc/fuzzing.md
fanquake,2020-01-28 12:55:28,You should be able to drop `--with-boost` here.,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r371784569,371784569,doc/fuzzing.md
fanquake,2020-01-28 12:56:27,"Was this something you ran into, or also a suggestion from elsewhere in the docs?",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r371785051,371785051,doc/fuzzing.md
fjahr,2020-01-28 16:07:03,"I had a problem with this. I got this output without the flag:\n```\n$ make\n[*] Checking for the ability to compile x86 code...\n[+] Everything seems to be working, ready to compile.\ncc -O3 -funroll-loops -Wall -D_FORTIFY_SOURCE=2 -g -Wno-pointer-sign -DAFL_PATH=\""/usr/local/lib/afl\"" -DDOC_PATH=\""/usr/local/share/doc/afl\"" -DBIN_PATH=\""/usr/local/bin\"" afl-gcc.c -o afl-gcc\nset -e; for i ",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r371898726,371898726,doc/fuzzing.md
fjahr,2020-01-28 16:10:34,done (also tested it),https://github.com/bitcoin/bitcoin/pull/17942#discussion_r371900872,371900872,doc/fuzzing.md
Sjors,2020-01-28 16:11:53,Maybe use `afl-clang-fast` here? It's a bit weird that this is recommended below. Unless there's some downside.,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r371901728,371901728,doc/fuzzing.md
Sjors,2020-01-28 16:20:21,"Please add an example here, e.g. `FUZZ_TARGET=bech32`",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r371907332,371907332,doc/fuzzing.md
Sjors,2020-01-28 16:32:25,"I usually run command from the project root, not from `src`, so maybe use `src/test/fuzz`?",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r371915345,371915345,doc/fuzzing.md
Sjors,2020-01-28 16:36:26,"While you're at it, maybe clarify that the `git clone` and `export` above need to happen in `src/test/fuzz`",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r371917934,371917934,doc/fuzzing.md
Sjors,2020-01-28 16:43:54,"Which version did you test this with? I started with an earlier install of 9.0.0  which failed with:\n\n```\nchecking whether we are cross compiling... configure: error: in `/Users/sjors/dev/bitcoin-libfuzzer':\nconfigure: error: cannot run C++ compiled programs.\nIf you meant to cross compile, use `--host'.\n```\n\nBut once I did `brew upgrade llvm` and bumped to 9.0.1 it worked.\n",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r371922490,371922490,doc/fuzzing.md
Sjors,2020-01-28 16:58:28,"^ can you clarify what ""provide it with"" means? Something like `./test/fuzz/test_runner.py $DIR_FUZZ_IN` is more clear. Also point out that you then need to run one of the executable files in `src/test/fuzz`",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r371931558,371931558,doc/fuzzing.md
fanquake,2020-01-28 23:36:00,"This looks like a local issue. libFuzzer based fuzzing works fine with LLVM 8.x, 9.0.0 and 9.0.1. Looking in `config.log` would tell you the cause of the issue.",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372118947,372118947,doc/fuzzing.md
fjahr,2020-01-28 23:39:59,"yeah, that was not very clear, I reworded the whole paragraph.",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372120196,372120196,doc/fuzzing.md
fjahr,2020-01-28 23:40:05,"I don't think I tested with a different version than 9.0.1, I had upgraded shortly before. Do you still have 9.0.0 installed and can reproduce it?",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372120217,372120217,doc/fuzzing.md
fjahr,2020-01-28 23:40:15,I don't think that's the case. I have my `qa-assets` folder in the same parent directory as the bitcoin source and it seems to run fine.,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372120270,372120270,doc/fuzzing.md
fjahr,2020-01-28 23:40:22,"done, for some reason the guide had a `cd src/` somewhere at the top and the rest of the paths were kept consistent with it. I removed the `cd` and made the rest of the paths consistent.",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372120302,372120302,doc/fuzzing.md
fjahr,2020-01-28 23:40:52,"My takeaway from the [docs here](https://github.com/mirrorer/afl/tree/master/llvm_mode) is that `afl-clang-fast` is not as stable as `afl-clang` and that it will become `afl-clang` once it has become stable enough, at which point `afl-clang-fast` would probably be removed. So I thought keeping `afl-clang` would be the better option to keep as the default.",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372120463,372120463,doc/fuzzing.md
fanquake,2020-01-28 23:44:50,I think this should be https://github.com/google/AFL,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372121624,372121624,doc/fuzzing.md
fjahr,2020-01-28 23:46:42,done,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372122141,372122141,doc/fuzzing.md
fanquake,2020-01-28 23:57:56,"> Also point out that you then need to run one of the executable files in src/test/fuzz\n\nThis isn't actually required. If you don't pick a specific fuzz target all of them will be run. However we can leave as is.",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372125361,372125361,doc/fuzzing.md
Sjors,2020-01-29 08:06:19,It's probably a local issue.,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372236762,372236762,doc/fuzzing.md
Sjors,2020-01-29 08:09:44,I see. Might be useful to mention that potential downside below.,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372237920,372237920,doc/fuzzing.md
Sjors,2020-01-29 08:10:53,You're right,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372238277,372238277,doc/fuzzing.md
Sjors,2020-01-29 08:22:21,Maybe add `-l DEBUG` so you can see it's running.  ,https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372242522,372242522,doc/fuzzing.md
Sjors,2020-01-29 08:40:53,"nit: `using clang, e.g. on macOS, you will`",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372249902,372249902,doc/fuzzing.md
fjahr,2020-01-29 12:05:38,"Hm, I will save the ACKs now but if it's confusing to run the tests without `-l DEBUG` then maybe the default log level should be changed or there should be an additional INFO level output like `The test is running...`.",https://github.com/bitcoin/bitcoin/pull/17942#discussion_r372344512,372344512,doc/fuzzing.md
