sipa,2017-04-09T15:55:02Z,Concept ACK. I don't think that the attempt to parse the data is a particularly strong check anyway.,https://github.com/bitcoin/bitcoin/pull/9101#issuecomment-292794221,292794221,
fanquake,2017-04-26T10:47:31Z,Needs a rebase/nits addressed.,https://github.com/bitcoin/bitcoin/pull/9101#issuecomment-297350792,297350792,
mchrostowski,2017-05-29T02:12:36Z,"NAK Looks like the method this PR modified no longer operates in the same way. ReadKeyValue() is no longer called, instead we call some callback if it's registered.\n\nIt does not appear that this PR can be applied to the current code in any way. I believe it can be closed.",https://github.com/bitcoin/bitcoin/pull/9101#issuecomment-304558172,304558172,
TheBlueMatt,2017-09-29T19:15:33Z,This was superceeded by the split between db.cpp and walletdb.cpp - db.cpp already has no other wallet dependancies.,https://github.com/bitcoin/bitcoin/pull/9101#issuecomment-333214206,333214206,
laanwj,2016-11-11T10:42:39Z,"Please add a warning when this fails, don't ignore failures here silently.\n",https://github.com/bitcoin/bitcoin/pull/9101#discussion_r87568909,87568909,src/wallet/walletdb.cpp
jonasschnelli,2016-11-11T12:48:05Z,"Not sure about this. Removing the actual deserialization routing may result in not actually checking the correctness of the data. For example, currently each `""key""` record (pub- & priv-key), is checked in `ReadKeyValue()` with `vchPubKey.IsValid()`, also, corrupt keys or a corrupt hdchain dataset will be detected now (log output) , but not after this PR.\n",https://github.com/bitcoin/bitcoin/pull/9101#discussion_r87583056,87583056,src/wallet/walletdb.cpp
pstratem,2016-11-15T03:07:44Z,@jonasschnelli indeed that is why I'm not sure it's a good idea.\n,https://github.com/bitcoin/bitcoin/pull/9101#discussion_r87940484,87940484,src/wallet/walletdb.cpp
