[
  {
    "sha": "2578975312da98eafd78951c925bff5f596dd85c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNTc4OTc1MzEyZGE5OGVhZmQ3ODk1MWM5MjViZmY1ZjU5NmRkODVj",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-02-04T20:19:27Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-03-18T13:12:13Z"
      },
      "message": "refactor: move bdb (bitdb) interaction from init.cpp to wallet.cpp\n\nthis will remove db.h from init.cpp",
      "tree": {
        "sha": "7b5d2e2973097b316378741128b92de3908d38a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b5d2e2973097b316378741128b92de3908d38a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2578975312da98eafd78951c925bff5f596dd85c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2578975312da98eafd78951c925bff5f596dd85c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2578975312da98eafd78951c925bff5f596dd85c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2578975312da98eafd78951c925bff5f596dd85c/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1c4e3f99f05273e4d0fae7246d3afe5a33c52ee0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c4e3f99f05273e4d0fae7246d3afe5a33c52ee0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1c4e3f99f05273e4d0fae7246d3afe5a33c52ee0"
      }
    ],
    "stats": {
      "total": 116,
      "additions": 72,
      "deletions": 44
    },
    "files": [
      {
        "sha": "ca38bc3d85f34f537422ce07adf36d80f087d588",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 44,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2578975312da98eafd78951c925bff5f596dd85c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2578975312da98eafd78951c925bff5f596dd85c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2578975312da98eafd78951c925bff5f596dd85c",
        "patch": "@@ -24,7 +24,6 @@\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n #ifdef ENABLE_WALLET\n-#include \"db.h\"\n #include \"wallet.h\"\n #include \"walletdb.h\"\n #endif\n@@ -151,7 +150,7 @@ void Shutdown()\n     StopRPCThreads();\n #ifdef ENABLE_WALLET\n     if (pwalletMain)\n-        bitdb.Flush(false);\n+        pwalletMain->Flush(false);\n     GenerateBitcoins(false, NULL, 0);\n #endif\n     StopNode();\n@@ -184,7 +183,7 @@ void Shutdown()\n     }\n #ifdef ENABLE_WALLET\n     if (pwalletMain)\n-        bitdb.Flush(true);\n+        pwalletMain->Flush(true);\n #endif\n #ifndef WIN32\n     boost::filesystem::remove(GetPidFile());\n@@ -835,47 +834,17 @@ bool AppInit2(boost::thread_group& threadGroup)\n         LogPrintf(\"Using wallet %s\\n\", strWalletFile);\n         uiInterface.InitMessage(_(\"Verifying wallet...\"));\n \n-        if (!bitdb.Open(GetDataDir()))\n-        {\n-            // try moving the database env out of the way\n-            boost::filesystem::path pathDatabase = GetDataDir() / \"database\";\n-            boost::filesystem::path pathDatabaseBak = GetDataDir() / strprintf(\"database.%d.bak\", GetTime());\n-            try {\n-                boost::filesystem::rename(pathDatabase, pathDatabaseBak);\n-                LogPrintf(\"Moved old %s to %s. Retrying.\\n\", pathDatabase.string(), pathDatabaseBak.string());\n-            } catch (const boost::filesystem::filesystem_error&) {\n-                 // failure is ok (well, not really, but it's not worse than what we started with)\n-            }\n-\n-            // try again\n-            if (!bitdb.Open(GetDataDir())) {\n-                // if it still fails, it probably means we can't even create the database env\n-                string msg = strprintf(_(\"Error initializing wallet database environment %s!\"), strDataDir);\n-                return InitError(msg);\n-            }\n-        }\n-\n-        if (GetBoolArg(\"-salvagewallet\", false))\n-        {\n-            // Recover readable keypairs:\n-            if (!CWalletDB::Recover(bitdb, strWalletFile, true))\n-                return false;\n-        }\n-\n-        if (boost::filesystem::exists(GetDataDir() / strWalletFile))\n-        {\n-            CDBEnv::VerifyResult r = bitdb.Verify(strWalletFile, CWalletDB::Recover);\n-            if (r == CDBEnv::RECOVER_OK)\n-            {\n-                string msg = strprintf(_(\"Warning: wallet.dat corrupt, data salvaged!\"\n-                                         \" Original wallet.dat saved as wallet.{timestamp}.bak in %s; if\"\n-                                         \" your balance or transactions are incorrect you should\"\n-                                         \" restore from a backup.\"), strDataDir);\n-                InitWarning(msg);\n-            }\n-            if (r == CDBEnv::RECOVER_FAIL)\n-                return InitError(_(\"wallet.dat corrupt, salvage failed\"));\n-        }\n+        std::string warningString;\n+        std::string errorString;\n+        \n+        if (!CWallet::Verify(strWalletFile, warningString, errorString))\n+            return false;\n+        \n+        if (!warningString.empty())\n+            InitWarning(warningString);\n+        if (!errorString.empty())\n+            return InitError(warningString);\n+        \n     } // (!fDisableWallet)\n #endif // ENABLE_WALLET\n     // ********************************************************* Step 6: network initialization"
      },
      {
        "sha": "1867632111e1acc9b9dc5747d3b42a1c2825e980",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2578975312da98eafd78951c925bff5f596dd85c/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2578975312da98eafd78951c925bff5f596dd85c/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=2578975312da98eafd78951c925bff5f596dd85c",
        "patch": "@@ -18,6 +18,7 @@\n #include <assert.h>\n \n #include <boost/algorithm/string/replace.hpp>\n+#include <boost/filesystem.hpp>\n #include <boost/thread.hpp>\n \n using namespace std;\n@@ -339,6 +340,58 @@ set<uint256> CWallet::GetConflicts(const uint256& txid) const\n     return result;\n }\n \n+void CWallet::Flush(bool shutdown)\n+{\n+    bitdb.Flush(shutdown);\n+}\n+\n+bool CWallet::Verify(const string walletFile, string& warningString, string& errorString)\n+{\n+    if (!bitdb.Open(GetDataDir()))\n+    {\n+        // try moving the database env out of the way\n+        boost::filesystem::path pathDatabase = GetDataDir() / \"database\";\n+        boost::filesystem::path pathDatabaseBak = GetDataDir() / strprintf(\"database.%d.bak\", GetTime());\n+        try {\n+            boost::filesystem::rename(pathDatabase, pathDatabaseBak);\n+            LogPrintf(\"Moved old %s to %s. Retrying.\\n\", pathDatabase.string(), pathDatabaseBak.string());\n+        } catch (const boost::filesystem::filesystem_error&) {\n+            // failure is ok (well, not really, but it's not worse than what we started with)\n+        }\n+        \n+        // try again\n+        if (!bitdb.Open(GetDataDir())) {\n+            // if it still fails, it probably means we can't even create the database env\n+            string msg = strprintf(_(\"Error initializing wallet database environment %s!\"), GetDataDir());\n+            errorString += msg;\n+            return true;\n+        }\n+    }\n+    \n+    if (GetBoolArg(\"-salvagewallet\", false))\n+    {\n+        // Recover readable keypairs:\n+        if (!CWalletDB::Recover(bitdb, walletFile, true))\n+            return false;\n+    }\n+    \n+    if (boost::filesystem::exists(GetDataDir() / walletFile))\n+    {\n+        CDBEnv::VerifyResult r = bitdb.Verify(walletFile, CWalletDB::Recover);\n+        if (r == CDBEnv::RECOVER_OK)\n+        {\n+            warningString += strprintf(_(\"Warning: wallet.dat corrupt, data salvaged!\"\n+                                     \" Original wallet.dat saved as wallet.{timestamp}.bak in %s; if\"\n+                                     \" your balance or transactions are incorrect you should\"\n+                                     \" restore from a backup.\"), GetDataDir());\n+        }\n+        if (r == CDBEnv::RECOVER_FAIL)\n+            errorString += _(\"wallet.dat corrupt, salvage failed\");\n+    }\n+    \n+    return true;\n+}\n+\n void CWallet::SyncMetaData(pair<TxSpends::iterator, TxSpends::iterator> range)\n {\n     // We want all the wallet transactions in range to have the same metadata as"
      },
      {
        "sha": "37d1a3f76e23deae3e8901f0850a29f2ea6c480e",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2578975312da98eafd78951c925bff5f596dd85c/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2578975312da98eafd78951c925bff5f596dd85c/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=2578975312da98eafd78951c925bff5f596dd85c",
        "patch": "@@ -739,6 +739,12 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     //! Get wallet transactions that conflict with given transaction (spend same outputs)\n     std::set<uint256> GetConflicts(const uint256& txid) const;\n \n+    //! Flush wallet (bitdb flush)\n+    void Flush(bool shutdown=false);\n+\n+    //! Verify the wallet database and perform salvage if required\n+    static bool Verify(const std::string walletFile, std::string& warningString, std::string& errorString);\n+    \n     /** \n      * Address book entry changed.\n      * @note called with lock cs_wallet held."
      }
    ]
  }
]