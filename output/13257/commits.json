[
  {
    "sha": "a730bd59008f155abfe1690425eaae78a074b94c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzMwYmQ1OTAwOGYxNTVhYmZlMTY5MDQyNWVhYWU3OGEwNzRiOTRj",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-05-17T05:01:14Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-05-17T05:01:18Z"
      },
      "message": "Fix CWallet::ReserveKeyFromKeyPool to always test key classification\n\nEven if last in the pool. In the prior code set_pre_split_keypool's size is\nsampled before and after the removal, so when the last key is being reserved,\nit previously would not apply the \"keypool entry misclassified\" test.",
      "tree": {
        "sha": "6bc235beac1f5712be6556a2643b8b105b025f9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6bc235beac1f5712be6556a2643b8b105b025f9d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a730bd59008f155abfe1690425eaae78a074b94c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJa/Qz+AAoJEG7l83hfeLNFo6UIAJHRKvwTdreXIZltyUIRt0fu\nWIReyNraV0Jh8t1X6ItpKsb8ltWf/C1jhXrPFB7LDB7lp/jzj8VEQ9V1JuUOgDKB\naqcM9q6uLcJ2gPTa4LhCnCaztkMEFBUconT7lvg/qRL1C2QvkdNBCeyLwCLp5jxd\noO2WTXt0J0prd6QNx2y9St3YaWHy6M6PEkc8HzKV0uqVg/V79Sis+ImoHUL36+3J\nkf+t51LFbKXk6yiVbmYu+ZhkAbsygOdliBFAPTm7rxd+VyIQiM493rqgEp4IpygB\nJhvU9V6RtUfUN4POYqftvPUPCQSEL1HKL7VbZ9rcQAx9k1kHxMFYBBg36izoN/4=\n=KYeU\n-----END PGP SIGNATURE-----",
        "payload": "tree 6bc235beac1f5712be6556a2643b8b105b025f9d\nparent 4cfe17c3382ba750131cdc8703b2978132822070\nauthor Ben Woosley <ben.woosley@gmail.com> 1526533274 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1526533278 -0700\n\nFix CWallet::ReserveKeyFromKeyPool to always test key classification\n\nEven if last in the pool. In the prior code set_pre_split_keypool's size is\nsampled before and after the removal, so when the last key is being reserved,\nit previously would not apply the \"keypool entry misclassified\" test.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a730bd59008f155abfe1690425eaae78a074b94c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a730bd59008f155abfe1690425eaae78a074b94c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a730bd59008f155abfe1690425eaae78a074b94c/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4cfe17c3382ba750131cdc8703b2978132822070",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4cfe17c3382ba750131cdc8703b2978132822070",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4cfe17c3382ba750131cdc8703b2978132822070"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d0fce8a98cb13276752deef0e8156d4da85cf5a7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a730bd59008f155abfe1690425eaae78a074b94c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a730bd59008f155abfe1690425eaae78a074b94c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=a730bd59008f155abfe1690425eaae78a074b94c",
        "patch": "@@ -3438,7 +3438,8 @@ void CWallet::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool, bool fRe\n             TopUpKeyPool();\n \n         bool fReturningInternal = IsHDEnabled() && CanSupportFeature(FEATURE_HD_SPLIT) && fRequestedInternal;\n-        std::set<int64_t>& setKeyPool = set_pre_split_keypool.empty() ? (fReturningInternal ? setInternalKeyPool : setExternalKeyPool) : set_pre_split_keypool;\n+        bool use_split_keypool = set_pre_split_keypool.empty();\n+        std::set<int64_t>& setKeyPool = use_split_keypool ? (fReturningInternal ? setInternalKeyPool : setExternalKeyPool) : set_pre_split_keypool;\n \n         // Get the oldest key\n         if(setKeyPool.empty())\n@@ -3456,7 +3457,7 @@ void CWallet::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool, bool fRe\n             throw std::runtime_error(std::string(__func__) + \": unknown key in key pool\");\n         }\n         // If the key was pre-split keypool, we don't care about what type it is\n-        if (set_pre_split_keypool.size() == 0 && keypool.fInternal != fReturningInternal) {\n+        if (use_split_keypool && keypool.fInternal != fReturningInternal) {\n             throw std::runtime_error(std::string(__func__) + \": keypool entry misclassified\");\n         }\n "
      }
    ]
  }
]