sipa,2012-05-12T15:06:28Z,"git fetch upstream; git rebase -i upstream/master; (in the opened editor, move the line of the fixup commit up to below the gitognore commit, and change the 'pick' to 'fixup', then save, and force-push the resulting branch)\n",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-5669129,5669129,
sipa,2012-05-12T15:22:46Z,with force-push i mean: git push -f origin <branchname>\n,https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-5669250,5669250,
rebroad,2012-05-12T15:29:22Z,@sipa thankyou.. now 1 commit.\n,https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-5669315,5669315,
jgarzik,2012-05-13T04:01:50Z,"1) Thread safety of 'nAskedForBlocks' ?  Accessed in both ProcessMessage() and CNode::CloseSocketDisconnect()\n\n2) fAskedForBlocks should be set to false, if found to be true in CNode::CloseSocketDisconnect()\n",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-5673791,5673791,
rebroad,2012-05-13T21:16:24Z,"@jgarzik 1) accessed in both, yes. thread safety - not needed from what I can tell, but please feel free to explain why you think it is. 2) No. Once asked for blocks, it's true. It never becomes false, since the past cannot be changed. Any new CNode, it's set to false on creation.\n",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-5679587,5679587,
sipa,2012-05-13T21:27:28Z,1) you modify the value from two threads (message handler thread and socket handler thread)\n2) Changing it to false when decrementing nAskedForBlocks would make it obvious that it cannot be decremented twice (even though that probably is already the case)\n,https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-5679677,5679677,
gmaxwell,2012-05-14T01:49:05Z,"Of course, this only helps if the peer is actually disconnected. If he just becomes slow/unresponsive, or he simply doesn't have the chain past a certain point ... we'll still be waiting.   It's a small enough change that I guess it makes sense for now, though at some point I think we need to move to something like this: https://en.bitcoin.it/wiki/User:Gmaxwell/Reverse_header-fetching_sync\n",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-5681367,5681367,
rebroad,2012-05-14T17:59:55Z,"@gmaxwell there's certainly room for improvement, but this is a small (intentionally, to increase the change of it bring pulled) step towards making it get the blocks more quickly. This particular change has been tested in my fork for over a month, but I've also got other code that checks for stuck downloads (which then timeout's the askfor and asks elsewhere). Currently it's not ideal in that it ",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-5697185,5697185,
TheBlueMatt,2012-06-13T15:08:26Z,"Note that though I think this pull is good and should be added to specifically fix #1234, it appears that the motivation for this patch is to fix an issue where some ISPs (specifically @rebroad's) are closing connections without RSTing them after a certain amount of time and I would kinda like to see a specific fix for that to fix the underlying issue here instead of just working around it.\n",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-6303647,6303647,
TheBlueMatt,2012-08-13T13:53:31Z,"For some reason really old pulls don't show up in github's API (the total pull count returned seems to be limited, but its not mentioned in the API Docs...), so pull tester won't test this or any old pulls (maybe it will if the total pull count decreases?).  If anyone needs this, or any older pull explicitly tested, I can run it manually.\n",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-7692317,7692317,
BitcoinPullTester,2012-08-14T08:05:58Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/9543ca35cab6dfc53de84cb59dc4aedcc9253c09 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-7718990,7718990,
BitcoinPullTester,2012-09-07T21:02:14Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/8ce572c8ad0960ff08a577f1ed2bf49ed0108ab0 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts\n2. It does not build on either Linux i386",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-8378806,8378806,
luke-jr,2012-11-13T05:56:52Z,This needs to be rebased.\n,https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-10316613,10316613,
luke-jr,2012-11-25T11:54:40Z,"Did you keep the branch name the same and push it to github? Looks like maybe you pushed it as ""master"" instead of ""issue1234""\n",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-10692658,10692658,
rebroad,2012-11-25T11:58:30Z,"I did:\n\ngit fetch upstream master\ngit checkout issue1234\ngit rebase -i upstream/master\ngit push --force origin issue 1234\n\nThe rebase didn't require any manual intervention, which I was surprised by, so I'm wondering if I did something wrong before the push...\n",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-10692703,10692703,
luke-jr,2012-11-25T13:21:02Z,Any errors?\n,https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-10693362,10693362,
rebroad,2012-11-25T13:29:45Z,none\n,https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-10693423,10693423,
luke-jr,2012-11-25T13:36:47Z,"Is your remote actually named ""upstream""? The default is ""origin"".\n",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-10693500,10693500,
rebroad,2012-11-25T13:54:30Z,$ git remote -v\norigin  http://rebroad@github.com/rebroad/bitcoin.git (fetch)\norigin  http://rebroad@github.com/rebroad/bitcoin.git (push)\nupstream    http://github.com/bitcoin/bitcoin.git (fetch)\nupstream    http://github.com/bitcoin/bitcoin.git (push)\n,https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-10693659,10693659,
rebroad,2012-12-20T17:25:47Z,"rebased as requested. tested too... this patch is still helping with stale connections. reducing the time block download is delayed by 7 minutes on average (based on a wait of 10 minutes for the next block, compared with a wait of 3 minutes for a stale node to timeout).\n",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-11582450,11582450,
rebroad,2012-12-20T17:27:50Z,@TheBlueMatt just to clarify. This patch has nothing to do with ISPs that RST connections. It's needed for all ISPs for where any connection goes stale and eventually (after about 3 minutes in my last tests) times out.\n,https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-11582551,11582551,
gavinandresen,2013-04-09T18:39:53Z,"Closing this, mostly replaced by sipa's ""make sure you always have a peer to sync to"" patch.\n",https://github.com/bitcoin/bitcoin/pull/1271#issuecomment-16131666,16131666,
sipa,2012-05-12T15:00:58Z,That doesn't seem very necessary.\n,https://github.com/bitcoin/bitcoin/pull/1271#discussion_r812418,812418,.gitignore
rebroad,2012-05-12T15:02:14Z,"it's not.. I've removed this and made a new fixup commit now. Just need to squash(?) the commits together now.. @sipa, can you remind me the git command please?\n\n(the /build/ line is needed though, right? without it, git status reports on the contents of the build directory...)\n",https://github.com/bitcoin/bitcoin/pull/1271#discussion_r812420,812420,.gitignore
rebroad,2012-05-14T18:17:01Z,"out of interest, how come I needed to add this line, but no one else seems to need it?\n",https://github.com/bitcoin/bitcoin/pull/1271#discussion_r818160,818160,.gitignore
luke-jr,2012-05-18T18:28:36Z,"My directory is so cluttered that I use ""git status -uno"" ;)\n",https://github.com/bitcoin/bitcoin/pull/1271#discussion_r847047,847047,.gitignore
TheBlueMatt,2012-05-20T14:13:21Z,"Why was this moved to outside of all the if statements, and why the addition of the if statement here? Rebase error?\n",https://github.com/bitcoin/bitcoin/pull/1271#discussion_r850319,850319,src/main.cpp
rebroad,2012-05-21T10:22:47Z,"Not a rebase error. It's a way for the if statement's elses so continue working. i.e. without the re-if, the unknown command code would become true. Strictly speaking this code, now that it's no longer strictly part of ProcessMessages() could be moved now to just after the line that calls that. I guess I wanted to keep the change minimal, by keeping the lines as close to their original location as",https://github.com/bitcoin/bitcoin/pull/1271#discussion_r852434,852434,src/main.cpp
TheBlueMatt,2012-05-21T13:40:29Z,"It would be simpler to move this block above the if ""version"" block, that way you wouldnt have to add another if statement.  Also, correct me if I'm wrong, but the way its written here, instead of waiting for a new block to come in after being disconnected from the first node, you are now just waiting for any message.  Though tx inv messages come in quite often, it may make more sense to move this",https://github.com/bitcoin/bitcoin/pull/1271#discussion_r853090,853090,src/main.cpp
rebroad,2012-05-21T14:22:18Z,"@TheBlueMatt it was originally above the if version block, but then it would miss an opportunity to fire off right after that version message, which would be an ideal time. It can't go into the disconnect handler, as then for which node would it be sending the getblocks?\n",https://github.com/bitcoin/bitcoin/pull/1271#discussion_r853330,853330,src/main.cpp
TheBlueMatt,2012-05-21T14:27:10Z,"Firing off right after the version message is ideal when you want to fire off right after a new connection, but if you just dropped a connection and just want to fire off on any other random node right away, it shouldnt matter (because its very likely that you already have one or more connections that have already exchanged version messages).  If you move it to the disconnect handler, you can just",https://github.com/bitcoin/bitcoin/pull/1271#discussion_r853368,853368,src/main.cpp
rebroad,2012-05-21T17:03:10Z,"@TheBlueMatt In my experience, a significant number of the connected nodes can be stale, and non-responsive, therefore it makes far more sense to fire off the getblocks to a node that's still communicating. Picking a random node wouldn't achieve this, but picking a node that's sending messages would.\n",https://github.com/bitcoin/bitcoin/pull/1271#discussion_r854643,854643,src/main.cpp
TheBlueMatt,2012-05-21T17:16:15Z,"Fair enough, though that probably also means you need to decrease your timeouts (also, maybe we should put those pong messages to good use...).\nIn any case, I would say throw that block at the end of ProcessMessage so that a. it cleans up the diff (no new if statements, and the if/elses become one block again and b. as you point out, let the if ""version"" block complete before running this block. ",https://github.com/bitcoin/bitcoin/pull/1271#discussion_r854759,854759,src/main.cpp
sipa,2012-06-12T19:45:46Z,why print the time?\n,https://github.com/bitcoin/bitcoin/pull/1271#discussion_r970357,970357,src/net.cpp
rebroad,2012-06-14T23:10:02Z,I have no idea at all! I don't know how this got in here! I'll remove it.\n,https://github.com/bitcoin/bitcoin/pull/1271#discussion_r989691,989691,src/net.cpp
