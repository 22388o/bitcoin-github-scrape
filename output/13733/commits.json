[
  {
    "sha": "9544a3f3fc5d900fbf90c5347821a7fcafc058b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTQ0YTNmM2ZjNWQ5MDBmYmY5MGM1MzQ3ODIxYTdmY2FmYzA1OGIw",
    "commit": {
      "author": {
        "name": "AtsukiTak",
        "email": "takatomgoo@gmail.com",
        "date": "2018-07-21T09:53:54Z"
      },
      "committer": {
        "name": "AtsukiTak",
        "email": "takatomgoo@gmail.com",
        "date": "2018-07-21T18:16:53Z"
      },
      "message": "tiny refactor for ArgsManager\n\nThis commit contains 2 refactors.\n\n1. mark \"const\" on ArgsManager::GetHelpMessage and IsArgKnown.\n2. remove unused \"error\" argument from ArgsManager::IsArgKnown.\n\nFirstly, I mark \"const\" on where it is possible to. It is mentioned\nbefore (e.g. https://github.com/bitcoin/bitcoin/pull/13190#pullrequestreview-118823133).\n\nAnd about 2nd change, ArgsManager::IsArgKnown was added at commit #4f8704d which was\nmerged at PR #13112. But from its beggining, \"error\" argument never be used.\nI think it should be refactored.",
      "tree": {
        "sha": "b0f4ef93f2271bd149907cecfdbb4d271e6adc64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0f4ef93f2271bd149907cecfdbb4d271e6adc64"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9544a3f3fc5d900fbf90c5347821a7fcafc058b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9544a3f3fc5d900fbf90c5347821a7fcafc058b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9544a3f3fc5d900fbf90c5347821a7fcafc058b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9544a3f3fc5d900fbf90c5347821a7fcafc058b0/comments",
    "author": {
      "login": "AtsukiTak",
      "id": 16274575,
      "node_id": "MDQ6VXNlcjE2Mjc0NTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16274575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AtsukiTak",
      "html_url": "https://github.com/AtsukiTak",
      "followers_url": "https://api.github.com/users/AtsukiTak/followers",
      "following_url": "https://api.github.com/users/AtsukiTak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AtsukiTak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AtsukiTak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AtsukiTak/subscriptions",
      "organizations_url": "https://api.github.com/users/AtsukiTak/orgs",
      "repos_url": "https://api.github.com/users/AtsukiTak/repos",
      "events_url": "https://api.github.com/users/AtsukiTak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AtsukiTak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "AtsukiTak",
      "id": 16274575,
      "node_id": "MDQ6VXNlcjE2Mjc0NTc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16274575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AtsukiTak",
      "html_url": "https://github.com/AtsukiTak",
      "followers_url": "https://api.github.com/users/AtsukiTak/followers",
      "following_url": "https://api.github.com/users/AtsukiTak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AtsukiTak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AtsukiTak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AtsukiTak/subscriptions",
      "organizations_url": "https://api.github.com/users/AtsukiTak/orgs",
      "repos_url": "https://api.github.com/users/AtsukiTak/repos",
      "events_url": "https://api.github.com/users/AtsukiTak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AtsukiTak/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07ce278455757fb46dab95fb9b97a3f6b1b84faf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07ce278455757fb46dab95fb9b97a3f6b1b84faf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07ce278455757fb46dab95fb9b97a3f6b1b84faf"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "8df23dd08fbce692bd3c50b32f4b1e213fef5177",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9544a3f3fc5d900fbf90c5347821a7fcafc058b0/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9544a3f3fc5d900fbf90c5347821a7fcafc058b0/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=9544a3f3fc5d900fbf90c5347821a7fcafc058b0",
        "patch": "@@ -446,7 +446,7 @@ bool ArgsManager::ParseParameters(int argc, const char* const argv[], std::strin\n \n         // Check that the arg is known\n         if (!(IsSwitchChar(key[0]) && key.size() == 1)) {\n-            if (!IsArgKnown(key, error)) {\n+            if (!IsArgKnown(key)) {\n                 error = strprintf(\"Invalid parameter %s\", key.c_str());\n                 return false;\n             }\n@@ -466,7 +466,7 @@ bool ArgsManager::ParseParameters(int argc, const char* const argv[], std::strin\n     return true;\n }\n \n-bool ArgsManager::IsArgKnown(const std::string& key, std::string& error)\n+bool ArgsManager::IsArgKnown(const std::string& key) const\n {\n     size_t option_index = key.find('.');\n     std::string arg_no_net;\n@@ -591,7 +591,7 @@ void ArgsManager::AddHiddenArgs(const std::vector<std::string>& names)\n     }\n }\n \n-std::string ArgsManager::GetHelpMessage()\n+std::string ArgsManager::GetHelpMessage() const\n {\n     const bool show_debug = gArgs.GetBoolArg(\"-help-debug\", false);\n \n@@ -859,7 +859,7 @@ bool ArgsManager::ReadConfigStream(std::istream& stream, std::string& error, boo\n         }\n \n         // Check that the arg is known\n-        if (!IsArgKnown(strKey, error) && !ignore_invalid_keys) {\n+        if (!IsArgKnown(strKey) && !ignore_invalid_keys) {\n             error = strprintf(\"Invalid configuration value %s\", option.first.c_str());\n             return false;\n         }"
      },
      {
        "sha": "2c22720a6bc2f7341701c52169381b87e69dced6",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9544a3f3fc5d900fbf90c5347821a7fcafc058b0/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9544a3f3fc5d900fbf90c5347821a7fcafc058b0/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=9544a3f3fc5d900fbf90c5347821a7fcafc058b0",
        "patch": "@@ -276,12 +276,12 @@ class ArgsManager\n     /**\n      * Get the help string\n      */\n-    std::string GetHelpMessage();\n+    std::string GetHelpMessage() const;\n \n     /**\n      * Check whether we know of this arg\n      */\n-    bool IsArgKnown(const std::string& key, std::string& error);\n+    bool IsArgKnown(const std::string& key) const;\n };\n \n extern ArgsManager gArgs;"
      }
    ]
  }
]