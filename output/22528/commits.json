[
  {
    "sha": "abc57e1f0882a1a2bb20474648419979af6e383d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYmM1N2UxZjA4ODJhMWEyYmIyMDQ3NDY0ODQxOTk3OWFmNmUzODNk",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-07-22T13:01:14Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-07-22T13:53:17Z"
      },
      "message": "refactor: move `GetTransaction(...)` to node/transaction.cpp\n\ncan be reviewed with --color-moved",
      "tree": {
        "sha": "384f1b226cc930327681f235c14a28bc67adb4fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/384f1b226cc930327681f235c14a28bc67adb4fa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/abc57e1f0882a1a2bb20474648419979af6e383d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abc57e1f0882a1a2bb20474648419979af6e383d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/abc57e1f0882a1a2bb20474648419979af6e383d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abc57e1f0882a1a2bb20474648419979af6e383d/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "78f4c8b98eada337346ffb206339c3ebae4ff43b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78f4c8b98eada337346ffb206339c3ebae4ff43b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/78f4c8b98eada337346ffb206339c3ebae4ff43b"
      }
    ],
    "stats": {
      "total": 104,
      "additions": 56,
      "deletions": 48
    },
    "files": [
      {
        "sha": "0227618edffbc6f9b9091173b16f57ba1fb8b84d",
        "filename": "src/node/transaction.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abc57e1f0882a1a2bb20474648419979af6e383d/src/node/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abc57e1f0882a1a2bb20474648419979af6e383d/src/node/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.cpp?ref=abc57e1f0882a1a2bb20474648419979af6e383d",
        "patch": "@@ -4,9 +4,12 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <consensus/validation.h>\n+#include <index/txindex.h>\n #include <net.h>\n #include <net_processing.h>\n+#include <node/blockstorage.h>\n #include <node/context.h>\n+#include <txmempool.h>\n #include <validation.h>\n #include <validationinterface.h>\n #include <node/transaction.h>\n@@ -104,3 +107,35 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n \n     return TransactionError::OK;\n }\n+\n+CTransactionRef GetTransaction(const CBlockIndex* const block_index, const CTxMemPool* const mempool, const uint256& hash, const Consensus::Params& consensusParams, uint256& hashBlock)\n+{\n+    LOCK(cs_main);\n+\n+    if (mempool && !block_index) {\n+        CTransactionRef ptx = mempool->get(hash);\n+        if (ptx) return ptx;\n+    }\n+    if (g_txindex) {\n+        CTransactionRef tx;\n+        uint256 block_hash;\n+        if (g_txindex->FindTx(hash, block_hash, tx)) {\n+            if (!block_index || block_index->GetBlockHash() == block_hash) {\n+                hashBlock = block_hash;\n+                return tx;\n+            }\n+        }\n+    }\n+    if (block_index) {\n+        CBlock block;\n+        if (ReadBlockFromDisk(block, block_index, consensusParams)) {\n+            for (const auto& tx : block.vtx) {\n+                if (tx->GetHash() == hash) {\n+                    hashBlock = block_index->GetBlockHash();\n+                    return tx;\n+                }\n+            }\n+        }\n+    }\n+    return nullptr;\n+}"
      },
      {
        "sha": "aed519cf7fac90035481e15442a23304c1a95bf4",
        "filename": "src/node/transaction.h",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abc57e1f0882a1a2bb20474648419979af6e383d/src/node/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abc57e1f0882a1a2bb20474648419979af6e383d/src/node/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.h?ref=abc57e1f0882a1a2bb20474648419979af6e383d",
        "patch": "@@ -10,7 +10,12 @@\n #include <primitives/transaction.h>\n #include <util/error.h>\n \n+class CBlockIndex;\n+class CTxMemPool;\n struct NodeContext;\n+namespace Consensus {\n+struct Params;\n+}\n \n /** Maximum fee rate for sendrawtransaction and testmempoolaccept RPC calls.\n  * Also used by the GUI when broadcasting a completed PSBT.\n@@ -38,4 +43,19 @@ static const CFeeRate DEFAULT_MAX_RAW_TX_FEE_RATE{COIN / 10};\n  */\n [[nodiscard]] TransactionError BroadcastTransaction(NodeContext& node, CTransactionRef tx, std::string& err_string, const CAmount& max_tx_fee, bool relay, bool wait_callback);\n \n+/**\n+ * Return transaction with a given hash.\n+ * If mempool is provided and block_index is not provided, check it first for the tx.\n+ * If -txindex is available, check it next for the tx.\n+ * Finally, if block_index is provided, check for tx by reading entire block from disk.\n+ *\n+ * @param[in]  block_index     The block to read from disk, or nullptr\n+ * @param[in]  mempool         If provided, check mempool for tx\n+ * @param[in]  hash            The txid\n+ * @param[in]  consensusParams The params\n+ * @param[out] hashBlock       The block hash, if the tx was found via -txindex or block_index\n+ * @returns                    The tx if found, otherwise nullptr\n+ */\n+CTransactionRef GetTransaction(const CBlockIndex* const block_index, const CTxMemPool* const mempool, const uint256& hash, const Consensus::Params& consensusParams, uint256& hashBlock);\n+\n #endif // BITCOIN_NODE_TRANSACTION_H"
      },
      {
        "sha": "3e5cc1e77cb4c765835d0e806130880e5e54aa70",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abc57e1f0882a1a2bb20474648419979af6e383d/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abc57e1f0882a1a2bb20474648419979af6e383d/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=abc57e1f0882a1a2bb20474648419979af6e383d",
        "patch": "@@ -18,7 +18,6 @@\n #include <flatfile.h>\n #include <hash.h>\n #include <index/blockfilterindex.h>\n-#include <index/txindex.h>\n #include <logging.h>\n #include <logging/timer.h>\n #include <node/blockstorage.h>\n@@ -1155,38 +1154,6 @@ PackageMempoolAcceptResult ProcessNewPackage(CChainState& active_chainstate, CTx\n     return result;\n }\n \n-CTransactionRef GetTransaction(const CBlockIndex* const block_index, const CTxMemPool* const mempool, const uint256& hash, const Consensus::Params& consensusParams, uint256& hashBlock)\n-{\n-    LOCK(cs_main);\n-\n-    if (mempool && !block_index) {\n-        CTransactionRef ptx = mempool->get(hash);\n-        if (ptx) return ptx;\n-    }\n-    if (g_txindex) {\n-        CTransactionRef tx;\n-        uint256 block_hash;\n-        if (g_txindex->FindTx(hash, block_hash, tx)) {\n-            if (!block_index || block_index->GetBlockHash() == block_hash) {\n-                hashBlock = block_hash;\n-                return tx;\n-            }\n-        }\n-    }\n-    if (block_index) {\n-        CBlock block;\n-        if (ReadBlockFromDisk(block, block_index, consensusParams)) {\n-            for (const auto& tx : block.vtx) {\n-                if (tx->GetHash() == hash) {\n-                    hashBlock = block_index->GetBlockHash();\n-                    return tx;\n-                }\n-            }\n-        }\n-    }\n-    return nullptr;\n-}\n-\n CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams)\n {\n     int halvings = nHeight / consensusParams.nSubsidyHalvingInterval;"
      },
      {
        "sha": "573246ddb6bd1eb7527e5abd26124c9678856a6d",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 14,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abc57e1f0882a1a2bb20474648419979af6e383d/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abc57e1f0882a1a2bb20474648419979af6e383d/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=abc57e1f0882a1a2bb20474648419979af6e383d",
        "patch": "@@ -141,20 +141,7 @@ void UnloadBlockIndex(CTxMemPool* mempool, ChainstateManager& chainman);\n void StartScriptCheckWorkerThreads(int threads_num);\n /** Stop all of the script checking worker threads */\n void StopScriptCheckWorkerThreads();\n-/**\n- * Return transaction with a given hash.\n- * If mempool is provided and block_index is not provided, check it first for the tx.\n- * If -txindex is available, check it next for the tx.\n- * Finally, if block_index is provided, check for tx by reading entire block from disk.\n- *\n- * @param[in]  block_index     The block to read from disk, or nullptr\n- * @param[in]  mempool         If provided, check mempool for tx\n- * @param[in]  hash            The txid\n- * @param[in]  consensusParams The params\n- * @param[out] hashBlock       The block hash, if the tx was found via -txindex or block_index\n- * @returns                    The tx if found, otherwise nullptr\n- */\n-CTransactionRef GetTransaction(const CBlockIndex* const block_index, const CTxMemPool* const mempool, const uint256& hash, const Consensus::Params& consensusParams, uint256& hashBlock);\n+\n CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams);\n \n bool AbortNode(BlockValidationState& state, const std::string& strMessage, const bilingual_str& userMessage = bilingual_str{});"
      },
      {
        "sha": "df5051720b3ee610008fd29ab3f24db60dfe1c62",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abc57e1f0882a1a2bb20474648419979af6e383d/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abc57e1f0882a1a2bb20474648419979af6e383d/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=abc57e1f0882a1a2bb20474648419979af6e383d",
        "patch": "@@ -10,7 +10,6 @@ export LC_ALL=C\n \n EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"chainparamsbase -> util/system -> chainparamsbase\"\n-    \"index/txindex -> validation -> index/txindex\"\n     \"node/blockstorage -> validation -> node/blockstorage\"\n     \"index/blockfilterindex -> node/blockstorage -> validation -> index/blockfilterindex\"\n     \"index/base -> validation -> index/blockfilterindex -> index/base\""
      }
    ]
  },
  {
    "sha": "f685a13bef0418663015ea6d8f448f075510c0ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjg1YTEzYmVmMDQxODY2MzAxNWVhNmQ4ZjQ0OGYwNzU1MTBjMGVj",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-07-22T18:32:04Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-07-22T18:35:14Z"
      },
      "message": "doc: GetTransaction()/getrawtransaction follow-ups to #22383",
      "tree": {
        "sha": "5267f47ff785c1b0dac2a1b0bcec1a883d1bd2e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5267f47ff785c1b0dac2a1b0bcec1a883d1bd2e4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f685a13bef0418663015ea6d8f448f075510c0ec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f685a13bef0418663015ea6d8f448f075510c0ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f685a13bef0418663015ea6d8f448f075510c0ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f685a13bef0418663015ea6d8f448f075510c0ec/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "abc57e1f0882a1a2bb20474648419979af6e383d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abc57e1f0882a1a2bb20474648419979af6e383d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/abc57e1f0882a1a2bb20474648419979af6e383d"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4de0b302e64bb8780086a20835993a7234bcbcc4",
        "filename": "src/node/transaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f685a13bef0418663015ea6d8f448f075510c0ec/src/node/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f685a13bef0418663015ea6d8f448f075510c0ec/src/node/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.cpp?ref=f685a13bef0418663015ea6d8f448f075510c0ec",
        "patch": "@@ -121,6 +121,9 @@ CTransactionRef GetTransaction(const CBlockIndex* const block_index, const CTxMe\n         uint256 block_hash;\n         if (g_txindex->FindTx(hash, block_hash, tx)) {\n             if (!block_index || block_index->GetBlockHash() == block_hash) {\n+                // Don't return the transaction if the provided block hash doesn't match.\n+                // The case where a transaction appears in multiple blocks (e.g. reorgs or\n+                // BIP30) is handled by the block lookup below.\n                 hashBlock = block_hash;\n                 return tx;\n             }"
      },
      {
        "sha": "ed5e1d8c460c1ca7061cfadf9b61b9d18911468a",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f685a13bef0418663015ea6d8f448f075510c0ec/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f685a13bef0418663015ea6d8f448f075510c0ec/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=f685a13bef0418663015ea6d8f448f075510c0ec",
        "patch": "@@ -76,8 +76,8 @@ static RPCHelpMan getrawtransaction()\n \n                 \"\\nBy default, this call only returns a transaction if it is in the mempool. If -txindex is enabled\\n\"\n                 \"and no blockhash argument is passed, it will return the transaction if it is in the mempool or any block.\\n\"\n-                \"If -txindex is not enabled and a blockhash argument is passed, it will return the transaction if\\n\"\n-                \"the specified block is available and the transaction is found in that block.\\n\"\n+                \"If a blockhash argument is passed, it will return the transaction if\\n\"\n+                \"the specified block is available and the transaction is in that block.\\n\"\n                 \"\\nHint: Use gettransaction for wallet transactions.\\n\"\n \n                 \"\\nIf verbose is 'true', returns an Object with information about 'txid'.\\n\""
      }
    ]
  }
]