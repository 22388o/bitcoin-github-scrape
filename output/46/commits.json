[
  {
    "sha": "722bd74749a4b0d7de163c97eed198b77c78d93a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjJiZDc0NzQ5YTRiMGQ3ZGUxNjNjOTdlZWQxOThiNzdjNzhkOTNh",
    "commit": {
      "author": {
        "name": "Gnonthgol",
        "email": "Gnonthgol@gmail.com",
        "date": "2011-01-28T17:04:17Z"
      },
      "committer": {
        "name": "Gnonthgol",
        "email": "Gnonthgol@gmail.com",
        "date": "2011-01-28T17:04:17Z"
      },
      "message": "Adding database encryption",
      "tree": {
        "sha": "555df0cd684f1bb74b60c37f2bbe4b48c00c58ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/555df0cd684f1bb74b60c37f2bbe4b48c00c58ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/722bd74749a4b0d7de163c97eed198b77c78d93a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/722bd74749a4b0d7de163c97eed198b77c78d93a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/722bd74749a4b0d7de163c97eed198b77c78d93a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/722bd74749a4b0d7de163c97eed198b77c78d93a/comments",
    "author": {
      "login": "Gnonthgol",
      "id": 96920,
      "node_id": "MDQ6VXNlcjk2OTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/96920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gnonthgol",
      "html_url": "https://github.com/Gnonthgol",
      "followers_url": "https://api.github.com/users/Gnonthgol/followers",
      "following_url": "https://api.github.com/users/Gnonthgol/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gnonthgol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gnonthgol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gnonthgol/subscriptions",
      "organizations_url": "https://api.github.com/users/Gnonthgol/orgs",
      "repos_url": "https://api.github.com/users/Gnonthgol/repos",
      "events_url": "https://api.github.com/users/Gnonthgol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gnonthgol/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Gnonthgol",
      "id": 96920,
      "node_id": "MDQ6VXNlcjk2OTIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/96920?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gnonthgol",
      "html_url": "https://github.com/Gnonthgol",
      "followers_url": "https://api.github.com/users/Gnonthgol/followers",
      "following_url": "https://api.github.com/users/Gnonthgol/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gnonthgol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gnonthgol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gnonthgol/subscriptions",
      "organizations_url": "https://api.github.com/users/Gnonthgol/orgs",
      "repos_url": "https://api.github.com/users/Gnonthgol/repos",
      "events_url": "https://api.github.com/users/Gnonthgol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gnonthgol/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1a657a00d0b4bbdb67f8b97f3bddde3ae9edba9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1a657a00d0b4bbdb67f8b97f3bddde3ae9edba9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1a657a00d0b4bbdb67f8b97f3bddde3ae9edba9"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 16,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f17f019de0f00c09e025bbb2ce5b74d34e350c18",
        "filename": "db.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/722bd74749a4b0d7de163c97eed198b77c78d93a/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/722bd74749a4b0d7de163c97eed198b77c78d93a/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/db.cpp?ref=722bd74749a4b0d7de163c97eed198b77c78d93a",
        "patch": "@@ -19,6 +19,7 @@ uint64 nAccountingEntryNumber = 0;\n static CCriticalSection cs_db;\n static bool fDbEnvInit = false;\n DbEnv dbenv(0);\n+static bool fDbUseEncryption = false;\n static map<string, int> mapFileUseCount;\n static map<string, Db*> mapDb;\n \n@@ -70,7 +71,15 @@ CDB::CDB(const char* pszFile, const char* pszMode) : pdb(NULL)\n             dbenv.set_lk_max_objects(10000);\n             dbenv.set_errfile(fopen(strErrorFile.c_str(), \"a\")); /// debug\n             dbenv.set_flags(DB_AUTO_COMMIT, 1);\n-            ret = dbenv.open(strDataDir.c_str(),\n+            const string strDbPassword = mapArgs[\"-dbpassword\"];\n+            if (strDbPassword != \"\")\n+            {\n+                dbenv.set_encrypt(strDbPassword.c_str(), DB_ENCRYPT_AES);\n+                fDbUseEncryption = true;\n+            }\n+            try\n+            {\n+                ret = dbenv.open(strDataDir.c_str(),\n                              DB_CREATE     |\n                              DB_INIT_LOCK  |\n                              DB_INIT_LOG   |\n@@ -79,6 +88,10 @@ CDB::CDB(const char* pszFile, const char* pszMode) : pdb(NULL)\n                              DB_THREAD     |\n                              DB_RECOVER,\n                              S_IRUSR | S_IWUSR);\n+            } catch (DbRunRecoveryException e)\n+            {\n+                throw runtime_error(\"Wrong dbpassword or corrupted database\");\n+            }\n             if (ret > 0)\n                 throw runtime_error(strprintf(\"CDB() : error %d opening database environment\", ret));\n             fDbEnvInit = true;\n@@ -90,6 +103,8 @@ CDB::CDB(const char* pszFile, const char* pszMode) : pdb(NULL)\n         if (pdb == NULL)\n         {\n             pdb = new Db(&dbenv, 0);\n+            if (fDbUseEncryption)\n+                pdb->set_flags(DB_ENCRYPT);\n \n             ret = pdb->open(NULL,      // Txn pointer\n                             pszFile,   // Filename"
      }
    ]
  }
]