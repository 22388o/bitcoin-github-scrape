[
  {
    "sha": "80ace9ca629a5f633f584e0c00603db0720a0d90",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MGFjZTljYTYyOWE1ZjYzM2Y1ODRlMGMwMDYwM2RiMDcyMGEwZDkw",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-01-25T03:27:36Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-05-09T16:09:51Z"
      },
      "message": "[moveonly] net: Extract CConnman::RelayTransaction\n\nNote the hashes passed more closely match the surrounding code.",
      "tree": {
        "sha": "b8325127fd4c17ed3abf7c01c4218e0295ac3c12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8325127fd4c17ed3abf7c01c4218e0295ac3c12"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80ace9ca629a5f633f584e0c00603db0720a0d90",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJc1FDPAAoJEG7l83hfeLNFOUgIALakOxBajBUqpB8gjQYru2YT\njM1Yzkc57RQdVAPI2NGiL5Te2ZeKEpgP1zQNF4nHRrjqj2LurkgOQLYsoubZecI9\nx9ndFa4vizTOVqMzRHfdCCvSjjaoSHZyggO303rBhzpgNcG4GfVovCZzezc71Gcc\np74eip8+W40X+5GS9k8EAs7gbPW+vDerijN6kW3+kCLUvpttJJIVHcumT25gqn0p\nYzJo9+j6gvkzwVfk8tA893gRuB1MnjaVY4DqKiHtUL2FThKUdjpe3ggyAlfmxF1w\nudHDycpwAJ7nBZfM/V0/4pd8pRqztG3tfOb0zAQcfCsAXon9dvLdsvzkzB8Ntew=\n=kb4U\n-----END PGP SIGNATURE-----",
        "payload": "tree b8325127fd4c17ed3abf7c01c4218e0295ac3c12\nparent 08788ce1701aed00fd2946f9a3b3e1f83526d4d2\nauthor Ben Woosley <ben.woosley@gmail.com> 1548386856 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1557418191 -0400\n\n[moveonly] net: Extract CConnman::RelayTransaction\n\nNote the hashes passed more closely match the surrounding code.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80ace9ca629a5f633f584e0c00603db0720a0d90",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/80ace9ca629a5f633f584e0c00603db0720a0d90",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80ace9ca629a5f633f584e0c00603db0720a0d90/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08788ce1701aed00fd2946f9a3b3e1f83526d4d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08788ce1701aed00fd2946f9a3b3e1f83526d4d2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08788ce1701aed00fd2946f9a3b3e1f83526d4d2"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 14,
      "deletions": 18
    },
    "files": [
      {
        "sha": "3469e7e400cc3adc770e1e73bdf56f4445982e88",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80ace9ca629a5f633f584e0c00603db0720a0d90/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80ace9ca629a5f633f584e0c00603db0720a0d90/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=80ace9ca629a5f633f584e0c00603db0720a0d90",
        "patch": "@@ -283,8 +283,7 @@ class ChainImpl : public Chain\n     }\n     void relayTransaction(const uint256& txid) override\n     {\n-        CInv inv(MSG_TX, txid);\n-        g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+        g_connman->RelayTransaction(txid);\n     }\n     void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n     {"
      },
      {
        "sha": "7f6d825df3733f09e926a6cf2a650747044284dd",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80ace9ca629a5f633f584e0c00603db0720a0d90/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80ace9ca629a5f633f584e0c00603db0720a0d90/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=80ace9ca629a5f633f584e0c00603db0720a0d90",
        "patch": "@@ -2610,6 +2610,12 @@ int CConnman::GetBestHeight() const\n     return nBestHeight.load(std::memory_order_acquire);\n }\n \n+void CConnman::RelayTransaction(const uint256& txid) const\n+{\n+    CInv inv(MSG_TX, txid);\n+    ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+}\n+\n unsigned int CConnman::GetReceiveFloodSize() const { return nReceiveFloodSize; }\n \n CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn, SOCKET hSocketIn, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress& addrBindIn, const std::string& addrNameIn, bool fInboundIn)"
      },
      {
        "sha": "f0c1f706a42cb4e008c86c29d562b636c8fbf981",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80ace9ca629a5f633f584e0c00603db0720a0d90/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80ace9ca629a5f633f584e0c00603db0720a0d90/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=80ace9ca629a5f633f584e0c00603db0720a0d90",
        "patch": "@@ -299,6 +299,9 @@ class CConnman\n     void SetBestHeight(int height);\n     int GetBestHeight() const;\n \n+    /** Announce transaction to all peers */\n+    void RelayTransaction(const uint256& txid) const;\n+\n     /** Get a unique deterministic randomizer. */\n     CSipHasher GetDeterministicRandomizer(uint64_t id) const;\n "
      },
      {
        "sha": "77145e3283e510d8fe84822882abd4aa5eb2b7f5",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 12,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80ace9ca629a5f633f584e0c00603db0720a0d90/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80ace9ca629a5f633f584e0c00603db0720a0d90/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=80ace9ca629a5f633f584e0c00603db0720a0d90",
        "patch": "@@ -1292,15 +1292,6 @@ bool static AlreadyHave(const CInv& inv) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n     return true;\n }\n \n-static void RelayTransaction(const CTransaction& tx, CConnman* connman)\n-{\n-    CInv inv(MSG_TX, tx.GetHash());\n-    connman->ForEachNode([&inv](CNode* pnode)\n-    {\n-        pnode->PushInventory(inv);\n-    });\n-}\n-\n static void RelayAddress(const CAddress& addr, bool fReachable, CConnman* connman)\n {\n     unsigned int nRelayNodes = fReachable ? 2 : 1; // limited relaying of addresses outside our network(s)\n@@ -1786,7 +1777,7 @@ void static ProcessOrphanTx(CConnman* connman, std::set<uint256>& orphan_work_se\n         if (setMisbehaving.count(fromPeer)) continue;\n         if (AcceptToMemoryPool(mempool, orphan_state, porphanTx, &fMissingInputs2, &removed_txn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {\n             LogPrint(BCLog::MEMPOOL, \"   accepted orphan tx %s\\n\", orphanHash.ToString());\n-            RelayTransaction(orphanTx, connman);\n+            connman->RelayTransaction(orphanHash);\n             for (unsigned int i = 0; i < orphanTx.vout.size(); i++) {\n                 auto it_by_prev = mapOrphanTransactionsByPrev.find(COutPoint(orphanHash, i));\n                 if (it_by_prev != mapOrphanTransactionsByPrev.end()) {\n@@ -2473,7 +2464,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         if (!AlreadyHave(inv) &&\n             AcceptToMemoryPool(mempool, state, ptx, &fMissingInputs, &lRemovedTxn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {\n             mempool.check(pcoinsTip.get());\n-            RelayTransaction(tx, connman);\n+            connman->RelayTransaction(inv.hash);\n             for (unsigned int i = 0; i < tx.vout.size(); i++) {\n                 auto it_by_prev = mapOrphanTransactionsByPrev.find(COutPoint(inv.hash, i));\n                 if (it_by_prev != mapOrphanTransactionsByPrev.end()) {\n@@ -2552,7 +2543,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     LogPrintf(\"Not relaying invalid transaction %s from whitelisted peer=%d (%s)\\n\", tx.GetHash().ToString(), pfrom->GetId(), FormatStateMessage(state));\n                 } else {\n                     LogPrintf(\"Force relaying tx %s from whitelisted peer=%d\\n\", tx.GetHash().ToString(), pfrom->GetId());\n-                    RelayTransaction(tx, connman);\n+                    connman->RelayTransaction(tx.GetHash());\n                 }\n             }\n         }"
      },
      {
        "sha": "ee101c6f7dcf213443aede24f30cfbbd59b35301",
        "filename": "src/node/transaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80ace9ca629a5f633f584e0c00603db0720a0d90/src/node/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80ace9ca629a5f633f584e0c00603db0720a0d90/src/node/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.cpp?ref=80ace9ca629a5f633f584e0c00603db0720a0d90",
        "patch": "@@ -69,10 +69,7 @@ TransactionError BroadcastTransaction(const CTransactionRef tx, uint256& hashTx,\n         return TransactionError::P2P_DISABLED;\n     }\n \n-    CInv inv(MSG_TX, hashTx);\n-    g_connman->ForEachNode([&inv](CNode* pnode) {\n-        pnode->PushInventory(inv);\n-    });\n+    g_connman->RelayTransaction(hashTx);\n \n     return TransactionError::OK;\n }"
      }
    ]
  },
  {
    "sha": "0bf2e504a18f57b6c1eb22d7af066ae24c8587b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYmYyZTUwNGExOGY1N2I2YzFlYjIyZDdhZjA2NmFlMjRjODU4N2I0",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-03-05T07:01:59Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-05-10T04:13:49Z"
      },
      "message": "net: Consistently log INV messages and their type\n\nThis requires splitting CNode::PushInventory into Block and Transaction\nvariants for the sake of the return information.",
      "tree": {
        "sha": "53de3a695448c90e09bcacbb943d32304e76fd83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/53de3a695448c90e09bcacbb943d32304e76fd83"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0bf2e504a18f57b6c1eb22d7af066ae24c8587b4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJc1Pq3AAoJEG7l83hfeLNFw2wIAIjhgvVXq8Y+WYmZqIjK+4Rl\nNYaIXWd3Z5QuigHiXyUZwCj78XAkfyBAx0vfLHhZbC+frZQdCHshDDsUv48Xyd5F\nn2427DJmZoWhwERd3vGR+pkvNeri0YiGq7Cmow/XD8H9DcL9ZtBF1BeSFZv6T0bW\nxadXvTpQnfjPsc0v3irfAzCPyPdRoXBv16niTQvL29yMPRrugIvFTNlMzDxp/V/I\n5Cbh8uEM6NUorw7uLj4axqhBg4OyaMtP2z4sZbq89TGjEzU5cqFk1yeoU2uTv0tp\nBhOxK7iUHhaaCTnGBsJPr5iVTv1b4ovsJI2oBwH6uC7NsO3ALhZD2nPrG8dInH4=\n=H+ni\n-----END PGP SIGNATURE-----",
        "payload": "tree 53de3a695448c90e09bcacbb943d32304e76fd83\nparent 80ace9ca629a5f633f584e0c00603db0720a0d90\nauthor Ben Woosley <ben.woosley@gmail.com> 1551769319 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1557461629 -0400\n\nnet: Consistently log INV messages and their type\n\nThis requires splitting CNode::PushInventory into Block and Transaction\nvariants for the sake of the return information.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bf2e504a18f57b6c1eb22d7af066ae24c8587b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0bf2e504a18f57b6c1eb22d7af066ae24c8587b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bf2e504a18f57b6c1eb22d7af066ae24c8587b4/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80ace9ca629a5f633f584e0c00603db0720a0d90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80ace9ca629a5f633f584e0c00603db0720a0d90",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80ace9ca629a5f633f584e0c00603db0720a0d90"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 32,
      "deletions": 18
    },
    "files": [
      {
        "sha": "5bd8ee0a2598c65e4960d9ed4c92b34a61230640",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 2,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bf2e504a18f57b6c1eb22d7af066ae24c8587b4/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bf2e504a18f57b6c1eb22d7af066ae24c8587b4/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=0bf2e504a18f57b6c1eb22d7af066ae24c8587b4",
        "patch": "@@ -444,6 +444,22 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n     return pnode;\n }\n \n+bool CNode::PushTransactionInventory(const uint256& txid)\n+{\n+    LOCK(cs_inventory);\n+    if (!filterInventoryKnown.contains(txid)) {\n+        return setInventoryTxToSend.insert(txid).second;\n+    }\n+    return false;\n+}\n+\n+void CNode::PushBlockInventory(const uint256& blockhash)\n+{\n+    LOCK(cs_inventory);\n+    LogPrint(BCLog::NET, \"sending block inv peer=%d hash=%s\\n\", GetId(), blockhash.ToString());\n+    vInventoryBlockToSend.push_back(blockhash);\n+}\n+\n void CNode::CloseSocketDisconnect()\n {\n     fDisconnect = true;\n@@ -2612,8 +2628,13 @@ int CConnman::GetBestHeight() const\n \n void CConnman::RelayTransaction(const uint256& txid) const\n {\n-    CInv inv(MSG_TX, txid);\n-    ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+    size_t sent = 0;\n+    ForEachNode([&txid, &sent](CNode* pnode) {\n+        if (pnode->PushTransactionInventory(txid)) ++sent;\n+    });\n+    if (sent > 0) {\n+        LogPrint(BCLog::NET, \"Relaying tx %s to %u peers\\n\", txid.ToString(), sent);\n+    }\n }\n \n unsigned int CConnman::GetReceiveFloodSize() const { return nReceiveFloodSize; }"
      },
      {
        "sha": "1f19414a232f62831060208bf3bf35d261aa60c3",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 6,
        "deletions": 11,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bf2e504a18f57b6c1eb22d7af066ae24c8587b4/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bf2e504a18f57b6c1eb22d7af066ae24c8587b4/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=0bf2e504a18f57b6c1eb22d7af066ae24c8587b4",
        "patch": "@@ -842,17 +842,12 @@ class CNode\n         }\n     }\n \n-    void PushInventory(const CInv& inv)\n-    {\n-        LOCK(cs_inventory);\n-        if (inv.type == MSG_TX) {\n-            if (!filterInventoryKnown.contains(inv.hash)) {\n-                setInventoryTxToSend.insert(inv.hash);\n-            }\n-        } else if (inv.type == MSG_BLOCK) {\n-            vInventoryBlockToSend.push_back(inv.hash);\n-        }\n-    }\n+    //! Pushes a tx inv to this peer, unless already known\n+    //! @returns true if the inv will be sent, false if not\n+    bool PushTransactionInventory(const uint256& txid);\n+\n+    //! Pushes a block inv to this peer\n+    void PushBlockInventory(const uint256& blockhash);\n \n     void PushBlockHash(const uint256 &hash)\n     {"
      },
      {
        "sha": "75cd4c26d61a12e90b7b45d8f85a1ab5a29e95c0",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bf2e504a18f57b6c1eb22d7af066ae24c8587b4/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bf2e504a18f57b6c1eb22d7af066ae24c8587b4/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=0bf2e504a18f57b6c1eb22d7af066ae24c8587b4",
        "patch": "@@ -1472,7 +1472,7 @@ void static ProcessGetBlockData(CNode* pfrom, const CChainParams& chainparams, c\n         // Trigger the peer node to send a getblocks request for the next batch of inventory\n         if (inv.hash == pfrom->hashContinue)\n         {\n-            // Bypass PushInventory, this must send even if redundant,\n+            // Bypass PushBlockInventory, this must send even if redundant,\n             // and we want it right after the last block so they don't\n             // wait for other stuff first.\n             std::vector<CInv> vInv;\n@@ -2304,7 +2304,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 LogPrint(BCLog::NET, \" getblocks stopping, pruned or too old block at %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n                 break;\n             }\n-            pfrom->PushInventory(CInv(MSG_BLOCK, pindex->GetBlockHash()));\n+            pfrom->PushBlockInventory(pindex->GetBlockHash());\n             if (--nLimit <= 0)\n             {\n                 // When this block is requested, we'll send an inv that'll\n@@ -3705,9 +3705,7 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n \n                     // If the peer's chain has this block, don't inv it back.\n                     if (!PeerHasHeader(&state, pindex)) {\n-                        pto->PushInventory(CInv(MSG_BLOCK, hashToAnnounce));\n-                        LogPrint(BCLog::NET, \"%s: sending inv peer=%d hash=%s\\n\", __func__,\n-                            pto->GetId(), hashToAnnounce.ToString());\n+                        pto->PushBlockInventory(hashToAnnounce);\n                     }\n                 }\n             }"
      }
    ]
  }
]