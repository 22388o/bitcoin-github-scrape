[
  {
    "sha": "99d6a1e86564d7b316a7de1d3565980811e650ce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OWQ2YTFlODY1NjRkN2IzMTZhN2RlMWQzNTY1OTgwODExZTY1MGNl",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-05-21T17:44:23Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-07-11T20:47:47Z"
      },
      "message": "disable thread_local on unreliable platforms\n\nSee discussions here:\n\n- https://github.com/bitcoin/bitcoin/pull/11722#pullrequestreview-79322658\n- https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-387181155",
      "tree": {
        "sha": "078e1c15430b2fd9fa462aaf245a60b8fc39b66b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/078e1c15430b2fd9fa462aaf245a60b8fc39b66b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99d6a1e86564d7b316a7de1d3565980811e650ce",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99d6a1e86564d7b316a7de1d3565980811e650ce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/99d6a1e86564d7b316a7de1d3565980811e650ce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99d6a1e86564d7b316a7de1d3565980811e650ce/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ba77df15de92deb35bfd501d4635aed3236af30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ba77df15de92deb35bfd501d4635aed3236af30",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ba77df15de92deb35bfd501d4635aed3236af30"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 17,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5138b8066e443567ca01957173cb32d1a5ae6dfc",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99d6a1e86564d7b316a7de1d3565980811e650ce/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99d6a1e86564d7b316a7de1d3565980811e650ce/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=99d6a1e86564d7b316a7de1d3565980811e650ce",
        "patch": "@@ -775,8 +775,23 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   }\n   ])],\n   [\n-    AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n-    AC_MSG_RESULT(yes)\n+   case $host in\n+     *mingw*)\n+        # mingw32's implementation of thread_local has also been shown to behave\n+        # erroneously under concurrent usage; see:\n+        # https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+        AC_MSG_RESULT(no)\n+        ;;\n+      *darwin*)\n+        # TODO enable thread_local on later versions of Darwin where it is\n+        # supported (per https://stackoverflow.com/a/29929949)\n+        AC_MSG_RESULT(no)\n+        ;;\n+      *)\n+        AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n+        AC_MSG_RESULT(yes)\n+        ;;\n+    esac\n   ],\n   [\n     AC_MSG_RESULT(no)"
      }
    ]
  },
  {
    "sha": "6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTEyZjAxYjg0ODBhOTNkY2Q5N2MwODYxOGUxYzdjODI3ZWE3MmI3",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-06-13T18:50:59Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-07-12T14:17:49Z"
      },
      "message": "threads: introduce threadutil, refactor thread naming\n\nThis work is prerequisite to attaching thread names to log lines and deadlock\ndebug utilities. threadutil allows setting of an \"internal\" threadname per\nthread on platforms where thread_local is available.\n\nThis commit also moves RenameThread() out of util and adds a numeric suffix to\ndisambiguate between threads with the same name. It explicitly names a few\nmain threads using the new Rename() utility.",
      "tree": {
        "sha": "72beca1239877027d5c52416a65e37293ef29bd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72beca1239877027d5c52416a65e37293ef29bd7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "99d6a1e86564d7b316a7de1d3565980811e650ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99d6a1e86564d7b316a7de1d3565980811e650ce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99d6a1e86564d7b316a7de1d3565980811e650ce"
      }
    ],
    "stats": {
      "total": 169,
      "additions": 130,
      "deletions": 39
    },
    "files": [
      {
        "sha": "a0ab13e6e7cbc41cac839042a7318cbf93d0d84f",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "patch": "@@ -169,6 +169,7 @@ BITCOIN_CORE_H = \\\n   support/events.h \\\n   support/lockedpool.h \\\n   sync.h \\\n+  threadutil.h \\\n   threadsafety.h \\\n   threadinterrupt.h \\\n   timedata.h \\\n@@ -409,6 +410,7 @@ libbitcoin_util_a_SOURCES = \\\n   rpc/protocol.cpp \\\n   support/cleanse.cpp \\\n   sync.cpp \\\n+  threadutil.cpp \\\n   threadinterrupt.cpp \\\n   util.cpp \\\n   utilmoneystr.cpp \\"
      },
      {
        "sha": "bf0268997cbfcf312bd3a16b66bef4edefe784b7",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "patch": "@@ -18,6 +18,7 @@\n #include <util.h>\n #include <httpserver.h>\n #include <httprpc.h>\n+#include <threadutil.h>\n #include <utilstrencodings.h>\n #include <walletinitinterface.h>\n \n@@ -58,6 +59,8 @@ static bool AppInit(int argc, char* argv[])\n {\n     bool fRet = false;\n \n+    thread_util::Rename(\"init\");\n+\n     //\n     // Parameters\n     //"
      },
      {
        "sha": "229ff860ad1af6005361839530b19e7952bd9df9",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "patch": "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <threadutil.h>\n #include <util.h>\n #include <utilstrencodings.h>\n #include <netbase.h>\n@@ -16,7 +17,7 @@\n #include <memory>\n #include <stdio.h>\n #include <stdlib.h>\n-#include <string.h>\n+#include <string>\n \n #include <sys/types.h>\n #include <sys/stat.h>\n@@ -281,7 +282,7 @@ static void http_reject_request_cb(struct evhttp_request* req, void*)\n /** Event dispatcher thread */\n static bool ThreadHTTP(struct event_base* base, struct evhttp* http)\n {\n-    RenameThread(\"bitcoin-http\");\n+    thread_util::Rename(\"http\");\n     LogPrint(BCLog::HTTP, \"Entering http event loop\\n\");\n     event_base_dispatch(base);\n     // Event loop will be interrupted by InterruptHTTPServer()\n@@ -328,9 +329,9 @@ static bool HTTPBindAddresses(struct evhttp* http)\n }\n \n /** Simple wrapper to set thread name and run work queue */\n-static void HTTPWorkQueueRun(WorkQueue<HTTPClosure>* queue)\n+static void HTTPWorkQueueRun(WorkQueue<HTTPClosure>* queue, int worker_num)\n {\n-    RenameThread(\"bitcoin-httpworker\");\n+    thread_util::Rename(strprintf(\"httpworker.%i\", worker_num));\n     queue->Run();\n }\n \n@@ -433,7 +434,7 @@ bool StartHTTPServer()\n     threadHTTP = std::thread(std::move(task), eventBase, eventHTTP);\n \n     for (int i = 0; i < rpcThreads; i++) {\n-        g_thread_http_workers.emplace_back(HTTPWorkQueueRun, workQueue);\n+        g_thread_http_workers.emplace_back(HTTPWorkQueueRun, workQueue, i);\n     }\n     return true;\n }"
      },
      {
        "sha": "58253da7d6819c2d2434a57097957415de91082f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "patch": "@@ -36,6 +36,7 @@\n #include <script/sigcache.h>\n #include <scheduler.h>\n #include <shutdown.h>\n+#include <threadutil.h>\n #include <timedata.h>\n #include <txdb.h>\n #include <txmempool.h>\n@@ -195,7 +196,7 @@ void Shutdown()\n     /// for example if the data directory was found to be locked.\n     /// Be sure that anything that writes files or flushes caches only does this if the respective\n     /// module was initialized.\n-    RenameThread(\"bitcoin-shutoff\");\n+    thread_util::Rename(\"shutoff\");\n     mempool.AddTransactionsUpdated(1);\n \n     StopHTTPRPC();\n@@ -631,7 +632,7 @@ static void CleanupBlockRevFiles()\n static void ThreadImport(std::vector<fs::path> vImportFiles)\n {\n     const CChainParams& chainparams = Params();\n-    RenameThread(\"bitcoin-loadblk\");\n+    thread_util::Rename(\"loadblk\");\n     ScheduleBatchPriority();\n \n     {\n@@ -1264,7 +1265,7 @@ bool AppInitMain()\n     LogPrintf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);\n     if (nScriptCheckThreads) {\n         for (int i=0; i<nScriptCheckThreads-1; i++)\n-            threadGroup.create_thread(&ThreadScriptCheck);\n+            threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\n     }\n \n     // Start the lightweight task scheduler thread"
      },
      {
        "sha": "e00057de3beeb8ddc9cc8dd8da88966bd922c23e",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "patch": "@@ -28,6 +28,7 @@\n \n #include <interfaces/handler.h>\n #include <interfaces/node.h>\n+#include <threadutil.h>\n #include <rpc/server.h>\n #include <ui_interface.h>\n #include <uint256.h>\n@@ -259,6 +260,7 @@ void BitcoinCore::initialize()\n     try\n     {\n         qDebug() << __func__ << \": Running initialization in thread\";\n+        thread_util::Rename(\"qt-init\");\n         bool rv = m_node.appInitMain();\n         Q_EMIT initializeResult(rv);\n     } catch (const std::exception& e) {\n@@ -556,6 +558,7 @@ static void SetupUIArgs()\n int main(int argc, char *argv[])\n {\n     SetupEnvironment();\n+    thread_util::Rename(\"main\");\n \n     std::unique_ptr<interfaces::Node> node = interfaces::MakeNode();\n "
      },
      {
        "sha": "46eb29f83e5431f1b76609e49ad9abe07f5f4676",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "patch": "@@ -96,7 +96,7 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n         }\n         nScriptCheckThreads = 3;\n         for (int i=0; i < nScriptCheckThreads-1; i++)\n-            threadGroup.create_thread(&ThreadScriptCheck);\n+            threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\n         g_connman = std::unique_ptr<CConnman>(new CConnman(0x1337, 0x1337)); // Deterministic randomness for tests.\n         connman = g_connman.get();\n         peerLogic.reset(new PeerLogicValidation(connman, scheduler));"
      },
      {
        "sha": "c558c506eeed822ac0d099e128070995146a169c",
        "filename": "src/threadutil.cpp",
        "status": "added",
        "additions": 76,
        "deletions": 0,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/threadutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/threadutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/threadutil.cpp?ref=6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "patch": "@@ -0,0 +1,76 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <threadutil.h>\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+/**\n+ * Set the thread's name at the process level. Does not affect the\n+ * internal name.\n+ */\n+static void SetThreadName(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+/*\n+ * If we have thread_local, just keep thread ID and name in a thread_local\n+ * global.\n+ */\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local std::string g_thread_name;\n+\n+std::string thread_util::GetInternalName() {\n+    return g_thread_name;\n+}\n+\n+/**\n+ * Set the in-memory internal name for this thread. Does not affect the process\n+ * name.\n+ */\n+static void SetInternalName(const std::string& name)\n+{\n+    g_thread_name = name;\n+}\n+\n+/**\n+ * Without thread_local available, don't handle internal name at all.\n+ */\n+#else\n+\n+std::string thread_util::GetInternalName()\n+{\n+    return \"\";\n+}\n+\n+static void SetInternalName(const std::string& name) { }\n+\n+#endif\n+\n+void thread_util::Rename(const std::string& name)\n+{\n+    SetThreadName((\"bitcoin-\" + name).c_str());\n+    SetInternalName(name);\n+}"
      },
      {
        "sha": "efff1db1941ed18e48fce17f3fe9f834cbc1eeed",
        "filename": "src/threadutil.h",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/threadutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/threadutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/threadutil.h?ref=6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "patch": "@@ -0,0 +1,26 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_THREADUTIL_H\n+#define BITCOIN_THREADUTIL_H\n+\n+#include <string>\n+\n+namespace thread_util\n+{\n+    /**\n+     * Rename a thread both in terms of an internal (in-memory) name as well\n+     * as its system thread name.\n+     */\n+    void Rename(const std::string&);\n+\n+    /**\n+     * Get the thread's internal (in-memory) name; used e.g. for identification in\n+     * logging.\n+     */\n+    std::string GetInternalName();\n+\n+} // namespace thread_util\n+\n+#endif // BITCOIN_THREADUTIL_H"
      },
      {
        "sha": "7f35eedcc836432df2f591174a9636fa7d3fad32",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "patch": "@@ -63,10 +63,6 @@\n #include <shlobj.h>\n #endif\n \n-#ifdef HAVE_SYS_PRCTL_H\n-#include <sys/prctl.h>\n-#endif\n-\n #ifdef HAVE_MALLOPT_ARENA_MAX\n #include <malloc.h>\n #endif\n@@ -1109,22 +1105,6 @@ void runCommand(const std::string& strCommand)\n         LogPrintf(\"runCommand error: system(%s) returned %d\\n\", strCommand, nErr);\n }\n \n-void RenameThread(const char* name)\n-{\n-#if defined(PR_SET_NAME)\n-    // Only the first 15 characters are used (16 - NUL terminator)\n-    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n-#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n-    pthread_set_name_np(pthread_self(), name);\n-\n-#elif defined(MAC_OSX)\n-    pthread_setname_np(name);\n-#else\n-    // Prevent warnings for unused parameters...\n-    (void)name;\n-#endif\n-}\n-\n void SetupEnvironment()\n {\n #ifdef HAVE_MALLOPT_ARENA_MAX"
      },
      {
        "sha": "2ef7ad59c86589ab33c64bddb2f806f74112aa75",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "patch": "@@ -18,6 +18,7 @@\n #include <fs.h>\n #include <logging.h>\n #include <sync.h>\n+#include <threadutil.h>\n #include <tinyformat.h>\n #include <utiltime.h>\n \n@@ -314,15 +315,12 @@ std::string HelpMessageOpt(const std::string& option, const std::string& message\n  */\n int GetNumCores();\n \n-void RenameThread(const char* name);\n-\n /**\n  * .. and a wrapper that just calls func once\n  */\n template <typename Callable> void TraceThread(const char* name,  Callable func)\n {\n-    std::string s = strprintf(\"bitcoin-%s\", name);\n-    RenameThread(s.c_str());\n+    thread_util::Rename(name);\n     try\n     {\n         LogPrintf(\"%s thread start\\n\", name);"
      },
      {
        "sha": "226455a5e923e74258d2b4f363645e298795aa53",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "patch": "@@ -43,6 +43,7 @@\n \n #include <future>\n #include <sstream>\n+#include <string>\n \n #include <boost/algorithm/string/replace.hpp>\n #include <boost/algorithm/string/join.hpp>\n@@ -1702,8 +1703,8 @@ static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, CValidationState&\n \n static CCheckQueue<CScriptCheck> scriptcheckqueue(128);\n \n-void ThreadScriptCheck() {\n-    RenameThread(\"bitcoin-scriptch\");\n+void ThreadScriptCheck(int worker_num) {\n+    thread_util::Rename(strprintf(\"scriptch.%i\", worker_num));\n     scriptcheckqueue.Thread();\n }\n "
      },
      {
        "sha": "16713fab6ca166d0ad52d52f6cf7c96e976ba43d",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e12f01b8480a93dcd97c08618e1c7c827ea72b7/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "patch": "@@ -221,7 +221,7 @@ static const unsigned int DEFAULT_CHECKLEVEL = 3;\n // Setting the target to > than 550MB will make it likely we can respect the target.\n static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n \n-/** \n+/**\n  * Process an incoming block. This only returns after the best known valid\n  * block is made active. Note that it does not, however, guarantee that the\n  * specific block passed to it has been checked for validity!\n@@ -232,7 +232,7 @@ static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n  *\n  * Note that we guarantee that either the proof-of-work is valid on pblock, or\n  * (and possibly also) BlockChecked will have been called.\n- * \n+ *\n  * May not be called in a\n  * validationinterface callback.\n  *\n@@ -275,7 +275,7 @@ bool LoadChainTip(const CChainParams& chainparams);\n /** Unload database information */\n void UnloadBlockIndex();\n /** Run an instance of the script checking thread */\n-void ThreadScriptCheck();\n+void ThreadScriptCheck(int worker_num);\n /** Check whether we are doing an initial block download (synchronizing from disk or network) */\n bool IsInitialBlockDownload();\n /** Retrieve a transaction (from memory pool, or from disk, if possible) */\n@@ -365,7 +365,7 @@ bool CheckSequenceLocks(const CTransaction &tx, int flags, LockPoints* lp = null\n \n /**\n  * Closure representing one script verification\n- * Note that this stores references to the spending transaction \n+ * Note that this stores references to the spending transaction\n  */\n class CScriptCheck\n {"
      }
    ]
  },
  {
    "sha": "002a570b5da2a1c15fb92e6362a96163eed13dea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDJhNTcwYjVkYTJhMWMxNWZiOTJlNjM2MmE5NjE2M2VlZDEzZGVh",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-05-05T18:11:46Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-07-12T14:18:01Z"
      },
      "message": "tests: add threadutil tests",
      "tree": {
        "sha": "68b6cf13034057eb32014b582918b0352930360f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68b6cf13034057eb32014b582918b0352930360f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/002a570b5da2a1c15fb92e6362a96163eed13dea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/002a570b5da2a1c15fb92e6362a96163eed13dea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/002a570b5da2a1c15fb92e6362a96163eed13dea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/002a570b5da2a1c15fb92e6362a96163eed13dea/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e12f01b8480a93dcd97c08618e1c7c827ea72b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e12f01b8480a93dcd97c08618e1c7c827ea72b7"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 74,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a2bcef02aed7723bbcc9e674214ee42f1093e888",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/002a570b5da2a1c15fb92e6362a96163eed13dea/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/002a570b5da2a1c15fb92e6362a96163eed13dea/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=002a570b5da2a1c15fb92e6362a96163eed13dea",
        "patch": "@@ -80,6 +80,7 @@ BITCOIN_TESTS =\\\n   test/sigopcount_tests.cpp \\\n   test/skiplist_tests.cpp \\\n   test/streams_tests.cpp \\\n+  test/threadutil_tests.cpp \\\n   test/timedata_tests.cpp \\\n   test/torcontrol_tests.cpp \\\n   test/transaction_tests.cpp \\"
      },
      {
        "sha": "3fd1d333dc82f9fdfda16456a920a01518523a51",
        "filename": "src/test/threadutil_tests.cpp",
        "status": "added",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/002a570b5da2a1c15fb92e6362a96163eed13dea/src/test/threadutil_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/002a570b5da2a1c15fb92e6362a96163eed13dea/src/test/threadutil_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/threadutil_tests.cpp?ref=002a570b5da2a1c15fb92e6362a96163eed13dea",
        "patch": "@@ -0,0 +1,73 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <threadutil.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <thread>\n+#include <vector>\n+#include <set>\n+#include <mutex>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(threadutil_tests, BasicTestingSetup)\n+\n+std::string TEST_THREAD_NAME_BASE = \"test_thread.\";\n+\n+/**\n+ * Run a bunch of threads to all call thread_util::rename.\n+ *\n+ * @return the set of name each thread has after attempted renaming.\n+ */\n+std::set<std::string> RenameEnMasse(int num_threads)\n+{\n+    std::vector<std::thread> threads;\n+    std::set<std::string> names;\n+    std::mutex lock;\n+\n+    auto RenameThisThread = [&](int i) {\n+        thread_util::Rename(TEST_THREAD_NAME_BASE + std::to_string(i));\n+        std::lock_guard<std::mutex> guard(lock);\n+        names.insert(thread_util::GetInternalName());\n+    };\n+\n+    for (int i = 0; i < num_threads; ++i) {\n+        threads.push_back(std::thread(RenameThisThread, i));\n+    }\n+\n+    for (std::thread& thread : threads) thread.join();\n+\n+    return names;\n+}\n+\n+/**\n+ * Rename a bunch of threads with the same basename (expect_multiple=true), ensuring suffixes are\n+ * applied properly.\n+ */\n+BOOST_AUTO_TEST_CASE(threadutil_test_rename_threaded)\n+{\n+    BOOST_CHECK_EQUAL(thread_util::GetInternalName(), \"\");\n+\n+#if !defined(HAVE_THREAD_LOCAL)\n+    // This test doesn't apply to platforms where we don't have thread_local.\n+    return;\n+#endif\n+\n+    std::set<std::string> names = RenameEnMasse(100);\n+\n+    BOOST_CHECK_EQUAL(names.size(), 100);\n+\n+    // Names \"test_thread.[n]\" should exist for n = [0, 99]\n+    for (int i = 0; i < 100; ++i) {\n+        BOOST_CHECK(names.find(TEST_THREAD_NAME_BASE + std::to_string(i)) != names.end());\n+    }\n+\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "577ffd40a07b156c1917004a817f07472106066b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NzdmZmQ0MGEwN2IxNTZjMTkxNzAwNGE4MTdmMDc0NzIxMDYwNjZi",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james@chaincode.com",
        "date": "2018-05-05T18:14:43Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-07-12T14:18:01Z"
      },
      "message": "threads: prefix log messages with thread names\n\nIntroduce a new flag (`-logthreadnames`) which allows toggling\nof this behavior.",
      "tree": {
        "sha": "450d44bf00a68c7e0dca3fc37f0f6b1395b48219",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/450d44bf00a68c7e0dca3fc37f0f6b1395b48219"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/577ffd40a07b156c1917004a817f07472106066b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/577ffd40a07b156c1917004a817f07472106066b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/577ffd40a07b156c1917004a817f07472106066b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/577ffd40a07b156c1917004a817f07472106066b/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "002a570b5da2a1c15fb92e6362a96163eed13dea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/002a570b5da2a1c15fb92e6362a96163eed13dea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/002a570b5da2a1c15fb92e6362a96163eed13dea"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 34,
      "deletions": 11
    },
    "files": [
      {
        "sha": "fd5d5f1d3635a7e913490997ae86f55e0661c083",
        "filename": "doc/release-notes-pr13168.md",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/577ffd40a07b156c1917004a817f07472106066b/doc/release-notes-pr13168.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/577ffd40a07b156c1917004a817f07472106066b/doc/release-notes-pr13168.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-pr13168.md?ref=577ffd40a07b156c1917004a817f07472106066b",
        "patch": "@@ -0,0 +1,6 @@\n+Thread names in logs\n+--------------------\n+\n+On platforms supporting `thread_local`, log lines are now prefixed by default\n+with the name of the thread that caused the log. To disable this behavior,\n+specify `-logthreadnames=0`."
      },
      {
        "sha": "d4449644a301ec196b174b0eb5c5562089902651",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/577ffd40a07b156c1917004a817f07472106066b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/577ffd40a07b156c1917004a817f07472106066b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=577ffd40a07b156c1917004a817f07472106066b",
        "patch": "@@ -470,6 +470,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-help-debug\", \"Show all debugging options (usage: --help -help-debug)\", false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logips\", strprintf(\"Include IP addresses in debug output (default: %u)\", DEFAULT_LOGIPS), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logtimestamps\", strprintf(\"Prepend debug output with timestamp (default: %u)\", DEFAULT_LOGTIMESTAMPS), false, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-logthreadnames\", strprintf(\"Prepend debug output with name of the originating thread (only available on platforms supporting thread_local) (default: %u)\", DEFAULT_LOGTHREADNAMES), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-mocktime=<n>\", \"Replace actual time with <n> seconds since epoch (default: 0)\", true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-maxsigcachesize=<n>\", strprintf(\"Limit sum of signature cache and script execution cache sizes to <n> MiB (default: %u)\", DEFAULT_MAX_SIG_CACHE_SIZE), true, OptionsCategory::DEBUG_TEST);\n@@ -836,6 +837,7 @@ void InitLogging()\n     g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", !gArgs.GetBoolArg(\"-daemon\", false));\n     g_logger->m_log_timestamps = gArgs.GetBoolArg(\"-logtimestamps\", DEFAULT_LOGTIMESTAMPS);\n     g_logger->m_log_time_micros = gArgs.GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);\n+    g_logger->m_log_threadnames = gArgs.GetBoolArg(\"-logthreadnames\", DEFAULT_LOGTHREADNAMES);\n \n     fLogIPs = gArgs.GetBoolArg(\"-logips\", DEFAULT_LOGIPS);\n "
      },
      {
        "sha": "75e600d268063ecf73f6e730cd265246e2eb7e5b",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 10,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/577ffd40a07b156c1917004a817f07472106066b/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/577ffd40a07b156c1917004a817f07472106066b/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=577ffd40a07b156c1917004a817f07472106066b",
        "patch": "@@ -5,6 +5,11 @@\n \n #include <logging.h>\n #include <utiltime.h>\n+#include <utilstrencodings.h>\n+#include <threadutil.h>\n+\n+#include <list>\n+#include <mutex>\n \n const char * const DEFAULT_DEBUGLOGFILE = \"debug.log\";\n \n@@ -168,7 +173,7 @@ std::vector<CLogCategoryActive> ListActiveLogCategories()\n     return ret;\n }\n \n-std::string BCLog::Logger::LogTimestampStr(const std::string &str)\n+std::string BCLog::Logger::LogTimestampStr(std::string str)\n {\n     std::string strStamped;\n \n@@ -178,6 +183,7 @@ std::string BCLog::Logger::LogTimestampStr(const std::string &str)\n     if (m_started_new_line) {\n         int64_t nTimeMicros = GetTimeMicros();\n         strStamped = FormatISO8601DateTime(nTimeMicros/1000000);\n+\n         if (m_log_time_micros) {\n             strStamped.pop_back();\n             strStamped += strprintf(\".%06dZ\", nTimeMicros%1000000);\n@@ -190,29 +196,35 @@ std::string BCLog::Logger::LogTimestampStr(const std::string &str)\n     } else\n         strStamped = str;\n \n-    if (!str.empty() && str[str.size()-1] == '\\n')\n-        m_started_new_line = true;\n-    else\n-        m_started_new_line = false;\n-\n     return strStamped;\n }\n \n+std::string BCLog::Logger::LogThreadnameStr(const std::string& str)\n+{\n+    if (!m_log_threadnames || !m_started_new_line) {\n+        return str;\n+    }\n+    std::string thread_name = thread_util::GetInternalName();\n+    return \"[\" + std::move(thread_name) + \"] \" + str;\n+}\n+\n void BCLog::Logger::LogPrintStr(const std::string &str)\n {\n-    std::string strTimestamped = LogTimestampStr(str);\n+    std::string strPrefixed = LogTimestampStr(LogThreadnameStr(str));\n+\n+    m_started_new_line = (!str.empty() && str[str.size()-1] == '\\n');\n \n     if (m_print_to_console) {\n         // print to console\n-        fwrite(strTimestamped.data(), 1, strTimestamped.size(), stdout);\n+        fwrite(strPrefixed.data(), 1, strPrefixed.size(), stdout);\n         fflush(stdout);\n     }\n     if (m_print_to_file) {\n         std::lock_guard<std::mutex> scoped_lock(m_file_mutex);\n \n         // buffer if we haven't opened the log yet\n         if (m_fileout == nullptr) {\n-            m_msgs_before_open.push_back(strTimestamped);\n+            m_msgs_before_open.push_back(strPrefixed);\n         }\n         else\n         {\n@@ -226,7 +238,7 @@ void BCLog::Logger::LogPrintStr(const std::string &str)\n                 setbuf(m_fileout, nullptr); // unbuffered\n             }\n \n-            FileWriteStr(strTimestamped, m_fileout);\n+            FileWriteStr(strPrefixed, m_fileout);\n         }\n     }\n }"
      },
      {
        "sha": "8794a531ccd4b8da9d4286e674362ca07ea3fe73",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/577ffd40a07b156c1917004a817f07472106066b/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/577ffd40a07b156c1917004a817f07472106066b/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=577ffd40a07b156c1917004a817f07472106066b",
        "patch": "@@ -19,6 +19,7 @@\n static const bool DEFAULT_LOGTIMEMICROS = false;\n static const bool DEFAULT_LOGIPS        = false;\n static const bool DEFAULT_LOGTIMESTAMPS = true;\n+static const bool DEFAULT_LOGTHREADNAMES = true;\n extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n@@ -73,14 +74,16 @@ namespace BCLog {\n         /** Log categories bitfield. */\n         std::atomic<uint32_t> m_categories{0};\n \n-        std::string LogTimestampStr(const std::string& str);\n+        std::string LogTimestampStr(std::string str);\n+        std::string LogThreadnameStr(const std::string& str);\n \n     public:\n         bool m_print_to_console = false;\n         bool m_print_to_file = false;\n \n         bool m_log_timestamps = DEFAULT_LOGTIMESTAMPS;\n         bool m_log_time_micros = DEFAULT_LOGTIMEMICROS;\n+        bool m_log_threadnames = DEFAULT_LOGTHREADNAMES;\n \n         fs::path m_file_path;\n         std::atomic<bool> m_reopen_file{false};"
      }
    ]
  },
  {
    "sha": "91aef702c90d53c8f8dd53dfacb5d5f3d0cb2b91",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MWFlZjcwMmM5MGQ1M2M4ZjhkZDUzZGZhY2I1ZDVmM2QwY2IyYjkx",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-05-05T18:15:30Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-07-12T14:18:01Z"
      },
      "message": "threads: add thread names to deadlock debugging message\n\nAlso refactor CLockLocation to use an initialization list.",
      "tree": {
        "sha": "d4f624387352865ddc654b28d14fbe0f6bcf599d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4f624387352865ddc654b28d14fbe0f6bcf599d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91aef702c90d53c8f8dd53dfacb5d5f3d0cb2b91",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91aef702c90d53c8f8dd53dfacb5d5f3d0cb2b91",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/91aef702c90d53c8f8dd53dfacb5d5f3d0cb2b91",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91aef702c90d53c8f8dd53dfacb5d5f3d0cb2b91/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "577ffd40a07b156c1917004a817f07472106066b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/577ffd40a07b156c1917004a817f07472106066b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/577ffd40a07b156c1917004a817f07472106066b"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 11,
      "deletions": 9
    },
    "files": [
      {
        "sha": "5491b28a4174f06fa7627d4a36a0784bcb201181",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91aef702c90d53c8f8dd53dfacb5d5f3d0cb2b91/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91aef702c90d53c8f8dd53dfacb5d5f3d0cb2b91/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=91aef702c90d53c8f8dd53dfacb5d5f3d0cb2b91",
        "patch": "@@ -3,8 +3,10 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <sync.h>\n+#include <tinyformat.h>\n \n #include <logging.h>\n+#include <threadutil.h>\n #include <utilstrencodings.h>\n \n #include <stdio.h>\n@@ -37,23 +39,23 @@ void PrintLockContention(const char* pszName, const char* pszFile, int nLine)\n //\n \n struct CLockLocation {\n-    CLockLocation(const char* pszName, const char* pszFile, int nLine, bool fTryIn)\n-    {\n-        mutexName = pszName;\n-        sourceFile = pszFile;\n-        sourceLine = nLine;\n-        fTry = fTryIn;\n-    }\n+    CLockLocation(\n+        const char* pszName, const char* pszFile, int nLine, bool fTryIn, std::string thread_name_) :\n+            mutexName(pszName), sourceFile(pszFile), sourceLine(nLine), fTry(fTryIn),\n+            thread_name(std::move(thread_name_)) { }\n \n     std::string ToString() const\n     {\n-        return mutexName + \"  \" + sourceFile + \":\" + itostr(sourceLine) + (fTry ? \" (TRY)\" : \"\");\n+        return tfm::format(\n+            \"%s %s:%s%s (in thread %s)\",\n+            mutexName, sourceFile, itostr(sourceLine), (fTry ? \" (TRY)\" : \"\"), thread_name);\n     }\n \n private:\n     bool fTry;\n     std::string mutexName;\n     std::string sourceFile;\n+    std::string thread_name;\n     int sourceLine;\n };\n \n@@ -132,7 +134,7 @@ static void pop_lock()\n \n void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry)\n {\n-    push_lock(cs, CLockLocation(pszName, pszFile, nLine, fTry));\n+    push_lock(cs, CLockLocation(pszName, pszFile, nLine, fTry, thread_util::GetInternalName()));\n }\n \n void LeaveCritical()"
      }
    ]
  }
]