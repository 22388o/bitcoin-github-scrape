[
  {
    "sha": "3eade5454ce252ab6b65f1a56e4823965a1d78da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZWFkZTU0NTRjZTI1MmFiNmI2NWYxYTU2ZTQ4MjM5NjVhMWQ3OGRh",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2016-07-13T10:20:16Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-05-18T20:36:19Z"
      },
      "message": "MOVEONLY: Header verification to consensus/header_verify.o",
      "tree": {
        "sha": "46de7d607b664fb2b28cd0ceabbf4fc677be6955",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46de7d607b664fb2b28cd0ceabbf4fc677be6955"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3eade5454ce252ab6b65f1a56e4823965a1d78da",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJZHgXHAAoJEIhmwY6hyUSig+cQAJcVkc2M6uDflSPGDLRb97Ri\nHsAvOR1Z/iDXwgUBMqemXt1uxxbILIDncDbG0/jAK4bUSlNcKkdyvTCunoyGpFIV\nQ6kHGcmC33ekbr7GH5DAEPk4CMQHepjyHsFOnaC8ByxgXYnzPQAMWBDjMKTiurhO\nCDtwNVoomkXpkt/tdrsUz7UhxvCTmPsB1Z6jcuU9FsIf0W1xAaKtSZ0hUUGgfeoC\nVX/CeNawCWrxbXlB83Y24u11LcarsEJfeButphcjD+LyVat6Xy4WlYwSBf+kIO7m\nxom2KnXDS4YlJ5CDWuRZ3JTXTR83XDhTz0WIkvudibQI3Tf/6KDp9quWnFnCSJdd\nKnlOk97BayRBazKRO0B2gdvpcxXKE3rTVRk9Ay5t3sRAbAffO9NjkZfFbjk9AwyR\ndGxIBcv2XHJsZL7YPQODdghlGjJvgcPDudr3Ob7pz7hUuqoT2jjDqg1+aaMeVXxj\nfybgCX3iNr5B+o1/jA2Ujqhx36MuraPLusA0QgbSfw5jfuo56JLdiano/cccXFyk\nx5CnKn1DYXki7HeLJUHbFkOxWSL7zwR6wbmZOeNo/vJFYSM/peIf+HrRmFPyGqID\nImilGAkP7ivWnoFT5Ba+6gAeH4j8Qhr74RFxo4m0WlK9R1Hb35u+jxT2BuPki8HZ\nLW2+OXYB+XLO21eXkAbN\n=MNxu\n-----END PGP SIGNATURE-----",
        "payload": "tree 46de7d607b664fb2b28cd0ceabbf4fc677be6955\nparent ea6fde3f1d2694176a657b69fb0eeb5426e6f309\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1468405216 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1495139779 +0200\n\nMOVEONLY: Header verification to consensus/header_verify.o\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3eade5454ce252ab6b65f1a56e4823965a1d78da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3eade5454ce252ab6b65f1a56e4823965a1d78da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3eade5454ce252ab6b65f1a56e4823965a1d78da/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea6fde3f1d2694176a657b69fb0eeb5426e6f309",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea6fde3f1d2694176a657b69fb0eeb5426e6f309",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea6fde3f1d2694176a657b69fb0eeb5426e6f309"
      }
    ],
    "stats": {
      "total": 113,
      "additions": 75,
      "deletions": 38
    },
    "files": [
      {
        "sha": "2bba46dcbe37907298ebe3fb4cf99b51dc95935c",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eade5454ce252ab6b65f1a56e4823965a1d78da/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eade5454ce252ab6b65f1a56e4823965a1d78da/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=3eade5454ce252ab6b65f1a56e4823965a1d78da",
        "patch": "@@ -95,6 +95,7 @@ BITCOIN_CORE_H = \\\n   compat/sanity.h \\\n   compressor.h \\\n   consensus/consensus.h \\\n+  consensus/header_verify.h \\\n   consensus/tx_verify.h \\\n   core_io.h \\\n   core_memusage.h \\\n@@ -186,6 +187,7 @@ libbitcoin_server_a_SOURCES = \\\n   blockencodings.cpp \\\n   chain.cpp \\\n   checkpoints.cpp \\\n+  consensus/header_verify.cpp \\\n   consensus/tx_verify.cpp \\\n   httprpc.cpp \\\n   httpserver.cpp \\"
      },
      {
        "sha": "fda16076887fc9cb343c924d28648a5720c64210",
        "filename": "src/consensus/header_verify.cpp",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eade5454ce252ab6b65f1a56e4823965a1d78da/src/consensus/header_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eade5454ce252ab6b65f1a56e4823965a1d78da/src/consensus/header_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/header_verify.cpp?ref=3eade5454ce252ab6b65f1a56e4823965a1d78da",
        "patch": "@@ -0,0 +1,49 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"consensus.h\"\n+\n+#include \"pow.h\"\n+#include \"primitives/block.h\"\n+#include \"tinyformat.h\"\n+#include \"validation.h\"\n+\n+// TODO remove the following dependencies\n+#include \"chain.h\"\n+\n+bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW)\n+{\n+    // Check proof of work matches claimed amount\n+    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n+        return state.DoS(50, false, REJECT_INVALID, \"high-hash\", false, \"proof of work failed\");\n+\n+    return true;\n+}\n+\n+bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime)\n+{\n+    assert(pindexPrev != NULL);\n+    const int nHeight = pindexPrev->nHeight + 1;\n+    // Check proof of work\n+    if (block.nBits != GetNextWorkRequired(pindexPrev, &block, consensusParams))\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-diffbits\", false, \"incorrect proof of work\");\n+\n+    // Check timestamp against prev\n+    if (block.GetBlockTime() <= pindexPrev->GetMedianTimePast())\n+        return state.Invalid(false, REJECT_INVALID, \"time-too-old\", \"block's timestamp is too early\");\n+\n+    // Check timestamp\n+    if (block.GetBlockTime() > nAdjustedTime + MAX_FUTURE_BLOCK_TIME)\n+        return state.Invalid(false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n+\n+    // Reject outdated version blocks when 95% (75% on testnet) of the network has upgraded:\n+    // check for version 2, 3 and 4 upgrades\n+    if((block.nVersion < 2 && nHeight >= consensusParams.BIP34Height) ||\n+       (block.nVersion < 3 && nHeight >= consensusParams.BIP66Height) ||\n+       (block.nVersion < 4 && nHeight >= consensusParams.BIP65Height))\n+            return state.Invalid(false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion),\n+                                 strprintf(\"rejected nVersion=0x%08x block\", block.nVersion));\n+\n+    return true;\n+}"
      },
      {
        "sha": "a3f949def65b47e56827270d783630cb38c366a8",
        "filename": "src/consensus/header_verify.h",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eade5454ce252ab6b65f1a56e4823965a1d78da/src/consensus/header_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eade5454ce252ab6b65f1a56e4823965a1d78da/src/consensus/header_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/header_verify.h?ref=3eade5454ce252ab6b65f1a56e4823965a1d78da",
        "patch": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2016-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_HEADER_VERIFY_H\n+#define BITCOIN_CONSENSUS_HEADER_VERIFY_H\n+\n+#include <stdint.h>\n+\n+class CBlockHeader;\n+class CBlockIndex;\n+class CValidationState;\n+namespace Consensus { struct Params; };\n+\n+/** Context-independent validity checks */\n+bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW = true);\n+\n+/** Context-dependent validity checks.\n+ *  By \"context\", we mean only the previous block headers, but not the UTXO\n+ *  set; UTXO-related validity checks are done in ConnectBlock(). */\n+bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime);\n+\n+#endif // BITCOIN_CONSENSUS_HEADER_VERIFY_H"
      },
      {
        "sha": "9d541927eac5e5e9e1e4174f1817e47a46235eac",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 36,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eade5454ce252ab6b65f1a56e4823965a1d78da/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eade5454ce252ab6b65f1a56e4823965a1d78da/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3eade5454ce252ab6b65f1a56e4823965a1d78da",
        "patch": "@@ -11,6 +11,7 @@\n #include \"checkpoints.h\"\n #include \"checkqueue.h\"\n #include \"consensus/consensus.h\"\n+#include \"consensus/header_verify.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/tx_verify.h\"\n #include \"consensus/validation.h\"\n@@ -2579,15 +2580,6 @@ bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigne\n     return true;\n }\n \n-bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW)\n-{\n-    // Check proof of work matches claimed amount\n-    if (fCheckPOW && !CheckProofOfWork(block.GetHash(), block.nBits, consensusParams))\n-        return state.DoS(50, false, REJECT_INVALID, \"high-hash\", false, \"proof of work failed\");\n-\n-    return true;\n-}\n-\n bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW, bool fCheckMerkleRoot)\n {\n     // These are checks that are independent of context.\n@@ -2729,33 +2721,6 @@ std::vector<unsigned char> GenerateCoinbaseCommitment(CBlock& block, const CBloc\n     return commitment;\n }\n \n-bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime)\n-{\n-    assert(pindexPrev != NULL);\n-    const int nHeight = pindexPrev->nHeight + 1;\n-    // Check proof of work\n-    if (block.nBits != GetNextWorkRequired(pindexPrev, &block, consensusParams))\n-        return state.DoS(100, false, REJECT_INVALID, \"bad-diffbits\", false, \"incorrect proof of work\");\n-\n-    // Check timestamp against prev\n-    if (block.GetBlockTime() <= pindexPrev->GetMedianTimePast())\n-        return state.Invalid(false, REJECT_INVALID, \"time-too-old\", \"block's timestamp is too early\");\n-\n-    // Check timestamp\n-    if (block.GetBlockTime() > nAdjustedTime + MAX_FUTURE_BLOCK_TIME)\n-        return state.Invalid(false, REJECT_INVALID, \"time-too-new\", \"block timestamp too far in the future\");\n-\n-    // Reject outdated version blocks when 95% (75% on testnet) of the network has upgraded:\n-    // check for version 2, 3 and 4 upgrades\n-    if((block.nVersion < 2 && nHeight >= consensusParams.BIP34Height) ||\n-       (block.nVersion < 3 && nHeight >= consensusParams.BIP66Height) ||\n-       (block.nVersion < 4 && nHeight >= consensusParams.BIP65Height))\n-            return state.Invalid(false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion),\n-                                 strprintf(\"rejected nVersion=0x%08x block\", block.nVersion));\n-\n-    return true;\n-}\n-\n bool ContextualCheckBlock(const CBlock& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev)\n {\n     const int nHeight = pindexPrev == NULL ? 0 : pindexPrev->nHeight + 1;"
      },
      {
        "sha": "e4194da46bf2f42749725c02ceeb78cc039fe680",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3eade5454ce252ab6b65f1a56e4823965a1d78da/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3eade5454ce252ab6b65f1a56e4823965a1d78da/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=3eade5454ce252ab6b65f1a56e4823965a1d78da",
        "patch": "@@ -430,13 +430,11 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n /** Functions for validating blocks and updating the block tree */\n \n /** Context-independent validity checks */\n-bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW = true);\n bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::Params& consensusParams, bool fCheckPOW = true, bool fCheckMerkleRoot = true);\n \n /** Context-dependent validity checks.\n  *  By \"context\", we mean only the previous block headers, but not the UTXO\n  *  set; UTXO-related validity checks are done in ConnectBlock(). */\n-bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev, int64_t nAdjustedTime);\n bool ContextualCheckBlock(const CBlock& block, CValidationState& state, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev);\n \n /** Check a block is completely valid from start to finish (only works on top of our current best block, with cs_main held) */"
      }
    ]
  },
  {
    "sha": "dd7836a15664b93ca523e6a60fcbaec4a268e187",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZDc4MzZhMTU2NjRiOTNjYTUyM2U2YTYwZmNiYWVjNGEyNjhlMTg3",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-03-23T19:02:56Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-05-18T20:37:58Z"
      },
      "message": "MOVEONLY: MAX_FUTURE_BLOCK_TIME to consensus/consensus.h",
      "tree": {
        "sha": "d2fa37e90ed318afa75b7b465c6c23ca7d7b4807",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2fa37e90ed318afa75b7b465c6c23ca7d7b4807"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd7836a15664b93ca523e6a60fcbaec4a268e187",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJZHgYsAAoJEIhmwY6hyUSifU0QAKwMopuBrIFc4uUJqoVwJEqD\nuXRjDZxJ7THTRuKxXDb4br5LbRNu+sD0EeQg/Qoda+JMv8URpNcixueICVdo1gIl\nOBQnc2DKLdFhWdCwP7HLFA1THtshR6k350G3NivThWGiOVsHIs/qbopqMD/a4RZm\nZ2PZeVTlQGiCBNyhnOv8/Ef/Hy2LQxESdLOS6pO6vm7KxBTkZoVI8RHRRL2uiSs5\nr+fEYMazon0OU8gmOzoLeo8EsG3sUVj1pb1DDkSnU65IFC1s4LbtxIqetDPI0riF\nJG0eKA2hakuMk9LF1PudA/aOhag9r6MrLMUP6mdydNbfO/5AWQAteJd6RHAQRxmq\n+YFfPWkxFHcPM3T9RReac3h92owZoVi4hMzi8i+GQo9TGvDTmi73hNk0wTUqYTYP\n1B5mJY1DdKj0M4iRa6i5xgMsJKB8xifKArPrU2ECdV/WyVbP9lUSmpomjm1zaJ8v\nLt4DmuKSOOo89vwBX5E5DHWN2a2jUVjkWNYuYG9jJ+h/VsRk5pQaHlvrDgSc9U3n\nVAbemzDYO8ghIHcYL+2qPM4Cop7onyAkxq7SywKIbaAMJIQCx2xOedbNg5W4zLc4\nC8IEJbFDIPmV2TN7NXTuN47/FJ1+/wYN7T2JXYf+tShTCq7gR/D+wWcX/WbxNtU9\nUOGzbcCEDgGScHYtOHCq\n=YZfu\n-----END PGP SIGNATURE-----",
        "payload": "tree d2fa37e90ed318afa75b7b465c6c23ca7d7b4807\nparent 3eade5454ce252ab6b65f1a56e4823965a1d78da\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1490295776 +0100\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1495139878 +0200\n\nMOVEONLY: MAX_FUTURE_BLOCK_TIME to consensus/consensus.h\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd7836a15664b93ca523e6a60fcbaec4a268e187",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dd7836a15664b93ca523e6a60fcbaec4a268e187",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dd7836a15664b93ca523e6a60fcbaec4a268e187/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3eade5454ce252ab6b65f1a56e4823965a1d78da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3eade5454ce252ab6b65f1a56e4823965a1d78da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3eade5454ce252ab6b65f1a56e4823965a1d78da"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "6907d0d22e245eea61ebbd5cec0322afedb9eaa1",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd7836a15664b93ca523e6a60fcbaec4a268e187/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd7836a15664b93ca523e6a60fcbaec4a268e187/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=dd7836a15664b93ca523e6a60fcbaec4a268e187",
        "patch": "@@ -8,18 +8,13 @@\n \n #include \"arith_uint256.h\"\n #include \"primitives/block.h\"\n+#include \"consensus/consensus.h\"\n #include \"pow.h\"\n #include \"tinyformat.h\"\n #include \"uint256.h\"\n \n #include <vector>\n \n-/**\n- * Maximum amount of time that a block timestamp is allowed to exceed the\n- * current network-adjusted time before the block will be accepted.\n- */\n-static const int64_t MAX_FUTURE_BLOCK_TIME = 2 * 60 * 60;\n-\n /**\n  * Timestamp window used as a grace period by code that compares external\n  * timestamps (such as timestamps passed to RPCs, or wallet key creation times)"
      },
      {
        "sha": "562d1efb4706784a17619a0aa0ab8fd14ee70963",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dd7836a15664b93ca523e6a60fcbaec4a268e187/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dd7836a15664b93ca523e6a60fcbaec4a268e187/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=dd7836a15664b93ca523e6a60fcbaec4a268e187",
        "patch": "@@ -8,6 +8,12 @@\n \n #include <stdint.h>\n \n+/**\n+ * Maximum amount of time that a block timestamp is allowed to exceed the\n+ * current network-adjusted time before the block will be accepted.\n+ */\n+static const int64_t MAX_FUTURE_BLOCK_TIME = 2 * 60 * 60;\n+\n /** The maximum allowed size for a serialized block, in bytes (only for buffer size limits) */\n static const unsigned int MAX_BLOCK_SERIALIZED_SIZE = 4000000;\n /** The maximum allowed weight for a block, see BIP 141 (network rule) */"
      }
    ]
  }
]