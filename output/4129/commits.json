[
  {
    "sha": "4b61a6a47895309ffb059f986a31c4931b8fe0b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YjYxYTZhNDc4OTUzMDlmZmIwNTlmOTg2YTMxYzQ5MzFiOGZlMGI0",
    "commit": {
      "author": {
        "name": "Kamil Domanski",
        "email": "kdomanski@kdemail.net",
        "date": "2014-05-05T18:08:13Z"
      },
      "committer": {
        "name": "Kamil Domanski",
        "email": "kdomanski@kdemail.net",
        "date": "2014-05-13T09:41:59Z"
      },
      "message": "switch from boost int types to <stdint.h>",
      "tree": {
        "sha": "5b5a011597d5268d828c966287fafeb10e491bcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b5a011597d5268d828c966287fafeb10e491bcc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4b61a6a47895309ffb059f986a31c4931b8fe0b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b61a6a47895309ffb059f986a31c4931b8fe0b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4b61a6a47895309ffb059f986a31c4931b8fe0b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b61a6a47895309ffb059f986a31c4931b8fe0b4/comments",
    "author": {
      "login": "kdomanski",
      "id": 993296,
      "node_id": "MDQ6VXNlcjk5MzI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/993296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kdomanski",
      "html_url": "https://github.com/kdomanski",
      "followers_url": "https://api.github.com/users/kdomanski/followers",
      "following_url": "https://api.github.com/users/kdomanski/following{/other_user}",
      "gists_url": "https://api.github.com/users/kdomanski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kdomanski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kdomanski/subscriptions",
      "organizations_url": "https://api.github.com/users/kdomanski/orgs",
      "repos_url": "https://api.github.com/users/kdomanski/repos",
      "events_url": "https://api.github.com/users/kdomanski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kdomanski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kdomanski",
      "id": 993296,
      "node_id": "MDQ6VXNlcjk5MzI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/993296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kdomanski",
      "html_url": "https://github.com/kdomanski",
      "followers_url": "https://api.github.com/users/kdomanski/followers",
      "following_url": "https://api.github.com/users/kdomanski/following{/other_user}",
      "gists_url": "https://api.github.com/users/kdomanski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kdomanski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kdomanski/subscriptions",
      "organizations_url": "https://api.github.com/users/kdomanski/orgs",
      "repos_url": "https://api.github.com/users/kdomanski/repos",
      "events_url": "https://api.github.com/users/kdomanski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kdomanski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29c1fbbb97710a9c31ae594870fc41539425889c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29c1fbbb97710a9c31ae594870fc41539425889c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29c1fbbb97710a9c31ae594870fc41539425889c"
      }
    ],
    "stats": {
      "total": 161,
      "additions": 80,
      "deletions": 81
    },
    "files": [
      {
        "sha": "46f5892f62dd122843698de8b3ab1ac11ff523ba",
        "filename": "src/json/json_spirit_reader_template.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/json/json_spirit_reader_template.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/json/json_spirit_reader_template.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/json/json_spirit_reader_template.h?ref=4b61a6a47895309ffb059f986a31c4931b8fe0b4",
        "patch": "@@ -33,8 +33,8 @@\n \n namespace json_spirit\n {\n-    const spirit_namespace::int_parser < boost::int64_t >  int64_p  = spirit_namespace::int_parser < boost::int64_t  >();\n-    const spirit_namespace::uint_parser< boost::uint64_t > uint64_p = spirit_namespace::uint_parser< boost::uint64_t >();\n+    const spirit_namespace::int_parser < int64_t >  int64_p  = spirit_namespace::int_parser < int64_t  >();\n+    const spirit_namespace::uint_parser< uint64_t > uint64_p = spirit_namespace::uint_parser< uint64_t >();\n \n     template< class Iter_type >\n     bool is_eq( Iter_type first, Iter_type last, const char* c_str )\n@@ -270,12 +270,12 @@ namespace json_spirit\n             add_to_current( Value_type() );\n         }\n \n-        void new_int( boost::int64_t i )\n+        void new_int( int64_t i )\n         {\n             add_to_current( i );\n         }\n \n-        void new_uint64( boost::uint64_t ui )\n+        void new_uint64( uint64_t ui )\n         {\n             add_to_current( ui );\n         }\n@@ -425,8 +425,8 @@ namespace json_spirit\n                 typedef boost::function< void( Char_type )            > Char_action;\n                 typedef boost::function< void( Iter_type, Iter_type ) > Str_action;\n                 typedef boost::function< void( double )               > Real_action;\n-                typedef boost::function< void( boost::int64_t )       > Int_action;\n-                typedef boost::function< void( boost::uint64_t )      > Uint64_action;\n+                typedef boost::function< void( int64_t )       > Int_action;\n+                typedef boost::function< void( uint64_t )      > Uint64_action;\n \n                 Char_action   begin_obj  ( boost::bind( &Semantic_actions_t::begin_obj,   &self.actions_, _1 ) );\n                 Char_action   end_obj    ( boost::bind( &Semantic_actions_t::end_obj,     &self.actions_, _1 ) );"
      },
      {
        "sha": "88c0e1f7364d1f2bad3ec0f7fa6579b11d28a8ed",
        "filename": "src/json/json_spirit_value.h",
        "status": "modified",
        "additions": 15,
        "deletions": 16,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/json/json_spirit_value.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/json/json_spirit_value.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/json/json_spirit_value.h?ref=4b61a6a47895309ffb059f986a31c4931b8fe0b4",
        "patch": "@@ -17,7 +17,6 @@\n #include <sstream>\n #include <stdexcept>\n #include <boost/config.hpp> \n-#include <boost/cstdint.hpp> \n #include <boost/shared_ptr.hpp> \n #include <boost/variant.hpp> \n \n@@ -45,8 +44,8 @@ namespace json_spirit\n         Value_impl( const Array&       value );\n         Value_impl( bool               value );\n         Value_impl( int                value );\n-        Value_impl( boost::int64_t     value );\n-        Value_impl( boost::uint64_t    value );\n+        Value_impl( int64_t     value );\n+        Value_impl( uint64_t    value );\n         Value_impl( double             value );\n \n         Value_impl( const Value_impl& other );\n@@ -65,8 +64,8 @@ namespace json_spirit\n         const Array&       get_array()  const;\n         bool               get_bool()   const;\n         int                get_int()    const;\n-        boost::int64_t     get_int64()  const;\n-        boost::uint64_t    get_uint64() const;\n+        int64_t     get_int64()  const;\n+        uint64_t    get_uint64() const;\n         double             get_real()   const;\n \n         Object& get_obj();\n@@ -83,7 +82,7 @@ namespace json_spirit\n \n         typedef boost::variant< String_type, \n                                 boost::recursive_wrapper< Object >, boost::recursive_wrapper< Array >, \n-                                bool, boost::int64_t, double > Variant;\n+                                bool, int64_t, double > Variant;\n \n         Value_type type_;\n         Variant v_;\n@@ -258,23 +257,23 @@ namespace json_spirit\n     template< class Config >\n     Value_impl< Config >::Value_impl( int value )\n     :   type_( int_type )\n-    ,   v_( static_cast< boost::int64_t >( value ) )\n+    ,   v_( static_cast< int64_t >( value ) )\n     ,   is_uint64_( false )\n     {\n     }\n \n     template< class Config >\n-    Value_impl< Config >::Value_impl( boost::int64_t value )\n+    Value_impl< Config >::Value_impl( int64_t value )\n     :   type_( int_type )\n     ,   v_( value )\n     ,   is_uint64_( false )\n     {\n     }\n \n     template< class Config >\n-    Value_impl< Config >::Value_impl( boost::uint64_t value )\n+    Value_impl< Config >::Value_impl( uint64_t value )\n     :   type_( int_type )\n-    ,   v_( static_cast< boost::int64_t >( value ) )\n+    ,   v_( static_cast< int64_t >( value ) )\n     ,   is_uint64_( true )\n     {\n     }\n@@ -390,19 +389,19 @@ namespace json_spirit\n     }\n     \n     template< class Config >\n-    boost::int64_t Value_impl< Config >::get_int64() const\n+    int64_t Value_impl< Config >::get_int64() const\n     {\n         check_type(  int_type );\n \n-        return boost::get< boost::int64_t >( v_ );\n+        return boost::get< int64_t >( v_ );\n     }\n     \n     template< class Config >\n-    boost::uint64_t Value_impl< Config >::get_uint64() const\n+    uint64_t Value_impl< Config >::get_uint64() const\n     {\n         check_type(  int_type );\n \n-        return static_cast< boost::uint64_t >( get_int64() );\n+        return static_cast< uint64_t >( get_int64() );\n     }\n \n     template< class Config >\n@@ -481,13 +480,13 @@ namespace json_spirit\n         }\n        \n         template< class Value > \n-        boost::int64_t get_value( const Value& value, Type_to_type< boost::int64_t > )\n+        int64_t get_value( const Value& value, Type_to_type< int64_t > )\n         {\n             return value.get_int64();\n         }\n        \n         template< class Value > \n-        boost::uint64_t get_value( const Value& value, Type_to_type< boost::uint64_t > )\n+        uint64_t get_value( const Value& value, Type_to_type< uint64_t > )\n         {\n             return value.get_uint64();\n         }"
      },
      {
        "sha": "0a0fff41d71da306128f0ef77a40eb0765c35126",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=4b61a6a47895309ffb059f986a31c4931b8fe0b4",
        "patch": "@@ -64,8 +64,8 @@ Object blockToJSON(const CBlock& block, const CBlockIndex* blockindex)\n     BOOST_FOREACH(const CTransaction&tx, block.vtx)\n         txs.push_back(tx.GetHash().GetHex());\n     result.push_back(Pair(\"tx\", txs));\n-    result.push_back(Pair(\"time\", (boost::int64_t)block.GetBlockTime()));\n-    result.push_back(Pair(\"nonce\", (boost::uint64_t)block.nNonce));\n+    result.push_back(Pair(\"time\", (int64_t)block.GetBlockTime()));\n+    result.push_back(Pair(\"nonce\", (uint64_t)block.nNonce));\n     result.push_back(Pair(\"bits\", HexBits(block.nBits)));\n     result.push_back(Pair(\"difficulty\", GetDifficulty(blockindex)));\n     result.push_back(Pair(\"chainwork\", blockindex->nChainWork.GetHex()));\n@@ -175,7 +175,7 @@ Value getrawmempool(const Array& params, bool fHelp)\n             Object info;\n             info.push_back(Pair(\"size\", (int)e.GetTxSize()));\n             info.push_back(Pair(\"fee\", ValueFromAmount(e.GetFee())));\n-            info.push_back(Pair(\"time\", (boost::int64_t)e.GetTime()));\n+            info.push_back(Pair(\"time\", (int64_t)e.GetTime()));\n             info.push_back(Pair(\"height\", (int)e.GetHeight()));\n             info.push_back(Pair(\"startingpriority\", e.GetPriority(e.GetHeight())));\n             info.push_back(Pair(\"currentpriority\", e.GetPriority(chainActive.Height())));\n@@ -315,11 +315,11 @@ Value gettxoutsetinfo(const Array& params, bool fHelp)\n \n     CCoinsStats stats;\n     if (pcoinsTip->GetStats(stats)) {\n-        ret.push_back(Pair(\"height\", (boost::int64_t)stats.nHeight));\n+        ret.push_back(Pair(\"height\", (int64_t)stats.nHeight));\n         ret.push_back(Pair(\"bestblock\", stats.hashBlock.GetHex()));\n-        ret.push_back(Pair(\"transactions\", (boost::int64_t)stats.nTransactions));\n-        ret.push_back(Pair(\"txouts\", (boost::int64_t)stats.nTransactionOutputs));\n-        ret.push_back(Pair(\"bytes_serialized\", (boost::int64_t)stats.nSerializedSize));\n+        ret.push_back(Pair(\"transactions\", (int64_t)stats.nTransactions));\n+        ret.push_back(Pair(\"txouts\", (int64_t)stats.nTransactionOutputs));\n+        ret.push_back(Pair(\"bytes_serialized\", (int64_t)stats.nSerializedSize));\n         ret.push_back(Pair(\"hash_serialized\", stats.hashSerialized.GetHex()));\n         ret.push_back(Pair(\"total_amount\", ValueFromAmount(stats.nTotalAmount)));\n     }"
      },
      {
        "sha": "4f3c39ce9bd481365ef74419196699d5f1fb2731",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 26,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=4b61a6a47895309ffb059f986a31c4931b8fe0b4",
        "patch": "@@ -128,53 +128,53 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"stop\"                   && n > 0) ConvertTo<bool>(params[0]);\n     if (strMethod == \"getaddednodeinfo\"       && n > 0) ConvertTo<bool>(params[0]);\n     if (strMethod == \"setgenerate\"            && n > 0) ConvertTo<bool>(params[0]);\n-    if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"getnetworkhashps\"       && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"getnetworkhashps\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"setgenerate\"            && n > 1) ConvertTo<int64_t>(params[1]);\n+    if (strMethod == \"getnetworkhashps\"       && n > 0) ConvertTo<int64_t>(params[0]);\n+    if (strMethod == \"getnetworkhashps\"       && n > 1) ConvertTo<int64_t>(params[1]);\n     if (strMethod == \"sendtoaddress\"          && n > 1) ConvertTo<double>(params[1]);\n     if (strMethod == \"settxfee\"               && n > 0) ConvertTo<double>(params[0]);\n-    if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"getreceivedbyaccount\"   && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"listreceivedbyaddress\"  && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"getreceivedbyaddress\"   && n > 1) ConvertTo<int64_t>(params[1]);\n+    if (strMethod == \"getreceivedbyaccount\"   && n > 1) ConvertTo<int64_t>(params[1]);\n+    if (strMethod == \"listreceivedbyaddress\"  && n > 0) ConvertTo<int64_t>(params[0]);\n     if (strMethod == \"listreceivedbyaddress\"  && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"listreceivedbyaccount\"  && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"listreceivedbyaccount\"  && n > 0) ConvertTo<int64_t>(params[0]);\n     if (strMethod == \"listreceivedbyaccount\"  && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"getbalance\"             && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"getblockhash\"           && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"getbalance\"             && n > 1) ConvertTo<int64_t>(params[1]);\n+    if (strMethod == \"getblockhash\"           && n > 0) ConvertTo<int64_t>(params[0]);\n     if (strMethod == \"move\"                   && n > 2) ConvertTo<double>(params[2]);\n-    if (strMethod == \"move\"                   && n > 3) ConvertTo<boost::int64_t>(params[3]);\n+    if (strMethod == \"move\"                   && n > 3) ConvertTo<int64_t>(params[3]);\n     if (strMethod == \"sendfrom\"               && n > 2) ConvertTo<double>(params[2]);\n-    if (strMethod == \"sendfrom\"               && n > 3) ConvertTo<boost::int64_t>(params[3]);\n-    if (strMethod == \"listtransactions\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"listtransactions\"       && n > 2) ConvertTo<boost::int64_t>(params[2]);\n-    if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"walletpassphrase\"       && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"sendfrom\"               && n > 3) ConvertTo<int64_t>(params[3]);\n+    if (strMethod == \"listtransactions\"       && n > 1) ConvertTo<int64_t>(params[1]);\n+    if (strMethod == \"listtransactions\"       && n > 2) ConvertTo<int64_t>(params[2]);\n+    if (strMethod == \"listaccounts\"           && n > 0) ConvertTo<int64_t>(params[0]);\n+    if (strMethod == \"walletpassphrase\"       && n > 1) ConvertTo<int64_t>(params[1]);\n     if (strMethod == \"getblocktemplate\"       && n > 0) ConvertTo<Object>(params[0]);\n-    if (strMethod == \"listsinceblock\"         && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"listsinceblock\"         && n > 1) ConvertTo<int64_t>(params[1]);\n     if (strMethod == \"sendmany\"               && n > 1) ConvertTo<Object>(params[1]);\n-    if (strMethod == \"sendmany\"               && n > 2) ConvertTo<boost::int64_t>(params[2]);\n-    if (strMethod == \"addmultisigaddress\"     && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"sendmany\"               && n > 2) ConvertTo<int64_t>(params[2]);\n+    if (strMethod == \"addmultisigaddress\"     && n > 0) ConvertTo<int64_t>(params[0]);\n     if (strMethod == \"addmultisigaddress\"     && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"createmultisig\"         && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"createmultisig\"         && n > 0) ConvertTo<int64_t>(params[0]);\n     if (strMethod == \"createmultisig\"         && n > 1) ConvertTo<Array>(params[1]);\n-    if (strMethod == \"listunspent\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"listunspent\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"listunspent\"            && n > 0) ConvertTo<int64_t>(params[0]);\n+    if (strMethod == \"listunspent\"            && n > 1) ConvertTo<int64_t>(params[1]);\n     if (strMethod == \"listunspent\"            && n > 2) ConvertTo<Array>(params[2]);\n     if (strMethod == \"getblock\"               && n > 1) ConvertTo<bool>(params[1]);\n-    if (strMethod == \"getrawtransaction\"      && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"getrawtransaction\"      && n > 1) ConvertTo<int64_t>(params[1]);\n     if (strMethod == \"createrawtransaction\"   && n > 0) ConvertTo<Array>(params[0]);\n     if (strMethod == \"createrawtransaction\"   && n > 1) ConvertTo<Object>(params[1]);\n     if (strMethod == \"signrawtransaction\"     && n > 1) ConvertTo<Array>(params[1], true);\n     if (strMethod == \"signrawtransaction\"     && n > 2) ConvertTo<Array>(params[2], true);\n     if (strMethod == \"sendrawtransaction\"     && n > 1) ConvertTo<bool>(params[1], true);\n-    if (strMethod == \"gettxout\"               && n > 1) ConvertTo<boost::int64_t>(params[1]);\n+    if (strMethod == \"gettxout\"               && n > 1) ConvertTo<int64_t>(params[1]);\n     if (strMethod == \"gettxout\"               && n > 2) ConvertTo<bool>(params[2]);\n     if (strMethod == \"lockunspent\"            && n > 0) ConvertTo<bool>(params[0]);\n     if (strMethod == \"lockunspent\"            && n > 1) ConvertTo<Array>(params[1]);\n     if (strMethod == \"importprivkey\"          && n > 2) ConvertTo<bool>(params[2]);\n-    if (strMethod == \"verifychain\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n-    if (strMethod == \"verifychain\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n-    if (strMethod == \"keypoolrefill\"          && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"verifychain\"            && n > 0) ConvertTo<int64_t>(params[0]);\n+    if (strMethod == \"verifychain\"            && n > 1) ConvertTo<int64_t>(params[1]);\n+    if (strMethod == \"keypoolrefill\"          && n > 0) ConvertTo<int64_t>(params[0]);\n     if (strMethod == \"getrawmempool\"          && n > 0) ConvertTo<bool>(params[0]);\n \n     return params;"
      },
      {
        "sha": "23876c603decb5c80971171690fdc0a34b7a7e1d",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=4b61a6a47895309ffb059f986a31c4931b8fe0b4",
        "patch": "@@ -88,7 +88,7 @@ Value GetNetworkHashPS(int lookup, int height) {\n     uint256 workDiff = pb->nChainWork - pb0->nChainWork;\n     int64_t timeDiff = maxTime - minTime;\n \n-    return (boost::int64_t)(workDiff.getdouble() / timeDiff);\n+    return (int64_t)(workDiff.getdouble() / timeDiff);\n }\n \n Value getnetworkhashps(const Array& params, bool fHelp)\n@@ -226,8 +226,8 @@ Value gethashespersec(const Array& params, bool fHelp)\n         );\n \n     if (GetTimeMillis() - nHPSTimerStart > 8000)\n-        return (boost::int64_t)0;\n-    return (boost::int64_t)dHashesPerSec;\n+        return (int64_t)0;\n+    return (int64_t)dHashesPerSec;\n }\n #endif\n "
      },
      {
        "sha": "0dd98fd76511155def48936d551f811e6ebcb7c3",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=4b61a6a47895309ffb059f986a31c4931b8fe0b4",
        "patch": "@@ -69,18 +69,18 @@ Value getinfo(const Array& params, bool fHelp)\n     }\n #endif\n     obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n-    obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n+    obj.push_back(Pair(\"timeoffset\",    (int64_t)GetTimeOffset()));\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n     obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n     obj.push_back(Pair(\"testnet\",       TestNet()));\n #ifdef ENABLE_WALLET\n     if (pwalletMain) {\n-        obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n+        obj.push_back(Pair(\"keypoololdest\", (int64_t)pwalletMain->GetOldestKeyPoolTime()));\n         obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n     }\n     if (pwalletMain && pwalletMain->IsCrypted())\n-        obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n+        obj.push_back(Pair(\"unlocked_until\", (int64_t)nWalletUnlockTime));\n     obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n #endif\n     obj.push_back(Pair(\"relayfee\",      ValueFromAmount(CTransaction::nMinRelayTxFee)));"
      },
      {
        "sha": "1dc70840ca212fa500a0278a4bd66bbd43cd6bce",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=4b61a6a47895309ffb059f986a31c4931b8fe0b4",
        "patch": "@@ -116,11 +116,11 @@ Value getpeerinfo(const Array& params, bool fHelp)\n         if (!(stats.addrLocal.empty()))\n             obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n         obj.push_back(Pair(\"services\", strprintf(\"%08x\", stats.nServices)));\n-        obj.push_back(Pair(\"lastsend\", (boost::int64_t)stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", (boost::int64_t)stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", (boost::int64_t)stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", (boost::int64_t)stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", (boost::int64_t)stats.nTimeConnected));\n+        obj.push_back(Pair(\"lastsend\", (int64_t)stats.nLastSend));\n+        obj.push_back(Pair(\"lastrecv\", (int64_t)stats.nLastRecv));\n+        obj.push_back(Pair(\"bytessent\", (int64_t)stats.nSendBytes));\n+        obj.push_back(Pair(\"bytesrecv\", (int64_t)stats.nRecvBytes));\n+        obj.push_back(Pair(\"conntime\", (int64_t)stats.nTimeConnected));\n         obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n         if (stats.dPingWait > 0.0)\n             obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n@@ -328,9 +328,9 @@ Value getnettotals(const Array& params, bool fHelp)\n        );\n \n     Object obj;\n-    obj.push_back(Pair(\"totalbytesrecv\", static_cast< boost::uint64_t>(CNode::GetTotalBytesRecv())));\n-    obj.push_back(Pair(\"totalbytessent\", static_cast<boost::uint64_t>(CNode::GetTotalBytesSent())));\n-    obj.push_back(Pair(\"timemillis\", static_cast<boost::int64_t>(GetTimeMillis())));\n+    obj.push_back(Pair(\"totalbytesrecv\", static_cast< uint64_t>(CNode::GetTotalBytesRecv())));\n+    obj.push_back(Pair(\"totalbytessent\", static_cast<uint64_t>(CNode::GetTotalBytesSent())));\n+    obj.push_back(Pair(\"timemillis\", static_cast<int64_t>(GetTimeMillis())));\n     return obj;\n }\n "
      },
      {
        "sha": "dee7daeb2a98c56ebd9ca9a3fed91dec85ece0af",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=4b61a6a47895309ffb059f986a31c4931b8fe0b4",
        "patch": "@@ -55,7 +55,7 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, Object& entry)\n {\n     entry.push_back(Pair(\"txid\", tx.GetHash().GetHex()));\n     entry.push_back(Pair(\"version\", tx.nVersion));\n-    entry.push_back(Pair(\"locktime\", (boost::int64_t)tx.nLockTime));\n+    entry.push_back(Pair(\"locktime\", (int64_t)tx.nLockTime));\n     Array vin;\n     BOOST_FOREACH(const CTxIn& txin, tx.vin)\n     {\n@@ -65,13 +65,13 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, Object& entry)\n         else\n         {\n             in.push_back(Pair(\"txid\", txin.prevout.hash.GetHex()));\n-            in.push_back(Pair(\"vout\", (boost::int64_t)txin.prevout.n));\n+            in.push_back(Pair(\"vout\", (int64_t)txin.prevout.n));\n             Object o;\n             o.push_back(Pair(\"asm\", txin.scriptSig.ToString()));\n             o.push_back(Pair(\"hex\", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));\n             in.push_back(Pair(\"scriptSig\", o));\n         }\n-        in.push_back(Pair(\"sequence\", (boost::int64_t)txin.nSequence));\n+        in.push_back(Pair(\"sequence\", (int64_t)txin.nSequence));\n         vin.push_back(in);\n     }\n     entry.push_back(Pair(\"vin\", vin));\n@@ -81,7 +81,7 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, Object& entry)\n         const CTxOut& txout = tx.vout[i];\n         Object out;\n         out.push_back(Pair(\"value\", ValueFromAmount(txout.nValue)));\n-        out.push_back(Pair(\"n\", (boost::int64_t)i));\n+        out.push_back(Pair(\"n\", (int64_t)i));\n         Object o;\n         ScriptPubKeyToJSON(txout.scriptPubKey, o, true);\n         out.push_back(Pair(\"scriptPubKey\", o));\n@@ -99,8 +99,8 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, Object& entry)\n             if (chainActive.Contains(pindex))\n             {\n                 entry.push_back(Pair(\"confirmations\", 1 + chainActive.Height() - pindex->nHeight));\n-                entry.push_back(Pair(\"time\", (boost::int64_t)pindex->nTime));\n-                entry.push_back(Pair(\"blocktime\", (boost::int64_t)pindex->nTime));\n+                entry.push_back(Pair(\"time\", (int64_t)pindex->nTime));\n+                entry.push_back(Pair(\"blocktime\", (int64_t)pindex->nTime));\n             }\n             else\n                 entry.push_back(Pair(\"confirmations\", 0));"
      },
      {
        "sha": "c61035ab35570aaa92dfa69105dd9a538b01c379",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b61a6a47895309ffb059f986a31c4931b8fe0b4/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=4b61a6a47895309ffb059f986a31c4931b8fe0b4",
        "patch": "@@ -49,16 +49,16 @@ void WalletTxToJSON(const CWalletTx& wtx, Object& entry)\n     {\n         entry.push_back(Pair(\"blockhash\", wtx.hashBlock.GetHex()));\n         entry.push_back(Pair(\"blockindex\", wtx.nIndex));\n-        entry.push_back(Pair(\"blocktime\", (boost::int64_t)(mapBlockIndex[wtx.hashBlock]->nTime)));\n+        entry.push_back(Pair(\"blocktime\", (int64_t)(mapBlockIndex[wtx.hashBlock]->nTime)));\n     }\n     uint256 hash = wtx.GetHash();\n     entry.push_back(Pair(\"txid\", hash.GetHex()));\n     Array conflicts;\n     BOOST_FOREACH(const uint256& conflict, wtx.GetConflicts())\n         conflicts.push_back(conflict.GetHex());\n     entry.push_back(Pair(\"walletconflicts\", conflicts));\n-    entry.push_back(Pair(\"time\", (boost::int64_t)wtx.GetTxTime()));\n-    entry.push_back(Pair(\"timereceived\", (boost::int64_t)wtx.nTimeReceived));\n+    entry.push_back(Pair(\"time\", (int64_t)wtx.GetTxTime()));\n+    entry.push_back(Pair(\"timereceived\", (int64_t)wtx.nTimeReceived));\n     BOOST_FOREACH(const PAIRTYPE(string,string)& item, wtx.mapValue)\n         entry.push_back(Pair(item.first, item.second));\n }\n@@ -1167,7 +1167,7 @@ void AcentryToJSON(const CAccountingEntry& acentry, const string& strAccount, Ar\n         Object entry;\n         entry.push_back(Pair(\"account\", acentry.strAccount));\n         entry.push_back(Pair(\"category\", \"move\"));\n-        entry.push_back(Pair(\"time\", (boost::int64_t)acentry.nTime));\n+        entry.push_back(Pair(\"time\", (int64_t)acentry.nTime));\n         entry.push_back(Pair(\"amount\", ValueFromAmount(acentry.nCreditDebit)));\n         entry.push_back(Pair(\"otheraccount\", acentry.strOtherAccount));\n         entry.push_back(Pair(\"comment\", acentry.strComment));\n@@ -1912,9 +1912,9 @@ Value getwalletinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n     obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n     obj.push_back(Pair(\"txcount\",       (int)pwalletMain->mapWallet.size()));\n-    obj.push_back(Pair(\"keypoololdest\", (boost::int64_t)pwalletMain->GetOldestKeyPoolTime()));\n+    obj.push_back(Pair(\"keypoololdest\", (int64_t)pwalletMain->GetOldestKeyPoolTime()));\n     obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n     if (pwalletMain->IsCrypted())\n-        obj.push_back(Pair(\"unlocked_until\", (boost::int64_t)nWalletUnlockTime));\n+        obj.push_back(Pair(\"unlocked_until\", (int64_t)nWalletUnlockTime));\n     return obj;\n }"
      }
    ]
  },
  {
    "sha": "3e74ac22d5298f3259115848db5ac96e00d74e4a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTc0YWMyMmQ1Mjk4ZjMyNTkxMTU4NDhkYjVhYzk2ZTAwZDc0ZTRh",
    "commit": {
      "author": {
        "name": "Kamil Domanski",
        "email": "kdomanski@kdemail.net",
        "date": "2014-05-05T19:15:33Z"
      },
      "committer": {
        "name": "Kamil Domanski",
        "email": "kdomanski@kdemail.net",
        "date": "2014-05-13T09:41:59Z"
      },
      "message": "json_spirit: #include <stdint.h>",
      "tree": {
        "sha": "35dc6b7c4a7728414cc213e23634c3bee1605c5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35dc6b7c4a7728414cc213e23634c3bee1605c5f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e74ac22d5298f3259115848db5ac96e00d74e4a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e74ac22d5298f3259115848db5ac96e00d74e4a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e74ac22d5298f3259115848db5ac96e00d74e4a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e74ac22d5298f3259115848db5ac96e00d74e4a/comments",
    "author": {
      "login": "kdomanski",
      "id": 993296,
      "node_id": "MDQ6VXNlcjk5MzI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/993296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kdomanski",
      "html_url": "https://github.com/kdomanski",
      "followers_url": "https://api.github.com/users/kdomanski/followers",
      "following_url": "https://api.github.com/users/kdomanski/following{/other_user}",
      "gists_url": "https://api.github.com/users/kdomanski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kdomanski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kdomanski/subscriptions",
      "organizations_url": "https://api.github.com/users/kdomanski/orgs",
      "repos_url": "https://api.github.com/users/kdomanski/repos",
      "events_url": "https://api.github.com/users/kdomanski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kdomanski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kdomanski",
      "id": 993296,
      "node_id": "MDQ6VXNlcjk5MzI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/993296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kdomanski",
      "html_url": "https://github.com/kdomanski",
      "followers_url": "https://api.github.com/users/kdomanski/followers",
      "following_url": "https://api.github.com/users/kdomanski/following{/other_user}",
      "gists_url": "https://api.github.com/users/kdomanski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kdomanski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kdomanski/subscriptions",
      "organizations_url": "https://api.github.com/users/kdomanski/orgs",
      "repos_url": "https://api.github.com/users/kdomanski/repos",
      "events_url": "https://api.github.com/users/kdomanski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kdomanski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b61a6a47895309ffb059f986a31c4931b8fe0b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b61a6a47895309ffb059f986a31c4931b8fe0b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b61a6a47895309ffb059f986a31c4931b8fe0b4"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "13cc89210c6f643185e7690b50d3a1f0a18a37de",
        "filename": "src/json/json_spirit_value.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e74ac22d5298f3259115848db5ac96e00d74e4a/src/json/json_spirit_value.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e74ac22d5298f3259115848db5ac96e00d74e4a/src/json/json_spirit_value.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/json/json_spirit_value.h?ref=3e74ac22d5298f3259115848db5ac96e00d74e4a",
        "patch": "@@ -16,6 +16,7 @@\n #include <cassert>\n #include <sstream>\n #include <stdexcept>\n+#include <stdint.h>\n #include <boost/config.hpp> \n #include <boost/shared_ptr.hpp> \n #include <boost/variant.hpp> "
      }
    ]
  },
  {
    "sha": "d56e30ca898469cf5988b0fc9847ec79b43be49c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNTZlMzBjYTg5ODQ2OWNmNTk4OGIwZmM5ODQ3ZWM3OWI0M2JlNDlj",
    "commit": {
      "author": {
        "name": "Kamil Domanski",
        "email": "kdomanski@kdemail.net",
        "date": "2014-05-06T12:58:43Z"
      },
      "committer": {
        "name": "Kamil Domanski",
        "email": "kdomanski@kdemail.net",
        "date": "2014-05-13T09:42:00Z"
      },
      "message": "removed a few unnecessary casts",
      "tree": {
        "sha": "91e3b06618e0aa222197fa854648d2a939b469d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91e3b06618e0aa222197fa854648d2a939b469d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d56e30ca898469cf5988b0fc9847ec79b43be49c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d56e30ca898469cf5988b0fc9847ec79b43be49c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d56e30ca898469cf5988b0fc9847ec79b43be49c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d56e30ca898469cf5988b0fc9847ec79b43be49c/comments",
    "author": {
      "login": "kdomanski",
      "id": 993296,
      "node_id": "MDQ6VXNlcjk5MzI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/993296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kdomanski",
      "html_url": "https://github.com/kdomanski",
      "followers_url": "https://api.github.com/users/kdomanski/followers",
      "following_url": "https://api.github.com/users/kdomanski/following{/other_user}",
      "gists_url": "https://api.github.com/users/kdomanski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kdomanski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kdomanski/subscriptions",
      "organizations_url": "https://api.github.com/users/kdomanski/orgs",
      "repos_url": "https://api.github.com/users/kdomanski/repos",
      "events_url": "https://api.github.com/users/kdomanski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kdomanski/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kdomanski",
      "id": 993296,
      "node_id": "MDQ6VXNlcjk5MzI5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/993296?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kdomanski",
      "html_url": "https://github.com/kdomanski",
      "followers_url": "https://api.github.com/users/kdomanski/followers",
      "following_url": "https://api.github.com/users/kdomanski/following{/other_user}",
      "gists_url": "https://api.github.com/users/kdomanski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kdomanski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kdomanski/subscriptions",
      "organizations_url": "https://api.github.com/users/kdomanski/orgs",
      "repos_url": "https://api.github.com/users/kdomanski/repos",
      "events_url": "https://api.github.com/users/kdomanski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kdomanski/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3e74ac22d5298f3259115848db5ac96e00d74e4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e74ac22d5298f3259115848db5ac96e00d74e4a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3e74ac22d5298f3259115848db5ac96e00d74e4a"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 18,
      "deletions": 18
    },
    "files": [
      {
        "sha": "a303b5d3eff269a0e340078012e9d3f6cea1eb8b",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d56e30ca898469cf5988b0fc9847ec79b43be49c/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d56e30ca898469cf5988b0fc9847ec79b43be49c/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=d56e30ca898469cf5988b0fc9847ec79b43be49c",
        "patch": "@@ -64,7 +64,7 @@ Object blockToJSON(const CBlock& block, const CBlockIndex* blockindex)\n     BOOST_FOREACH(const CTransaction&tx, block.vtx)\n         txs.push_back(tx.GetHash().GetHex());\n     result.push_back(Pair(\"tx\", txs));\n-    result.push_back(Pair(\"time\", (int64_t)block.GetBlockTime()));\n+    result.push_back(Pair(\"time\", block.GetBlockTime()));\n     result.push_back(Pair(\"nonce\", (uint64_t)block.nNonce));\n     result.push_back(Pair(\"bits\", HexBits(block.nBits)));\n     result.push_back(Pair(\"difficulty\", GetDifficulty(blockindex)));\n@@ -175,7 +175,7 @@ Value getrawmempool(const Array& params, bool fHelp)\n             Object info;\n             info.push_back(Pair(\"size\", (int)e.GetTxSize()));\n             info.push_back(Pair(\"fee\", ValueFromAmount(e.GetFee())));\n-            info.push_back(Pair(\"time\", (int64_t)e.GetTime()));\n+            info.push_back(Pair(\"time\", e.GetTime()));\n             info.push_back(Pair(\"height\", (int)e.GetHeight()));\n             info.push_back(Pair(\"startingpriority\", e.GetPriority(e.GetHeight())));\n             info.push_back(Pair(\"currentpriority\", e.GetPriority(chainActive.Height())));"
      },
      {
        "sha": "27d6d61a36f26f6a6501ebfaa5f1446442005b81",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d56e30ca898469cf5988b0fc9847ec79b43be49c/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d56e30ca898469cf5988b0fc9847ec79b43be49c/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=d56e30ca898469cf5988b0fc9847ec79b43be49c",
        "patch": "@@ -69,18 +69,18 @@ Value getinfo(const Array& params, bool fHelp)\n     }\n #endif\n     obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n-    obj.push_back(Pair(\"timeoffset\",    (int64_t)GetTimeOffset()));\n+    obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n     obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n     obj.push_back(Pair(\"testnet\",       TestNet()));\n #ifdef ENABLE_WALLET\n     if (pwalletMain) {\n-        obj.push_back(Pair(\"keypoololdest\", (int64_t)pwalletMain->GetOldestKeyPoolTime()));\n+        obj.push_back(Pair(\"keypoololdest\", pwalletMain->GetOldestKeyPoolTime()));\n         obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n     }\n     if (pwalletMain && pwalletMain->IsCrypted())\n-        obj.push_back(Pair(\"unlocked_until\", (int64_t)nWalletUnlockTime));\n+        obj.push_back(Pair(\"unlocked_until\", nWalletUnlockTime));\n     obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n #endif\n     obj.push_back(Pair(\"relayfee\",      ValueFromAmount(CTransaction::nMinRelayTxFee)));"
      },
      {
        "sha": "024f6a09de0d6a6a3d219ebeee91f2425e1ef762",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d56e30ca898469cf5988b0fc9847ec79b43be49c/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d56e30ca898469cf5988b0fc9847ec79b43be49c/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=d56e30ca898469cf5988b0fc9847ec79b43be49c",
        "patch": "@@ -116,11 +116,11 @@ Value getpeerinfo(const Array& params, bool fHelp)\n         if (!(stats.addrLocal.empty()))\n             obj.push_back(Pair(\"addrlocal\", stats.addrLocal));\n         obj.push_back(Pair(\"services\", strprintf(\"%08x\", stats.nServices)));\n-        obj.push_back(Pair(\"lastsend\", (int64_t)stats.nLastSend));\n-        obj.push_back(Pair(\"lastrecv\", (int64_t)stats.nLastRecv));\n-        obj.push_back(Pair(\"bytessent\", (int64_t)stats.nSendBytes));\n-        obj.push_back(Pair(\"bytesrecv\", (int64_t)stats.nRecvBytes));\n-        obj.push_back(Pair(\"conntime\", (int64_t)stats.nTimeConnected));\n+        obj.push_back(Pair(\"lastsend\", stats.nLastSend));\n+        obj.push_back(Pair(\"lastrecv\", stats.nLastRecv));\n+        obj.push_back(Pair(\"bytessent\", stats.nSendBytes));\n+        obj.push_back(Pair(\"bytesrecv\", stats.nRecvBytes));\n+        obj.push_back(Pair(\"conntime\", stats.nTimeConnected));\n         obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n         if (stats.dPingWait > 0.0)\n             obj.push_back(Pair(\"pingwait\", stats.dPingWait));\n@@ -328,9 +328,9 @@ Value getnettotals(const Array& params, bool fHelp)\n        );\n \n     Object obj;\n-    obj.push_back(Pair(\"totalbytesrecv\", static_cast< uint64_t>(CNode::GetTotalBytesRecv())));\n-    obj.push_back(Pair(\"totalbytessent\", static_cast<uint64_t>(CNode::GetTotalBytesSent())));\n-    obj.push_back(Pair(\"timemillis\", static_cast<int64_t>(GetTimeMillis())));\n+    obj.push_back(Pair(\"totalbytesrecv\", CNode::GetTotalBytesRecv()));\n+    obj.push_back(Pair(\"totalbytessent\", CNode::GetTotalBytesSent()));\n+    obj.push_back(Pair(\"timemillis\", GetTimeMillis()));\n     return obj;\n }\n \n@@ -365,7 +365,7 @@ Value getnetworkinfo(const Array& params, bool fHelp)\n     Object obj;\n     obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n     obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n-    obj.push_back(Pair(\"timeoffset\",    (boost::int64_t)GetTimeOffset()));\n+    obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n     obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n     obj.push_back(Pair(\"relayfee\",      ValueFromAmount(CTransaction::nMinRelayTxFee)));"
      },
      {
        "sha": "a8f267d7fc4b303141aa467392b43648af7492e5",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d56e30ca898469cf5988b0fc9847ec79b43be49c/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d56e30ca898469cf5988b0fc9847ec79b43be49c/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=d56e30ca898469cf5988b0fc9847ec79b43be49c",
        "patch": "@@ -57,7 +57,7 @@ void WalletTxToJSON(const CWalletTx& wtx, Object& entry)\n     BOOST_FOREACH(const uint256& conflict, wtx.GetConflicts())\n         conflicts.push_back(conflict.GetHex());\n     entry.push_back(Pair(\"walletconflicts\", conflicts));\n-    entry.push_back(Pair(\"time\", (int64_t)wtx.GetTxTime()));\n+    entry.push_back(Pair(\"time\", wtx.GetTxTime()));\n     entry.push_back(Pair(\"timereceived\", (int64_t)wtx.nTimeReceived));\n     BOOST_FOREACH(const PAIRTYPE(string,string)& item, wtx.mapValue)\n         entry.push_back(Pair(item.first, item.second));\n@@ -1167,7 +1167,7 @@ void AcentryToJSON(const CAccountingEntry& acentry, const string& strAccount, Ar\n         Object entry;\n         entry.push_back(Pair(\"account\", acentry.strAccount));\n         entry.push_back(Pair(\"category\", \"move\"));\n-        entry.push_back(Pair(\"time\", (int64_t)acentry.nTime));\n+        entry.push_back(Pair(\"time\", acentry.nTime));\n         entry.push_back(Pair(\"amount\", ValueFromAmount(acentry.nCreditDebit)));\n         entry.push_back(Pair(\"otheraccount\", acentry.strOtherAccount));\n         entry.push_back(Pair(\"comment\", acentry.strComment));\n@@ -1912,9 +1912,9 @@ Value getwalletinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n     obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n     obj.push_back(Pair(\"txcount\",       (int)pwalletMain->mapWallet.size()));\n-    obj.push_back(Pair(\"keypoololdest\", (int64_t)pwalletMain->GetOldestKeyPoolTime()));\n+    obj.push_back(Pair(\"keypoololdest\", pwalletMain->GetOldestKeyPoolTime()));\n     obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n     if (pwalletMain->IsCrypted())\n-        obj.push_back(Pair(\"unlocked_until\", (int64_t)nWalletUnlockTime));\n+        obj.push_back(Pair(\"unlocked_until\", nWalletUnlockTime));\n     return obj;\n }"
      }
    ]
  }
]