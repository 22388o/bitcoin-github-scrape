MarcoFalke,2018-03-30T17:18:23Z,utACK 850d2da03ae842e3bd00651b058fc1283b3eb9c4,https://github.com/bitcoin/bitcoin/pull/12843#issuecomment-377574434,377574434,
jamesob,2018-03-30T19:08:38Z,"utACK https://github.com/bitcoin/bitcoin/pull/12843/commits/850d2da03ae842e3bd00651b058fc1283b3eb9c4\n\n> Longer term, we should consider running functional tests over bitcoin-qt in one of the Travis jobs.\n\nCurious about what you mean here, since `make check` already calls `qt/test/test_bitcoin-qt` for the QT-enabled travis build. One additional thing we could do (which I'm happy to write in",https://github.com/bitcoin/bitcoin/pull/12843#issuecomment-377599069,377599069,
jnewbery,2018-03-30T20:10:43Z,"> we should run test/functional/test_runner.py with bitcoin-qt as its binary\n\nYes, that would have caught the null dereference (and could catch other bugs in the qt specific startup code).",https://github.com/bitcoin/bitcoin/pull/12843#issuecomment-377611586,377611586,
Empact,2018-03-30T20:40:08Z,utACK 63048ec,https://github.com/bitcoin/bitcoin/pull/12843#issuecomment-377617992,377617992,
promag,2018-04-01T18:33:12Z,utACK 63048ec.,https://github.com/bitcoin/bitcoin/pull/12843#issuecomment-377806972,377806972,
Empact,2018-03-30T20:32:53Z,2018 ðŸŽ‰ ,https://github.com/bitcoin/bitcoin/pull/12843#discussion_r178372042,178372042,test/functional/feature_help.py
jnewbery,2018-03-30T20:35:51Z,fixed,https://github.com/bitcoin/bitcoin/pull/12843#discussion_r178372616,178372616,test/functional/feature_help.py
