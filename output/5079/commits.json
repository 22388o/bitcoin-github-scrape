[
  {
    "sha": "19c0afa744c9fe92773f4e3a9b8b1c7881fcb674",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOWMwYWZhNzQ0YzlmZTkyNzczZjRlM2E5YjhiMWM3ODgxZmNiNjc0",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-10-13T14:14:58Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-11-13T21:05:41Z"
      },
      "message": "Make TX_SCRIPTHASH clear vSolutionsRet first\n\nPreviously unlike other transaction types the TX_SCRIPTHASH would not\nclear vSolutionsRet, which means that unlike other transaction types if\nit was called twice in a row you would get the result of the previous\ninvocation as well.",
      "tree": {
        "sha": "2efbd077f60fb3f37772353bb1aa1028287cbf08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2efbd077f60fb3f37772353bb1aa1028287cbf08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19c0afa744c9fe92773f4e3a9b8b1c7881fcb674",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19c0afa744c9fe92773f4e3a9b8b1c7881fcb674",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19c0afa744c9fe92773f4e3a9b8b1c7881fcb674",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19c0afa744c9fe92773f4e3a9b8b1c7881fcb674/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d3ce7421e11ed693840e04bee4d18fb9d396309",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d3ce7421e11ed693840e04bee4d18fb9d396309",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d3ce7421e11ed693840e04bee4d18fb9d396309"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7273796ff046b81b19a60c3270c5437b34665374",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19c0afa744c9fe92773f4e3a9b8b1c7881fcb674/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19c0afa744c9fe92773f4e3a9b8b1c7881fcb674/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=19c0afa744c9fe92773f4e3a9b8b1c7881fcb674",
        "patch": "@@ -58,6 +58,8 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN));\n     }\n \n+    vSolutionsRet.clear();\n+\n     // Shortcut for pay-to-script-hash, which are more constrained than the other types:\n     // it is always OP_HASH160 20 [20 byte hash] OP_EQUAL\n     if (scriptPubKey.IsPayToScriptHash())"
      }
    ]
  },
  {
    "sha": "04a62754d6f21b137015356e3456377d3169e7ad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNGE2Mjc1NGQ2ZjIxYjEzNzAxNTM1NmUzNDU2Mzc3ZDMxNjllN2Fk",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-11-04T17:38:56Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-11-13T21:07:08Z"
      },
      "message": "Add IsPushOnly(const_iterator pc)\n\nAllows IsPushOnly() to be applied to just part of the script for\nOP_RETURN outputs.",
      "tree": {
        "sha": "378f5ac986ccf36d28b3166e7a1fd80e736a93a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/378f5ac986ccf36d28b3166e7a1fd80e736a93a0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04a62754d6f21b137015356e3456377d3169e7ad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04a62754d6f21b137015356e3456377d3169e7ad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/04a62754d6f21b137015356e3456377d3169e7ad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04a62754d6f21b137015356e3456377d3169e7ad/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19c0afa744c9fe92773f4e3a9b8b1c7881fcb674",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19c0afa744c9fe92773f4e3a9b8b1c7881fcb674",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19c0afa744c9fe92773f4e3a9b8b1c7881fcb674"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "3c55a5621886be271d9ff7eacdee97079680b3ef",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04a62754d6f21b137015356e3456377d3169e7ad/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04a62754d6f21b137015356e3456377d3169e7ad/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=04a62754d6f21b137015356e3456377d3169e7ad",
        "patch": "@@ -220,9 +220,8 @@ bool CScript::IsPayToScriptHash() const\n             this->at(22) == OP_EQUAL);\n }\n \n-bool CScript::IsPushOnly() const\n+bool CScript::IsPushOnly(const_iterator pc) const\n {\n-    const_iterator pc = begin();\n     while (pc < end())\n     {\n         opcodetype opcode;\n@@ -238,6 +237,11 @@ bool CScript::IsPushOnly() const\n     return true;\n }\n \n+bool CScript::IsPushOnly() const\n+{\n+    return this->IsPushOnly(begin());\n+}\n+\n std::string CScript::ToString() const\n {\n     std::string str;"
      },
      {
        "sha": "98d77b2bc6640c57dda1e34c63adc8b1c15e8443",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04a62754d6f21b137015356e3456377d3169e7ad/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04a62754d6f21b137015356e3456377d3169e7ad/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=04a62754d6f21b137015356e3456377d3169e7ad",
        "patch": "@@ -580,6 +580,7 @@ class CScript : public std::vector<unsigned char>\n     bool IsPayToScriptHash() const;\n \n     /** Called by IsStandardTx and P2SH/BIP62 VerifyScript (which makes it consensus-critical). */\n+    bool IsPushOnly(const_iterator pc) const;\n     bool IsPushOnly() const;\n \n     /**"
      }
    ]
  },
  {
    "sha": "c26370192a33663f587dfa999fcf28b535ee6639",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjYzNzAxOTJhMzM2NjNmNTg3ZGZhOTk5ZmNmMjhiNTM1ZWU2NjM5",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-10-13T14:18:05Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-11-13T21:10:27Z"
      },
      "message": "Accept any sequence of PUSHDATAs in OP_RETURN outputs\n\nPreviously only one PUSHDATA was allowed, needlessly limiting\napplications such as matching OP_RETURN contents with bloom filters that\noperate on a per-PUSHDATA level. Now any combination that passes\nIsPushOnly() is allowed, so long as the total size of the scriptPubKey\nis less than 42 bytes. (unchanged modulo non-minimal PUSHDATA encodings)\n\nAlso, this fixes the odd bug where previously the PUSHDATA could be\nreplaced by any single opcode, even sigops consuming opcodes such as\nCHECKMULTISIG. (20 sigops!)",
      "tree": {
        "sha": "1a65edcba7ada69537e881801523dee96bb96545",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a65edcba7ada69537e881801523dee96bb96545"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c26370192a33663f587dfa999fcf28b535ee6639",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGrBAABCACVBQJUZR5GXhSAAAAAABUAQGJsb2NraGFzaEBiaXRjb2luLm9yZzAw\nMDAwMDAwMDAwMDAwMDAwMzljODAxODgyNDY4ODc0NmJlODZjMGVmMDE4ODU1NDY3\nOGE1YzdlNzI5MGZiOTEvFIAAAAAAFQARcGthLWFkZHJlc3NAZ251cGcub3JncGV0\nZUBwZXRlcnRvZC5vcmcACgkQJIFAPaXwkfuhIggAgK9GWEVlW/YG4/e6W8lCGFsE\nTGEUNS21TOeTxg3eoOmr3QKHGv8EXOyrL/UgxW4fJ3br+CYG9PYRfP8t2oVWJhVU\nhz7mRjwH/FexmOauimJcVnSTnUFzI+LKFd9CTES1zmbNMkhw42NK6+NUCu8WfXxQ\nKqd7vGvpCUKYspS3pXs8JdyPomQFDXg+MkiYS5tY2JIr5ahlLTVVfYiHIu0bx8aK\nxqZOsXvD9jQT+j+P6kJ7H+1epGiaHjN0XQu6Yqg+4v3rymXhfZVmart3uUry9d3M\nC+/Nec4BwxQ3xAmjVevIfFDCUJzWA9k9XLlO4PNJfZuwHUWX99vRLPsLs1NG7w==\n=Gxyg\n-----END PGP SIGNATURE-----",
        "payload": "tree 1a65edcba7ada69537e881801523dee96bb96545\nparent 04a62754d6f21b137015356e3456377d3169e7ad\nauthor Peter Todd <pete@petertodd.org> 1413209885 -0400\ncommitter Peter Todd <pete@petertodd.org> 1415913027 -0500\n\nAccept any sequence of PUSHDATAs in OP_RETURN outputs\n\nPreviously only one PUSHDATA was allowed, needlessly limiting\napplications such as matching OP_RETURN contents with bloom filters that\noperate on a per-PUSHDATA level. Now any combination that passes\nIsPushOnly() is allowed, so long as the total size of the scriptPubKey\nis less than 42 bytes. (unchanged modulo non-minimal PUSHDATA encodings)\n\nAlso, this fixes the odd bug where previously the PUSHDATA could be\nreplaced by any single opcode, even sigops consuming opcodes such as\nCHECKMULTISIG. (20 sigops!)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c26370192a33663f587dfa999fcf28b535ee6639",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c26370192a33663f587dfa999fcf28b535ee6639",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c26370192a33663f587dfa999fcf28b535ee6639/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "04a62754d6f21b137015356e3456377d3169e7ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04a62754d6f21b137015356e3456377d3169e7ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04a62754d6f21b137015356e3456377d3169e7ad"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 33,
      "deletions": 13
    },
    "files": [
      {
        "sha": "fec190d2364e4b8cc284fcd9f6494bd15fa74875",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c26370192a33663f587dfa999fcf28b535ee6639/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c26370192a33663f587dfa999fcf28b535ee6639/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=c26370192a33663f587dfa999fcf28b535ee6639",
        "patch": "@@ -154,7 +154,7 @@ const char* GetOpName(opcodetype opcode)\n     case OP_INVALIDOPCODE          : return \"OP_INVALIDOPCODE\";\n \n     // Note:\n-    //  The template matching params OP_SMALLDATA/etc are defined in opcodetype enum\n+    //  The template matching params OP_SMALLINTEGER/etc are defined in opcodetype enum\n     //  as kind of implementation hack, they are *NOT* real opcodes.  If found in real\n     //  Script, just let the default: case deal with them.\n "
      },
      {
        "sha": "558beaed510a32a69db50748bb40ce31220bd5bb",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c26370192a33663f587dfa999fcf28b535ee6639/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c26370192a33663f587dfa999fcf28b535ee6639/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=c26370192a33663f587dfa999fcf28b535ee6639",
        "patch": "@@ -160,7 +160,6 @@ enum opcodetype\n \n \n     // template matching params\n-    OP_SMALLDATA = 0xf9,\n     OP_SMALLINTEGER = 0xfa,\n     OP_PUBKEYS = 0xfb,\n     OP_PUBKEYHASH = 0xfd,"
      },
      {
        "sha": "47dc83d96eca71b2467c3d5d8acb218748b1df13",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 11,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c26370192a33663f587dfa999fcf28b535ee6639/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c26370192a33663f587dfa999fcf28b535ee6639/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=c26370192a33663f587dfa999fcf28b535ee6639",
        "patch": "@@ -51,11 +51,6 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n \n         // Sender provides N pubkeys, receivers provides M signatures\n         mTemplates.insert(make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n-\n-        // Empty, provably prunable, data-carrying output\n-        if (GetBoolArg(\"-datacarrier\", true))\n-            mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN << OP_SMALLDATA));\n-        mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN));\n     }\n \n     vSolutionsRet.clear();\n@@ -70,6 +65,21 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         return true;\n     }\n \n+    // Provably prunable, data-carrying output\n+    //\n+    // So long as script passes the IsUnspendable() test and all but the first\n+    // byte passes the IsPushOnly() test we don't care what exactly is in the\n+    // script.\n+    if (scriptPubKey.size() >= 1 && scriptPubKey[0] == OP_RETURN\n+                                 && scriptPubKey.size() <= nMaxDatacarrierBytes+2) // to account for the pushdata opcodes\n+    {\n+        if (scriptPubKey.IsPushOnly(scriptPubKey.begin()+1))\n+        {\n+            typeRet = TX_NULL_DATA;\n+            return true;\n+        }\n+    }\n+\n     // Scan templates\n     const CScript& script1 = scriptPubKey;\n     BOOST_FOREACH(const PAIRTYPE(txnouttype, CScript)& tplate, mTemplates)\n@@ -142,12 +152,6 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n                 else\n                     break;\n             }\n-            else if (opcode2 == OP_SMALLDATA)\n-            {\n-                // small pushdata, <= nMaxDatacarrierBytes\n-                if (vch1.size() > nMaxDatacarrierBytes)\n-                    break;\n-            }\n             else if (opcode1 != opcode2 || vch1 != vch2)\n             {\n                 // Others must match exactly"
      },
      {
        "sha": "9ea9efcc6e73697032f29983b1ff96aaf874382c",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c26370192a33663f587dfa999fcf28b535ee6639/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c26370192a33663f587dfa999fcf28b535ee6639/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=c26370192a33663f587dfa999fcf28b535ee6639",
        "patch": "@@ -349,6 +349,23 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     // 41-byte TX_NULL_DATA (non-standard)\n     t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3800\");\n     BOOST_CHECK(!IsStandardTx(t, reason));\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38\") << 1;\n+    BOOST_CHECK(!IsStandardTx(t, reason));\n+\n+    // Data payload can be encoded in any way...\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"00\") << ParseHex(\"01\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+    // OP_RESERVED *is* considered to be a PUSHDATA type opcode by IsPushOnly()!\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << OP_RESERVED << -1 << 0 << ParseHex(\"01\") << 2 << 3 << 4 << 5 << 6 << 7 << 8 << 9 << 10 << 11 << 12 << 13 << 14 << 15 << 16;\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << 0 << ParseHex(\"01\") << 2 << ParseHex(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+\n+    // ...so long as it only contains PUSHDATA's\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << OP_RETURN;\n+    BOOST_CHECK(!IsStandardTx(t, reason));\n \n     // TX_NULL_DATA w/o PUSHDATA\n     t.vout.resize(1);"
      }
    ]
  }
]