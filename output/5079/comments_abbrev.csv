TheBlueMatt,2014-10-14T07:47:33Z,"Aside from that one thing, utACK.\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-59002062,59002062,
TheBlueMatt,2014-10-14T17:20:53Z,"WIth or without yodaspeak, utACK.\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-59082544,59082544,
devrandom,2014-10-15T03:37:06Z,You could add a IsPushOnly with an arg as follows:\n\n``` C++\nbool CScript::IsPushOnly() const\n{\n  return this->IsPushOnly(begin());\n}\n\nbool CScript::IsPushOnly(const_iterator pc) const\n{\n...\n```\n\nand then call it with `begin()+1` in the OP_RETURN flow.\n\nAlso add the new definition in script.h\n,https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-59153606,59153606,
sipa,2014-10-15T03:39:22Z,"Sounds like a good suggestion, @devrandom.\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-59153718,59153718,
petertodd,2014-11-04T17:44:52Z,@devrandom I implemented your suggestion re: IsPushOnly() and rebased.\n,https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-61682364,61682364,
devrandom,2014-11-04T17:52:27Z,+1\n,https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-61683544,61683544,
Flavien,2014-11-13T19:08:38Z,"Since the OP_RETURN doomsday some had predicted did not happen, could we also increase the space in the OP_RETURN? 20 bytes would already go a long way.\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-62947757,62947757,
luke-jr,2014-11-13T19:19:14Z,@Flavien 0.10 is adding a -datacarriersize option to make configuring the size easy. Changing the default value is IMO outside the scope of this PR and should be proposed independently.\n,https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-62949423,62949423,
petertodd,2014-11-13T21:10:04Z,Rebased\n,https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-62966568,62966568,
petertodd,2014-11-13T21:10:59Z,"@Flavien Yeah, that belongs in a separate pull-req. Also, if you want this merged, do please test it and ACK...\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-62966712,62966712,
devrandom,2015-02-04T23:58:24Z,tested ACK\n,https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-72966947,72966947,
maraoz,2015-04-08T13:52:55Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-90923500,90923500,
jtimon,2015-04-27T17:21:44Z,"If this was rebased today, it wouldn't pass the tests. I rebased and fixed that.\nYou were adding 2 for the op_return and the op_pushdata, but you also have to add the number expressing the size and the size of that number itself depends on the pushdata type used. So replacing 2 with 3 to fix the tests is not a very convincing option IMO. I would prefer to change the default from 80 to 83 and say ",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-96748846,96748846,
petertodd,2015-05-03T22:21:00Z,"@jtimon I disagree with some of the things you say above in minor ways, but the big picture is that you're version looks fine to me. How about you submit it as a separate pull-req and I'll close this one?\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-98550801,98550801,
jtimon,2015-05-07T11:06:59Z,"Care to be more specific about where you disagree?\nSure, I could replace this PR. But if I do that, I would only do it after #6068 (was #5595) if that ever gets merged.\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-99816841,99816841,
petertodd,2015-05-09T19:58:52Z,"Oh, actually re-reeading it I think it's all fine.\n\nWell, it's up to you, but I'd see this as separate to #6068, in the sense that it doesn't need to be a blocker.\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-100539019,100539019,
dexX7,2015-06-04T02:02:22Z,> matching OP_RETURN contents with bloom filters that operate on a per-PUSHDATA level\n\nThis seems very useful in my opinon.\n,https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-108680506,108680506,
dexX7,2015-06-13T18:19:44Z,"> @jtimon: https://github.com/jtimon/bitcoin/compare/pr_5079_rebased...jtimon:pr_5079\n\nIf the size check is removed from `Solver()`, then there are a few consequences.\n\nThe solver is still successful, even if payloads are larger than `nMaxDatacarrierBytes`. On the first glimpse this has no negative effect, but since `typeRet` is set `TX_NULL_DATA` in these cases, too, then it also affects `Ext",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-111738181,111738181,
jtimon,2015-07-12T14:17:29Z,"Please, rebase. Even if it's not strictly necessary, MAX_OP_RETURN_RELAY has changed its value and  IsStandard() has moved to policy/policy. It will also become easier to compare with #6424, which I just opened (it's a rebased version of this with my nits on top, ready to be squashed).\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-120723729,120723729,
laanwj,2015-07-21T08:44:47Z,What still needs to happen here?\nEdit: re-triggered travis to see the test failures.\n,https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-123216705,123216705,
jtimon,2015-07-21T09:13:50Z,"@laanwj just merge #6424 instead? Well, after I get some more review and I remove the last ""fixup?"" commit.\n\n@dexX7\n\n> The RPC calls ""getrawtransaction"", ""decoderawtransaction"" and ""decodescript"" then no longer return ""type"" : ""nonstandard"", but ""nulldata"".\n\nYes, and there's no problem with that.\n\n> Nevertheless, I think this is the right thing to do, and it would be in line with the behav",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-123228627,123228627,
dexX7,2015-07-21T11:12:38Z,"> @jtimon: So do you agree or not, I'm confused...\n\nWith https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-111738181 I was just pointing out that your change has an impact on how the scripts are labeled via RPC, but I think it's fine, and I agree with:\n\n> @jtimon: Yes, and there's no problem with that.\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-123264828,123264828,
jtimon,2015-07-21T11:20:08Z,"@dexX7 Oh, I see, it was just to inform. Thanks.\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-123268218,123268218,
jgarzik,2015-09-15T17:23:56Z,"ut ACK as-is\n\nSuggested improvement:\n- first ""if"" checks only for OP_RETURN\n- second ""if"" detects TX_NULL_DATA\n- otherwise no need to scan templates - it is an OP_RETURN - we know it is ""unspendable+garbage"" and therefore TX_NONSTANDARD\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-140472519,140472519,
dcousens,2015-09-19T01:00:20Z,"concept / utACK,  though waiting on @jtimon's comments to be addressed.  +1 on @jgarzik's suggestions.\n",https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-141605348,141605348,
jtimon,2015-09-19T04:46:39Z,Was this rebased? There was already a rebased version (with my nits fixed) in #6424 ...\n,https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-141619927,141619927,
laanwj,2015-10-01T16:14:32Z,Closing in favor of @jtimon's #6424\n,https://github.com/bitcoin/bitcoin/pull/5079#issuecomment-144775611,144775611,
TheBlueMatt,2014-10-14T07:47:22Z,This conditional could be written much more clearly. It is not clear that IsUnspendable() is actually checking for OP_RETURN at the beginning.\n,https://github.com/bitcoin/bitcoin/pull/5079#discussion_r18813171,18813171,src/script/standard.cpp
petertodd,2014-10-14T11:20:31Z,Fixed\n,https://github.com/bitcoin/bitcoin/pull/5079#discussion_r18821690,18821690,src/script/standard.cpp
TheBlueMatt,2014-10-14T17:20:25Z,"1 smaller than scriptPubKey.size, it is. Can we avoid yoda conditionals?\n",https://github.com/bitcoin/bitcoin/pull/5079#discussion_r18843493,18843493,src/script/standard.cpp
sipa,2014-10-14T19:10:02Z,Making a full copy (apart from one byte) of every script in every transaction being relayed seems wasteful. Why is there a requirement that it's push only?\n,https://github.com/bitcoin/bitcoin/pull/5079#discussion_r18851324,18851324,src/script/standard.cpp
petertodd,2014-10-14T19:25:36Z,"sigops are counted even in scriptPubKeys, so accepting a transaction with an OP_RETURN output containing a bunch of CHECKMULTISIGS - for instance - would use up a lot of your per-block sigop quota.\n",https://github.com/bitcoin/bitcoin/pull/5079#discussion_r18852297,18852297,src/script/standard.cpp
TheBlueMatt,2014-10-14T19:44:35Z,"could easily adapt IsPushOnly() to be IsPushOnly(int startingAt), or even an iterator.\n",https://github.com/bitcoin/bitcoin/pull/5079#discussion_r18853389,18853389,src/script/standard.cpp
petertodd,2014-10-14T20:03:17Z,@TheBlueMatt Any ideas on the best way of doing that?\n,https://github.com/bitcoin/bitcoin/pull/5079#discussion_r18854416,18854416,src/script/standard.cpp
theuni,2014-10-14T20:25:24Z,"This is scriptPubKey.IsUnspendable(), btw\n",https://github.com/bitcoin/bitcoin/pull/5079#discussion_r18855768,18855768,src/script/standard.cpp
petertodd,2014-10-14T20:27:07Z,"@theuni Lol, that's what the code was prior to @TheBlueMatt asking me to change it to something explicit. :)\n",https://github.com/bitcoin/bitcoin/pull/5079#discussion_r18855907,18855907,src/script/standard.cpp
petertodd,2014-10-14T20:32:10Z,"@TheBlueMatt I've got no strong feelings about Star Wars, so yoda removed.\n",https://github.com/bitcoin/bitcoin/pull/5079#discussion_r18856256,18856256,src/script/standard.cpp
jtimon,2015-07-08T22:55:51Z,"This can be incorporated to the previous `if`, just another &&. What makes this condition different from the others?\n",https://github.com/bitcoin/bitcoin/pull/5079#discussion_r34208195,34208195,src/script/standard.cpp
jtimon,2015-07-08T23:01:56Z,"I agree with getting rid of the -datacarrier=0 option, it's just a redundant way to say -datacarriersize=0. But if you're removing the option, you should also get rid of https://github.com/bitcoin/bitcoin/blob/master/src/init.cpp#L400 and raise a deprecated error when -datacarrier is used before https://github.com/bitcoin/bitcoin/blob/master/src/init.cpp#L872\n",https://github.com/bitcoin/bitcoin/pull/5079#discussion_r34208640,34208640,src/script/standard.cpp
jtimon,2015-07-08T23:09:03Z,"The `scriptPubKey.size() <= nMaxDatacarrierBytes+2` check belongs in policy/policy.cpp, specifically, in line https://github.com/bitcoin/bitcoin/blob/master/src/policy/policy.cpp#L52 , replacing that line with \n\n```\n    } else if (whichType == TX_NULL_DATA && scriptPubKey.size() > nMaxDatacarrierBytes)\n        return false;\n```\n\nTo do that you will need to also move nMaxDatacarrierBytes and",https://github.com/bitcoin/bitcoin/pull/5079#discussion_r34209121,34209121,src/script/standard.cpp
jtimon,2015-07-08T23:10:36Z,"Also, nMaxDatacarrierBytes is only changed from its default value on init, again, why nMaxDatacarrierBytes+2 here instead of just nMaxDatacarrierBytes? If it's to maintain the current default policy, you can just add that constant 2 to MAX_OP_RETURN_RELAY\n",https://github.com/bitcoin/bitcoin/pull/5079#discussion_r34209200,34209200,src/script/standard.cpp
jtimon,2015-07-08T23:19:53Z,"What about adding...\n\n```\nBOOST_CHECK_EQUAL(MAX_OP_RETURN_RELAY, t.vout[0].scriptPubKey.size());\n```\n\n...or similar somewhere here?\n",https://github.com/bitcoin/bitcoin/pull/5079#discussion_r34209753,34209753,src/test/transaction_tests.cpp
dcousens,2015-09-19T00:59:30Z,+1 on @jtimon's comments\n,https://github.com/bitcoin/bitcoin/pull/5079#discussion_r39913875,39913875,src/script/standard.cpp
