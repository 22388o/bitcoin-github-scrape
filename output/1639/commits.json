[
  {
    "sha": "0b7b925160b58b18d19c98cfda8e717e6cfd7ee3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjdiOTI1MTYwYjU4YjE4ZDE5Yzk4Y2ZkYThlNzE3ZTZjZmQ3ZWUz",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-07-30T07:56:33Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-07-30T08:20:59Z"
      },
      "message": "Bitcoin-Qt: add an option to display relative progress bar\n\n- this adds an option under the Display tab, to enable a relative progress\n  bar display (per popular demand)\n- it takes a \"remaining blocks at startup\" value as maximum (which is\n  dynamic, when there are new blocks while downloading the chain)\n- the bars value is computed by subtracting the above value from the current\n  remaining block count of the node converted to a positive number\n- update some comments\n- remove some orphan settings from the optionsdialog.ui file",
      "tree": {
        "sha": "3d356fdc8bdb4213db3717fd5ee03c46e3d819ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d356fdc8bdb4213db3717fd5ee03c46e3d819ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3c83387c298b6462b176fe6f335502770007f192",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c83387c298b6462b176fe6f335502770007f192",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c83387c298b6462b176fe6f335502770007f192"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 51,
      "deletions": 23
    },
    "files": [
      {
        "sha": "178c8f158b0d8804ff1848c8b7299e6bc1cfcf88",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 4,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=0b7b925160b58b18d19c98cfda8e717e6cfd7ee3",
        "patch": "@@ -492,7 +492,7 @@ void BitcoinGUI::setNumConnections(int count)\n \n void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n {\n-    // don't show / hide progressBar and it's label if we have no connection(s) to the network\n+    // don't show / hide progress bar and it's label if we have no connection to the network\n     if (!clientModel || clientModel->getNumConnections() == 0)\n     {\n         progressBarLabel->setVisible(false);\n@@ -514,8 +514,21 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n             progressBarLabel->setText(tr(\"Synchronizing with network...\"));\n             progressBarLabel->setVisible(true);\n             progressBar->setFormat(tr(\"~%n block(s) remaining\", \"\", nRemainingBlocks));\n-            progressBar->setMaximum(nTotalBlocks);\n-            progressBar->setValue(count);\n+            if (clientModel && clientModel->getOptionsModel()->getDisplayRelProgressbar())\n+            {\n+                // Remaining block count based on own nodes startup block count, used for relative progress bar display\n+                int nRemainingBlocksStartup = nTotalBlocks - clientModel->getNumBlocksAtStartup();\n+\n+                // Use relative progress bar display\n+                progressBar->setMaximum(nRemainingBlocksStartup);\n+                progressBar->setValue(-1 * (nRemainingBlocks - nRemainingBlocksStartup));\n+            }\n+            else\n+            {\n+                // Use absolute progress bar display (default)\n+                progressBar->setMaximum(nTotalBlocks);\n+                progressBar->setValue(count);\n+            }\n             progressBar->setVisible(true);\n         }\n \n@@ -530,7 +543,7 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n         tooltip = tr(\"Downloaded %1 blocks of transaction history.\").arg(count);\n     }\n \n-    // Override progressBarLabel text and hide progressBar, when we have warnings to display\n+    // Override progressBarLabel text and hide progress bar, when we have warnings to display\n     if (!strStatusBarWarnings.isEmpty())\n     {\n         progressBarLabel->setText(strStatusBarWarnings);"
      },
      {
        "sha": "2806f1e745c27cf6d4133f3169a26e1619b3003c",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=0b7b925160b58b18d19c98cfda8e717e6cfd7ee3",
        "patch": "@@ -343,6 +343,16 @@\n          </property>\n         </widget>\n        </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"displayRelProgressbar\">\n+         <property name=\"toolTip\">\n+          <string>Whether to use a relative or absolute progress bar display when downloading blocks.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Use &amp;relative progress bar display</string>\n+         </property>\n+        </widget>\n+       </item>\n        <item>\n         <spacer name=\"verticalSpacer_Display\">\n          <property name=\"orientation\">\n@@ -432,12 +442,6 @@\n        <property name=\"autoDefault\">\n         <bool>false</bool>\n        </property>\n-       <property name=\"default\">\n-        <bool>false</bool>\n-       </property>\n-       <property name=\"flat\">\n-        <bool>false</bool>\n-       </property>\n       </widget>\n      </item>\n     </layout>"
      },
      {
        "sha": "5463eed8d6faf22a8f2b5ccb1141334aae14b78b",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=0b7b925160b58b18d19c98cfda8e717e6cfd7ee3",
        "patch": "@@ -145,6 +145,7 @@ void OptionsDialog::setMapper()\n     mapper->addMapping(ui->lang, OptionsModel::Language);\n     mapper->addMapping(ui->unit, OptionsModel::DisplayUnit);\n     mapper->addMapping(ui->displayAddresses, OptionsModel::DisplayAddresses);\n+    mapper->addMapping(ui->displayRelProgressbar, OptionsModel::DisplayRelProgressbar);\n }\n \n void OptionsDialog::enableSaveButtons()"
      },
      {
        "sha": "08ecf37761f05c423d66281b732c4e94c0b1aa25",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=0b7b925160b58b18d19c98cfda8e717e6cfd7ee3",
        "patch": "@@ -47,6 +47,7 @@ void OptionsModel::Init()\n     fMinimizeOnClose = settings.value(\"fMinimizeOnClose\", false).toBool();\n     nTransactionFee = settings.value(\"nTransactionFee\").toLongLong();\n     language = settings.value(\"language\", \"\").toString();\n+    fDisplayRelProgressbar = settings.value(\"fDisplayRelProgressbar\", false).toBool();\n \n     // These are shared with core Bitcoin; we want\n     // command-line options to override the GUI settings:\n@@ -170,6 +171,8 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return QVariant(bitdb.GetDetach());\n         case Language:\n             return settings.value(\"language\", \"\");\n+        case DisplayRelProgressbar:\n+            return QVariant(fDisplayRelProgressbar);\n         default:\n             return QVariant();\n         }\n@@ -249,6 +252,10 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n         case Language:\n             settings.setValue(\"language\", value);\n             break;\n+        case DisplayRelProgressbar:\n+            fDisplayRelProgressbar = value.toBool();\n+            settings.setValue(\"fDisplayRelProgressbar\", fDisplayRelProgressbar);\n+            break;\n         default:\n             break;\n         }"
      },
      {
        "sha": "f66cfbeb4254b398875ab92f6d3e3696fcc19fa6",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 16,
        "deletions": 13,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=0b7b925160b58b18d19c98cfda8e717e6cfd7ee3",
        "patch": "@@ -17,19 +17,20 @@ class OptionsModel : public QAbstractListModel\n     explicit OptionsModel(QObject *parent = 0);\n \n     enum OptionID {\n-        StartAtStartup,    // bool\n-        MinimizeToTray,    // bool\n-        MapPortUPnP,       // bool\n-        MinimizeOnClose,   // bool\n-        ProxyUse,          // bool\n-        ProxyIP,           // QString\n-        ProxyPort,         // int\n-        ProxySocksVersion, // int\n-        Fee,               // qint64\n-        DisplayUnit,       // BitcoinUnits::Unit\n-        DisplayAddresses,  // bool\n-        DetachDatabases,   // bool\n-        Language,          // QString\n+        StartAtStartup,        // bool\n+        MinimizeToTray,        // bool\n+        MapPortUPnP,           // bool\n+        MinimizeOnClose,       // bool\n+        ProxyUse,              // bool\n+        ProxyIP,               // QString\n+        ProxyPort,             // int\n+        ProxySocksVersion,     // int\n+        Fee,                   // qint64\n+        DisplayUnit,           // BitcoinUnits::Unit\n+        DisplayAddresses,      // bool\n+        DetachDatabases,       // bool\n+        Language,              // QString\n+        DisplayRelProgressbar, // bool\n         OptionIDRowCount,\n     };\n \n@@ -49,13 +50,15 @@ class OptionsModel : public QAbstractListModel\n     int getDisplayUnit();\n     bool getDisplayAddresses();\n     QString getLanguage() { return language; }\n+    bool getDisplayRelProgressbar() { return fDisplayRelProgressbar; }\n \n private:\n     int nDisplayUnit;\n     bool bDisplayAddresses;\n     bool fMinimizeToTray;\n     bool fMinimizeOnClose;\n     QString language;\n+    bool fDisplayRelProgressbar;\n \n signals:\n     void displayUnitChanged(int unit);"
      }
    ]
  },
  {
    "sha": "e7d9129928ceb082856de2fb4372232525502c1d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplN2Q5MTI5OTI4Y2ViMDgyODU2ZGUyZmI0MzcyMjMyNTI1NTAyYzFk",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-08-01T11:54:08Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-08-01T11:54:08Z"
      },
      "message": "add time-left display\n\n- add secondsToDHMS() to guiutil.{cpp/h}, which converts seconds to DdHH:MM:SS format\n- add util.h to bitcoingui.h for CMedianFilter\n- add a time-left display when downloading blocks (based on a median of remaining blocks * time per block)",
      "tree": {
        "sha": "e938ac3d7ce0a54876a63aa5aafddc10df23080a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e938ac3d7ce0a54876a63aa5aafddc10df23080a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7d9129928ceb082856de2fb4372232525502c1d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7d9129928ceb082856de2fb4372232525502c1d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e7d9129928ceb082856de2fb4372232525502c1d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7d9129928ceb082856de2fb4372232525502c1d/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "0b7b925160b58b18d19c98cfda8e717e6cfd7ee3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b7b925160b58b18d19c98cfda8e717e6cfd7ee3"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 39,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6e6037274a892c968f9c8a7dce4dd680a251db14",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7d9129928ceb082856de2fb4372232525502c1d/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7d9129928ceb082856de2fb4372232525502c1d/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=e7d9129928ceb082856de2fb4372232525502c1d",
        "patch": "@@ -25,6 +25,7 @@\n #include \"notificator.h\"\n #include \"guiutil.h\"\n #include \"rpcconsole.h\"\n+#include \"util.h\"\n \n #ifdef Q_WS_MAC\n #include \"macdockiconhandler.h\"\n@@ -506,15 +507,30 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n \n     if(count < nTotalBlocks)\n     {\n+        static QDateTime startTime = QDateTime::currentDateTime();\n+        static CMedianFilter<int> cSecsondsLeft(10, 0);\n+\n         int nRemainingBlocks = nTotalBlocks - count;\n         float nPercentageDone = count / (nTotalBlocks * 0.01f);\n \n+        int nProcessedBlocks = count - clientModel->getNumBlocksAtStartup();\n+        // Prevent division by 0\n+        if(!nProcessedBlocks)\n+            nProcessedBlocks++;\n+        // Passed time in seconds / processed blocks\n+        int nMsecsPerBlock = (int)(startTime.msecsTo(QDateTime::currentDateTime()) / nProcessedBlocks);\n+        // Prevent division by 0\n+        if(!nMsecsPerBlock)\n+            nMsecsPerBlock++;\n+        // use a CMedianFilter to smooth the last 10 values\n+        cSecsondsLeft.input((nRemainingBlocks * nMsecsPerBlock) / 1000);\n+\n         if (strStatusBarWarnings.isEmpty())\n         {\n-            progressBarLabel->setText(tr(\"Synchronizing with network...\"));\n+            progressBarLabel->setText(tr(\"Synchronizing with network (\") + GUIUtil::secondsToDHMS(cSecsondsLeft.median()) + \")...\");\n             progressBarLabel->setVisible(true);\n             progressBar->setFormat(tr(\"~%n block(s) remaining\", \"\", nRemainingBlocks));\n-            if (clientModel && clientModel->getOptionsModel()->getDisplayRelProgressbar())\n+            if (clientModel->getOptionsModel()->getDisplayRelProgressbar())\n             {\n                 // Remaining block count based on own nodes startup block count, used for relative progress bar display\n                 int nRemainingBlocksStartup = nTotalBlocks - clientModel->getNumBlocksAtStartup();"
      },
      {
        "sha": "dad95360873e95a4db94b582d6a1011b919d9997",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7d9129928ceb082856de2fb4372232525502c1d/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7d9129928ceb082856de2fb4372232525502c1d/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=e7d9129928ceb082856de2fb4372232525502c1d",
        "patch": "@@ -459,5 +459,23 @@ void HelpMessageBox::showOrPrint()\n #endif\n }\n \n+QString secondsToDHMS(int nDuration)\n+{\n+    QString strResult;\n+\n+    int nSeconds = (int)(nDuration % 60);\n+    nDuration /= 60;\n+    int nMinutes = (int)(nDuration % 60);\n+    nDuration /= 60;\n+    int nHours = (int)(nDuration % 24);\n+    int nDays = (int)(nDuration / 24);\n+    if((nHours == 0) && (nDays == 0))\n+        return strResult.sprintf(\"%02d:%02d\", nMinutes, nSeconds);\n+    if (nDays == 0)\n+        return strResult.sprintf(\"%02d:%02d:%02d\", nHours, nMinutes, nSeconds);\n+\n+    return strResult.sprintf(\"%dd%02d:%02d:%02d\", nDays, nHours, nMinutes, nSeconds);\n+}\n+\n } // namespace GUIUtil\n "
      },
      {
        "sha": "2045929d371d7455bf2f71a73c15fa5d403b91ce",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7d9129928ceb082856de2fb4372232525502c1d/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7d9129928ceb082856de2fb4372232525502c1d/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=e7d9129928ceb082856de2fb4372232525502c1d",
        "patch": "@@ -115,6 +115,9 @@ namespace GUIUtil\n         QString uiOptions;\n     };\n \n+    // Convert seconds to DD:HH:MM:SS format\n+    QString secondsToDHMS(int nDuration);\n+\n } // namespace GUIUtil\n \n #endif // GUIUTIL_H"
      }
    ]
  }
]