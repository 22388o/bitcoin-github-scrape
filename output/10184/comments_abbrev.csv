TheBlueMatt,2017-04-11T22:42:50Z,"Isnt it a much simpler approach to just switch the keypool set to two separate sets instead? On wallet load we read each keypool entry from disk anyway, so just caching it differently should be trivial.",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-293421535,293421535,
NicolasDorier,2017-04-12T02:32:58Z,"I think this would be the right long term approach. I don't think it is simple to change though. This PR is just some tape on the current approach.\n\nAnyway, I take a look, maybe it is not as complicated as I think.",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-293455088,293455088,
jonasschnelli,2017-04-12T12:50:03Z,"Long term, keypools do make little sense to me, in conjunction with HD. For encrypted wallets, we may want to disable any private key export function and use public key derivation (and remove both keypools). For the HD lookup window, we can generate (in memory) ~+50 keys during startup and extend it whenever the user retrieves a new address. IMO there is no need to persist the set.\n\nI'm not su",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-293565605,293565605,
TheBlueMatt,2017-04-12T14:17:25Z,"@jonasschnelli I think we very much need to fix the performance regressions before 0.15. The introduction of many disk hits on some paths is potentially a huge issue for some users.\n\nI'm slightly confused about this PR, however. Am I reading it correctly to think that its just a different way of identifying keys and the actual performance improvements will come in a later PR?",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-293591266,293591266,
NicolasDorier,2017-04-13T07:32:49Z,"@TheBlueMatt I think this PR is enough to solve current inconvenience.\n\nBefore:\n\nTopUp of 100 key will fill the keypool in the following way:\n\n[external1][external2]...[external100][internal1][internal2]...[internal100]\n\nNow if you call ` ReserveKeyFromPool` with `internal=true` this create 100 disk hit.\n\nThis PR makes it so TopUp of 100 key fill the keypool in the following wa",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-293814988,293814988,
TheBlueMatt,2017-04-13T12:53:47Z,"@NicolasDorier ahh, indeed, I was being dense. Still, we should also fix the massive slowdown in keypool counting (which I somehow assumed this was meant to also solve, though in a super roundabout way).\n\nOn April 13, 2017 3:32:54 AM EDT, Nicolas Dorier <notifications@github.com> wrote:\n>@TheBlueMatt I think this PR is enough to solve current inconvenience.\n>\n>Before:\n>\n>TopUp of 100 key wi",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-293886902,293886902,
NicolasDorier,2017-04-13T14:44:11Z,"@TheBlueMatt I don't think the perf regression is that bad. The only time there is a count is during `TopUpKeyPool`, which is slow anyway. With this PR the perf regression become +1 disk hit per call to `ReserveKeyFromPool`, which is not that bad.",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-293916092,293916092,
TheBlueMatt,2017-04-13T14:50:08Z,"@NicolasDorier There are also a performance regression in GetOldestKeyPoolTime(), making getinfo and getwalletinfo have to iterate the entire keypool reading each element from disk. Note that TopUpKeyPool is called in a bunch of places, and isnt supposed to always be slow, as it is often called to top up the keypool by generating one or zero keys.",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-293917783,293917783,
NicolasDorier,2017-04-14T01:56:07Z,"@TheBlueMatt I think the problem of `TopUpKeyPool` is orthogonal to this PR. If we solve the `TopUpKeyPool` problem by caching the count, then we would still have the problem of 100 disk hit when creating internal key.\n\nExcept if we cache the keys of the pool itself, and not only the count.",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-294066313,294066313,
TheBlueMatt,2017-04-14T20:01:10Z,"@NicolasDorier yes, that was my original suggestion - split setKeyPool into two (since we already cache the sets of keys, might as well split them to keep extra information), and then you can fix TopUpKeyPool and all the other issues in one go :).",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-294225274,294225274,
jonasschnelli,2017-04-19T10:10:26Z,"To add some benchmarks to those speculation:\nSystem: host = OSX 2.9 GHz Intel Core i7, running a Ubuntu 16.10 VM with all 8 cores.\n\nI'm not convinced that we have a performance issue there,.. though I'm not opposed against doing performance improvements like this PR.\n\n## 0.14.1rc2 (non chain switch)\n\n#### getwalletinfo with a single key\n```shell\nuser@ubuntu:~/Desktop$ time ./bitc",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-295201001,295201001,
NicolasDorier,2017-04-19T11:38:19Z,"@jonasschnelli what disk drive are you using, SSD? I fear this has way more impact on HD or network attached disk which suffer high latency.",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-295231995,295231995,
jonasschnelli,2017-04-19T12:01:52Z,@NicolasDorier: Yes. It was SSD. NAS for key storage? Is that a reasonable use-case? I will redo the tests on an external USB 2 spinning disk a.s.a.p.,https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-295240138,295240138,
NicolasDorier,2017-04-19T13:42:17Z,"@jonasschnelli my bitcoin instances are hosted on Azure for example, attached data storages drives have kind of bad latency. Around 7ms if I remember.\n\nLet me know, if it is not so bad with USB, I will also try on an azure instance.",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-295274554,295274554,
TheBlueMatt,2017-04-19T15:09:05Z,"@jonasschnelli sadly many, many servers use SANs for storage to avoid relying on a single server's storage infrastructure.",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-295303525,295303525,
jonasschnelli,2017-04-19T15:22:01Z,"I now connected a relatively old 2.5"" HDD (1TB, spinning) to my Host (OSX) and made it available via folder sharing.\n\nI can't see even a mild performance issue.\n\nThe results are:\n\n## 0.14.1rc2\n\n### getwalletinfo with a single key keypool:\n```shell\ntime ./bitcoin-0.14.1/bin/bitcoin-cli --regtest --datadir=/mnt/hgfs/dummy/n1 getwalletinfo\n{\n  ""walletversion"": 130000,\n  ""bal",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-295308284,295308284,
jonasschnelli,2017-04-19T15:27:58Z,"@TheBlueMatt @NicolasDorier:\nSAN for servers make sense. But here we talk about key material, maybe even secret key material.\nStoring something like this on an Azure system or VPS SAN can be reckless. \nWhat would be the worst case if the SAN/Cloud provider could inject/alter the pubkeys during fetch?\nCould an attacker re-route incoming funds?\n\nIMO full nodes (especially those with `--e",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-295310420,295310420,
TheBlueMatt,2017-04-19T17:13:50Z,"@jonasschnelli see #10235, I think the changes are pretty simple, so still worth doing. As for discouraging use on remote hosts, I dont buy that argument. What if someone buys insurance or has little money on it? Doesn't mean it shouldnt perform.",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-295350649,295350649,
NicolasDorier,2017-04-20T03:39:30Z,"@jonasschnelli I think the perf are not that bad actually. Will review #10235. It does not seems that bad to fix properly.\n\nI am using Bitcoin Core more for coin tracking with watch only and the hdwatchonly. \n\nWhen it is not the case, it really depends on how much money are stored on it, versus the cost and inconvenience of hosting my own physical server.\n",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-295567676,295567676,
NicolasDorier,2017-04-20T03:57:55Z,"Closing in favor of https://github.com/bitcoin/bitcoin/pull/10235 which solve the problem completely, and  simplify things.",https://github.com/bitcoin/bitcoin/pull/10184#issuecomment-295571231,295571231,
