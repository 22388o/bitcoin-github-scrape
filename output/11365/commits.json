[
  {
    "sha": "634e38ca711ae9c22149d4cad01d2e4b4d90fe8e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MzRlMzhjYTcxMWFlOWMyMjE0OWQ0Y2FkMDFkMmU0YjRkOTBmZThl",
    "commit": {
      "author": {
        "name": "Anditto Heristyo",
        "email": "anditto.heristyo@gmail.com",
        "date": "2017-05-31T05:22:56Z"
      },
      "committer": {
        "name": "Anditto Heristyo",
        "email": "anditto.heristyo@gmail.com",
        "date": "2017-09-19T09:27:03Z"
      },
      "message": "[Tests] Add Qt GUI tests to Overview and ReceiveCoin Page",
      "tree": {
        "sha": "c1b7b66a880ac7992a4fe4f47e24a01b47f7d602",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1b7b66a880ac7992a4fe4f47e24a01b47f7d602"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/634e38ca711ae9c22149d4cad01d2e4b4d90fe8e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/634e38ca711ae9c22149d4cad01d2e4b4d90fe8e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/634e38ca711ae9c22149d4cad01d2e4b4d90fe8e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/634e38ca711ae9c22149d4cad01d2e4b4d90fe8e/comments",
    "author": {
      "login": "anditto",
      "id": 1005598,
      "node_id": "MDQ6VXNlcjEwMDU1OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1005598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anditto",
      "html_url": "https://github.com/anditto",
      "followers_url": "https://api.github.com/users/anditto/followers",
      "following_url": "https://api.github.com/users/anditto/following{/other_user}",
      "gists_url": "https://api.github.com/users/anditto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anditto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anditto/subscriptions",
      "organizations_url": "https://api.github.com/users/anditto/orgs",
      "repos_url": "https://api.github.com/users/anditto/repos",
      "events_url": "https://api.github.com/users/anditto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anditto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "anditto",
      "id": 1005598,
      "node_id": "MDQ6VXNlcjEwMDU1OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1005598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/anditto",
      "html_url": "https://github.com/anditto",
      "followers_url": "https://api.github.com/users/anditto/followers",
      "following_url": "https://api.github.com/users/anditto/following{/other_user}",
      "gists_url": "https://api.github.com/users/anditto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anditto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anditto/subscriptions",
      "organizations_url": "https://api.github.com/users/anditto/orgs",
      "repos_url": "https://api.github.com/users/anditto/repos",
      "events_url": "https://api.github.com/users/anditto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anditto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ce2f3d0d33346e9f0e96851689ee6550b2a72e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ce2f3d0d33346e9f0e96851689ee6550b2a72e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ce2f3d0d33346e9f0e96851689ee6550b2a72e3"
      }
    ],
    "stats": {
      "total": 73,
      "additions": 71,
      "deletions": 2
    },
    "files": [
      {
        "sha": "eeae58bd05a9af7e06789a0955e9b2cd29990b88",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 71,
        "deletions": 2,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/634e38ca711ae9c22149d4cad01d2e4b4d90fe8e/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/634e38ca711ae9c22149d4cad01d2e4b4d90fe8e/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=634e38ca711ae9c22149d4cad01d2e4b4d90fe8e",
        "patch": "@@ -13,6 +13,10 @@\n #include \"test/test_bitcoin.h\"\n #include \"validation.h\"\n #include \"wallet/wallet.h\"\n+#include \"qt/overviewpage.h\"\n+#include \"qt/receivecoinsdialog.h\"\n+#include \"qt/recentrequeststablemodel.h\"\n+#include \"qt/receiverequestdialog.h\"\n \n #include <QAbstractButton>\n #include <QAction>\n@@ -21,6 +25,9 @@\n #include <QPushButton>\n #include <QTimer>\n #include <QVBoxLayout>\n+#include <QTextEdit>\n+#include <QListView>\n+#include <QDialogButtonBox>\n \n namespace\n {\n@@ -140,7 +147,7 @@ void BumpFee(TransactionView& view, const uint256& txid, bool expectDisabled, st\n //     src/qt/test/test_bitcoin-qt -platform xcb      # Linux\n //     src/qt/test/test_bitcoin-qt -platform windows  # Windows\n //     src/qt/test/test_bitcoin-qt -platform cocoa    # macOS\n-void TestSendCoins()\n+void TestGUI()\n {\n     // Set up wallet and chain with 105 blocks (5 mature blocks for spending).\n     TestChain100Setup test;\n@@ -184,6 +191,68 @@ void TestSendCoins()\n     BumpFee(transactionView, txid2, false /* expect disabled */, {} /* expected error */, false /* cancel */);\n     BumpFee(transactionView, txid2, true /* expect disabled */, \"already bumped\" /* expected error */, false /* cancel */);\n \n+    // Check current balance on OverviewPage\n+    OverviewPage overviewPage(platformStyle.get());\n+    overviewPage.setWalletModel(&walletModel);\n+    QLabel* balanceLabel = overviewPage.findChild<QLabel*>(\"labelBalance\");\n+    QString balanceText = balanceLabel->text();\n+    int unit = walletModel.getOptionsModel()->getDisplayUnit();\n+    CAmount balance = walletModel.getBalance();\n+    QString balanceComparison = BitcoinUnits::formatWithUnit(unit, balance, false, BitcoinUnits::separatorAlways);\n+    QCOMPARE(balanceText, balanceComparison);\n+\n+    // Check Request Payment button\n+    ReceiveCoinsDialog receiveCoinsDialog(platformStyle.get());\n+    receiveCoinsDialog.setModel(&walletModel);\n+    RecentRequestsTableModel* requestTableModel = walletModel.getRecentRequestsTableModel();\n+\n+    // Label input\n+    QLineEdit* labelInput = receiveCoinsDialog.findChild<QLineEdit*>(\"reqLabel\");\n+    labelInput->setText(\"TEST_LABEL_1\");\n+\n+    // Amount input\n+    BitcoinAmountField* amountInput = receiveCoinsDialog.findChild<BitcoinAmountField*>(\"reqAmount\");\n+    amountInput->setValue(1);\n+\n+    // Message input\n+    QLineEdit* messageInput = receiveCoinsDialog.findChild<QLineEdit*>(\"reqMessage\");\n+    messageInput->setText(\"TEST_MESSAGE_1\");\n+    int initialRowCount = requestTableModel->rowCount({});\n+    QPushButton* requestPaymentButton = receiveCoinsDialog.findChild<QPushButton*>(\"receiveButton\");\n+    requestPaymentButton->click();\n+    for (QWidget* widget : QApplication::topLevelWidgets()) {\n+        if (widget->inherits(\"ReceiveRequestDialog\")) {\n+            ReceiveRequestDialog* receiveRequestDialog = qobject_cast<ReceiveRequestDialog*>(widget);\n+            QTextEdit* rlist = receiveRequestDialog->QObject::findChild<QTextEdit*>(\"outUri\");\n+            QString paymentText = rlist->toPlainText();\n+            QStringList paymentTextList = paymentText.split('\\n');\n+            QCOMPARE(paymentTextList.at(0), QString(\"Payment information\"));\n+            QVERIFY(paymentTextList.at(1).indexOf(QString(\"URI: bitcoin:\")) != -1);\n+            QVERIFY(paymentTextList.at(2).indexOf(QString(\"Address:\")) != -1);\n+            QCOMPARE(paymentTextList.at(3), QString(\"Amount: 0.00000001 \") + QString::fromStdString(CURRENCY_UNIT));\n+            QCOMPARE(paymentTextList.at(4), QString(\"Label: TEST_LABEL_1\"));\n+            QCOMPARE(paymentTextList.at(5), QString(\"Message: TEST_MESSAGE_1\"));\n+        }\n+    }\n+\n+    // Clear button\n+    QPushButton* clearButton = receiveCoinsDialog.findChild<QPushButton*>(\"clearButton\");\n+    clearButton->click();\n+    QCOMPARE(labelInput->text(), QString(\"\"));\n+    QCOMPARE(amountInput->value(), CAmount(0));\n+    QCOMPARE(messageInput->text(), QString(\"\"));\n+\n+    // Check addition to history\n+    int currentRowCount = requestTableModel->rowCount({});\n+    QCOMPARE(currentRowCount, initialRowCount+1);\n+\n+    // Check Remove button\n+    QTableView* table = receiveCoinsDialog.findChild<QTableView*>(\"recentRequestsView\");\n+    table->selectRow(currentRowCount-1);\n+    QPushButton* removeRequestButton = receiveCoinsDialog.findChild<QPushButton*>(\"removeRequestButton\");\n+    removeRequestButton->click();\n+    QCOMPARE(requestTableModel->rowCount({}), currentRowCount-1);\n+\n     bitdb.Flush(true);\n     bitdb.Reset();\n }\n@@ -192,5 +261,5 @@ void TestSendCoins()\n \n void WalletTests::walletTests()\n {\n-    TestSendCoins();\n+    TestGUI();\n }"
      }
    ]
  }
]