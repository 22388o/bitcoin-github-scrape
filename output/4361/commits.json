[
  {
    "sha": "49675884c4c5956da90ec2b65ea9234060ddd635",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTY3NTg4NGM0YzU5NTZkYTkwZWMyYjY1ZWE5MjM0MDYwZGRkNjM1",
    "commit": {
      "author": {
        "name": "LongShao007",
        "email": "007longshao@gmail.com",
        "date": "2014-06-18T05:01:42Z"
      },
      "committer": {
        "name": "LongShao007",
        "email": "007longshao@gmail.com",
        "date": "2014-06-18T05:01:42Z"
      },
      "message": "Merge pull request #1 from bitcoin/master\n\nMerge pull request",
      "tree": {
        "sha": "1da445959824eee87c6acd0002658cb84dc0075c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1da445959824eee87c6acd0002658cb84dc0075c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49675884c4c5956da90ec2b65ea9234060ddd635",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49675884c4c5956da90ec2b65ea9234060ddd635",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49675884c4c5956da90ec2b65ea9234060ddd635",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49675884c4c5956da90ec2b65ea9234060ddd635/comments",
    "author": {
      "login": "LongShao007",
      "id": 7669610,
      "node_id": "MDQ6VXNlcjc2Njk2MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7669610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LongShao007",
      "html_url": "https://github.com/LongShao007",
      "followers_url": "https://api.github.com/users/LongShao007/followers",
      "following_url": "https://api.github.com/users/LongShao007/following{/other_user}",
      "gists_url": "https://api.github.com/users/LongShao007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LongShao007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LongShao007/subscriptions",
      "organizations_url": "https://api.github.com/users/LongShao007/orgs",
      "repos_url": "https://api.github.com/users/LongShao007/repos",
      "events_url": "https://api.github.com/users/LongShao007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LongShao007/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "LongShao007",
      "id": 7669610,
      "node_id": "MDQ6VXNlcjc2Njk2MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7669610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LongShao007",
      "html_url": "https://github.com/LongShao007",
      "followers_url": "https://api.github.com/users/LongShao007/followers",
      "following_url": "https://api.github.com/users/LongShao007/following{/other_user}",
      "gists_url": "https://api.github.com/users/LongShao007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LongShao007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LongShao007/subscriptions",
      "organizations_url": "https://api.github.com/users/LongShao007/orgs",
      "repos_url": "https://api.github.com/users/LongShao007/repos",
      "events_url": "https://api.github.com/users/LongShao007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LongShao007/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a48355dc44e8b86c2fc9f8b7973ac9e81a295be7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a48355dc44e8b86c2fc9f8b7973ac9e81a295be7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a48355dc44e8b86c2fc9f8b7973ac9e81a295be7"
      },
      {
        "sha": "5694d1078172822caa8f43c1f535e7a9e423b8e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5694d1078172822caa8f43c1f535e7a9e423b8e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5694d1078172822caa8f43c1f535e7a9e423b8e3"
      }
    ],
    "stats": {
      "total": 7572,
      "additions": 4752,
      "deletions": 2820
    },
    "files": [
      {
        "sha": "719af42ac78025b7472fa96283e3cd5211dfa745",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -1,6 +1,6 @@\n ACLOCAL_AMFLAGS = -I src/m4\n SUBDIRS = src\n-.PHONY: deploy\n+.PHONY: deploy FORCE\n \n GZIP_ENV=\"-9n\"\n \n@@ -53,8 +53,8 @@ $(BITCOIN_WIN_INSTALLER): $(BITCOIND_BIN) $(BITCOIN_QT_BIN) $(BITCOIN_CLI_BIN)\n \t@test -f $(MAKENSIS) && $(MAKENSIS) $(top_builddir)/share/setup.nsi || \\\n \t  echo error: could not build $@\n \n-$(BITCOIND_BIN) $(BITCOIN_QT_BIN) $(BITCOIN_CLI_BIN):\n-\tmake -C $(dir $@) $(notdir $@)\n+$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n+\t$(MAKE) -C src $(patsubst src/%,%,$@)\n \n $(OSX_APP)/Contents/PkgInfo:\n \t$(MKDIR_P) $(@D)"
      },
      {
        "sha": "102aa562011bf2377a161246f0cf9cb1ecfa3ecd",
        "filename": "README.md",
        "status": "modified",
        "additions": 37,
        "deletions": 2,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -49,8 +49,8 @@ Testing\n -------\n \n Testing and code review is the bottleneck for development; we get more pull\n-requests than we can review and test. Please be patient and help out, and\n-remember this is a security-critical project where any mistake might cost people\n+requests than we can review and test on short notice. Please be patient and help out by testing\n+other people's pull requests, and remember this is a security-critical project where any mistake might cost people\n lots of money.\n \n ### Automated Testing\n@@ -81,3 +81,38 @@ Periodically the translations are pulled from Transifex and merged into the git\n \n **Important**: We do not accept translation changes as github pull request because the next\n pull from Transifex would automatically overwrite them again.\n+\n+Development tips and tricks\n+---------------------------\n+\n+**compiling for debugging**\n+\n+Run configure with the --enable-debug option, then make. Or run configure with\n+CXXFLAGS=\"-g -ggdb -O0\" or whatever debug flags you need.\n+\n+**debug.log**\n+\n+If the code is behaving strangely, take a look in the debug.log file in the data directory;\n+error and debugging message are written there.\n+\n+The -debug=... command-line option controls debugging; running with just -debug will turn\n+on all categories (and give you a very large debug.log file).\n+\n+The Qt code routes qDebug() output to debug.log under category \"qt\": run with -debug=qt\n+to see it.\n+\n+**testnet and regtest modes**\n+\n+Run with the -testnet option to run with \"play bitcoins\" on the test network, if you\n+are testing multi-machine code that needs to operate across the internet.\n+\n+If you are testing something that can run on one machine, run with the -regtest option.\n+In regression test mode blocks can be created on-demand; see qa/rpc-tests/ for tests\n+that run in -regest mode.\n+\n+**DEBUG_LOCKORDER**\n+\n+Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n+can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure\n+CXXFLAGS=\"-DDEBUG_LOCKORDER -g\") inserts run-time checks to keep track of what locks\n+are held, and adds warning to the debug.log file if inconsistencies are detected."
      },
      {
        "sha": "d8521ad3ad5f5b8be3fbe2efc5dc9b624342229f",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -303,6 +303,8 @@ INCLUDES=\"$INCLUDES $PTHREAD_CFLAGS\"\n # they also need to be passed down to any subprojects. Pull the results out of\n # the cache and add them to CPPFLAGS.\n AC_SYS_LARGEFILE\n+# detect POSIX or GNU variant of strerror_r\n+AC_FUNC_STRERROR_R\n \n if test x$ac_cv_sys_file_offset_bits != x &&\n    test x$ac_cv_sys_file_offset_bits != xno &&\n@@ -664,6 +666,9 @@ AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet == xyes])\n+AM_CONDITIONAL([ENABLE_TESTS],[test x$use_tests == xyes])\n+AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt == xyes])\n+AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$use_tests$bitcoin_enable_qt_test = xyesyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov == xyes])\n AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\n@@ -693,7 +698,7 @@ AC_SUBST(LEVELDB_TARGET_FLAGS)\n AC_SUBST(BUILD_TEST)\n AC_SUBST(BUILD_QT)\n AC_SUBST(BUILD_TEST_QT)\n-AC_CONFIG_FILES([Makefile src/Makefile src/test/Makefile src/qt/Makefile src/qt/test/Makefile share/setup.nsi share/qt/Info.plist])\n+AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n AC_CONFIG_FILES([qa/pull-tester/build-tests.sh],[chmod +x qa/pull-tester/build-tests.sh])\n AC_OUTPUT"
      },
      {
        "sha": "0aa8674af9c8f4c20c1d3eaf0f5e158cd3b8cc63",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 63,
        "deletions": 32,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -1,79 +1,110 @@\n-# bitcoin.conf configuration file. Lines beginning with # are comments.\n-\n-\n+##\n+## bitcoin.conf configuration file. Lines beginning with # are comments.\n+##\n+ \n # Network-related settings:\n \n # Run on the test network instead of the real bitcoin network.\n-#testnet=1\n+#testnet=0\n+\n+# Run a regression test network\n+#regtest=0\n \n # Connect via a socks4 proxy\n #proxy=127.0.0.1:9050\n \n+##############################################################\n+##            Quick Primer on addnode vs connect            ##\n+##  Let's say for instance you use addnode=4.2.2.4          ##\n+##  addnode will connect you to and tell you about the      ##\n+##    nodes connected to 4.2.2.4.  In addition it will tell ##\n+##    the other nodes connected to it that you exist so     ##\n+##    they can connect to you.                              ##\n+##  connect will not do the above when you 'connect' to it. ##\n+##    It will *only* connect you to 4.2.2.4 and no one else.##\n+##                                                          ##\n+##  So if you're behind a firewall, or have other problems  ##\n+##  finding nodes, add some using 'addnode'.                ##\n+##                                                          ##\n+##  If you want to stay private, use 'connect' to only      ##\n+##  connect to \"trusted\" nodes.                             ##\n+##                                                          ##\n+##  If you run multiple nodes on a LAN, there's no need for ##\n+##  all of them to open lots of connections.  Instead       ##\n+##  'connect' them all to one node that is port forwarded   ##\n+##  and has lots of connections.                            ##\n+##       Thanks goes to [Noodle] on Freenode.               ##\n+##############################################################\n+\n # Use as many addnode= settings as you like to connect to specific peers\n #addnode=69.164.218.197\n #addnode=10.0.0.2:8333\n \n-# ... or use as many connect= settings as you like to connect ONLY\n-# to specific peers:\n+# Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n #connect=69.164.218.197\n #connect=10.0.0.1:8333\n \n+# Listening mode, enabled by default except when 'connect' is being used\n+#listen=1\n+\n # Maximum number of inbound+outbound connections.\n #maxconnections=\n \n-\n+#\n # JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n+#\n \n-# server=1 tells Bitcoin to accept JSON-RPC commands.\n-#server=1\n+# server=1 tells Bitcoin-QT and bitcoind to accept JSON-RPC commands\n+#server=0\n \n # You must set rpcuser and rpcpassword to secure the JSON-RPC api\n #rpcuser=Ulysseys\n-#rpcpassword=YourSuperGreatPasswordNumber_385593\n+#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n+\n+# How many seconds bitcoin will wait for a complete RPC HTTP request.\n+# after the HTTP connection is established. \n+#rpctimeout=30\n \n-# By default, only RPC connections from localhost are allowed.  Specify\n-# as many rpcallowip= settings as you like to allow connections from\n-# other hosts (and you may use * as a wildcard character):\n-#rpcallowip=10.1.1.34\n-#rpcallowip=192.168.1.*\n+# By default, only RPC connections from localhost are allowed.\n+# Specify as many rpcallowip= settings as you like to allow connections from other hosts,\n+# either as a single IPv4/IPv6 or with a subnet specification.\n+\n+# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n+# because the rpcpassword is transmitted over the network unencrypted.\n+\n+# server=1 tells Bitcoin-QT to accept JSON-RPC commands.\n+# it is also read by bitcoind to determine if RPC should be enabled \n+#rpcallowip=10.1.1.34/255.255.255.0\n+#rpcallowip=1.2.3.4/24\n+#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n \n # Listen for RPC connections on this TCP port:\n-rpcport=8332\n+#rpcport=8332\n \n # You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n # running on another host using this option:\n-rpcconnect=127.0.0.1\n+#rpcconnect=127.0.0.1\n \n # Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate\n # with Bitcoin -server or bitcoind\n #rpcssl=1\n \n # OpenSSL settings used when rpcssl=1\n-rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n-rpcsslcertificatechainfile=server.cert\n-rpcsslprivatekeyfile=server.pem\n+#rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n+#rpcsslcertificatechainfile=server.cert\n+#rpcsslprivatekeyfile=server.pem\n \n \n # Miscellaneous options\n \n-# Set gen=1 to attempt to generate bitcoins\n-gen=0\n-\n-# Use SSE instructions to try to generate bitcoins faster.\n-#4way=1\n-\n # Pre-generate this many public/private key pairs, so wallet backups will be valid for\n # both prior transactions and several dozen future transactions.\n-keypool=100\n+#keypool=100\n \n # Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n # are more likely than free transactions to be included in generated blocks, so may\n # be validated sooner.\n-paytxfee=0.00\n-\n-# Allow direct connections for the 'pay via IP address' feature.\n-#allowreceivebyip=1\n-\n+#paytxfee=0.00\n \n # User interface options\n "
      },
      {
        "sha": "82212221334ab96b2ddfdf31382c1dacb684522c",
        "filename": "contrib/gitian-descriptors/deps-linux.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/deps-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/deps-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-linux.yml?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -16,7 +16,7 @@ packages:\n reference_datetime: \"2013-06-01 00:00:00\"\n remotes: []\n files:\n-- \"openssl-1.0.1g.tar.gz\"\n+- \"openssl-1.0.1h.tar.gz\"\n - \"miniupnpc-1.9.tar.gz\"\n - \"qrencode-3.4.3.tar.bz2\"\n - \"protobuf-2.5.0.tar.bz2\"\n@@ -30,15 +30,15 @@ script: |\n   export TZ=UTC\n   export LIBRARY_PATH=\"$STAGING/lib\"\n   # Integrity Check\n-  echo \"53cb818c3b90e507a8348f4f5eaedb05d8bfe5358aabb508b7263cc670c3e028  openssl-1.0.1g.tar.gz\"  | sha256sum -c\n+  echo \"9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz\"  | sha256sum -c\n   echo \"2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz\"   | sha256sum -c\n   echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n   echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n   echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n \n   #\n-  tar xzf openssl-1.0.1g.tar.gz\n-  cd openssl-1.0.1g\n+  tar xzf openssl-1.0.1h.tar.gz\n+  cd openssl-1.0.1h\n   #   need -fPIC to avoid relocation error in 64 bit builds\n   ./config no-shared no-zlib no-dso no-krb5 --openssldir=$STAGING -fPIC\n   #   need to build OpenSSL with faketime because a timestamp is embedded into cversion.o\n@@ -95,4 +95,4 @@ script: |\n   done\n   #\n   cd $STAGING\n-  find include lib bin host | sort | zip -X@ $OUTDIR/bitcoin-deps-linux${GBUILD_BITS}-gitian-r5.zip\n+  find include lib bin host | sort | zip -X@ $OUTDIR/bitcoin-deps-linux${GBUILD_BITS}-gitian-r6.zip"
      },
      {
        "sha": "fabc2949ebb32b9e50d4ab64708b16e97d18635b",
        "filename": "contrib/gitian-descriptors/deps-win.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/deps-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/deps-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win.yml?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -14,7 +14,7 @@ packages:\n reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n-- \"openssl-1.0.1g.tar.gz\"\n+- \"openssl-1.0.1h.tar.gz\"\n - \"db-4.8.30.NC.tar.gz\"\n - \"miniupnpc-1.9.tar.gz\"\n - \"zlib-1.2.8.tar.gz\"\n@@ -28,7 +28,7 @@ script: |\n   INDIR=$HOME/build\n   TEMPDIR=$HOME/tmp\n   # Input Integrity Check\n-  echo \"53cb818c3b90e507a8348f4f5eaedb05d8bfe5358aabb508b7263cc670c3e028  openssl-1.0.1g.tar.gz\"  | sha256sum -c\n+  echo \"9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz\"  | sha256sum -c\n   echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n   echo \"2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz\"   | sha256sum -c\n   echo \"36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d  zlib-1.2.8.tar.gz\"      | sha256sum -c\n@@ -48,8 +48,8 @@ script: |\n     mkdir -p $INSTALLPREFIX $BUILDDIR\n     cd $BUILDDIR\n     #\n-    tar xzf $INDIR/openssl-1.0.1g.tar.gz\n-    cd openssl-1.0.1g\n+    tar xzf $INDIR/openssl-1.0.1h.tar.gz\n+    cd openssl-1.0.1h\n     if [ \"$BITS\" == \"32\" ]; then\n       OPENSSL_TGT=mingw\n     else\n@@ -124,5 +124,5 @@ script: |\n     done\n     #\n     cd $INSTALLPREFIX\n-    find include lib | sort | zip -X@ $OUTDIR/bitcoin-deps-win$BITS-gitian-r12.zip\n+    find include lib | sort | zip -X@ $OUTDIR/bitcoin-deps-win$BITS-gitian-r13.zip\n   done # for BITS in"
      },
      {
        "sha": "65a6c3c1e9c03045d74f662e79f8fec64fcfc3f2",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -25,8 +25,8 @@ remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"bitcoin-deps-linux32-gitian-r5.zip\"\n-- \"bitcoin-deps-linux64-gitian-r5.zip\"\n+- \"bitcoin-deps-linux32-gitian-r6.zip\"\n+- \"bitcoin-deps-linux64-gitian-r6.zip\"\n - \"boost-linux32-1.55.0-gitian-r1.zip\"\n - \"boost-linux64-1.55.0-gitian-r1.zip\"\n - \"qt-linux32-4.6.4-gitian-r1.tar.gz\"\n@@ -43,7 +43,7 @@ script: |\n   #\n   mkdir -p $STAGING\n   cd $STAGING\n-  unzip ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r5.zip\n+  unzip ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r6.zip\n   unzip ../build/boost-linux${GBUILD_BITS}-1.55.0-gitian-r1.zip\n   tar -zxf ../build/qt-linux${GBUILD_BITS}-4.6.4-gitian-r1.tar.gz\n   cd ../build"
      },
      {
        "sha": "44b5de9be3fb39639b5e954203c616269527f984",
        "filename": "contrib/gitian-descriptors/gitian-osx-bitcoin.yml",
        "status": "modified",
        "additions": 10,
        "deletions": 15,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/gitian-osx-bitcoin.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/gitian-osx-bitcoin.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-bitcoin.yml?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -17,33 +17,28 @@ remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n files:\n-- \"osx-native-depends-r2.tar.gz\"\n-- \"osx-depends-r2.tar.gz\"\n-- \"osx-depends-qt-5.2.1-r2.tar.gz\"\n-- \"MacOSX10.6.pkg\"\n+- \"osx-native-depends-r3.tar.gz\"\n+- \"osx-depends-r4.tar.gz\"\n+- \"osx-depends-qt-5.2.1-r4.tar.gz\"\n+- \"MacOSX10.7.sdk.tar.gz\"\n \n script: |\n \n-  echo \"a2ccf2299de4e0bb88bd17a3355f02b747575b97492c7c2f5b789a64ccc4cbd6  MacOSX10.6.pkg\" | sha256sum -c\n-\n   HOST=x86_64-apple-darwin11\n   PREFIX=`pwd`/osx-cross-depends/prefix\n-  SDK=`pwd`/osx-cross-depends/SDKs/MacOSX10.6.sdk\n+  SDK=`pwd`/osx-cross-depends/SDKs/MacOSX10.7.sdk\n   NATIVEPREFIX=`pwd`/osx-cross-depends/native-prefix\n   export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n \n   export SOURCES_PATH=`pwd`\n \n-  mkdir osx-cross-depends\n+  mkdir -p osx-cross-depends/SDKs\n \n-  cd osx-cross-depends\n-  mkdir -p SDKs\n-  7z -bd -so -y e ${SOURCES_PATH}/MacOSX10.6.pkg Payload | gzip -d -c | cpio -i\n-  cd ..\n+  tar -C osx-cross-depends/SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n \n-  tar -C osx-cross-depends -xf osx-native-depends-r2.tar.gz\n-  tar -C osx-cross-depends -xf osx-depends-r2.tar.gz\n-  tar -C osx-cross-depends -xf osx-depends-qt-5.2.1-r2.tar.gz\n+  tar -C osx-cross-depends -xf osx-native-depends-r3.tar.gz\n+  tar -C osx-cross-depends -xf osx-depends-r4.tar.gz\n+  tar -C osx-cross-depends -xf osx-depends-qt-5.2.1-r4.tar.gz\n   export PATH=`pwd`/osx-cross-depends/native-prefix/bin:$PATH\n \n   cd bitcoin"
      },
      {
        "sha": "07a021cf0c59ac7d6f96c80ea1cc00b56a402e18",
        "filename": "contrib/gitian-descriptors/gitian-osx-depends.yml",
        "status": "modified",
        "additions": 11,
        "deletions": 12,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/gitian-osx-depends.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/gitian-osx-depends.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-depends.yml?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -15,23 +15,22 @@ files:\n - \"boost_1_55_0.tar.bz2\"\n - \"db-4.8.30.NC.tar.gz\"\n - \"miniupnpc-1.9.tar.gz\"\n-- \"openssl-1.0.1g.tar.gz\"\n+- \"openssl-1.0.1h.tar.gz\"\n - \"protobuf-2.5.0.tar.bz2\"\n - \"qrencode-3.4.3.tar.bz2\"\n-- \"MacOSX10.6.pkg\"\n-- \"osx-native-depends-r2.tar.gz\"\n+- \"MacOSX10.7.sdk.tar.gz\"\n+- \"osx-native-depends-r3.tar.gz\"\n \n script: |\n \n   echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\" | sha256sum -c\n   echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\" | sha256sum -c\n   echo \"2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz\" | sha256sum -c\n-  echo \"53cb818c3b90e507a8348f4f5eaedb05d8bfe5358aabb508b7263cc670c3e028  openssl-1.0.1g.tar.gz\" | sha256sum -c\n+  echo \"9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz\" | sha256sum -c\n   echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n   echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n-  echo \"a2ccf2299de4e0bb88bd17a3355f02b747575b97492c7c2f5b789a64ccc4cbd6  MacOSX10.6.pkg\" | sha256sum -c\n \n-  REVISION=r2\n+  REVISION=r4\n   export SOURCES_PATH=`pwd`\n   export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n   export PATH=$HOME:$PATH\n@@ -44,7 +43,7 @@ script: |\n   PREFIX=`pwd`/prefix\n   NATIVEPREFIX=`pwd`/native-prefix\n   BUILD_BASE=`pwd`/build\n-  SDK=`pwd`/SDKs/MacOSX10.6.sdk\n+  SDK=`pwd`/SDKs/MacOSX10.7.sdk\n   HOST=x86_64-apple-darwin11\n   MIN_VERSION=10.6\n \n@@ -70,10 +69,10 @@ script: |\n   mkdir -p ${PREFIX}/lib\n   mkdir -p ${BUILD_BASE}\n \n-  mkdir -p ${SDK}\n-  7z -bd -so -y e ${SOURCES_PATH}/MacOSX10.6.pkg Payload | gzip -d -c | cpio -i\n+  mkdir -p SDKs\n+  tar -C SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n \n-  tar xf /home/ubuntu/build/osx-native-depends-r2.tar.gz\n+  tar xf /home/ubuntu/build/osx-native-depends-r3.tar.gz\n \n   # bdb\n   SOURCE_FILE=${SOURCES_PATH}/db-4.8.30.NC.tar.gz\n@@ -89,8 +88,8 @@ script: |\n   popd\n \n   # openssl\n-  SOURCE_FILE=${SOURCES_PATH}/openssl-1.0.1g.tar.gz\n-  BUILD_DIR=${BUILD_BASE}/openssl-1.0.1g\n+  SOURCE_FILE=${SOURCES_PATH}/openssl-1.0.1h.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/openssl-1.0.1h\n \n   tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n   pushd ${BUILD_DIR}"
      },
      {
        "sha": "a753ad704ffe70d56f20be3562f2152d48862be9",
        "filename": "contrib/gitian-descriptors/gitian-osx-native.yml",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/gitian-osx-native.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/gitian-osx-native.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-native.yml?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -24,7 +24,7 @@ files:\n - \"dyld-195.5.tar.gz\"\n - \"ld64-127.2.tar.gz\"\n - \"protobuf-2.5.0.tar.bz2\"\n-- \"MacOSX10.6.pkg\"\n+- \"MacOSX10.7.sdk.tar.gz\"\n - \"cdrkit-1.1.11.tar.gz\"\n - \"libdmg-hfsplus-v0.1.tar.gz\"\n - \"clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\"\n@@ -38,14 +38,13 @@ script: |\n   echo \"2cf0484c87cf79b606b351a7055a247dae84093ae92c747a74e0cde2c8c8f83c  dyld-195.5.tar.gz\" | sha256sum -c\n   echo \"97b75547b2bd761306ab3e15ae297f01e7ab9760b922bc657f4ef72e4e052142  ld64-127.2.tar.gz\" | sha256sum -c\n   echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n-  echo \"a2ccf2299de4e0bb88bd17a3355f02b747575b97492c7c2f5b789a64ccc4cbd6  MacOSX10.6.pkg\" | sha256sum -c\n   echo \"d1c030756ecc182defee9fe885638c1785d35a2c2a297b4604c0e0dcc78e47da  cdrkit-1.1.11.tar.gz\" | sha256sum -c\n   echo \"6569a02eb31c2827080d7d59001869ea14484c281efab0ae7f2b86af5c3120b3  libdmg-hfsplus-v0.1.tar.gz\" | sha256sum -c\n   echo \"b9d57a88f9514fa1f327a1a703756d0c1c960f4c58494a5bd80313245d13ffff  clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\" | sha256sum -c\n   echo \"cc12bdbd7a09f71cb2a6a3e6ec3e0abe885ca7111c2b47857f5095e5980caf4f  cdrkit-deterministic.patch\" | sha256sum -c\n \n \n-  REVISION=r2\n+  REVISION=r3\n   export REFERENCE_DATETIME\n   export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n   export FAKETIME=$REFERENCE_DATETIME\n@@ -78,7 +77,7 @@ script: |\n \n   NATIVEPREFIX=`pwd`/native-prefix\n   BUILD_BASE=`pwd`/build\n-  SDK=`pwd`/SDKs/MacOSX10.6.sdk\n+  SDK=`pwd`/SDKs/MacOSX10.7.sdk\n   HOST=x86_64-apple-darwin11\n   MIN_VERSION=10.6\n \n@@ -91,8 +90,8 @@ script: |\n   mkdir -p ${NATIVEPREFIX}/bin\n   mkdir -p ${NATIVEPREFIX}/lib\n \n-  mkdir -p ${SDK}\n-  7z -bd -so -y e ${SOURCES_PATH}/MacOSX10.6.pkg Payload | gzip -d -c | cpio -i\n+  mkdir -p SDKs\n+  tar -C SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n \n   #  Clang\n   SOURCE_FILE=${SOURCES_PATH}/clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n@@ -112,7 +111,7 @@ script: |\n   tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n   mkdir -p ${BUILD_DIR}/sdks\n   pushd ${BUILD_DIR}/sdks;\n-  ln -sf ${SDK} MacOSX10.6.sdk\n+  ln -sf ${SDK} MacOSX10.7.sdk\n   ln -sf ${SOURCES_PATH}/cctools-809.tar.gz ${BUILD_DIR}/cctools2odcctools/cctools-809.tar.gz\n   ln -sf ${SOURCES_PATH}/ld64-127.2.tar.gz ${BUILD_DIR}/cctools2odcctools/ld64-127.2.tar.gz\n   ln -sf ${SOURCES_PATH}/dyld-195.5.tar.gz ${BUILD_DIR}/cctools2odcctools/dyld-195.5.tar.gz\n@@ -127,7 +126,7 @@ script: |\n   sed -i 's/\\# Dynamically linked LTO/\\t ;\\&\\n\\t linux*)\\n# Dynamically linked LTO/' ${BUILD_DIR}/cctools2odcctools/files/configure.ac\n \n   cd ${BUILD_DIR}/cctools2odcctools\n-  ./extract.sh --osxver 10.6\n+  ./extract.sh --osxver 10.7\n   cd odcctools-809\n   ./configure --prefix=${NATIVEPREFIX} --target=${HOST} CFLAGS=\"${CFLAGS} -I${NATIVEPREFIX}/include -D__DARWIN_UNIX03 -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS\" LDFLAGS=\"${LDFLAGS} -Wl,-rpath=\\\\\\$\\$ORIGIN/../lib\" --with-sysroot=${SDK}\n "
      },
      {
        "sha": "5e0ad9222a855c0b22a58470b975f280e7b37d2c",
        "filename": "contrib/gitian-descriptors/gitian-osx-qt.yml",
        "status": "modified",
        "additions": 9,
        "deletions": 15,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/gitian-osx-qt.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/gitian-osx-qt.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-qt.yml?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -13,16 +13,15 @@ reference_datetime: \"2013-06-01 00:00:00\"\n remotes: []\n files:\n - \"qt-everywhere-opensource-src-5.2.1.tar.gz\"\n-- \"osx-native-depends-r2.tar.gz\"\n-- \"osx-depends-r2.tar.gz\"\n-- \"MacOSX10.6.pkg\"\n+- \"osx-native-depends-r3.tar.gz\"\n+- \"osx-depends-r4.tar.gz\"\n+- \"MacOSX10.7.sdk.tar.gz\"\n \n script: |\n \n   echo \"84e924181d4ad6db00239d87250cc89868484a14841f77fb85ab1f1dbdcd7da1  qt-everywhere-opensource-src-5.2.1.tar.gz\" | sha256sum -c\n-  echo \"a2ccf2299de4e0bb88bd17a3355f02b747575b97492c7c2f5b789a64ccc4cbd6  MacOSX10.6.pkg\" | sha256sum -c\n \n-  REVISION=r2\n+  REVISION=r4\n   export SOURCES_PATH=`pwd`\n   export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n   export ZERO_AR_DATE=1\n@@ -42,7 +41,7 @@ script: |\n   PREFIX=`pwd`/prefix\n   NATIVEPREFIX=`pwd`/native-prefix\n   BUILD_BASE=`pwd`/build\n-  SDK=`pwd`/SDKs/MacOSX10.6.sdk\n+  SDK=`pwd`/SDKs/MacOSX10.7.sdk\n   HOST=x86_64-apple-darwin11\n   MIN_VERSION=10.6\n \n@@ -68,18 +67,13 @@ script: |\n   mkdir -p ${PREFIX}/lib\n   mkdir -p ${BUILD_BASE}\n \n-  mkdir -p ${SDK}\n-  7z -bd -so -y e ${SOURCES_PATH}/MacOSX10.6.pkg Payload | gzip -d -c | cpio -i\n-\n-  tar xf /home/ubuntu/build/osx-native-depends-r2.tar.gz\n-\n-\n   mkdir -p SDKs\n-  7z -bd -so -y e ${SOURCES_PATH}/MacOSX10.6.pkg Payload | gzip -d -c | cpio -i\n+  tar -C SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n+\n+  tar xf /home/ubuntu/build/osx-native-depends-r3.tar.gz\n \n-  tar xf /home/ubuntu/build/osx-native-depends-r2.tar.gz\n   export PATH=`pwd`/native-prefix/bin:$PATH\n-  tar xf /home/ubuntu/build/osx-depends-r2.tar.gz\n+  tar xf /home/ubuntu/build/osx-depends-r4.tar.gz\n \n   SOURCE_FILE=${SOURCES_PATH}/qt-everywhere-opensource-src-5.2.1.tar.gz\n   BUILD_DIR=${BUILD_BASE}/qt-everywhere-opensource-src-5.2.1"
      },
      {
        "sha": "245f15ccab873d323925d2571d599c94339624b0",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -26,8 +26,8 @@ files:\n - \"qt-win64-5.2.0-gitian-r3.zip\"\n - \"boost-win32-1.55.0-gitian-r6.zip\"\n - \"boost-win64-1.55.0-gitian-r6.zip\"\n-- \"bitcoin-deps-win32-gitian-r12.zip\"\n-- \"bitcoin-deps-win64-gitian-r12.zip\"\n+- \"bitcoin-deps-win32-gitian-r13.zip\"\n+- \"bitcoin-deps-win64-gitian-r13.zip\"\n - \"protobuf-win32-2.5.0-gitian-r4.zip\"\n - \"protobuf-win64-2.5.0-gitian-r4.zip\"\n script: |\n@@ -61,7 +61,7 @@ script: |\n     cd $STAGING\n     unzip $INDIR/qt-win${BITS}-5.2.0-gitian-r3.zip\n     unzip $INDIR/boost-win${BITS}-1.55.0-gitian-r6.zip\n-    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r12.zip\n+    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r13.zip\n     unzip $INDIR/protobuf-win${BITS}-2.5.0-gitian-r4.zip\n     if [ \"$NEEDDIST\" == \"1\" ]; then\n       # Make source code archive which is architecture independent so it only needs to be done once"
      },
      {
        "sha": "b163b4bb8c1f50a46ab04b65b18debd1b7b79113",
        "filename": "contrib/gitian-descriptors/qt-linux.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/qt-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/qt-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-linux.yml?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -40,6 +40,7 @@ script: |\n   tar xzf qt-everywhere-opensource-src-4.6.4.tar.gz\n   cd qt-everywhere-opensource-src-4.6.4\n   QTBUILDDIR=$(pwd)\n+  sed 's/TODAY=`date +%Y-%m-%d`/TODAY=2011-01-30/' -i configure\n \n   # Need to build 4.6-versioned host utilities as well (lrelease/qrc/lupdate/...)\n   ./configure -prefix $INSTALLPREFIX -confirm-license -release -opensource -no-qt3support -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -no-opengl -nomake examples -nomake demos -nomake docs"
      },
      {
        "sha": "7000c70051181da59984f878769598d73b9a7942",
        "filename": "contrib/gitian-descriptors/qt-win.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/qt-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-descriptors/qt-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win.yml?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -15,8 +15,8 @@ reference_datetime: \"2011-01-30 00:00:00\"\n remotes: []\n files:\n - \"qt-everywhere-opensource-src-5.2.0.tar.gz\"\n-- \"bitcoin-deps-win32-gitian-r12.zip\"\n-- \"bitcoin-deps-win64-gitian-r12.zip\"\n+- \"bitcoin-deps-win32-gitian-r13.zip\"\n+- \"bitcoin-deps-win64-gitian-r13.zip\"\n script: |\n   # Defines\n   export TZ=UTC\n@@ -48,7 +48,7 @@ script: |\n     #\n     # Need mingw-compiled openssl from bitcoin-deps:\n     cd $DEPSDIR\n-    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r12.zip\n+    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r13.zip\n     #\n     cd $BUILDDIR\n     #"
      },
      {
        "sha": "6b0bd240ba4cf8df485a8caa689717a12ef6b3c8",
        "filename": "contrib/gitian-downloader/cfields-key.pgp",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-downloader/cfields-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-downloader/cfields-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/cfields-key.pgp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.12 (GNU/Linux)\n+\n+mQINBFOHTh4BEADdKsRvmNhX+B+bcPsgMkp8ztwJA5g/rmrOlHQpKOOf4P2tAr6w\n+FmXCChWF9Iq3pDFQ0t0iq5rgisFPyrGVT/VToMmH+/PSLTyIdAlgkRYDMAPsMAFV\n+MaADH4yiAgJ3cdXtysjaNQV5O25ypqq6/obUjZJD5Enn6b/UgHe2+7LTmTNsskOx\n+5s/WPPht79EY1kM4JQfmDx68CsmqeSAlT6yeO3RQcLn/l46cfXiwzMO4h1hsZS1r\n+pgciRp0EHK9uAjF2rjqt8v4SDxwyTnwfpBBulzvH9mBf+HRXWzoTMR4sC/oOZext\n+hKAH/ex47BxN3HU3ftNhCK2c1xcU1UOGSjbf0RdbwuSCxxa7mktEDumvOxAk9EBB\n++PDPv7jO1FBK3rsJdscYQIL0AiRyO49VfNLARa34OqUi8pOAxKBQ9plO02W1gp7a\n+DVBPI05TZ46Y8dTR2Bc1raAgOyxnXM7jfiQG2gSULiKAJAI4HwOiodaiiHAxDaIo\n+a3mtsmfN25TZUQuA0I0BvHbJvLRlVnyZm3XVOcwReKJpZJV4qRhd3XNrERZdz6ZK\n+cAZnyC/X+Uzo4HfnVSsJk1GpIa4seYyrVCFfHMiAA6SkgAUFbV26KCOv4rNR2GlV\n+l2fVhu1RKOEUJ8nRcEqf93SehRVYdI67LepIPgmIwi0KG4HhoTbIHDAKWQARAQAB\n+tCtDb3J5IEZpZWxkcyA8Y2ZpZWxkc0BiaXRjb2luZm91bmRhdGlvbi5vcmc+iQI4\n+BBMBAgAiBQJTh04eAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRAcJJH/\n+6w73cBTiEADIGZSueBFmaOTJCgasKGguHns/n8P94EQBZr07rrgN99Rzp85WvDUN\n+Qa72wj3GNcAffN7aZlIWv4g+fjyr9AzHekjI/7iwwSYIfjfTR/xRUW7czRfKAOrK\n+iwpEzgv440i7PBvkS/AhNdUNkm+cJvaQUej/F2/O52qDLEpHuzvjAUUWlSeF9/oO\n+AjM9dfC24L5k5cVwQvH9noxk3EyuE7BuiGE5a+kKiORrtxiHeUG6GYQxuqrPucLU\n+fI67ETyXa0YSpYm5/O65BKMTMpmkMvv1JC2kqqsYTrO5p158CrKzq2xvpuG4ABsb\n+9KwICUGW31Ndr6TXwQJFa1b7VK4G1g6M1DFkVTOLJnEyOwgYxsXrV5QFpzpAOAji\n+6KcxNGeow1avAFYbqjjLgu9UNuq6b8du13hjkQxVs2NAP1Kd/u2ADwxQHMhZGVEC\n+9LIcLVSP9ShY6fR8m6fwSlJfpiV81uLNVD8KIyvp+pYTQ/FnxoPhPIwalYquBZKi\n+0u38igW75IzZ0fYvJgTumE/8ofSVkutVtrQb21eJclVrJGMNweTlJcJhAWdKkjDC\n+e6mSj8GItKV1ef+eusXSzs/wPyTaqgkELvvAOZdwUq3kobQErE5HOuPEOvcwuY96\n+DcxLexirCGW5wCUq7Db0c0dUjQwzzb5OTW2jdnPVR0qxi29TnOJ2aLkCDQRTh04e\n+ARAAuJKpI6NTCQrjEqe9AYywN8676+fPS5bqXkyb/iub6MXeQdwpH0K42lXAaYMq\n+ow/0aLlvGWCHuJJGozoOWpTzQ+VPbhpdARoLCop5fYTpy8Q17ubLeeODDtr6jtDN\n+lmg+9PBIErIVUnUS2wNZuJRVsfwlLaU3T2v8kQnQ6AEbl/QwyWW9nB8rAWBu6Hvs\n+VdtcBmtHSr9xAGBGfW6rSVhTitikR4lWJPdNJxI3pLaswpLIUIQ1rssKO4glljcp\n+C6nhMvRkDLvDFvDP9QnmwY/A4ch5S6ANPrhOjQuu9njjQ+/ImrJTjAXqHwg5KdTc\n+NKxufgvi9elOQ422o0No3yKdRoRA4kdcUmqA9gNZDyX0ZTd17aNqc42Zt3aYLJ11\n+bLZZp0qnfhkmhbsBZZtaLNkuF+RGPWysxY7KPMm+nHn6f3Wpr18E+T02wi02r4nS\n+HOQI+gppDqy3Vq3ZZNoUZynctiLZVHkqi+WYXqfD2tEn8UJKpht7jrZlNgkHFgT7\n+T0/U4+JmaQ/HltE+IexAIH0GP0Jt6hmRoZimdoy8Q8NY5t/fn9CQNJm5InrHvooN\n+aFmZMvzGTGiTqBqnA/7k9FCUEG98LK11MsIssY8YE/F6HD69R3ISyRvhUbpFvhD8\n+c6zOkEKngTWvyRevrDrDz2yoZ1+T1X350+92rbEc/8WyutcAEQEAAYkCHwQYAQIA\n+CQUCU4dOHgIbDAAKCRAcJJH/6w73cAakEACv4EUEjtFjqnGB0Lru5FKs1obWcf37\n+c4a5yYvOw58dkEZ9hsq34qWGLT128n6R24KEG+3O4CbplAD5Kt2eAPracbPHMAn8\n+TGmC+KjiGlBR5xCY9dD0fn5EbRWOa+Fdcj1DpneaqMl9vLnBbqGp7pa/MwSOc+FB\n+0Ms2rcGJJMNHgITfP22eCf6pvf/xq7kKbUJ3Kjqdc2hWlRMjC/OOeITdrgycfDk/\n+AOzLNqk5q7bYOxna6rWDLGSkCATyQKaBTVK7wRd1VrIhI4vfFqy+BWYXyXJ0pxjS\n+eaCDwbWHX/KW+0qLsmHxFMAyHJPjs8LEwK/DRbmWhe1HzPcBKmpyjqlkuxPjAdSl\n+hP4+IBvVNLf2Kh3uFHehk9A6oCYZGe3lLfQnOxIantXF7IROTmiZZsb+08w6cIXE\n++r6kWG6vP2aCVtzYNfY+2p5xfg3yMxcxENJki1WSCOq6WVf9IWFzSJu+0+eazD3L\n+3QpZoSX5VvT6x05C0Ay1ert0Q5MyF84Eh8mDqL4PhpWtQhZMp8SG4jqFVgrhM4sl\n+vWGYXGns4tbnNPiiksjBD8TTvG3+mt48sNJIpHThjdWJSZjllYG7jV8oi7HrX8M2\n+LOwWWLYxHkqi9wpmrWHSmniex6ABozcqrb+EgSMnHuSd7glmOJxHToJIudJbKG5D\n+MrD0ofsytfy1LQ==\n+=DE4h\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "f5e6382b846d1826f3c4a8306a1d39d4cf1031bc",
        "filename": "contrib/gitian-downloader/linux-download-config",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-downloader/linux-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-downloader/linux-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/linux-download-config?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -37,3 +37,6 @@ signers:\n   E944AE667CF960B1004BC32FCA662BE18B877A60:\n     name: \"Andreas Schildbach\"\n     key: aschildbach\n+  C060A6635913D98A3587D7DB1C2491FFEB0EF770:\n+    name: \"Cory Fields\"\n+    key: \"cfields\""
      },
      {
        "sha": "06c164180d5076483c83119ce378f830a671ccb4",
        "filename": "contrib/gitian-downloader/win32-download-config",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-downloader/win32-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/gitian-downloader/win32-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/win32-download-config?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -37,3 +37,6 @@ signers:\n   E944AE667CF960B1004BC32FCA662BE18B877A60:\n     name: \"Andreas Schildbach\"\n     key: aschildbach\n+  C060A6635913D98A3587D7DB1C2491FFEB0EF770:\n+    name: \"Cory Fields\"\n+    key: \"cfields\""
      },
      {
        "sha": "0aa57b4777132056049ee69cc02d3305f06a8d31",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -1,9 +1,5 @@\n ### MacDeploy ###\n \n-You will need the appscript package for the fancy disk image creation to work:\n-\n-\tsudo easy_install appscript\n-\n For Snow Leopard (which uses [Python 2.6](http://www.python.org/download/releases/2.6/)), you will need the param_parser package:\n \t\n \tsudo easy_install argparse"
      },
      {
        "sha": "ce4169a4106da18ce912cd7667cae400fa3277cd",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -19,7 +19,6 @@\n \n import subprocess, sys, re, os, shutil, stat, os.path\n from string import Template\n-from time import sleep\n from argparse import ArgumentParser\n \n # This is ported from the original macdeployqt with modifications\n@@ -488,16 +487,6 @@ if len(config.fancy) == 1:\n             sys.stderr.write(\"Error: Could not import plistlib which is required for fancy disk images.\\n\")\n         sys.exit(1)\n     \n-    if verbose >= 3:\n-        print \"Fancy: Importing appscript...\"\n-    try:\n-        import appscript\n-    except ImportError:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not import appscript which is required for fancy disk images.\\n\")\n-            sys.stderr.write(\"Please install it e.g. with \\\"sudo easy_install appscript\\\".\\n\")\n-        sys.exit(1)\n-    \n     p = config.fancy[0]\n     if verbose >= 3:\n         print \"Fancy: Loading \\\"%s\\\"...\" % p"
      },
      {
        "sha": "2be56c15926c7b7d3e8186520b9e03da91fe192f",
        "filename": "doc/README_osx.txt",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/doc/README_osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/doc/README_osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.txt?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -37,11 +37,15 @@ originally done in toolchain4.\n \n To complicate things further, all builds must target an Apple SDK. These SDKs\n are free to download, but not redistributable.\n-To obtain it, register for a developer account, then download xcode_3.2.6_and_ios_sdk_4.3.dmg:\n-https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/xcode_3.2.6_and_ios_sdk_4.3__final/xcode_3.2.6_and_ios_sdk_4.3.dmg\n-This file is several gigabytes in size, but only a single .pkg file inside is\n-needed (MacOSX10.6.pkg). From Linux, 7-zip can be used to extract this file.\n-The DMG can then be discarded.\n+To obtain it, register for a developer account, then download xcode4630916281a.dmg:\n+https://developer.apple.com/downloads/download.action?path=Developer_Tools/xcode_4.6.3/xcode4630916281a.dmg\n+This file is several gigabytes in size, but only a single directory inside is\n+needed: Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk\n+\n+Unfortunately, the usual linux tools (7zip, hpmount, loopback mount) are incapable of opening this file.\n+To create a tarball suitable for gitian input, mount the dmg in OSX, then create it with:\n+  $ tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.7.sdk.tar.gz MacOSX10.7.sdk\n+\n \n The gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\n which are created using these tools. The build process has been designed to"
      },
      {
        "sha": "1d75c206e534979856eb4e25f31658d3a9b92ce3",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -2,6 +2,16 @@ UNIX BUILD NOTES\n ====================\n Some notes on how to build Bitcoin in Unix. \n \n+Note\n+---------------------\n+Always use absolute paths to configure and compile bitcoin and the dependencies,\n+for example, when specifying the the path of the dependency:\n+\n+\t../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n+\n+Here BDB_PREFIX must absolute path - it is defined using $(pwd) which ensures\n+the usage of the absolute path.\n+\n To Build\n ---------------------\n "
      },
      {
        "sha": "378a45eda53944ebe23b426193fa84472536ca58",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 22,
        "deletions": 21,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -34,19 +34,22 @@ Table of Contents\n - [Signing externally](#signing-externally)\n - [Uploading signatures](#uploading-signatures)\n \n-Create a new VirtualBox VM\n----------------------------\n+Preparing the Gitian builder host\n+---------------------------------\n \n-The first step is to create a new Virtual Machine, which will be explained in\n-this section.  This VM will be used to do the Gitian builds. In this guide it\n-will be explained how to set up the environment, and how to get the builds\n-started.\n+The first step is to prepare the host environment that will be used to perform the Gitian builds.\n+In this guide it is explained how to set up the environment, and how to get the builds started.\n \n-Debian Linux was chosen as the host distribution because it has a lightweight install (in\n-contrast to Ubuntu) and is readily available. We here show the steps for\n-VirtualBox [1], but any kind of virtualization can be used. You can also install\n-on actual hardware instead of using a VM, in this case you can skip this section.\n+Debian Linux was chosen as the host distribution because it has a lightweight install (in contrast to Ubuntu) and is readily available.\n+Any kind of virtualization can be used, for example:\n+- [VirtualBox](https://www.virtualbox.org/), covered by this guide\n+- [KVM](http://www.linux-kvm.org/page/Main_Page)\n+- [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n \n+You can also install on actual hardware instead of using virtualization.\n+\n+Create a new VirtualBox VM\n+---------------------------\n In the VirtualBox GUI click \"Create\" and choose the following parameters in the wizard:\n \n ![](gitian-building/create_vm_page1.png)\n@@ -74,11 +77,11 @@ In the VirtualBox GUI click \"Create\" and choose the following parameters in the\n - Disk size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side \n - Push the `Create` button\n \n-Get the [Debian 7.4 net installer](http://cdimage.debian.org/debian-cd/7.4.0/amd64/iso-cd/debian-7.4.0-amd64-netinst.iso).\n+Get the [Debian 7.4 net installer](http://ftp.at.debian.org/debian-jigdo/current/amd64/iso-cd/debian-7.4.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n This DVD image can be validated using a SHA256 hashing tool, for example on\n Unixy OSes by entering the following in a terminal:\n \n-    echo \"b712a141bc60269db217d3b3e456179bd6b181645f90e4aac9c42ed63de492e9  /home/orion/Downloads/debian-7.4.0-amd64-netinst.iso\" | sha256sum -c\n+    echo \"b712a141bc60269db217d3b3e456179bd6b181645f90e4aac9c42ed63de492e9  debian-7.4.0-amd64-netinst.iso\" | sha256sum -c\n     # (must return OK)\n \n After creating the VM, we need to configure it. \n@@ -106,8 +109,6 @@ Then start the VM. On the first launch you will be asked for a CD or DVD image.\n \n ![](gitian-building/select_startup_disk.png)\n \n-[1] https://www.virtualbox.org/\n-\n Installing Debian\n ------------------\n \n@@ -279,11 +280,14 @@ cd ..\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n-Clone the git repositories for bitcoin and gitian,\n+Clone the git repositories for bitcoin and gitian and then checkout the bitcoin version that you are willing to build.\n \n ```bash\n git clone https://github.com/devrandom/gitian-builder.git\n git clone https://github.com/bitcoin/bitcoin\n+cd bitcoin\n+git checkout v${VERSION}\n+cd ..\n ```\n \n Setting up gitian images\n@@ -402,9 +406,6 @@ gitian build.\n Uploading signatures\n ---------------------\n \n-After building and signing you can push your signatures (both the `.assert` and\n-`.assert.sig` files) to the\n-[bitcoin/gitian.sigs](https://github.com/bitcoin/gitian.sigs/) repository, or\n-if not possible create a pull request. You can also mail the files to me\n-(laanwj@gmail.com) and I'll commit them.\n-\n+After building and signing you can push your signatures (both the `.assert` and `.assert.sig` files) to the\n+[bitcoin/gitian.sigs](https://github.com/bitcoin/gitian.sigs/) repository, or if not possible create a pull\n+request. You can also mail the files to me (laanwj@gmail.com) and I'll commit them."
      },
      {
        "sha": "9272d427cdc95f8b254ec5bd4597a0702ec62de9",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -1,2 +1,21 @@\n (note: this is a temporary file, to be added-to by anybody, and moved to\n release-notes at release time)\n+\n+New RPC methods\n+===============\n+\n+Fee/Priority estimation\n+-----------------------\n+\n+estimatefee nblocks : Returns approximate fee-per-1,000-bytes needed for\n+a transaction to be confirmed within nblocks. Returns -1 if not enough\n+transactions have been observed to compute a good estimate.\n+\n+estimatepriority nblocks : Returns approximate priority needed for\n+a zero-fee transaction to confirm within nblocks. Returns -1 if not\n+enough free transactions have been observed to compute a good\n+estimate.\n+\n+Statistics used to estimate fees and priorities are saved in the\n+data directory in the 'fee_estimates.dat' file just before\n+program shutdown, and are read in at startup."
      },
      {
        "sha": "0552053d27b8f76e9f5a80cdfcfb0420d64afc86",
        "filename": "doc/release-notes/release-notes-0.9.1.md",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/doc/release-notes/release-notes-0.9.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/doc/release-notes/release-notes-0.9.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.1.md?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -0,0 +1,53 @@\n+Bitcoin Core version 0.9.1 is now available from:\n+\n+  https://bitcoin.org/bin/0.9.1/\n+\n+This is a security update. It is recommended to upgrade to this release\n+as soon as possible.\n+\n+It is especially important to upgrade if you currently have version\n+0.9.0 installed and are using the graphical interface OR you are using\n+bitcoind from any pre-0.9.1 version, and have enabled SSL for RPC and\n+have configured allowip to allow rpc connections from potentially\n+hostile hosts.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you run\n+0.9.1 your blockchain files will be re-indexed, which will take anywhere from \n+30 minutes to several hours, depending on the speed of your machine.\n+\n+0.9.1 Release notes\n+=======================\n+\n+No code changes were made between 0.9.0 and 0.9.1. Only the dependencies were changed.\n+\n+- Upgrade OpenSSL to 1.0.1g. This release fixes the following vulnerabilities which can\n+  affect the Bitcoin Core software:\n+\n+  - CVE-2014-0160 (\"heartbleed\")\n+    A missing bounds check in the handling of the TLS heartbeat extension can\n+    be used to reveal up to 64k of memory to a connected client or server.\n+\n+  - CVE-2014-0076\n+    The Montgomery ladder implementation in OpenSSL does not ensure that\n+    certain swap operations have a constant-time behavior, which makes it\n+    easier for local users to obtain ECDSA nonces via a FLUSH+RELOAD cache\n+    side-channel attack.\n+\n+- Add statically built executables to Linux build\n+\n+Credits\n+--------\n+\n+Credits go to the OpenSSL team for fixing the vulnerabilities quickly."
      },
      {
        "sha": "5b96e537537ada6e17799413fc88627bf205a2c0",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 10,
        "deletions": 12,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -36,17 +36,15 @@ Release Process\n         mkdir -p inputs; cd inputs/\n \n  Register and download the Apple SDK (see OSX Readme for details)\n-        visit https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/xcode_3.2.6_and_ios_sdk_4.3__final/xcode_3.2.6_and_ios_sdk_4.3.dmg\n+\tvisit https://developer.apple.com/downloads/download.action?path=Developer_Tools/xcode_4.6.3/xcode4630916281a.dmg\n  \n- Extract MacOSX10.6.pkg using 7zip\n-        7z e -y xcode_3.2.6_and_ios_sdk_4.3.dmg 5.hfs\n-        7z -y e 5.hfs \"Xcode and iOS SDK/Packages/MacOSX10.6.pkg\"\n-        rm 5.hfs\n+ Using a Mac, create a tarball for the 10.7 SDK\n+\ttar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.7.sdk.tar.gz MacOSX10.7.sdk\n \n  Fetch and build inputs: (first time, or when dependency versions change)\n \n \twget 'http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.9.tar.gz' -O miniupnpc-1.9.tar.gz\n-\twget 'https://www.openssl.org/source/openssl-1.0.1g.tar.gz'\n+\twget 'https://www.openssl.org/source/openssl-1.0.1h.tar.gz'\n \twget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n \twget 'http://zlib.net/zlib-1.2.8.tar.gz'\n \twget 'ftp://ftp.simplesystems.org/pub/png/src/history/libpng16/libpng-1.6.8.tar.gz'\n@@ -91,16 +89,16 @@ Release Process\n \n  The expected SHA256 hashes of the intermediate inputs are:\n \n-    35c3dfd8b9362f59e81b51881b295232e3bc9e286f1add193b59d486d9ac4a5c  bitcoin-deps-linux32-gitian-r5.zip\n-    571789867d172500fa96d63d0ba8c5b1e1a3d6f44f720eddf2f93665affc88b3  bitcoin-deps-linux64-gitian-r5.zip\n+    46710f673467e367738d8806e45b4cb5931aaeea61f4b6b55a68eea56d5006c5  bitcoin-deps-linux32-gitian-r6.zip\n+    f03be39fb26670243d3a659e64d18e19d03dec5c11e9912011107768390b5268  bitcoin-deps-linux64-gitian-r6.zip\n     f29b7d9577417333fb56e023c2977f5726a7c297f320b175a4108cf7cd4c2d29  boost-linux32-1.55.0-gitian-r1.zip\n     88232451c4104f7eb16e469ac6474fd1231bd485687253f7b2bdf46c0781d535  boost-linux64-1.55.0-gitian-r1.zip\n-    74ec2d301cf1a9d03b194153f545102ba45dad02b390485212fe6717de486361  qt-linux32-4.6.4-gitian-r1.tar.gz\n-    01d0477e299467f09280f15424781154e2b1ea4072c5edb16e044c234954fd9a  qt-linux64-4.6.4-gitian-r1.tar.gz\n+    57e57dbdadc818cd270e7e00500a5e1085b3bcbdef69a885f0fb7573a8d987e1  qt-linux32-4.6.4-gitian-r1.tar.gz\n+    60eb4b9c5779580b7d66529efa5b2836ba1a70edde2a0f3f696d647906a826be  qt-linux64-4.6.4-gitian-r1.tar.gz\n     60dc2d3b61e9c7d5dbe2f90d5955772ad748a47918ff2d8b74e8db9b1b91c909  boost-win32-1.55.0-gitian-r6.zip\n     f65fcaf346bc7b73bc8db3a8614f4f6bee2f61fcbe495e9881133a7c2612a167  boost-win64-1.55.0-gitian-r6.zip\n-    97e62002d338885336bb24e7cbb9471491294bd8857af7a83d18c0961f864ec0  bitcoin-deps-win32-gitian-r11.zip\n-    ee3ea2d5aac1a67ea6bfbea2c04068a7c0940616ce48ee4f37c264bb9d4438ef  bitcoin-deps-win64-gitian-r11.zip\n+    70de248cd0dd7e7476194129e818402e974ca9c5751cbf591644dc9f332d3b59  bitcoin-deps-win32-gitian-r13.zip\n+    9eace4c76f639f4f3580a478eee4f50246e1bbb5ccdcf37a158261a5a3fa3e65  bitcoin-deps-win64-gitian-r13.zip\n     963e3e5e85879010a91143c90a711a5d1d5aba992e38672cdf7b54e42c56b2f1  qt-win32-5.2.0-gitian-r3.zip\n     751c579830d173ef3e6f194e83d18b92ebef6df03289db13ab77a52b6bc86ef0  qt-win64-5.2.0-gitian-r3.zip\n     e2e403e1a08869c7eed4d4293bce13d51ec6a63592918b90ae215a0eceb44cb4  protobuf-win32-2.5.0-gitian-r4.zip"
      },
      {
        "sha": "61a0a0ffed986f5ff8d141afa2789bd89d13b52e",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -1,7 +1,7 @@\n Translations\n ============\n \n-The Qt GUI can be easily translated into other languages. Here's how we\n+The Bitcoin Core GUI can be easily translated into other languages. Here's how we\n handle those translations.\n \n Files and Folders"
      },
      {
        "sha": "e8abbfba194efa9313a2117af7a9522b56df7366",
        "filename": "qa/rpc-tests/smartfees.py",
        "status": "added",
        "additions": 142,
        "deletions": 0,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/qa/rpc-tests/smartfees.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/qa/rpc-tests/smartfees.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/smartfees.py?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -0,0 +1,142 @@\n+#!/usr/bin/env python\n+\n+#\n+# Test fee estimation code\n+#\n+\n+# Add python-bitcoinrpc to module search path:\n+import os\n+import sys\n+sys.path.append(os.path.join(os.path.dirname(os.path.abspath(__file__)), \"python-bitcoinrpc\"))\n+\n+import json\n+import random\n+import shutil\n+import subprocess\n+import tempfile\n+import traceback\n+\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+\n+\n+def run_test(nodes, test_dir):\n+    nodes.append(start_node(0, test_dir,\n+                            [\"-debug=mempool\", \"-debug=estimatefee\"]))\n+    # Node1 mines small-but-not-tiny blocks, and allows free transactions.\n+    # NOTE: the CreateNewBlock code starts counting block size at 1,000 bytes,\n+    # so blockmaxsize of 2,000 is really just 1,000 bytes (room enough for\n+    # 6 or 7 transactions)\n+    nodes.append(start_node(1, test_dir,\n+                            [\"-blockprioritysize=1500\", \"-blockmaxsize=2000\",\n+                             \"-debug=mempool\", \"-debug=estimatefee\"]))\n+    connect_nodes(nodes[1], 0)\n+\n+    # Node2 is a stingy miner, that\n+    # produces very small blocks (room for only 3 or so transactions)\n+    node2args = [ \"-blockprioritysize=0\", \"-blockmaxsize=1500\",\n+                             \"-debug=mempool\", \"-debug=estimatefee\"]\n+    nodes.append(start_node(2, test_dir, node2args))\n+    connect_nodes(nodes[2], 0)\n+\n+    sync_blocks(nodes)\n+\n+    # Prime the memory pool with pairs of transactions\n+    # (high-priority, random fee and zero-priority, random fee)\n+    min_fee = Decimal(\"0.001\")\n+    fees_per_kb = [];\n+    for i in range(12):\n+        (txid, txhex, fee) = random_zeropri_transaction(nodes, Decimal(\"1.1\"),\n+                                                        min_fee, min_fee, 20)\n+        tx_kbytes = (len(txhex)/2)/1000.0\n+        fees_per_kb.append(float(fee)/tx_kbytes)\n+\n+    # Mine blocks with node2 until the memory pool clears:\n+    count_start = nodes[2].getblockcount()\n+    while len(nodes[2].getrawmempool()) > 0:\n+        nodes[2].setgenerate(True, 1)\n+        sync_blocks(nodes)\n+\n+    all_estimates = [ nodes[0].estimatefee(i) for i in range(1,20) ]\n+    print(\"Fee estimates, super-stingy miner: \"+str([str(e) for e in all_estimates]))\n+\n+    # Estimates should be within the bounds of what transactions fees actually were:\n+    delta = 1.0e-6 # account for rounding error\n+    for e in filter(lambda x: x >= 0, all_estimates):\n+        if float(e)+delta < min(fees_per_kb) or float(e)-delta > max(fees_per_kb):\n+            raise AssertionError(\"Estimated fee (%f) out of range (%f,%f)\"%(float(e), min_fee_kb, max_fee_kb))\n+\n+    # Generate transactions while mining 30 more blocks, this time with node1:\n+    for i in range(30):\n+        for j in range(random.randrange(6-4,6+4)):\n+            (txid, txhex, fee) = random_transaction(nodes, Decimal(\"1.1\"),\n+                                                    Decimal(\"0.0\"), min_fee, 20)\n+            tx_kbytes = (len(txhex)/2)/1000.0\n+            fees_per_kb.append(float(fee)/tx_kbytes)\n+        nodes[1].setgenerate(True, 1)\n+        sync_blocks(nodes)\n+\n+    all_estimates = [ nodes[0].estimatefee(i) for i in range(1,20) ]\n+    print(\"Fee estimates, more generous miner: \"+str([ str(e) for e in all_estimates]))\n+    for e in filter(lambda x: x >= 0, all_estimates):\n+        if float(e)+delta < min(fees_per_kb) or float(e)-delta > max(fees_per_kb):\n+            raise AssertionError(\"Estimated fee (%f) out of range (%f,%f)\"%(float(e), min_fee_kb, max_fee_kb))\n+\n+    # Finish by mining a normal-sized block:\n+    while len(nodes[0].getrawmempool()) > 0:\n+        nodes[0].setgenerate(True, 1)\n+        sync_blocks(nodes)\n+\n+    final_estimates = [ nodes[0].estimatefee(i) for i in range(1,20) ]\n+    print(\"Final fee estimates: \"+str([ str(e) for e in final_estimates]))\n+\n+def main():\n+    import optparse\n+\n+    parser = optparse.OptionParser(usage=\"%prog [options]\")\n+    parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n+                      help=\"Leave bitcoinds and test.* datadir on exit or error\")\n+    parser.add_option(\"--srcdir\", dest=\"srcdir\", default=\"../../src\",\n+                      help=\"Source directory containing bitcoind/bitcoin-cli (default: %default%)\")\n+    parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n+                      help=\"Root directory for datadirs\")\n+    (options, args) = parser.parse_args()\n+\n+    os.environ['PATH'] = options.srcdir+\":\"+os.environ['PATH']\n+\n+    check_json_precision()\n+\n+    success = False\n+    nodes = []\n+    try:\n+        print(\"Initializing test directory \"+options.tmpdir)\n+        print(\"  node0 running at: 127.0.0.1:%d\"%(p2p_port(0)))\n+        if not os.path.isdir(options.tmpdir):\n+            os.makedirs(options.tmpdir)\n+        initialize_chain(options.tmpdir)\n+\n+        run_test(nodes, options.tmpdir)\n+\n+        success = True\n+\n+    except AssertionError as e:\n+        print(\"Assertion failed: \"+e.message)\n+    except Exception as e:\n+        print(\"Unexpected exception caught during testing: \"+str(e))\n+        traceback.print_tb(sys.exc_info()[2])\n+\n+    if not options.nocleanup:\n+        print(\"Cleaning up\")\n+        stop_nodes(nodes)\n+        wait_bitcoinds()\n+        shutil.rmtree(options.tmpdir)\n+\n+    if success:\n+        print(\"Tests successful\")\n+        sys.exit(0)\n+    else:\n+        print(\"Failed\")\n+        sys.exit(1)\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "eded098c7c95f973bf16da0b368648afe9d35dbd",
        "filename": "qa/rpc-tests/util.py",
        "status": "modified",
        "additions": 144,
        "deletions": 30,
        "changes": 174,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/qa/rpc-tests/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/qa/rpc-tests/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.py?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -12,6 +12,7 @@\n \n from decimal import Decimal\n import json\n+import random\n import shutil\n import subprocess\n import time\n@@ -20,8 +21,10 @@\n from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n from util import *\n \n-START_P2P_PORT=11000\n-START_RPC_PORT=11100\n+def p2p_port(n):\n+    return 11000 + n + os.getpid()%999\n+def rpc_port(n):\n+    return 12000 + n + os.getpid()%999\n \n def check_json_precision():\n     \"\"\"Make sure json library being used does not lose precision converting BTC values\"\"\"\n@@ -58,6 +61,18 @@ def sync_mempools(rpc_connections):\n \n bitcoind_processes = []\n \n+def initialize_datadir(dir, n):\n+    datadir = os.path.join(dir, \"node\"+str(n))\n+    if not os.path.isdir(datadir):\n+        os.makedirs(datadir)\n+    with open(os.path.join(datadir, \"bitcoin.conf\"), 'w') as f:\n+        f.write(\"regtest=1\\n\");\n+        f.write(\"rpcuser=rt\\n\");\n+        f.write(\"rpcpassword=rt\\n\");\n+        f.write(\"port=\"+str(p2p_port(n))+\"\\n\");\n+        f.write(\"rpcport=\"+str(rpc_port(n))+\"\\n\");\n+    return datadir\n+\n def initialize_chain(test_dir):\n     \"\"\"\n     Create (or copy from cache) a 200-block-long chain and\n@@ -69,25 +84,18 @@ def initialize_chain(test_dir):\n         devnull = open(\"/dev/null\", \"w+\")\n         # Create cache directories, run bitcoinds:\n         for i in range(4):\n-            datadir = os.path.join(\"cache\", \"node\"+str(i))\n-            os.makedirs(datadir)\n-            with open(os.path.join(datadir, \"bitcoin.conf\"), 'w') as f:\n-                f.write(\"regtest=1\\n\");\n-                f.write(\"rpcuser=rt\\n\");\n-                f.write(\"rpcpassword=rt\\n\");\n-                f.write(\"port=\"+str(START_P2P_PORT+i)+\"\\n\");\n-                f.write(\"rpcport=\"+str(START_RPC_PORT+i)+\"\\n\");\n+            datadir=initialize_datadir(\"cache\", i)\n             args = [ \"bitcoind\", \"-keypool=1\", \"-datadir=\"+datadir ]\n             if i > 0:\n-                args.append(\"-connect=127.0.0.1:\"+str(START_P2P_PORT))\n+                args.append(\"-connect=127.0.0.1:\"+str(p2p_port(0)))\n             bitcoind_processes.append(subprocess.Popen(args))\n             subprocess.check_call([ \"bitcoin-cli\", \"-datadir=\"+datadir,\n                                     \"-rpcwait\", \"getblockcount\"], stdout=devnull)\n         devnull.close()\n         rpcs = []\n         for i in range(4):\n             try:\n-                url = \"http://rt:rt@127.0.0.1:%d\"%(START_RPC_PORT+i,)\n+                url = \"http://rt:rt@127.0.0.1:%d\"%(rpc_port(i),)\n                 rpcs.append(AuthServiceProxy(url))\n             except:\n                 sys.stderr.write(\"Error connecting to \"+url+\"\\n\")\n@@ -112,6 +120,7 @@ def initialize_chain(test_dir):\n         from_dir = os.path.join(\"cache\", \"node\"+str(i))\n         to_dir = os.path.join(test_dir,  \"node\"+str(i))\n         shutil.copytree(from_dir, to_dir)\n+        initialize_datadir(test_dir, i) # Overwrite port/rpcport in bitcoin.conf\n \n def _rpchost_to_args(rpchost):\n     '''Convert optional IP:port spec to rpcconnect/rpcport args'''\n@@ -133,25 +142,28 @@ def _rpchost_to_args(rpchost):\n         rv += ['-rpcport=' + rpcport]\n     return rv\n \n-def start_nodes(num_nodes, dir, extra_args=None, rpchost=None):\n-    # Start bitcoinds, and wait for RPC interface to be up and running:\n+def start_node(i, dir, extra_args=None, rpchost=None):\n+    \"\"\"\n+    Start a bitcoind and return RPC connection to it\n+    \"\"\"\n+    datadir = os.path.join(dir, \"node\"+str(i))\n+    args = [ \"bitcoind\", \"-datadir=\"+datadir, \"-keypool=1\" ]\n+    if extra_args is not None: args.extend(extra_args)\n+    bitcoind_processes.append(subprocess.Popen(args))\n     devnull = open(\"/dev/null\", \"w+\")\n-    for i in range(num_nodes):\n-        datadir = os.path.join(dir, \"node\"+str(i))\n-        args = [ \"bitcoind\", \"-datadir=\"+datadir ]\n-        if extra_args is not None:\n-            args += extra_args[i]\n-        bitcoind_processes.append(subprocess.Popen(args))\n-        subprocess.check_call([ \"bitcoin-cli\", \"-datadir=\"+datadir] +\n-                                  _rpchost_to_args(rpchost)  +\n-                                  [\"-rpcwait\", \"getblockcount\"], stdout=devnull)\n+    subprocess.check_call([ \"bitcoin-cli\", \"-datadir=\"+datadir] +\n+                          _rpchost_to_args(rpchost)  +\n+                          [\"-rpcwait\", \"getblockcount\"], stdout=devnull)\n     devnull.close()\n-    # Create&return JSON-RPC connections\n-    rpc_connections = []\n-    for i in range(num_nodes):\n-        url = \"http://rt:rt@%s:%d\" % (rpchost or '127.0.0.1', START_RPC_PORT+i,)\n-        rpc_connections.append(AuthServiceProxy(url))\n-    return rpc_connections\n+    url = \"http://rt:rt@%s:%d\" % (rpchost or '127.0.0.1', rpc_port(i))\n+    return AuthServiceProxy(url)\n+\n+def start_nodes(num_nodes, dir, extra_args=None, rpchost=None):\n+    \"\"\"\n+    Start multiple bitcoinds, return RPC connections to them\n+    \"\"\"\n+    if extra_args is None: extra_args = [ None for i in range(num_nodes) ]\n+    return [ start_node(i, dir, extra_args[i], rpchost) for i in range(num_nodes) ]\n \n def debug_log(dir, n_node):\n     return os.path.join(dir, \"node\"+str(n_node), \"regtest\", \"debug.log\")\n@@ -168,9 +180,111 @@ def wait_bitcoinds():\n     del bitcoind_processes[:]\n \n def connect_nodes(from_connection, node_num):\n-    ip_port = \"127.0.0.1:\"+str(START_P2P_PORT+node_num)\n+    ip_port = \"127.0.0.1:\"+str(p2p_port(node_num))\n     from_connection.addnode(ip_port, \"onetry\")\n \n+def find_output(node, txid, amount):\n+    \"\"\"\n+    Return index to output of txid with value amount\n+    Raises exception if there is none.\n+    \"\"\"\n+    txdata = node.getrawtransaction(txid, 1)\n+    for i in range(len(txdata[\"vout\"])):\n+        if txdata[\"vout\"][i][\"value\"] == amount:\n+            return i\n+    raise RuntimeError(\"find_output txid %s : %s not found\"%(txid,str(amount)))\n+\n+def gather_inputs(from_node, amount_needed):\n+    \"\"\"\n+    Return a random set of unspent txouts that are enough to pay amount_needed\n+    \"\"\"\n+    utxo = from_node.listunspent(1)\n+    random.shuffle(utxo)\n+    inputs = []\n+    total_in = Decimal(\"0.00000000\")\n+    while total_in < amount_needed and len(utxo) > 0:\n+        t = utxo.pop()\n+        total_in += t[\"amount\"]\n+        inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"], \"address\" : t[\"address\"] } )\n+    if total_in < amount_needed:\n+        raise RuntimeError(\"Insufficient funds: need %d, have %d\"%(amount+fee*2, total_in))\n+    return (total_in, inputs)\n+\n+def make_change(from_node, amount_in, amount_out, fee):\n+    \"\"\"\n+    Create change output(s), return them\n+    \"\"\"\n+    outputs = {}\n+    amount = amount_out+fee\n+    change = amount_in - amount\n+    if change > amount*2:\n+        # Create an extra change output to break up big inputs\n+        outputs[from_node.getnewaddress()] = float(change/2)\n+        change = change/2\n+    if change > 0:\n+        outputs[from_node.getnewaddress()] = float(change)\n+    return outputs\n+\n+def send_zeropri_transaction(from_node, to_node, amount, fee):\n+    \"\"\"\n+    Create&broadcast a zero-priority transaction.\n+    Returns (txid, hex-encoded-txdata)\n+    Ensures transaction is zero-priority by first creating a send-to-self,\n+    then using it's output\n+    \"\"\"\n+\n+    # Create a send-to-self with confirmed inputs:\n+    self_address = from_node.getnewaddress()\n+    (total_in, inputs) = gather_inputs(from_node, amount+fee*2)\n+    outputs = make_change(from_node, total_in, amount+fee, fee)\n+    outputs[self_address] = float(amount+fee)\n+\n+    self_rawtx = from_node.createrawtransaction(inputs, outputs)\n+    self_signresult = from_node.signrawtransaction(self_rawtx)\n+    self_txid = from_node.sendrawtransaction(self_signresult[\"hex\"], True)\n+\n+    vout = find_output(from_node, self_txid, amount+fee)\n+    # Now immediately spend the output to create a 1-input, 1-output\n+    # zero-priority transaction:\n+    inputs = [ { \"txid\" : self_txid, \"vout\" : vout } ]\n+    outputs = { to_node.getnewaddress() : float(amount) }\n+\n+    rawtx = from_node.createrawtransaction(inputs, outputs)\n+    signresult = from_node.signrawtransaction(rawtx)\n+    txid = from_node.sendrawtransaction(signresult[\"hex\"], True)\n+\n+    return (txid, signresult[\"hex\"])\n+\n+def random_zeropri_transaction(nodes, amount, min_fee, fee_increment, fee_variants):\n+    \"\"\"\n+    Create a random zero-priority transaction.\n+    Returns (txid, hex-encoded-transaction-data, fee)\n+    \"\"\"\n+    from_node = random.choice(nodes)\n+    to_node = random.choice(nodes)\n+    fee = min_fee + fee_increment*random.randint(0,fee_variants)\n+    (txid, txhex) = send_zeropri_transaction(from_node, to_node, amount, fee)\n+    return (txid, txhex, fee)\n+\n+def random_transaction(nodes, amount, min_fee, fee_increment, fee_variants):\n+    \"\"\"\n+    Create a random transaction.\n+    Returns (txid, hex-encoded-transaction-data, fee)\n+    \"\"\"\n+    from_node = random.choice(nodes)\n+    to_node = random.choice(nodes)\n+    fee = min_fee + fee_increment*random.randint(0,fee_variants)\n+\n+    (total_in, inputs) = gather_inputs(from_node, amount+fee)\n+    outputs = make_change(from_node, total_in, amount, fee)\n+    outputs[to_node.getnewaddress()] = float(amount)\n+\n+    rawtx = from_node.createrawtransaction(inputs, outputs)\n+    signresult = from_node.signrawtransaction(rawtx)\n+    txid = from_node.sendrawtransaction(signresult[\"hex\"], True)\n+\n+    return (txid, signresult[\"hex\"], fee)\n+\n def assert_equal(thing1, thing2):\n     if thing1 != thing2:\n         raise AssertionError(\"%s != %s\"%(str(thing1),str(thing2)))"
      },
      {
        "sha": "0a76829197d494a74bafab826f6be3de00b0beec",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 60,
        "deletions": 22,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -1,16 +1,35 @@\n-include Makefile.include\n+AM_CPPFLAGS =  $(INCLUDES)\n+AM_LDFLAGS = $(PTHREAD_CFLAGS)\n \n-AM_CPPFLAGS += -I$(builddir)\n+\n+if EMBEDDED_LEVELDB\n+LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/include\n+LEVELDB_CPPFLAGS += -I$(srcdir)/leveldb/helpers/memenv\n+LIBLEVELDB += $(builddir)/leveldb/libleveldb.a\n+LIBMEMENV  += $(builddir)/leveldb/libmemenv.a\n+\n+# NOTE: This dependency is not strictly necessary, but without it make may try to build both in parallel, which breaks the LevelDB build system in a race\n+$(LIBLEVELDB): $(LIBMEMENV)\n+\n+$(LIBLEVELDB) $(LIBMEMENV):\n+\t@echo \"Building LevelDB ...\" && $(MAKE) -C $(@D) $(@F) CXX=\"$(CXX)\" \\\n+\t  CC=\"$(CC)\" PLATFORM=$(TARGET_OS) AR=\"$(AR)\" $(LEVELDB_TARGET_FLAGS) \\\n+          OPT=\"$(CXXFLAGS) $(CPPFLAGS)\"\n+endif\n+\n+BITCOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS)\n \n noinst_LIBRARIES = \\\n   libbitcoin_server.a \\\n   libbitcoin_common.a \\\n   libbitcoin_cli.a\n if ENABLE_WALLET\n+BITCOIN_INCLUDES += $(BDB_CPPFLAGS)\n noinst_LIBRARIES += libbitcoin_wallet.a\n endif\n \n bin_PROGRAMS =\n+TESTS =\n \n if BUILD_BITCOIND\n   bin_PROGRAMS += bitcoind\n@@ -20,8 +39,6 @@ if BUILD_BITCOIN_CLI\n   bin_PROGRAMS += bitcoin-cli\n endif\n \n-SUBDIRS = . $(BUILD_QT) $(BUILD_TEST)\n-DIST_SUBDIRS = . qt test\n .PHONY: FORCE\n # bitcoin core #\n BITCOIN_CORE_H = \\\n@@ -82,11 +99,12 @@ JSON_H = \\\n   json/json_spirit_writer_template.h\n \n obj/build.h: FORCE\n-\t@$(MKDIR_P) $(abs_top_builddir)/src/obj\n+\t@$(MKDIR_P) $(builddir)/obj\n \t@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \\\n \t  $(abs_top_srcdir)\n-version.o: obj/build.h\n+libbitcoin_common_a-version.$(OBJEXT): obj/build.h\n \n+libbitcoin_server_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n libbitcoin_server_a_SOURCES = \\\n   addrman.cpp \\\n   alert.cpp \\\n@@ -111,6 +129,7 @@ libbitcoin_server_a_SOURCES = \\\n   $(JSON_H) \\\n   $(BITCOIN_CORE_H)\n \n+libbitcoin_wallet_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n libbitcoin_wallet_a_SOURCES = \\\n   db.cpp \\\n   crypter.cpp \\\n@@ -120,6 +139,7 @@ libbitcoin_wallet_a_SOURCES = \\\n   walletdb.cpp \\\n   $(BITCOIN_CORE_H)\n \n+libbitcoin_common_a_CPPFLAGS = $(BITCOIN_INCLUDES)\n libbitcoin_common_a_SOURCES = \\\n   base58.cpp \\\n   allocators.cpp \\\n@@ -145,13 +165,12 @@ libbitcoin_cli_a_SOURCES = \\\n   rpcclient.cpp \\\n   $(BITCOIN_CORE_H)\n \n-nodist_libbitcoin_common_a_SOURCES = $(top_srcdir)/src/obj/build.h\n+nodist_libbitcoin_common_a_SOURCES = $(srcdir)/obj/build.h\n #\n \n # bitcoind binary #\n bitcoind_LDADD = \\\n   libbitcoin_server.a \\\n-  libbitcoin_cli.a \\\n   libbitcoin_common.a \\\n   $(LIBLEVELDB) \\\n   $(LIBMEMENV)\n@@ -165,39 +184,58 @@ if TARGET_WINDOWS\n bitcoind_SOURCES += bitcoind-res.rc\n endif\n \n-AM_CPPFLAGS += $(BDB_CPPFLAGS)\n bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS)\n+bitcoind_CPPFLAGS = $(BITCOIN_INCLUDES)\n \n # bitcoin-cli binary #\n bitcoin_cli_LDADD = \\\n   libbitcoin_cli.a \\\n   libbitcoin_common.a \\\n   $(BOOST_LIBS)\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n+bitcoin_cli_CPPFLAGS = $(BITCOIN_INCLUDES)\n #\n \n if TARGET_WINDOWS\n bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n endif\n \n-# NOTE: This dependency is not strictly necessary, but without it make may try to build both in parallel, which breaks the LevelDB build system in a race\n-leveldb/libleveldb.a: leveldb/libmemenv.a\n-\n-leveldb/%.a:\n-\t@echo \"Building LevelDB ...\" && $(MAKE) -C $(@D) $(@F) CXX=\"$(CXX)\" \\\n-\t  CC=\"$(CC)\" PLATFORM=$(TARGET_OS) AR=\"$(AR)\" $(LEVELDB_TARGET_FLAGS) \\\n-\t  OPT=\"$(CXXFLAGS) $(CPPFLAGS)\"\n-\n-qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_cli_a_SOURCES)\n-\t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n-\t@cd $(top_srcdir); XGETTEXT=$(XGETTEXT) share/qt/extract_strings_qt.py\n-\n CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno\n \n DISTCLEANFILES = obj/build.h\n \n-EXTRA_DIST = leveldb Makefile.include\n+EXTRA_DIST = leveldb\n \n clean-local:\n \t-$(MAKE) -C leveldb clean\n \trm -f leveldb/*/*.gcno leveldb/helpers/memenv/*.gcno\n+\n+.rc.o:\n+\t@test -f $(WINDRES)\n+\t$(AM_V_GEN) $(WINDRES) -i $< -o $@\n+\n+.mm.o:\n+\t$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n+\t  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<\n+\n+%.pb.cc %.pb.h: %.proto\n+\t@test -f $(PROTOC)\n+\t$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)\n+\n+LIBBITCOIN_SERVER=libbitcoin_server.a\n+LIBBITCOIN_WALLET=libbitcoin_wallet.a\n+LIBBITCOIN_COMMON=libbitcoin_common.a\n+LIBBITCOIN_CLI=libbitcoin_cli.a\n+LIBBITCOINQT=qt/libbitcoinqt.a\n+\n+if ENABLE_TESTS\n+include Makefile.test.include\n+endif\n+\n+if ENABLE_QT\n+include Makefile.qt.include\n+endif\n+\n+if ENABLE_QT_TESTS\n+include Makefile.qttest.include\n+endif"
      },
      {
        "sha": "2fc6cd7775153180d80d266595bb83a613ff9fa9",
        "filename": "src/Makefile.include",
        "status": "removed",
        "additions": 0,
        "deletions": 79,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a48355dc44e8b86c2fc9f8b7973ac9e81a295be7/src/Makefile.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a48355dc44e8b86c2fc9f8b7973ac9e81a295be7/src/Makefile.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.include?ref=a48355dc44e8b86c2fc9f8b7973ac9e81a295be7",
        "patch": "@@ -1,79 +0,0 @@\n-if EMBEDDED_LEVELDB\n-LEVELDB_CPPFLAGS += -I$(top_srcdir)/src/leveldb/include\n-LEVELDB_CPPFLAGS += -I$(top_srcdir)/src/leveldb/helpers/memenv\n-LIBLEVELDB += $(top_builddir)/src/leveldb/libleveldb.a\n-LIBMEMENV  += $(top_builddir)/src/leveldb/libmemenv.a\n-endif\n-\n-AM_CPPFLAGS =  $(INCLUDES) \\\n-  -I$(top_builddir)/src/obj \\\n-  $(BDB_CPPFLAGS) \\\n-  $(BOOST_CPPFLAGS) $(BOOST_INCLUDES)\n-AM_CPPFLAGS += $(LEVELDB_CPPFLAGS)\n-AM_LDFLAGS = $(PTHREAD_CFLAGS)\n-\n-LIBBITCOIN_SERVER=$(top_builddir)/src/libbitcoin_server.a\n-LIBBITCOIN_WALLET=$(top_builddir)/src/libbitcoin_wallet.a\n-LIBBITCOIN_COMMON=$(top_builddir)/src/libbitcoin_common.a\n-LIBBITCOIN_CLI=$(top_builddir)/src/libbitcoin_cli.a\n-LIBBITCOINQT=$(top_builddir)/src/qt/libbitcoinqt.a\n-\n-$(LIBBITCOIN):\n-\t$(MAKE) -C $(top_builddir)/src $(@F)\n-\n-if EMBEDDED_LEVELDB\n-$(LIBLEVELDB) $(LIBMEMENV):\n-\t$(MAKE) -C $(top_builddir)/src leveldb/$(@F)\n-endif\n-\n-$(LIBBITCOINQT):\n-\t$(MAKE) -C $(top_builddir)/src/qt $(@F)\n-\n-.mm.o:\n-\t$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n-\t  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<\n-\n-.rc.o:\n-\t@test -f $(WINDRES) && $(WINDRES) -i $< -o $@ || \\\n-          echo error: could not build $@\n-\n-ui_%.h: %.ui\n-\t@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)\n-\t@test -f $(UIC) && QT_SELECT=$(QT_SELECT) $(UIC) -o $(abs_builddir)/$@ $(abs_srcdir)/$< || echo error: could not build $(abs_builddir)/$@\n-\t$(SED) -e '/^\\*\\*.*Created:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}\n-\t$(SED) -e '/^\\*\\*.*by:/d' $(abs_builddir)/$@ > $(abs_builddir)/$@.n && mv $(abs_builddir)/$@{.n,}\n-\n-%.moc: %.cpp\n-\tQT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n-\t$(SED) -e '/^\\*\\*.*Created:/d' $@ > $@.n && mv $@{.n,}\n-\t$(SED) -e '/^\\*\\*.*by:/d' $@ > $@.n && mv $@{.n,}\n-\n-moc_%.cpp: %.h\n-\tQT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n-\t$(SED) -e '/^\\*\\*.*Created:/d' $@ > $@.n && mv $@{.n,}\n-\t$(SED) -e '/^\\*\\*.*by:/d' $@ > $@.n && mv $@{.n,}\n-\n-%.qm: %.ts\n-\t@test -d $(abs_builddir)/$(@D) || $(MKDIR_P) $(abs_builddir)/$(@D)\n-\t@test -f $(LRELEASE) && QT_SELECT=$(QT_SELECT) $(LRELEASE) $(abs_srcdir)/$< -qm $(abs_builddir)/$@ || \\\n-\t echo error: could not build $(abs_builddir)/$@\n-\n-%.pb.cc %.pb.h: %.proto\n-\ttest -f $(PROTOC) && $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)  || \\\n-\t  echo error: could not build $@\n-\n-%.json.h: %.json\n-\t@$(MKDIR_P) $(@D)\n-\t@echo \"namespace json_tests{\" > $@\n-\t@echo \"static unsigned const char $(*F)[] = {\" >> $@\n-\t@$(HEXDUMP) -v -e '8/1 \"0x%02x, \"' -e '\"\\n\"' $< | $(SED) -e 's/0x  ,//g' >> $@\n-\t@echo \"};};\" >> $@\n-\t@echo \"Generated $@\"\n-\n-%.raw.h: %.raw\n-\t@$(MKDIR_P) $(@D)\n-\t@echo \"namespace alert_tests{\" > $@\n-\t@echo \"static unsigned const char $(*F)[] = {\" >> $@\n-\t@$(HEXDUMP) -v -e '8/1 \"0x%02x, \"' -e '\"\\n\"' $< | $(SED) -e 's/0x  ,//g' >> $@\n-\t@echo \"};};\" >> $@\n-\t@echo \"Generated $@\""
      },
      {
        "sha": "647434e1efc7cfe73fdf3e737a67578fa0f70313",
        "filename": "src/Makefile.qt.include",
        "status": "added",
        "additions": 411,
        "deletions": 0,
        "changes": 411,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -0,0 +1,411 @@\n+bin_PROGRAMS += qt/bitcoin-qt\n+noinst_LIBRARIES += qt/libbitcoinqt.a\n+\n+# bitcoin qt core #\n+QT_TS = \\\n+  qt/locale/bitcoin_ach.ts \\\n+  qt/locale/bitcoin_af_ZA.ts \\\n+  qt/locale/bitcoin_ar.ts \\\n+  qt/locale/bitcoin_be_BY.ts \\\n+  qt/locale/bitcoin_bg.ts \\\n+  qt/locale/bitcoin_bs.ts \\\n+  qt/locale/bitcoin_ca_ES.ts \\\n+  qt/locale/bitcoin_ca.ts \\\n+  qt/locale/bitcoin_ca@valencia.ts \\\n+  qt/locale/bitcoin_cmn.ts \\\n+  qt/locale/bitcoin_cs.ts \\\n+  qt/locale/bitcoin_cy.ts \\\n+  qt/locale/bitcoin_da.ts \\\n+  qt/locale/bitcoin_de.ts \\\n+  qt/locale/bitcoin_el_GR.ts \\\n+  qt/locale/bitcoin_en.ts \\\n+  qt/locale/bitcoin_eo.ts \\\n+  qt/locale/bitcoin_es_CL.ts \\\n+  qt/locale/bitcoin_es_DO.ts \\\n+  qt/locale/bitcoin_es_MX.ts \\\n+  qt/locale/bitcoin_es.ts \\\n+  qt/locale/bitcoin_es_UY.ts \\\n+  qt/locale/bitcoin_et.ts \\\n+  qt/locale/bitcoin_eu_ES.ts \\\n+  qt/locale/bitcoin_fa_IR.ts \\\n+  qt/locale/bitcoin_fa.ts \\\n+  qt/locale/bitcoin_fi.ts \\\n+  qt/locale/bitcoin_fr_CA.ts \\\n+  qt/locale/bitcoin_fr.ts \\\n+  qt/locale/bitcoin_gl.ts \\\n+  qt/locale/bitcoin_gu_IN.ts \\\n+  qt/locale/bitcoin_he.ts \\\n+  qt/locale/bitcoin_hi_IN.ts \\\n+  qt/locale/bitcoin_hr.ts \\\n+  qt/locale/bitcoin_hu.ts \\\n+  qt/locale/bitcoin_id_ID.ts \\\n+  qt/locale/bitcoin_it.ts \\\n+  qt/locale/bitcoin_ja.ts \\\n+  qt/locale/bitcoin_ka.ts \\\n+  qt/locale/bitcoin_kk_KZ.ts \\\n+  qt/locale/bitcoin_ko_KR.ts \\\n+  qt/locale/bitcoin_ky.ts \\\n+  qt/locale/bitcoin_la.ts \\\n+  qt/locale/bitcoin_lt.ts \\\n+  qt/locale/bitcoin_lv_LV.ts \\\n+  qt/locale/bitcoin_mn.ts \\\n+  qt/locale/bitcoin_ms_MY.ts \\\n+  qt/locale/bitcoin_nb.ts \\\n+  qt/locale/bitcoin_nl.ts \\\n+  qt/locale/bitcoin_pam.ts \\\n+  qt/locale/bitcoin_pl.ts \\\n+  qt/locale/bitcoin_pt_BR.ts \\\n+  qt/locale/bitcoin_pt_PT.ts \\\n+  qt/locale/bitcoin_ro_RO.ts \\\n+  qt/locale/bitcoin_ru.ts \\\n+  qt/locale/bitcoin_sah.ts \\\n+  qt/locale/bitcoin_sk.ts \\\n+  qt/locale/bitcoin_sl_SI.ts \\\n+  qt/locale/bitcoin_sq.ts \\\n+  qt/locale/bitcoin_sr.ts \\\n+  qt/locale/bitcoin_sv.ts \\\n+  qt/locale/bitcoin_th_TH.ts \\\n+  qt/locale/bitcoin_tr.ts \\\n+  qt/locale/bitcoin_uk.ts \\\n+  qt/locale/bitcoin_ur_PK.ts \\\n+  qt/locale/bitcoin_uz@Cyrl.ts \\\n+  qt/locale/bitcoin_vi.ts \\\n+  qt/locale/bitcoin_vi_VN.ts \\\n+  qt/locale/bitcoin_zh_CN.ts \\\n+  qt/locale/bitcoin_zh_HK.ts \\\n+  qt/locale/bitcoin_zh_TW.ts\n+\n+QT_FORMS_UI = \\\n+  qt/forms/addressbookpage.ui \\\n+  qt/forms/askpassphrasedialog.ui \\\n+  qt/forms/coincontroldialog.ui \\\n+  qt/forms/editaddressdialog.ui \\\n+  qt/forms/helpmessagedialog.ui \\\n+  qt/forms/intro.ui \\\n+  qt/forms/openuridialog.ui \\\n+  qt/forms/optionsdialog.ui \\\n+  qt/forms/overviewpage.ui \\\n+  qt/forms/receivecoinsdialog.ui \\\n+  qt/forms/receiverequestdialog.ui \\\n+  qt/forms/rpcconsole.ui \\\n+  qt/forms/sendcoinsdialog.ui \\\n+  qt/forms/sendcoinsentry.ui \\\n+  qt/forms/signverifymessagedialog.ui \\\n+  qt/forms/transactiondescdialog.ui\n+\n+QT_MOC_CPP = \\\n+  qt/moc_addressbookpage.cpp \\\n+  qt/moc_addresstablemodel.cpp \\\n+  qt/moc_askpassphrasedialog.cpp \\\n+  qt/moc_bitcoinaddressvalidator.cpp \\\n+  qt/moc_bitcoinamountfield.cpp \\\n+  qt/moc_bitcoingui.cpp \\\n+  qt/moc_bitcoinunits.cpp \\\n+  qt/moc_clientmodel.cpp \\\n+  qt/moc_coincontroldialog.cpp \\\n+  qt/moc_coincontroltreewidget.cpp \\\n+  qt/moc_csvmodelwriter.cpp \\\n+  qt/moc_editaddressdialog.cpp \\\n+  qt/moc_guiutil.cpp \\\n+  qt/moc_intro.cpp \\\n+  qt/moc_macdockiconhandler.cpp \\\n+  qt/moc_macnotificationhandler.cpp \\\n+  qt/moc_monitoreddatamapper.cpp \\\n+  qt/moc_notificator.cpp \\\n+  qt/moc_openuridialog.cpp \\\n+  qt/moc_optionsdialog.cpp \\\n+  qt/moc_optionsmodel.cpp \\\n+  qt/moc_overviewpage.cpp \\\n+  qt/moc_peertablemodel.cpp \\\n+  qt/moc_paymentserver.cpp \\\n+  qt/moc_qvalidatedlineedit.cpp \\\n+  qt/moc_qvaluecombobox.cpp \\\n+  qt/moc_receivecoinsdialog.cpp \\\n+  qt/moc_receiverequestdialog.cpp \\\n+  qt/moc_recentrequeststablemodel.cpp \\\n+  qt/moc_rpcconsole.cpp \\\n+  qt/moc_sendcoinsdialog.cpp \\\n+  qt/moc_sendcoinsentry.cpp \\\n+  qt/moc_signverifymessagedialog.cpp \\\n+  qt/moc_splashscreen.cpp \\\n+  qt/moc_trafficgraphwidget.cpp \\\n+  qt/moc_transactiondesc.cpp \\\n+  qt/moc_transactiondescdialog.cpp \\\n+  qt/moc_transactionfilterproxy.cpp \\\n+  qt/moc_transactiontablemodel.cpp \\\n+  qt/moc_transactionview.cpp \\\n+  qt/moc_utilitydialog.cpp \\\n+  qt/moc_walletframe.cpp \\\n+  qt/moc_walletmodel.cpp \\\n+  qt/moc_walletview.cpp\n+\n+BITCOIN_MM = \\\n+  qt/macdockiconhandler.mm \\\n+  qt/macnotificationhandler.mm\n+\n+QT_MOC = \\\n+  qt/bitcoin.moc \\\n+  qt/intro.moc \\\n+  qt/overviewpage.moc \\\n+  qt/rpcconsole.moc\n+\n+QT_QRC_CPP = qt/qrc_bitcoin.cpp\n+QT_QRC = qt/bitcoin.qrc\n+QT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cpp\n+QT_QRC_LOCALE = qt/bitcoin_locale.qrc\n+\n+PROTOBUF_CC = qt/paymentrequest.pb.cc\n+PROTOBUF_H = qt/paymentrequest.pb.h\n+PROTOBUF_PROTO = qt/paymentrequest.proto\n+\n+BITCOIN_QT_H = \\\n+  qt/addressbookpage.h \\\n+  qt/addresstablemodel.h \\\n+  qt/askpassphrasedialog.h \\\n+  qt/bitcoinaddressvalidator.h \\\n+  qt/bitcoinamountfield.h \\\n+  qt/bitcoingui.h \\\n+  qt/bitcoinunits.h \\\n+  qt/clientmodel.h \\\n+  qt/coincontroldialog.h \\\n+  qt/coincontroltreewidget.h \\\n+  qt/csvmodelwriter.h \\\n+  qt/editaddressdialog.h \\\n+  qt/guiconstants.h \\\n+  qt/guiutil.h \\\n+  qt/intro.h \\\n+  qt/macdockiconhandler.h \\\n+  qt/macnotificationhandler.h \\\n+  qt/monitoreddatamapper.h \\\n+  qt/notificator.h \\\n+  qt/openuridialog.h \\\n+  qt/optionsdialog.h \\\n+  qt/optionsmodel.h \\\n+  qt/overviewpage.h \\\n+  qt/paymentrequestplus.h \\\n+  qt/paymentserver.h \\\n+  qt/peertablemodel.h \\\n+  qt/qvalidatedlineedit.h \\\n+  qt/qvaluecombobox.h \\\n+  qt/receivecoinsdialog.h \\\n+  qt/receiverequestdialog.h \\\n+  qt/recentrequeststablemodel.h \\\n+  qt/rpcconsole.h \\\n+  qt/sendcoinsdialog.h \\\n+  qt/sendcoinsentry.h \\\n+  qt/signverifymessagedialog.h \\\n+  qt/splashscreen.h \\\n+  qt/trafficgraphwidget.h \\\n+  qt/transactiondesc.h \\\n+  qt/transactiondescdialog.h \\\n+  qt/transactionfilterproxy.h \\\n+  qt/transactionrecord.h \\\n+  qt/transactiontablemodel.h \\\n+  qt/transactionview.h \\\n+  qt/utilitydialog.h \\\n+  qt/walletframe.h \\\n+  qt/walletmodel.h \\\n+  qt/walletmodeltransaction.h \\\n+  qt/walletview.h \\\n+  qt/winshutdownmonitor.h\n+\n+RES_ICONS = \\\n+  qt/res/icons/add.png \\\n+  qt/res/icons/address-book.png \\\n+  qt/res/icons/bitcoin.ico \\\n+  qt/res/icons/bitcoin.png \\\n+  qt/res/icons/bitcoin_testnet.ico \\\n+  qt/res/icons/bitcoin_testnet.png \\\n+  qt/res/icons/clock1.png \\\n+  qt/res/icons/clock2.png \\\n+  qt/res/icons/clock3.png \\\n+  qt/res/icons/clock4.png \\\n+  qt/res/icons/clock5.png \\\n+  qt/res/icons/configure.png \\\n+  qt/res/icons/connect0_16.png \\\n+  qt/res/icons/connect1_16.png \\\n+  qt/res/icons/connect2_16.png \\\n+  qt/res/icons/connect3_16.png \\\n+  qt/res/icons/connect4_16.png \\\n+  qt/res/icons/debugwindow.png \\\n+  qt/res/icons/edit.png \\\n+  qt/res/icons/editcopy.png \\\n+  qt/res/icons/editpaste.png \\\n+  qt/res/icons/export.png \\\n+  qt/res/icons/filesave.png \\\n+  qt/res/icons/history.png \\\n+  qt/res/icons/key.png \\\n+  qt/res/icons/lock_closed.png \\\n+  qt/res/icons/lock_open.png \\\n+  qt/res/icons/overview.png \\\n+  qt/res/icons/qrcode.png \\\n+  qt/res/icons/quit.png \\\n+  qt/res/icons/receive.png \\\n+  qt/res/icons/remove.png \\\n+  qt/res/icons/send.png \\\n+  qt/res/icons/synced.png \\\n+  qt/res/icons/toolbar.png \\\n+  qt/res/icons/toolbar_testnet.png \\\n+  qt/res/icons/transaction0.png \\\n+  qt/res/icons/transaction2.png \\\n+  qt/res/icons/transaction_conflicted.png \\\n+  qt/res/icons/tx_inout.png \\\n+  qt/res/icons/tx_input.png \\\n+  qt/res/icons/tx_output.png \\\n+  qt/res/icons/tx_mined.png\n+\n+BITCOIN_QT_CPP = \\\n+  qt/bitcoinaddressvalidator.cpp \\\n+  qt/bitcoinamountfield.cpp \\\n+  qt/bitcoingui.cpp \\\n+  qt/bitcoinunits.cpp \\\n+  qt/clientmodel.cpp \\\n+  qt/csvmodelwriter.cpp \\\n+  qt/guiutil.cpp \\\n+  qt/intro.cpp \\\n+  qt/monitoreddatamapper.cpp \\\n+  qt/notificator.cpp \\\n+  qt/optionsdialog.cpp \\\n+  qt/optionsmodel.cpp \\\n+  qt/peertablemodel.cpp \\\n+  qt/qvalidatedlineedit.cpp \\\n+  qt/qvaluecombobox.cpp \\\n+  qt/rpcconsole.cpp \\\n+  qt/splashscreen.cpp \\\n+  qt/trafficgraphwidget.cpp \\\n+  qt/utilitydialog.cpp \\\n+  qt/winshutdownmonitor.cpp\n+\n+if ENABLE_WALLET\n+BITCOIN_QT_CPP += \\\n+  qt/addressbookpage.cpp \\\n+  qt/addresstablemodel.cpp \\\n+  qt/askpassphrasedialog.cpp \\\n+  qt/coincontroldialog.cpp \\\n+  qt/coincontroltreewidget.cpp \\\n+  qt/editaddressdialog.cpp \\\n+  qt/openuridialog.cpp \\\n+  qt/overviewpage.cpp \\\n+  qt/paymentrequestplus.cpp \\\n+  qt/paymentserver.cpp \\\n+  qt/receivecoinsdialog.cpp \\\n+  qt/receiverequestdialog.cpp \\\n+  qt/recentrequeststablemodel.cpp \\\n+  qt/sendcoinsdialog.cpp \\\n+  qt/sendcoinsentry.cpp \\\n+  qt/signverifymessagedialog.cpp \\\n+  qt/transactiondesc.cpp \\\n+  qt/transactiondescdialog.cpp \\\n+  qt/transactionfilterproxy.cpp \\\n+  qt/transactionrecord.cpp \\\n+  qt/transactiontablemodel.cpp \\\n+  qt/transactionview.cpp \\\n+  qt/walletframe.cpp \\\n+  qt/walletmodel.cpp \\\n+  qt/walletmodeltransaction.cpp \\\n+  qt/walletview.cpp\n+endif\n+\n+RES_IMAGES = \\\n+  qt/res/images/about.png \\\n+  qt/res/images/splash.png \\\n+  qt/res/images/splash_testnet.png\n+\n+RES_MOVIES = $(wildcard qt/res/movies/spinner-*.png)\n+\n+BITCOIN_RC = qt/res/bitcoin-qt-res.rc\n+\n+BITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \\\n+  -I$(builddir)/qt/forms\n+\n+qt_libbitcoinqt_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n+\n+qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n+  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n+\n+nodist_qt_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n+  $(PROTOBUF_H) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)\n+\n+# forms/foo.h -> forms/ui_foo.h\n+QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))\n+\n+# Most files will depend on the forms and moc files as includes. Generate them\n+# before anything else.\n+$(QT_MOC): $(QT_FORMS_H)\n+$(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) : | $(QT_MOC)\n+\n+#Generating these with a half-written protobuf header leads to wacky results.\n+#This makes sure it's done.\n+$(QT_MOC): $(PROTOBUF_H)\n+$(QT_MOC_CPP): $(PROTOBUF_H)\n+\n+# bitcoin-qt binary #\n+qt_bitcoin_qt_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+  $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n+\n+qt_bitcoin_qt_SOURCES = qt/bitcoin.cpp\n+if TARGET_DARWIN\n+  qt_bitcoin_qt_SOURCES += $(BITCOIN_MM)\n+endif\n+if TARGET_WINDOWS\n+  qt_bitcoin_qt_SOURCES += $(BITCOIN_RC)\n+endif\n+qt_bitcoin_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)\n+if ENABLE_WALLET\n+qt_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n+  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n+qt_bitcoin_qt_LDFLAGS = $(QT_LDFLAGS)\n+\n+#locale/foo.ts -> locale/foo.qm\n+QT_QM=$(QT_TS:.ts=.qm)\n+\n+.SECONDARY: $(QT_QM)\n+\n+qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_cli_a_SOURCES)\n+\t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n+\t$(AM_V_GEN) cd $(top_srcdir); XGETTEXT=$(XGETTEXT) share/qt/extract_strings_qt.py\n+\n+translate: qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n+\t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts qt/locale/bitcoin_en.ts\n+\n+$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)\n+\t@test -f $(RCC)\n+\t@test -f $(@D)/$(<F) || cp -f $< $(@D)\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin_locale $(@D)/$(<F) | \\\n+\t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n+\n+$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n+\t@test -f $(RCC)\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin $< | \\\n+\t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n+\n+CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno\n+\n+CLEANFILES += $(CLEAN_QT)\n+\n+bitcoin_qt_clean: FORCE\n+\trm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) qt/bitcoin-qt$(EXEEXT) $(LIBBITCOINQT)\n+\n+bitcoin_qt : qt/bitcoin-qt$(EXEEXT)\n+\n+ui_%.h: %.ui\n+\t@test -f $(UIC)\n+\t@$(MKDIR_P) $(@D)\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo \"Error creating $@\"; false)\n+\n+%.moc: %.cpp\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) $< | \\\n+\t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n+\n+moc_%.cpp: %.h\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(QT_INCLUDES) $(MOC_DEFS) $< | \\\n+\t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n+\n+%.qm: %.ts\n+\t@test -f $(LRELEASE)\n+\t@$(MKDIR_P) $(@D)\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@"
      },
      {
        "sha": "e0b49d02408a00f719f82a31fcf1826ff520ee69",
        "filename": "src/Makefile.qttest.include",
        "status": "added",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -0,0 +1,48 @@\n+bin_PROGRAMS += qt/test/test_bitcoin-qt\n+TESTS += qt/test/test_bitcoin-qt\n+\n+TEST_QT_MOC_CPP = qt/test/moc_uritests.cpp\n+\n+if ENABLE_WALLET\n+TEST_QT_MOC_CPP += qt/test/moc_paymentservertests.cpp\n+endif\n+\n+TEST_QT_H = \\\n+  qt/test/uritests.h \\\n+  qt/test/paymentrequestdata.h \\\n+  qt/test/paymentservertests.h\n+\n+qt_test_test_bitcoin_qt_CPPFLAGS = $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+  $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n+\n+qt_test_test_bitcoin_qt_SOURCES = \\\n+  qt/test/test_main.cpp \\\n+  qt/test/uritests.cpp \\\n+  $(TEST_QT_H)\n+if ENABLE_WALLET\n+qt_test_test_bitcoin_qt_SOURCES += \\\n+  qt/test/paymentservertests.cpp\n+endif\n+\n+nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n+\n+qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+if ENABLE_WALLET\n+qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n+  $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n+  $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n+qt_test_test_bitcoin_qt_LDFLAGS = $(QT_LDFLAGS)\n+\n+CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n+\n+CLEANFILES += $(CLEAN_BITCOIN_QT_TEST)\n+\n+test_bitcoin_qt : qt/test/test_bitcoin-qt$(EXEEXT)\n+\n+test_bitcoin_qt_check : qt/test/test_bitcoin-qt$(EXEEXT) FORCE\n+\t$(MAKE) check-TESTS TESTS=$^\n+\n+test_bitcoin_qt_clean: FORCE\n+\trm -f $(CLEAN_BITCOIN_QT_TEST) $(qt_test_test_bitcoin_qt_OBJECTS)"
      },
      {
        "sha": "988830260cd569b066a865be6e511d2eee4da062",
        "filename": "src/Makefile.test.include",
        "status": "added",
        "additions": 101,
        "deletions": 0,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -0,0 +1,101 @@\n+TESTS += test/test_bitcoin\n+bin_PROGRAMS += test/test_bitcoin\n+TEST_SRCDIR = test\n+TEST_BINARY=test/test_bitcoin$(EXEEXT)\n+\n+JSON_TEST_FILES = \\\n+  test/data/script_valid.json \\\n+  test/data/base58_keys_valid.json \\\n+  test/data/sig_canonical.json \\\n+  test/data/sig_noncanonical.json \\\n+  test/data/base58_encode_decode.json \\\n+  test/data/base58_keys_invalid.json \\\n+  test/data/script_invalid.json \\\n+  test/data/tx_invalid.json \\\n+  test/data/tx_valid.json \\\n+  test/data/sighash.json\n+\n+RAW_TEST_FILES = test/data/alertTests.raw\n+\n+GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n+\n+BITCOIN_TESTS =\\\n+  test/bignum.h \\\n+  test/alert_tests.cpp \\\n+  test/allocator_tests.cpp \\\n+  test/base32_tests.cpp \\\n+  test/base58_tests.cpp \\\n+  test/base64_tests.cpp \\\n+  test/bloom_tests.cpp \\\n+  test/canonical_tests.cpp \\\n+  test/checkblock_tests.cpp \\\n+  test/Checkpoints_tests.cpp \\\n+  test/compress_tests.cpp \\\n+  test/DoS_tests.cpp \\\n+  test/getarg_tests.cpp \\\n+  test/key_tests.cpp \\\n+  test/main_tests.cpp \\\n+  test/miner_tests.cpp \\\n+  test/mruset_tests.cpp \\\n+  test/multisig_tests.cpp \\\n+  test/netbase_tests.cpp \\\n+  test/pmt_tests.cpp \\\n+  test/rpc_tests.cpp \\\n+  test/script_P2SH_tests.cpp \\\n+  test/script_tests.cpp \\\n+  test/serialize_tests.cpp \\\n+  test/sigopcount_tests.cpp \\\n+  test/test_bitcoin.cpp \\\n+  test/transaction_tests.cpp \\\n+  test/uint256_tests.cpp \\\n+  test/util_tests.cpp \\\n+  test/scriptnum_tests.cpp \\\n+  test/sighash_tests.cpp\n+\n+if ENABLE_WALLET\n+BITCOIN_TESTS += \\\n+  test/accounting_tests.cpp \\\n+  test/wallet_tests.cpp \\\n+  test/rpc_wallet_tests.cpp\n+endif\n+\n+test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n+test_test_bitcoin_CPPFLAGS = $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS)\n+test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n+  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+if ENABLE_WALLET\n+test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+endif\n+test_test_bitcoin_LDADD += $(BDB_LIBS)\n+\n+nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n+\n+$(BITCOIN_TESTS): $(GENERATED_TEST_FILES)\n+\n+CLEAN_BITCOIN_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)\n+\n+CLEANFILES += $(CLEAN_BITCOIN_TEST)\n+\n+bitcoin_test: $(TEST_BINARY)\n+\n+bitcoin_test_check: $(TEST_BINARY) FORCE\n+\t$(MAKE) check-TESTS TESTS=$^\n+\n+bitcoin_test_clean : FORCE\n+\trm -f $(CLEAN_BITCOIN_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)\n+\n+%.json.h: %.json\n+\t@$(MKDIR_P) $(@D)\n+\t@echo \"namespace json_tests{\" > $@\n+\t@echo \"static unsigned const char $(*F)[] = {\" >> $@\n+\t@$(HEXDUMP) -v -e '8/1 \"0x%02x, \"' -e '\"\\n\"' $< | $(SED) -e 's/0x  ,//g' >> $@\n+\t@echo \"};};\" >> $@\n+\t@echo \"Generated $@\"\n+\n+%.raw.h: %.raw\n+\t@$(MKDIR_P) $(@D)\n+\t@echo \"namespace alert_tests{\" > $@\n+\t@echo \"static unsigned const char $(*F)[] = {\" >> $@\n+\t@$(HEXDUMP) -v -e '8/1 \"0x%02x, \"' -e '\"\\n\"' $< | $(SED) -e 's/0x  ,//g' >> $@\n+\t@echo \"};};\" >> $@\n+\t@echo \"Generated $@\""
      },
      {
        "sha": "5328a93b451b1fd1fc81c4737e7f801a16fd639e",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -420,7 +420,7 @@ class CAddrMan\n             Check();\n         }\n         if (fRet)\n-            LogPrint(\"addrman\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString().c_str(), nTried, nNew);\n+            LogPrint(\"addrman\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString(), nTried, nNew);\n         return fRet;\n     }\n \n@@ -436,7 +436,7 @@ class CAddrMan\n             Check();\n         }\n         if (nAdd)\n-            LogPrint(\"addrman\", \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString().c_str(), nTried, nNew);\n+            LogPrint(\"addrman\", \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString(), nTried, nNew);\n         return nAdd > 0;\n     }\n "
      },
      {
        "sha": "638f0d7a1c1d7c2506fc8ffb049fb340bac80787",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -5,6 +5,7 @@\n \n #include \"alert.h\"\n \n+#include \"chainparams.h\"\n #include \"key.h\"\n #include \"net.h\"\n #include \"ui_interface.h\""
      },
      {
        "sha": "1bd64684e58c70a7f9aa2e0b3d77d05715052195",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -114,9 +114,8 @@ std::string EncodeBase58Check(const std::vector<unsigned char>& vchIn) {\n }\n \n bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet) {\n-    if (!DecodeBase58(psz, vchRet))\n-        return false;\n-    if (vchRet.size() < 4)\n+    if (!DecodeBase58(psz, vchRet) ||\n+        (vchRet.size() < 4))\n     {\n         vchRet.clear();\n         return false;\n@@ -154,8 +153,8 @@ void CBase58Data::SetData(const std::vector<unsigned char> &vchVersionIn, const\n \n bool CBase58Data::SetString(const char* psz, unsigned int nVersionBytes) {\n     std::vector<unsigned char> vchTemp;\n-    DecodeBase58Check(psz, vchTemp);\n-    if (vchTemp.size() < nVersionBytes) {\n+    bool rc58 = DecodeBase58Check(psz, vchTemp);\n+    if ((!rc58) || (vchTemp.size() < nVersionBytes)) {\n         vchData.clear();\n         vchVersion.clear();\n         return false;"
      },
      {
        "sha": "40b45415c4c549a97b4af6072a845fae74661a16",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 172,
        "deletions": 13,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -12,6 +12,33 @@\n \n #include <boost/filesystem/operations.hpp>\n \n+using namespace std;\n+using namespace boost;\n+using namespace boost::asio;\n+using namespace json_spirit;\n+\n+std::string HelpMessageCli()\n+{\n+    string strUsage;\n+    strUsage += _(\"Options:\") + \"\\n\";\n+    strUsage += \"  -?                     \" + _(\"This help message\") + \"\\n\";\n+    strUsage += \"  -conf=<file>           \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\";\n+    strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n+    strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n+    strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n+                                                \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n+    strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n+    strUsage += \"  -rpcport=<port>        \" + _(\"Connect to JSON-RPC on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n+    strUsage += \"  -rpcwait               \" + _(\"Wait for RPC server to start\") + \"\\n\";\n+    strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n+    strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n+\n+    strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n+    strUsage += \"  -rpcssl                \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";\n+\n+    return strUsage;\n+}\n+\n //////////////////////////////////////////////////////////////////////////////\n //\n // Start\n@@ -33,47 +60,179 @@ static bool AppInitRPC(int argc, char* argv[])\n         fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n         return false;\n     }\n-    // Check for -testnet or -regtest parameter (TestNet() calls are only valid after this clause)\n+    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n     if (!SelectParamsFromCommandLine()) {\n         fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n         return false;\n     }\n \n-    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n+    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n     {\n-        // First part of help message is specific to RPC client\n-        std::string strUsage = _(\"Bitcoin Core RPC client version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n-            _(\"Usage:\") + \"\\n\" +\n-              \"  bitcoin-cli [options] <command> [params]  \" + _(\"Send command to Bitcoin Core\") + \"\\n\" +\n-              \"  bitcoin-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n-              \"  bitcoin-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n+        std::string strUsage = _(\"Bitcoin Core RPC client version\") + \" \" + FormatFullVersion() + \"\\n\";\n+        if (!mapArgs.count(\"-version\"))\n+        {\n+            strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n+                  \"  bitcoin-cli [options] <command> [params]  \" + _(\"Send command to Bitcoin Core\") + \"\\n\" +\n+                  \"  bitcoin-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n+                  \"  bitcoin-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n \n-        strUsage += \"\\n\" + HelpMessageCli(true);\n+            strUsage += \"\\n\" + HelpMessageCli();\n+        }\n \n         fprintf(stdout, \"%s\", strUsage.c_str());\n         return false;\n     }\n     return true;\n }\n \n+Object CallRPC(const string& strMethod, const Array& params)\n+{\n+    if (mapArgs[\"-rpcuser\"] == \"\" && mapArgs[\"-rpcpassword\"] == \"\")\n+        throw runtime_error(strprintf(\n+            _(\"You must set rpcpassword=<password> in the configuration file:\\n%s\\n\"\n+              \"If the file does not exist, create it with owner-readable-only file permissions.\"),\n+                GetConfigFile().string().c_str()));\n+\n+    // Connect to localhost\n+    bool fUseSSL = GetBoolArg(\"-rpcssl\", false);\n+    asio::io_service io_service;\n+    ssl::context context(io_service, ssl::context::sslv23);\n+    context.set_options(ssl::context::no_sslv2);\n+    asio::ssl::stream<asio::ip::tcp::socket> sslStream(io_service, context);\n+    SSLIOStreamDevice<asio::ip::tcp> d(sslStream, fUseSSL);\n+    iostreams::stream< SSLIOStreamDevice<asio::ip::tcp> > stream(d);\n+\n+    bool fWait = GetBoolArg(\"-rpcwait\", false); // -rpcwait means try until server has started\n+    do {\n+        bool fConnected = d.connect(GetArg(\"-rpcconnect\", \"127.0.0.1\"), GetArg(\"-rpcport\", itostr(Params().RPCPort())));\n+        if (fConnected) break;\n+        if (fWait)\n+            MilliSleep(1000);\n+        else\n+            throw runtime_error(\"couldn't connect to server\");\n+    } while (fWait);\n+\n+    // HTTP basic authentication\n+    string strUserPass64 = EncodeBase64(mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"]);\n+    map<string, string> mapRequestHeaders;\n+    mapRequestHeaders[\"Authorization\"] = string(\"Basic \") + strUserPass64;\n+\n+    // Send request\n+    string strRequest = JSONRPCRequest(strMethod, params, 1);\n+    string strPost = HTTPPost(strRequest, mapRequestHeaders);\n+    stream << strPost << std::flush;\n+\n+    // Receive HTTP reply status\n+    int nProto = 0;\n+    int nStatus = ReadHTTPStatus(stream, nProto);\n+\n+    // Receive HTTP reply message headers and body\n+    map<string, string> mapHeaders;\n+    string strReply;\n+    ReadHTTPMessage(stream, mapHeaders, strReply, nProto);\n+\n+    if (nStatus == HTTP_UNAUTHORIZED)\n+        throw runtime_error(\"incorrect rpcuser or rpcpassword (authorization failed)\");\n+    else if (nStatus >= 400 && nStatus != HTTP_BAD_REQUEST && nStatus != HTTP_NOT_FOUND && nStatus != HTTP_INTERNAL_SERVER_ERROR)\n+        throw runtime_error(strprintf(\"server returned HTTP error %d\", nStatus));\n+    else if (strReply.empty())\n+        throw runtime_error(\"no response from server\");\n+\n+    // Parse reply\n+    Value valReply;\n+    if (!read_string(strReply, valReply))\n+        throw runtime_error(\"couldn't parse reply from server\");\n+    const Object& reply = valReply.get_obj();\n+    if (reply.empty())\n+        throw runtime_error(\"expected reply to have result, error and id properties\");\n+\n+    return reply;\n+}\n+\n+int CommandLineRPC(int argc, char *argv[])\n+{\n+    string strPrint;\n+    int nRet = 0;\n+    try\n+    {\n+        // Skip switches\n+        while (argc > 1 && IsSwitchChar(argv[1][0]))\n+        {\n+            argc--;\n+            argv++;\n+        }\n+\n+        // Method\n+        if (argc < 2)\n+            throw runtime_error(\"too few parameters\");\n+        string strMethod = argv[1];\n+\n+        // Parameters default to strings\n+        std::vector<std::string> strParams(&argv[2], &argv[argc]);\n+        Array params = RPCConvertValues(strMethod, strParams);\n+\n+        // Execute\n+        Object reply = CallRPC(strMethod, params);\n+\n+        // Parse reply\n+        const Value& result = find_value(reply, \"result\");\n+        const Value& error  = find_value(reply, \"error\");\n+\n+        if (error.type() != null_type)\n+        {\n+            // Error\n+            strPrint = \"error: \" + write_string(error, false);\n+            int code = find_value(error.get_obj(), \"code\").get_int();\n+            nRet = abs(code);\n+        }\n+        else\n+        {\n+            // Result\n+            if (result.type() == null_type)\n+                strPrint = \"\";\n+            else if (result.type() == str_type)\n+                strPrint = result.get_str();\n+            else\n+                strPrint = write_string(result, true);\n+        }\n+    }\n+    catch (boost::thread_interrupted) {\n+        throw;\n+    }\n+    catch (std::exception& e) {\n+        strPrint = string(\"error: \") + e.what();\n+        nRet = EXIT_FAILURE;\n+    }\n+    catch (...) {\n+        PrintExceptionContinue(NULL, \"CommandLineRPC()\");\n+        throw;\n+    }\n+\n+    if (strPrint != \"\")\n+    {\n+        fprintf((nRet == 0 ? stdout : stderr), \"%s\\n\", strPrint.c_str());\n+    }\n+    return nRet;\n+}\n+\n int main(int argc, char* argv[])\n {\n     SetupEnvironment();\n \n     try\n     {\n         if(!AppInitRPC(argc, argv))\n-            return abs(RPC_MISC_ERROR);\n+            return EXIT_FAILURE;\n     }\n     catch (std::exception& e) {\n         PrintExceptionContinue(&e, \"AppInitRPC()\");\n-        return abs(RPC_MISC_ERROR);\n+        return EXIT_FAILURE;\n     } catch (...) {\n         PrintExceptionContinue(NULL, \"AppInitRPC()\");\n-        return abs(RPC_MISC_ERROR);\n+        return EXIT_FAILURE;\n     }\n \n-    int ret = abs(RPC_MISC_ERROR);\n+    int ret = EXIT_FAILURE;\n     try\n     {\n         ret = CommandLineRPC(argc, argv);"
      },
      {
        "sha": "880955481b0e041fae5adeceef99ace9b9826d3d",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 16,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -4,7 +4,6 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"rpcserver.h\"\n-#include \"rpcclient.h\"\n #include \"init.h\"\n #include \"main.h\"\n #include \"noui.h\"\n@@ -77,25 +76,27 @@ bool AppInit(int argc, char* argv[])\n             fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n             return false;\n         }\n-        // Check for -testnet or -regtest parameter (TestNet() calls are only valid after this clause)\n+        // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n         if (!SelectParamsFromCommandLine()) {\n             fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n             return false;\n         }\n \n-        if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n+        if (mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n         {\n-            // First part of help message is specific to bitcoind / RPC client\n-            std::string strUsage = _(\"Bitcoin Core Daemon\") + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n-                _(\"Usage:\") + \"\\n\" +\n-                  \"  bitcoind [options]                     \" + _(\"Start Bitcoin Core Daemon\") + \"\\n\" +\n-                _(\"Usage (deprecated, use bitcoin-cli):\") + \"\\n\" +\n-                  \"  bitcoind [options] <command> [params]  \" + _(\"Send command to Bitcoin Core\") + \"\\n\" +\n-                  \"  bitcoind [options] help                \" + _(\"List commands\") + \"\\n\" +\n-                  \"  bitcoind [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n-\n-            strUsage += \"\\n\" + HelpMessage(HMM_BITCOIND);\n-            strUsage += \"\\n\" + HelpMessageCli(false);\n+            std::string strUsage = _(\"Bitcoin Core Daemon\") + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\";\n+\n+            if (mapArgs.count(\"-version\"))\n+            {\n+                strUsage += LicenseInfo();\n+            }\n+            else\n+            {\n+                strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n+                      \"  bitcoind [options]                     \" + _(\"Start Bitcoin Core Daemon\") + \"\\n\";\n+\n+                strUsage += \"\\n\" + HelpMessage(HMM_BITCOIND);\n+            }\n \n             fprintf(stdout, \"%s\", strUsage.c_str());\n             return false;\n@@ -109,8 +110,8 @@ bool AppInit(int argc, char* argv[])\n \n         if (fCommandLine)\n         {\n-            int ret = CommandLineRPC(argc, argv);\n-            exit(ret);\n+            fprintf(stderr, \"Error: There is no RPC client functionality in bitcoind anymore. Use the bitcoin-cli utility instead.\\n\");\n+            exit(1);\n         }\n #ifndef WIN32\n         fDaemon = GetBoolArg(\"-daemon\", false);"
      },
      {
        "sha": "31eac62d48fab90e278602efbb05a90dee41ce2c",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 17,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -6,12 +6,11 @@\n #include \"chainparams.h\"\n \n #include \"assert.h\"\n-#include \"core.h\"\n-#include \"protocol.h\"\n #include \"util.h\"\n \n #include <boost/assign/list_of.hpp>\n \n+using namespace std;\n using namespace boost::assign;\n \n //\n@@ -100,6 +99,8 @@ unsigned int pnSeed[] =\n class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n+        networkID = CChainParams::MAIN;\n+        strNetworkID = \"main\";\n         // The message start string is designed to be unlikely to occur in normal data.\n         // The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n         // a large 4-byte int at any alignment.\n@@ -112,6 +113,10 @@ class CMainParams : public CChainParams {\n         nRPCPort = 8332;\n         bnProofOfWorkLimit = ~uint256(0) >> 32;\n         nSubsidyHalvingInterval = 210000;\n+        nEnforceBlockUpgradeMajority = 750;\n+        nRejectBlockOutdatedMajority = 950;\n+        nToCheckBlockUpgradeMajority = 1000;\n+        nMinerThreads = 0;\n \n         // Build the genesis block. Note that the output of the genesis coinbase cannot\n         // be spent as it did not originally exist in the database.\n@@ -167,27 +172,25 @@ class CMainParams : public CChainParams {\n             addr.nTime = GetTime() - GetRand(nOneWeek) - nOneWeek;\n             vFixedSeeds.push_back(addr);\n         }\n-    }\n-\n-    virtual const CBlock& GenesisBlock() const { return genesis; }\n-    virtual Network NetworkID() const { return CChainParams::MAIN; }\n \n-    virtual const vector<CAddress>& FixedSeeds() const {\n-        return vFixedSeeds;\n+        fRequireRPCPassword = true;\n+        fMiningRequiresPeers = true;\n+        fDefaultCheckMemPool = false;\n+        fAllowMinDifficultyBlocks = false;\n+        fRequireStandard = true;\n+        fMineBlocksOnDemand = false;\n     }\n-protected:\n-    CBlock genesis;\n-    vector<CAddress> vFixedSeeds;\n };\n static CMainParams mainParams;\n \n-\n //\n // Testnet (v3)\n //\n class CTestNetParams : public CMainParams {\n public:\n     CTestNetParams() {\n+        networkID = CChainParams::TESTNET;\n+        strNetworkID = \"test\";\n         // The message start string is designed to be unlikely to occur in normal data.\n         // The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n         // a large 4-byte int at any alignment.\n@@ -198,6 +201,9 @@ class CTestNetParams : public CMainParams {\n         vAlertPubKey = ParseHex(\"04302390343f91cc401d56d68b123028bf52e5fca1939df127f63c6467cdf9c8e2c14b61104cf817d0b780da337893ecc4aaff1309e536162dabbdb45200ca2b0a\");\n         nDefaultPort = 18333;\n         nRPCPort = 18332;\n+        nEnforceBlockUpgradeMajority = 51;\n+        nRejectBlockOutdatedMajority = 75;\n+        nToCheckBlockUpgradeMajority = 100;\n         strDataDir = \"testnet3\";\n \n         // Modify the testnet genesis block so the timestamp is valid for a later start.\n@@ -208,6 +214,7 @@ class CTestNetParams : public CMainParams {\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n+        vSeeds.push_back(CDNSSeedData(\"alexykot.me\", \"testnet-seed.alexykot.me\"));\n         vSeeds.push_back(CDNSSeedData(\"bitcoin.petertodd.org\", \"testnet-seed.bitcoin.petertodd.org\"));\n         vSeeds.push_back(CDNSSeedData(\"bluematt.me\", \"testnet-seed.bluematt.me\"));\n \n@@ -216,23 +223,34 @@ class CTestNetParams : public CMainParams {\n         base58Prefixes[SECRET_KEY]     = list_of(239);\n         base58Prefixes[EXT_PUBLIC_KEY] = list_of(0x04)(0x35)(0x87)(0xCF);\n         base58Prefixes[EXT_SECRET_KEY] = list_of(0x04)(0x35)(0x83)(0x94);\n+\n+        fRequireRPCPassword = true;\n+        fMiningRequiresPeers = true;\n+        fDefaultCheckMemPool = false;\n+        fAllowMinDifficultyBlocks = true;\n+        fRequireStandard = false;\n+        fMineBlocksOnDemand = false;\n     }\n-    virtual Network NetworkID() const { return CChainParams::TESTNET; }\n };\n static CTestNetParams testNetParams;\n \n-\n //\n // Regression test\n //\n class CRegTestParams : public CTestNetParams {\n public:\n     CRegTestParams() {\n+        networkID = CChainParams::REGTEST;\n+        strNetworkID = \"regtest\";\n         pchMessageStart[0] = 0xfa;\n         pchMessageStart[1] = 0xbf;\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n         nSubsidyHalvingInterval = 150;\n+        nEnforceBlockUpgradeMajority = 750;\n+        nRejectBlockOutdatedMajority = 950;\n+        nToCheckBlockUpgradeMajority = 1000;\n+        nMinerThreads = 1;\n         bnProofOfWorkLimit = ~uint256(0) >> 1;\n         genesis.nTime = 1296688602;\n         genesis.nBits = 0x207fffff;\n@@ -243,10 +261,14 @@ class CRegTestParams : public CTestNetParams {\n         assert(hashGenesisBlock == uint256(\"0x0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"));\n \n         vSeeds.clear();  // Regtest mode doesn't have any DNS seeds.\n-    }\n \n-    virtual bool RequireRPCPassword() const { return false; }\n-    virtual Network NetworkID() const { return CChainParams::REGTEST; }\n+        fRequireRPCPassword = false;\n+        fMiningRequiresPeers = false;\n+        fDefaultCheckMemPool = true;\n+        fAllowMinDifficultyBlocks = true;\n+        fRequireStandard = false;\n+        fMineBlocksOnDemand = true;\n+    }\n };\n static CRegTestParams regTestParams;\n "
      },
      {
        "sha": "c0a6ebda6b3f24c42b82fc43c4085b617a1fa0cc",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 49,
        "deletions": 28,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -6,21 +6,17 @@\n #ifndef BITCOIN_CHAIN_PARAMS_H\n #define BITCOIN_CHAIN_PARAMS_H\n \n+#include \"core.h\"\n+#include \"protocol.h\"\n #include \"uint256.h\"\n \n #include <vector>\n \n-using namespace std;\n-\n-#define MESSAGE_START_SIZE 4\n typedef unsigned char MessageStartChars[MESSAGE_START_SIZE];\n \n-class CAddress;\n-class CBlock;\n-\n struct CDNSSeedData {\n-    string name, host;\n-    CDNSSeedData(const string &strName, const string &strHost) : name(strName), host(strHost) {}\n+    std::string name, host;\n+    CDNSSeedData(const std::string &strName, const std::string &strHost) : name(strName), host(strHost) {}\n };\n \n /**\n@@ -53,32 +49,66 @@ class CChainParams\n \n     const uint256& HashGenesisBlock() const { return hashGenesisBlock; }\n     const MessageStartChars& MessageStart() const { return pchMessageStart; }\n-    const vector<unsigned char>& AlertKey() const { return vAlertPubKey; }\n+    const std::vector<unsigned char>& AlertKey() const { return vAlertPubKey; }\n     int GetDefaultPort() const { return nDefaultPort; }\n     const uint256& ProofOfWorkLimit() const { return bnProofOfWorkLimit; }\n     int SubsidyHalvingInterval() const { return nSubsidyHalvingInterval; }\n-    virtual const CBlock& GenesisBlock() const = 0;\n-    virtual bool RequireRPCPassword() const { return true; }\n-    const string& DataDir() const { return strDataDir; }\n-    virtual Network NetworkID() const = 0;\n-    const vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n-    const std::vector<unsigned char> &Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n-    virtual const vector<CAddress>& FixedSeeds() const = 0;\n+    /* Used to check majorities for block version upgrade */\n+    int EnforceBlockUpgradeMajority() const { return nEnforceBlockUpgradeMajority; }\n+    int RejectBlockOutdatedMajority() const { return nRejectBlockOutdatedMajority; }\n+    int ToCheckBlockUpgradeMajority() const { return nToCheckBlockUpgradeMajority; }\n+\n+    /* Used if GenerateBitcoins is called with a negative number of threads */\n+    int DefaultMinerThreads() const { return nMinerThreads; }\n+    const CBlock& GenesisBlock() const { return genesis; }\n+    bool RequireRPCPassword() const { return fRequireRPCPassword; }\n+    /* Make miner wait to have peers to avoid wasting work */\n+    bool MiningRequiresPeers() const { return fMiningRequiresPeers; }\n+    /* Default value for -checkmempool argument */\n+    bool DefaultCheckMemPool() const { return fDefaultCheckMemPool; }\n+    /* Allow mining of a min-difficulty block */\n+    bool AllowMinDifficultyBlocks() const { return fAllowMinDifficultyBlocks; }\n+    /* Make standard checks */\n+    bool RequireStandard() const { return fRequireStandard; }\n+    const std::string& DataDir() const { return strDataDir; }\n+    /* Make miner stop after a block is found. In RPC, don't return\n+     * until nGenProcLimit blocks are generated */\n+    bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n+    Network NetworkID() const { return networkID; }\n+    /* Return the BIP70 network string (main, test or regtest) */\n+    std::string NetworkIDString() const { return strNetworkID; }\n+    const std::vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n+    const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n+    const std::vector<CAddress>& FixedSeeds() const { return vFixedSeeds; }\n     int RPCPort() const { return nRPCPort; }\n protected:\n     CChainParams() {}\n \n     uint256 hashGenesisBlock;\n     MessageStartChars pchMessageStart;\n     // Raw pub key bytes for the broadcast alert signing key.\n-    vector<unsigned char> vAlertPubKey;\n+    std::vector<unsigned char> vAlertPubKey;\n     int nDefaultPort;\n     int nRPCPort;\n     uint256 bnProofOfWorkLimit;\n     int nSubsidyHalvingInterval;\n-    string strDataDir;\n-    vector<CDNSSeedData> vSeeds;\n+    int nEnforceBlockUpgradeMajority;\n+    int nRejectBlockOutdatedMajority;\n+    int nToCheckBlockUpgradeMajority;\n+    std::string strDataDir;\n+    int nMinerThreads;\n+    std::vector<CDNSSeedData> vSeeds;\n     std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n+    Network networkID;\n+    std::string strNetworkID;\n+    CBlock genesis;\n+    std::vector<CAddress> vFixedSeeds;\n+    bool fRequireRPCPassword;\n+    bool fMiningRequiresPeers;\n+    bool fDefaultCheckMemPool;\n+    bool fAllowMinDifficultyBlocks;\n+    bool fRequireStandard;\n+    bool fMineBlocksOnDemand;\n };\n \n /**\n@@ -96,13 +126,4 @@ void SelectParams(CChainParams::Network network);\n  */\n bool SelectParamsFromCommandLine();\n \n-inline bool TestNet() {\n-    // Note: it's deliberate that this returns \"false\" for regression test mode.\n-    return Params().NetworkID() == CChainParams::TESTNET;\n-}\n-\n-inline bool RegTest() {\n-    return Params().NetworkID() == CChainParams::REGTEST;\n-}\n-\n #endif"
      },
      {
        "sha": "926949e06a3c2ffbccfec6d46df1ec76539dbc86",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -66,8 +66,8 @@ namespace Checkpoints\n         ;\n     static const CCheckpointData dataTestnet = {\n         &mapCheckpointsTestnet,\n-        1338180505,\n-        16341,\n+        1337966069,\n+        1488,\n         300\n     };\n "
      },
      {
        "sha": "6039986e6c64b42440fd79268955bd2381a73bba",
        "filename": "src/core.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 27,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/core.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/core.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -72,38 +72,28 @@ void CTxOut::print() const\n     LogPrintf(\"%s\\n\", ToString());\n }\n \n-uint256 CTransaction::GetHash() const\n+CFeeRate::CFeeRate(int64_t nFeePaid, size_t nSize)\n {\n-    return SerializeHash(*this);\n+    if (nSize > 0)\n+        nSatoshisPerK = nFeePaid*1000/nSize;\n+    else\n+        nSatoshisPerK = 0;\n }\n \n-bool CTransaction::IsNewerThan(const CTransaction& old) const\n+int64_t CFeeRate::GetFee(size_t nSize)\n {\n-    if (vin.size() != old.vin.size())\n-        return false;\n-    for (unsigned int i = 0; i < vin.size(); i++)\n-        if (vin[i].prevout != old.vin[i].prevout)\n-            return false;\n+    return nSatoshisPerK*nSize / 1000;\n+}\n \n-    bool fNewer = false;\n-    unsigned int nLowest = std::numeric_limits<unsigned int>::max();\n-    for (unsigned int i = 0; i < vin.size(); i++)\n-    {\n-        if (vin[i].nSequence != old.vin[i].nSequence)\n-        {\n-            if (vin[i].nSequence <= nLowest)\n-            {\n-                fNewer = false;\n-                nLowest = vin[i].nSequence;\n-            }\n-            if (old.vin[i].nSequence < nLowest)\n-            {\n-                fNewer = true;\n-                nLowest = old.vin[i].nSequence;\n-            }\n-        }\n-    }\n-    return fNewer;\n+std::string CFeeRate::ToString() const\n+{\n+    std::string result = FormatMoney(nSatoshisPerK) + \" BTC/kB\";\n+    return result;\n+}\n+\n+uint256 CTransaction::GetHash() const\n+{\n+    return SerializeHash(*this);\n }\n \n int64_t CTransaction::GetValueOut() const"
      },
      {
        "sha": "0e5912934962cab3cc5c4d8d4e9b6049b1271ec7",
        "filename": "src/core.h",
        "status": "modified",
        "additions": 33,
        "deletions": 8,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/core.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/core.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -112,6 +112,31 @@ class CTxIn\n \n \n \n+/** Type-safe wrapper class to for fee rates\n+ * (how much to pay based on transaction size)\n+ */\n+class CFeeRate\n+{\n+private:\n+    int64_t nSatoshisPerK; // unit is satoshis-per-1,000-bytes\n+public:\n+    CFeeRate() : nSatoshisPerK(0) { }\n+    explicit CFeeRate(int64_t _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) { }\n+    CFeeRate(int64_t nFeePaid, size_t nSize);\n+    CFeeRate(const CFeeRate& other) { nSatoshisPerK = other.nSatoshisPerK; }\n+\n+    int64_t GetFee(size_t size); // unit returned is satoshis\n+    int64_t GetFeePerK() { return GetFee(1000); } // satoshis-per-1000-bytes\n+\n+    friend bool operator<(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK < b.nSatoshisPerK; }\n+    friend bool operator>(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK > b.nSatoshisPerK; }\n+    friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK == b.nSatoshisPerK; }\n+\n+    std::string ToString() const;\n+\n+    IMPLEMENT_SERIALIZE( READWRITE(nSatoshisPerK); )\n+};\n+\n \n /** An output of a transaction.  It contains the public key that the next input\n  * must be able to sign with to claim it.\n@@ -148,17 +173,18 @@ class CTxOut\n \n     uint256 GetHash() const;\n \n-    bool IsDust(int64_t nMinRelayTxFee) const\n+    bool IsDust(CFeeRate minRelayTxFee) const\n     {\n-        // \"Dust\" is defined in terms of CTransaction::nMinRelayTxFee,\n+        // \"Dust\" is defined in terms of CTransaction::minRelayTxFee,\n         // which has units satoshis-per-kilobyte.\n         // If you'd pay more than 1/3 in fees\n         // to spend something, then we consider it dust.\n         // A typical txout is 34 bytes big, and will\n-        // need a CTxIn of at least 148 bytes to spend,\n+        // need a CTxIn of at least 148 bytes to spend:\n         // so dust is a txout less than 546 satoshis \n-        // with default nMinRelayTxFee.\n-        return ((nValue*1000)/(3*((int)GetSerializeSize(SER_DISK,0)+148)) < nMinRelayTxFee);\n+        // with default minRelayTxFee.\n+        size_t nSize = GetSerializeSize(SER_DISK,0)+148u;\n+        return (nValue < 3*minRelayTxFee.GetFee(nSize));\n     }\n \n     friend bool operator==(const CTxOut& a, const CTxOut& b)\n@@ -183,8 +209,8 @@ class CTxOut\n class CTransaction\n {\n public:\n-    static int64_t nMinTxFee;\n-    static int64_t nMinRelayTxFee;\n+    static CFeeRate minTxFee;\n+    static CFeeRate minRelayTxFee;\n     static const int CURRENT_VERSION=1;\n     int nVersion;\n     std::vector<CTxIn> vin;\n@@ -219,7 +245,6 @@ class CTransaction\n     }\n \n     uint256 GetHash() const;\n-    bool IsNewerThan(const CTransaction& old) const;\n \n     // Return sum of txouts.\n     int64_t GetValueOut() const;"
      },
      {
        "sha": "6ad2c58c8f838b853490d530cc53e2c491398c7c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 74,
        "deletions": 17,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -11,6 +11,7 @@\n \n #include \"addrman.h\"\n #include \"checkpoints.h\"\n+#include \"key.h\"\n #include \"main.h\"\n #include \"miner.h\"\n #include \"net.h\"\n@@ -40,7 +41,6 @@ using namespace std;\n using namespace boost;\n \n #ifdef ENABLE_WALLET\n-std::string strWalletFile;\n CWallet* pwalletMain;\n #endif\n \n@@ -60,6 +60,7 @@ enum BindFlags {\n     BF_REPORT_ERROR = (1U << 1)\n };\n \n+static const char* FEE_ESTIMATES_FILENAME=\"fee_estimates.dat\";\n \n //////////////////////////////////////////////////////////////////////////////\n //\n@@ -122,6 +123,14 @@ void Shutdown()\n #endif\n     StopNode();\n     UnregisterNodeSignals(GetNodeSignals());\n+\n+    boost::filesystem::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n+    CAutoFile est_fileout = CAutoFile(fopen(est_path.string().c_str(), \"wb\"), SER_DISK, CLIENT_VERSION);\n+    if (est_fileout)\n+        mempool.WriteFeeEstimates(est_fileout);\n+    else\n+        LogPrintf(\"failed to write fee estimates\");\n+\n     {\n         LOCK(cs_main);\n #ifdef ENABLE_WALLET\n@@ -186,17 +195,17 @@ bool static Bind(const CService &addr, unsigned int flags) {\n     return true;\n }\n \n-// Core-specific options shared between UI, daemon and RPC client\n-std::string HelpMessage(HelpMessageMode hmm)\n+std::string HelpMessage(HelpMessageMode mode)\n {\n+    // When adding new options to the categories, please keep and ensure alphabetical ordering.\n     string strUsage = _(\"Options:\") + \"\\n\";\n     strUsage += \"  -?                     \" + _(\"This help message\") + \"\\n\";\n     strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n     strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n     strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n     strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification of -checkblocks is (0-4, default: 3)\") + \"\\n\";\n     strUsage += \"  -conf=<file>           \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\";\n-    if (hmm == HMM_BITCOIND)\n+    if (mode == HMM_BITCOIND)\n     {\n #if !defined(WIN32)\n         strUsage += \"  -daemon                \" + _(\"Run in the background as a daemon and accept commands\") + \"\\n\";\n@@ -206,6 +215,7 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -dbcache=<n>           \" + strprintf(_(\"Set database cache size in megabytes (%d to %d, default: %d)\"), nMinDbCache, nMaxDbCache, nDefaultDbCache) + \"\\n\";\n     strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n     strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \" \" + _(\"on startup\") + \"\\n\";\n+    strUsage += \"  -maxorphanblocks=<n>   \" + strprintf(_(\"Keep at most <n> unconnectable blocks in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_BLOCKS) + \"\\n\";\n     strUsage += \"  -par=<n>               \" + strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"), -(int)boost::thread::hardware_concurrency(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS) + \"\\n\";\n     strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n     strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \" \" + _(\"on startup\") + \"\\n\";\n@@ -264,12 +274,13 @@ std::string HelpMessage(HelpMessageMode hmm)\n         strUsage += \"  -dropmessagestest=<n>  \" + _(\"Randomly drop 1 of every <n> network messages\") + \"\\n\";\n         strUsage += \"  -fuzzmessagestest=<n>  \" + _(\"Randomly fuzz 1 of every <n> network messages\") + \"\\n\";\n         strUsage += \"  -flushwallet           \" + _(\"Run a thread to flush wallet periodically (default: 1)\") + \"\\n\";\n+        strUsage += \"  -stopafterblockimport  \" + _(\"Stop running after importing blocks from disk (default: 0)\") + \"\\n\";\n     }\n     strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n     strUsage += \"                         \" + _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n     strUsage += \"                         \" + _(\"<category> can be:\");\n     strUsage +=                                 \" addrman, alert, coindb, db, lock, rand, rpc, selectcoins, mempool, net\"; // Don't translate these and qt below\n-    if (hmm == HMM_BITCOIN_QT)\n+    if (mode == HMM_BITCOIN_QT)\n         strUsage += \", qt\";\n     strUsage += \".\\n\";\n     strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n@@ -281,8 +292,8 @@ std::string HelpMessage(HelpMessageMode hmm)\n         strUsage += \"  -limitfreerelay=<n>    \" + _(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default:15)\") + \"\\n\";\n         strUsage += \"  -maxsigcachesize=<n>   \" + _(\"Limit size of signature cache to <n> entries (default: 50000)\") + \"\\n\";\n     }\n-    strUsage += \"  -mintxfee=<amt>        \" + _(\"Fees smaller than this are considered zero fee (for transaction creation) (default:\") + \" \" + FormatMoney(CTransaction::nMinTxFee) + \")\" + \"\\n\";\n-    strUsage += \"  -minrelaytxfee=<amt>   \" + _(\"Fees smaller than this are considered zero fee (for relaying) (default:\") + \" \" + FormatMoney(CTransaction::nMinRelayTxFee) + \")\" + \"\\n\";\n+    strUsage += \"  -mintxfee=<amt>        \" + _(\"Fees smaller than this are considered zero fee (for transaction creation) (default:\") + \" \" + FormatMoney(CTransaction::minTxFee.GetFeePerK()) + \")\" + \"\\n\";\n+    strUsage += \"  -minrelaytxfee=<amt>   \" + _(\"Fees smaller than this are considered zero fee (for relaying) (default:\") + \" \" + FormatMoney(CTransaction::minRelayTxFee.GetFeePerK()) + \")\" + \"\\n\";\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n     if (GetBoolArg(\"-help-debug\", false))\n     {\n@@ -320,6 +331,18 @@ std::string HelpMessage(HelpMessageMode hmm)\n     return strUsage;\n }\n \n+std::string LicenseInfo()\n+{\n+    return FormatParagraph(strprintf(_(\"Copyright (C) 2009-%i The Bitcoin Core Developers\"), COPYRIGHT_YEAR)) + \"\\n\" +\n+           \"\\n\" +\n+           FormatParagraph(_(\"This is experimental software.\")) + \"\\n\" +\n+           \"\\n\" +\n+           FormatParagraph(_(\"Distributed under the MIT/X11 software license, see the accompanying file COPYING or <http://www.opensource.org/licenses/mit-license.php>.\")) + \"\\n\" +\n+           \"\\n\" +\n+           FormatParagraph(_(\"This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.\")) +\n+           \"\\n\";\n+}\n+\n struct CImportingNow\n {\n     CImportingNow() {\n@@ -383,6 +406,28 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n             LogPrintf(\"Warning: Could not open blocks file %s\\n\", path.string());\n         }\n     }\n+\n+    if (GetBoolArg(\"-stopafterblockimport\", false)) {\n+        LogPrintf(\"Stopping after block import\\n\");\n+        StartShutdown();\n+    }\n+}\n+\n+/** Sanity checks\n+ *  Ensure that Bitcoin is running in a usable environment with all\n+ *  necessary library support.\n+ */\n+bool InitSanityCheck(void)\n+{\n+    if(!ECC_InitSanityCheck()) {\n+        InitError(\"OpenSSL appears to lack support for elliptic curve cryptography. For more \"\n+                  \"information, visit https://en.bitcoin.it/wiki/OpenSSL_and_EC_Libraries\");\n+        return false;\n+    }\n+\n+    // TODO: remaining sanity checks, see #4081\n+\n+    return true;\n }\n \n /** Initialize bitcoin.\n@@ -517,7 +562,8 @@ bool AppInit2(boost::thread_group& threadGroup)\n         InitWarning(_(\"Warning: Deprecated argument -debugnet ignored, use -debug=net\"));\n \n     fBenchmark = GetBoolArg(\"-benchmark\", false);\n-    mempool.setSanityCheck(GetBoolArg(\"-checkmempool\", RegTest()));\n+    // Checkmempool defaults to true in regtest mode\n+    mempool.setSanityCheck(GetBoolArg(\"-checkmempool\", Params().DefaultCheckMemPool()));\n     Checkpoints::fEnabled = GetBoolArg(\"-checkpoints\", true);\n \n     // -par=0 means autodetect, but nScriptCheckThreads==0 means no concurrency\n@@ -560,32 +606,37 @@ bool AppInit2(boost::thread_group& threadGroup)\n     {\n         int64_t n = 0;\n         if (ParseMoney(mapArgs[\"-mintxfee\"], n) && n > 0)\n-            CTransaction::nMinTxFee = n;\n+            CTransaction::minTxFee = CFeeRate(n);\n         else\n             return InitError(strprintf(_(\"Invalid amount for -mintxfee=<amount>: '%s'\"), mapArgs[\"-mintxfee\"]));\n     }\n     if (mapArgs.count(\"-minrelaytxfee\"))\n     {\n         int64_t n = 0;\n         if (ParseMoney(mapArgs[\"-minrelaytxfee\"], n) && n > 0)\n-            CTransaction::nMinRelayTxFee = n;\n+            CTransaction::minRelayTxFee = CFeeRate(n);\n         else\n             return InitError(strprintf(_(\"Invalid amount for -minrelaytxfee=<amount>: '%s'\"), mapArgs[\"-minrelaytxfee\"]));\n     }\n \n #ifdef ENABLE_WALLET\n     if (mapArgs.count(\"-paytxfee\"))\n     {\n-        if (!ParseMoney(mapArgs[\"-paytxfee\"], nTransactionFee))\n+        int64_t nFeePerK = 0;\n+        if (!ParseMoney(mapArgs[\"-paytxfee\"], nFeePerK))\n             return InitError(strprintf(_(\"Invalid amount for -paytxfee=<amount>: '%s'\"), mapArgs[\"-paytxfee\"]));\n-        if (nTransactionFee > nHighTransactionFeeWarning)\n+        if (nFeePerK > nHighTransactionFeeWarning)\n             InitWarning(_(\"Warning: -paytxfee is set very high! This is the transaction fee you will pay if you send a transaction.\"));\n+        payTxFee = CFeeRate(nFeePerK, 1000);\n     }\n     bSpendZeroConfChange = GetArg(\"-spendzeroconfchange\", true);\n \n-    strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n+    std::string strWalletFile = GetArg(\"-wallet\", \"wallet.dat\");\n #endif\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n+    // Sanity check\n+    if (!InitSanityCheck())\n+        return InitError(_(\"Initialization sanity check failed. Bitcoin Core is shutting down.\"));\n \n     std::string strDataDir = GetDataDir().string();\n #ifdef ENABLE_WALLET\n@@ -613,6 +664,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         LogPrintf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()));\n     LogPrintf(\"Default data directory %s\\n\", GetDefaultDataDir().string());\n     LogPrintf(\"Using data directory %s\\n\", strDataDir);\n+    LogPrintf(\"Using config file %s\\n\", GetConfigFile().string());\n     LogPrintf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n     std::ostringstream strErrors;\n \n@@ -732,12 +784,12 @@ bool AppInit2(boost::thread_group& threadGroup)\n     }\n \n     // see Step 2: parameter interactions for more information about these\n-    fNoListen = !GetBoolArg(\"-listen\", true);\n+    fListen = GetBoolArg(\"-listen\", DEFAULT_LISTEN);\n     fDiscover = GetBoolArg(\"-discover\", true);\n     fNameLookup = GetBoolArg(\"-dns\", true);\n \n     bool fBound = false;\n-    if (!fNoListen) {\n+    if (fListen) {\n         if (mapArgs.count(\"-bind\")) {\n             BOOST_FOREACH(std::string strBind, mapMultiArgs[\"-bind\"]) {\n                 CService addrBind;\n@@ -858,7 +910,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n                 }\n \n                 uiInterface.InitMessage(_(\"Verifying blocks...\"));\n-                if (!VerifyDB(GetArg(\"-checklevel\", 3),\n+                if (!CVerifyDB().VerifyDB(GetArg(\"-checklevel\", 3),\n                               GetArg(\"-checkblocks\", 288))) {\n                     strLoadError = _(\"Corrupted block database detected\");\n                     break;\n@@ -914,7 +966,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         for (map<uint256, CBlockIndex*>::iterator mi = mapBlockIndex.begin(); mi != mapBlockIndex.end(); ++mi)\n         {\n             uint256 hash = (*mi).first;\n-            if (strncmp(hash.ToString().c_str(), strMatch.c_str(), strMatch.size()) == 0)\n+            if (boost::algorithm::starts_with(hash.ToString(), strMatch))\n             {\n                 CBlockIndex* pindex = (*mi).second;\n                 CBlock block;\n@@ -930,6 +982,11 @@ bool AppInit2(boost::thread_group& threadGroup)\n         return false;\n     }\n \n+    boost::filesystem::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n+    CAutoFile est_filein = CAutoFile(fopen(est_path.string().c_str(), \"rb\"), SER_DISK, CLIENT_VERSION);\n+    if (est_filein)\n+        mempool.ReadFeeEstimates(est_filein);\n+\n     // ********************************************************* Step 8: load wallet\n #ifdef ENABLE_WALLET\n     if (fDisableWallet) {"
      },
      {
        "sha": "52daa47616007f76cd81a476e85b2edca43b6d0e",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -14,7 +14,6 @@ namespace boost {\n     class thread_group;\n };\n \n-extern std::string strWalletFile;\n extern CWallet* pwalletMain;\n \n void StartShutdown();\n@@ -29,6 +28,9 @@ enum HelpMessageMode\n     HMM_BITCOIN_QT\n };\n \n+/** Help for options shared between UI and daemon (for -help) */\n std::string HelpMessage(HelpMessageMode mode);\n+/** Returns licensing information (for -version) */\n+std::string LicenseInfo();\n \n #endif"
      },
      {
        "sha": "4747beffb4ed3359da6862a740d3530ad1da1c03",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 15,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -485,21 +485,6 @@ bool CPubKey::RecoverCompact(const uint256 &hash, const std::vector<unsigned cha\n     return true;\n }\n \n-bool CPubKey::VerifyCompact(const uint256 &hash, const std::vector<unsigned char>& vchSig) const {\n-    if (!IsValid())\n-        return false;\n-    if (vchSig.size() != 65)\n-        return false;\n-    CECKey key;\n-    if (!key.Recover(hash, &vchSig[1], (vchSig[0] - 27) & ~4))\n-        return false;\n-    CPubKey pubkeyRec;\n-    key.GetPubKey(pubkeyRec, IsCompressed());\n-    if (*this != pubkeyRec)\n-        return false;\n-    return true;\n-}\n-\n bool CPubKey::IsFullyValid() const {\n     if (!IsValid())\n         return false;\n@@ -646,3 +631,15 @@ bool CExtPubKey::Derive(CExtPubKey &out, unsigned int nChild) const {\n     out.nChild = nChild;\n     return pubkey.Derive(out.pubkey, out.vchChainCode, nChild, vchChainCode);\n }\n+\n+bool ECC_InitSanityCheck() {\n+    EC_KEY *pkey = EC_KEY_new_by_curve_name(NID_secp256k1);\n+    if(pkey == NULL)\n+        return false;\n+    EC_KEY_free(pkey);\n+\n+    // TODO Is there more EC functionality that could be missing?\n+    return true;\n+}\n+\n+"
      },
      {
        "sha": "11dc65de8ccb8558bcc53a9becd48c4ee57c9552",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -156,10 +156,6 @@ class CPubKey {\n     // If this public key is not fully valid, the return value will be false.\n     bool Verify(const uint256 &hash, const std::vector<unsigned char>& vchSig) const;\n \n-    // Verify a compact signature (~65 bytes).\n-    // See CKey::SignCompact.\n-    bool VerifyCompact(const uint256 &hash, const std::vector<unsigned char>& vchSig) const;\n-\n     // Recover a public key from a compact signature.\n     bool RecoverCompact(const uint256 &hash, const std::vector<unsigned char>& vchSig);\n \n@@ -310,4 +306,7 @@ struct CExtKey {\n     void SetMaster(const unsigned char *seed, unsigned int nSeedLen);\n };\n \n+/** Check that required EC support is available at runtime */\n+bool ECC_InitSanityCheck(void);\n+\n #endif"
      },
      {
        "sha": "043a56bf38a4fc16de96e6830125aaae37640453",
        "filename": "src/leveldbwrapper.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/leveldbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/leveldbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -93,7 +93,7 @@ class CLevelDBWrapper\n         if (!status.ok()) {\n             if (status.IsNotFound())\n                 return false;\n-            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n+            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString());\n             HandleError(status);\n         }\n         try {\n@@ -122,7 +122,7 @@ class CLevelDBWrapper\n         if (!status.ok()) {\n             if (status.IsNotFound())\n                 return false;\n-            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n+            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString());\n             HandleError(status);\n         }\n         return true;"
      },
      {
        "sha": "244b03a5c25feab4b4f6d72d03ef38fdeb72bf6b",
        "filename": "src/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/bitcoin_qt.m4?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -100,7 +100,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n   BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n \n-  MOC_DEFS='-DHAVE_CONFIG_H -I$(top_srcdir)/src'\n+  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n   case $host in\n     *darwin*)\n      BITCOIN_QT_CHECK(["
      },
      {
        "sha": "98e1741954b943c9e20df6604183f81f1b9d1c50",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 180,
        "deletions": 180,
        "changes": 360,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -40,7 +40,6 @@ CTxMemPool mempool;\n \n map<uint256, CBlockIndex*> mapBlockIndex;\n CChain chainActive;\n-CChain chainMostWork;\n int64_t nTimeBestReceived = 0;\n int nScriptCheckThreads = 0;\n bool fImporting = false;\n@@ -50,9 +49,9 @@ bool fTxIndex = false;\n unsigned int nCoinCacheSize = 5000;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for transaction creation) */\n-int64_t CTransaction::nMinTxFee = 10000;  // Override with -mintxfee\n+CFeeRate CTransaction::minTxFee = CFeeRate(10000);  // Override with -mintxfee\n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n-int64_t CTransaction::nMinRelayTxFee = 1000;\n+CFeeRate CTransaction::minRelayTxFee = CFeeRate(1000);\n \n struct COrphanBlock {\n     uint256 hashBlock;\n@@ -398,6 +397,12 @@ CBlockIndex *CChain::FindFork(const CBlockLocator &locator) const {\n     return Genesis();\n }\n \n+CBlockIndex *CChain::FindFork(CBlockIndex *pindex) const {\n+    while (pindex && !Contains(pindex))\n+        pindex = pindex->pprev;\n+    return pindex;\n+}\n+\n CCoinsViewCache *pcoinsTip = NULL;\n CBlockTreeDB *pblocktree = NULL;\n \n@@ -543,7 +548,7 @@ bool IsStandardTx(const CTransaction& tx, string& reason)\n         }\n         if (whichType == TX_NULL_DATA)\n             nDataOut++;\n-        else if (txout.IsDust(CTransaction::nMinRelayTxFee)) {\n+        else if (txout.IsDust(CTransaction::minRelayTxFee)) {\n             reason = \"dust\";\n             return false;\n         }\n@@ -783,10 +788,10 @@ bool CheckTransaction(const CTransaction& tx, CValidationState &state)\n \n int64_t GetMinFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree, enum GetMinFee_mode mode)\n {\n-    // Base fee is either nMinTxFee or nMinRelayTxFee\n-    int64_t nBaseFee = (mode == GMF_RELAY) ? tx.nMinRelayTxFee : tx.nMinTxFee;\n+    // Base fee is either minTxFee or minRelayTxFee\n+    CFeeRate baseFeeRate = (mode == GMF_RELAY) ? tx.minRelayTxFee : tx.minTxFee;\n \n-    int64_t nMinFee = (1 + (int64_t)nBytes / 1000) * nBaseFee;\n+    int64_t nMinFee = baseFeeRate.GetFee(nBytes);\n \n     if (fAllowFree)\n     {\n@@ -800,16 +805,6 @@ int64_t GetMinFee(const CTransaction& tx, unsigned int nBytes, bool fAllowFree,\n             nMinFee = 0;\n     }\n \n-    // This code can be removed after enough miners have upgraded to version 0.9.\n-    // Until then, be safe when sending and require a fee if any output\n-    // is less than CENT:\n-    if (nMinFee < nBaseFee && mode == GMF_SEND)\n-    {\n-        BOOST_FOREACH(const CTxOut& txout, tx.vout)\n-            if (txout.nValue < CENT)\n-                nMinFee = nBaseFee;\n-    }\n-\n     if (!MoneyRange(nMinFee))\n         nMinFee = MAX_MONEY;\n     return nMinFee;\n@@ -833,7 +828,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n     string reason;\n-    if (Params().NetworkID() == CChainParams::MAIN && !IsStandardTx(tx, reason))\n+    if (Params().RequireStandard() && !IsStandardTx(tx, reason))\n         return state.DoS(0,\n                          error(\"AcceptToMemoryPool : nonstandard transaction: %s\", reason),\n                          REJECT_NONSTANDARD, reason);\n@@ -861,6 +856,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CCoinsView dummy;\n         CCoinsViewCache view(dummy);\n \n+        int64_t nValueIn = 0;\n         {\n         LOCK(pool.cs);\n         CCoinsViewMemPool viewMemPool(*pcoinsTip, pool);\n@@ -889,19 +885,20 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         // Bring the best block into scope\n         view.GetBestBlock();\n \n+        nValueIn = view.GetValueIn(tx);\n+\n         // we have all inputs cached now, so switch back to dummy, so we don't need to keep lock on mempool\n         view.SetBackend(dummy);\n         }\n \n         // Check for non-standard pay-to-script-hash in inputs\n-        if (Params().NetworkID() == CChainParams::MAIN && !AreInputsStandard(tx, view))\n+        if (Params().RequireStandard() && !AreInputsStandard(tx, view))\n             return error(\"AcceptToMemoryPool: : nonstandard transaction input\");\n \n         // Note: if you modify this code to accept non-standard transactions, then\n         // you should add code here to check that the transaction does a\n         // reasonable number of ECDSA signature verifications.\n \n-        int64_t nValueIn = view.GetValueIn(tx);\n         int64_t nValueOut = tx.GetValueOut();\n         int64_t nFees = nValueIn-nValueOut;\n         double dPriority = view.GetPriority(tx, chainActive.Height());\n@@ -916,10 +913,10 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n                                       hash.ToString(), nFees, txMinFee),\n                              REJECT_INSUFFICIENTFEE, \"insufficient fee\");\n \n-        // Continuously rate-limit free transactions\n+        // Continuously rate-limit free (really, very-low-fee)transactions\n         // This mitigates 'penny-flooding' -- sending thousands of free transactions just to\n         // be annoying or make others' transactions take longer to confirm.\n-        if (fLimitFree && nFees < CTransaction::nMinRelayTxFee)\n+        if (fLimitFree && nFees < CTransaction::minRelayTxFee.GetFee(nSize))\n         {\n             static CCriticalSection csFreeLimiter;\n             static double dFreeCount;\n@@ -940,10 +937,10 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n             dFreeCount += nSize;\n         }\n \n-        if (fRejectInsaneFee && nFees > CTransaction::nMinRelayTxFee * 10000)\n+        if (fRejectInsaneFee && nFees > CTransaction::minRelayTxFee.GetFee(nSize) * 10000)\n             return error(\"AcceptToMemoryPool: : insane fees %s, %d > %d\",\n                          hash.ToString(),\n-                         nFees, CTransaction::nMinRelayTxFee * 10000);\n+                         nFees, CTransaction::minRelayTxFee.GetFee(nSize) * 10000);\n \n         // Check against previous transactions\n         // This is done last to help prevent CPU exhaustion denial-of-service attacks.\n@@ -1160,7 +1157,7 @@ uint256 static GetOrphanRoot(const uint256& hash)\n // Remove a random orphan block (which does not have any dependent orphans).\n void static PruneOrphanBlocks()\n {\n-    if (mapOrphanBlocksByPrev.size() <= MAX_ORPHAN_BLOCKS)\n+    if (mapOrphanBlocksByPrev.size() <= (size_t)std::max((int64_t)0, GetArg(\"-maxorphanblocks\", DEFAULT_MAX_ORPHAN_BLOCKS)))\n         return;\n \n     // Pick a random orphan block.\n@@ -1210,7 +1207,7 @@ unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime)\n     const uint256 &bnLimit = Params().ProofOfWorkLimit();\n     // Testnet has min-difficulty blocks\n     // after nTargetSpacing*2 time between blocks:\n-    if (TestNet() && nTime > nTargetSpacing*2)\n+    if (Params().AllowMinDifficultyBlocks() && nTime > nTargetSpacing*2)\n         return bnLimit.GetCompact();\n \n     uint256 bnResult;\n@@ -1238,7 +1235,7 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n     // Only change once per interval\n     if ((pindexLast->nHeight+1) % nInterval != 0)\n     {\n-        if (TestNet())\n+        if (Params().AllowMinDifficultyBlocks())\n         {\n             // Special difficulty rule for testnet:\n             // If the new block's timestamp is more than 2* 10 minutes\n@@ -1468,7 +1465,7 @@ void UpdateTime(CBlockHeader& block, const CBlockIndex* pindexPrev)\n     block.nTime = max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n \n     // Updating time can change work required on testnet:\n-    if (TestNet())\n+    if (Params().AllowMinDifficultyBlocks())\n         block.nBits = GetNextWorkRequired(pindexPrev, &block);\n }\n \n@@ -1898,6 +1895,11 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n     for (unsigned int i = 0; i < block.vtx.size(); i++)\n         g_signals.SyncTransaction(block.GetTxHash(i), block.vtx[i], &block);\n \n+    // Watch for changes to the previous coinbase transaction.\n+    static uint256 hashPrevBestCoinBase;\n+    g_signals.UpdatedTransaction(hashPrevBestCoinBase);\n+    hashPrevBestCoinBase = block.GetTxHash(0);\n+\n     return true;\n }\n \n@@ -1983,7 +1985,7 @@ bool static DisconnectTip(CValidationState &state) {\n     BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n         // ignore validation errors in resurrected transactions\n         list<CTransaction> removed;\n-        CValidationState stateDummy; \n+        CValidationState stateDummy;\n         if (!tx.IsCoinBase())\n             if (!AcceptToMemoryPool(mempool, stateDummy, tx, false, NULL))\n                 mempool.remove(tx, removed, true);\n@@ -2027,11 +2029,7 @@ bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew) {\n         return false;\n     // Remove conflicting transactions from the mempool.\n     list<CTransaction> txConflicted;\n-    BOOST_FOREACH(const CTransaction &tx, block.vtx) {\n-        list<CTransaction> unused;\n-        mempool.remove(tx, unused);\n-        mempool.removeConflicts(tx, txConflicted);\n-    }\n+    mempool.removeForBlock(block.vtx, pindexNew->nHeight, txConflicted);\n     mempool.check(pcoinsTip);\n     // Update chainActive & related variables.\n     UpdateTip(pindexNew);\n@@ -2047,23 +2045,17 @@ bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew) {\n     return true;\n }\n \n-// Make chainMostWork correspond to the chain with the most work in it, that isn't\n+// Return the tip of the chain with the most work in it, that isn't\n // known to be invalid (it's however far from certain to be valid).\n-void static FindMostWorkChain() {\n-    CBlockIndex *pindexNew = NULL;\n-\n-    // In case the current best is invalid, do not consider it.\n-    while (chainMostWork.Tip() && (chainMostWork.Tip()->nStatus & BLOCK_FAILED_MASK)) {\n-        setBlockIndexValid.erase(chainMostWork.Tip());\n-        chainMostWork.SetTip(chainMostWork.Tip()->pprev);\n-    }\n-\n+static CBlockIndex* FindMostWorkChain() {\n     do {\n+        CBlockIndex *pindexNew = NULL;\n+\n         // Find the best candidate header.\n         {\n             std::set<CBlockIndex*, CBlockIndexWorkComparator>::reverse_iterator it = setBlockIndexValid.rbegin();\n             if (it == setBlockIndexValid.rend())\n-                return;\n+                return NULL;\n             pindexNew = *it;\n         }\n \n@@ -2087,70 +2079,111 @@ void static FindMostWorkChain() {\n             }\n             pindexTest = pindexTest->pprev;\n         }\n-        if (fInvalidAncestor)\n-            continue;\n-\n-        break;\n+        if (!fInvalidAncestor)\n+            return pindexNew;\n     } while(true);\n-\n-    // Check whether it's actually an improvement.\n-    if (chainMostWork.Tip() && !CBlockIndexWorkComparator()(chainMostWork.Tip(), pindexNew))\n-        return;\n-\n-    // We have a new best.\n-    chainMostWork.SetTip(pindexNew);\n }\n \n-// Try to activate to the most-work chain (thereby connecting it).\n-bool ActivateBestChain(CValidationState &state) {\n-    LOCK(cs_main);\n+// Try to make some progress towards making pindexMostWork the active block.\n+static bool ActivateBestChainStep(CValidationState &state, CBlockIndex *pindexMostWork) {\n+    AssertLockHeld(cs_main);\n+    bool fInvalidFound = false;\n     CBlockIndex *pindexOldTip = chainActive.Tip();\n-    bool fComplete = false;\n-    while (!fComplete) {\n-        FindMostWorkChain();\n-        fComplete = true;\n+    CBlockIndex *pindexFork = chainActive.FindFork(pindexMostWork);\n+\n+    // Disconnect active blocks which are no longer in the best chain.\n+    while (chainActive.Tip() && chainActive.Tip() != pindexFork) {\n+        if (!DisconnectTip(state))\n+            return false;\n+    }\n \n-        // Check whether we have something to do.\n-        if (chainMostWork.Tip() == NULL) break;\n+    // Build list of new blocks to connect.\n+    std::vector<CBlockIndex*> vpindexToConnect;\n+    vpindexToConnect.reserve(pindexMostWork->nHeight - (pindexFork ? pindexFork->nHeight : -1));\n+    while (pindexMostWork && pindexMostWork != pindexFork) {\n+        vpindexToConnect.push_back(pindexMostWork);\n+        pindexMostWork = pindexMostWork->pprev;\n+    }\n \n-        // Disconnect active blocks which are no longer in the best chain.\n-        while (chainActive.Tip() && !chainMostWork.Contains(chainActive.Tip())) {\n-            if (!DisconnectTip(state))\n+    // Connect new blocks.\n+    BOOST_REVERSE_FOREACH(CBlockIndex *pindexConnect, vpindexToConnect) {\n+        if (!ConnectTip(state, pindexConnect)) {\n+            if (state.IsInvalid()) {\n+                // The block violates a consensus rule.\n+                if (!state.CorruptionPossible())\n+                    InvalidChainFound(vpindexToConnect.back());\n+                state = CValidationState();\n+                fInvalidFound = true;\n+                break;\n+            } else {\n+                // A system error occurred (disk space, database error, ...).\n                 return false;\n-        }\n-\n-        // Connect new blocks.\n-        while (!chainActive.Contains(chainMostWork.Tip())) {\n-            CBlockIndex *pindexConnect = chainMostWork[chainActive.Height() + 1];\n-            if (!ConnectTip(state, pindexConnect)) {\n-                if (state.IsInvalid()) {\n-                    // The block violates a consensus rule.\n-                    if (!state.CorruptionPossible())\n-                        InvalidChainFound(chainMostWork.Tip());\n-                    fComplete = false;\n-                    state = CValidationState();\n-                    break;\n-                } else {\n-                    // A system error occurred (disk space, database error, ...).\n-                    return false;\n-                }\n+            }\n+        } else {\n+            if (!pindexOldTip || chainActive.Tip()->nChainWork > pindexOldTip->nChainWork) {\n+                // We're in a better position than we were. Return temporarily to release the lock.\n+                break;\n             }\n         }\n     }\n \n-    if (chainActive.Tip() != pindexOldTip) {\n-        std::string strCmd = GetArg(\"-blocknotify\", \"\");\n-        if (!IsInitialBlockDownload() && !strCmd.empty())\n+    // Callbacks/notifications for a new best chain.\n+    if (fInvalidFound)\n+        CheckForkWarningConditionsOnNewFork(vpindexToConnect.back());\n+    else\n+        CheckForkWarningConditions();\n+\n+    if (!pblocktree->Flush())\n+        return state.Abort(_(\"Failed to sync block index\"));\n+\n+    return true;\n+}\n+\n+bool ActivateBestChain(CValidationState &state) {\n+    CBlockIndex *pindexNewTip = NULL;\n+    CBlockIndex *pindexMostWork = NULL;\n+    do {\n+        boost::this_thread::interruption_point();\n+\n+        bool fInitialDownload;\n         {\n-            boost::replace_all(strCmd, \"%s\", chainActive.Tip()->GetBlockHash().GetHex());\n-            boost::thread t(runCommand, strCmd); // thread runs free\n+            LOCK(cs_main);\n+            pindexMostWork = FindMostWorkChain();\n+\n+            // Whether we have anything to do at all.\n+            if (pindexMostWork == NULL || pindexMostWork == chainActive.Tip())\n+                return true;\n+\n+            if (!ActivateBestChainStep(state, pindexMostWork))\n+                return false;\n+\n+            pindexNewTip = chainActive.Tip();\n+            fInitialDownload = IsInitialBlockDownload();\n         }\n-    }\n+        // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n+\n+        // Notifications/callbacks that can run without cs_main\n+        if (!fInitialDownload) {\n+            uint256 hashNewTip = pindexNewTip->GetBlockHash();\n+            // Relay inventory, but don't relay old inventory during initial block download.\n+            int nBlockEstimate = Checkpoints::GetTotalBlocksEstimate();\n+            LOCK(cs_vNodes);\n+            BOOST_FOREACH(CNode* pnode, vNodes)\n+                if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))\n+                    pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));\n+\n+            std::string strCmd = GetArg(\"-blocknotify\", \"\");\n+            if (!strCmd.empty()) {\n+                boost::replace_all(strCmd, \"%s\", hashNewTip.GetHex());\n+                boost::thread t(runCommand, strCmd); // thread runs free\n+            }\n+        }\n+        uiInterface.NotifyBlocksChanged();\n+    } while(pindexMostWork != chainActive.Tip());\n \n     return true;\n }\n \n-\n CBlockIndex* AddToBlockIndex(CBlockHeader& block)\n {\n     // Check for duplicate\n@@ -2180,7 +2213,6 @@ CBlockIndex* AddToBlockIndex(CBlockHeader& block)\n     return pindexNew;\n }\n \n-\n // Mark a block as having its data received and checked (up to BLOCK_VALID_TRANSACTIONS).\n bool ReceivedBlockTransactions(const CBlock &block, CValidationState& state, CBlockIndex *pindexNew, const CDiskBlockPos& pos)\n {\n@@ -2210,30 +2242,9 @@ bool ReceivedBlockTransactions(const CBlock &block, CValidationState& state, CBl\n     if (!pblocktree->WriteBlockIndex(CDiskBlockIndex(pindexNew)))\n         return state.Abort(_(\"Failed to write block index\"));\n \n-    // New best?\n-    if (!ActivateBestChain(state))\n-        return false;\n-\n-    LOCK(cs_main);\n-    if (pindexNew == chainActive.Tip())\n-    {\n-        // Clear fork warning if its no longer applicable\n-        CheckForkWarningConditions();\n-        // Notify UI to display prev block's coinbase if it was ours\n-        static uint256 hashPrevBestCoinBase;\n-        g_signals.UpdatedTransaction(hashPrevBestCoinBase);\n-        hashPrevBestCoinBase = block.GetTxHash(0);\n-    } else\n-        CheckForkWarningConditionsOnNewFork(pindexNew);\n-\n-    if (!pblocktree->Flush())\n-        return state.Abort(_(\"Failed to sync block index\"));\n-\n-    uiInterface.NotifyBlocksChanged();\n     return true;\n }\n \n-\n bool FindBlockPos(CValidationState &state, CDiskBlockPos &pos, unsigned int nAddSize, unsigned int nHeight, uint64_t nTime, bool fKnown = false)\n {\n     bool fUpdatedLast = false;\n@@ -2328,7 +2339,6 @@ bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigne\n     return true;\n }\n \n-\n bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW)\n {\n     // Check proof of work matches claimed amount\n@@ -2469,14 +2479,11 @@ bool AcceptBlockHeader(CBlockHeader& block, CValidationState& state, CBlockIndex\n             return state.DoS(100, error(\"AcceptBlock() : forked chain older than last checkpoint (height %d)\", nHeight));\n \n         // Reject block.nVersion=1 blocks when 95% (75% on testnet) of the network has upgraded:\n-        if (block.nVersion < 2)\n+        if (block.nVersion < 2 && \n+            CBlockIndex::IsSuperMajority(2, pindexPrev, Params().RejectBlockOutdatedMajority()))\n         {\n-            if ((!TestNet() && CBlockIndex::IsSuperMajority(2, pindexPrev, 950, 1000)) ||\n-                (TestNet() && CBlockIndex::IsSuperMajority(2, pindexPrev, 75, 100)))\n-            {\n-                return state.Invalid(error(\"AcceptBlock() : rejected nVersion=1 block\"),\n-                                     REJECT_OBSOLETE, \"bad-version\");\n-            }\n+            return state.Invalid(error(\"AcceptBlock() : rejected nVersion=1 block\"),\n+                                 REJECT_OBSOLETE, \"bad-version\");\n         }\n     }\n \n@@ -2506,7 +2513,6 @@ bool AcceptBlock(CBlock& block, CValidationState& state, CBlockIndex** ppindex,\n     }\n \n     int nHeight = pindex->nHeight;\n-    uint256 hash = pindex->GetBlockHash();\n \n     // Check that all transactions are finalized\n     BOOST_FOREACH(const CTransaction& tx, block.vtx)\n@@ -2517,19 +2523,15 @@ bool AcceptBlock(CBlock& block, CValidationState& state, CBlockIndex** ppindex,\n         }\n \n     // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n-    if (block.nVersion >= 2)\n+    // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):\n+    if (block.nVersion >= 2 && \n+        CBlockIndex::IsSuperMajority(2, pindex->pprev, Params().EnforceBlockUpgradeMajority()))\n     {\n-        // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):\n-        if ((!TestNet() && CBlockIndex::IsSuperMajority(2, pindex->pprev, 750, 1000)) ||\n-            (TestNet() && CBlockIndex::IsSuperMajority(2, pindex->pprev, 51, 100)))\n-        {\n-            CScript expect = CScript() << nHeight;\n-            if (block.vtx[0].vin[0].scriptSig.size() < expect.size() ||\n-                !std::equal(expect.begin(), expect.end(), block.vtx[0].vin[0].scriptSig.begin())) {\n-                pindex->nStatus |= BLOCK_FAILED_VALID;\n-                return state.DoS(100, error(\"AcceptBlock() : block height mismatch in coinbase\"),\n-                                 REJECT_INVALID, \"bad-cb-height\");\n-            }\n+        CScript expect = CScript() << nHeight;\n+        if (block.vtx[0].vin[0].scriptSig.size() < expect.size() ||\n+            !std::equal(expect.begin(), expect.end(), block.vtx[0].vin[0].scriptSig.begin())) {\n+            pindex->nStatus |= BLOCK_FAILED_VALID;\n+            return state.DoS(100, error(\"AcceptBlock() : block height mismatch in coinbase\"), REJECT_INVALID, \"bad-cb-height\");\n         }\n     }\n \n@@ -2550,21 +2552,12 @@ bool AcceptBlock(CBlock& block, CValidationState& state, CBlockIndex** ppindex,\n         return state.Abort(_(\"System error: \") + e.what());\n     }\n \n-    // Relay inventory, but don't relay old inventory during initial block download\n-    int nBlockEstimate = Checkpoints::GetTotalBlocksEstimate();\n-    if (chainActive.Tip()->GetBlockHash() == hash)\n-    {\n-        LOCK(cs_vNodes);\n-        BOOST_FOREACH(CNode* pnode, vNodes)\n-            if (chainActive.Height() > (pnode->nStartingHeight != -1 ? pnode->nStartingHeight - 2000 : nBlockEstimate))\n-                pnode->PushInventory(CInv(MSG_BLOCK, hash));\n-    }\n-\n     return true;\n }\n \n-bool CBlockIndex::IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned int nRequired, unsigned int nToCheck)\n+bool CBlockIndex::IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned int nRequired)\n {\n+    unsigned int nToCheck = Params().ToCheckBlockUpgradeMajority();\n     unsigned int nFound = 0;\n     for (unsigned int i = 0; i < nToCheck && nFound < nRequired && pstart != NULL; i++)\n     {\n@@ -2575,19 +2568,6 @@ bool CBlockIndex::IsSuperMajority(int minVersion, const CBlockIndex* pstart, uns\n     return (nFound >= nRequired);\n }\n \n-int64_t CBlockIndex::GetMedianTime() const\n-{\n-    AssertLockHeld(cs_main);\n-    const CBlockIndex* pindex = this;\n-    for (int i = 0; i < nMedianTimeSpan/2; i++)\n-    {\n-        if (!chainActive.Next(pindex))\n-            return GetBlockTime();\n-        pindex = chainActive.Next(pindex);\n-    }\n-    return pindex->GetMedianTimePast();\n-}\n-\n void PushGetBlocks(CNode* pnode, CBlockIndex* pindexBegin, uint256 hashEnd)\n {\n     AssertLockHeld(cs_main);\n@@ -2602,10 +2582,11 @@ void PushGetBlocks(CNode* pnode, CBlockIndex* pindexBegin, uint256 hashEnd)\n \n bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBlockPos *dbp)\n {\n-    AssertLockHeld(cs_main);\n-\n     // Check for duplicate\n     uint256 hash = pblock->GetHash();\n+\n+    {\n+    LOCK(cs_main);\n     if (mapBlockIndex.count(hash))\n         return state.Invalid(error(\"ProcessBlock() : already have block %d %s\", mapBlockIndex[hash]->nHeight, hash.ToString()), 0, \"duplicate\");\n     if (mapOrphanBlocks.count(hash))\n@@ -2674,7 +2655,11 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n         mapOrphanBlocksByPrev.erase(hashPrev);\n     }\n \n-    LogPrintf(\"ProcessBlock: ACCEPTED\\n\");\n+    }\n+\n+    if (!ActivateBestChain(state))\n+        return error(\"ProcessBlock() : ActivateBestChain failed\");\n+\n     return true;\n }\n \n@@ -2981,7 +2966,17 @@ bool static LoadBlockIndexDB()\n     return true;\n }\n \n-bool VerifyDB(int nCheckLevel, int nCheckDepth)\n+CVerifyDB::CVerifyDB()\n+{\n+    uiInterface.ShowProgress(_(\"Verifying blocks...\"), 0);\n+}\n+\n+CVerifyDB::~CVerifyDB()\n+{\n+    uiInterface.ShowProgress(\"\", 100);\n+}\n+\n+bool CVerifyDB::VerifyDB(int nCheckLevel, int nCheckDepth)\n {\n     LOCK(cs_main);\n     if (chainActive.Tip() == NULL || chainActive.Tip()->pprev == NULL)\n@@ -3002,6 +2997,7 @@ bool VerifyDB(int nCheckLevel, int nCheckDepth)\n     for (CBlockIndex* pindex = chainActive.Tip(); pindex && pindex->pprev; pindex = pindex->pprev)\n     {\n         boost::this_thread::interruption_point();\n+        uiInterface.ShowProgress(_(\"Verifying blocks...\"), std::max(1, std::min(99, (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * (nCheckLevel >= 4 ? 50 : 100)))));\n         if (pindex->nHeight < chainActive.Height()-nCheckDepth)\n             break;\n         CBlock block;\n@@ -3041,6 +3037,7 @@ bool VerifyDB(int nCheckLevel, int nCheckDepth)\n         CBlockIndex *pindex = pindexState;\n         while (pindex != chainActive.Tip()) {\n             boost::this_thread::interruption_point();\n+            uiInterface.ShowProgress(_(\"Verifying blocks...\"), std::max(1, std::min(99, 100 - (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * 50))));\n             pindex = chainActive.Next(pindex);\n             CBlock block;\n             if (!ReadBlockFromDisk(block, pindex))\n@@ -3098,6 +3095,8 @@ bool InitBlockIndex() {\n             CBlockIndex *pindex = AddToBlockIndex(block);\n             if (!ReceivedBlockTransactions(block, state, pindex, blockPos))\n                 return error(\"LoadBlockIndex() : genesis block not accepted\");\n+            if (!ActivateBestChain(state))\n+                return error(\"LoadBlockIndex() : genesis block cannot be activated\");\n         } catch(std::runtime_error &e) {\n             return error(\"LoadBlockIndex() : failed to initialize block database: %s\", e.what());\n         }\n@@ -3227,7 +3226,6 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n \n                 // process block\n                 if (nBlockPos >= nStartByte) {\n-                    LOCK(cs_main);\n                     if (dbp)\n                         dbp->nPos = nBlockPos;\n                     CValidationState state;\n@@ -3391,7 +3389,8 @@ void static ProcessGetData(CNode* pfrom)\n                 {\n                     // Send block from disk\n                     CBlock block;\n-                    assert(ReadBlockFromDisk(block, (*mi).second));\n+                    if (!ReadBlockFromDisk(block, (*mi).second))\n+                        assert(!\"cannot load block from disk\");\n                     if (inv.type == MSG_BLOCK)\n                         pfrom->PushMessage(\"block\", block);\n                     else // MSG_FILTERED_BLOCK)\n@@ -3563,7 +3562,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (!pfrom->fInbound)\n         {\n             // Advertise our address\n-            if (!fNoListen && !IsInitialBlockDownload())\n+            if (fListen && !IsInitialBlockDownload())\n             {\n                 CAddress addr = GetLocalAddress(&pfrom->addr);\n                 if (addr.IsRoutable())\n@@ -3915,10 +3914,12 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         CInv inv(MSG_BLOCK, block.GetHash());\n         pfrom->AddInventoryKnown(inv);\n \n-        LOCK(cs_main);\n-        // Remember who we got this block from.\n-        mapBlockSource[inv.hash] = pfrom->GetId();\n-        MarkBlockAsReceived(inv.hash, pfrom->GetId());\n+        {\n+            LOCK(cs_main);\n+            // Remember who we got this block from.\n+            mapBlockSource[inv.hash] = pfrom->GetId();\n+            MarkBlockAsReceived(inv.hash, pfrom->GetId());\n+        }\n \n         CValidationState state;\n         ProcessBlock(state, pfrom, &block);\n@@ -4292,24 +4293,23 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             // RPC ping request by user\n             pingSend = true;\n         }\n-        if (pto->nLastSend && GetTime() - pto->nLastSend > 30 * 60 && pto->vSendMsg.empty()) {\n-            // Ping automatically sent as a keepalive\n+        if (pto->nPingNonceSent == 0 && pto->nPingUsecStart + PING_INTERVAL * 1000000 < GetTimeMicros()) {\n+            // Ping automatically sent as a latency probe & keepalive.\n             pingSend = true;\n         }\n         if (pingSend) {\n             uint64_t nonce = 0;\n             while (nonce == 0) {\n                 RAND_bytes((unsigned char*)&nonce, sizeof(nonce));\n             }\n-            pto->nPingNonceSent = nonce;\n             pto->fPingQueued = false;\n+            pto->nPingUsecStart = GetTimeMicros();\n             if (pto->nVersion > BIP0031_VERSION) {\n-                // Take timestamp as close as possible before transmitting ping\n-                pto->nPingUsecStart = GetTimeMicros();\n+                pto->nPingNonceSent = nonce;\n                 pto->PushMessage(\"ping\", nonce);\n             } else {\n-                // Peer is too old to support ping command with nonce, pong will never arrive, disable timing\n-                pto->nPingUsecStart = 0;\n+                // Peer is too old to support ping command with nonce, pong will never arrive.\n+                pto->nPingNonceSent = 0;\n                 pto->PushMessage(\"ping\");\n             }\n         }\n@@ -4331,7 +4331,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n                         pnode->setAddrKnown.clear();\n \n                     // Rebroadcast our address\n-                    if (!fNoListen)\n+                    if (fListen)\n                     {\n                         CAddress addr = GetLocalAddress(&pnode->addr);\n                         if (addr.IsRoutable())\n@@ -4451,8 +4451,8 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         // in flight for over two minutes, since we first had a chance to\n         // process an incoming block.\n         int64_t nNow = GetTimeMicros();\n-        if (!pto->fDisconnect && state.nBlocksInFlight && \n-            state.nLastBlockReceive < state.nLastBlockProcess - BLOCK_DOWNLOAD_TIMEOUT*1000000 && \n+        if (!pto->fDisconnect && state.nBlocksInFlight &&\n+            state.nLastBlockReceive < state.nLastBlockProcess - BLOCK_DOWNLOAD_TIMEOUT*1000000 &&\n             state.vBlocksInFlight.front().nTime < state.nLastBlockProcess - 2*BLOCK_DOWNLOAD_TIMEOUT*1000000) {\n             LogPrintf(\"Peer %s is stalling block download, disconnecting\\n\", state.name.c_str());\n             pto->fDisconnect = true;"
      },
      {
        "sha": "5a0aedcde18e113250eaf42dfb03a9eb25ca4e17",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 22,
        "deletions": 30,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -45,8 +45,8 @@ static const unsigned int MAX_STANDARD_TX_SIZE = 100000;\n static const unsigned int MAX_BLOCK_SIGOPS = MAX_BLOCK_SIZE/50;\n /** The maximum number of orphan transactions kept in memory */\n static const unsigned int MAX_ORPHAN_TRANSACTIONS = MAX_BLOCK_SIZE/100;\n-/** The maximum number of orphan blocks kept in memory */\n-static const unsigned int MAX_ORPHAN_BLOCKS = 750;\n+/** Default for -maxorphanblocks, maximum number of orphan blocks kept in memory */\n+static const unsigned int DEFAULT_MAX_ORPHAN_BLOCKS = 750;\n /** The maximum size of a blk?????.dat file (since 0.8) */\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n /** The pre-allocation chunk size for blk?????.dat files (since 0.8) */\n@@ -66,12 +66,6 @@ static const int MAX_BLOCKS_IN_TRANSIT_PER_PEER = 128;\n /** Timeout in seconds before considering a block download peer unresponsive. */\n static const unsigned int BLOCK_DOWNLOAD_TIMEOUT = 60;\n \n-#ifdef USE_UPNP\n-static const int fHaveUPnP = true;\n-#else\n-static const int fHaveUPnP = false;\n-#endif\n-\n /** \"reject\" message codes **/\n static const unsigned char REJECT_MALFORMED = 0x01;\n static const unsigned char REJECT_INVALID = 0x10;\n@@ -144,8 +138,6 @@ bool InitBlockIndex();\n bool LoadBlockIndex();\n /** Unload database information */\n void UnloadBlockIndex();\n-/** Verify consistency of the block and coin databases */\n-bool VerifyDB(int nCheckLevel, int nCheckDepth);\n /** Print the loaded block tree */\n void PrintBlockTree();\n /** Process protocol messages received from a given node */\n@@ -294,13 +286,6 @@ unsigned int GetLegacySigOpCount(const CTransaction& tx);\n unsigned int GetP2SHSigOpCount(const CTransaction& tx, CCoinsViewCache& mapInputs);\n \n \n-inline bool AllowFree(double dPriority)\n-{\n-    // Large (in bytes) low-priority (new, small-coin) transactions\n-    // need a fee.\n-    return dPriority > COIN * 144 / 250;\n-}\n-\n // Check whether all inputs of this transaction are valid (no double spends, scripts & sigs, amounts)\n // This does not modify the UTXO set. If pvChecks is not NULL, script checks are pushed onto it\n // instead of being performed inline.\n@@ -848,26 +833,25 @@ class CBlockIndex\n         return pbegin[(pend - pbegin)/2];\n     }\n \n-    int64_t GetMedianTime() const;\n-\n     /**\n      * Returns true if there are nRequired or more blocks of minVersion or above\n-     * in the last nToCheck blocks, starting at pstart and going backwards.\n+     * in the last Params().ToCheckBlockUpgradeMajority() blocks, starting at pstart \n+     * and going backwards.\n      */\n     static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart,\n-                                unsigned int nRequired, unsigned int nToCheck);\n+                                unsigned int nRequired);\n \n     std::string ToString() const\n     {\n         return strprintf(\"CBlockIndex(pprev=%p, nHeight=%d, merkle=%s, hashBlock=%s)\",\n             pprev, nHeight,\n-            hashMerkleRoot.ToString().c_str(),\n-            GetBlockHash().ToString().c_str());\n+            hashMerkleRoot.ToString(),\n+            GetBlockHash().ToString());\n     }\n \n     void print() const\n     {\n-        LogPrintf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString());\n     }\n \n     // Check whether this block index entry is valid up to the passed validity level.\n@@ -952,14 +936,14 @@ class CDiskBlockIndex : public CBlockIndex\n         std::string str = \"CDiskBlockIndex(\";\n         str += CBlockIndex::ToString();\n         str += strprintf(\"\\n                hashBlock=%s, hashPrev=%s)\",\n-            GetBlockHash().ToString().c_str(),\n-            hashPrev.ToString().c_str());\n+            GetBlockHash().ToString(),\n+            hashPrev.ToString());\n         return str;\n     }\n \n     void print() const\n     {\n-        LogPrintf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString());\n     }\n };\n \n@@ -1026,6 +1010,14 @@ class CValidationState {\n     std::string GetRejectReason() const { return strRejectReason; }\n };\n \n+/** RAII wrapper for VerifyDB: Verify consistency of the block and coin databases */\n+class CVerifyDB {\n+public:\n+    CVerifyDB();\n+    ~CVerifyDB();\n+    bool VerifyDB(int nCheckLevel, int nCheckDepth);\n+};\n+\n /** An in-memory indexed chain of blocks. */\n class CChain {\n private:\n@@ -1081,14 +1073,14 @@ class CChain {\n \n     /** Find the last common block between this chain and a locator. */\n     CBlockIndex *FindFork(const CBlockLocator &locator) const;\n+\n+    /** Find the last common block between this chain and a block index entry. */\n+    CBlockIndex *FindFork(CBlockIndex *pindex) const;\n };\n \n /** The currently-connected chain of blocks. */\n extern CChain chainActive;\n \n-/** The currently best known chain of headers (some of which may be invalid). */\n-extern CChain chainMostWork;\n-\n /** Global variable that points to the active CCoinsView (protected by cs_main) */\n extern CCoinsViewCache *pcoinsTip;\n "
      },
      {
        "sha": "87779efbbdd448f069b3939804d650b8a215a482",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 41,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -11,6 +11,8 @@\n #ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #endif\n+\n+using namespace std;\n //////////////////////////////////////////////////////////////////////////////\n //\n // BitcoinMiner\n@@ -52,25 +54,30 @@ void SHA256Transform(void* pstate, void* pinput, const void* pinit)\n         ((uint32_t*)pstate)[i] = ctx.h[i];\n }\n \n-// Some explaining would be appreciated\n+//\n+// Unconfirmed transactions in the memory pool often depend on other\n+// transactions in the memory pool. When we select transactions from the\n+// pool, we select by highest priority or fee rate, so we might consider\n+// transactions that depend on transactions that aren't yet in the block.\n+// The COrphan class keeps track of these 'temporary orphans' while\n+// CreateBlock is figuring out which transactions to include.\n+//\n class COrphan\n {\n public:\n     const CTransaction* ptx;\n     set<uint256> setDependsOn;\n+    CFeeRate feeRate;\n     double dPriority;\n-    double dFeePerKb;\n \n-    COrphan(const CTransaction* ptxIn)\n+    COrphan(const CTransaction* ptxIn) : ptx(ptxIn), feeRate(0), dPriority(0)\n     {\n-        ptx = ptxIn;\n-        dPriority = dFeePerKb = 0;\n     }\n \n     void print() const\n     {\n-        LogPrintf(\"COrphan(hash=%s, dPriority=%.1f, dFeePerKb=%.1f)\\n\",\n-               ptx->GetHash().ToString(), dPriority, dFeePerKb);\n+        LogPrintf(\"COrphan(hash=%s, dPriority=%.1f, fee=%s)\\n\",\n+                  ptx->GetHash().ToString(), dPriority, feeRate.ToString());\n         BOOST_FOREACH(uint256 hash, setDependsOn)\n             LogPrintf(\"   setDependsOn %s\\n\", hash.ToString());\n     }\n@@ -80,8 +87,8 @@ class COrphan\n uint64_t nLastBlockTx = 0;\n uint64_t nLastBlockSize = 0;\n \n-// We want to sort transactions by priority and fee, so:\n-typedef boost::tuple<double, double, const CTransaction*> TxPriority;\n+// We want to sort transactions by priority and fee rate, so:\n+typedef boost::tuple<double, CFeeRate, const CTransaction*> TxPriority;\n class TxPriorityCompare\n {\n     bool byFee;\n@@ -210,18 +217,15 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n             unsigned int nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n             dPriority = tx.ComputePriority(dPriority, nTxSize);\n \n-            // This is a more accurate fee-per-kilobyte than is used by the client code, because the\n-            // client code rounds up the size to the nearest 1K. That's good, because it gives an\n-            // incentive to create smaller transactions.\n-            double dFeePerKb =  double(nTotalIn-tx.GetValueOut()) / (double(nTxSize)/1000.0);\n+            CFeeRate feeRate(nTotalIn-tx.GetValueOut(), nTxSize);\n \n             if (porphan)\n             {\n                 porphan->dPriority = dPriority;\n-                porphan->dFeePerKb = dFeePerKb;\n+                porphan->feeRate = feeRate;\n             }\n             else\n-                vecPriority.push_back(TxPriority(dPriority, dFeePerKb, &mi->second.GetTx()));\n+                vecPriority.push_back(TxPriority(dPriority, feeRate, &mi->second.GetTx()));\n         }\n \n         // Collect transactions into block\n@@ -237,7 +241,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         {\n             // Take highest priority transaction off the priority queue:\n             double dPriority = vecPriority.front().get<0>();\n-            double dFeePerKb = vecPriority.front().get<1>();\n+            CFeeRate feeRate = vecPriority.front().get<1>();\n             const CTransaction& tx = *(vecPriority.front().get<2>());\n \n             std::pop_heap(vecPriority.begin(), vecPriority.end(), comparer);\n@@ -254,7 +258,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n                 continue;\n \n             // Skip free transactions if we're past the minimum block size:\n-            if (fSortedByFee && (dFeePerKb < CTransaction::nMinRelayTxFee) && (nBlockSize + nTxSize >= nBlockMinSize))\n+            if (fSortedByFee && (feeRate < CTransaction::minRelayTxFee) && (nBlockSize + nTxSize >= nBlockMinSize))\n                 continue;\n \n             // Prioritize by fee once past the priority size or we run out of high-priority\n@@ -298,8 +302,8 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n \n             if (fPrintPriority)\n             {\n-                LogPrintf(\"priority %.1f feeperkb %.1f txid %s\\n\",\n-                       dPriority, dFeePerKb, tx.GetHash().ToString());\n+                LogPrintf(\"priority %.1f fee %s txid %s\\n\",\n+                          dPriority, feeRate.ToString(), tx.GetHash().ToString());\n             }\n \n             // Add transactions that depend on this one to the priority queue\n@@ -312,7 +316,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n                         porphan->setDependsOn.erase(hash);\n                         if (porphan->setDependsOn.empty())\n                         {\n-                            vecPriority.push_back(TxPriority(porphan->dPriority, porphan->dFeePerKb, porphan->ptx));\n+                            vecPriority.push_back(TxPriority(porphan->dPriority, porphan->feeRate, porphan->ptx));\n                             std::push_heap(vecPriority.begin(), vecPriority.end(), comparer);\n                         }\n                     }\n@@ -482,22 +486,22 @@ bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)\n         LOCK(cs_main);\n         if (pblock->hashPrevBlock != chainActive.Tip()->GetBlockHash())\n             return error(\"BitcoinMiner : generated block is stale\");\n+    }\n \n-        // Remove key from key pool\n-        reservekey.KeepKey();\n+    // Remove key from key pool\n+    reservekey.KeepKey();\n \n-        // Track how many getdata requests this block gets\n-        {\n-            LOCK(wallet.cs_wallet);\n-            wallet.mapRequestCount[pblock->GetHash()] = 0;\n-        }\n-\n-        // Process this block the same as if we had received it from another node\n-        CValidationState state;\n-        if (!ProcessBlock(state, NULL, pblock))\n-            return error(\"BitcoinMiner : ProcessBlock, block not accepted\");\n+    // Track how many getdata requests this block gets\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.mapRequestCount[pblock->GetHash()] = 0;\n     }\n \n+    // Process this block the same as if we had received it from another node\n+    CValidationState state;\n+    if (!ProcessBlock(state, NULL, pblock))\n+        return error(\"BitcoinMiner : ProcessBlock, block not accepted\");\n+\n     return true;\n }\n \n@@ -512,7 +516,7 @@ void static BitcoinMiner(CWallet *pwallet)\n     unsigned int nExtraNonce = 0;\n \n     try { while (true) {\n-        if (Params().NetworkID() != CChainParams::REGTEST) {\n+        if (Params().MiningRequiresPeers()) {\n             // Busy-wait for the network to come online so we don't waste time mining\n             // on an obsolete chain. In regtest mode we expect to fly solo.\n             while (vNodes.empty())\n@@ -580,9 +584,8 @@ void static BitcoinMiner(CWallet *pwallet)\n                     CheckWork(pblock, *pwallet, reservekey);\n                     SetThreadPriority(THREAD_PRIORITY_LOWEST);\n \n-                    // In regression test mode, stop mining after a block is found. This\n-                    // allows developers to controllably generate a block on demand.\n-                    if (Params().NetworkID() == CChainParams::REGTEST)\n+                    // In regression test mode, stop mining after a block is found.\n+                    if (Params().MineBlocksOnDemand())\n                         throw boost::thread_interrupted();\n \n                     break;\n@@ -620,7 +623,8 @@ void static BitcoinMiner(CWallet *pwallet)\n \n             // Check for stop or if block needs to be rebuilt\n             boost::this_thread::interruption_point();\n-            if (vNodes.empty() && Params().NetworkID() != CChainParams::REGTEST)\n+            // Regtest mode doesn't require peers\n+            if (vNodes.empty() && Params().MiningRequiresPeers())\n                 break;\n             if (nBlockNonce >= 0xffff0000)\n                 break;\n@@ -632,7 +636,7 @@ void static BitcoinMiner(CWallet *pwallet)\n             // Update nTime every few seconds\n             UpdateTime(*pblock, pindexPrev);\n             nBlockTime = ByteReverse(pblock->nTime);\n-            if (TestNet())\n+            if (Params().AllowMinDifficultyBlocks())\n             {\n                 // Changing pblock->nTime can change work required on testnet:\n                 nBlockBits = ByteReverse(pblock->nBits);\n@@ -652,8 +656,9 @@ void GenerateBitcoins(bool fGenerate, CWallet* pwallet, int nThreads)\n     static boost::thread_group* minerThreads = NULL;\n \n     if (nThreads < 0) {\n-        if (Params().NetworkID() == CChainParams::REGTEST)\n-            nThreads = 1;\n+        // In regtest threads defaults to 1\n+        if (Params().DefaultMinerThreads())\n+            nThreads = Params().DefaultMinerThreads();\n         else\n             nThreads = boost::thread::hardware_concurrency();\n     }\n@@ -674,4 +679,3 @@ void GenerateBitcoins(bool fGenerate, CWallet* pwallet, int nThreads)\n }\n \n #endif\n-"
      },
      {
        "sha": "dcd61d8fd9eaf76c4117b85f94d091426fa46fa4",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -10,11 +10,12 @@\n \n class CBlock;\n class CBlockIndex;\n-struct CBlockTemplate;\n class CReserveKey;\n class CScript;\n class CWallet;\n \n+struct CBlockTemplate;\n+\n /** Run the miner threads */\n void GenerateBitcoins(bool fGenerate, CWallet* pwallet, int nThreads);\n /** Generate a new block, without valid proof-of-work */"
      },
      {
        "sha": "c1c08b02888d373dcef0c193a6edeb7637918b05",
        "filename": "src/mruset.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/mruset.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/mruset.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/mruset.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -32,6 +32,7 @@ template <typename T> class mruset\n     bool empty() const { return set.empty(); }\n     iterator find(const key_type& k) const { return set.find(k); }\n     size_type count(const key_type& k) const { return set.count(k); }\n+    void clear() { set.clear(); queue.clear(); }\n     bool inline friend operator==(const mruset<T>& a, const mruset<T>& b) { return a.set == b.set; }\n     bool inline friend operator==(const mruset<T>& a, const std::set<T>& b) { return a.set == b; }\n     bool inline friend operator<(const mruset<T>& a, const mruset<T>& b) { return a.set < b.set; }"
      },
      {
        "sha": "757a06aaed3353e061fa5653eac627a01a54d213",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 42,
        "deletions": 47,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -41,13 +41,11 @@ using namespace boost;\n \n static const int MAX_OUTBOUND_CONNECTIONS = 8;\n \n-bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOutbound = NULL, const char *strDest = NULL, bool fOneShot = false);\n-\n-\n //\n // Global state variables\n //\n bool fDiscover = true;\n+bool fListen = true;\n uint64_t nLocalServices = NODE_NETWORK;\n CCriticalSection cs_mapLocalHost;\n map<CNetAddr, LocalServiceInfo> mapLocalHost;\n@@ -99,7 +97,7 @@ unsigned short GetListenPort()\n // find 'best' local address for a particular peer\n bool GetLocal(CService& addr, const CNetAddr *paddrPeer)\n {\n-    if (fNoListen)\n+    if (!fListen)\n         return false;\n \n     int nBestScore = -1;\n@@ -178,7 +176,7 @@ bool RecvLine(SOCKET hSocket, string& strLine)\n             {\n                 // socket error\n                 int nErr = WSAGetLastError();\n-                LogPrint(\"net\", \"recv failed: %d\\n\", nErr);\n+                LogPrint(\"net\", \"recv failed: %s\\n\", NetworkErrorString(nErr));\n                 return false;\n             }\n         }\n@@ -471,11 +469,10 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n         }\n     }\n \n-\n     /// debug print\n     LogPrint(\"net\", \"trying connection %s lastseen=%.1fhrs\\n\",\n         pszDest ? pszDest : addrConnect.ToString(),\n-        pszDest ? 0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\n+        pszDest ? 0.0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\n \n     // Connect\n     SOCKET hSocket;\n@@ -489,10 +486,10 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n #ifdef WIN32\n         u_long nOne = 1;\n         if (ioctlsocket(hSocket, FIONBIO, &nOne) == SOCKET_ERROR)\n-            LogPrintf(\"ConnectSocket() : ioctlsocket non-blocking setting failed, error %d\\n\", WSAGetLastError());\n+            LogPrintf(\"ConnectSocket() : ioctlsocket non-blocking setting failed, error %s\\n\", NetworkErrorString(WSAGetLastError()));\n #else\n         if (fcntl(hSocket, F_SETFL, O_NONBLOCK) == SOCKET_ERROR)\n-            LogPrintf(\"ConnectSocket() : fcntl non-blocking setting failed, error %d\\n\", errno);\n+            LogPrintf(\"ConnectSocket() : fcntl non-blocking setting failed, error %s\\n\", NetworkErrorString(errno));\n #endif\n \n         // Add node\n@@ -507,10 +504,8 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n         pnode->nTimeConnected = GetTime();\n         return pnode;\n     }\n-    else\n-    {\n-        return NULL;\n-    }\n+\n+    return NULL;\n }\n \n void CNode::CloseSocketDisconnect()\n@@ -537,7 +532,6 @@ void CNode::Cleanup()\n {\n }\n \n-\n void CNode::PushVersion()\n {\n     int nBestHeight = g_signals.GetHeight().get_value_or(0);\n@@ -736,7 +730,7 @@ void SocketSendData(CNode *pnode)\n                 int nErr = WSAGetLastError();\n                 if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n                 {\n-                    LogPrintf(\"socket send error %d\\n\", nErr);\n+                    LogPrintf(\"socket send error %s\\n\", NetworkErrorString(nErr));\n                     pnode->CloseSocketDisconnect();\n                 }\n             }\n@@ -896,7 +890,7 @@ void ThreadSocketHandler()\n             if (have_fds)\n             {\n                 int nErr = WSAGetLastError();\n-                LogPrintf(\"socket select error %d\\n\", nErr);\n+                LogPrintf(\"socket select error %s\\n\", NetworkErrorString(nErr));\n                 for (unsigned int i = 0; i <= hSocketMax; i++)\n                     FD_SET(i, &fdsetRecv);\n             }\n@@ -933,7 +927,7 @@ void ThreadSocketHandler()\n             {\n                 int nErr = WSAGetLastError();\n                 if (nErr != WSAEWOULDBLOCK)\n-                    LogPrintf(\"socket error accept failed: %d\\n\", nErr);\n+                    LogPrintf(\"socket error accept failed: %s\\n\", NetworkErrorString(nErr));\n             }\n             else if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS)\n             {\n@@ -1007,7 +1001,7 @@ void ThreadSocketHandler()\n                             if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n                             {\n                                 if (!pnode->fDisconnect)\n-                                    LogPrintf(\"socket recv error %d\\n\", nErr);\n+                                    LogPrintf(\"socket recv error %s\\n\", NetworkErrorString(nErr));\n                                 pnode->CloseSocketDisconnect();\n                             }\n                         }\n@@ -1030,23 +1024,27 @@ void ThreadSocketHandler()\n             //\n             // Inactivity checking\n             //\n-            if (pnode->vSendMsg.empty())\n-                pnode->nLastSendEmpty = GetTime();\n-            if (GetTime() - pnode->nTimeConnected > 60)\n+            int64_t nTime = GetTime();\n+            if (nTime - pnode->nTimeConnected > 60)\n             {\n                 if (pnode->nLastRecv == 0 || pnode->nLastSend == 0)\n                 {\n                     LogPrint(\"net\", \"socket no message in first 60 seconds, %d %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0);\n                     pnode->fDisconnect = true;\n                 }\n-                else if (GetTime() - pnode->nLastSend > 90*60 && GetTime() - pnode->nLastSendEmpty > 90*60)\n+                else if (nTime - pnode->nLastSend > TIMEOUT_INTERVAL)\n                 {\n-                    LogPrintf(\"socket not sending\\n\");\n+                    LogPrintf(\"socket sending timeout: %is\\n\", nTime - pnode->nLastSend);\n                     pnode->fDisconnect = true;\n                 }\n-                else if (GetTime() - pnode->nLastRecv > 90*60)\n+                else if (nTime - pnode->nLastRecv > (pnode->nVersion > BIP0031_VERSION ? TIMEOUT_INTERVAL : 90*60))\n                 {\n-                    LogPrintf(\"socket inactivity timeout\\n\");\n+                    LogPrintf(\"socket receive timeout: %is\\n\", nTime - pnode->nLastRecv);\n+                    pnode->fDisconnect = true;\n+                }\n+                else if (pnode->nPingNonceSent && pnode->nPingUsecStart + TIMEOUT_INTERVAL * 1000000 < GetTimeMicros())\n+                {\n+                    LogPrintf(\"ping timeout: %fs\\n\", 0.000001 * (GetTimeMicros() - pnode->nPingUsecStart));\n                     pnode->fDisconnect = true;\n                 }\n             }\n@@ -1427,21 +1425,21 @@ void ThreadOpenAddedConnections()\n }\n \n // if successful, this moves the passed grant to the constructed node\n-bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOutbound, const char *strDest, bool fOneShot)\n+bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOutbound, const char *pszDest, bool fOneShot)\n {\n     //\n     // Initiate outbound network connection\n     //\n     boost::this_thread::interruption_point();\n-    if (!strDest)\n+    if (!pszDest) {\n         if (IsLocal(addrConnect) ||\n             FindNode((CNetAddr)addrConnect) || CNode::IsBanned(addrConnect) ||\n             FindNode(addrConnect.ToStringIPPort().c_str()))\n             return false;\n-    if (strDest && FindNode(strDest))\n+    } else if (FindNode(pszDest))\n         return false;\n \n-    CNode* pnode = ConnectNode(addrConnect, strDest);\n+    CNode* pnode = ConnectNode(addrConnect, pszDest);\n     boost::this_thread::interruption_point();\n \n     if (!pnode)\n@@ -1458,13 +1456,13 @@ bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOu\n \n // for now, use a very simple selection metric: the node from which we received\n // most recently\n-double static NodeSyncScore(const CNode *pnode) {\n-    return -pnode->nLastRecv;\n+static int64_t NodeSyncScore(const CNode *pnode) {\n+    return pnode->nLastRecv;\n }\n \n void static StartSync(const vector<CNode*> &vNodes) {\n     CNode *pnodeNewSync = NULL;\n-    double dBestScore = 0;\n+    int64_t nBestScore = 0;\n \n     int nBestHeight = g_signals.GetHeight().get_value_or(0);\n \n@@ -1476,10 +1474,10 @@ void static StartSync(const vector<CNode*> &vNodes) {\n             (pnode->nStartingHeight > (nBestHeight - 144)) &&\n             (pnode->nVersion < NOBLKS_VERSION_START || pnode->nVersion >= NOBLKS_VERSION_END)) {\n             // if ok, compare node's score with the best so far\n-            double dScore = NodeSyncScore(pnode);\n-            if (pnodeNewSync == NULL || dScore > dBestScore) {\n+            int64_t nScore = NodeSyncScore(pnode);\n+            if (pnodeNewSync == NULL || nScore > nBestScore) {\n                 pnodeNewSync = pnode;\n-                dBestScore = dScore;\n+                nBestScore = nScore;\n             }\n         }\n     }\n@@ -1577,15 +1575,15 @@ bool BindListenPort(const CService &addrBind, string& strError)\n     socklen_t len = sizeof(sockaddr);\n     if (!addrBind.GetSockAddr((struct sockaddr*)&sockaddr, &len))\n     {\n-        strError = strprintf(\"Error: bind address family for %s not supported\", addrBind.ToString());\n+        strError = strprintf(\"Error: Bind address family for %s not supported\", addrBind.ToString());\n         LogPrintf(\"%s\\n\", strError);\n         return false;\n     }\n \n     SOCKET hListenSocket = socket(((struct sockaddr*)&sockaddr)->sa_family, SOCK_STREAM, IPPROTO_TCP);\n     if (hListenSocket == INVALID_SOCKET)\n     {\n-        strError = strprintf(\"Error: Couldn't open socket for incoming connections (socket returned error %d)\", WSAGetLastError());\n+        strError = strprintf(\"Error: Couldn't open socket for incoming connections (socket returned error %s)\", NetworkErrorString(WSAGetLastError()));\n         LogPrintf(\"%s\\n\", strError);\n         return false;\n     }\n@@ -1609,7 +1607,7 @@ bool BindListenPort(const CService &addrBind, string& strError)\n     if (fcntl(hListenSocket, F_SETFL, O_NONBLOCK) == SOCKET_ERROR)\n #endif\n     {\n-        strError = strprintf(\"Error: Couldn't set properties on socket for incoming connections (error %d)\", WSAGetLastError());\n+        strError = strprintf(\"Error: Couldn't set properties on socket for incoming connections (error %s)\", NetworkErrorString(WSAGetLastError()));\n         LogPrintf(\"%s\\n\", strError);\n         return false;\n     }\n@@ -1638,7 +1636,7 @@ bool BindListenPort(const CService &addrBind, string& strError)\n         if (nErr == WSAEADDRINUSE)\n             strError = strprintf(_(\"Unable to bind to %s on this computer. Bitcoin Core is probably already running.\"), addrBind.ToString());\n         else\n-            strError = strprintf(_(\"Unable to bind to %s on this computer (bind returned error %d, %s)\"), addrBind.ToString(), nErr, strerror(nErr));\n+            strError = strprintf(_(\"Unable to bind to %s on this computer (bind returned error %s)\"), addrBind.ToString(), NetworkErrorString(nErr));\n         LogPrintf(\"%s\\n\", strError);\n         return false;\n     }\n@@ -1647,7 +1645,7 @@ bool BindListenPort(const CService &addrBind, string& strError)\n     // Listen for incoming connections\n     if (listen(hListenSocket, SOMAXCONN) == SOCKET_ERROR)\n     {\n-        strError = strprintf(_(\"Error: Listening for incoming connections failed (listen returned error %d)\"), WSAGetLastError());\n+        strError = strprintf(_(\"Error: Listening for incoming connections failed (listen returned error %s)\"), NetworkErrorString(WSAGetLastError()));\n         LogPrintf(\"%s\\n\", strError);\n         return false;\n     }\n@@ -1736,10 +1734,8 @@ void StartNode(boost::thread_group& threadGroup)\n     else\n         threadGroup.create_thread(boost::bind(&TraceThread<void (*)()>, \"dnsseed\", &ThreadDNSAddressSeed));\n \n-#ifdef USE_UPNP\n     // Map ports with UPnP\n-    MapPort(GetBoolArg(\"-upnp\", USE_UPNP));\n-#endif\n+    MapPort(GetBoolArg(\"-upnp\", DEFAULT_UPNP));\n \n     // Send and receive from sockets, accept connections\n     threadGroup.create_thread(boost::bind(&TraceThread<void (*)()>, \"net\", &ThreadSocketHandler));\n@@ -1773,9 +1769,8 @@ bool StopNode()\n class CNetCleanup\n {\n public:\n-    CNetCleanup()\n-    {\n-    }\n+    CNetCleanup() {}\n+\n     ~CNetCleanup()\n     {\n         // Close sockets\n@@ -1785,7 +1780,7 @@ class CNetCleanup\n         BOOST_FOREACH(SOCKET hListenSocket, vhListenSocket)\n             if (hListenSocket != INVALID_SOCKET)\n                 if (closesocket(hListenSocket) == SOCKET_ERROR)\n-                    LogPrintf(\"closesocket(hListenSocket) failed with error %d\\n\", WSAGetLastError());\n+                    LogPrintf(\"closesocket(hListenSocket) failed with error %s\\n\", NetworkErrorString(WSAGetLastError()));\n \n         // clean up some globals (to help leak detection)\n         BOOST_FOREACH(CNode *pnode, vNodes)"
      },
      {
        "sha": "14d578a72a21979c6ef7f2d28b06243054c8f74c",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 26,
        "deletions": 9,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -28,6 +28,7 @@\n #include <boost/signals2/signal.hpp>\n #include <openssl/rand.h>\n \n+\n class CAddrMan;\n class CBlockIndex;\n class CNode;\n@@ -36,8 +37,20 @@ namespace boost {\n     class thread_group;\n }\n \n+/** Time between pings automatically sent out for latency probing and keepalive (in seconds). */\n+static const int PING_INTERVAL = 2 * 60;\n+/** Time after which to disconnect, after waiting for a ping response (or inactivity). */\n+static const int TIMEOUT_INTERVAL = 20 * 60;\n /** The maximum number of entries in an 'inv' protocol message */\n static const unsigned int MAX_INV_SZ = 50000;\n+/** -listen default */\n+static const bool DEFAULT_LISTEN = true;\n+/** -upnp default */\n+#ifdef USE_UPNP\n+static const bool DEFAULT_UPNP = USE_UPNP;\n+#else\n+static const bool DEFAULT_UPNP = false;\n+#endif\n \n inline unsigned int ReceiveFloodSize() { return 1000*GetArg(\"-maxreceivebuffer\", 5*1000); }\n inline unsigned int SendBufferSize() { return 1000*GetArg(\"-maxsendbuffer\", 1*1000); }\n@@ -48,10 +61,11 @@ bool GetMyExternalIP(CNetAddr& ipRet);\n void AddressCurrentlyConnected(const CService& addr);\n CNode* FindNode(const CNetAddr& ip);\n CNode* FindNode(const CService& ip);\n-CNode* ConnectNode(CAddress addrConnect, const char *strDest = NULL);\n+CNode* ConnectNode(CAddress addrConnect, const char *pszDest = NULL);\n+bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOutbound = NULL, const char *strDest = NULL, bool fOneShot = false);\n void MapPort(bool fUseUPnP);\n unsigned short GetListenPort();\n-bool BindListenPort(const CService &bindAddr, std::string& strError=REF(std::string()));\n+bool BindListenPort(const CService &bindAddr, std::string& strError);\n void StartNode(boost::thread_group& threadGroup);\n bool StopNode();\n void SocketSendData(CNode *pnode);\n@@ -98,6 +112,7 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer = NULL);\n \n \n extern bool fDiscover;\n+extern bool fListen;\n extern uint64_t nLocalServices;\n extern uint64_t nLocalHostNonce;\n extern CAddrMan addrman;\n@@ -122,7 +137,7 @@ struct LocalServiceInfo {\n };\n \n extern CCriticalSection cs_mapLocalHost;\n-extern map<CNetAddr, LocalServiceInfo> mapLocalHost;\n+extern std::map<CNetAddr, LocalServiceInfo> mapLocalHost;\n \n class CNodeStats\n {\n@@ -209,7 +224,6 @@ class CNode\n \n     int64_t nLastSend;\n     int64_t nLastRecv;\n-    int64_t nLastSendEmpty;\n     int64_t nTimeConnected;\n     CAddress addr;\n     std::string addrName;\n@@ -255,7 +269,7 @@ class CNode\n \n     // flood relay\n     std::vector<CAddress> vAddrToSend;\n-    std::set<CAddress> setAddrKnown;\n+    mruset<CAddress> setAddrKnown;\n     bool fGetAddr;\n     std::set<uint256> setKnown;\n \n@@ -265,13 +279,17 @@ class CNode\n     CCriticalSection cs_inventory;\n     std::multimap<int64_t, CInv> mapAskFor;\n \n-    // Ping time measurement\n+    // Ping time measurement:\n+    // The pong reply we're expecting, or 0 if no pong expected.\n     uint64_t nPingNonceSent;\n+    // Time (in usec) the last ping was sent, or 0 if no ping was ever sent.\n     int64_t nPingUsecStart;\n+    // Last measured round-trip time.\n     int64_t nPingUsecTime;\n+    // Whether a ping is requested.\n     bool fPingQueued;\n \n-    CNode(SOCKET hSocketIn, CAddress addrIn, std::string addrNameIn = \"\", bool fInboundIn=false) : ssSend(SER_NETWORK, INIT_PROTO_VERSION)\n+    CNode(SOCKET hSocketIn, CAddress addrIn, std::string addrNameIn = \"\", bool fInboundIn=false) : ssSend(SER_NETWORK, INIT_PROTO_VERSION), setAddrKnown(5000)\n     {\n         nServices = 0;\n         hSocket = hSocketIn;\n@@ -280,7 +298,6 @@ class CNode\n         nLastRecv = 0;\n         nSendBytes = 0;\n         nRecvBytes = 0;\n-        nLastSendEmpty = GetTime();\n         nTimeConnected = GetTime();\n         addr = addrIn;\n         addrName = addrNameIn == \"\" ? addr.ToStringIPPort() : addrNameIn;\n@@ -430,7 +447,7 @@ class CNode\n             nRequestTime = it->second;\n         else\n             nRequestTime = 0;\n-        LogPrint(\"net\", \"askfor %s   %d (%s)\\n\", inv.ToString().c_str(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\n+        LogPrint(\"net\", \"askfor %s   %d (%s)\\n\", inv.ToString(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\n \n         // Make sure not to reuse time indexes to keep things in the same order\n         int64_t nNow = GetTimeMicros() - 1000000;"
      },
      {
        "sha": "4aa7367f390fa0aa5e842cf0756cd2297f2efb9d",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 9,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -123,11 +123,6 @@ bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nM\n     return LookupIntern(strHost.c_str(), vIP, nMaxSolutions, fAllowLookup);\n }\n \n-bool LookupHostNumeric(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions)\n-{\n-    return LookupHost(pszName, vIP, nMaxSolutions, false);\n-}\n-\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault, bool fAllowLookup, unsigned int nMaxSolutions)\n {\n     if (pszName[0] == 0)\n@@ -361,7 +356,7 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n             }\n             if (nRet == SOCKET_ERROR)\n             {\n-                LogPrintf(\"select() for %s failed: %i\\n\", addrConnect.ToString(), WSAGetLastError());\n+                LogPrintf(\"select() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n                 closesocket(hSocket);\n                 return false;\n             }\n@@ -372,13 +367,13 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n             if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, &nRet, &nRetSize) == SOCKET_ERROR)\n #endif\n             {\n-                LogPrintf(\"getsockopt() for %s failed: %i\\n\", addrConnect.ToString(), WSAGetLastError());\n+                LogPrintf(\"getsockopt() for %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n                 closesocket(hSocket);\n                 return false;\n             }\n             if (nRet != 0)\n             {\n-                LogPrintf(\"connect() to %s failed after select(): %s\\n\", addrConnect.ToString(), strerror(nRet));\n+                LogPrintf(\"connect() to %s failed after select(): %s\\n\", addrConnect.ToString(), NetworkErrorString(nRet));\n                 closesocket(hSocket);\n                 return false;\n             }\n@@ -389,7 +384,7 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n         else\n #endif\n         {\n-            LogPrintf(\"connect() to %s failed: %i\\n\", addrConnect.ToString(), WSAGetLastError());\n+            LogPrintf(\"connect() to %s failed: %s\\n\", addrConnect.ToString(), NetworkErrorString(WSAGetLastError()));\n             closesocket(hSocket);\n             return false;\n         }\n@@ -1237,3 +1232,36 @@ bool operator!=(const CSubNet& a, const CSubNet& b)\n {\n     return !(a==b);\n }\n+\n+#ifdef WIN32\n+std::string NetworkErrorString(int err)\n+{\n+    char buf[256];\n+    buf[0] = 0;\n+    if(FormatMessageA(FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS | FORMAT_MESSAGE_MAX_WIDTH_MASK,\n+            NULL, err, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n+            buf, sizeof(buf), NULL))\n+    {\n+        return strprintf(\"%s (%d)\", buf, err);\n+    }\n+    else\n+    {\n+        return strprintf(\"Unknown error (%d)\", err);\n+    }\n+}\n+#else\n+std::string NetworkErrorString(int err)\n+{\n+    char buf[256];\n+    const char *s = buf;\n+    buf[0] = 0;\n+    /* Too bad there are two incompatible implementations of the\n+     * thread-safe strerror. */\n+#ifdef STRERROR_R_CHAR_P /* GNU variant can return a pointer outside the passed buffer */\n+    s = strerror_r(err, buf, sizeof(buf));\n+#else /* POSIX variant always returns message in buffer */\n+    (void) strerror_r(err, buf, sizeof(buf));\n+#endif\n+    return strprintf(\"%s (%d)\", s, err);\n+}\n+#endif"
      },
      {
        "sha": "23cfb1f158568acca413dedea0da6cab1e6294b9",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -17,6 +17,7 @@\n #include <vector>\n \n extern int nConnectTimeout;\n+extern bool fNameLookup;\n \n #ifdef WIN32\n // In MSVC, this is defined as a macro, undefine it to prevent a compile and link error\n@@ -33,9 +34,6 @@ enum Network\n     NET_MAX,\n };\n \n-extern int nConnectTimeout;\n-extern bool fNameLookup;\n-\n /** IP address (IPv6, or IPv4 using mapped IPv6 range (::FFFF:0:0/96)) */\n class CNetAddr\n {\n@@ -173,11 +171,12 @@ bool IsProxy(const CNetAddr &addr);\n bool SetNameProxy(CService addrProxy, int nSocksVersion = 5);\n bool HaveNameProxy();\n bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions = 0, bool fAllowLookup = true);\n-bool LookupHostNumeric(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions = 0);\n bool Lookup(const char *pszName, CService& addr, int portDefault = 0, bool fAllowLookup = true);\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault = 0, bool fAllowLookup = true, unsigned int nMaxSolutions = 0);\n bool LookupNumeric(const char *pszName, CService& addr, int portDefault = 0);\n bool ConnectSocket(const CService &addr, SOCKET& hSocketRet, int nTimeout = nConnectTimeout);\n bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault = 0, int nTimeout = nConnectTimeout);\n+/** Return readable error string for a network error code */\n+std::string NetworkErrorString(int err);\n \n #endif"
      },
      {
        "sha": "87b2f238735cbc013c9ce1f3da0729ef335024a8",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -5,6 +5,7 @@\n \n #include \"protocol.h\"\n \n+#include \"chainparams.h\"\n #include \"util.h\"\n \n #ifndef WIN32"
      },
      {
        "sha": "6de5d05a723cd61324e5e92065022c6d19592156",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -10,7 +10,6 @@\n #ifndef __INCLUDED_PROTOCOL_H__\n #define __INCLUDED_PROTOCOL_H__\n \n-#include \"chainparams.h\"\n #include \"netbase.h\"\n #include \"serialize.h\"\n #include \"uint256.h\"\n@@ -19,6 +18,8 @@\n #include <stdint.h>\n #include <string>\n \n+#define MESSAGE_START_SIZE 4\n+\n /** Message header.\n  * (4) message start.\n  * (12) command."
      },
      {
        "sha": "b9dcf0c5992216013d27464202cc86d2e8c31c93",
        "filename": "src/qt/Makefile",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -0,0 +1,9 @@\n+.PHONY: FORCE\n+all: FORCE\n+\t$(MAKE) -C .. bitcoin_qt test_bitcoin_qt\n+clean: FORCE\n+\t$(MAKE) -C .. bitcoin_qt_clean test_bitcoin_qt_clean\n+check: FORCE\n+\t$(MAKE) -C .. test_bitcoin_qt_check\n+bitcoin-qt bitcoin-qt.exe: FORCE\n+\t $(MAKE) -C .. bitcoin_qt"
      },
      {
        "sha": "648971bd8fa425b8966f2f2079d0876ada310082",
        "filename": "src/qt/Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 379,
        "changes": 379,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a48355dc44e8b86c2fc9f8b7973ac9e81a295be7/src/qt/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a48355dc44e8b86c2fc9f8b7973ac9e81a295be7/src/qt/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/Makefile.am?ref=a48355dc44e8b86c2fc9f8b7973ac9e81a295be7",
        "patch": "@@ -1,379 +0,0 @@\n-include $(top_srcdir)/src/Makefile.include\n-\n-AM_CPPFLAGS += -I$(top_srcdir)/src \\\n-  -I$(top_builddir)/src/qt \\\n-  -I$(top_builddir)/src/qt/forms \\\n-  $(PROTOBUF_CFLAGS) \\\n-  $(QR_CFLAGS)\n-bin_PROGRAMS = bitcoin-qt\n-noinst_LIBRARIES = libbitcoinqt.a\n-SUBDIRS = . $(BUILD_TEST_QT)\n-DIST_SUBDIRS = . test\n-\n-# bitcoin qt core #\n-QT_TS = \\\n-  locale/bitcoin_ach.ts \\\n-  locale/bitcoin_af_ZA.ts \\\n-  locale/bitcoin_ar.ts \\\n-  locale/bitcoin_be_BY.ts \\\n-  locale/bitcoin_bg.ts \\\n-  locale/bitcoin_bs.ts \\\n-  locale/bitcoin_ca_ES.ts \\\n-  locale/bitcoin_ca.ts \\\n-  locale/bitcoin_ca@valencia.ts \\\n-  locale/bitcoin_cmn.ts \\\n-  locale/bitcoin_cs.ts \\\n-  locale/bitcoin_cy.ts \\\n-  locale/bitcoin_da.ts \\\n-  locale/bitcoin_de.ts \\\n-  locale/bitcoin_el_GR.ts \\\n-  locale/bitcoin_en.ts \\\n-  locale/bitcoin_eo.ts \\\n-  locale/bitcoin_es_CL.ts \\\n-  locale/bitcoin_es_DO.ts \\\n-  locale/bitcoin_es_MX.ts \\\n-  locale/bitcoin_es.ts \\\n-  locale/bitcoin_es_UY.ts \\\n-  locale/bitcoin_et.ts \\\n-  locale/bitcoin_eu_ES.ts \\\n-  locale/bitcoin_fa_IR.ts \\\n-  locale/bitcoin_fa.ts \\\n-  locale/bitcoin_fi.ts \\\n-  locale/bitcoin_fr_CA.ts \\\n-  locale/bitcoin_fr.ts \\\n-  locale/bitcoin_gl.ts \\\n-  locale/bitcoin_gu_IN.ts \\\n-  locale/bitcoin_he.ts \\\n-  locale/bitcoin_hi_IN.ts \\\n-  locale/bitcoin_hr.ts \\\n-  locale/bitcoin_hu.ts \\\n-  locale/bitcoin_id_ID.ts \\\n-  locale/bitcoin_it.ts \\\n-  locale/bitcoin_ja.ts \\\n-  locale/bitcoin_ka.ts \\\n-  locale/bitcoin_kk_KZ.ts \\\n-  locale/bitcoin_ko_KR.ts \\\n-  locale/bitcoin_ky.ts \\\n-  locale/bitcoin_la.ts \\\n-  locale/bitcoin_lt.ts \\\n-  locale/bitcoin_lv_LV.ts \\\n-  locale/bitcoin_mn.ts \\\n-  locale/bitcoin_ms_MY.ts \\\n-  locale/bitcoin_nb.ts \\\n-  locale/bitcoin_nl.ts \\\n-  locale/bitcoin_pam.ts \\\n-  locale/bitcoin_pl.ts \\\n-  locale/bitcoin_pt_BR.ts \\\n-  locale/bitcoin_pt_PT.ts \\\n-  locale/bitcoin_ro_RO.ts \\\n-  locale/bitcoin_ru.ts \\\n-  locale/bitcoin_sah.ts \\\n-  locale/bitcoin_sk.ts \\\n-  locale/bitcoin_sl_SI.ts \\\n-  locale/bitcoin_sq.ts \\\n-  locale/bitcoin_sr.ts \\\n-  locale/bitcoin_sv.ts \\\n-  locale/bitcoin_th_TH.ts \\\n-  locale/bitcoin_tr.ts \\\n-  locale/bitcoin_uk.ts \\\n-  locale/bitcoin_ur_PK.ts \\\n-  locale/bitcoin_uz@Cyrl.ts \\\n-  locale/bitcoin_vi.ts \\\n-  locale/bitcoin_vi_VN.ts \\\n-  locale/bitcoin_zh_CN.ts \\\n-  locale/bitcoin_zh_HK.ts \\\n-  locale/bitcoin_zh_TW.ts\n-\n-QT_FORMS_UI = \\\n-  forms/aboutdialog.ui \\\n-  forms/addressbookpage.ui \\\n-  forms/askpassphrasedialog.ui \\\n-  forms/coincontroldialog.ui \\\n-  forms/editaddressdialog.ui \\\n-  forms/helpmessagedialog.ui \\\n-  forms/intro.ui \\\n-  forms/openuridialog.ui \\\n-  forms/optionsdialog.ui \\\n-  forms/overviewpage.ui \\\n-  forms/receivecoinsdialog.ui \\\n-  forms/receiverequestdialog.ui \\\n-  forms/rpcconsole.ui \\\n-  forms/sendcoinsdialog.ui \\\n-  forms/sendcoinsentry.ui \\\n-  forms/signverifymessagedialog.ui \\\n-  forms/transactiondescdialog.ui\n-\n-QT_MOC_CPP = \\\n-  moc_addressbookpage.cpp \\\n-  moc_addresstablemodel.cpp \\\n-  moc_askpassphrasedialog.cpp \\\n-  moc_bitcoinaddressvalidator.cpp \\\n-  moc_bitcoinamountfield.cpp \\\n-  moc_bitcoingui.cpp \\\n-  moc_bitcoinunits.cpp \\\n-  moc_clientmodel.cpp \\\n-  moc_coincontroldialog.cpp \\\n-  moc_coincontroltreewidget.cpp \\\n-  moc_csvmodelwriter.cpp \\\n-  moc_editaddressdialog.cpp \\\n-  moc_guiutil.cpp \\\n-  moc_intro.cpp \\\n-  moc_macdockiconhandler.cpp \\\n-  moc_macnotificationhandler.cpp \\\n-  moc_monitoreddatamapper.cpp \\\n-  moc_notificator.cpp \\\n-  moc_openuridialog.cpp \\\n-  moc_optionsdialog.cpp \\\n-  moc_optionsmodel.cpp \\\n-  moc_overviewpage.cpp \\\n-  moc_paymentserver.cpp \\\n-  moc_qvalidatedlineedit.cpp \\\n-  moc_qvaluecombobox.cpp \\\n-  moc_receivecoinsdialog.cpp \\\n-  moc_receiverequestdialog.cpp \\\n-  moc_recentrequeststablemodel.cpp \\\n-  moc_rpcconsole.cpp \\\n-  moc_sendcoinsdialog.cpp \\\n-  moc_sendcoinsentry.cpp \\\n-  moc_signverifymessagedialog.cpp \\\n-  moc_splashscreen.cpp \\\n-  moc_trafficgraphwidget.cpp \\\n-  moc_transactiondesc.cpp \\\n-  moc_transactiondescdialog.cpp \\\n-  moc_transactionfilterproxy.cpp \\\n-  moc_transactiontablemodel.cpp \\\n-  moc_transactionview.cpp \\\n-  moc_utilitydialog.cpp \\\n-  moc_walletframe.cpp \\\n-  moc_walletmodel.cpp \\\n-  moc_walletview.cpp\n-\n-BITCOIN_MM = \\\n-  macdockiconhandler.mm \\\n-  macnotificationhandler.mm\n-\n-QT_MOC = \\\n-  bitcoin.moc \\\n-  intro.moc \\\n-  overviewpage.moc \\\n-  rpcconsole.moc\n-\n-QT_QRC_CPP = qrc_bitcoin.cpp\n-QT_QRC = bitcoin.qrc\n-\n-PROTOBUF_CC = paymentrequest.pb.cc\n-PROTOBUF_H = paymentrequest.pb.h\n-PROTOBUF_PROTO = paymentrequest.proto\n-\n-BITCOIN_QT_H = \\\n-  addressbookpage.h \\\n-  addresstablemodel.h \\\n-  askpassphrasedialog.h \\\n-  bitcoinaddressvalidator.h \\\n-  bitcoinamountfield.h \\\n-  bitcoingui.h \\\n-  bitcoinunits.h \\\n-  clientmodel.h \\\n-  coincontroldialog.h \\\n-  coincontroltreewidget.h \\\n-  csvmodelwriter.h \\\n-  editaddressdialog.h \\\n-  guiconstants.h \\\n-  guiutil.h \\\n-  intro.h \\\n-  macdockiconhandler.h \\\n-  macnotificationhandler.h \\\n-  monitoreddatamapper.h \\\n-  notificator.h \\\n-  openuridialog.h \\\n-  optionsdialog.h \\\n-  optionsmodel.h \\\n-  overviewpage.h \\\n-  paymentrequestplus.h \\\n-  paymentserver.h \\\n-  qvalidatedlineedit.h \\\n-  qvaluecombobox.h \\\n-  receivecoinsdialog.h \\\n-  receiverequestdialog.h \\\n-  recentrequeststablemodel.h \\\n-  rpcconsole.h \\\n-  sendcoinsdialog.h \\\n-  sendcoinsentry.h \\\n-  signverifymessagedialog.h \\\n-  splashscreen.h \\\n-  trafficgraphwidget.h \\\n-  transactiondesc.h \\\n-  transactiondescdialog.h \\\n-  transactionfilterproxy.h \\\n-  transactionrecord.h \\\n-  transactiontablemodel.h \\\n-  transactionview.h \\\n-  utilitydialog.h \\\n-  walletframe.h \\\n-  walletmodel.h \\\n-  walletmodeltransaction.h \\\n-  walletview.h \\\n-  winshutdownmonitor.h\n-\n-RES_ICONS = \\\n-  res/icons/add.png \\\n-  res/icons/address-book.png \\\n-  res/icons/bitcoin.ico \\\n-  res/icons/bitcoin.png \\\n-  res/icons/bitcoin_testnet.ico \\\n-  res/icons/bitcoin_testnet.png \\\n-  res/icons/clock1.png \\\n-  res/icons/clock2.png \\\n-  res/icons/clock3.png \\\n-  res/icons/clock4.png \\\n-  res/icons/clock5.png \\\n-  res/icons/configure.png \\\n-  res/icons/connect0_16.png \\\n-  res/icons/connect1_16.png \\\n-  res/icons/connect2_16.png \\\n-  res/icons/connect3_16.png \\\n-  res/icons/connect4_16.png \\\n-  res/icons/debugwindow.png \\\n-  res/icons/edit.png \\\n-  res/icons/editcopy.png \\\n-  res/icons/editpaste.png \\\n-  res/icons/export.png \\\n-  res/icons/filesave.png \\\n-  res/icons/history.png \\\n-  res/icons/key.png \\\n-  res/icons/lock_closed.png \\\n-  res/icons/lock_open.png \\\n-  res/icons/overview.png \\\n-  res/icons/qrcode.png \\\n-  res/icons/quit.png \\\n-  res/icons/receive.png \\\n-  res/icons/remove.png \\\n-  res/icons/send.png \\\n-  res/icons/synced.png \\\n-  res/icons/toolbar.png \\\n-  res/icons/toolbar_testnet.png \\\n-  res/icons/transaction0.png \\\n-  res/icons/transaction2.png \\\n-  res/icons/transaction_conflicted.png \\\n-  res/icons/tx_inout.png \\\n-  res/icons/tx_input.png \\\n-  res/icons/tx_output.png \\\n-  res/icons/tx_mined.png\n-\n-BITCOIN_QT_CPP = \\\n-  bitcoin.cpp \\\n-  bitcoinaddressvalidator.cpp \\\n-  bitcoinamountfield.cpp \\\n-  bitcoingui.cpp \\\n-  bitcoinunits.cpp \\\n-  clientmodel.cpp \\\n-  csvmodelwriter.cpp \\\n-  guiutil.cpp \\\n-  intro.cpp \\\n-  monitoreddatamapper.cpp \\\n-  notificator.cpp \\\n-  optionsdialog.cpp \\\n-  optionsmodel.cpp \\\n-  qvalidatedlineedit.cpp \\\n-  qvaluecombobox.cpp \\\n-  rpcconsole.cpp \\\n-  splashscreen.cpp \\\n-  trafficgraphwidget.cpp \\\n-  utilitydialog.cpp \\\n-  winshutdownmonitor.cpp\n-\n-if ENABLE_WALLET\n-BITCOIN_QT_CPP += \\\n-  addressbookpage.cpp \\\n-  addresstablemodel.cpp \\\n-  askpassphrasedialog.cpp \\\n-  coincontroldialog.cpp \\\n-  coincontroltreewidget.cpp \\\n-  editaddressdialog.cpp \\\n-  openuridialog.cpp \\\n-  overviewpage.cpp \\\n-  paymentrequestplus.cpp \\\n-  paymentserver.cpp \\\n-  receivecoinsdialog.cpp \\\n-  receiverequestdialog.cpp \\\n-  recentrequeststablemodel.cpp \\\n-  sendcoinsdialog.cpp \\\n-  sendcoinsentry.cpp \\\n-  signverifymessagedialog.cpp \\\n-  transactiondesc.cpp \\\n-  transactiondescdialog.cpp \\\n-  transactionfilterproxy.cpp \\\n-  transactionrecord.cpp \\\n-  transactiontablemodel.cpp \\\n-  transactionview.cpp \\\n-  walletframe.cpp \\\n-  walletmodel.cpp \\\n-  walletmodeltransaction.cpp \\\n-  walletview.cpp\n-endif\n-\n-RES_IMAGES = \\\n-  res/images/about.png \\\n-  res/images/splash.png \\\n-  res/images/splash_testnet.png\n-\n-RES_MOVIES = $(wildcard res/movies/spinner-*.png)\n-\n-BITCOIN_RC = res/bitcoin-qt-res.rc\n-\n-libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n-  -I$(top_srcdir)/src/qt/forms $(QT_DBUS_INCLUDES)\n-libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n-  $(QT_QRC) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n-\n-nodist_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n-  $(PROTOBUF_H) $(QT_QRC_CPP)\n-\n-BUILT_SOURCES = $(nodist_libbitcoinqt_a_SOURCES)\n-\n-#Generating these with a half-written protobuf header leads to wacky results.\n-#This makes sure it's done.\n-$(QT_MOC): $(PROTOBUF_H)\n-$(QT_MOC_CPP): $(PROTOBUF_H)\n-\n-# bitcoin-qt binary #\n-bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) \\\n-  -I$(top_srcdir)/src/qt/forms\n-bitcoin_qt_SOURCES = bitcoin.cpp\n-if TARGET_DARWIN\n-  bitcoin_qt_SOURCES += $(BITCOIN_MM)\n-endif\n-if TARGET_WINDOWS\n-  bitcoin_qt_SOURCES += $(BITCOIN_RC)\n-endif\n-bitcoin_qt_LDADD = libbitcoinqt.a $(LIBBITCOIN_SERVER)\n-if ENABLE_WALLET\n-bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n-endif\n-bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n-bitcoin_qt_LDFLAGS = $(QT_LDFLAGS)\n-\n-# forms/foo.h -> forms/ui_foo.h\n-QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))\n-\n-#locale/foo.ts -> locale/foo.qm\n-QT_QM=$(QT_TS:.ts=.qm)\n-\n-.PHONY: FORCE\n-.SECONDARY: $(QT_QM)\n-\n-bitcoinstrings.cpp: FORCE\n-\t$(MAKE) -C $(top_srcdir)/src qt/bitcoinstrings.cpp\n-\n-translate: bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n-\t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n-\t@QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts locale/bitcoin_en.ts\n-\n-$(QT_QRC_CPP): $(QT_QRC) $(QT_QM) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n-\t@cd $(abs_srcdir); test -f $(RCC) && QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin -o $(abs_builddir)/$@ $< || \\\n-\t  echo error: could not build $@\n-\t$(SED) -e '/^\\*\\*.*Created:/d' $@ > $@.n && mv $@{.n,}\n-\t$(SED) -e '/^\\*\\*.*by:/d' $@  > $@.n && mv $@{.n,}\n-\n-CLEANFILES = $(BUILT_SOURCES) $(QT_QM) $(QT_FORMS_H) *.gcda *.gcno"
      },
      {
        "sha": "387f6ede4be85e7cedbb3b87aa577d348ec37ca7",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -475,6 +475,7 @@ int main(int argc, char *argv[])\n #endif\n \n     Q_INIT_RESOURCE(bitcoin);\n+    Q_INIT_RESOURCE(bitcoin_locale);\n     BitcoinApplication app(argc, argv);\n #if QT_VERSION > 0x050100\n     // Generate high-dpi pixmaps\n@@ -502,9 +503,9 @@ int main(int argc, char *argv[])\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen.\n-    if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n+    if (mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n     {\n-        HelpMessageDialog help(NULL);\n+        HelpMessageDialog help(NULL, mapArgs.count(\"-version\"));\n         help.showOrPrint();\n         return 1;\n     }"
      },
      {
        "sha": "f38200c7f7b615d68e2f9bc0f90a3c9cd09eb741",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 0,
        "deletions": 73,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -84,77 +84,4 @@\n         <file alias=\"spinner-033\">res/movies/spinner-033.png</file>\n         <file alias=\"spinner-034\">res/movies/spinner-034.png</file>\n     </qresource>\n-    <qresource prefix=\"/translations\">\n-        <file alias=\"ach\">locale/bitcoin_ach.qm</file>\n-        <file alias=\"af_ZA\">locale/bitcoin_af_ZA.qm</file>\n-        <file alias=\"ar\">locale/bitcoin_ar.qm</file>\n-        <file alias=\"be_BY\">locale/bitcoin_be_BY.qm</file>\n-        <file alias=\"bg\">locale/bitcoin_bg.qm</file>\n-        <file alias=\"bs\">locale/bitcoin_bs.qm</file>\n-        <file alias=\"ca_ES\">locale/bitcoin_ca_ES.qm</file>\n-        <file alias=\"ca\">locale/bitcoin_ca.qm</file>\n-        <file alias=\"ca@valencia\">locale/bitcoin_ca@valencia.qm</file>\n-        <file alias=\"cmn\">locale/bitcoin_cmn.qm</file>\n-        <file alias=\"cs\">locale/bitcoin_cs.qm</file>\n-        <file alias=\"cy\">locale/bitcoin_cy.qm</file>\n-        <file alias=\"da\">locale/bitcoin_da.qm</file>\n-        <file alias=\"de\">locale/bitcoin_de.qm</file>\n-        <file alias=\"el_GR\">locale/bitcoin_el_GR.qm</file>\n-        <file alias=\"en\">locale/bitcoin_en.qm</file>\n-        <file alias=\"eo\">locale/bitcoin_eo.qm</file>\n-        <file alias=\"es_CL\">locale/bitcoin_es_CL.qm</file>\n-        <file alias=\"es_DO\">locale/bitcoin_es_DO.qm</file>\n-        <file alias=\"es_MX\">locale/bitcoin_es_MX.qm</file>\n-        <file alias=\"es\">locale/bitcoin_es.qm</file>\n-        <file alias=\"es_UY\">locale/bitcoin_es_UY.qm</file>\n-        <file alias=\"et\">locale/bitcoin_et.qm</file>\n-        <file alias=\"eu_ES\">locale/bitcoin_eu_ES.qm</file>\n-        <file alias=\"fa_IR\">locale/bitcoin_fa_IR.qm</file>\n-        <file alias=\"fa\">locale/bitcoin_fa.qm</file>\n-        <file alias=\"fi\">locale/bitcoin_fi.qm</file>\n-        <file alias=\"fr_CA\">locale/bitcoin_fr_CA.qm</file>\n-        <file alias=\"fr\">locale/bitcoin_fr.qm</file>\n-        <file alias=\"gl\">locale/bitcoin_gl.qm</file>\n-        <file alias=\"gu_IN\">locale/bitcoin_gu_IN.qm</file>\n-        <file alias=\"he\">locale/bitcoin_he.qm</file>\n-        <file alias=\"hi_IN\">locale/bitcoin_hi_IN.qm</file>\n-        <file alias=\"hr\">locale/bitcoin_hr.qm</file>\n-        <file alias=\"hu\">locale/bitcoin_hu.qm</file>\n-        <file alias=\"id_ID\">locale/bitcoin_id_ID.qm</file>\n-        <file alias=\"it\">locale/bitcoin_it.qm</file>\n-        <file alias=\"ja\">locale/bitcoin_ja.qm</file>\n-        <file alias=\"ka\">locale/bitcoin_ka.qm</file>\n-        <file alias=\"kk_KZ\">locale/bitcoin_kk_KZ.qm</file>\n-        <file alias=\"ko_KR\">locale/bitcoin_ko_KR.qm</file>\n-        <file alias=\"ky\">locale/bitcoin_ky.qm</file>\n-        <file alias=\"la\">locale/bitcoin_la.qm</file>\n-        <file alias=\"lt\">locale/bitcoin_lt.qm</file>\n-        <file alias=\"lv_LV\">locale/bitcoin_lv_LV.qm</file>\n-        <file alias=\"mn\">locale/bitcoin_mn.qm</file>\n-        <file alias=\"ms_MY\">locale/bitcoin_ms_MY.qm</file>\n-        <file alias=\"nb\">locale/bitcoin_nb.qm</file>\n-        <file alias=\"nl\">locale/bitcoin_nl.qm</file>\n-        <file alias=\"pam\">locale/bitcoin_pam.qm</file>\n-        <file alias=\"pl\">locale/bitcoin_pl.qm</file>\n-        <file alias=\"pt_BR\">locale/bitcoin_pt_BR.qm</file>\n-        <file alias=\"pt_PT\">locale/bitcoin_pt_PT.qm</file>\n-        <file alias=\"ro_RO\">locale/bitcoin_ro_RO.qm</file>\n-        <file alias=\"ru\">locale/bitcoin_ru.qm</file>\n-        <file alias=\"sah\">locale/bitcoin_sah.qm</file>\n-        <file alias=\"sk\">locale/bitcoin_sk.qm</file>\n-        <file alias=\"sl_SI\">locale/bitcoin_sl_SI.qm</file>\n-        <file alias=\"sq\">locale/bitcoin_sq.qm</file>\n-        <file alias=\"sr\">locale/bitcoin_sr.qm</file>\n-        <file alias=\"sv\">locale/bitcoin_sv.qm</file>\n-        <file alias=\"th_TH\">locale/bitcoin_th_TH.qm</file>\n-        <file alias=\"tr\">locale/bitcoin_tr.qm</file>\n-        <file alias=\"uk\">locale/bitcoin_uk.qm</file>\n-        <file alias=\"ur_PK\">locale/bitcoin_ur_PK.qm</file>\n-        <file alias=\"uz@Cyrl\">locale/bitcoin_uz@Cyrl.qm</file>\n-        <file alias=\"vi\">locale/bitcoin_vi.qm</file>\n-        <file alias=\"vi_VN\">locale/bitcoin_vi_VN.qm</file>\n-        <file alias=\"zh_CN\">locale/bitcoin_zh_CN.qm</file>\n-        <file alias=\"zh_HK\">locale/bitcoin_zh_HK.qm</file>\n-        <file alias=\"zh_TW\">locale/bitcoin_zh_TW.qm</file>\n-    </qresource>\n </RCC>"
      },
      {
        "sha": "b70a10739704bc0490fe8ced80ae2364cc8e710d",
        "filename": "src/qt/bitcoin_locale.qrc",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/bitcoin_locale.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/bitcoin_locale.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin_locale.qrc?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE RCC><RCC version=\"1.0\">\n+    <qresource prefix=\"/translations\">\n+        <file alias=\"ach\">locale/bitcoin_ach.qm</file>\n+        <file alias=\"af_ZA\">locale/bitcoin_af_ZA.qm</file>\n+        <file alias=\"ar\">locale/bitcoin_ar.qm</file>\n+        <file alias=\"be_BY\">locale/bitcoin_be_BY.qm</file>\n+        <file alias=\"bg\">locale/bitcoin_bg.qm</file>\n+        <file alias=\"bs\">locale/bitcoin_bs.qm</file>\n+        <file alias=\"ca_ES\">locale/bitcoin_ca_ES.qm</file>\n+        <file alias=\"ca\">locale/bitcoin_ca.qm</file>\n+        <file alias=\"ca@valencia\">locale/bitcoin_ca@valencia.qm</file>\n+        <file alias=\"cmn\">locale/bitcoin_cmn.qm</file>\n+        <file alias=\"cs\">locale/bitcoin_cs.qm</file>\n+        <file alias=\"cy\">locale/bitcoin_cy.qm</file>\n+        <file alias=\"da\">locale/bitcoin_da.qm</file>\n+        <file alias=\"de\">locale/bitcoin_de.qm</file>\n+        <file alias=\"el_GR\">locale/bitcoin_el_GR.qm</file>\n+        <file alias=\"en\">locale/bitcoin_en.qm</file>\n+        <file alias=\"eo\">locale/bitcoin_eo.qm</file>\n+        <file alias=\"es_CL\">locale/bitcoin_es_CL.qm</file>\n+        <file alias=\"es_DO\">locale/bitcoin_es_DO.qm</file>\n+        <file alias=\"es_MX\">locale/bitcoin_es_MX.qm</file>\n+        <file alias=\"es\">locale/bitcoin_es.qm</file>\n+        <file alias=\"es_UY\">locale/bitcoin_es_UY.qm</file>\n+        <file alias=\"et\">locale/bitcoin_et.qm</file>\n+        <file alias=\"eu_ES\">locale/bitcoin_eu_ES.qm</file>\n+        <file alias=\"fa_IR\">locale/bitcoin_fa_IR.qm</file>\n+        <file alias=\"fa\">locale/bitcoin_fa.qm</file>\n+        <file alias=\"fi\">locale/bitcoin_fi.qm</file>\n+        <file alias=\"fr_CA\">locale/bitcoin_fr_CA.qm</file>\n+        <file alias=\"fr\">locale/bitcoin_fr.qm</file>\n+        <file alias=\"gl\">locale/bitcoin_gl.qm</file>\n+        <file alias=\"gu_IN\">locale/bitcoin_gu_IN.qm</file>\n+        <file alias=\"he\">locale/bitcoin_he.qm</file>\n+        <file alias=\"hi_IN\">locale/bitcoin_hi_IN.qm</file>\n+        <file alias=\"hr\">locale/bitcoin_hr.qm</file>\n+        <file alias=\"hu\">locale/bitcoin_hu.qm</file>\n+        <file alias=\"id_ID\">locale/bitcoin_id_ID.qm</file>\n+        <file alias=\"it\">locale/bitcoin_it.qm</file>\n+        <file alias=\"ja\">locale/bitcoin_ja.qm</file>\n+        <file alias=\"ka\">locale/bitcoin_ka.qm</file>\n+        <file alias=\"kk_KZ\">locale/bitcoin_kk_KZ.qm</file>\n+        <file alias=\"ko_KR\">locale/bitcoin_ko_KR.qm</file>\n+        <file alias=\"ky\">locale/bitcoin_ky.qm</file>\n+        <file alias=\"la\">locale/bitcoin_la.qm</file>\n+        <file alias=\"lt\">locale/bitcoin_lt.qm</file>\n+        <file alias=\"lv_LV\">locale/bitcoin_lv_LV.qm</file>\n+        <file alias=\"mn\">locale/bitcoin_mn.qm</file>\n+        <file alias=\"ms_MY\">locale/bitcoin_ms_MY.qm</file>\n+        <file alias=\"nb\">locale/bitcoin_nb.qm</file>\n+        <file alias=\"nl\">locale/bitcoin_nl.qm</file>\n+        <file alias=\"pam\">locale/bitcoin_pam.qm</file>\n+        <file alias=\"pl\">locale/bitcoin_pl.qm</file>\n+        <file alias=\"pt_BR\">locale/bitcoin_pt_BR.qm</file>\n+        <file alias=\"pt_PT\">locale/bitcoin_pt_PT.qm</file>\n+        <file alias=\"ro_RO\">locale/bitcoin_ro_RO.qm</file>\n+        <file alias=\"ru\">locale/bitcoin_ru.qm</file>\n+        <file alias=\"sah\">locale/bitcoin_sah.qm</file>\n+        <file alias=\"sk\">locale/bitcoin_sk.qm</file>\n+        <file alias=\"sl_SI\">locale/bitcoin_sl_SI.qm</file>\n+        <file alias=\"sq\">locale/bitcoin_sq.qm</file>\n+        <file alias=\"sr\">locale/bitcoin_sr.qm</file>\n+        <file alias=\"sv\">locale/bitcoin_sv.qm</file>\n+        <file alias=\"th_TH\">locale/bitcoin_th_TH.qm</file>\n+        <file alias=\"tr\">locale/bitcoin_tr.qm</file>\n+        <file alias=\"uk\">locale/bitcoin_uk.qm</file>\n+        <file alias=\"ur_PK\">locale/bitcoin_ur_PK.qm</file>\n+        <file alias=\"uz@Cyrl\">locale/bitcoin_uz@Cyrl.qm</file>\n+        <file alias=\"vi\">locale/bitcoin_vi.qm</file>\n+        <file alias=\"vi_VN\">locale/bitcoin_vi_VN.qm</file>\n+        <file alias=\"zh_CN\">locale/bitcoin_zh_CN.qm</file>\n+        <file alias=\"zh_HK\">locale/bitcoin_zh_HK.qm</file>\n+        <file alias=\"zh_TW\">locale/bitcoin_zh_TW.qm</file>\n+    </qresource>\n+</RCC>"
      },
      {
        "sha": "30f5ec8939b5dfd09b1d81e4848161ba06462e61",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 4,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -40,6 +40,7 @@\n #include <QMessageBox>\n #include <QMimeData>\n #include <QProgressBar>\n+#include <QProgressDialog>\n #include <QSettings>\n #include <QStackedWidget>\n #include <QStatusBar>\n@@ -188,7 +189,7 @@ BitcoinGUI::BitcoinGUI(bool fIsTestnet, QWidget *parent) :\n \n     connect(openRPCConsoleAction, SIGNAL(triggered()), rpcConsole, SLOT(show()));\n \n-    // prevents an oben debug window from becoming stuck/unusable on client shutdown\n+    // prevents an open debug window from becoming stuck/unusable on client shutdown\n     connect(quitAction, SIGNAL(triggered()), rpcConsole, SLOT(hide()));\n \n     // Install event filter to be able to catch status tip events (QEvent::StatusTip)\n@@ -409,6 +410,9 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         // Receive and report messages from client model\n         connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n \n+        // Show progress dialog\n+        connect(clientModel, SIGNAL(showProgress(QString,int)), this, SLOT(showProgress(QString,int)));\n+\n         rpcConsole->setClientModel(clientModel);\n #ifdef ENABLE_WALLET\n         if(walletFrame)\n@@ -545,14 +549,13 @@ void BitcoinGUI::aboutClicked()\n     if(!clientModel)\n         return;\n \n-    AboutDialog dlg(this);\n-    dlg.setModel(clientModel);\n+    HelpMessageDialog dlg(this, true);\n     dlg.exec();\n }\n \n void BitcoinGUI::showHelpMessageClicked()\n {\n-    HelpMessageDialog *help = new HelpMessageDialog(this);\n+    HelpMessageDialog *help = new HelpMessageDialog(this, false);\n     help->setAttribute(Qt::WA_DeleteOnClose);\n     help->show();\n }\n@@ -949,6 +952,29 @@ void BitcoinGUI::detectShutdown()\n     }\n }\n \n+void BitcoinGUI::showProgress(const QString &title, int nProgress)\n+{\n+    if (nProgress == 0)\n+    {\n+        progressDialog = new QProgressDialog(title, \"\", 0, 100);\n+        progressDialog->setWindowModality(Qt::ApplicationModal);\n+        progressDialog->setMinimumDuration(0);\n+        progressDialog->setCancelButton(0);\n+        progressDialog->setAutoClose(false);\n+        progressDialog->setValue(0);\n+    }\n+    else if (nProgress == 100)\n+    {\n+        if (progressDialog)\n+        {\n+            progressDialog->close();\n+            progressDialog->deleteLater();\n+        }\n+    }\n+    else if (progressDialog)\n+        progressDialog->setValue(nProgress);\n+}\n+\n static bool ThreadSafeMessageBox(BitcoinGUI *gui, const std::string& message, const std::string& caption, unsigned int style)\n {\n     bool modal = (style & CClientUIInterface::MODAL);"
      },
      {
        "sha": "275fa35f3942212f24e049b0ef5d5089f5c058f0",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -26,6 +26,7 @@ QT_BEGIN_NAMESPACE\n class QAction;\n class QLabel;\n class QProgressBar;\n+class QProgressDialog;\n QT_END_NAMESPACE\n \n /**\n@@ -73,6 +74,7 @@ class BitcoinGUI : public QMainWindow\n     QLabel *labelBlocksIcon;\n     QLabel *progressBarLabel;\n     QProgressBar *progressBar;\n+    QProgressDialog *progressDialog;\n \n     QMenuBar *appMenuBar;\n     QAction *overviewAction;\n@@ -191,6 +193,9 @@ private slots:\n \n     /** called by a timer to check if fRequestShutdown has been set **/\n     void detectShutdown();\n+\n+    /** Show progress dialog e.g. for verifychain */\n+    void showProgress(const QString &title, int nProgress);\n };\n \n #endif // BITCOINGUI_H"
      },
      {
        "sha": "9c9565be67824a6e41306e580e38eb9019d3983f",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 9,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -5,6 +5,7 @@\n #include \"clientmodel.h\"\n \n #include \"guiconstants.h\"\n+#include \"peertablemodel.h\"\n \n #include \"alert.h\"\n #include \"chainparams.h\"\n@@ -22,11 +23,14 @@\n static const int64_t nClientStartupTime = GetTime();\n \n ClientModel::ClientModel(OptionsModel *optionsModel, QObject *parent) :\n-    QObject(parent), optionsModel(optionsModel),\n+    QObject(parent),\n+    optionsModel(optionsModel),\n+    peerTableModel(0),\n     cachedNumBlocks(0),\n     cachedReindexing(0), cachedImporting(0),\n     numBlocksAtStartup(-1), pollTimer(0)\n {\n+    peerTableModel = new PeerTableModel(this);\n     pollTimer = new QTimer(this);\n     connect(pollTimer, SIGNAL(timeout()), this, SLOT(updateTimer()));\n     pollTimer->start(MODEL_UPDATE_DELAY);\n@@ -138,14 +142,6 @@ void ClientModel::updateAlert(const QString &hash, int status)\n     emit alertsChanged(getStatusBarWarnings());\n }\n \n-QString ClientModel::getNetworkName() const\n-{\n-    QString netname(QString::fromStdString(Params().DataDir()));\n-    if(netname.isEmpty())\n-        netname = \"main\";\n-    return netname;\n-}\n-\n bool ClientModel::inInitialBlockDownload() const\n {\n     return IsInitialBlockDownload();\n@@ -173,6 +169,11 @@ OptionsModel *ClientModel::getOptionsModel()\n     return optionsModel;\n }\n \n+PeerTableModel *ClientModel::getPeerTableModel()\n+{\n+    return peerTableModel;\n+}\n+\n QString ClientModel::formatFullVersion() const\n {\n     return QString::fromStdString(FormatFullVersion());\n@@ -199,6 +200,14 @@ QString ClientModel::formatClientStartupTime() const\n }\n \n // Handlers for core signals\n+static void ShowProgress(ClientModel *clientmodel, const std::string &title, int nProgress)\n+{\n+    // emits signal \"showProgress\"\n+    QMetaObject::invokeMethod(clientmodel, \"showProgress\", Qt::QueuedConnection,\n+                              Q_ARG(QString, QString::fromStdString(title)),\n+                              Q_ARG(int, nProgress));\n+}\n+\n static void NotifyBlocksChanged(ClientModel *clientmodel)\n {\n     // This notification is too frequent. Don't trigger a signal.\n@@ -223,6 +232,7 @@ static void NotifyAlertChanged(ClientModel *clientmodel, const uint256 &hash, Ch\n void ClientModel::subscribeToCoreSignals()\n {\n     // Connect signals to client\n+    uiInterface.ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyBlocksChanged.connect(boost::bind(NotifyBlocksChanged, this));\n     uiInterface.NotifyNumConnectionsChanged.connect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.connect(boost::bind(NotifyAlertChanged, this, _1, _2));\n@@ -231,6 +241,7 @@ void ClientModel::subscribeToCoreSignals()\n void ClientModel::unsubscribeFromCoreSignals()\n {\n     // Disconnect signals from client\n+    uiInterface.ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyBlocksChanged.disconnect(boost::bind(NotifyBlocksChanged, this));\n     uiInterface.NotifyNumConnectionsChanged.disconnect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.disconnect(boost::bind(NotifyAlertChanged, this, _1, _2));"
      },
      {
        "sha": "c7bd60bd4131c6539485375fed51bbc2d25827f4",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -9,6 +9,7 @@\n \n class AddressTableModel;\n class OptionsModel;\n+class PeerTableModel;\n class TransactionTableModel;\n \n class CWallet;\n@@ -42,6 +43,7 @@ class ClientModel : public QObject\n     ~ClientModel();\n \n     OptionsModel *getOptionsModel();\n+    PeerTableModel *getPeerTableModel();\n \n     //! Return number of connections, default is in- and outbound (total)\n     int getNumConnections(unsigned int flags = CONNECTIONS_ALL) const;\n@@ -54,8 +56,6 @@ class ClientModel : public QObject\n     double getVerificationProgress() const;\n     QDateTime getLastBlockDate() const;\n \n-    //! Return network (main, testnet3, regtest)\n-    QString getNetworkName() const;\n     //! Return true if core is doing initial block download\n     bool inInitialBlockDownload() const;\n     //! Return true if core is importing blocks\n@@ -71,6 +71,7 @@ class ClientModel : public QObject\n \n private:\n     OptionsModel *optionsModel;\n+    PeerTableModel *peerTableModel;\n \n     int cachedNumBlocks;\n     bool cachedReindexing;\n@@ -92,6 +93,9 @@ class ClientModel : public QObject\n     //! Fired when a message should be reported to the user\n     void message(const QString &title, const QString &message, unsigned int style);\n \n+    // Show progress dialog e.g. for verifychain\n+    void showProgress(const QString &title, int nProgress);\n+\n public slots:\n     void updateTimer();\n     void updateNumConnections(int numConnections);"
      },
      {
        "sha": "42d6da7d371a541302effba2ff2ccc4830493458",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 38,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -71,7 +71,7 @@ CoinControlDialog::CoinControlDialog(QWidget *parent) :\n     QAction *clipboardAfterFeeAction = new QAction(tr(\"Copy after fee\"), this);\n     QAction *clipboardBytesAction = new QAction(tr(\"Copy bytes\"), this);\n     QAction *clipboardPriorityAction = new QAction(tr(\"Copy priority\"), this);\n-    QAction *clipboardLowOutputAction = new QAction(tr(\"Copy low output\"), this);\n+    QAction *clipboardLowOutputAction = new QAction(tr(\"Copy dust\"), this);\n     QAction *clipboardChangeAction = new QAction(tr(\"Copy change\"), this);\n \n     connect(clipboardQuantityAction, SIGNAL(triggered()), this, SLOT(clipboardQuantity()));\n@@ -309,7 +309,7 @@ void CoinControlDialog::clipboardPriority()\n     GUIUtil::setClipboard(ui->labelCoinControlPriority->text());\n }\n \n-// copy label \"Low output\" to clipboard\n+// copy label \"Dust\" to clipboard\n void CoinControlDialog::clipboardLowOutput()\n {\n     GUIUtil::setClipboard(ui->labelCoinControlLowOutput->text());\n@@ -439,7 +439,6 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n     // nPayAmount\n     qint64 nPayAmount = 0;\n-    bool fLowOutput = false;\n     bool fDust = false;\n     CTransaction txDummy;\n     foreach(const qint64 &amount, CoinControlDialog::payAmounts)\n@@ -448,12 +447,9 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n         if (amount > 0)\n         {\n-            if (amount < CENT)\n-                fLowOutput = true;\n-\n             CTxOut txout(amount, (CScript)vector<unsigned char>(24, 0));\n             txDummy.vout.push_back(txout);\n-            if (txout.IsDust(CTransaction::nMinRelayTxFee))\n+            if (txout.IsDust(CTransaction::minRelayTxFee))\n                fDust = true;\n         }\n     }\n@@ -525,7 +521,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         sPriorityLabel = CoinControlDialog::getPriorityLabel(dPriority);\n \n         // Fee\n-        int64_t nFee = nTransactionFee * (1 + (int64_t)nBytes / 1000);\n+        int64_t nFee = payTxFee.GetFee(nBytes);\n \n         // Min Fee\n         int64_t nMinFee = GetMinFee(txDummy, nBytes, AllowFree(dPriority), GMF_SEND);\n@@ -536,26 +532,11 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         {\n             nChange = nAmount - nPayFee - nPayAmount;\n \n-            // if sub-cent change is required, the fee must be raised to at least CTransaction::nMinTxFee\n-            if (nPayFee < CTransaction::nMinTxFee && nChange > 0 && nChange < CENT)\n-            {\n-                if (nChange < CTransaction::nMinTxFee) // change < 0.0001 => simply move all change to fees\n-                {\n-                    nPayFee += nChange;\n-                    nChange = 0;\n-                }\n-                else\n-                {\n-                    nChange = nChange + nPayFee - CTransaction::nMinTxFee;\n-                    nPayFee = CTransaction::nMinTxFee;\n-                }\n-            }\n-\n             // Never create dust outputs; if we would, just add the dust to the fee.\n             if (nChange > 0 && nChange < CENT)\n             {\n                 CTxOut txout(nChange, (CScript)vector<unsigned char>(24, 0));\n-                if (txout.IsDust(CTransaction::nMinRelayTxFee))\n+                if (txout.IsDust(CTransaction::minRelayTxFee))\n                 {\n                     nPayFee += nChange;\n                     nChange = 0;\n@@ -586,7 +567,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     QLabel *l7 = dialog->findChild<QLabel *>(\"labelCoinControlLowOutput\");\n     QLabel *l8 = dialog->findChild<QLabel *>(\"labelCoinControlChange\");\n \n-    // enable/disable \"low output\" and \"change\"\n+    // enable/disable \"dust\" and \"change\"\n     dialog->findChild<QLabel *>(\"labelCoinControlLowOutputText\")->setEnabled(nPayAmount > 0);\n     dialog->findChild<QLabel *>(\"labelCoinControlLowOutput\")    ->setEnabled(nPayAmount > 0);\n     dialog->findChild<QLabel *>(\"labelCoinControlChangeText\")   ->setEnabled(nPayAmount > 0);\n@@ -599,39 +580,31 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     l4->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nAfterFee));      // After Fee\n     l5->setText(((nBytes > 0) ? \"~\" : \"\") + QString::number(nBytes));        // Bytes\n     l6->setText(sPriorityLabel);                                             // Priority\n-    l7->setText((fLowOutput ? (fDust ? tr(\"Dust\") : tr(\"yes\")) : tr(\"no\"))); // Low Output / Dust\n+    l7->setText(fDust ? tr(\"yes\") : tr(\"no\"));                               // Dust\n     l8->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nChange));        // Change\n \n     // turn labels \"red\"\n     l5->setStyleSheet((nBytes >= 1000) ? \"color:red;\" : \"\");                            // Bytes >= 1000\n     l6->setStyleSheet((dPriority > 0 && !AllowFree(dPriority)) ? \"color:red;\" : \"\");    // Priority < \"medium\"\n-    l7->setStyleSheet((fLowOutput) ? \"color:red;\" : \"\");                                // Low Output = \"yes\"\n-    l8->setStyleSheet((nChange > 0 && nChange < CENT) ? \"color:red;\" : \"\");             // Change < 0.01BTC\n+    l7->setStyleSheet((fDust) ? \"color:red;\" : \"\");                                     // Dust = \"yes\"\n \n     // tool tips\n     QString toolTip1 = tr(\"This label turns red, if the transaction size is greater than 1000 bytes.\") + \"<br /><br />\";\n-    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)) + \"<br /><br />\";\n+    toolTip1 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::minTxFee.GetFeePerK())) + \"<br /><br />\";\n     toolTip1 += tr(\"Can vary +/- 1 byte per input.\");\n \n     QString toolTip2 = tr(\"Transactions with higher priority are more likely to get included into a block.\") + \"<br /><br />\";\n     toolTip2 += tr(\"This label turns red, if the priority is smaller than \\\"medium\\\".\") + \"<br /><br />\";\n-    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee));\n-\n-    QString toolTip3 = tr(\"This label turns red, if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)) + \"<br /><br />\";\n-    toolTip3 += tr(\"This means a fee of at least %1 is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee)) + \"<br /><br />\";\n-    toolTip3 += tr(\"Amounts below 0.546 times the minimum relay fee are shown as dust.\");\n+    toolTip2 += tr(\"This means a fee of at least %1 per kB is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::minTxFee.GetFeePerK()));\n \n-    QString toolTip4 = tr(\"This label turns red, if the change is smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CENT)) + \"<br /><br />\";\n-    toolTip4 += tr(\"This means a fee of at least %1 is required.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::nMinTxFee));\n+    QString toolTip3 = tr(\"This label turns red, if any recipient receives an amount smaller than %1.\").arg(BitcoinUnits::formatWithUnit(nDisplayUnit, CTransaction::minRelayTxFee.GetFee(546)));\n \n     l5->setToolTip(toolTip1);\n     l6->setToolTip(toolTip2);\n     l7->setToolTip(toolTip3);\n-    l8->setToolTip(toolTip4);\n     dialog->findChild<QLabel *>(\"labelCoinControlBytesText\")    ->setToolTip(l5->toolTip());\n     dialog->findChild<QLabel *>(\"labelCoinControlPriorityText\") ->setToolTip(l6->toolTip());\n     dialog->findChild<QLabel *>(\"labelCoinControlLowOutputText\")->setToolTip(l7->toolTip());\n-    dialog->findChild<QLabel *>(\"labelCoinControlChangeText\")   ->setToolTip(l8->toolTip());\n \n     // Insufficient funds\n     QLabel *label = dialog->findChild<QLabel *>(\"labelCoinControlInsuffFunds\");"
      },
      {
        "sha": "3ab4675bf3ee3ba3556ef11bb1d37cff346d0b11",
        "filename": "src/qt/forms/aboutdialog.ui",
        "status": "removed",
        "additions": 0,
        "deletions": 189,
        "changes": 189,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a48355dc44e8b86c2fc9f8b7973ac9e81a295be7/src/qt/forms/aboutdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a48355dc44e8b86c2fc9f8b7973ac9e81a295be7/src/qt/forms/aboutdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/aboutdialog.ui?ref=a48355dc44e8b86c2fc9f8b7973ac9e81a295be7",
        "patch": "@@ -1,189 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<ui version=\"4.0\">\n- <class>AboutDialog</class>\n- <widget class=\"QDialog\" name=\"AboutDialog\">\n-  <property name=\"geometry\">\n-   <rect>\n-    <x>0</x>\n-    <y>0</y>\n-    <width>593</width>\n-    <height>319</height>\n-   </rect>\n-  </property>\n-  <property name=\"windowTitle\">\n-   <string>About Bitcoin Core</string>\n-  </property>\n-  <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n-   <item>\n-    <widget class=\"QLabel\" name=\"label_4\">\n-     <property name=\"sizePolicy\">\n-      <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Ignored\">\n-       <horstretch>0</horstretch>\n-       <verstretch>0</verstretch>\n-      </sizepolicy>\n-     </property>\n-     <property name=\"pixmap\">\n-      <pixmap resource=\"../bitcoin.qrc\">:/images/about</pixmap>\n-     </property>\n-    </widget>\n-   </item>\n-   <item>\n-    <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n-     <item>\n-      <spacer name=\"verticalSpacer_2\">\n-       <property name=\"orientation\">\n-        <enum>Qt::Vertical</enum>\n-       </property>\n-       <property name=\"sizeHint\" stdset=\"0\">\n-        <size>\n-         <width>20</width>\n-         <height>40</height>\n-        </size>\n-       </property>\n-      </spacer>\n-     </item>\n-     <item>\n-      <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n-       <item>\n-        <widget class=\"QLabel\" name=\"label\">\n-         <property name=\"cursor\">\n-          <cursorShape>IBeamCursor</cursorShape>\n-         </property>\n-         <property name=\"text\">\n-          <string>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</string>\n-         </property>\n-         <property name=\"textInteractionFlags\">\n-          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-         </property>\n-        </widget>\n-       </item>\n-       <item>\n-        <widget class=\"QLabel\" name=\"versionLabel\">\n-         <property name=\"cursor\">\n-          <cursorShape>IBeamCursor</cursorShape>\n-         </property>\n-         <property name=\"text\">\n-          <string notr=\"true\">0.3.666-beta</string>\n-         </property>\n-         <property name=\"textInteractionFlags\">\n-          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-         </property>\n-        </widget>\n-       </item>\n-       <item>\n-        <spacer name=\"horizontalSpacer\">\n-         <property name=\"orientation\">\n-          <enum>Qt::Horizontal</enum>\n-         </property>\n-         <property name=\"sizeHint\" stdset=\"0\">\n-          <size>\n-           <width>40</width>\n-           <height>20</height>\n-          </size>\n-         </property>\n-        </spacer>\n-       </item>\n-      </layout>\n-     </item>\n-     <item>\n-      <widget class=\"QLabel\" name=\"copyrightLabel\">\n-       <property name=\"cursor\">\n-        <cursorShape>IBeamCursor</cursorShape>\n-       </property>\n-       <property name=\"text\">\n-        <string notr=\"true\">Copyright &amp;copy; 2009-YYYY The Bitcoin Core developers</string>\n-       </property>\n-       <property name=\"textFormat\">\n-        <enum>Qt::RichText</enum>\n-       </property>\n-       <property name=\"textInteractionFlags\">\n-        <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-       </property>\n-      </widget>\n-     </item>\n-     <item>\n-      <widget class=\"QLabel\" name=\"label_2\">\n-       <property name=\"cursor\">\n-        <cursorShape>IBeamCursor</cursorShape>\n-       </property>\n-       <property name=\"text\">\n-        <string>\n-This is experimental software.\n-\n-Distributed under the MIT/X11 software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (http://www.openssl.org/) and cryptographic software written by Eric Young (eay@cryptsoft.com) and UPnP software written by Thomas Bernard.</string>\n-       </property>\n-       <property name=\"wordWrap\">\n-        <bool>true</bool>\n-       </property>\n-       <property name=\"textInteractionFlags\">\n-        <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-       </property>\n-      </widget>\n-     </item>\n-     <item>\n-      <spacer name=\"verticalSpacer\">\n-       <property name=\"orientation\">\n-        <enum>Qt::Vertical</enum>\n-       </property>\n-       <property name=\"sizeHint\" stdset=\"0\">\n-        <size>\n-         <width>20</width>\n-         <height>40</height>\n-        </size>\n-       </property>\n-      </spacer>\n-     </item>\n-     <item>\n-      <widget class=\"QDialogButtonBox\" name=\"buttonBox\">\n-       <property name=\"orientation\">\n-        <enum>Qt::Horizontal</enum>\n-       </property>\n-       <property name=\"standardButtons\">\n-        <set>QDialogButtonBox::Ok</set>\n-       </property>\n-      </widget>\n-     </item>\n-    </layout>\n-   </item>\n-  </layout>\n- </widget>\n- <resources>\n-  <include location=\"../bitcoin.qrc\"/>\n- </resources>\n- <connections>\n-  <connection>\n-   <sender>buttonBox</sender>\n-   <signal>accepted()</signal>\n-   <receiver>AboutDialog</receiver>\n-   <slot>accept()</slot>\n-   <hints>\n-    <hint type=\"sourcelabel\">\n-     <x>20</x>\n-     <y>20</y>\n-    </hint>\n-    <hint type=\"destinationlabel\">\n-     <x>20</x>\n-     <y>20</y>\n-    </hint>\n-   </hints>\n-  </connection>\n-  <connection>\n-   <sender>buttonBox</sender>\n-   <signal>rejected()</signal>\n-   <receiver>AboutDialog</receiver>\n-   <slot>reject()</slot>\n-   <hints>\n-    <hint type=\"sourcelabel\">\n-     <x>20</x>\n-     <y>20</y>\n-    </hint>\n-    <hint type=\"destinationlabel\">\n-     <x>20</x>\n-     <y>20</y>\n-    </hint>\n-   </hints>\n-  </connection>\n- </connections>\n-</ui>"
      },
      {
        "sha": "67ea3a9d8c5378ed44017b4180de2bf653228ce1",
        "filename": "src/qt/forms/coincontroldialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/forms/coincontroldialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/forms/coincontroldialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/coincontroldialog.ui?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -225,7 +225,7 @@\n           </font>\n          </property>\n          <property name=\"text\">\n-          <string>Low Output:</string>\n+          <string>Dust:</string>\n          </property>\n         </widget>\n        </item>"
      },
      {
        "sha": "d8ab27c238b1db73baa63d1c326306a97c87c93a",
        "filename": "src/qt/forms/helpmessagedialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/forms/helpmessagedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/forms/helpmessagedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/helpmessagedialog.ui?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -16,7 +16,7 @@\n    </font>\n   </property>\n   <property name=\"windowTitle\">\n-   <string>Bitcoin Core - Command-line options</string>\n+   <string notr=\"true\">Bitcoin Core - Command-line options</string>\n   </property>\n   <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n    <item>\n@@ -54,11 +54,6 @@\n         <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n          <item>\n           <widget class=\"QLabel\" name=\"helpMessageLabel\">\n-           <property name=\"font\">\n-            <font>\n-             <family>Terminal</family>\n-            </font>\n-           </property>\n            <property name=\"cursor\">\n             <cursorShape>IBeamCursor</cursorShape>\n            </property>"
      },
      {
        "sha": "0c5b8895aae1677678239864ea7f5ea3c55753bb",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -242,6 +242,16 @@\n          </property>\n         </widget>\n        </item>\n+       <item>\n+        <widget class=\"QCheckBox\" name=\"allowIncoming\">\n+         <property name=\"toolTip\">\n+          <string>Accept connections from outside</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Allow incoming connections</string>\n+         </property>\n+        </widget>\n+       </item>\n        <item>\n         <widget class=\"QCheckBox\" name=\"connectSocks\">\n          <property name=\"toolTip\">"
      },
      {
        "sha": "1e574e852716483a5ca15dbf268a8002de08550e",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 318,
        "deletions": 17,
        "changes": 335,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -113,13 +113,39 @@\n         </widget>\n        </item>\n        <item row=\"4\" column=\"0\">\n+        <widget class=\"QLabel\" name=\"label_berkeleyDBVersion\">\n+         <property name=\"text\">\n+          <string>Using BerkeleyDB version</string>\n+         </property>\n+         <property name=\"indent\">\n+          <number>10</number>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"4\" column=\"1\">\n+        <widget class=\"QLabel\" name=\"berkeleyDBVersion\">\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n+         </property>\n+         <property name=\"text\">\n+          <string>N/A</string>\n+         </property>\n+         <property name=\"textFormat\">\n+          <enum>Qt::PlainText</enum>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"5\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_12\">\n          <property name=\"text\">\n           <string>Build date</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"4\" column=\"1\">\n+       <item row=\"5\" column=\"1\">\n         <widget class=\"QLabel\" name=\"buildDate\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -135,14 +161,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"5\" column=\"0\">\n+       <item row=\"6\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_13\">\n          <property name=\"text\">\n           <string>Startup time</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"5\" column=\"1\">\n+       <item row=\"6\" column=\"1\">\n         <widget class=\"QLabel\" name=\"startupTime\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -158,7 +184,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"6\" column=\"0\">\n+       <item row=\"7\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_11\">\n          <property name=\"font\">\n           <font>\n@@ -171,14 +197,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"7\" column=\"0\">\n+       <item row=\"8\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_8\">\n          <property name=\"text\">\n           <string>Name</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"7\" column=\"1\">\n+       <item row=\"8\" column=\"1\">\n         <widget class=\"QLabel\" name=\"networkName\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -194,14 +220,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"8\" column=\"0\">\n+       <item row=\"9\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_7\">\n          <property name=\"text\">\n           <string>Number of connections</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"8\" column=\"1\">\n+       <item row=\"9\" column=\"1\">\n         <widget class=\"QLabel\" name=\"numberOfConnections\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -217,7 +243,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"9\" column=\"0\">\n+       <item row=\"10\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_10\">\n          <property name=\"font\">\n           <font>\n@@ -230,14 +256,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"10\" column=\"0\">\n+       <item row=\"11\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_3\">\n          <property name=\"text\">\n           <string>Current number of blocks</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"10\" column=\"1\">\n+       <item row=\"11\" column=\"1\">\n         <widget class=\"QLabel\" name=\"numberOfBlocks\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -253,14 +279,14 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"11\" column=\"0\">\n+       <item row=\"12\" column=\"0\">\n         <widget class=\"QLabel\" name=\"label_2\">\n          <property name=\"text\">\n           <string>Last block time</string>\n          </property>\n         </widget>\n        </item>\n-       <item row=\"11\" column=\"1\">\n+       <item row=\"12\" column=\"1\">\n         <widget class=\"QLabel\" name=\"lastBlockTime\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n@@ -276,7 +302,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"12\" column=\"0\">\n+       <item row=\"13\" column=\"0\">\n         <spacer name=\"verticalSpacer_2\">\n          <property name=\"orientation\">\n           <enum>Qt::Vertical</enum>\n@@ -289,7 +315,7 @@\n          </property>\n         </spacer>\n        </item>\n-       <item row=\"13\" column=\"0\">\n+       <item row=\"14\" column=\"0\">\n         <widget class=\"QLabel\" name=\"labelDebugLogfile\">\n          <property name=\"font\">\n           <font>\n@@ -302,7 +328,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"14\" column=\"0\">\n+       <item row=\"15\" column=\"0\">\n         <widget class=\"QPushButton\" name=\"openDebugLogfileButton\">\n          <property name=\"toolTip\">\n           <string>Open the Bitcoin debug log file from the current data directory. This can take a few seconds for large log files.</string>\n@@ -315,7 +341,7 @@\n          </property>\n         </widget>\n        </item>\n-       <item row=\"15\" column=\"0\">\n+       <item row=\"16\" column=\"0\">\n         <spacer name=\"verticalSpacer\">\n          <property name=\"orientation\">\n           <enum>Qt::Vertical</enum>\n@@ -652,6 +678,281 @@\n        </item>\n       </layout>\n      </widget>\n+     <widget class=\"QWidget\" name=\"tab_peers\">\n+      <attribute name=\"title\">\n+       <string>&amp;Peers</string>\n+      </attribute>\n+      <layout class=\"QGridLayout\" name=\"gridLayout_2\">\n+       <item row=\"0\" column=\"1\">\n+        <widget class=\"QLabel\" name=\"peerHeading\">\n+         <property name=\"sizePolicy\">\n+          <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Minimum\">\n+           <horstretch>0</horstretch>\n+           <verstretch>0</verstretch>\n+          </sizepolicy>\n+         </property>\n+         <property name=\"text\">\n+          <string>Select a peer to view detailed information.</string>\n+         </property>\n+         <property name=\"margin\">\n+          <number>3</number>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"0\" column=\"0\" rowspan=\"2\">\n+        <widget class=\"QTableView\" name=\"peerWidget\">\n+         <property name=\"sizePolicy\">\n+          <sizepolicy hsizetype=\"Expanding\" vsizetype=\"Expanding\">\n+           <horstretch>0</horstretch>\n+           <verstretch>0</verstretch>\n+          </sizepolicy>\n+         </property>\n+         <property name=\"horizontalScrollBarPolicy\">\n+          <enum>Qt::ScrollBarAlwaysOff</enum>\n+         </property>\n+         <property name=\"editTriggers\">\n+          <set>QAbstractItemView::AnyKeyPressed|QAbstractItemView::DoubleClicked|QAbstractItemView::EditKeyPressed</set>\n+         </property>\n+         <property name=\"sortingEnabled\">\n+          <bool>true</bool>\n+         </property>\n+        </widget>\n+       </item>\n+       <item row=\"1\" column=\"1\">\n+        <widget class=\"QWidget\" name=\"detailWidget\" native=\"true\">\n+         <property name=\"sizePolicy\">\n+          <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Expanding\">\n+           <horstretch>0</horstretch>\n+           <verstretch>0</verstretch>\n+          </sizepolicy>\n+         </property>\n+         <layout class=\"QGridLayout\" name=\"gridLayout_3\">\n+          <property name=\"leftMargin\">\n+           <number>3</number>\n+          </property>\n+          <item row=\"12\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_21\">\n+            <property name=\"text\">\n+             <string>Version:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"11\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerPingTime\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"5\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_19\">\n+            <property name=\"text\">\n+             <string>Last Receive:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"14\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_28\">\n+            <property name=\"text\">\n+             <string>User Agent:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"12\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerVersion\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"8\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerConnTime\">\n+            <property name=\"minimumSize\">\n+             <size>\n+              <width>160</width>\n+              <height>0</height>\n+             </size>\n+            </property>\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"11\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_26\">\n+            <property name=\"text\">\n+             <string>Ping Time:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"5\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerLastRecv\">\n+            <property name=\"sizePolicy\">\n+             <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Preferred\">\n+              <horstretch>0</horstretch>\n+              <verstretch>0</verstretch>\n+             </sizepolicy>\n+            </property>\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"8\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_22\">\n+            <property name=\"text\">\n+             <string>Connection Time:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"6\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerBytesSent\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"14\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerSubversion\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"15\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_29\">\n+            <property name=\"text\">\n+             <string>Starting Height:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"7\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerBytesRecv\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"6\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_18\">\n+            <property name=\"text\">\n+             <string>Bytes Sent:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"7\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_20\">\n+            <property name=\"text\">\n+             <string>Bytes Received:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"15\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerHeight\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"16\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_24\">\n+            <property name=\"text\">\n+             <string>Ban Score:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"16\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerBanScore\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"17\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_23\">\n+            <property name=\"text\">\n+             <string>Direction:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"17\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerDirection\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"19\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_25\">\n+            <property name=\"text\">\n+             <string>Sync Node:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"19\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerSyncNode\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"3\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_15\">\n+            <property name=\"text\">\n+             <string>Last Send:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"2\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_4\">\n+            <property name=\"text\">\n+             <string>Services:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"1\" column=\"0\">\n+           <widget class=\"QLabel\" name=\"label_27\">\n+            <property name=\"text\">\n+             <string>IP Address/port:</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"3\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerLastSend\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"2\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerServices\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"1\" column=\"1\">\n+           <widget class=\"QLabel\" name=\"peerAddr\">\n+            <property name=\"text\">\n+             <string>N/A</string>\n+            </property>\n+           </widget>\n+          </item>\n+          <item row=\"20\" column=\"0\">\n+           <widget class=\"QWidget\" name=\"widget\" native=\"true\">\n+            <property name=\"sizePolicy\">\n+             <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Expanding\">\n+              <horstretch>0</horstretch>\n+              <verstretch>0</verstretch>\n+             </sizepolicy>\n+            </property>\n+           </widget>\n+          </item>\n+         </layout>\n+        </widget>\n+       </item>\n+      </layout>\n+     </widget>\n     </widget>\n    </item>\n   </layout>"
      },
      {
        "sha": "a631b04670ed9ef12b8a30f3224a17d7db5b9df4",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -417,7 +417,7 @@\n                   </font>\n                  </property>\n                  <property name=\"text\">\n-                  <string>Low Output:</string>\n+                  <string>Dust:</string>\n                  </property>\n                 </widget>\n                </item>"
      },
      {
        "sha": "4fe98251d98ef448e0ac5a5e90b51acd64de7ff7",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 2,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -11,6 +11,7 @@\n \n #include \"core.h\"\n #include \"init.h\"\n+#include \"protocol.h\"\n #include \"util.h\"\n \n #ifdef WIN32\n@@ -76,7 +77,11 @@ QString dateTimeStr(qint64 nTime)\n QFont bitcoinAddressFont()\n {\n     QFont font(\"Monospace\");\n+#if QT_VERSION >= 0x040800\n+    font.setStyleHint(QFont::Monospace);\n+#else\n     font.setStyleHint(QFont::TypeWriter);\n+#endif\n     return font;\n }\n \n@@ -205,7 +210,7 @@ bool isDust(const QString& address, qint64 amount)\n     CTxDestination dest = CBitcoinAddress(address.toStdString()).Get();\n     CScript script; script.SetDestination(dest);\n     CTxOut txOut(amount, script);\n-    return txOut.IsDust(CTransaction::nMinRelayTxFee);\n+    return txOut.IsDust(CTransaction::minRelayTxFee);\n }\n \n QString HtmlEscape(const QString& str, bool fMultiLine)\n@@ -570,7 +575,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n     return true;\n }\n \n-#elif defined(LINUX)\n+#elif defined(Q_OS_LINUX)\n \n // Follow the Desktop Application Autostart Spec:\n //  http://standards.freedesktop.org/autostart-spec/autostart-spec-latest.html\n@@ -750,4 +755,50 @@ QString boostPathToQString(const boost::filesystem::path &path)\n }\n #endif\n \n+QString formatDurationStr(int secs)\n+{\n+    QStringList strList;\n+    int days = secs / 86400;\n+    int hours = (secs % 86400) / 3600;\n+    int mins = (secs % 3600) / 60;\n+    int seconds = secs % 60;\n+\n+    if (days)\n+        strList.append(QString(QObject::tr(\"%1 d\")).arg(days));\n+    if (hours)\n+        strList.append(QString(QObject::tr(\"%1 h\")).arg(hours));\n+    if (mins)\n+        strList.append(QString(QObject::tr(\"%1 m\")).arg(mins));\n+    if (seconds || (!days && !hours && !mins))\n+        strList.append(QString(QObject::tr(\"%1 s\")).arg(seconds));\n+\n+    return strList.join(\" \");\n+}\n+\n+QString formatServicesStr(uint64_t mask)\n+{\n+    QStringList strList;\n+\n+    // Just scan the last 8 bits for now.\n+    for (int i = 0; i < 8; i++) {\n+        uint64_t check = 1 << i;\n+        if (mask & check)\n+        {\n+            switch (check)\n+            {\n+            case NODE_NETWORK:\n+                strList.append(QObject::tr(\"NETWORK\"));\n+                break;\n+            default:\n+                strList.append(QString(\"%1[%2]\").arg(QObject::tr(\"UNKNOWN\")).arg(check));\n+            }\n+        }\n+    }\n+\n+    if (strList.size())\n+        return strList.join(\" & \");\n+    else\n+        return QObject::tr(\"None\");\n+}\n+\n } // namespace GUIUtil"
      },
      {
        "sha": "45c78b4e1475e2e91a90f9755c6189780c68b8e5",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -173,6 +173,11 @@ namespace GUIUtil\n     /* Convert OS specific boost path to QString through UTF-8 */\n     QString boostPathToQString(const boost::filesystem::path &path);\n \n+    /* Convert seconds into a QString with days, hours, mins, secs */\n+    QString formatDurationStr(int secs);\n+\n+    /* Format CNodeStats.nServices bitmask into a user-readable string */\n+    QString formatServicesStr(uint64_t mask);\n } // namespace GUIUtil\n \n #endif // GUIUTIL_H"
      },
      {
        "sha": "a0514035fd70f2a15ef64c8007a087176a0bc62b",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 366,
        "deletions": 366,
        "changes": 732,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=49675884c4c5956da90ec2b65ea9234060ddd635"
      },
      {
        "sha": "e957a0088eba861878d4a77c8b89533ad8ef02d1",
        "filename": "src/qt/locale/bitcoin_el_GR.ts",
        "status": "modified",
        "additions": 74,
        "deletions": 73,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_el_GR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_el_GR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el_GR.ts?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -3,11 +3,11 @@\n     <name>AboutDialog</name>\n     <message>\n         <source>About Bitcoin Core</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03a3\u03c7\u03b5\u03c4\u03b9\u03ba\u03ac \u03bc\u03b5 \u03c4\u03bf Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&lt;b&gt;Bitcoin Core&lt;/b&gt; \u03ad\u03ba\u03b4\u03bf\u03c3\u03b7</translation>\n     </message>\n     <message>\n         <source>\n@@ -29,11 +29,11 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>The Bitcoin Core developers</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u039f\u03b9 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ad\u03c2 \u03c4\u03bf\u03c5 Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>(%1-bit)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(%1-bit)</translation>\n     </message>\n </context>\n <context>\n@@ -128,11 +128,11 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Exporting Failed</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0397 \u03b5\u03be\u03b1\u03b3\u03c9\u03b3\u03ae \u03b1\u03c0\u03ad\u03c4\u03c5\u03c7\u03b5</translation>\n     </message>\n     <message>\n         <source>There was an error trying to save the address list to %1.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03a0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03c3\u03c4\u03b7\u03ba\u03b5 \u03c3\u03c6\u03ac\u03bb\u03bc\u03b1 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b1\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03ce\u03bd \u03c3\u03c4\u03bf %1.</translation>\n     </message>\n </context>\n <context>\n@@ -438,7 +438,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>&amp;About Bitcoin Core</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u03a3\u03c7\u03b5\u03c4\u03b9\u03ba\u03ac \u03bc\u03b5 \u03c4\u03bf Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n@@ -494,11 +494,11 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>%1 and %2</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>%1 \u03ba\u03b1\u03b9 %2</translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>%n year(s)</source>\n-        <translation type=\"unfinished\"><numerusform></numerusform><numerusform></numerusform></translation>\n+        <translation><numerusform>%n \u03ad\u03c4\u03bf\u03c2</numerusform><numerusform>%n \u03ad\u03c4\u03b7</numerusform></translation>\n     </message>\n     <message>\n         <source>%1 behind</source>\n@@ -608,11 +608,11 @@ Address: %4\n     </message>\n     <message>\n         <source>Change:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03a1\u03ad\u03c3\u03c4\u03b1:</translation>\n     </message>\n     <message>\n         <source>(un)select all</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(\u03b1\u03c0\u03cc)\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae \u03cc\u03bb\u03c9\u03bd</translation>\n     </message>\n     <message>\n         <source>Tree mode</source>\n@@ -672,7 +672,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Copy quantity</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03bf\u03c3\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2</translation>\n     </message>\n     <message>\n         <source>Copy fee</source>\n@@ -684,63 +684,63 @@ Address: %4\n     </message>\n     <message>\n         <source>Copy bytes</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03c9\u03bd byte</translation>\n     </message>\n     <message>\n         <source>Copy priority</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03c1\u03bf\u03c4\u03b5\u03c1\u03b1\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2</translation>\n     </message>\n     <message>\n         <source>Copy low output</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Copy change</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03c9\u03bd \u03c1\u03ad\u03c3\u03c4\u03c9\u03bd</translation>\n     </message>\n     <message>\n         <source>highest</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03cd\u03c8\u03b9\u03c3\u03c4\u03b7</translation>\n     </message>\n     <message>\n         <source>higher</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03c5\u03c8\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7</translation>\n     </message>\n     <message>\n         <source>high</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03c8\u03b7\u03bb\u03ae</translation>\n     </message>\n     <message>\n         <source>medium-high</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03bc\u03b5\u03c3\u03b1\u03af\u03b1-\u03c8\u03b7\u03bb\u03ae</translation>\n     </message>\n     <message>\n         <source>medium</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03bc\u03b5\u03c3\u03b1\u03af\u03b1</translation>\n     </message>\n     <message>\n         <source>low-medium</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03bc\u03b5\u03c3\u03b1\u03af\u03b1-\u03c7\u03b1\u03bc\u03b7\u03bb\u03ae</translation>\n     </message>\n     <message>\n         <source>low</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03c7\u03b1\u03bc\u03b7\u03bb\u03ae</translation>\n     </message>\n     <message>\n         <source>lower</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03c7\u03b1\u03bc\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7</translation>\n     </message>\n     <message>\n         <source>lowest</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03c7\u03b1\u03bc\u03b7\u03bb\u03cc\u03c4\u03b1\u03c4\u03b7</translation>\n     </message>\n     <message>\n         <source>(%1 locked)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(%1 \u03ba\u03bb\u03b5\u03b9\u03b4\u03c9\u03bc\u03ad\u03bd\u03bf)</translation>\n     </message>\n     <message>\n         <source>none</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03ba\u03b1\u03bd\u03ad\u03bd\u03b1</translation>\n     </message>\n     <message>\n         <source>Dust</source>\n@@ -796,11 +796,12 @@ Address: %4\n     </message>\n     <message>\n         <source>change from %1 (%2)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03c1\u03ad\u03c3\u03c4\u03b1 \u03b1\u03c0\u03cc %1 (%2) </translation>\n     </message>\n     <message>\n         <source>(change)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(\u03c1\u03ad\u03c3\u03c4\u03b1)\n+</translation>\n     </message>\n </context>\n <context>\n@@ -815,7 +816,7 @@ Address: %4\n     </message>\n     <message>\n         <source>The label associated with this address list entry</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0397 \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03c3\u03c5\u03bd\u03b4\u03ad\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03b1\u03c5\u03c4\u03ae\u03bd \u03c4\u03b7\u03bd \u03ba\u03b1\u03c4\u03b1\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7 \u03c3\u03c4\u03bf \u03b2\u03b9\u03b2\u03bb\u03af\u03bf \u03b4\u03b9\u03b5\u03c5\u03b8\u03cd\u03bd\u03c3\u03b5\u03c9\u03bd</translation>\n     </message>\n     <message>\n         <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n@@ -936,11 +937,11 @@ Address: %4\n     </message>\n     <message>\n         <source>Welcome to Bitcoin Core.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u039a\u03b1\u03bb\u03ce\u03c2 \u03ae\u03c1\u03b8\u03b1\u03c4\u03b5 \u03c3\u03c4\u03bf Bitcoin Core.</translation>\n     </message>\n     <message>\n         <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u039a\u03b1\u03b8\u03ce\u03c2 \u03b1\u03c5\u03c4\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03c0\u03c1\u03ce\u03c4\u03b7 \u03c6\u03bf\u03c1\u03ac \u03c0\u03bf\u03c5 \u03b5\u03ba\u03ba\u03b9\u03bd\u03b5\u03af\u03c4\u03b1\u03b9 \u03c4\u03bf \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1, \u03bc\u03c0\u03bf\u03c1\u03b5\u03af\u03c4\u03b5 \u03bd\u03b1 \u03b4\u03b9\u03b1\u03bb\u03ad\u03be\u03b5\u03c4\u03b5 \u03c0\u03bf\u03cd \u03b8\u03b1 \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03b5\u03b9 \u03c4\u03bf Bitcoin Core \u03c4\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03c4\u03bf\u03c5.</translation>\n     </message>\n     <message>\n         <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n@@ -1030,7 +1031,7 @@ Address: %4\n     </message>\n     <message>\n         <source>MB</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>MB</translation>\n     </message>\n     <message>\n         <source>Number of script &amp;verification threads</source>\n@@ -1082,7 +1083,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Expert</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0388\u03bc\u03c0\u03b5\u03b9\u03c1\u03bf\u03c2</translation>\n     </message>\n     <message>\n         <source>Enable coin &amp;control features</source>\n@@ -1190,15 +1191,15 @@ Address: %4\n     </message>\n     <message>\n         <source>none</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03ba\u03b1\u03bd\u03ad\u03bd\u03b1</translation>\n     </message>\n     <message>\n         <source>Confirm options reset</source>\n         <translation>\u0395\u03c0\u03b9\u03b2\u03b5\u03b2\u03b1\u03b9\u03ce\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03c9\u03bd \u03b5\u03c0\u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2 </translation>\n     </message>\n     <message>\n         <source>Client restart required to activate changes.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03a7\u03c1\u03b5\u03b9\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b5\u03c0\u03b1\u03bd\u03b5\u03ba\u03ba\u03af\u03bd\u03b7\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b5\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03bf\u03cd\u03bd \u03bf\u03b9 \u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2.</translation>\n     </message>\n     <message>\n         <source>Client will be shutdown, do you want to proceed?</source>\n@@ -1229,7 +1230,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Available:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0394\u03b9\u03b1\u03b8\u03ad\u03c3\u03b9\u03bc\u03bf:</translation>\n     </message>\n     <message>\n         <source>Your current spendable balance</source>\n@@ -1370,11 +1371,11 @@ Address: %4\n     <name>QRImageWidget</name>\n     <message>\n         <source>&amp;Save Image...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0391\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u03b5\u03b9\u03ba\u03cc\u03bd\u03b1\u03c2...</translation>\n     </message>\n     <message>\n         <source>&amp;Copy Image</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03b5\u03b9\u03ba\u03cc\u03bd\u03b1\u03c2</translation>\n     </message>\n     <message>\n         <source>Save QR Code</source>\n@@ -1409,7 +1410,7 @@ Address: %4\n     </message>\n     <message>\n         <source>General</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0393\u03b5\u03bd\u03b9\u03ba\u03ac</translation>\n     </message>\n     <message>\n         <source>Using OpenSSL version</source>\n@@ -1425,7 +1426,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Name</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u038c\u03bd\u03bf\u03bc\u03b1</translation>\n     </message>\n     <message>\n         <source>Number of connections</source>\n@@ -1457,11 +1458,11 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Network Traffic</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u039a\u03af\u03bd\u03b7\u03c3\u03b7 \u03b4\u03b9\u03ba\u03c4\u03cd\u03bf\u03c5</translation>\n     </message>\n     <message>\n         <source>&amp;Clear</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0395\u03ba\u03ba\u03b1\u03b8\u03ac\u03c1\u03b9\u03c3\u03b7</translation>\n     </message>\n     <message>\n         <source>Totals</source>\n@@ -1536,15 +1537,15 @@ Address: %4\n     <name>ReceiveCoinsDialog</name>\n     <message>\n         <source>&amp;Amount:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u03a0\u03bf\u03c3\u03cc:</translation>\n     </message>\n     <message>\n         <source>&amp;Label:</source>\n         <translation>&amp;\u0395\u03c0\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae</translation>\n     </message>\n     <message>\n         <source>&amp;Message:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u039c\u03ae\u03bd\u03c5\u03bc\u03b1:</translation>\n     </message>\n     <message>\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n@@ -1584,7 +1585,7 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Request payment</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0391\u03af\u03c4\u03b7\u03c3\u03b7 \u03c0\u03bb\u03b7\u03c1\u03c9\u03bc\u03ae\u03c2</translation>\n     </message>\n     <message>\n         <source>Show the selected request (does the same as double clicking an entry)</source>\n@@ -1608,7 +1609,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Copy message</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03bc\u03b7\u03bd\u03cd\u03bc\u03b1\u03c4\u03bf\u03c2</translation>\n     </message>\n     <message>\n         <source>Copy amount</source>\n@@ -1631,7 +1632,7 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Save Image...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0391\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u03b5\u03b9\u03ba\u03cc\u03bd\u03b1\u03c2...</translation>\n     </message>\n     <message>\n         <source>Request payment to %1</source>\n@@ -1698,7 +1699,7 @@ Address: %4\n     </message>\n     <message>\n         <source>(no amount)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(\u03ba\u03b1\u03bd\u03ad\u03bd\u03b1 \u03c0\u03bf\u03c3\u03cc)</translation>\n     </message>\n </context>\n <context>\n@@ -1717,7 +1718,7 @@ Address: %4\n     </message>\n     <message>\n         <source>automatically selected</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03b5\u03c0\u03b9\u03bb\u03b5\u03b3\u03bc\u03ad\u03bd\u03bf \u03b1\u03c5\u03c4\u03cc\u03bc\u03b1\u03c4\u03b1</translation>\n     </message>\n     <message>\n         <source>Insufficient funds!</source>\n@@ -1753,7 +1754,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Change:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03a1\u03ad\u03c3\u03c4\u03b1:</translation>\n     </message>\n     <message>\n         <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n@@ -1801,7 +1802,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Copy quantity</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03bf\u03c3\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2</translation>\n     </message>\n     <message>\n         <source>Copy amount</source>\n@@ -1817,27 +1818,27 @@ Address: %4\n     </message>\n     <message>\n         <source>Copy bytes</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03c9\u03bd byte</translation>\n     </message>\n     <message>\n         <source>Copy priority</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03c1\u03bf\u03c4\u03b5\u03c1\u03b1\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2</translation>\n     </message>\n     <message>\n         <source>Copy low output</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Copy change</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03c9\u03bd \u03c1\u03ad\u03c3\u03c4\u03c9\u03bd</translation>\n     </message>\n     <message>\n         <source>Total Amount %1 (= %2)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u039f\u03bb\u03b9\u03ba\u03cc \u03a0\u03bf\u03c3\u03cc %1 (= %2)</translation>\n     </message>\n     <message>\n         <source>or</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03ae</translation>\n     </message>\n     <message>\n         <source>The recipient address is not valid, please recheck.</source>\n@@ -1940,7 +1941,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Remove this entry</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0391\u03c6\u03b1\u03af\u03c1\u03b5\u03c3\u03b7 \u03b1\u03c5\u03c4\u03ae\u03c2 \u03c4\u03b7\u03c2 \u03ba\u03b1\u03c4\u03b1\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7\u03c2</translation>\n     </message>\n     <message>\n         <source>Message:</source>\n@@ -1975,11 +1976,11 @@ Address: %4\n     <name>ShutdownWindow</name>\n     <message>\n         <source>Bitcoin Core is shutting down...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03a4\u03bf Bitcoin Core \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03af\u03b6\u03b5\u03c4\u03b1\u03b9...</translation>\n     </message>\n     <message>\n         <source>Do not shut down the computer until this window disappears.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u039c\u03b7\u03bd \u03b1\u03c0\u03b5\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03b5\u03c4\u03b5 \u03c4\u03bf\u03bd \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ae \u03bc\u03ad\u03c7\u03c1\u03b9 \u03bd\u03b1 \u03ba\u03bb\u03b5\u03af\u03c3\u03b5\u03b9 \u03b1\u03c5\u03c4\u03cc \u03c4\u03bf \u03c0\u03b1\u03c1\u03ac\u03b8\u03c5\u03c1\u03bf.</translation>\n     </message>\n </context>\n <context>\n@@ -2133,7 +2134,7 @@ Address: %4\n     </message>\n     <message>\n         <source>The Bitcoin Core developers</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u039f\u03b9 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ad\u03c2 \u03c4\u03bf\u03c5 Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>[testnet]</source>\n@@ -2341,11 +2342,11 @@ Address: %4\n     </message>\n     <message>\n         <source>Offline</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Offline</translation>\n     </message>\n     <message>\n         <source>Unconfirmed</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0391\u03bd\u03b5\u03c0\u03b9\u03b2\u03b5\u03b2\u03b1\u03af\u03c9\u03c4\u03b5\u03c2</translation>\n     </message>\n     <message>\n         <source>Confirming (%1 of %2 recommended confirmations)</source>\n@@ -2484,19 +2485,19 @@ Address: %4\n     </message>\n     <message>\n         <source>Export Transaction History</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0395\u03be\u03b1\u03b3\u03c9\u03b3\u03ae \u0399\u03c3\u03c4\u03bf\u03c1\u03b9\u03ba\u03bf\u03cd \u03a3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ce\u03bd</translation>\n     </message>\n     <message>\n         <source>Exporting Failed</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0397 \u0395\u03be\u03b1\u03b3\u03c9\u03b3\u03ae \u0391\u03c0\u03ad\u03c4\u03c5\u03c7\u03b5</translation>\n     </message>\n     <message>\n         <source>There was an error trying to save the transaction history to %1.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Y\u03c0\u03ae\u03c1\u03be\u03b5 \u03c3\u03c6\u03ac\u03bb\u03bc\u03b1 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03c0\u03c1\u03bf\u03c3\u03c0\u03ac\u03b8\u03b5\u03b9\u03b1 \u03b1\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03b9\u03c3\u03c4\u03bf\u03c1\u03b9\u03ba\u03bf\u03cd \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ce\u03bd \u03c3\u03c4\u03bf %1.</translation>\n     </message>\n     <message>\n         <source>Exporting Successful</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0395\u03c0\u03b9\u03c4\u03c5\u03c7\u03ae\u03c2 \u03b5\u03be\u03b1\u03b3\u03c9\u03b3\u03ae</translation>\n     </message>\n     <message>\n         <source>The transaction history was successfully saved to %1.</source>\n@@ -2547,7 +2548,7 @@ Address: %4\n     <name>WalletFrame</name>\n     <message>\n         <source>No wallet has been loaded.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0394\u03b5\u03bd \u03ad\u03c7\u03b5\u03b9 \u03c6\u03bf\u03c1\u03c4\u03c9\u03b8\u03b5\u03af \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03cc\u03bb\u03b9</translation>\n     </message>\n </context>\n <context>\n@@ -2585,7 +2586,7 @@ Address: %4\n     </message>\n     <message>\n         <source>The wallet data was successfully saved to %1.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03a4\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03bf\u03cd \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03c4\u03b7\u03ba\u03b1\u03bd \u03bc\u03b5 \u03b5\u03c0\u03b9\u03c4\u03c5\u03c7\u03af\u03b1 \u03c3\u03c4\u03bf %1.</translation>\n     </message>\n     <message>\n         <source>Backup Successful</source>\n@@ -2801,11 +2802,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>(default: 1)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae: 1)</translation>\n     </message>\n     <message>\n         <source>(default: wallet.dat)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(\u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae: wallet.dat)</translation>\n     </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n@@ -2841,7 +2842,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Connection options:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0395\u03c0\u03b9\u03bb\u03bf\u03b3\u03ad\u03c2 \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7\u03c2:</translation>\n     </message>\n     <message>\n         <source>Corrupted block database detected</source>\n@@ -3045,7 +3046,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Wallet options:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0395\u03c0\u03b9\u03bb\u03bf\u03b3\u03ad\u03c2 \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03bf\u03cd:</translation>\n     </message>\n     <message>\n         <source>Warning: Deprecated argument -debugnet ignored, use -debug=net</source>\n@@ -3229,7 +3230,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>on startup</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03ba\u03af\u03bd\u03b7\u03c3\u03b7</translation>\n     </message>\n     <message>\n         <source>version</source>"
      },
      {
        "sha": "2b9685f6a0f410ea69c97e21d5d43713d1d4fc9b",
        "filename": "src/qt/locale/bitcoin_id_ID.ts",
        "status": "modified",
        "additions": 36,
        "deletions": 36,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_id_ID.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_id_ID.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_id_ID.ts?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -433,7 +433,7 @@ Produk ini termasuk software yang dibangun oleh Proyek OpenSSL untuk Toolkit Ope\n     </message>\n     <message>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Permintaan pembayaran (membangkitkan kode QR dan bitcoin: URIs)</translation>\n     </message>\n     <message>\n         <source>&amp;About Bitcoin Core</source>\n@@ -473,7 +473,7 @@ Produk ini termasuk software yang dibangun oleh Proyek OpenSSL untuk Toolkit Ope\n     </message>\n     <message>\n         <source>Processed %1 of %2 (estimated) blocks of transaction history.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Proses % 1 dar i% 2 (perkiraan) blok catatan transaksi</translation>\n     </message>\n     <message>\n         <source>Processed %1 blocks of transaction history.</source>\n@@ -509,7 +509,7 @@ Produk ini termasuk software yang dibangun oleh Proyek OpenSSL untuk Toolkit Ope\n     </message>\n     <message>\n         <source>Transactions after this will not yet be visible.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Transaksi setelah ini tidak akan ditampilkan</translation>\n     </message>\n     <message>\n         <source>Error</source>\n@@ -561,7 +561,7 @@ Alamat: %4\n     </message>\n     <message>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Terjadi kesalahan fatal. Bitcoin tidak bisa lagi meneruskan dengan aman dan akan berhenti.</translation>\n     </message>\n </context>\n <context>\n@@ -611,15 +611,15 @@ Alamat: %4\n     </message>\n     <message>\n         <source>(un)select all</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(Tidak)memilih semua</translation>\n     </message>\n     <message>\n         <source>Tree mode</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>mode pohon</translation>\n     </message>\n     <message>\n         <source>List mode</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Mode daftar</translation>\n     </message>\n     <message>\n         <source>Amount</source>\n@@ -663,11 +663,11 @@ Alamat: %4\n     </message>\n     <message>\n         <source>Lock unspent</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Kunci terpakai.</translation>\n     </message>\n     <message>\n         <source>Unlock unspent</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Membuka kunci terpakai</translation>\n     </message>\n     <message>\n         <source>Copy quantity</source>\n@@ -1350,7 +1350,7 @@ Alamat: %4\n     </message>\n     <message>\n         <source>Error: Cannot parse configuration file: %1. Only use key=value syntax.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Kesalahan: Tidak dapat memproses pengaturan berkas: %1. Hanya menggunakan kunci= nilai sintak.</translation>\n     </message>\n     <message>\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n@@ -1408,7 +1408,7 @@ Alamat: %4\n     </message>\n     <message>\n         <source>General</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Umum</translation>\n     </message>\n     <message>\n         <source>Using OpenSSL version</source>\n@@ -1460,7 +1460,7 @@ Alamat: %4\n     </message>\n     <message>\n         <source>&amp;Clear</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;Kosongkan</translation>\n     </message>\n     <message>\n         <source>Totals</source>\n@@ -1504,31 +1504,31 @@ Alamat: %4\n     </message>\n     <message>\n         <source>%1 B</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>%1 B</translation>\n     </message>\n     <message>\n         <source>%1 KB</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>%1 KB</translation>\n     </message>\n     <message>\n         <source>%1 MB</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>%1 MB</translation>\n     </message>\n     <message>\n         <source>%1 GB</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>%1 GB</translation>\n     </message>\n     <message>\n         <source>%1 m</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>%1 menit</translation>\n     </message>\n     <message>\n         <source>%1 h</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>%1 Jam</translation>\n     </message>\n     <message>\n         <source>%1 h %2 m</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>%1 Jam %2 menit</translation>\n     </message>\n </context>\n <context>\n@@ -1551,7 +1551,7 @@ Alamat: %4\n     </message>\n     <message>\n         <source>R&amp;euse an existing receiving address (not recommended)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Gunakan lagi alamat penerima yang ada (tidak disarankan)</translation>\n     </message>\n     <message>\n         <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Bitcoin network.</source>\n@@ -1716,7 +1716,7 @@ Alamat: %4\n     </message>\n     <message>\n         <source>automatically selected</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Pemilihan otomatis</translation>\n     </message>\n     <message>\n         <source>Insufficient funds!</source>\n@@ -1947,7 +1947,7 @@ Alamat: %4\n     </message>\n     <message>\n         <source>This is a verified payment request.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Permintaan pembayaran terverifikasi.</translation>\n     </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n@@ -1959,7 +1959,7 @@ Alamat: %4\n     </message>\n     <message>\n         <source>This is an unverified payment request.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Permintaan pembayaran tidak terverifikasi.</translation>\n     </message>\n     <message>\n         <source>Pay To:</source>\n@@ -2005,7 +2005,7 @@ Alamat: %4\n     </message>\n     <message>\n         <source>Alt+A</source>\n-        <translation>Alt+J</translation>\n+        <translation>Alt+A</translation>\n     </message>\n     <message>\n         <source>Paste address from clipboard</source>\n@@ -2726,7 +2726,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Jalankan perintah ketika perubahan transaksi dompet (%s di cmd digantikan oleh TxID)</translation>\n     </message>\n     <message>\n         <source>Fees smaller than this are considered zero fee (for transaction creation) (default:</source>\n@@ -2790,11 +2790,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>(default: 1)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(pengaturan awal: 1)</translation>\n     </message>\n     <message>\n         <source>(default: wallet.dat)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(pengaturan awal: wallet.dat)</translation>\n     </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n@@ -2830,7 +2830,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Connection options:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Pilih koneksi:</translation>\n     </message>\n     <message>\n         <source>Corrupted block database detected</source>\n@@ -2858,11 +2858,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Error initializing block database</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Kesalahan menginisialisasi database blok</translation>\n     </message>\n     <message>\n         <source>Error initializing wallet database environment %s!</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Kesalahan menginisialisasi dompet pada database%s!</translation>\n     </message>\n     <message>\n         <source>Error loading block database</source>\n@@ -2958,7 +2958,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Importing...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>mengimpor...</translation>\n     </message>\n     <message>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n@@ -2970,15 +2970,15 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Deskripsi berkas tidak tersedia dengan cukup.</translation>\n     </message>\n     <message>\n         <source>Prepend debug output with timestamp (default: 1)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>RPC client options:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Pilihan RPC klien:</translation>\n     </message>\n     <message>\n         <source>Rebuild block chain index from current blk000??.dat files</source>\n@@ -2998,7 +2998,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Set the number of threads to service RPC calls (default: 4)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Mengatur jumlah urutan untuk layanan panggilan RPC (pengaturan awal: 4)</translation>\n     </message>\n     <message>\n         <source>Specify wallet file (within data directory)</source>\n@@ -3174,11 +3174,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Start Bitcoin Core Daemon</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Memulai Bitcoin Core Daemon</translation>\n     </message>\n     <message>\n         <source>System error: </source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Kesalahan sistem:</translation>\n     </message>\n     <message>\n         <source>Transaction amount too small</source>"
      },
      {
        "sha": "ce30a8603d8e15254a2c0c6144817a9715df2a8c",
        "filename": "src/qt/locale/bitcoin_ko_KR.ts",
        "status": "modified",
        "additions": 75,
        "deletions": 73,
        "changes": 148,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_ko_KR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_ko_KR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ko_KR.ts?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -33,14 +33,14 @@ MIT/X11 \ud504\ub85c\uadf8\ub7a8 \ub77c\uc774\uc120\uc2a4\uc5d0 \ub530\ub77c \ubc30\ud3ec\ud569\ub2c8\ub2e4. COPYING \ub610\ub294 http\n     </message>\n     <message>\n         <source>(%1-bit)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(%1-\ube44\ud2b8)</translation>\n     </message>\n </context>\n <context>\n     <name>AddressBookPage</name>\n     <message>\n         <source>Double-click to edit address or label</source>\n-        <translation>\uc8fc\uc18c \ub610\ub294 \ud45c\ub97c \ud3b8\uc9d1\ud558\uae30 \uc704\ud574 \ub354\ube14\ud074\ub9ad \ud558\uc2dc\uc624</translation>\n+        <translation>\uc9c0\uac11 \uc8fc\uc18c\ub098 \uc81c\ubaa9\uc744 \uc218\uc815\ud558\ub824\uba74 \ub354\ube14\ud074\ub9ad\ud558\uc138\uc694.</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -611,7 +611,7 @@ Address: %4\n     </message>\n     <message>\n         <source>(un)select all</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ubaa8\ub450 \uc120\ud0dd(\ud558\uc9c0 \uc54a\uc74c)</translation>\n     </message>\n     <message>\n         <source>Tree mode</source>\n@@ -663,11 +663,11 @@ Address: %4\n     </message>\n     <message>\n         <source>Lock unspent</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ube44\ud2b8\ucf54\uc778\uc774 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc740 \uc8fc\uc18c\ub97c \uc7a0\uae08 \ucc98\ub9ac\ud569\ub2c8\ub2e4.</translation>\n     </message>\n     <message>\n         <source>Unlock unspent</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ube44\ud2b8\ucf54\uc778\uc774 \uc0ac\uc6a9\ub418\uc9c0 \uc54a\uc740 \uc8fc\uc18c\ub97c \uc7a0\uae08 \ud574\uc81c\ud569\ub2c8\ub2e4. </translation>\n     </message>\n     <message>\n         <source>Copy quantity</source>\n@@ -755,7 +755,7 @@ Address: %4\n     </message>\n     <message>\n         <source>This label turns red, if the transaction size is greater than 1000 bytes.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ub9cc\uc57d \uac70\ub798 \uc591\uc774 1000bytes \ubcf4\ub2e4 \ud06c\uba74 \uc81c\ubaa9\uc774 \ube68\uac04\uc0c9\uc73c\ub85c \ubcc0\ud569\ub2c8\ub2e4</translation>\n     </message>\n     <message>\n         <source>This means a fee of at least %1 per kB is required.</source>\n@@ -767,27 +767,27 @@ Address: %4\n     </message>\n     <message>\n         <source>Transactions with higher priority are more likely to get included into a block.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc6b0\uc120 \uc21c\uc704\uac00 \ub192\uc740 \uac70\ub798\uc758 \uacbd\uc6b0 \ube14\ub7ed\uc5d0 \ud3ec\ud568\ub420 \uac00\ub2a5\uc131\uc774 \ub354 \ub9ce\uc2b5\ub2c8\ub2e4.</translation>\n     </message>\n     <message>\n         <source>This label turns red, if the priority is smaller than &quot;medium&quot;.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc6b0\uc120\uad8c\uc774 \uc911\uac04\ubcf4\ub2e4 \uc791\uc73c\uba74 \uc81c\ubaa9\uc774 \ube68\uac04\uc0c9\uc73c\ub85c \ubcc0\ud569\ub2c8\ub2e4. </translation>\n     </message>\n     <message>\n         <source>This label turns red, if any recipient receives an amount smaller than %1.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ub9cc\uc57d \uc218\ub839\uc778\uc774 \ubc1b\uc740 \uc561\uc218\uac00 \uc794\uace0\uc758 1%\ubcf4\ub2e4 \uc791\uc73c\uba74 \uc774 \uc81c\ubaa9\uc774 \ube68\uac04\uc0c9\uc73c\ub85c \ubcc0\ud569\ub2c8\ub2e4.</translation>\n     </message>\n     <message>\n         <source>This means a fee of at least %1 is required.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ucd5c\uc18c %1\uc758 \uac70\ub798 \uc218\uc218\ub8cc\uac00 \ud544\uc694\ud558\ub2e4\ub294 \ub73b\uc785\ub2c8\ub2e4. </translation>\n     </message>\n     <message>\n         <source>Amounts below 0.546 times the minimum relay fee are shown as dust.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ub178\ub4dc \ub9b4\ub808\uc774\ub97c \uc704\ud55c \ucd5c\uc800 \uc218\uc218\ub8cc\uc758 0.546\ubc30\ubcf4\ub2e4 \ub0ae\uc740 \uac70\ub798\ub294 \uba3c\uc9c0 \uac70\ub798\ub85c \ud45c\ud604\ub429\ub2c8\ub2e4.</translation>\n     </message>\n     <message>\n         <source>This label turns red, if the change is smaller than %1.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ub9cc\uc57d \uc794\ub3c8\uc774 1%\ubcf4\ub2e4 \uc791\ub2e4\uba74 \uc81c\ubaa9\uc774 \ube68\uac04\uc0c9\uc73c\ub85c \ubcc0\ud569\ub2c8\ub2e4</translation>\n     </message>\n     <message>\n         <source>(no label)</source>\n@@ -916,7 +916,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Set SSL root certificates for payment request (default: -system-)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc9c0\ubd88 \uc694\uccad\uc744 \uc704\ud574 SSL \ucd5c\uc0c1\uc704 \uc778\uc99d\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. (\uae30\ubcf8\uac12: -system-)</translation>\n     </message>\n     <message>\n         <source>Show splash screen on startup (default: 1)</source>\n@@ -939,11 +939,11 @@ Address: %4\n     </message>\n     <message>\n         <source>As this is the first time the program is launched, you can choose where Bitcoin Core will store its data.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ud504\ub85c\uadf8\ub7a8\uc774 \ucc98\uc74c\uc73c\ub85c \uc2e4\ud589\ub418\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ube44\ud2b8\ucf54\uc778 \ucf54\uc5b4\uac00 \uc5b4\ub514\uc5d0 \ub370\uc774\ud130\ub97c \uc800\uc7a5\ud560\uc9c0 \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. </translation>\n     </message>\n     <message>\n         <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ube44\ud2b8\ucf54\uc778 \ucf54\uc5b4\uac00 \ube14\ub7ed\uccb4\uc778\uc758 \ubcf5\uc0ac\ubcf8\uc744 \ub2e4\uc6b4\ub85c\ub4dc \uc800\uc7a5\ud569\ub2c8\ub2e4. \uc801\uc5b4\ub3c4 %1GB\uc758 \ub370\uc774\ud130\uac00 \uc774 \ud3f4\ub354\uc5d0 \uc800\uc7a5\ub418\uba70 \uc2dc\uac04\uc774 \uacbd\uacfc\ud560\uc218\ub85d \uc810\ucc28 \uc99d\uac00\ud569\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uc9c0\uac11 \ub610\ud55c \uc774 \ud3f4\ub354\uc5d0 \uc800\uc7a5\ub429\ub2c8\ub2e4. </translation>\n     </message>\n     <message>\n         <source>Use the default data directory</source>\n@@ -959,7 +959,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Error: Specified data directory &quot;%1&quot; can not be created.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc624\ub958 : \ubcc4\ub3c4 \uc815\uc758\ud55c \ud3f4\ub354\uba85 &quot;%1&quot; \uc0dd\uc131\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. </translation>\n     </message>\n     <message>\n         <source>Error</source>\n@@ -1033,7 +1033,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Number of script &amp;verification threads</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc2a4\ud06c\ub9bd\ud2b8 \uc778\uc99d \uc4f0\ub808\ub4dc\uc758 \uac1c\uc218</translation>\n     </message>\n     <message>\n         <source>Connect to the Bitcoin network through a SOCKS proxy.</source>\n@@ -1053,7 +1053,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Third party transaction URLs</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc81c 3\uc790 \uac70\ub798 URLs</translation>\n     </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n@@ -1081,19 +1081,19 @@ Address: %4\n     </message>\n     <message>\n         <source>Expert</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc804\ubb38\uac00</translation>\n     </message>\n     <message>\n         <source>Enable coin &amp;control features</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ucf54\uc778 \uc0c1\uc138 \uc81c\uc5b4\uae30\ub2a5\uc744 \ud65c\uc131\ud654\ud569\ub2c8\ub2e4 - &amp;C</translation>\n     </message>\n     <message>\n         <source>If you disable the spending of unconfirmed change, the change from a transaction cannot be used until that transaction has at least one confirmation. This also affects how your balance is computed.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>&amp;Spend unconfirmed change</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\ud655\uc778\ub418\uc9c0 \uc54a\uc740 \ub3c8\uc744 \uc4f0\ub2e4</translation>\n     </message>\n     <message>\n         <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n@@ -1173,7 +1173,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Whether to show coin control features or not.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ucf54\uc778 \uc0c1\uc138 \uc81c\uc5b4\uae30\ub2a5\uc5d0 \ub300\ud55c \ud45c\uc2dc \uc5ec\ubd80\ub97c \uc120\ud0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</translation>\n     </message>\n     <message>\n         <source>&amp;OK</source>\n@@ -1197,15 +1197,15 @@ Address: %4\n     </message>\n     <message>\n         <source>Client restart required to activate changes.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ubcc0\uacbd \uc0ac\ud56d\uc744 \uc801\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 \ud504\ub85c\uadf8\ub7a8\uc774 \uc885\ub8cc \ud6c4 \uc7ac\uc2dc\uc791\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4.</translation>\n     </message>\n     <message>\n         <source>Client will be shutdown, do you want to proceed?</source>\n         <translation>\ud074\ub77c\uc774\uc5b8\ud2b8\uac00 \uc885\ub8cc\ub429\ub2c8\ub2e4, \uacc4\uc18d \uc9c4\ud589\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?</translation>\n     </message>\n     <message>\n         <source>This change would require a client restart.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc774 \ubcc0\uacbd \uc0ac\ud56d \uc801\uc6a9\uc744 \uc704\ud574 \ud504\ub85c\uadf8\ub7a8 \uc7ac\uc2dc\uc791\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. </translation>\n     </message>\n     <message>\n         <source>The supplied proxy address is invalid.</source>\n@@ -1279,7 +1279,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc694\uccad\ud55c \uae08\uc561 %1\uc758 \uc591\uc774 \ub108\ubb34 \uc801\uc2b5\ub2c8\ub2e4. (\uc2a4\ud338\uc131 \uac70\ub798\ub85c \uac04\uc8fc)</translation>\n     </message>\n     <message>\n         <source>Payment request error</source>\n@@ -1295,15 +1295,15 @@ Address: %4\n     </message>\n     <message>\n         <source>Your active proxy doesn&apos;t support SOCKS5, which is required for payment requests via proxy.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ud604\uc7ac\uc758 \ud504\ub85d\uc2dc\uac00 SOCKS5\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc544 \uc9c0\ubd88 \uc694\uccad\uc744 \uc218\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. </translation>\n     </message>\n     <message>\n         <source>Payment request fetch URL is invalid: %1</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Payment request file handling</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc9c0\ubd88\uc774 \ud30c\uc77c \ucc98\ub9ac\ub97c \uc694\uccad\ud569\ub2c8\ub2e4</translation>\n     </message>\n     <message>\n         <source>Payment request file can not be read or processed! This can be caused by an invalid payment request file.</source>\n@@ -1354,7 +1354,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc624\ub958: \uc798\ubabb\ub41c -regtest \uc640 -testnet\uc758 \uc870\ud569\uc785\ub2c8\ub2e4.</translation>\n     </message>\n     <message>\n         <source>Bitcoin Core didn&apos;t yet exit safely...</source>\n@@ -1460,7 +1460,7 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Clear</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\uc9c0\uc6b0\uae30</translation>\n     </message>\n     <message>\n         <source>Totals</source>\n@@ -1547,11 +1547,11 @@ Address: %4\n     </message>\n     <message>\n         <source>Reuse one of the previously used receiving addresses. Reusing addresses has security and privacy issues. Do not use this unless re-generating a payment request made before.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc774\uc804\uc5d0 \uc0ac\uc6a9\ub41c \uc218\ucde8\uc6a9 \uc8fc\uc18c\ub97c \uc0ac\uc6a9\ud560\ub824\uace0 \ud569\ub2c8\ub2e4. \uc8fc\uc18c\uc758 \uc7ac\uc0ac\uc6a9\uc740 \ubcf4\uc548\uacfc \uac1c\uc778\uc815\ubcf4 \ubcf4\ud638 \uce21\uba74\uc5d0\uc11c \ubb38\uc81c\ub97c \ucd08\ub798\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc804 \uc9c0\ubd88 \uc694\uccad\uc744 \uc7ac\uc0dd\uc131\ud558\ub294 \uacbd\uc6b0\uac00 \uc544\ub2c8\ub77c\uba74 \uc8fc\uc18c \uc7ac\uc0ac\uc6a9\uc744 \uad8c\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.  </translation>\n     </message>\n     <message>\n         <source>R&amp;euse an existing receiving address (not recommended)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ud604\uc7ac\uc758 \uc218\ucde8\uc6a9 \uc8fc\uc18c\ub97c \uc7ac\uc0ac\uc6a9\ud569\ub2c8\ub2e4\ub9cc \uad8c\uc7a5\ud558\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. (R&amp;)</translation>\n     </message>\n     <message>\n         <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Bitcoin network.</source>\n@@ -1567,7 +1567,7 @@ Address: %4\n     </message>\n     <message>\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc694\uccad\ud560 \uae08\uc561 \uc785\ub825\uce78\uc73c\ub85c \uc120\ud0dd \uc0ac\ud56d\uc785\ub2c8\ub2e4. \ube48 \uce78\uc73c\ub85c \ub450\uac70\ub098 \ud2b9\uc815 \uae08\uc561\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 0\uc744 \uc785\ub825\ud558\uc138\uc694. </translation>\n     </message>\n     <message>\n         <source>Clear all fields of the form.</source>\n@@ -1712,7 +1712,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Inputs...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc785\ub825...</translation>\n     </message>\n     <message>\n         <source>automatically selected</source>\n@@ -1864,7 +1864,7 @@ Address: %4\n     </message>\n     <message>\n         <source>The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uac70\ub798\uac00 \uac70\ubd80\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \uba87\uba87 \ucf54\uc778\ub4e4\uc774 \uc9c0\uac11\uc5d0\uc11c \uc774\ubbf8 \uc0ac\uc6a9\ub41c \uacbd\uc6b0, \uc608\ub97c \ub4e4\uc5b4 \ucf54\uc778\uc744 \uc774\ubbf8 \uc0ac\uc6a9\ud55c  wallet.dat\ub97c \ubcf5\uc0ac\ud574\uc11c \uc0ac\uc6a9\ud55c \uacbd\uc6b0 \uc9c0\uae08 \uc9c0\uac11\uc5d0 \uae30\ub85d\uc774 \uc548\ub418\uc788\uc5b4 \uc774\ub7f0 \uc77c\uc774 \uc0dd\uae38 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</translation>\n     </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n@@ -1951,7 +1951,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Enter a label for this address to add it to the list of used addresses</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc0ac\uc6a9\ub41c \uc8fc\uc18c \ubaa9\ub85d\uc5d0 \uc0c8 \uc8fc\uc18c\ub97c \ucd94\uac00\ud558\uae30 \uc704\ud574 \uc81c\ubaa9\uc744 \uc785\ub825\ud569\ub2c8\ub2e4. </translation>\n     </message>\n     <message>\n         <source>A message that was attached to the bitcoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Bitcoin network.</source>\n@@ -1963,7 +1963,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Pay To:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc1a1\uae08\ud560 \ub300\uc0c1 : </translation>\n     </message>\n     <message>\n         <source>Memo:</source>\n@@ -2246,7 +2246,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc2e0\uaddc \ucc44\uad74\ub41c \ucf54\uc778\uc774 \uc0ac\uc6a9\ub418\uae30 \uc704\ud574\uc11c\ub294 %1 \uac1c\uc758 \ube14\ub7ed\uc774 \uacbd\uacfc\ub418\uc5b4\uc57c \ud569\ub2c8\ub2e4. \ube14\ub7ed\uc744 \uc0dd\uc131\ud560 \ub54c \ube14\ub7ed\uccb4\uc778\uc5d0 \ucd94\uac00\ub418\ub3c4\ub85d \ub124\ud2b8\uc6cc\ud06c\uc5d0 \uc804\ud30c\ub418\ub294 \uacfc\uc815\uc744 \uac70\uce58\ub294\ub370, \ube14\ub7ed\uccb4\uc778\uc5d0 \ud3ec\ud568\ub418\uc9c0 \ubabb\ud558\uace0 \uc2e4\ud328\ud55c\ub2e4\uba74 \ud574\ub2f9 \ube14\ub7ed\uc758 \uc0c1\ud0dc\ub294 &apos;\ubbf8\uc2b9\uc778&apos;\uc73c\ub85c \ud45c\ud604\ub418\uace0 \ube44\ud2b8\ucf54\uc778 \ub610\ud55c \uc0ac\uc6a9\ub420 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774 \ud604\uc0c1\uc740 \ub2e4\ub978 \ub178\ub4dc\uac00 \ube44\uc2b7\ud55c \uc2dc\uac04\ub300\uc5d0 \ub3d9\uc2dc\uc5d0 \ube14\ub7ed\uc744 \uc0dd\uc131\ud560 \ub54c \uc885\uc885 \ubc1c\uc0dd\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. </translation>\n     </message>\n     <message>\n         <source>Debug information</source>\n@@ -2316,7 +2316,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Immature (%1 confirmations, will be available after %2)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ucda9\ubd84\ud788 \uc219\uc131\ub418\uc9c0 \uc54a\uc740 \uc0c1\ud0dc (%1 \uc2b9\uc778, %2 \ud6c4\uc5d0 \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4)</translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>Open for %n more block(s)</source>\n@@ -2348,7 +2348,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Confirming (%1 of %2 recommended confirmations)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc2b9\uc778 \uc911 (\uad8c\uc7a5\ub418\ub294 \uc2b9\uc778 \ud68c\uc218 %2 \ub300\ube44 \ud604\uc7ac \uc2b9\uc778 \uc218 %1)</translation>\n     </message>\n     <message>\n         <source>Conflicted</source>\n@@ -2580,7 +2580,7 @@ Address: %4\n     </message>\n     <message>\n         <source>There was an error trying to save the wallet data to %1.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc9c0\uac11 \ub370\uc774\ud130\ub97c %1 \ud3f4\ub354\uc5d0 \uc800\uc7a5\ud558\ub294 \ub3d9\uc548 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. </translation>\n     </message>\n     <message>\n         <source>The wallet data was successfully saved to %1.</source>\n@@ -2651,15 +2651,15 @@ Address: %4\n     </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: 8332 or testnet: 18332)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ud3ec\ud2b8 &lt;port&gt;\uc744 \ud1b5\ud574 JSON-RPC \uc5f0\uacb0 (\uae30\ubcf8\uac12: 8332 \ub610\ub294 testnet: 18332)</translation>\n     </message>\n     <message>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>\uba85\ub839\uc904\uacfc JSON-RPC \uba85\ub839 \uc218\ub77d</translation>\n     </message>\n     <message>\n         <source>Bitcoin Core RPC client version</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ube44\ud2b8\ucf54\uc778 \ucf54\uc5b4 RPC \ud074\ub77c\uc774\uc5b8\ud2b8 \ubc84\uc804</translation>\n     </message>\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n@@ -2693,7 +2693,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>An error occurred while setting up the RPC port %u for listening on IPv6, falling back to IPv4: %s</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>IPv6 \uc5f0\uacb0\uc744 \uc704\ud574 RPC port %u \uc124\uc815 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4. IPv4: %s \ud658\uacbd\uc73c\ub85c \ub3cc\uc544\uac11\ub2c8\ub2e4.</translation>\n     </message>\n     <message>\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n@@ -2717,19 +2717,21 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc5d0\ub7ec: \uac70\ub798\uac00 \uac70\ubd80\ub418\uc5c8\uc2b5\ub2c8\ub2e4! \uc774\ub7f0 \uc77c\uc774 \uc0dd\uae38 \uc218 \uc788\uc2b5\ub2c8\ub2e4 \ub9cc\uc57d \uba87\uac1c\uc758 \ucf54\uc778\ub4e4\uc744 \uc9c0\uac11\uc5d0\uc11c \uc774\ubbf8 \uc0ac\uc6a9\ud588\ub2e4\uba74\uc694, \uc608\ub97c \ub4e4\uc5b4 \ub9cc\uc57d \ub2f9\uc2e0\uc774 wallet.dat\ub97c \ubcf5\uc0ac\ud574\uc11c \uc0ac\uc6a9\ud588\uac70\ub098 \ucf54\uc778\ub4e4\uc744 \uc0ac\uc6a9 \ud6c4\uc5d0 \ubcf5\uc0ac\ud588\ub2e4\uba74 \uc5ec\uae30\uc120 \ud45c\uc2dc\uac00 \uc548\ub418\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4\n+\n+-\ubc88\uc5ed\uc740 \ud588\uc73c\ub098 \uc57d\uac04 \uc774\uc0c1\ud55c\uc810\uc774 \uc788\uc5b4\uc11c \uc218\uc815\ud574\uc57c\ud568-</translation>\n     </message>\n     <message>\n         <source>Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds!</source>\n         <translation>\uc624\ub958 : \ud574\ub2f9 \uac70\ub798\ub294 \uc1a1\uae08\uc561, \ub2e4\uc911 \uac70\ub798, \ucd5c\uadfc \uc218\ub839\ud55c \uae08\uc561\uc758 \uc0ac\uc6a9 \ub4f1\uc758 \uc774\uc720\ub85c \ucd5c\uc18c %s \uc774\uc0c1\uc758 \uc1a1\uae08 \uc218\uc218\ub8cc\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.</translation>\n     </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc9c0\uac11 \uac70\ub798\uac00 \ubc14\ub00c\uba74 \uba85\ub839\uc744 \uc2e4\ud589\ud569\ub2c8\ub2e4.(%s \uc548\uc758 \uba85\ub839\uc5b4\uac00 TxID\ub85c \ubc14\ub01d\ub2c8\ub2e4)</translation>\n     </message>\n     <message>\n         <source>Fees smaller than this are considered zero fee (for transaction creation) (default:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ud574\ub2f9 \uae08\uc561\ubcf4\ub2e4 \uc801\uc740 \uc218\uc218\ub8cc\ub294 \uc218\uc218\ub8cc \uba74\uc81c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. (\uac70\ub798 \uc0dd\uc131\uc758 \ubaa9\uc801)(\uae30\ubcf8\uac12:</translation>\n     </message>\n     <message>\n         <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: 100)</source>\n@@ -2789,11 +2791,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>(default: 1)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(\uae30\ubcf8\uac12: 1)</translation>\n     </message>\n     <message>\n         <source>(default: wallet.dat)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(\uae30\ubcf8\uac12: wallet.dat)</translation>\n     </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n@@ -2829,19 +2831,19 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Connection options:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc5f0\uacb0 \uc124\uc815 : </translation>\n     </message>\n     <message>\n         <source>Corrupted block database detected</source>\n         <translation>\uc190\uc0c1\ub41c \ube14\ub85d \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \uac10\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4</translation>\n     </message>\n     <message>\n         <source>Debugging/Testing options:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ub514\ubc84\uadf8 \ubc0f \ud14c\uc2a4\ud2b8 \uc124\uc815</translation>\n     </message>\n     <message>\n         <source>Disable safemode, override a real safe mode event (default: 0)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc548\uc804 \ubaa8\ub4dc\ub97c \ube44\ud65c\uc131\ud654\ud558\uace0 \uc548\uc804 \ubaa8\ub4dc\uc758 \uc774\ubca4\ud2b8\uac00 \ubc1c\uc0dd\ud558\ub354\ub77c\ub3c4 \ubb34\uc2dc\ud569\ub2c8\ub2e4. (\uae30\ubcf8\uac12: 0, \ube44\ud65c\uc131\ud654)</translation>\n     </message>\n     <message>\n         <source>Discover own IP address (default: 1 when listening and no -externalip)</source>\n@@ -2861,7 +2863,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Error initializing wallet database environment %s!</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc9c0\uac11 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud658\uacbd \ucd08\uae30\ud654\ud558\ub294\ub370 \uc624\ub958</translation>\n     </message>\n     <message>\n         <source>Error loading block database</source>\n@@ -2929,19 +2931,19 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Fee per kB to add to transactions you send</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc1a1\uae08 \uac70\ub798\uc2dc \ucd94\uac00\ub418\ub294 KB \ub2f9 \uc218\uc218\ub8cc\uc785\ub2c8\ub2e4. </translation>\n     </message>\n     <message>\n         <source>Fees smaller than this are considered zero fee (for relaying) (default:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ud574\ub2f9 \uae08\uc561\ubcf4\ub2e4 \uc801\uc740 \uc218\uc218\ub8cc\ub294 \uc218\uc218\ub8cc \uba74\uc81c\ub85c \uac04\uc8fc\ub429\ub2c8\ub2e4. (\ub9b4\ub808\uc774 \ubaa9\uc801)(\uae30\ubcf8\uac12:</translation>\n     </message>\n     <message>\n         <source>Find peers using DNS lookup (default: 1 unless -connect)</source>\n         <translation>DNS \ucc3e\uae30\ub97c \uc774\uc6a9\ud558\uc5ec \uc0ac\uc6a9\uc790\ub97c \ucc3e\uc73c\uc2dc\uc624(\uae30\ubcf8\uac12: 1 \uc5f0\uacb0 \ub418\uba74)</translation>\n     </message>\n     <message>\n         <source>Force safe mode (default: 0)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc548\uc804 \ubaa8\ub4dc\ub85c \uac15\uc81c \uc9c4\uc785\ud558\ub294 \uae30\ub2a5\uc785\ub2c8\ub2e4.(\uae30\ubcf8\uac12: 0) </translation>\n     </message>\n     <message>\n         <source>Generate coins (default: 0)</source>\n@@ -2961,7 +2963,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc62c\ubc14\ub974\uc9c0 \uc54a\uac70\ub098 \uc0dd\uc131\ub41c \ube14\ub85d\uc744 \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4. \uc798\ubabb\ub41c \ub124\ud2b8\uc6cc\ud06c \uc790\ub8cc \ub514\ub809\ud1a0\ub9ac?</translation>\n     </message>\n     <message>\n         <source>Invalid -onion address: &apos;%s&apos;</source>\n@@ -3053,15 +3055,15 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc774 \uc0ac\ud56d\uacfc \uad00\ub828\uc788\ub294 \uacbd\uace0\uac00 \ubc1c\uc0dd\ud558\uac70\ub098 \uc544\uc8fc \uae34 \ud3ec\ud06c\uac00 \ubc1c\uc0dd\ud588\uc744 \ub54c \uba85\ub839\uc5b4\ub97c \uc2e4\ud589\ud574 \uc8fc\uc138\uc694. (cmd \uba85\ub839\uc5b4 \ubaa9\ub85d\uc5d0\uc11c %s\ub294 \uba54\uc2dc\uc9c0\ub85c \ub300\uccb4\ub429\ub2c8\ub2e4) </translation>\n     </message>\n     <message>\n         <source>Output debugging information (default: 0, supplying &lt;category&gt; is optional)</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Set maximum size of high-priority/low-fee transactions in bytes (default: %d)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ucd5c\ub300 \ud06c\uae30\ub97c \ucd5c\uc6b0\uc120\uc73c\ub85c \uc124\uc815 / \ubc14\uc774\ud2b8\ub2f9 \ucd5c\uc18c \uc218\uc218\ub8cc\ub85c \uac70\ub798(\uae30\ubcf8\uac12: %d)</translation>\n     </message>\n     <message>\n         <source>Information</source>\n@@ -3077,51 +3079,51 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Limit size of signature cache to &lt;n&gt; entries (default: 50000)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&lt;n&gt;\ubc88 \uc9f8 \uc21c\uc11c\uc5d0\uc11c \uc804\uc790\uc11c\uba85 \uce90\uc26c\uc758 \uc6a9\ub7c9\uc744 \uc81c\ud55c\ud569\ub2c8\ub2e4. (\uae30\ubcf8\uac12: 50000) </translation>\n     </message>\n     <message>\n         <source>Log transaction priority and fee per kB when mining blocks (default: 0)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ube14\ub7ed\uc744 \ucc44\uad74\ud560 \ub54c kB\ub2f9 \uac70\ub798 \uc6b0\uc120 \uc21c\uc704\uc640 \uc218\uc218\ub8cc\ub97c \ub85c\uadf8\uc5d0 \ub0a8\uae41\ub2c8\ub2e4. (\uae30\ubcf8\uac12: 0, \ube44\ud65c\uc131\ud654)</translation>\n     </message>\n     <message>\n         <source>Maintain a full transaction index (default: 0)</source>\n         <translation>\uc804\uccb4 \uac70\ub798 \uc9c0\uc218\ub97c \uc720\uc9c0\ud569\ub2c8\ub2e4(\uae30\ubcf8\uac12: 0)</translation>\n     </message>\n     <message>\n         <source>Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: 5000)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ucd5c\ub300 \uc5f0\uacb0\ub9c8\ub2e4 1000bytes \ubc84\ud37c\ub97c \ubc1b\ub294\ub2e4. (\uae30\ubcf8\uac12: 5000)</translation>\n     </message>\n     <message>\n         <source>Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: 1000)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ucd5c\ub300 \uc5f0\uacb0 \ub9c8\ub2e4 1000bytes \ubc84\ud37c\ub97c \ubcf4\ub0b8\ub2e4.(\uae30\ubcf8\uac12: 1000) </translation>\n     </message>\n     <message>\n         <source>Only accept block chain matching built-in checkpoints (default: 1)</source>\n         <translation>\ub0b4\ubd80 \uc911\ub2e8\uc810\uc5d0 \uc77c\uce58\ud558\ub294 \ube14\ub85d \uccb4\uc778\ub9cc \uc218\uc6a9(\uae30\ubcf8\uac12: 1)</translation>\n     </message>\n     <message>\n         <source>Only connect to nodes in network &lt;net&gt; (IPv4, IPv6 or Tor)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ub178\ub4dc\uac00 \uc788\ub294 \ub124\ud2b8\uc6cc\ud06c\uc5d0\ub9cc \uc811\uc18d \ud569\ub2c8\ub2e4(IPv4, IPv6 \ub610\ub294 Tor)</translation>\n     </message>\n     <message>\n         <source>Print block on startup, if found in block index</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ube14\ub7ed \uc0c9\uc778\uc744 \ubc1c\uacac\ud558\uba74 \uad6c\ub3d9 \uc2dc \ube14\ub7ed\uc744 \ucd9c\ub825\ud569\ub2c8\ub2e4.</translation>\n     </message>\n     <message>\n         <source>Print block tree on startup (default: 0)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uad6c\ub3d9 \uc2dc \ube14\ub7ed \ud2b8\ub9ac\ub97c \ucd9c\ub825\ud569\ub2c8\ub2e4. (\uae30\ubcf8\uac12: 0, \ube44\ud65c\uc131\ud654)</translation>\n     </message>\n     <message>\n         <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>RPC SSL \uc635\uc158: (\ube44\ud2b8\ucf54\uc778 \uc704\ud0a4\uc758 SSL \uc124\uc815 \uc124\uba85\uc11c \ucc38\uace0)</translation>\n     </message>\n     <message>\n         <source>RPC server options:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>RPC \uc11c\ubc84 \uc124\uc815</translation>\n     </message>\n     <message>\n         <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ubaa8\ub4e0 \ub124\ud2b8\uc6cc\ud06c \uba54\uc2dc\uc9c0 \ub9c8\ub2e4 \ubb34\uc791\uc704\ub85c 1\uc774 \ub5a8\uc5b4\uc9c4\ub2e4</translation>\n     </message>\n     <message>\n         <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n@@ -3137,7 +3139,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Send command to Bitcoin Core</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ube44\ud2b8\ucf54\uc778 \ucf54\uc5b4\ub85c \uba85\ub839 \ubcf4\ub0b4\uae30</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -3149,15 +3151,15 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Sets the DB_PRIVATE flag in the wallet db environment (default: 1)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uc804\uc790\uc9c0\uac11 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \ud658\uacbd\uc5d0 DB_PRIVATE \ud50c\ub798\uadf8\ub97c \uc124\uc815\ud569\ub2c8\ub2e4. (\uae30\ubcf8\uac12: 1, \ud65c\uc131\ud654)</translation>\n     </message>\n     <message>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ubaa8\ub4e0 \ub514\ubc84\uadf8 \uc124\uc815 \ubcf4\uae30(\uc124\uc815: --help -help-debug)</translation>\n     </message>\n     <message>\n         <source>Show benchmark information (default: 0)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\ubca4\uce58\ub9c8\ud06c \uc815\ubcf4 \ubcf4\uae30(\uae30\ubcf8\uac12: 0)</translation>\n     </message>\n     <message>\n         <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>\n@@ -3217,7 +3219,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>on startup</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\uad6c\ub3d9 \uc911</translation>\n     </message>\n     <message>\n         <source>version</source>"
      },
      {
        "sha": "9e38c69c6096553d446818741ebaeca27940e8c5",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -599,7 +599,7 @@ Adresse: %4\n     </message>\n     <message>\n         <source>Low Output:</source>\n-        <translation>Lav Utdata:</translation>\n+        <translation>Svake Utdata:</translation>\n     </message>\n     <message>\n         <source>After Fee:</source>\n@@ -1744,7 +1744,7 @@ Adresse: %4\n     </message>\n     <message>\n         <source>Low Output:</source>\n-        <translation>Svak Utdata:</translation>\n+        <translation>Svake Utdata:</translation>\n     </message>\n     <message>\n         <source>After Fee:</source>\n@@ -2730,7 +2730,7 @@ For eksempel: varselmelding=echo %%s | mail -s &quot;Bitcoin Varsel&quot; admin@\n     </message>\n     <message>\n         <source>Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds!</source>\n-        <translation>Feil: Denne transaksjonen trenger en gebyr p\u00e5 minst %s p\u00e5 grunn av bel\u00f8pet, kompleksiteten eller bruk av allerede mottatte penger!</translation>\n+        <translation>Feil: Denne transaksjonen trenger et gebyr p\u00e5 minst %s p\u00e5 grunn av bel\u00f8pet, kompleksiteten eller bruk av allerede mottatte penger!</translation>\n     </message>\n     <message>\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>"
      },
      {
        "sha": "d09c40f62e9106a3effb386d5f7f476a6eb4d531",
        "filename": "src/qt/locale/bitcoin_ro_RO.ts",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_ro_RO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_ro_RO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ro_RO.ts?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -795,7 +795,7 @@ Adresa: %4\n     </message>\n     <message>\n         <source>change from %1 (%2)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>restul de la %1 (%2)</translation>\n     </message>\n     <message>\n         <source>(change)</source>\n@@ -1587,7 +1587,7 @@ Adresa: %4\n     </message>\n     <message>\n         <source>Show the selected request (does the same as double clicking an entry)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Arata cererea selectata (acelas lucru ca si dublu-click pe o inregistrare)</translation>\n     </message>\n     <message>\n         <source>Show</source>\n@@ -3008,7 +3008,7 @@ spre exemplu: alertnotify=echo %%s | mail -s &quot;Alerta Bitcoin&quot; admin@fo\n     </message>\n     <message>\n         <source>Set the number of threads to service RPC calls (default: 4)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Stabileste numarul de thread-uri care servesc apeluri RPC (implicit: 4)</translation>\n     </message>\n     <message>\n         <source>Specify wallet file (within data directory)</source>"
      },
      {
        "sha": "2ad31e911baec71190261ac239252cab463cbf96",
        "filename": "src/qt/locale/bitcoin_sl_SI.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 18,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_sl_SI.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_sl_SI.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sl_SI.ts?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -344,7 +344,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Modify configuration options for Bitcoin</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Spremeni konfiguracijo nastavitev za Bitcoin</translation>\n     </message>\n     <message>\n         <source>Backup wallet to another location</source>\n@@ -1144,7 +1144,7 @@ Naslov: %4\n     </message>\n     <message>\n         <source>User Interface &amp;language:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Vmesnik uporabnika &amp;jezik:</translation>\n     </message>\n     <message>\n         <source>The user interface language can be set here. This setting will take effect after restarting Bitcoin.</source>\n@@ -1487,11 +1487,11 @@ Naslov: %4\n     </message>\n     <message>\n         <source>Welcome to the Bitcoin RPC console.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Dobrodo\u0161li na Bitcoin RPC konzoli.</translation>\n     </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Uporabi pu\u0161\u010dice za gor in dol za navigacijo po zgodovini in &lt;b&gt;Ctrl-L&lt;/b&gt; za izbris izpisa na ekranu.</translation>\n     </message>\n     <message>\n         <source>Type &lt;b&gt;help&lt;/b&gt; for an overview of available commands.</source>\n@@ -1847,7 +1847,7 @@ Naslov: %4\n     </message>\n     <message>\n         <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Celotni znesek presega va\u0161e stanje, ko je zara\u010dunana 1% provizija.</translation>\n     </message>\n     <message>\n         <source>Duplicate address found, can only send to each address once per send operation.</source>\n@@ -2626,7 +2626,7 @@ Naslov: %4\n     </message>\n     <message>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Pove\u017eite se z vozli\u0161\u010dem za pridobitev naslovov uporabnikov in nato prekinite povezavo.</translation>\n     </message>\n     <message>\n         <source>Specify your own public address</source>\n@@ -2638,7 +2638,7 @@ Naslov: %4\n     </message>\n     <message>\n         <source>Number of seconds to keep misbehaving peers from reconnecting (default: 86400)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0160tevilo sekund za te\u017eavo pri vzpostavitvi povezave med uporabniki (privzeto: 86400)</translation>\n     </message>\n     <message>\n         <source>An error occurred while setting up the RPC port %u for listening on IPv4: %s</source>\n@@ -3268,11 +3268,11 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Unable to bind to %s on this computer (bind returned error %d, %s)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Nemogo\u010de je povezati s/z %s na tem ra\u010dunalniku (povezava je vrnila napaka %d, %s)</translation>\n     </message>\n     <message>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Omogo\u010di DNS poizvedbe za -addnode, -seednode in -connect.</translation>\n     </message>\n     <message>\n         <source>Loading addresses...</source>\n@@ -3296,27 +3296,27 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Invalid -proxy address: &apos;%s&apos;</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Neveljaven -proxy naslov: &apos;%s&apos;</translation>\n     </message>\n     <message>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Neznano omre\u017eje dolo\u010deno v -onlynet: &apos;%s&apos;.</translation>\n     </message>\n     <message>\n         <source>Unknown -socks proxy version requested: %i</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Neznano -socks zahtevan zastopnik razli\u010dice: %i</translation>\n     </message>\n     <message>\n         <source>Cannot resolve -bind address: &apos;%s&apos;</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Nemogo\u010de re\u0161iti -bind naslova: &apos;%s&apos;</translation>\n     </message>\n     <message>\n         <source>Cannot resolve -externalip address: &apos;%s&apos;</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Nemogo\u010de re\u0161iti -externalip naslova: &apos;%s&apos;</translation>\n     </message>\n     <message>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos;</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Neveljavna koli\u010dina za -paytxfee=&lt;amount&gt;: &apos;%s&apos;</translation>\n     </message>\n     <message>\n         <source>Invalid amount</source>\n@@ -3344,7 +3344,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>Cannot write default address</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Ni mogo\u010de zapisati privzetega naslova</translation>\n     </message>\n     <message>\n         <source>Rescanning...</source>\n@@ -3356,7 +3356,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <source>To use the %s option</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Za uporabo %s opcije</translation>\n     </message>\n     <message>\n         <source>Error</source>\n@@ -3366,7 +3366,9 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n         <source>You must set rpcpassword=&lt;password&gt; in the configuration file:\n %s\n If the file does not exist, create it with owner-readable-only file permissions.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>Potrebno je nastaviti rpcpassword=&lt;password&gt; v nastavitveni datoteki:\n+%s\n+\u010ce datoteka ne obstaja jo ustvarite z dovoljenjem, da jo lahko bere samo uporabnik.</translation>\n     </message>\n </context>\n </TS>\n\\ No newline at end of file"
      },
      {
        "sha": "54e15a75e00a61cb3ae4cd7f16aa1bb0a100b1f2",
        "filename": "src/qt/locale/bitcoin_th_TH.ts",
        "status": "modified",
        "additions": 48,
        "deletions": 48,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_th_TH.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_th_TH.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_th_TH.ts?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -35,7 +35,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     <name>AddressBookPage</name>\n     <message>\n         <source>Double-click to edit address or label</source>\n-        <translation>\u0e14\u0e31\u0e1a\u0e40\u0e1a\u0e34\u0e25\u0e04\u0e25\u0e34\u0e01 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e01\u0e49\u0e44\u0e02\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48 \u0e2b\u0e23\u0e37\u0e2d\u0e0a\u0e37\u0e48\u0e2d</translation>\n+        <translation>\u0e14\u0e31\u0e1a\u0e40\u0e1a\u0e34\u0e49\u0e25\u0e04\u0e25\u0e34\u0e01 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e01\u0e49\u0e44\u0e02\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48 \u0e2b\u0e23\u0e37\u0e2d\u0e0a\u0e37\u0e48\u0e2d</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -75,7 +75,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>&amp;Delete</source>\n-        <translation>\u0e25\u0e1a</translation>\n+        <translation>&amp;\u0e25\u0e1a</translation>\n     </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n@@ -119,7 +119,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e04\u0e31\u0e48\u0e19\u0e44\u0e1f\u0e25\u0e4c\u0e14\u0e49\u0e27\u0e22\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e2b\u0e21\u0e32\u0e22\u0e08\u0e38\u0e25\u0e20\u0e32\u0e04 (*.csv)</translation>\n     </message>\n     <message>\n         <source>Exporting Failed</source>\n@@ -165,23 +165,23 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;10 or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e43\u0e2a\u0e48\u0e23\u0e2b\u0e31\u0e2a\u0e1c\u0e48\u0e32\u0e19\u0e43\u0e2b\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19. &lt;br/&gt; \u0e01\u0e23\u0e38\u0e13\u0e32\u0e43\u0e0a\u0e49\u0e23\u0e2b\u0e31\u0e2a\u0e1c\u0e48\u0e32\u0e19\u0e02\u0e2d\u0e07 &lt;b&gt; 10 \u0e2b\u0e23\u0e37\u0e2d\u0e41\u0e1a\u0e1a\u0e2a\u0e38\u0e48\u0e21\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23 &lt;/ b&gt; \u0e2b\u0e23\u0e37\u0e2d &lt;b&gt; \u0e41\u0e1b\u0e14\u0e2b\u0e23\u0e37\u0e2d\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32\u0e04\u0e33 &lt;/ b&gt;</translation>\n     </message>\n     <message>\n         <source>Encrypt wallet</source>\n         <translation>\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e2a\u0e15\u0e32\u0e07\u0e04\u0e4c\u0e17\u0e35\u0e48\u0e40\u0e02\u0e49\u0e32\u0e23\u0e2b\u0e31\u0e2a</translation>\n     </message>\n     <message>\n         <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e01\u0e32\u0e23\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e01\u0e32\u0e23\u0e19\u0e35\u0e49\u0e15\u0e49\u0e2d\u0e07\u0e21\u0e35\u0e23\u0e2b\u0e31\u0e2a\u0e1c\u0e48\u0e32\u0e19\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e1b\u0e25\u0e14\u0e25\u0e47\u0e2d\u0e04\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19</translation>\n     </message>\n     <message>\n         <source>Unlock wallet</source>\n         <translation>\u0e40\u0e1b\u0e34\u0e14\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e2a\u0e15\u0e32\u0e07\u0e04\u0e4c</translation>\n     </message>\n     <message>\n         <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e01\u0e32\u0e23\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e01\u0e32\u0e23\u0e19\u0e35\u0e49\u0e15\u0e49\u0e2d\u0e07\u0e21\u0e35\u0e23\u0e2b\u0e31\u0e2a\u0e1c\u0e48\u0e32\u0e19\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e43\u0e19\u0e01\u0e32\u0e23\u0e16\u0e2d\u0e14\u0e23\u0e2b\u0e31\u0e2a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19</translation>\n     </message>\n     <message>\n         <source>Decrypt wallet</source>\n@@ -229,23 +229,23 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19\u0e40\u0e02\u0e49\u0e32\u0e23\u0e2b\u0e31\u0e2a\u0e25\u0e49\u0e21\u0e40\u0e2b\u0e25\u0e27\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e20\u0e32\u0e22\u0e43\u0e19 \u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19\u0e02\u0e2d\u0e07\u0e04\u0e38\u0e13\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e40\u0e02\u0e49\u0e32\u0e23\u0e2b\u0e31\u0e2a</translation>\n     </message>\n     <message>\n         <source>The supplied passphrases do not match.</source>\n         <translation>\u0e23\u0e2b\u0e31\u0e2a\u0e1c\u0e48\u0e32\u0e19\u0e17\u0e35\u0e48\u0e04\u0e38\u0e13\u0e01\u0e23\u0e2d\u0e01\u0e44\u0e21\u0e48\u0e15\u0e23\u0e07\u0e01\u0e31\u0e19</translation>\n     </message>\n     <message>\n         <source>Wallet unlock failed</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e1b\u0e25\u0e14\u0e25\u0e47\u0e2d\u0e04\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19\u0e25\u0e49\u0e21\u0e40\u0e2b\u0e25\u0e27</translation>\n     </message>\n     <message>\n         <source>The passphrase entered for the wallet decryption was incorrect.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e1b\u0e49\u0e2d\u0e19\u0e23\u0e2b\u0e31\u0e2a\u0e1c\u0e48\u0e32\u0e19\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e16\u0e2d\u0e14\u0e23\u0e2b\u0e31\u0e2a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19\u0e44\u0e21\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07</translation>\n     </message>\n     <message>\n         <source>Wallet decryption failed</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e16\u0e2d\u0e14\u0e23\u0e2b\u0e31\u0e2a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19\u0e25\u0e49\u0e21\u0e40\u0e2b\u0e25\u0e27</translation>\n     </message>\n     <message>\n         <source>Wallet passphrase was successfully changed.</source>\n@@ -260,39 +260,39 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Synchronizing with network...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e01\u0e33\u0e25\u0e31\u0e07\u0e17\u0e33\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e2b\u0e49\u0e15\u0e23\u0e07\u0e01\u0e31\u0e19\u0e01\u0e31\u0e1a\u0e40\u0e04\u0e23\u0e37\u0e2d\u0e02\u0e48\u0e32\u0e22 ...</translation>\n     </message>\n     <message>\n         <source>&amp;Overview</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0e20\u0e32\u0e1e\u0e23\u0e27\u0e21</translation>\n     </message>\n     <message>\n         <source>Node</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Show general overview of wallet</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e41\u0e2a\u0e14\u0e07\u0e20\u0e32\u0e1e\u0e23\u0e27\u0e21\u0e17\u0e31\u0e48\u0e27\u0e44\u0e1b\u0e02\u0e2d\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19</translation>\n     </message>\n     <message>\n         <source>&amp;Transactions</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0e01\u0e32\u0e23\u0e17\u0e33\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23</translation>\n     </message>\n     <message>\n         <source>Browse transaction history</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e40\u0e23\u0e35\u0e22\u0e01\u0e14\u0e39\u0e1b\u0e23\u0e30\u0e27\u0e31\u0e15\u0e34\u0e01\u0e32\u0e23\u0e17\u0e33\u0e18\u0e38\u0e23\u0e01\u0e23\u0e23\u0e21</translation>\n     </message>\n     <message>\n         <source>E&amp;xit</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Quit application</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21</translation>\n     </message>\n     <message>\n         <source>Show information about Bitcoin</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a Bitcoin</translation>\n     </message>\n     <message>\n         <source>About &amp;Qt</source>\n@@ -304,7 +304,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>&amp;Options...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0e15\u0e31\u0e27\u0e40\u0e25\u0e37\u0e2d\u0e01...</translation>\n     </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n@@ -352,7 +352,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Change the passphrase used for wallet encryption</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e23\u0e2b\u0e31\u0e2a\u0e1c\u0e48\u0e32\u0e19\u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e23\u0e2b\u0e31\u0e2a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19</translation>\n     </message>\n     <message>\n         <source>&amp;Debug window</source>\n@@ -404,23 +404,23 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>&amp;File</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0e44\u0e1f\u0e25\u0e4c</translation>\n     </message>\n     <message>\n         <source>&amp;Settings</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0e01\u0e32\u0e23\u0e15\u0e31\u0e49\u0e07\u0e04\u0e48\u0e32</translation>\n     </message>\n     <message>\n         <source>&amp;Help</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0e0a\u0e48\u0e27\u0e22\u0e40\u0e2b\u0e25\u0e37\u0e2d</translation>\n     </message>\n     <message>\n         <source>Tabs toolbar</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e41\u0e16\u0e1a\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d</translation>\n     </message>\n     <message>\n         <source>[testnet]</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>[testnet]</translation>\n     </message>\n     <message>\n         <source>Bitcoin Core</source>\n@@ -460,7 +460,7 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message numerus=\"yes\">\n         <source>%n active connection(s) to Bitcoin network</source>\n-        <translation type=\"unfinished\"><numerusform></numerusform></translation>\n+        <translation><numerusform>%n \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e01\u0e32\u0e23\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d\u0e01\u0e31\u0e1a\u0e40\u0e04\u0e23\u0e37\u0e2d\u0e02\u0e48\u0e32\u0e22 Bitcoin</numerusform></translation>\n     </message>\n     <message>\n         <source>No block source available...</source>\n@@ -520,19 +520,19 @@ This product includes software developed by the OpenSSL Project for use in the O\n     </message>\n     <message>\n         <source>Up to date</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e17\u0e31\u0e19\u0e2a\u0e21\u0e31\u0e22</translation>\n     </message>\n     <message>\n         <source>Catching up...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e08\u0e31\u0e1a\u0e44\u0e14\u0e49...</translation>\n     </message>\n     <message>\n         <source>Sent transaction</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e17\u0e35\u0e48\u0e2a\u0e48\u0e07</translation>\n     </message>\n     <message>\n         <source>Incoming transaction</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e01\u0e32\u0e23\u0e17\u0e33\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e02\u0e32\u0e40\u0e02\u0e49\u0e32</translation>\n     </message>\n     <message>\n         <source>Date: %1\n@@ -544,11 +544,11 @@ Address: %4\n     </message>\n     <message>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19\u0e16\u0e39\u0e01 &lt;b&gt;\u0e40\u0e02\u0e49\u0e32\u0e23\u0e2b\u0e31\u0e2a&lt;/b&gt; \u0e41\u0e25\u0e30\u0e43\u0e19\u0e02\u0e13\u0e30\u0e19\u0e35\u0e49 &lt;b&gt;\u0e1b\u0e25\u0e14\u0e25\u0e47\u0e2d\u0e04\u0e41\u0e25\u0e49\u0e27&lt;/b&gt;</translation>\n     </message>\n     <message>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19\u0e16\u0e39\u0e01 &lt;b&gt;\u0e40\u0e02\u0e49\u0e32\u0e23\u0e2b\u0e31\u0e2a&lt;/b&gt; \u0e41\u0e25\u0e30\u0e43\u0e19\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19 &lt;b&gt;\u0e25\u0e47\u0e2d\u0e04 &lt;/b&gt;</translation>\n     </message>\n     <message>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n@@ -797,11 +797,11 @@ Address: %4\n     <name>EditAddressDialog</name>\n     <message>\n         <source>Edit Address</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e41\u0e01\u0e49\u0e44\u0e02\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48</translation>\n     </message>\n     <message>\n         <source>&amp;Label</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0e0a\u0e37\u0e48\u0e2d</translation>\n     </message>\n     <message>\n         <source>The label associated with this address list entry</source>\n@@ -813,39 +813,39 @@ Address: %4\n     </message>\n     <message>\n         <source>&amp;Address</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48</translation>\n     </message>\n     <message>\n         <source>New receiving address</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e1c\u0e39\u0e49\u0e23\u0e31\u0e1a\u0e43\u0e2b\u0e21\u0e48</translation>\n     </message>\n     <message>\n         <source>New sending address</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e1c\u0e39\u0e49\u0e2a\u0e48\u0e07\u0e43\u0e2b\u0e21\u0e48</translation>\n     </message>\n     <message>\n         <source>Edit receiving address</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e41\u0e01\u0e49\u0e44\u0e02\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e1c\u0e39\u0e49\u0e23\u0e31\u0e1a</translation>\n     </message>\n     <message>\n         <source>Edit sending address</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e41\u0e01\u0e49\u0e44\u0e02\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e1c\u0e39\u0e49\u0e2a\u0e48\u0e07</translation>\n     </message>\n     <message>\n         <source>The entered address &quot;%1&quot; is already in the address book.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e1b\u0e49\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48 &quot;%1&quot; \u0e17\u0e35\u0e48\u0e21\u0e35\u0e2d\u0e22\u0e39\u0e48\u0e41\u0e25\u0e49\u0e27\u0e43\u0e19\u0e2a\u0e21\u0e38\u0e14\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48</translation>\n     </message>\n     <message>\n         <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n         <translation type=\"unfinished\"/>\n     </message>\n     <message>\n         <source>Could not unlock wallet.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e1b\u0e25\u0e14\u0e25\u0e47\u0e2d\u0e04\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e40\u0e07\u0e34\u0e19</translation>\n     </message>\n     <message>\n         <source>New key generation failed.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e01\u0e38\u0e0d\u0e41\u0e08\u0e43\u0e2b\u0e21\u0e48\u0e25\u0e49\u0e21\u0e40\u0e2b\u0e25\u0e27</translation>\n     </message>\n </context>\n <context>\n@@ -992,7 +992,7 @@ Address: %4\n     <name>OptionsDialog</name>\n     <message>\n         <source>Options</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e15\u0e31\u0e27\u0e40\u0e25\u0e37\u0e2d\u0e01</translation>\n     </message>\n     <message>\n         <source>&amp;Main</source>\n@@ -1207,7 +1207,7 @@ Address: %4\n     <name>OverviewPage</name>\n     <message>\n         <source>Form</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e23\u0e39\u0e1b</translation>\n     </message>\n     <message>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n@@ -1251,7 +1251,7 @@ Address: %4\n     </message>\n     <message>\n         <source>&lt;b&gt;Recent transactions&lt;/b&gt;</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&lt;b&gt;\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e17\u0e33\u0e18\u0e38\u0e23\u0e01\u0e23\u0e23\u0e21\u0e25\u0e48\u0e32\u0e2a\u0e38\u0e14&lt;/b&gt;</translation>\n     </message>\n     <message>\n         <source>out of sync</source>\n@@ -1695,7 +1695,7 @@ Address: %4\n     <name>SendCoinsDialog</name>\n     <message>\n         <source>Send Coins</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e2a\u0e48\u0e07\u0e40\u0e2b\u0e23\u0e35\u0e22\u0e0d</translation>\n     </message>\n     <message>\n         <source>Coin Control Features</source>\n@@ -2127,7 +2127,7 @@ Address: %4\n     </message>\n     <message>\n         <source>[testnet]</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>[testnet]</translation>\n     </message>\n </context>\n <context>\n@@ -2494,7 +2494,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e04\u0e31\u0e48\u0e19\u0e44\u0e1f\u0e25\u0e4c\u0e14\u0e49\u0e27\u0e22\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e2b\u0e21\u0e32\u0e22\u0e08\u0e38\u0e25\u0e20\u0e32\u0e04 (*.csv)</translation>\n     </message>\n     <message>\n         <source>Confirmed</source>\n@@ -2544,7 +2544,7 @@ Address: %4\n     <name>WalletModel</name>\n     <message>\n         <source>Send Coins</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u0e2a\u0e48\u0e07\u0e40\u0e2b\u0e23\u0e35\u0e22\u0e0d</translation>\n     </message>\n </context>\n <context>"
      },
      {
        "sha": "b87d27fe12f6fc5b2df0a62ea3538e3edddd4d45",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 41,
        "deletions": 41,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -917,7 +917,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Set SSL root certificates for payment request (default: -system-)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u8bbe\u7f6eSSL\u6839\u8bc1\u4e66\u7684\u4ed8\u6b3e\u8bf7\u6c42(\u9ed8\u8ba4\uff1a-\u7cfb\u7edf-)</translation>\n     </message>\n     <message>\n         <source>Show splash screen on startup (default: 1)</source>\n@@ -1050,11 +1050,11 @@ Address: %4\n     </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u51fa\u73b0\u5728\u4ea4\u6613\u7684\u9009\u9879\u5361\u7684\u4e0a\u4e0b\u6587\u83dc\u5355\u9879\u7684\u7b2c\u4e09\u65b9\u7f51\u5740 (\u4f8b\u5982\uff1a\u533a\u5757\u94fe\u63a5\u67e5\u8be2) \u3002 %s\u7684URL\u88ab\u66ff\u6362\u4e3a\u4ea4\u6613\u54c8\u5e0c\u3002\u591a\u4e2a\u7684URL\u9700\u8981\u7ad6\u7ebf | \u5206\u9694\u3002</translation>\n     </message>\n     <message>\n         <source>Third party transaction URLs</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u7b2c\u4e09\u65b9\u4ea4\u6613\u7f51\u5740</translation>\n     </message>\n     <message>\n         <source>Active command-line options that override above options:</source>\n@@ -1074,7 +1074,7 @@ Address: %4\n     </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(0 = \u81ea\u52a8, &lt;0 = \u79bb\u5f00\u5f88\u591a\u514d\u8d39\u7684\u6838\u5fc3)</translation>\n     </message>\n     <message>\n         <source>W&amp;allet</source>\n@@ -1086,15 +1086,15 @@ Address: %4\n     </message>\n     <message>\n         <source>Enable coin &amp;control features</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u542f\u52a8\u8d27\u5e01 &amp;\u63a7\u5236\u529f\u80fd</translation>\n     </message>\n     <message>\n         <source>If you disable the spending of unconfirmed change, the change from a transaction cannot be used until that transaction has at least one confirmation. This also affects how your balance is computed.</source>\n         <translation>\u5982\u679c\u7981\u7528\u672a\u786e\u8ba4\u7684\u96f6\u94b1\uff0c\u5219\u96f6\u94b1\u81f3\u5c11\u9700\u89811\u4e2a\u786e\u8ba4\u624d\u80fd\u4f7f\u7528\u3002\u540c\u65f6\u8d26\u6237\u4f59\u989d\u663e\u793a\u4f1a\u53d7\u5230\u5f71\u54cd\u3002</translation>\n     </message>\n     <message>\n         <source>&amp;Spend unconfirmed change</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>&amp;\u9009\u62e9\u672a\u7ecf\u786e\u8ba4\u7684\u82b1\u8d39</translation>\n     </message>\n     <message>\n         <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n@@ -1351,15 +1351,15 @@ Address: %4\n     </message>\n     <message>\n         <source>Error: Cannot parse configuration file: %1. Only use key=value syntax.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u9519\u8bef: \u65e0\u6cd5\u89e3\u6790\u914d\u7f6e\u6587\u4ef6: %1. \u53ea\u6709\u94a5\u5319=\u91cd\u8981\u7684\u79c1\u5319.</translation>\n     </message>\n     <message>\n         <source>Error: Invalid combination of -regtest and -testnet.</source>\n         <translation>\u9519\u8bef\uff1a\u65e0\u6548\u7684 -regtest \u4e0e -testnet \u7ed3\u5408\u4f53\u3002</translation>\n     </message>\n     <message>\n         <source>Bitcoin Core didn&apos;t yet exit safely...</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u6bd4\u7279\u5e01\u6838\u5fc3\u94b1\u5305\u6ca1\u6709\u5b89\u5168\u9000\u51fa....</translation>\n     </message>\n     <message>\n         <source>Enter a Bitcoin address (e.g. 1NS17iag9jJgTHD1VXjvLCEnZuQ3rJDE9L)</source>\n@@ -2667,7 +2667,7 @@ Address: %4\n     </message>\n     <message>\n         <source>Bitcoin Core RPC client version</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u6bd4\u7279\u5e01\u6838\u5fc3\u94b1\u5305RPC\u5ba2\u6237\u7aef\u7248\u672c</translation>\n     </message>\n     <message>\n         <source>Run in the background as a daemon and accept commands</source>\n@@ -2722,7 +2722,7 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>Continuously rate-limit free transactions to &lt;n&gt;*1000 bytes per minute (default:15)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u81ea\u7531\u4ea4\u6613\u4e0d\u65ad\u7684\u901f\u7387\u9650\u5236\u4e3a&lt;n&gt;*1000 \u5b57\u8282\u6bcf\u5206\u949f(\u9ed8\u8ba4\u503c:15)</translation>\n     </message>\n     <message>\n         <source>Enter regression test mode, which uses a special chain in which blocks can be solved instantly. This is intended for regression testing tools and app development.</source>\n@@ -2734,7 +2734,7 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>Error: Listening for incoming connections failed (listen returned error %d)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u9519\u8bef: \u76d1\u542c\u63a5\u6536\u8fde\u63a5\u5931\u8d25 (\u76d1\u542c\u9519\u8bef %d)</translation>\n     </message>\n     <message>\n         <source>Error: The transaction was rejected! This might happen if some of the coins in your wallet were already spent, such as if you used a copy of wallet.dat and coins were spent in the copy but not marked as spent here.</source>\n@@ -2750,35 +2750,35 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>Fees smaller than this are considered zero fee (for transaction creation) (default:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u6bd4\u8fd9\u624b\u7eed\u8d39\u66f4\u5c0f\u7684\u88ab\u8ba4\u4e3a\u96f6\u624b\u7eed\u8d39 (\u4ea4\u6613\u4ea7\u751f) (\u9ed8\u8ba4:</translation>\n     </message>\n     <message>\n         <source>Flush database activity from memory pool to disk log every &lt;n&gt; megabytes (default: 100)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u4ece\u7f13\u51b2\u6c60\u6e05\u7406\u78c1\u76d8\u6570\u636e\u5e93\u6d3b\u52a8\u65e5\u5fd7\u6bcf&lt;n&gt;\u5146\u5b57\u8282 (\u9ed8\u8ba4\u503c: 100)</translation>\n     </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: 3)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u5982\u4f55\u6709\u6548\u7684\u9a8c\u8bc1checkblocks\u533a\u5757(0-4, \u9ed8\u8ba4\u503c: 3)</translation>\n     </message>\n     <message>\n         <source>In this mode -genproclimit controls how many blocks are generated immediately.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u5728-genproclimit\u8fd9\u79cd\u6a21\u5f0f\u4e0b\u63a7\u5236\u4ea7\u51fa\u591a\u5c11\u533a\u5757</translation>\n     </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u8bbe\u7f6e\u811a\u672c\u9a8c\u8bc1\u7684\u7a0b\u5e8f (%u \u5230 %d, 0 = \u81ea\u52a8, &lt;0 = \u4fdd\u7559\u81ea\u7531\u7684\u6838\u5fc3, \u9ed8\u8ba4\u503c: %d)</translation>\n     </message>\n     <message>\n         <source>Set the processor limit for when generation is on (-1 = unlimited, default: -1)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u8bbe\u7f6e\u5904\u7406\u5668\u751f\u6210\u7684\u9650\u5236 (-1 = \u65e0\u9650, \u9ed8\u8ba4\u503c: -1)</translation>\n     </message>\n     <message>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>\u8fd9\u662f\u6d4b\u8bd5\u7528\u7684\u9884\u53d1\u5e03\u7248\u672c - \u8bf7\u8c28\u614e\u4f7f\u7528 - \u4e0d\u8981\u7528\u6765\u6316\u77ff\uff0c\u6216\u8005\u5728\u6b63\u5f0f\u5546\u7528\u73af\u5883\u4e0b\u4f7f\u7528</translation>\n     </message>\n     <message>\n         <source>Unable to bind to %s on this computer. Bitcoin Core is probably already running.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u65e0\u6cd5 %s\u7684\u7ed1\u5b9a\u5230\u7535\u8111\u4e0a\uff0c\u6bd4\u7279\u5e01\u6838\u5fc3\u94b1\u5305\u53ef\u80fd\u5df2\u7ecf\u5728\u8fd0\u884c\u3002</translation>\n     </message>\n     <message>\n         <source>Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)</source>\n@@ -2810,11 +2810,11 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>(default: 1)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(\u9ed8\u8ba4\u503c: 1)</translation>\n     </message>\n     <message>\n         <source>(default: wallet.dat)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>(\u9ed8\u8ba4: wallet.dat)</translation>\n     </message>\n     <message>\n         <source>&lt;category&gt; can be:</source>\n@@ -2850,19 +2850,19 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>Connection options:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u8fde\u63a5\u9009\u9879\uff1a</translation>\n     </message>\n     <message>\n         <source>Corrupted block database detected</source>\n         <translation>\u68c0\u6d4b\u53d1\u73b0\u6570\u636e\u5757\u6570\u636e\u5e93\u635f\u574f\u3002\u8bf7\u4f7f\u7528 -reindex\u53c2\u6570\u91cd\u542f\u5ba2\u6237\u7aef\u3002</translation>\n     </message>\n     <message>\n         <source>Debugging/Testing options:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u8c03\u8bd5/\u6d4b\u8bd5\u9009\u9879\uff1a</translation>\n     </message>\n     <message>\n         <source>Disable safemode, override a real safe mode event (default: 0)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u7981\u6b62\u4f7f\u7528\u5b89\u5168\u6a21\u5f0f\uff0c\u91cd\u65b0\u5199\u5165\u4e00\u4e2a\u771f\u6b63\u7684\u5b89\u5168\u6a21\u5f0f\u65e5\u5fd7(\u9ed8\u8ba4\u503c: 0)</translation>\n     </message>\n     <message>\n         <source>Discover own IP address (default: 1 when listening and no -externalip)</source>\n@@ -2954,15 +2954,15 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>Fees smaller than this are considered zero fee (for relaying) (default:</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u6bd4\u8fd9\u624b\u7eed\u8d39\u66f4\u5c0f\u7684\u88ab\u8ba4\u4e3a\u96f6\u624b\u7eed\u8d39 (\u4e2d\u7ee7) (\u9ed8\u8ba4\u503c: </translation>\n     </message>\n     <message>\n         <source>Find peers using DNS lookup (default: 1 unless -connect)</source>\n         <translation>\u901a\u8fc7DNS\u67e5\u627e\u8282\u70b9(\u7f3a\u7701\uff1a1 \u9664\u975e\u4f7f\u7528 -connect \u9009\u9879)</translation>\n     </message>\n     <message>\n         <source>Force safe mode (default: 0)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u5f3a\u5236\u5b89\u5168\u6a21\u5f0f(\u9ed8\u8ba4\u503c: 0)</translation>\n     </message>\n     <message>\n         <source>Generate coins (default: 0)</source>\n@@ -3010,7 +3010,7 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>Set database cache size in megabytes (%d to %d, default: %d)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u8bbe\u7f6e\u4ee5MB\u4e3a\u5355\u4f4d\u7684\u6570\u636e\u5e93\u7f13\u5b58\u5927\u5c0f(%d \u5230 %d, \u9ed8\u8ba4\u503c: %d)</translation>\n     </message>\n     <message>\n         <source>Set maximum block size in bytes (default: %d)</source>\n@@ -3070,7 +3070,7 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u65e0\u6cd5\u83b7\u53d6\u6570\u636e\u76ee\u5f55\u7684 %s. \u6bd4\u7279\u5e01\u6838\u5fc3\u94b1\u5305\u53ef\u80fd\u5df2\u7ecf\u5728\u8fd0\u884c.</translation>\n     </message>\n     <message>\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n@@ -3098,11 +3098,11 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>Limit size of signature cache to &lt;n&gt; entries (default: 50000)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u7b7e\u540d\u7f13\u51b2\u5927\u5c0f\u9650\u5236\u6bcf&lt;n&gt; \u6761\u76ee (\u9ed8\u8ba4\u503c: 50000)</translation>\n     </message>\n     <message>\n         <source>Log transaction priority and fee per kB when mining blocks (default: 0)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u5f00\u91c7\u533a\u5757\u65f6\uff0c\u65e5\u5fd7\u4f18\u5148\u7ea7\u548c\u624b\u7eed\u8d39\u6bcfKB (\u9ed8\u8ba4\u503c: 0)</translation>\n     </message>\n     <message>\n         <source>Maintain a full transaction index (default: 0)</source>\n@@ -3126,39 +3126,39 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>Print block on startup, if found in block index</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u5982\u679c\u5728\u641c\u7d22\u533a\u5757\u4e2d\u627e\u5230\uff0c\u8bf7\u542f\u52a8\u6253\u5370\u533a\u5757</translation>\n     </message>\n     <message>\n         <source>Print block tree on startup (default: 0)</source>\n-        <translation>\u542f\u52a8\u65f6\u6253\u5370\u5757\u6811 (\u9ed8\u8ba4: 0)</translation>\n+        <translation>\u542f\u52a8\u65f6\u6253\u5370\u533a\u5757\u6811 (\u9ed8\u8ba4\u503c: 0)</translation>\n     </message>\n     <message>\n         <source>RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>RPC SSL\u9009\u9879\uff1a(\u89c1\u6709\u5173\u6bd4\u7279\u5e01\u8bbe\u7f6e\u7528\u4e8eSSL\u8bf4\u660e\u7684\u7ef4\u57fa\u767e\u79d1)</translation>\n     </message>\n     <message>\n         <source>RPC server options:</source>\n         <translation>RPC \u670d\u52a1\u5668\u9009\u9879\uff1a</translation>\n     </message>\n     <message>\n         <source>Randomly drop 1 of every &lt;n&gt; network messages</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u968f\u673a\u6bcf1\u4e2a\u4e22\u5931\u6d4b\u8bd5&lt;n&gt;\u7f51\u7edc\u4fe1\u606f</translation>\n     </message>\n     <message>\n         <source>Randomly fuzz 1 of every &lt;n&gt; network messages</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u968f\u673a\u6bcf1\u4e2a\u6a21\u62df\u6d4b\u8bd5&lt;n&gt;\u7f51\u7edc\u4fe1\u606f</translation>\n     </message>\n     <message>\n         <source>Run a thread to flush wallet periodically (default: 1)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u8fd0\u884c\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5b9a\u65f6\u6e05\u7406\u94b1\u5305 (\u9ed8\u8ba4\u503c\uff1a1)</translation>\n     </message>\n     <message>\n         <source>SSL options: (see the Bitcoin Wiki for SSL setup instructions)</source>\n         <translation>SSL\u9009\u9879\uff1a(\u53c2\u89c1Bitcoin Wiki\u5173\u4e8eSSL\u8bbe\u7f6e\u680f\u76ee)</translation>\n     </message>\n     <message>\n         <source>Send command to Bitcoin Core</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u53d1\u9001\u6307\u4ee4\u5230\u6bd4\u7279\u5e01\u6838\u5fc3\u94b1\u5305</translation>\n     </message>\n     <message>\n         <source>Send trace/debug info to console instead of debug.log file</source>\n@@ -3170,15 +3170,15 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>Sets the DB_PRIVATE flag in the wallet db environment (default: 1)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u8bbe\u7f6eDB_PRIVATE\u94b1\u5305\u6807\u5fd7DB\u73af\u5883 (\u9ed8\u8ba4\u503c: 1)</translation>\n     </message>\n     <message>\n         <source>Show all debugging options (usage: --help -help-debug)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u663e\u793a\u6240\u6709\u8c03\u8bd5\u9009\u9879 (\u7528\u6cd5: --\u5e2e\u52a9 -\u5e2e\u52a9\u8c03\u8bd5)</translation>\n     </message>\n     <message>\n         <source>Show benchmark information (default: 0)</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u663e\u793a\u6807\u51c6\u4fe1\u606f (\u9ed8\u8ba4\u503c: 0)</translation>\n     </message>\n     <message>\n         <source>Shrink debug.log file on client startup (default: 1 when no -debug)</source>\n@@ -3194,7 +3194,7 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>Start Bitcoin Core Daemon</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u5f00\u542f\u6bd4\u7279\u5e01\u6838\u5fc3\u94b1\u5305\u5b88\u62a4\u8fdb\u7a0b</translation>\n     </message>\n     <message>\n         <source>System error: </source>\n@@ -3238,7 +3238,7 @@ rpcpassword=%s\n     </message>\n     <message>\n         <source>on startup</source>\n-        <translation type=\"unfinished\"/>\n+        <translation>\u542f\u52a8\u4e2d</translation>\n     </message>\n     <message>\n         <source>version</source>"
      },
      {
        "sha": "74fb64ace300cc42f15ccb43895ecbde2250641a",
        "filename": "src/qt/macdockiconhandler.mm",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/macdockiconhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/macdockiconhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macdockiconhandler.mm?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -62,6 +62,8 @@ - (void)handleDockClickEvent:(NSAppleEventDescriptor*)event withReplyEvent:(NSAp\n     this->setMainWindow(NULL);\n #if QT_VERSION < 0x050000\n     qt_mac_set_dock_menu(this->m_dockMenu);\n+#elif QT_VERSION >= 0x050200\n+    this->m_dockMenu->setAsDockMenu();\n #endif\n     [pool release];\n }"
      },
      {
        "sha": "3d588cd317127566e1b12d37ed5657840d27db93",
        "filename": "src/qt/notificator.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/notificator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/notificator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -28,8 +28,10 @@\n #endif\n \n \n+#ifdef USE_DBUS\n // https://wiki.ubuntu.com/NotificationDevelopmentGuidelines recommends at least 128\n const int FREEDESKTOP_NOTIFICATION_ICON_SIZE = 128;\n+#endif\n \n Notificator::Notificator(const QString &programName, QSystemTrayIcon *trayicon, QWidget *parent) :\n     QObject(parent),"
      },
      {
        "sha": "abfd4123e0f549aafc956403bbb038be8697c878",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -14,7 +14,7 @@\n #include \"monitoreddatamapper.h\"\n #include \"optionsmodel.h\"\n \n-#include \"main.h\" // for CTransaction::nMinTxFee and MAX_SCRIPTCHECK_THREADS\n+#include \"main.h\" // for CTransaction::minTxFee and MAX_SCRIPTCHECK_THREADS\n #include \"netbase.h\"\n #include \"txdb.h\" // for -dbcache defaults\n \n@@ -101,7 +101,7 @@ OptionsDialog::OptionsDialog(QWidget *parent) :\n #endif\n \n     ui->unit->setModel(new BitcoinUnits(this));\n-    ui->transactionFee->setSingleStep(CTransaction::nMinTxFee);\n+    ui->transactionFee->setSingleStep(CTransaction::minTxFee.GetFeePerK());\n \n     /* Widget-to-option mapper */\n     mapper = new MonitoredDataMapper(this);\n@@ -151,6 +151,7 @@ void OptionsDialog::setModel(OptionsModel *model)\n     /* Wallet */\n     connect(ui->spendZeroConfChange, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning()));\n     /* Network */\n+    connect(ui->allowIncoming, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning()));\n     connect(ui->connectSocks, SIGNAL(clicked(bool)), this, SLOT(showRestartWarning()));\n     /* Display */\n     connect(ui->lang, SIGNAL(valueChanged()), this, SLOT(showRestartWarning()));\n@@ -171,6 +172,7 @@ void OptionsDialog::setMapper()\n \n     /* Network */\n     mapper->addMapping(ui->mapPortUpnp, OptionsModel::MapPortUPnP);\n+    mapper->addMapping(ui->allowIncoming, OptionsModel::Listen);\n \n     mapper->addMapping(ui->connectSocks, OptionsModel::ProxyUse);\n     mapper->addMapping(ui->proxyIp, OptionsModel::ProxyIP);"
      },
      {
        "sha": "4dafd9d2afabd7799fe30f870730a5cd37ce402e",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 14,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -94,7 +94,7 @@ void OptionsModel::Init()\n #ifdef ENABLE_WALLET\n     if (!settings.contains(\"nTransactionFee\"))\n         settings.setValue(\"nTransactionFee\", (qint64)DEFAULT_TRANSACTION_FEE);\n-    nTransactionFee = settings.value(\"nTransactionFee\").toLongLong(); // if -paytxfee is set, this will be overridden later in init.cpp\n+    payTxFee = CFeeRate(settings.value(\"nTransactionFee\").toLongLong()); // if -paytxfee is set, this will be overridden later in init.cpp\n     if (mapArgs.count(\"-paytxfee\"))\n         addOverriddenOption(\"-paytxfee\");\n \n@@ -106,14 +106,15 @@ void OptionsModel::Init()\n \n     // Network\n     if (!settings.contains(\"fUseUPnP\"))\n-#ifdef USE_UPNP\n-        settings.setValue(\"fUseUPnP\", true);\n-#else\n-        settings.setValue(\"fUseUPnP\", false);\n-#endif\n+        settings.setValue(\"fUseUPnP\", DEFAULT_UPNP);\n     if (!SoftSetBoolArg(\"-upnp\", settings.value(\"fUseUPnP\").toBool()))\n         addOverriddenOption(\"-upnp\");\n \n+    if (!settings.contains(\"fListen\"))\n+        settings.setValue(\"fListen\", DEFAULT_LISTEN);\n+    if (!SoftSetBoolArg(\"-listen\", settings.value(\"fListen\").toBool()))\n+        addOverriddenOption(\"-listen\");\n+\n     if (!settings.contains(\"fUseProxy\"))\n         settings.setValue(\"fUseProxy\", false);\n     if (!settings.contains(\"addrProxy\"))\n@@ -191,15 +192,16 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return settings.value(\"nSocksVersion\", 5);\n \n #ifdef ENABLE_WALLET\n-        case Fee:\n-            // Attention: Init() is called before nTransactionFee is set in AppInit2()!\n+        case Fee: {\n+            // Attention: Init() is called before payTxFee is set in AppInit2()!\n             // To ensure we can change the fee on-the-fly update our QSetting when\n             // opening OptionsDialog, which queries Fee via the mapper.\n-            if (nTransactionFee != settings.value(\"nTransactionFee\").toLongLong())\n-                settings.setValue(\"nTransactionFee\", (qint64)nTransactionFee);\n-            // Todo: Consider to revert back to use just nTransactionFee here, if we don't want\n+            if (!(payTxFee == CFeeRate(settings.value(\"nTransactionFee\").toLongLong(), 1000)))\n+                settings.setValue(\"nTransactionFee\", (qint64)payTxFee.GetFeePerK());\n+            // Todo: Consider to revert back to use just payTxFee here, if we don't want\n             // -paytxfee to update our QSettings!\n             return settings.value(\"nTransactionFee\");\n+        }\n         case SpendZeroConfChange:\n             return settings.value(\"bSpendZeroConfChange\");\n #endif\n@@ -217,6 +219,8 @@ QVariant OptionsModel::data(const QModelIndex & index, int role) const\n             return settings.value(\"nDatabaseCache\");\n         case ThreadsScriptVerif:\n             return settings.value(\"nThreadsScriptVerif\");\n+        case Listen:\n+            return settings.value(\"fListen\");\n         default:\n             return QVariant();\n         }\n@@ -288,12 +292,14 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n         }\n         break;\n #ifdef ENABLE_WALLET\n-        case Fee: // core option - can be changed on-the-fly\n+        case Fee: { // core option - can be changed on-the-fly\n             // Todo: Add is valid check  and warn via message, if not\n-            nTransactionFee = value.toLongLong();\n-            settings.setValue(\"nTransactionFee\", (qint64)nTransactionFee);\n+            qint64 nTransactionFee = value.toLongLong();\n+            payTxFee = CFeeRate(nTransactionFee, 1000);\n+            settings.setValue(\"nTransactionFee\", nTransactionFee);\n             emit transactionFeeChanged(nTransactionFee);\n             break;\n+        }\n         case SpendZeroConfChange:\n             if (settings.value(\"bSpendZeroConfChange\") != value) {\n                 settings.setValue(\"bSpendZeroConfChange\", value);\n@@ -340,6 +346,12 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n                 setRestartRequired(true);\n             }\n             break;\n+        case Listen:\n+            if (settings.value(\"fListen\") != value) {\n+                settings.setValue(\"fListen\", value);\n+                setRestartRequired(true);\n+            }\n+            break;\n         default:\n             break;\n         }"
      },
      {
        "sha": "2596682d07a4642ffe6581ed94a575820323d91b",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -42,6 +42,7 @@ class OptionsModel : public QAbstractListModel\n         ThreadsScriptVerif,     // int\n         DatabaseCache,          // int\n         SpendZeroConfChange,    // bool\n+        Listen,                 // bool\n         OptionIDRowCount,\n     };\n "
      },
      {
        "sha": "464f995eb63315b14a9bf9935203dd9d2e975abe",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -17,6 +17,7 @@\n #include <QDebug>\n #include <QSslCertificate>\n \n+using namespace std;\n \n class SSLVerifyError : public std::runtime_error\n {"
      },
      {
        "sha": "3c4861a4d4bdb81ccdb1c82a637e4e68d7a39b94",
        "filename": "src/qt/paymentrequestplus.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/paymentrequestplus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/paymentrequestplus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -24,7 +24,7 @@ class PaymentRequestPlus\n     PaymentRequestPlus() { }\n \n     bool parse(const QByteArray& data);\n-    bool SerializeToString(string* output) const;\n+    bool SerializeToString(std::string* output) const;\n \n     bool IsInitialized() const;\n     QString getPKIType() const;"
      },
      {
        "sha": "49923a1afc7842791a7f653f4613e9eb22318c4d",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 61,
        "deletions": 22,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -44,6 +44,7 @@\n #include <QUrlQuery>\n #endif\n \n+using namespace std;\n using namespace boost;\n \n const int BITCOIN_IPC_CONNECT_TIMEOUT = 1000; // milliseconds\n@@ -178,6 +179,9 @@ void PaymentServer::LoadRootCAs(X509_STORE* _store)\n // and the items in savedPaymentRequest will be handled\n // when uiReady() is called.\n //\n+// Warning: ipcSendCommandLine() is called early in init,\n+// so don't use \"emit message()\", but \"QMessageBox::\"!\n+//\n bool PaymentServer::ipcParseCommandLine(int argc, char* argv[])\n {\n     for (int i = 1; i < argc; i++)\n@@ -411,7 +415,15 @@ void PaymentServer::handleURIOrFile(const QString& s)\n         {\n             SendCoinsRecipient recipient;\n             if (GUIUtil::parseBitcoinURI(s, &recipient))\n-                emit receivedPaymentRequest(recipient);\n+            {\n+                CBitcoinAddress address(recipient.address.toStdString());\n+                if (!address.IsValid()) {\n+                    emit message(tr(\"URI handling\"), tr(\"Invalid payment address %1\").arg(recipient.address),\n+                        CClientUIInterface::MSG_ERROR);\n+                }\n+                else\n+                    emit receivedPaymentRequest(recipient);\n+            }\n             else\n                 emit message(tr(\"URI handling\"),\n                     tr(\"URI can not be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"),\n@@ -425,12 +437,14 @@ void PaymentServer::handleURIOrFile(const QString& s)\n     {\n         PaymentRequestPlus request;\n         SendCoinsRecipient recipient;\n-        if (readPaymentRequest(s, request) && processPaymentRequest(request, recipient))\n-            emit receivedPaymentRequest(recipient);\n-        else\n+        if (!readPaymentRequest(s, request))\n+        {\n             emit message(tr(\"Payment request file handling\"),\n-                tr(\"Payment request file can not be read or processed! This can be caused by an invalid payment request file.\"),\n+                tr(\"Payment request file can not be read! This can be caused by an invalid payment request file.\"),\n                 CClientUIInterface::ICON_WARNING);\n+        }\n+        else if (processPaymentRequest(request, recipient))\n+            emit receivedPaymentRequest(recipient);\n \n         return;\n     }\n@@ -482,6 +496,34 @@ bool PaymentServer::processPaymentRequest(PaymentRequestPlus& request, SendCoins\n     if (!optionsModel)\n         return false;\n \n+    if (request.IsInitialized()) {\n+        const payments::PaymentDetails& details = request.getDetails();\n+\n+        // Payment request network matches client network?\n+        if (details.network() != Params().NetworkIDString())\n+        {\n+            emit message(tr(\"Payment request rejected\"), tr(\"Payment request network doesn't match client network.\"),\n+                CClientUIInterface::MSG_ERROR);\n+\n+            return false;\n+        }\n+\n+        // Expired payment request?\n+        if (details.has_expires() && (int64_t)details.expires() < GetTime())\n+        {\n+            emit message(tr(\"Payment request rejected\"), tr(\"Payment request has expired.\"),\n+                CClientUIInterface::MSG_ERROR);\n+\n+            return false;\n+        }\n+    }\n+    else {\n+        emit message(tr(\"Payment request error\"), tr(\"Payment request is not initialized.\"),\n+            CClientUIInterface::MSG_ERROR);\n+\n+        return false;\n+    }\n+\n     recipient.paymentRequest = request;\n     recipient.message = GUIUtil::HtmlEscape(request.getDetails().memo());\n \n@@ -497,24 +539,23 @@ bool PaymentServer::processPaymentRequest(PaymentRequestPlus& request, SendCoins\n             // Append destination address\n             addresses.append(QString::fromStdString(CBitcoinAddress(dest).ToString()));\n         }\n-        else if (!recipient.authenticatedMerchant.isEmpty()){\n+        else if (!recipient.authenticatedMerchant.isEmpty()) {\n             // Insecure payments to custom bitcoin addresses are not supported\n             // (there is no good way to tell the user where they are paying in a way\n             // they'd have a chance of understanding).\n-            emit message(tr(\"Payment request error\"),\n+            emit message(tr(\"Payment request rejected\"),\n                 tr(\"Unverified payment requests to custom payment scripts are unsupported.\"),\n                 CClientUIInterface::MSG_ERROR);\n             return false;\n         }\n \n         // Extract and check amounts\n         CTxOut txOut(sendingTo.second, sendingTo.first);\n-        if (txOut.IsDust(CTransaction::nMinRelayTxFee)) {\n-            QString msg = tr(\"Requested payment amount of %1 is too small (considered dust).\")\n-                .arg(BitcoinUnits::formatWithUnit(optionsModel->getDisplayUnit(), sendingTo.second));\n+        if (txOut.IsDust(CTransaction::minRelayTxFee)) {\n+            emit message(tr(\"Payment request error\"), tr(\"Requested payment amount of %1 is too small (considered dust).\")\n+                .arg(BitcoinUnits::formatWithUnit(optionsModel->getDisplayUnit(), sendingTo.second)),\n+                CClientUIInterface::MSG_ERROR);\n \n-            qDebug() << \"PaymentServer::processPaymentRequest : \" << msg;\n-            emit message(tr(\"Payment request error\"), msg, CClientUIInterface::MSG_ERROR);\n             return false;\n         }\n \n@@ -581,8 +622,8 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n             refund_to->set_script(&s[0], s.size());\n         }\n         else {\n-            // This should never happen, because sending coins should have just unlocked the wallet\n-            // and refilled the keypool\n+            // This should never happen, because sending coins should have\n+            // just unlocked the wallet and refilled the keypool.\n             qDebug() << \"PaymentServer::fetchPaymentACK : Error getting refund key, refund_to not set\";\n         }\n     }\n@@ -594,7 +635,7 @@ void PaymentServer::fetchPaymentACK(CWallet* wallet, SendCoinsRecipient recipien\n         netManager->post(netRequest, serData);\n     }\n     else {\n-        // This should never happen, either:\n+        // This should never happen, either.\n         qDebug() << \"PaymentServer::fetchPaymentACK : Error serializing payment message\";\n     }\n }\n@@ -620,17 +661,15 @@ void PaymentServer::netRequestFinished(QNetworkReply* reply)\n     {\n         PaymentRequestPlus request;\n         SendCoinsRecipient recipient;\n-        if (request.parse(data) && processPaymentRequest(request, recipient))\n+        if (!request.parse(data))\n         {\n-            emit receivedPaymentRequest(recipient);\n-        }\n-        else\n-        {\n-            qDebug() << \"PaymentServer::netRequestFinished : Error processing payment request\";\n+            qDebug() << \"PaymentServer::netRequestFinished : Error parsing payment request\";\n             emit message(tr(\"Payment request error\"),\n-                tr(\"Payment request can not be parsed or processed!\"),\n+                tr(\"Payment request can not be parsed!\"),\n                 CClientUIInterface::MSG_ERROR);\n         }\n+        else if (processPaymentRequest(request, recipient))\n+            emit receivedPaymentRequest(recipient);\n \n         return;\n     }"
      },
      {
        "sha": "981d063c49902ccdfdaff13ab1b6bd9073f18fca",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "added",
        "additions": 236,
        "deletions": 0,
        "changes": 236,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -0,0 +1,236 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"peertablemodel.h\"\n+\n+#include \"clientmodel.h\"\n+\n+#include \"net.h\"\n+#include \"sync.h\"\n+\n+#include <QDebug>\n+#include <QList>\n+#include <QTimer>\n+\n+bool NodeLessThan::operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const\n+{\n+    const CNodeStats *pLeft = &(left.nodestats);\n+    const CNodeStats *pRight = &(right.nodestats);\n+\n+    if (order == Qt::DescendingOrder)\n+        std::swap(pLeft, pRight);\n+\n+    switch(column)\n+    {\n+    case PeerTableModel::Address:\n+        return pLeft->addrName.compare(pRight->addrName) < 0;\n+    case PeerTableModel::Subversion:\n+        return pLeft->cleanSubVer.compare(pRight->cleanSubVer) < 0;\n+    case PeerTableModel::Height:\n+        return pLeft->nStartingHeight < pRight->nStartingHeight;\n+    }\n+\n+    return false;\n+}\n+\n+// private implementation\n+class PeerTablePriv\n+{\n+public:\n+    /** Local cache of peer information */\n+    QList<CNodeCombinedStats> cachedNodeStats;\n+    /** Column to sort nodes by */\n+    int sortColumn;\n+    /** Order (ascending or descending) to sort nodes by */\n+    Qt::SortOrder sortOrder;\n+    /** Index of rows by node ID */\n+    std::map<NodeId, int> mapNodeRows;\n+\n+    /** Pull a full list of peers from vNodes into our cache */\n+    void refreshPeers() {\n+        {\n+            TRY_LOCK(cs_vNodes, lockNodes);\n+            if (!lockNodes)\n+            {\n+                // skip the refresh if we can't immediately get the lock\n+                return;\n+            }\n+            cachedNodeStats.clear();\n+#if QT_VERSION >= 0x040700\n+            cachedNodeStats.reserve(vNodes.size());\n+#endif\n+            BOOST_FOREACH(CNode* pnode, vNodes)\n+            {\n+                CNodeCombinedStats stats;\n+                stats.statestats.nMisbehavior = -1;\n+                pnode->copyStats(stats.nodestats);\n+                cachedNodeStats.append(stats);\n+            }\n+        }\n+\n+        // if we can, retrieve the CNodeStateStats for each node.\n+        {\n+            TRY_LOCK(cs_main, lockMain);\n+            if (lockMain)\n+            {\n+                BOOST_FOREACH(CNodeCombinedStats &stats, cachedNodeStats)\n+                {\n+                    GetNodeStateStats(stats.nodestats.nodeid, stats.statestats);\n+                }\n+            }\n+        }\n+\n+        if (sortColumn >= 0)\n+            // sort cacheNodeStats (use stable sort to prevent rows jumping around unneceesarily)\n+            qStableSort(cachedNodeStats.begin(), cachedNodeStats.end(), NodeLessThan(sortColumn, sortOrder));\n+\n+        // build index map\n+        mapNodeRows.clear();\n+        int row = 0;\n+        BOOST_FOREACH(CNodeCombinedStats &stats, cachedNodeStats)\n+        {\n+            mapNodeRows.insert(std::pair<NodeId, int>(stats.nodestats.nodeid, row++));\n+        }\n+    }\n+\n+    int size()\n+    {\n+        return cachedNodeStats.size();\n+    }\n+\n+    CNodeCombinedStats *index(int idx)\n+    {\n+        if(idx >= 0 && idx < cachedNodeStats.size()) {\n+            return &cachedNodeStats[idx];\n+        }\n+        else\n+        {\n+            return 0;\n+        }\n+    }\n+};\n+\n+PeerTableModel::PeerTableModel(ClientModel *parent) :\n+    QAbstractTableModel(parent),clientModel(parent),timer(0)\n+{\n+    columns << tr(\"Address\") << tr(\"User Agent\") << tr(\"Start Height\");\n+    priv = new PeerTablePriv();\n+    // default to unsorted\n+    priv->sortColumn = -1;\n+\n+    // set up timer for auto refresh\n+    timer = new QTimer();\n+    connect(timer, SIGNAL(timeout()), SLOT(refresh()));\n+\n+    // load initial data\n+    refresh();\n+}\n+\n+void PeerTableModel::startAutoRefresh(int msecs)\n+{\n+    timer->setInterval(1000);\n+    timer->start();\n+}\n+\n+void PeerTableModel::stopAutoRefresh()\n+{\n+    timer->stop();\n+}\n+\n+int PeerTableModel::rowCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return priv->size();\n+}\n+\n+int PeerTableModel::columnCount(const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    return 3;\n+}\n+\n+QVariant PeerTableModel::data(const QModelIndex &index, int role) const\n+{\n+    if(!index.isValid())\n+        return QVariant();\n+\n+    CNodeCombinedStats *rec = static_cast<CNodeCombinedStats*>(index.internalPointer());\n+\n+    if(role == Qt::DisplayRole)\n+    {\n+        switch(index.column())\n+        {\n+        case Address:\n+            return QVariant(rec->nodestats.addrName.c_str());\n+        case Subversion:\n+            return QVariant(rec->nodestats.cleanSubVer.c_str());\n+        case Height:\n+            return rec->nodestats.nStartingHeight;\n+        }\n+    }\n+    return QVariant();\n+}\n+\n+QVariant PeerTableModel::headerData(int section, Qt::Orientation orientation, int role) const\n+{\n+    if(orientation == Qt::Horizontal)\n+    {\n+        if(role == Qt::DisplayRole && section < columns.size())\n+        {\n+            return columns[section];\n+        }\n+    }\n+    return QVariant();\n+}\n+\n+Qt::ItemFlags PeerTableModel::flags(const QModelIndex &index) const\n+{\n+    if(!index.isValid())\n+        return 0;\n+\n+    Qt::ItemFlags retval = Qt::ItemIsSelectable | Qt::ItemIsEnabled;\n+    return retval;\n+}\n+\n+QModelIndex PeerTableModel::index(int row, int column, const QModelIndex &parent) const\n+{\n+    Q_UNUSED(parent);\n+    CNodeCombinedStats *data = priv->index(row);\n+\n+    if (data)\n+    {\n+        return createIndex(row, column, data);\n+    }\n+    else\n+    {\n+        return QModelIndex();\n+    }\n+}\n+\n+const CNodeCombinedStats *PeerTableModel::getNodeStats(int idx) {\n+    return priv->index(idx);\n+}\n+\n+void PeerTableModel::refresh()\n+{\n+    emit layoutAboutToBeChanged();\n+    priv->refreshPeers();\n+    emit layoutChanged();\n+}\n+\n+int PeerTableModel::getRowByNodeId(NodeId nodeid)\n+{\n+    std::map<NodeId, int>::iterator it = priv->mapNodeRows.find(nodeid);\n+    if (it == priv->mapNodeRows.end())\n+        return -1;\n+\n+    return it->second;\n+}\n+\n+void PeerTableModel::sort(int column, Qt::SortOrder order)\n+{\n+    priv->sortColumn = column;\n+    priv->sortOrder = order;\n+    refresh();\n+}"
      },
      {
        "sha": "385bf0e0c189f1d869c64fb079dc928a778299ee",
        "filename": "src/qt/peertablemodel.h",
        "status": "added",
        "additions": 80,
        "deletions": 0,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/peertablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/peertablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -0,0 +1,80 @@\n+// Copyright (c) 2011-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef PEERTABLEMODEL_H\n+#define PEERTABLEMODEL_H\n+\n+#include \"main.h\"\n+#include \"net.h\"\n+\n+#include <QAbstractTableModel>\n+#include <QStringList>\n+\n+class ClientModel;\n+class PeerTablePriv;\n+\n+QT_BEGIN_NAMESPACE\n+class QTimer;\n+QT_END_NAMESPACE\n+\n+struct CNodeCombinedStats {\n+    CNodeStats nodestats;\n+    CNodeStateStats statestats;\n+};\n+\n+class NodeLessThan\n+{\n+public:\n+    NodeLessThan(int nColumn, Qt::SortOrder fOrder) :\n+        column(nColumn), order(fOrder) {}\n+    bool operator()(const CNodeCombinedStats &left, const CNodeCombinedStats &right) const;\n+\n+private:\n+    int column;\n+    Qt::SortOrder order;\n+};\n+\n+/**\n+   Qt model providing information about connected peers, similar to the\n+   \"getpeerinfo\" RPC call. Used by the rpc console UI.\n+ */\n+class PeerTableModel : public QAbstractTableModel\n+{\n+    Q_OBJECT\n+\n+public:\n+    explicit PeerTableModel(ClientModel *parent = 0);\n+    const CNodeCombinedStats *getNodeStats(int idx);\n+    int getRowByNodeId(NodeId nodeid);\n+    void startAutoRefresh(int msecs);\n+    void stopAutoRefresh();\n+\n+    enum ColumnIndex {\n+        Address = 0,\n+        Subversion = 1,\n+        Height = 2\n+    };\n+\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const;\n+    int columnCount(const QModelIndex &parent) const;\n+    QVariant data(const QModelIndex &index, int role) const;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n+    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    void sort(int column, Qt::SortOrder order);\n+    /*@}*/\n+\n+public slots:\n+    void refresh();\n+\n+private:\n+    ClientModel *clientModel;\n+    QStringList columns;\n+    PeerTablePriv *priv;\n+    QTimer *timer;\n+};\n+\n+#endif // PEERTABLEMODEL_H"
      },
      {
        "sha": "d8dad15c0d5044547367f83dfcada0ba5ba1dcf3",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -13,10 +13,10 @@\n \n #include <QClipboard>\n #include <QDrag>\n+#include <QMenu>\n #include <QMimeData>\n #include <QMouseEvent>\n #include <QPixmap>\n-#include <QMenu>\n #if QT_VERSION < 0x050000\n #include <QUrl>\n #endif"
      },
      {
        "sha": "9b78e495c364dc5aeee305dc954fedd1358f2038",
        "filename": "src/qt/receiverequestdialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/receiverequestdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/receiverequestdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -11,10 +11,12 @@\n #include <QImage>\n #include <QLabel>\n \n+class OptionsModel;\n+\n namespace Ui {\n     class ReceiveRequestDialog;\n }\n-class OptionsModel;\n+\n QT_BEGIN_NAMESPACE\n class QMenu;\n QT_END_NAMESPACE"
      },
      {
        "sha": "f7491f4a42cc135476c99a694470241713d6b37d",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 196,
        "deletions": 15,
        "changes": 211,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -7,12 +7,19 @@\n \n #include \"clientmodel.h\"\n #include \"guiutil.h\"\n+#include \"peertablemodel.h\"\n \n+#include \"main.h\"\n #include \"rpcserver.h\"\n #include \"rpcclient.h\"\n+#include \"util.h\"\n \n #include \"json/json_spirit_value.h\"\n+#ifdef ENABLE_WALLET\n+#include <db_cxx.h>\n+#endif\n #include <openssl/crypto.h>\n+\n #include <QKeyEvent>\n #include <QScrollBar>\n #include <QThread>\n@@ -195,6 +202,10 @@ RPCConsole::RPCConsole(QWidget *parent) :\n     clientModel(0),\n     historyPtr(0)\n {\n+    detailNodeStats = CNodeCombinedStats();\n+    detailNodeStats.nodestats.nodeid = -1;\n+    detailNodeStats.statestats.nMisbehavior = -1;\n+\n     ui->setupUi(this);\n     GUIUtil::restoreWindowGeometry(\"nRPCConsoleWindow\", this->size(), this);\n \n@@ -209,11 +220,18 @@ RPCConsole::RPCConsole(QWidget *parent) :\n     connect(ui->clearButton, SIGNAL(clicked()), this, SLOT(clear()));\n     connect(ui->btnClearTrafficGraph, SIGNAL(clicked()), ui->trafficGraph, SLOT(clear()));\n \n-    // set OpenSSL version label\n+    // set library version labels\n     ui->openSSLVersion->setText(SSLeay_version(SSLEAY_VERSION));\n+#ifdef ENABLE_WALLET\n+    ui->berkeleyDBVersion->setText(DbEnv::version(0, 0, 0));\n+#else\n+    ui->label_berkeleyDBVersion->hide();\n+    ui->berkeleyDBVersion->hide();\n+#endif\n \n     startExecutor();\n     setTrafficGraphRange(INITIAL_TRAFFIC_GRAPH_MINS);\n+    ui->detailWidget->hide();\n \n     clear();\n }\n@@ -277,13 +295,28 @@ void RPCConsole::setClientModel(ClientModel *model)\n         updateTrafficStats(model->getTotalBytesRecv(), model->getTotalBytesSent());\n         connect(model, SIGNAL(bytesChanged(quint64,quint64)), this, SLOT(updateTrafficStats(quint64, quint64)));\n \n+        // set up peer table\n+        ui->peerWidget->setModel(model->getPeerTableModel());\n+        ui->peerWidget->verticalHeader()->hide();\n+        ui->peerWidget->setEditTriggers(QAbstractItemView::NoEditTriggers);\n+        ui->peerWidget->setSelectionBehavior(QAbstractItemView::SelectRows);\n+        ui->peerWidget->setSelectionMode(QAbstractItemView::SingleSelection);\n+        ui->peerWidget->setColumnWidth(PeerTableModel::Address, ADDRESS_COLUMN_WIDTH);\n+        columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(ui->peerWidget, MINIMUM_COLUMN_WIDTH, MINIMUM_COLUMN_WIDTH);\n+\n+        // connect the peerWidget's selection model to our peerSelected() handler\n+        QItemSelectionModel *peerSelectModel = ui->peerWidget->selectionModel();\n+        connect(peerSelectModel, SIGNAL(selectionChanged(const QItemSelection &, const QItemSelection &)),\n+             this, SLOT(peerSelected(const QItemSelection &, const QItemSelection &)));\n+        connect(model->getPeerTableModel(), SIGNAL(layoutChanged()), this, SLOT(peerLayoutChanged()));\n+\n         // Provide initial values\n         ui->clientVersion->setText(model->formatFullVersion());\n         ui->clientName->setText(model->clientName());\n         ui->buildDate->setText(model->formatBuildDate());\n         ui->startupTime->setText(model->formatClientStartupTime());\n \n-        ui->networkName->setText(model->getNetworkName());\n+        ui->networkName->setText(QString::fromStdString(Params().NetworkIDString()));\n     }\n }\n \n@@ -382,8 +415,8 @@ void RPCConsole::on_lineEdit_returnPressed()\n     {\n         message(CMD_REQUEST, cmd);\n         emit cmdRequest(cmd);\n-        // Truncate history from current position\n-        history.erase(history.begin() + historyPtr, history.end());\n+        // Remove command, if already in history\n+        history.removeOne(cmd);\n         // Append command to history\n         history.append(cmd);\n         // Enforce maximum history size\n@@ -474,21 +507,169 @@ QString RPCConsole::FormatBytes(quint64 bytes)\n void RPCConsole::setTrafficGraphRange(int mins)\n {\n     ui->trafficGraph->setGraphRangeMins(mins);\n-    if(mins < 60) {\n-        ui->lblGraphRange->setText(QString(tr(\"%1 m\")).arg(mins));\n-    } else {\n-        int hours = mins / 60;\n-        int minsLeft = mins % 60;\n-        if(minsLeft == 0) {\n-            ui->lblGraphRange->setText(QString(tr(\"%1 h\")).arg(hours));\n-        } else {\n-            ui->lblGraphRange->setText(QString(tr(\"%1 h %2 m\")).arg(hours).arg(minsLeft));\n-        }\n-    }\n+    ui->lblGraphRange->setText(GUIUtil::formatDurationStr(mins * 60));\n }\n \n void RPCConsole::updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut)\n {\n     ui->lblBytesIn->setText(FormatBytes(totalBytesIn));\n     ui->lblBytesOut->setText(FormatBytes(totalBytesOut));\n }\n+\n+void RPCConsole::peerSelected(const QItemSelection &selected, const QItemSelection &deselected)\n+{\n+    Q_UNUSED(deselected);\n+\n+    if (selected.indexes().isEmpty())\n+        return;\n+\n+    // mark the cached banscore as unknown\n+    detailNodeStats.statestats.nMisbehavior = -1;\n+\n+    const CNodeCombinedStats *stats = clientModel->getPeerTableModel()->getNodeStats(selected.indexes().first().row());\n+\n+    if (stats)\n+    {\n+        detailNodeStats.nodestats.nodeid = stats->nodestats.nodeid;\n+        updateNodeDetail(stats);\n+        ui->detailWidget->show();\n+        ui->detailWidget->setDisabled(false);\n+    }\n+}\n+\n+void RPCConsole::peerLayoutChanged()\n+{\n+    const CNodeCombinedStats *stats = NULL;\n+    bool fUnselect = false, fReselect = false, fDisconnected = false;\n+\n+    if (detailNodeStats.nodestats.nodeid == -1)\n+        // no node selected yet\n+        return;\n+\n+    // find the currently selected row\n+    int selectedRow;\n+    QModelIndexList selectedModelIndex = ui->peerWidget->selectionModel()->selectedIndexes();\n+    if (selectedModelIndex.isEmpty())\n+        selectedRow = -1;\n+    else\n+        selectedRow = selectedModelIndex.first().row();\n+\n+    // check if our detail node has a row in the table (it may not necessarily\n+    // be at selectedRow since its position can change after a layout change)\n+    int detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(detailNodeStats.nodestats.nodeid);\n+\n+    if (detailNodeRow < 0)\n+    {\n+        // detail node dissapeared from table (node disconnected)\n+        fUnselect = true;\n+        fDisconnected = true;\n+        detailNodeStats.nodestats.nodeid = 0;\n+    }\n+    else\n+    {\n+        if (detailNodeRow != selectedRow)\n+        {\n+            // detail node moved position\n+            fUnselect = true;\n+            fReselect = true;\n+        }\n+\n+        // get fresh stats on the detail node.\n+        stats = clientModel->getPeerTableModel()->getNodeStats(detailNodeRow);\n+    }\n+\n+    if (fUnselect && selectedRow >= 0)\n+    {\n+        ui->peerWidget->selectionModel()->select(QItemSelection(selectedModelIndex.first(), selectedModelIndex.last()),\n+                                                 QItemSelectionModel::Deselect);\n+    }\n+\n+    if (fReselect)\n+    {\n+        ui->peerWidget->selectRow(detailNodeRow);\n+    }\n+\n+    if (stats)\n+        updateNodeDetail(stats);\n+\n+    if (fDisconnected)\n+    {\n+        ui->peerHeading->setText(QString(tr(\"Peer Disconnected\")));\n+        ui->detailWidget->setDisabled(true);\n+        QDateTime dt = QDateTime::fromTime_t(detailNodeStats.nodestats.nLastSend);\n+        if (detailNodeStats.nodestats.nLastSend)\n+            ui->peerLastSend->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nodestats.nLastRecv);\n+        if (detailNodeStats.nodestats.nLastRecv)\n+            ui->peerLastRecv->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+        dt.setTime_t(detailNodeStats.nodestats.nTimeConnected);\n+        ui->peerConnTime->setText(dt.toString(\"yyyy-MM-dd hh:mm:ss\"));\n+    }\n+}\n+\n+void RPCConsole::updateNodeDetail(const CNodeCombinedStats *combinedStats)\n+{\n+    CNodeStats stats = combinedStats->nodestats;\n+\n+    // keep a copy of timestamps, used to display dates upon disconnect\n+    detailNodeStats.nodestats.nLastSend = stats.nLastSend;\n+    detailNodeStats.nodestats.nLastRecv = stats.nLastRecv;\n+    detailNodeStats.nodestats.nTimeConnected = stats.nTimeConnected;\n+\n+    // update the detail ui with latest node information\n+    ui->peerHeading->setText(QString(\"<b>%1</b>\").arg(tr(\"Node Detail\")));\n+    ui->peerAddr->setText(QString(stats.addrName.c_str()));\n+    ui->peerServices->setText(GUIUtil::formatServicesStr(stats.nServices));\n+    ui->peerLastSend->setText(stats.nLastSend ? GUIUtil::formatDurationStr(GetTime() - stats.nLastSend) : tr(\"never\"));\n+    ui->peerLastRecv->setText(stats.nLastRecv ? GUIUtil::formatDurationStr(GetTime() - stats.nLastRecv) : tr(\"never\"));\n+    ui->peerBytesSent->setText(FormatBytes(stats.nSendBytes));\n+    ui->peerBytesRecv->setText(FormatBytes(stats.nRecvBytes));\n+    ui->peerConnTime->setText(GUIUtil::formatDurationStr(GetTime() - stats.nTimeConnected));\n+    ui->peerPingTime->setText(stats.dPingTime == 0 ? tr(\"N/A\") : QString(tr(\"%1 secs\")).arg(QString::number(stats.dPingTime, 'f', 3)));\n+    ui->peerVersion->setText(QString(\"%1\").arg(stats.nVersion));\n+    ui->peerSubversion->setText(QString(stats.cleanSubVer.c_str()));\n+    ui->peerDirection->setText(stats.fInbound ? tr(\"Inbound\") : tr(\"Outbound\"));\n+    ui->peerHeight->setText(QString(\"%1\").arg(stats.nStartingHeight));\n+    ui->peerSyncNode->setText(stats.fSyncNode ? tr(\"Yes\") : tr(\"No\"));\n+\n+    // if we can, display the peer's ban score\n+    CNodeStateStats statestats = combinedStats->statestats;\n+    if (statestats.nMisbehavior >= 0)\n+    {\n+        // we have a new nMisbehavor value - update the cache\n+        detailNodeStats.statestats.nMisbehavior = statestats.nMisbehavior;\n+    }\n+\n+    // pull the ban score from cache.  -1 means it hasn't been retrieved yet (lock busy).\n+    if (detailNodeStats.statestats.nMisbehavior >= 0)\n+        ui->peerBanScore->setText(QString(\"%1\").arg(detailNodeStats.statestats.nMisbehavior));\n+    else\n+        ui->peerBanScore->setText(tr(\"Fetching...\"));\n+}\n+\n+// We override the virtual resizeEvent of the QWidget to adjust tables column\n+// sizes as the tables width is proportional to the dialogs width.\n+void RPCConsole::resizeEvent(QResizeEvent *event)\n+{\n+    QWidget::resizeEvent(event);\n+    columnResizingFixer->stretchColumnWidth(PeerTableModel::Address);\n+}\n+\n+void RPCConsole::showEvent(QShowEvent *event)\n+{\n+    QWidget::showEvent(event);\n+\n+    // peerWidget needs a resize in case the dialog has non-default geometry\n+    columnResizingFixer->stretchColumnWidth(PeerTableModel::Address);\n+\n+    // start PeerTableModel auto refresh\n+    clientModel->getPeerTableModel()->startAutoRefresh(1000);\n+}\n+\n+void RPCConsole::hideEvent(QHideEvent *event)\n+{\n+    QWidget::hideEvent(event);\n+\n+    // stop PeerTableModel auto refresh\n+    clientModel->getPeerTableModel()->stopAutoRefresh();\n+}"
      },
      {
        "sha": "3fee34d00ef8e064efb341d95d185f046653caa9",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -5,9 +5,19 @@\n #ifndef RPCCONSOLE_H\n #define RPCCONSOLE_H\n \n+#include \"guiutil.h\"\n+#include \"peertablemodel.h\"\n+\n+#include \"net.h\"\n+\n #include <QDialog>\n \n class ClientModel;\n+class CNodeCombinedStats;\n+\n+QT_BEGIN_NAMESPACE\n+class QItemSelection;\n+QT_END_NAMESPACE\n \n namespace Ui {\n     class RPCConsole;\n@@ -35,6 +45,19 @@ class RPCConsole: public QDialog\n protected:\n     virtual bool eventFilter(QObject* obj, QEvent *event);\n \n+private:\n+    /** show detailed information on ui about selected node */\n+    void updateNodeDetail(const CNodeCombinedStats *combinedStats);\n+\n+    enum ColumnWidths\n+    {\n+        ADDRESS_COLUMN_WIDTH = 250,\n+        MINIMUM_COLUMN_WIDTH = 120\n+    };\n+\n+    /** track the node that we are currently viewing detail on in the peers tab */\n+    CNodeCombinedStats detailNodeStats;\n+\n private slots:\n     void on_lineEdit_returnPressed();\n     void on_tabWidget_currentChanged(int index);\n@@ -44,6 +67,9 @@ private slots:\n     void on_sldGraphRange_valueChanged(int value);\n     /** update traffic statistics */\n     void updateTrafficStats(quint64 totalBytesIn, quint64 totalBytesOut);\n+    void resizeEvent(QResizeEvent *event);\n+    void showEvent(QShowEvent *event);\n+    void hideEvent(QHideEvent *event);\n \n public slots:\n     void clear();\n@@ -57,6 +83,10 @@ public slots:\n     void browseHistory(int offset);\n     /** Scroll console view to end */\n     void scrollToEnd();\n+    /** Handle selection of peer in peers list */\n+    void peerSelected(const QItemSelection &selected, const QItemSelection &deselected);\n+    /** Handle updated peer information */\n+    void peerLayoutChanged();\n \n signals:\n     // For RPC command executor\n@@ -70,6 +100,7 @@ public slots:\n     Ui::RPCConsole *ui;\n     ClientModel *clientModel;\n     QStringList history;\n+    GUIUtil::TableViewLastColumnResizingFixer *columnResizingFixer;\n     int historyPtr;\n \n     void startExecutor();"
      },
      {
        "sha": "b7d74d70394039d71dce9497c13f85b5ab14c217",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 22,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -53,7 +53,7 @@ SendCoinsDialog::SendCoinsDialog(QWidget *parent) :\n     QAction *clipboardAfterFeeAction = new QAction(tr(\"Copy after fee\"), this);\n     QAction *clipboardBytesAction = new QAction(tr(\"Copy bytes\"), this);\n     QAction *clipboardPriorityAction = new QAction(tr(\"Copy priority\"), this);\n-    QAction *clipboardLowOutputAction = new QAction(tr(\"Copy low output\"), this);\n+    QAction *clipboardLowOutputAction = new QAction(tr(\"Copy dust\"), this);\n     QAction *clipboardChangeAction = new QAction(tr(\"Copy change\"), this);\n     connect(clipboardQuantityAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardQuantity()));\n     connect(clipboardAmountAction, SIGNAL(triggered()), this, SLOT(coinControlClipboardAmount()));\n@@ -377,26 +377,8 @@ void SendCoinsDialog::pasteEntry(const SendCoinsRecipient &rv)\n \n bool SendCoinsDialog::handlePaymentRequest(const SendCoinsRecipient &rv)\n {\n-    QString strSendCoins = tr(\"Send Coins\");\n-    if (rv.paymentRequest.IsInitialized()) {\n-        // Expired payment request?\n-        const payments::PaymentDetails& details = rv.paymentRequest.getDetails();\n-        if (details.has_expires() && (int64_t)details.expires() < GetTime())\n-        {\n-            emit message(strSendCoins, tr(\"Payment request expired\"),\n-                CClientUIInterface::MSG_WARNING);\n-            return false;\n-        }\n-    }\n-    else {\n-        CBitcoinAddress address(rv.address.toStdString());\n-        if (!address.IsValid()) {\n-            emit message(strSendCoins, tr(\"Invalid payment address %1\").arg(rv.address),\n-                CClientUIInterface::MSG_WARNING);\n-            return false;\n-        }\n-    }\n-\n+    // Just paste the entry, all pre-checks\n+    // are done in paymentserver.cpp.\n     pasteEntry(rv);\n     return true;\n }\n@@ -496,7 +478,7 @@ void SendCoinsDialog::coinControlClipboardPriority()\n     GUIUtil::setClipboard(ui->labelCoinControlPriority->text());\n }\n \n-// Coin Control: copy label \"Low output\" to clipboard\n+// Coin Control: copy label \"Dust\" to clipboard\n void SendCoinsDialog::coinControlClipboardLowOutput()\n {\n     GUIUtil::setClipboard(ui->labelCoinControlLowOutput->text());"
      },
      {
        "sha": "1162e2d87f5a72553025a4d10d8c34f06a503ec6",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -129,6 +129,7 @@ void SplashScreen::subscribeToCoreSignals()\n {\n     // Connect signals to client\n     uiInterface.InitMessage.connect(boost::bind(InitMessage, this, _1));\n+    uiInterface.ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n #ifdef ENABLE_WALLET\n     uiInterface.LoadWallet.connect(boost::bind(ConnectWallet, this, _1));\n #endif\n@@ -138,6 +139,7 @@ void SplashScreen::unsubscribeFromCoreSignals()\n {\n     // Disconnect signals from client\n     uiInterface.InitMessage.disconnect(boost::bind(InitMessage, this, _1));\n+    uiInterface.ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n #ifdef ENABLE_WALLET\n     if(pwalletMain)\n         pwalletMain->ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));"
      },
      {
        "sha": "a02f86b62ac9b38ec85b266c6205b0485557e3a5",
        "filename": "src/qt/test/Makefile",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/test/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/test/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -0,0 +1,6 @@\n+all:\n+\t$(MAKE) -C ../../ test_bitcoin_qt\n+clean:\n+\t$(MAKE) -C ../../ test_bitcoin_qt_clean\n+check:\n+\t$(MAKE) -C ../../ test_bitcoin_qt_check"
      },
      {
        "sha": "2461b5ff4d4d582d78ea663c9c9e5b3c7f0c6152",
        "filename": "src/qt/test/Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a48355dc44e8b86c2fc9f8b7973ac9e81a295be7/src/qt/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a48355dc44e8b86c2fc9f8b7973ac9e81a295be7/src/qt/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/Makefile.am?ref=a48355dc44e8b86c2fc9f8b7973ac9e81a295be7",
        "patch": "@@ -1,46 +0,0 @@\n-include $(top_srcdir)/src/Makefile.include\n-\n-AM_CPPFLAGS += -I$(top_srcdir)/src \\\n-  -I$(top_srcdir)/src/qt \\\n-  -I$(top_builddir)/src/qt \\\n-  $(PROTOBUF_CFLAGS) \\\n-    $(QR_CFLAGS)\n-bin_PROGRAMS = test_bitcoin-qt\n-TESTS = test_bitcoin-qt\n-\n-TEST_QT_MOC_CPP = moc_uritests.cpp\n-\n-if ENABLE_WALLET\n-TEST_QT_MOC_CPP += moc_paymentservertests.cpp\n-endif\n-\n-TEST_QT_H = \\\n-  uritests.h \\\n-  paymentrequestdata.h \\\n-  paymentservertests.h\n-\n-BUILT_SOURCES = $(TEST_QT_MOC_CPP)\n-\n-test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n-\n-test_bitcoin_qt_SOURCES = \\\n-  test_main.cpp \\\n-  uritests.cpp \\\n-  $(TEST_QT_H)\n-if ENABLE_WALLET\n-test_bitcoin_qt_SOURCES += \\\n-  paymentservertests.cpp\n-endif\n-\n-nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n-\n-test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n-if ENABLE_WALLET\n-test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n-endif\n-test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) \\\n-  $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n-  $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS)\n-test_bitcoin_qt_LDFLAGS = $(QT_LDFLAGS)\n-\n-CLEANFILES = $(BUILT_SOURCES) *.gcda *.gcno"
      },
      {
        "sha": "220da28cfef3b74ba87ddc482149910db9d73026",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -1,4 +1,3 @@\n-#include \"bitcoin-config.h\"\n #if defined(HAVE_CONFIG_H)\n #include \"bitcoin-config.h\"\n #endif"
      },
      {
        "sha": "61da3373fddd3cdae63c9fb4c5e39fa6ce4a5b43",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 20,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -18,6 +18,8 @@\n #include <stdint.h>\n #include <string>\n \n+using namespace std;\n+\n QString TransactionDesc::FormatTxStatus(const CWalletTx& wtx)\n {\n     AssertLockHeld(cs_main);\n@@ -42,7 +44,7 @@ QString TransactionDesc::FormatTxStatus(const CWalletTx& wtx)\n     }\n }\n \n-QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int unit)\n+QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionRecord *rec, int unit)\n {\n     QString strHTML;\n \n@@ -86,26 +88,19 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int u\n         if (nNet > 0)\n         {\n             // Credit\n-            BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n+            if (CBitcoinAddress(rec->address).IsValid())\n             {\n-                if (wallet->IsMine(txout))\n+                CTxDestination address = CBitcoinAddress(rec->address).Get();\n+                if (wallet->mapAddressBook.count(address))\n                 {\n-                    CTxDestination address;\n-                    if (ExtractDestination(txout.scriptPubKey, address) && IsMine(*wallet, address))\n-                    {\n-                        if (wallet->mapAddressBook.count(address))\n-                        {\n-                            strHTML += \"<b>\" + tr(\"From\") + \":</b> \" + tr(\"unknown\") + \"<br>\";\n-                            strHTML += \"<b>\" + tr(\"To\") + \":</b> \";\n-                            strHTML += GUIUtil::HtmlEscape(CBitcoinAddress(address).ToString());\n-                            if (!wallet->mapAddressBook[address].name.empty())\n-                                strHTML += \" (\" + tr(\"own address\") + \", \" + tr(\"label\") + \": \" + GUIUtil::HtmlEscape(wallet->mapAddressBook[address].name) + \")\";\n-                            else\n-                                strHTML += \" (\" + tr(\"own address\") + \")\";\n-                            strHTML += \"<br>\";\n-                        }\n-                    }\n-                    break;\n+                    strHTML += \"<b>\" + tr(\"From\") + \":</b> \" + tr(\"unknown\") + \"<br>\";\n+                    strHTML += \"<b>\" + tr(\"To\") + \":</b> \";\n+                    strHTML += GUIUtil::HtmlEscape(rec->address);\n+                    if (!wallet->mapAddressBook[address].name.empty())\n+                        strHTML += \" (\" + tr(\"own address\") + \", \" + tr(\"label\") + \": \" + GUIUtil::HtmlEscape(wallet->mapAddressBook[address].name) + \")\";\n+                    else\n+                        strHTML += \" (\" + tr(\"own address\") + \")\";\n+                    strHTML += \"<br>\";\n                 }\n             }\n         }\n@@ -224,7 +219,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int u\n     if (wtx.mapValue.count(\"comment\") && !wtx.mapValue[\"comment\"].empty())\n         strHTML += \"<br><b>\" + tr(\"Comment\") + \":</b><br>\" + GUIUtil::HtmlEscape(wtx.mapValue[\"comment\"], true) + \"<br>\";\n \n-    strHTML += \"<b>\" + tr(\"Transaction ID\") + \":</b> \" + TransactionRecord::formatSubTxId(wtx.GetHash(), vout) + \"<br>\";\n+    strHTML += \"<b>\" + tr(\"Transaction ID\") + \":</b> \" + TransactionRecord::formatSubTxId(wtx.GetHash(), rec->idx) + \"<br>\";\n \n     // Message from normal bitcoin:URI (bitcoin:123...?message=example)\n     foreach (const PAIRTYPE(string, string)& r, wtx.vOrderForm)"
      },
      {
        "sha": "4bd42932106930af861e46cfed3eda475368ca7d",
        "filename": "src/qt/transactiondesc.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/transactiondesc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/transactiondesc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -8,6 +8,8 @@\n #include <QObject>\n #include <QString>\n \n+class TransactionRecord;\n+\n class CWallet;\n class CWalletTx;\n \n@@ -18,7 +20,7 @@ class TransactionDesc: public QObject\n     Q_OBJECT\n \n public:\n-    static QString toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int unit);\n+    static QString toHTML(CWallet *wallet, CWalletTx &wtx, TransactionRecord *rec, int unit);\n \n private:\n     TransactionDesc() {}"
      },
      {
        "sha": "b9fcd0d6b0934d2b82e8cdb7d30b540dfccffc90",
        "filename": "src/qt/transactiontablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/transactiontablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/transactiontablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -222,7 +222,7 @@ class TransactionTablePriv\n             std::map<uint256, CWalletTx>::iterator mi = wallet->mapWallet.find(rec->hash);\n             if(mi != wallet->mapWallet.end())\n             {\n-                return TransactionDesc::toHTML(wallet, mi->second, rec->idx, unit);\n+                return TransactionDesc::toHTML(wallet, mi->second, rec, unit);\n             }\n         }\n         return QString(\"\");"
      },
      {
        "sha": "eb647d017080aefd29a8e6309cb4da26d0d5c8de",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 63,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -4,7 +4,6 @@\n \n #include \"utilitydialog.h\"\n \n-#include \"ui_aboutdialog.h\"\n #include \"ui_helpmessagedialog.h\"\n \n #include \"bitcoingui.h\"\n@@ -16,72 +15,64 @@\n #include \"util.h\"\n \n #include <QLabel>\n+#include <QRegExp>\n #include <QVBoxLayout>\n \n-/** \"About\" dialog box */\n-AboutDialog::AboutDialog(QWidget *parent) :\n+/** \"Help message\" or \"About\" dialog box */\n+HelpMessageDialog::HelpMessageDialog(QWidget *parent, bool about) :\n     QDialog(parent),\n-    ui(new Ui::AboutDialog)\n+    ui(new Ui::HelpMessageDialog)\n {\n     ui->setupUi(this);\n+    GUIUtil::restoreWindowGeometry(\"nHelpMessageDialogWindow\", this->size(), this);\n \n-    // Set current copyright year\n-    ui->copyrightLabel->setText(tr(\"Copyright\") + QString(\" &copy; 2009-%1 \").arg(COPYRIGHT_YEAR) + tr(\"The Bitcoin Core developers\"));\n-}\n-\n-void AboutDialog::setModel(ClientModel *model)\n-{\n-    if(model)\n-    {\n-        QString version = model->formatFullVersion();\n-        /* On x86 add a bit specifier to the version so that users can distinguish between\n-         * 32 and 64 bit builds. On other architectures, 32/64 bit may be more ambigious.\n-         */\n+    QString version = tr(\"Bitcoin Core\") + \" \" + tr(\"version\") + \" \" + QString::fromStdString(FormatFullVersion());\n+    /* On x86 add a bit specifier to the version so that users can distinguish between\n+     * 32 and 64 bit builds. On other architectures, 32/64 bit may be more ambigious.\n+     */\n #if defined(__x86_64__)\n-        version += \" \" + tr(\"(%1-bit)\").arg(64);\n+    version += \" \" + tr(\"(%1-bit)\").arg(64);\n #elif defined(__i386__ )\n-        version += \" \" + tr(\"(%1-bit)\").arg(32);\n+    version += \" \" + tr(\"(%1-bit)\").arg(32);\n #endif\n-        ui->versionLabel->setText(version);\n-    }\n-}\n-\n-AboutDialog::~AboutDialog()\n-{\n-    delete ui;\n-}\n-\n-void AboutDialog::on_buttonBox_accepted()\n-{\n-    close();\n-}\n-\n-/** \"Help message\" dialog box */\n-HelpMessageDialog::HelpMessageDialog(QWidget *parent) :\n-    QDialog(parent),\n-    ui(new Ui::HelpMessageDialog)\n-{\n-    ui->setupUi(this);\n-    GUIUtil::restoreWindowGeometry(\"nHelpMessageDialogWindow\", this->size(), this);\n-\n-    header = tr(\"Bitcoin Core\") + \" \" + tr(\"version\") + \" \" +\n-        QString::fromStdString(FormatFullVersion()) + \"\\n\\n\" +\n-        tr(\"Usage:\") + \"\\n\" +\n-        \"  bitcoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n-\n-    coreOptions = QString::fromStdString(HelpMessage(HMM_BITCOIN_QT));\n-\n-    uiOptions = tr(\"UI options\") + \":\\n\" +\n-        \"  -choosedatadir            \" + tr(\"Choose data directory on startup (default: 0)\") + \"\\n\" +\n-        \"  -lang=<lang>              \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n-        \"  -min                      \" + tr(\"Start minimized\") + \"\\n\" +\n-        \"  -rootcertificates=<file>  \" + tr(\"Set SSL root certificates for payment request (default: -system-)\") + \"\\n\" +\n-        \"  -splash                   \" + tr(\"Show splash screen on startup (default: 1)\");\n \n-    ui->helpMessageLabel->setFont(GUIUtil::bitcoinAddressFont());\n-\n-    // Set help message text\n-    ui->helpMessageLabel->setText(header + \"\\n\" + coreOptions + \"\\n\" + uiOptions);\n+    if (about)\n+    {\n+        setWindowTitle(tr(\"About Bitcoin Core\"));\n+\n+        /// HTML-format the license message from the core\n+        QString licenseInfo = QString::fromStdString(LicenseInfo());\n+        QString licenseInfoHTML = licenseInfo;\n+        // Make URLs clickable\n+        QRegExp uri(\"<(.*)>\", Qt::CaseSensitive, QRegExp::RegExp2);\n+        uri.setMinimal(true); // use non-greedy matching\n+        licenseInfoHTML.replace(uri, \"<a href=\\\"\\\\1\\\">\\\\1</a>\");\n+        // Replace newlines with HTML breaks\n+        licenseInfoHTML.replace(\"\\n\\n\", \"<br><br>\");\n+\n+        ui->helpMessageLabel->setTextFormat(Qt::RichText);\n+        ui->scrollArea->setVerticalScrollBarPolicy(Qt::ScrollBarAsNeeded);\n+        text = version + \"\\n\" + licenseInfo;\n+        ui->helpMessageLabel->setText(version + \"<br><br>\" + licenseInfoHTML);\n+        ui->helpMessageLabel->setWordWrap(true);\n+    } else {\n+        setWindowTitle(tr(\"Command-line options\"));\n+        QString header = tr(\"Usage:\") + \"\\n\" +\n+            \"  bitcoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n+\n+        QString coreOptions = QString::fromStdString(HelpMessage(HMM_BITCOIN_QT));\n+\n+        QString uiOptions = tr(\"UI options\") + \":\\n\" +\n+            \"  -choosedatadir            \" + tr(\"Choose data directory on startup (default: 0)\") + \"\\n\" +\n+            \"  -lang=<lang>              \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n+            \"  -min                      \" + tr(\"Start minimized\") + \"\\n\" +\n+            \"  -rootcertificates=<file>  \" + tr(\"Set SSL root certificates for payment request (default: -system-)\") + \"\\n\" +\n+            \"  -splash                   \" + tr(\"Show splash screen on startup (default: 1)\");\n+\n+        ui->helpMessageLabel->setFont(GUIUtil::bitcoinAddressFont());\n+        text = version + \"\\n\" + header + \"\\n\" + coreOptions + \"\\n\" + uiOptions;\n+        ui->helpMessageLabel->setText(text);\n+    }\n }\n \n HelpMessageDialog::~HelpMessageDialog()\n@@ -93,18 +84,17 @@ HelpMessageDialog::~HelpMessageDialog()\n void HelpMessageDialog::printToConsole()\n {\n     // On other operating systems, the expected action is to print the message to the console.\n-    QString strUsage = header + \"\\n\" + coreOptions + \"\\n\" + uiOptions + \"\\n\";\n-    fprintf(stdout, \"%s\", strUsage.toStdString().c_str());\n+    fprintf(stdout, \"%s\\n\", qPrintable(text));\n }\n \n void HelpMessageDialog::showOrPrint()\n {\n #if defined(WIN32)\n-        // On Windows, show a message box, as there is no stderr/stdout in windowed applications\n-        exec();\n+    // On Windows, show a message box, as there is no stderr/stdout in windowed applications\n+    exec();\n #else\n-        // On other operating systems, print help text to console\n-        printToConsole();\n+    // On other operating systems, print help text to console\n+    printToConsole();\n #endif\n }\n "
      },
      {
        "sha": "154bb70b8bb60b328a277d64931c17a346707db2",
        "filename": "src/qt/utilitydialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 23,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/utilitydialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/utilitydialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -12,45 +12,24 @@ class BitcoinGUI;\n class ClientModel;\n \n namespace Ui {\n-    class AboutDialog;\n     class HelpMessageDialog;\n }\n \n-/** \"About\" dialog box */\n-class AboutDialog : public QDialog\n-{\n-    Q_OBJECT\n-\n-public:\n-    explicit AboutDialog(QWidget *parent);\n-    ~AboutDialog();\n-\n-    void setModel(ClientModel *model);\n-\n-private:\n-    Ui::AboutDialog *ui;\n-\n-private slots:\n-    void on_buttonBox_accepted();\n-};\n-\n /** \"Help message\" dialog box */\n class HelpMessageDialog : public QDialog\n {\n     Q_OBJECT\n \n public:\n-    explicit HelpMessageDialog(QWidget *parent);\n+    explicit HelpMessageDialog(QWidget *parent, bool about);\n     ~HelpMessageDialog();\n \n     void printToConsole();\n     void showOrPrint();\n \n private:\n     Ui::HelpMessageDialog *ui;\n-    QString header;\n-    QString coreOptions;\n-    QString uiOptions;\n+    QString text;\n \n private slots:\n     void on_okButton_accepted();"
      },
      {
        "sha": "2f633a26c86c2d074a28d89aa2cb9b68abcf8086",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -24,6 +24,8 @@\n #include <QSet>\n #include <QTimer>\n \n+using namespace std;\n+\n WalletModel::WalletModel(CWallet *wallet, OptionsModel *optionsModel, QObject *parent) :\n     QObject(parent), wallet(wallet), optionsModel(optionsModel), addressTableModel(0),\n     transactionTableModel(0),\n@@ -231,12 +233,6 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n         return AmountExceedsBalance;\n     }\n \n-    if((total + nTransactionFee) > nBalance)\n-    {\n-        transaction.setTransactionFee(nTransactionFee);\n-        return SendCoinsReturn(AmountWithFeeExceedsBalance);\n-    }\n-\n     {\n         LOCK2(cs_main, wallet->cs_wallet);\n "
      },
      {
        "sha": "580c6bd5bafc898aa391d71ae8a874c00c478967",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 16,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -3,10 +3,10 @@\n // Distributed under the MIT/X11 software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include \"rpcserver.h\"\n+#include \"checkpoints.h\"\n #include \"main.h\"\n+#include \"rpcserver.h\"\n #include \"sync.h\"\n-#include \"checkpoints.h\"\n \n #include <stdint.h>\n \n@@ -427,7 +427,7 @@ Value verifychain(const Array& params, bool fHelp)\n     if (params.size() > 1)\n         nCheckDepth = params[1].get_int();\n \n-    return VerifyDB(nCheckLevel, nCheckDepth);\n+    return CVerifyDB().VerifyDB(nCheckLevel, nCheckDepth);\n }\n \n Value getblockchaininfo(const Array& params, bool fHelp)\n@@ -438,7 +438,7 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n             \"Returns an object containing various state info regarding block chain processing.\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"chain\\\": \\\"xxxx\\\",        (string) current chain (main, testnet3, regtest)\\n\"\n+            \"  \\\"chain\\\": \\\"xxxx\\\",        (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n             \"  \\\"blocks\\\": xxxxxx,         (numeric) the current number of blocks processed in the server\\n\"\n             \"  \\\"bestblockhash\\\": \\\"...\\\", (string) the hash of the currently best block\\n\"\n             \"  \\\"difficulty\\\": xxxxxx,     (numeric) the current difficulty\\n\"\n@@ -450,18 +450,12 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getblockchaininfo\", \"\")\n         );\n \n-    proxyType proxy;\n-    GetProxy(NET_IPV4, proxy);\n-\n     Object obj;\n-    std::string chain = Params().DataDir();\n-    if(chain.empty())\n-        chain = \"main\";\n-    obj.push_back(Pair(\"chain\",         chain));\n-    obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n-    obj.push_back(Pair(\"bestblockhash\", chainActive.Tip()->GetBlockHash().GetHex()));\n-    obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n-    obj.push_back(Pair(\"verificationprogress\", Checkpoints::GuessVerificationProgress(chainActive.Tip())));\n-    obj.push_back(Pair(\"chainwork\",     chainActive.Tip()->nChainWork.GetHex()));\n+    obj.push_back(Pair(\"chain\",                 Params().NetworkIDString()));\n+    obj.push_back(Pair(\"blocks\",                (int)chainActive.Height()));\n+    obj.push_back(Pair(\"bestblockhash\",         chainActive.Tip()->GetBlockHash().GetHex()));\n+    obj.push_back(Pair(\"difficulty\",            (double)GetDifficulty()));\n+    obj.push_back(Pair(\"verificationprogress\",  Checkpoints::GuessVerificationProgress(chainActive.Tip())));\n+    obj.push_back(Pair(\"chainwork\",             chainActive.Tip()->nChainWork.GetHex()));\n     return obj;\n }"
      },
      {
        "sha": "3a06e330162e2d35af8f7c1c6053894c1f9a5946",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 175,
        "changes": 177,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -12,86 +12,9 @@\n \n #include <stdint.h>\n \n-#include <boost/algorithm/string.hpp>\n-#include <boost/asio.hpp>\n-#include <boost/asio/ssl.hpp>\n-#include <boost/bind.hpp>\n-#include <boost/filesystem.hpp>\n-#include <boost/foreach.hpp>\n-#include <boost/iostreams/concepts.hpp>\n-#include <boost/iostreams/stream.hpp>\n-#include <boost/shared_ptr.hpp>\n-#include \"json/json_spirit_writer_template.h\"\n-\n using namespace std;\n-using namespace boost;\n-using namespace boost::asio;\n using namespace json_spirit;\n \n-Object CallRPC(const string& strMethod, const Array& params)\n-{\n-    if (mapArgs[\"-rpcuser\"] == \"\" && mapArgs[\"-rpcpassword\"] == \"\")\n-        throw runtime_error(strprintf(\n-            _(\"You must set rpcpassword=<password> in the configuration file:\\n%s\\n\"\n-              \"If the file does not exist, create it with owner-readable-only file permissions.\"),\n-                GetConfigFile().string().c_str()));\n-\n-    // Connect to localhost\n-    bool fUseSSL = GetBoolArg(\"-rpcssl\", false);\n-    asio::io_service io_service;\n-    ssl::context context(io_service, ssl::context::sslv23);\n-    context.set_options(ssl::context::no_sslv2);\n-    asio::ssl::stream<asio::ip::tcp::socket> sslStream(io_service, context);\n-    SSLIOStreamDevice<asio::ip::tcp> d(sslStream, fUseSSL);\n-    iostreams::stream< SSLIOStreamDevice<asio::ip::tcp> > stream(d);\n-\n-    bool fWait = GetBoolArg(\"-rpcwait\", false); // -rpcwait means try until server has started\n-    do {\n-        bool fConnected = d.connect(GetArg(\"-rpcconnect\", \"127.0.0.1\"), GetArg(\"-rpcport\", itostr(Params().RPCPort())));\n-        if (fConnected) break;\n-        if (fWait)\n-            MilliSleep(1000);\n-        else\n-            throw runtime_error(\"couldn't connect to server\");\n-    } while (fWait);\n-\n-    // HTTP basic authentication\n-    string strUserPass64 = EncodeBase64(mapArgs[\"-rpcuser\"] + \":\" + mapArgs[\"-rpcpassword\"]);\n-    map<string, string> mapRequestHeaders;\n-    mapRequestHeaders[\"Authorization\"] = string(\"Basic \") + strUserPass64;\n-\n-    // Send request\n-    string strRequest = JSONRPCRequest(strMethod, params, 1);\n-    string strPost = HTTPPost(strRequest, mapRequestHeaders);\n-    stream << strPost << std::flush;\n-\n-    // Receive HTTP reply status\n-    int nProto = 0;\n-    int nStatus = ReadHTTPStatus(stream, nProto);\n-\n-    // Receive HTTP reply message headers and body\n-    map<string, string> mapHeaders;\n-    string strReply;\n-    ReadHTTPMessage(stream, mapHeaders, strReply, nProto);\n-\n-    if (nStatus == HTTP_UNAUTHORIZED)\n-        throw runtime_error(\"incorrect rpcuser or rpcpassword (authorization failed)\");\n-    else if (nStatus >= 400 && nStatus != HTTP_BAD_REQUEST && nStatus != HTTP_NOT_FOUND && nStatus != HTTP_INTERNAL_SERVER_ERROR)\n-        throw runtime_error(strprintf(\"server returned HTTP error %d\", nStatus));\n-    else if (strReply.empty())\n-        throw runtime_error(\"no response from server\");\n-\n-    // Parse reply\n-    Value valReply;\n-    if (!read_string(strReply, valReply))\n-        throw runtime_error(\"couldn't parse reply from server\");\n-    const Object& reply = valReply.get_obj();\n-    if (reply.empty())\n-        throw runtime_error(\"expected reply to have result, error and id properties\");\n-\n-    return reply;\n-}\n-\n template<typename T>\n void ConvertTo(Value& value, bool fAllowNull=false)\n {\n@@ -176,105 +99,9 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"verifychain\"            && n > 1) ConvertTo<int64_t>(params[1]);\n     if (strMethod == \"keypoolrefill\"          && n > 0) ConvertTo<int64_t>(params[0]);\n     if (strMethod == \"getrawmempool\"          && n > 0) ConvertTo<bool>(params[0]);\n+    if (strMethod == \"estimatefee\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"estimatepriority\"       && n > 0) ConvertTo<boost::int64_t>(params[0]);\n \n     return params;\n }\n \n-int CommandLineRPC(int argc, char *argv[])\n-{\n-    string strPrint;\n-    int nRet = 0;\n-    try\n-    {\n-        // Skip switches\n-        while (argc > 1 && IsSwitchChar(argv[1][0]))\n-        {\n-            argc--;\n-            argv++;\n-        }\n-\n-        // Method\n-        if (argc < 2)\n-            throw runtime_error(\"too few parameters\");\n-        string strMethod = argv[1];\n-\n-        // Parameters default to strings\n-        std::vector<std::string> strParams(&argv[2], &argv[argc]);\n-        Array params = RPCConvertValues(strMethod, strParams);\n-\n-        // Execute\n-        Object reply = CallRPC(strMethod, params);\n-\n-        // Parse reply\n-        const Value& result = find_value(reply, \"result\");\n-        const Value& error  = find_value(reply, \"error\");\n-\n-        if (error.type() != null_type)\n-        {\n-            // Error\n-            strPrint = \"error: \" + write_string(error, false);\n-            int code = find_value(error.get_obj(), \"code\").get_int();\n-            nRet = abs(code);\n-        }\n-        else\n-        {\n-            // Result\n-            if (result.type() == null_type)\n-                strPrint = \"\";\n-            else if (result.type() == str_type)\n-                strPrint = result.get_str();\n-            else\n-                strPrint = write_string(result, true);\n-        }\n-    }\n-    catch (boost::thread_interrupted) {\n-        throw;\n-    }\n-    catch (std::exception& e) {\n-        strPrint = string(\"error: \") + e.what();\n-        nRet = abs(RPC_MISC_ERROR);\n-    }\n-    catch (...) {\n-        PrintExceptionContinue(NULL, \"CommandLineRPC()\");\n-        throw;\n-    }\n-\n-    if (strPrint != \"\")\n-    {\n-        fprintf((nRet == 0 ? stdout : stderr), \"%s\\n\", strPrint.c_str());\n-    }\n-    return nRet;\n-}\n-\n-std::string HelpMessageCli(bool mainProgram)\n-{\n-    string strUsage;\n-    if(mainProgram)\n-    {\n-        strUsage += _(\"Options:\") + \"\\n\";\n-        strUsage += \"  -?                     \" + _(\"This help message\") + \"\\n\";\n-        strUsage += \"  -conf=<file>           \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\";\n-        strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n-        strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n-        strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                                    \"solved instantly. This is intended for regression testing tools and app development.\") + \"\\n\";\n-    } else {\n-        strUsage += _(\"RPC client options:\") + \"\\n\";\n-    }\n-\n-    strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n-    strUsage += \"  -rpcport=<port>        \" + _(\"Connect to JSON-RPC on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n-    strUsage += \"  -rpcwait               \" + _(\"Wait for RPC server to start\") + \"\\n\";\n-\n-    if(mainProgram)\n-    {\n-        strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n-        strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n-\n-        strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n-        strUsage += \"  -rpcssl                \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";\n-    }\n-\n-    return strUsage;\n-}\n-"
      },
      {
        "sha": "840890e34b404364afbab1dbf5ee12b0acfbe194",
        "filename": "src/rpcclient.h",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcclient.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcclient.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -10,16 +10,6 @@\n #include \"json/json_spirit_utils.h\"\n #include \"json/json_spirit_writer_template.h\"\n \n-int CommandLineRPC(int argc, char *argv[]);\n-\n json_spirit::Array RPCConvertValues(const std::string &strMethod, const std::vector<std::string> &strParams);\n \n-/** Show help message for bitcoin-cli.\n- * The mainProgram argument is used to determine whether to show this message as main program\n- * (and include some common options) or as sub-header of another help message.\n- *\n- * @note the argument can be removed once bitcoin-cli functionality is removed from bitcoind\n- */\n-std::string HelpMessageCli(bool mainProgram);\n-\n #endif"
      },
      {
        "sha": "57a51c0fde3355b474b238d81a1d7d5fef3830dc",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 67,
        "deletions": 2,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -13,8 +13,11 @@\n #include \"db.h\"\n #include \"wallet.h\"\n #endif\n+\n #include <stdint.h>\n \n+#include <boost/assign/list_of.hpp>\n+\n #include \"json/json_spirit_utils.h\"\n #include \"json/json_spirit_value.h\"\n \n@@ -174,7 +177,7 @@ Value setgenerate(const Array& params, bool fHelp)\n     }\n \n     // -regtest mode: don't return until nGenProcLimit blocks are generated\n-    if (fGenerate && Params().NetworkID() == CChainParams::REGTEST)\n+    if (fGenerate && Params().MineBlocksOnDemand())\n     {\n         int nHeightStart = 0;\n         int nHeightEnd = 0;\n@@ -250,6 +253,7 @@ Value getmininginfo(const Array& params, bool fHelp)\n             \"  \\\"hashespersec\\\": n          (numeric) The hashes per second of the generation, or 0 if no generation.\\n\"\n             \"  \\\"pooledtx\\\": n              (numeric) The size of the mem pool\\n\"\n             \"  \\\"testnet\\\": true|false      (boolean) If using testnet or not\\n\"\n+            \"  \\\"chain\\\": \\\"xxxx\\\",         (string) current network name as defined in BIP70 (main, test, regtest)\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getmininginfo\", \"\")\n@@ -265,7 +269,8 @@ Value getmininginfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"genproclimit\",     (int)GetArg(\"-genproclimit\", -1)));\n     obj.push_back(Pair(\"networkhashps\",    getnetworkhashps(params, false)));\n     obj.push_back(Pair(\"pooledtx\",         (uint64_t)mempool.size()));\n-    obj.push_back(Pair(\"testnet\",          TestNet()));\n+    obj.push_back(Pair(\"testnet\",          Params().NetworkID() == CChainParams::TESTNET));\n+    obj.push_back(Pair(\"chain\",            Params().NetworkIDString()));\n #ifdef ENABLE_WALLET\n     obj.push_back(Pair(\"generate\",         getgenerate(params, false)));\n     obj.push_back(Pair(\"hashespersec\",     gethashespersec(params, false)));\n@@ -626,3 +631,63 @@ Value submitblock(const Array& params, bool fHelp)\n \n     return Value::null;\n }\n+\n+Value estimatefee(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"estimatefee nblocks\\n\"\n+            \"\\nEstimates the approximate fee per kilobyte\\n\"\n+            \"needed for a transaction to get confirmed\\n\"\n+            \"within nblocks blocks.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. nblocks     (numeric)\\n\"\n+            \"\\nResult:\\n\"\n+            \"n :    (numeric) estimated fee-per-kilobyte\\n\"\n+            \"\\n\"\n+            \"-1.0 is returned if not enough transactions and\\n\"\n+            \"blocks have been observed to make an estimate.\\n\"\n+            \"\\nExample:\\n\"\n+            + HelpExampleCli(\"estimatefee\", \"6\")\n+            );\n+\n+    RPCTypeCheck(params, boost::assign::list_of(int_type));\n+\n+    int nBlocks = params[0].get_int();\n+    if (nBlocks < 1)\n+        nBlocks = 1;\n+\n+    CFeeRate feeRate = mempool.estimateFee(nBlocks);\n+    if (feeRate == CFeeRate(0))\n+        return -1.0;\n+\n+    return ValueFromAmount(feeRate.GetFeePerK());\n+}\n+\n+Value estimatepriority(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"estimatepriority nblocks\\n\"\n+            \"\\nEstimates the approximate priority\\n\"\n+            \"a zero-fee transaction needs to get confirmed\\n\"\n+            \"within nblocks blocks.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. nblocks     (numeric)\\n\"\n+            \"\\nResult:\\n\"\n+            \"n :    (numeric) estimated priority\\n\"\n+            \"\\n\"\n+            \"-1.0 is returned if not enough transactions and\\n\"\n+            \"blocks have been observed to make an estimate.\\n\"\n+            \"\\nExample:\\n\"\n+            + HelpExampleCli(\"estimatepriority\", \"6\")\n+            );\n+\n+    RPCTypeCheck(params, boost::assign::list_of(int_type));\n+\n+    int nBlocks = params[0].get_int();\n+    if (nBlocks < 1)\n+        nBlocks = 1;\n+\n+    return mempool.estimatePriority(nBlocks);\n+}"
      },
      {
        "sha": "5181aa23d8d7e2bbb5b87927ab7d1b49c128b6a7",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -73,17 +73,17 @@ Value getinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n     obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n-    obj.push_back(Pair(\"testnet\",       TestNet()));\n+    obj.push_back(Pair(\"testnet\",       Params().NetworkID() == CChainParams::TESTNET));\n #ifdef ENABLE_WALLET\n     if (pwalletMain) {\n         obj.push_back(Pair(\"keypoololdest\", pwalletMain->GetOldestKeyPoolTime()));\n         obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n     }\n     if (pwalletMain && pwalletMain->IsCrypted())\n         obj.push_back(Pair(\"unlocked_until\", nWalletUnlockTime));\n-    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(nTransactionFee)));\n+    obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(payTxFee.GetFeePerK())));\n #endif\n-    obj.push_back(Pair(\"relayfee\",      ValueFromAmount(CTransaction::nMinRelayTxFee)));\n+    obj.push_back(Pair(\"relayfee\",      ValueFromAmount(CTransaction::minRelayTxFee.GetFeePerK())));\n     obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n     return obj;\n }"
      },
      {
        "sha": "0eca55a472ccc6b97cfc5096f9051429d72db810",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -166,7 +166,7 @@ Value addnode(const Array& params, bool fHelp)\n     if (strCommand == \"onetry\")\n     {\n         CAddress addr;\n-        ConnectNode(addr, strNode.c_str());\n+        OpenNetworkConnection(addr, NULL, strNode.c_str());\n         return Value::null;\n     }\n \n@@ -368,7 +368,7 @@ Value getnetworkinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n     obj.push_back(Pair(\"proxy\",         (proxy.first.IsValid() ? proxy.first.ToStringIPPort() : string())));\n-    obj.push_back(Pair(\"relayfee\",      ValueFromAmount(CTransaction::nMinRelayTxFee)));\n+    obj.push_back(Pair(\"relayfee\",      ValueFromAmount(CTransaction::minRelayTxFee.GetFeePerK())));\n     Array localAddresses;\n     {\n         LOCK(cs_mapLocalHost);"
      },
      {
        "sha": "2718f81783c3e3fbb516c85f2277cf1a54aaf55a",
        "filename": "src/rpcprotocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 9,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcprotocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcprotocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -51,15 +51,7 @@ string HTTPPost(const string& strMsg, const map<string,string>& mapRequestHeader\n \n static string rfc1123Time()\n {\n-    char buffer[64];\n-    time_t now;\n-    time(&now);\n-    struct tm* now_gmt = gmtime(&now);\n-    string locale(setlocale(LC_TIME, NULL));\n-    setlocale(LC_TIME, \"C\"); // we want POSIX (aka \"C\") weekday/month strings\n-    strftime(buffer, sizeof(buffer), \"%a, %d %b %Y %H:%M:%S +0000\", now_gmt);\n-    setlocale(LC_TIME, locale.c_str());\n-    return string(buffer);\n+    return DateTimeStrFormat(\"%a, %d %b %Y %H:%M:%S +0000\", GetTime());\n }\n \n string HTTPReply(int nStatus, const string& strMsg, bool keepalive)"
      },
      {
        "sha": "d4ceb7f995f73b389d55271007ff721a1daced9a",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -254,7 +254,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n     { \"getmininginfo\",          &getmininginfo,          true,      false,      false },\n     { \"getnetworkhashps\",       &getnetworkhashps,       true,      false,      false },\n-    { \"submitblock\",            &submitblock,            false,     false,      false },\n+    { \"submitblock\",            &submitblock,            false,     true,       false },\n \n     /* Raw transactions */\n     { \"createrawtransaction\",   &createrawtransaction,   false,     false,      false },\n@@ -268,6 +268,8 @@ static const CRPCCommand vRPCCommands[] =\n     { \"createmultisig\",         &createmultisig,         true,      true ,      false },\n     { \"validateaddress\",        &validateaddress,        true,      false,      false }, /* uses wallet if enabled */\n     { \"verifymessage\",          &verifymessage,          false,     false,      false },\n+    { \"estimatefee\",            &estimatefee,            true,      true,       false },\n+    { \"estimatepriority\",       &estimatepriority,       true,      true,       false },\n \n #ifdef ENABLE_WALLET\n     /* Wallet */"
      },
      {
        "sha": "73e8b9426c4ec95998cf511664ef1fbd9f0b203b",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -133,6 +133,8 @@ extern json_spirit::Value getmininginfo(const json_spirit::Array& params, bool f\n extern json_spirit::Value getwork(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getblocktemplate(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value submitblock(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value estimatefee(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value estimatepriority(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value getnewaddress(const json_spirit::Array& params, bool fHelp); // in rpcwallet.cpp\n extern json_spirit::Value getaccountaddress(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "f376ab6b636c7f980b9924a66bc4cbfd0bdffd90",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -318,7 +318,7 @@ Value sendtoaddress(const Array& params, bool fHelp)\n             \"                             to which you're sending the transaction. This is not part of the \\n\"\n             \"                             transaction, just kept in your wallet.\\n\"\n             \"\\nResult:\\n\"\n-            \"\\\"transactionid\\\"  (string) The transaction id. (view at https://blockchain.info/tx/[transactionid])\\n\"\n+            \"\\\"transactionid\\\"  (string) The transaction id.\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1\")\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n@@ -747,7 +747,7 @@ Value sendfrom(const Array& params, bool fHelp)\n             \"                                     to which you're sending the transaction. This is not part of the transaction, \\n\"\n             \"                                     it is just kept in your wallet.\\n\"\n             \"\\nResult:\\n\"\n-            \"\\\"transactionid\\\"        (string) The transaction id. (view at https://blockchain.info/tx/[transactionid])\\n\"\n+            \"\\\"transactionid\\\"        (string) The transaction id.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nSend 0.01 btc from the default account to the address, must have at least 1 confirmation\\n\"\n             + HelpExampleCli(\"sendfrom\", \"\\\"\\\" \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.01\") +\n@@ -807,7 +807,7 @@ Value sendmany(const Array& params, bool fHelp)\n             \"4. \\\"comment\\\"             (string, optional) A comment\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"transactionid\\\"          (string) The transaction id for the send. Only 1 transaction is created regardless of \\n\"\n-            \"                                    the number of addresses. See https://blockchain.info/tx/[transactionid]\\n\"\n+            \"                                    the number of addresses.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nSend two amounts to two different addresses:\\n\"\n             + HelpExampleCli(\"sendmany\", \"\\\"tabby\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\"\") +\n@@ -1209,8 +1209,7 @@ Value listtransactions(const Array& params, bool fHelp)\n             \"                                          category of transactions.\\n\"\n             \"    \\\"blockindex\\\": n,          (numeric) The block index containing the transaction. Available for 'send' and 'receive'\\n\"\n             \"                                          category of transactions.\\n\"\n-            \"    \\\"txid\\\": \\\"transactionid\\\", (string) The transaction id (see https://blockchain.info/tx/[transactionid]. Available \\n\"\n-            \"                                          for 'send' and 'receive' category of transactions.\\n\"\n+            \"    \\\"txid\\\": \\\"transactionid\\\", (string) The transaction id. Available for 'send' and 'receive' category of transactions.\\n\"\n             \"    \\\"time\\\": xxx,              (numeric) The transaction time in seconds since epoch (midnight Jan 1 1970 GMT).\\n\"\n             \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (midnight Jan 1 1970 GMT). Available \\n\"\n             \"                                          for 'send' and 'receive' category of transactions.\\n\"\n@@ -1375,7 +1374,7 @@ Value listsinceblock(const Array& params, bool fHelp)\n             \"    \\\"blockhash\\\": \\\"hashvalue\\\",     (string) The block hash containing the transaction. Available for 'send' and 'receive' category of transactions.\\n\"\n             \"    \\\"blockindex\\\": n,          (numeric) The block index containing the transaction. Available for 'send' and 'receive' category of transactions.\\n\"\n             \"    \\\"blocktime\\\": xxx,         (numeric) The block time in seconds since epoch (1 Jan 1970 GMT).\\n\"\n-            \"    \\\"txid\\\": \\\"transactionid\\\",  (string) The transaction id (see https://blockchain.info/tx/[transactionid]. Available for 'send' and 'receive' category of transactions.\\n\"\n+            \"    \\\"txid\\\": \\\"transactionid\\\",  (string) The transaction id. Available for 'send' and 'receive' category of transactions.\\n\"\n             \"    \\\"time\\\": xxx,              (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT).\\n\"\n             \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (Jan 1 1970 GMT). Available for 'send' and 'receive' category of transactions.\\n\"\n             \"    \\\"comment\\\": \\\"...\\\",       (string) If a comment is associated with the transaction.\\n\"\n@@ -1447,7 +1446,7 @@ Value gettransaction(const Array& params, bool fHelp)\n             \"  \\\"blockhash\\\" : \\\"hash\\\",  (string) The block hash\\n\"\n             \"  \\\"blockindex\\\" : xx,       (numeric) The block index\\n\"\n             \"  \\\"blocktime\\\" : ttt,       (numeric) The time in seconds since epoch (1 Jan 1970 GMT)\\n\"\n-            \"  \\\"txid\\\" : \\\"transactionid\\\",   (string) The transaction id, see also https://blockchain.info/tx/[transactionid]\\n\"\n+            \"  \\\"txid\\\" : \\\"transactionid\\\",   (string) The transaction id.\\n\"\n             \"  \\\"time\\\" : ttt,            (numeric) The transaction time in seconds since epoch (1 Jan 1970 GMT)\\n\"\n             \"  \\\"timereceived\\\" : ttt,    (numeric) The time received in seconds since epoch (1 Jan 1970 GMT)\\n\"\n             \"  \\\"details\\\" : [\\n\"\n@@ -1884,7 +1883,7 @@ Value settxfee(const Array& params, bool fHelp)\n     if (params[0].get_real() != 0.0)\n         nAmount = AmountFromValue(params[0]);        // rejects 0.0 amounts\n \n-    nTransactionFee = nAmount;\n+    payTxFee = CFeeRate(nAmount, 1000);\n     return true;\n }\n "
      },
      {
        "sha": "11cdfef950ad6a8495648f785fefcb69cba4e3df",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 10,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -208,14 +208,13 @@ const char* GetOpName(opcodetype opcode)\n     case OP_NOP9                   : return \"OP_NOP9\";\n     case OP_NOP10                  : return \"OP_NOP10\";\n \n+    case OP_INVALIDOPCODE          : return \"OP_INVALIDOPCODE\";\n \n+    // Note:\n+    //  The template matching params OP_SMALLDATA/etc are defined in opcodetype enum\n+    //  as kind of implementation hack, they are *NOT* real opcodes.  If found in real\n+    //  Script, just let the default: case deal with them.\n \n-    // template matching params\n-    case OP_PUBKEYHASH             : return \"OP_PUBKEYHASH\";\n-    case OP_PUBKEY                 : return \"OP_PUBKEY\";\n-    case OP_SMALLDATA              : return \"OP_SMALLDATA\";\n-\n-    case OP_INVALIDOPCODE          : return \"OP_INVALIDOPCODE\";\n     default:\n         return \"OP_UNKNOWN\";\n     }\n@@ -839,10 +838,6 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, co\n                     valtype& vchSig    = stacktop(-2);\n                     valtype& vchPubKey = stacktop(-1);\n \n-                    ////// debug print\n-                    //PrintHex(vchSig.begin(), vchSig.end(), \"sig: %s\\n\");\n-                    //PrintHex(vchPubKey.begin(), vchPubKey.end(), \"pubkey: %s\\n\");\n-\n                     // Subset of script starting at the most recent codeseparator\n                     CScript scriptCode(pbegincodehash, pend);\n "
      },
      {
        "sha": "a282e7dc04dbe54c949fa85666c5d1503ff9c0c6",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -691,12 +691,6 @@ class CScript : public std::vector<unsigned char>\n     void SetDestination(const CTxDestination& address);\n     void SetMultisig(int nRequired, const std::vector<CPubKey>& keys);\n \n-\n-    void PrintHex() const\n-    {\n-        LogPrintf(\"CScript(%s)\\n\", HexStr(begin(), end(), true).c_str());\n-    }\n-\n     std::string ToString() const\n     {\n         std::string str;\n@@ -720,11 +714,6 @@ class CScript : public std::vector<unsigned char>\n         return str;\n     }\n \n-    void print() const\n-    {\n-        LogPrintf(\"%s\\n\", ToString().c_str());\n-    }\n-\n     CScriptID GetID() const\n     {\n         return CScriptID(Hash160(*this));"
      },
      {
        "sha": "87bf73fec98d99ed7421093bfde8528d3ced4ddb",
        "filename": "src/test/Makefile",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/test/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/test/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -0,0 +1,6 @@\n+all:\n+\t$(MAKE) -C .. bitcoin_test\n+clean:\n+\t$(MAKE) -C .. bitcoin_test_clean\n+check:\n+\t$(MAKE) -C .. bitcoin_test_check"
      },
      {
        "sha": "cde3a31e2fb7c95d447dc5937153acb94d9c833a",
        "filename": "src/test/Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 77,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a48355dc44e8b86c2fc9f8b7973ac9e81a295be7/src/test/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a48355dc44e8b86c2fc9f8b7973ac9e81a295be7/src/test/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Makefile.am?ref=a48355dc44e8b86c2fc9f8b7973ac9e81a295be7",
        "patch": "@@ -1,77 +0,0 @@\n-include $(top_srcdir)/src/Makefile.include\n-\n-AM_CPPFLAGS += -I$(top_srcdir)/src\n-\n-bin_PROGRAMS = test_bitcoin\n-\n-TESTS = test_bitcoin\n-\n-JSON_TEST_FILES = \\\n-  data/script_valid.json \\\n-  data/base58_keys_valid.json \\\n-  data/sig_canonical.json \\\n-  data/sig_noncanonical.json \\\n-  data/base58_encode_decode.json \\\n-  data/base58_keys_invalid.json \\\n-  data/script_invalid.json \\\n-  data/tx_invalid.json \\\n-  data/tx_valid.json \\\n-  data/sighash.json\n-\n-RAW_TEST_FILES = data/alertTests.raw\n-\n-BUILT_SOURCES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n-\n-# test_bitcoin binary #\n-test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(TESTDEFS)\n-test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBLEVELDB) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-if ENABLE_WALLET\n-test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n-endif\n-test_bitcoin_LDADD += $(BDB_LIBS)\n-\n-test_bitcoin_SOURCES = \\\n-  bignum.h \\\n-  alert_tests.cpp \\\n-  allocator_tests.cpp \\\n-  base32_tests.cpp \\\n-  base58_tests.cpp \\\n-  base64_tests.cpp \\\n-  bloom_tests.cpp \\\n-  canonical_tests.cpp \\\n-  checkblock_tests.cpp \\\n-  Checkpoints_tests.cpp \\\n-  compress_tests.cpp \\\n-  DoS_tests.cpp \\\n-  getarg_tests.cpp \\\n-  key_tests.cpp \\\n-  main_tests.cpp \\\n-  miner_tests.cpp \\\n-  mruset_tests.cpp \\\n-  multisig_tests.cpp \\\n-  netbase_tests.cpp \\\n-  pmt_tests.cpp \\\n-  rpc_tests.cpp \\\n-  script_P2SH_tests.cpp \\\n-  script_tests.cpp \\\n-  serialize_tests.cpp \\\n-  sigopcount_tests.cpp \\\n-  test_bitcoin.cpp \\\n-  transaction_tests.cpp \\\n-  uint256_tests.cpp \\\n-  util_tests.cpp \\\n-  scriptnum_tests.cpp \\\n-  sighash_tests.cpp \\\n-  $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n-\n-if ENABLE_WALLET\n-test_bitcoin_SOURCES += \\\n-   accounting_tests.cpp \\\n-   wallet_tests.cpp \\\n-   rpc_wallet_tests.cpp\n-endif\n-\n-nodist_test_bitcoin_SOURCES = $(BUILT_SOURCES)\n-\n-CLEANFILES = *.gcda *.gcno $(BUILT_SOURCES)"
      },
      {
        "sha": "aa8e5ca6c35a770c1e9656fcb767623964343d05",
        "filename": "src/test/data/tx_valid.json",
        "status": "modified",
        "additions": 47,
        "deletions": 1,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/test/data/tx_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/test/data/tx_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_valid.json?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -16,7 +16,7 @@\n [\"It is an OP_CHECKMULTISIG with an arbitrary extra byte stuffed into the signature at pos length - 2\"],\n [\"The dummy byte is fine however, so the NULLDUMMY flag should be happy\"],\n [[[\"60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1\", 0, \"1 0x41 0x04cc71eb30d653c0c3163990c47b976f3fb3f37cccdcbedb169a1dfef58bbfbfaff7d8a473e7e2e6d317b87bafe8bde97e3cf8f065dec022b51d11fcdd0d348ac4 0x41 0x0461cbdcc5409fb4b4d42b51d33381354d80e550078cb532a34bfa2fcfdeb7d76519aecc62770f5b0e4ef8551946d8a540911abe3e7854a26f39f58b25c15342af 2 OP_CHECKMULTISIG\"]],\n-\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004A0048304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2bab01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n+\"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004a0048304402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e1681a33eb60996631bf6bf5bc0a0682c4db743ce7ca2bab01ffffffff0140420f00000000001976a914660d4ef3a743e3e696ad990364e555c271ad504b88ac00000000\", \"P2SH,NULLDUMMY\"],\n \n [\"The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63\"],\n [\"It is an OP_CHECKMULTISIG with the dummy value set to something other than an empty string\"],\n@@ -132,5 +132,51 @@\n [[[\"ba4cd7ae2ad4d4d13ebfc8ab1d93a63e4a6563f25089a18bf0fc68f282aa88c1\", 0, \"2 0x21 0x037c615d761e71d38903609bf4f46847266edc2fb37532047d747ba47eaae5ffe1 0x21 0x02edc823cd634f2c4033d94f5755207cb6b60c4b1f1f056ad7471c47de5f2e4d50 2 CHECKMULTISIG NOT\"]],\n \"0100000001c188aa82f268fcf08ba18950f263654a3ea6931dabc8bf3ed1d4d42aaed74cba000000004b0000483045022100940378576e069aca261a6b26fb38344e4497ca6751bb10905c76bb689f4222b002204833806b014c26fd801727b792b1260003c55710f87c5adbd7a9cb57446dbc9801ffffffff0101000000000000002321037c615d761e71d38903609bf4f46847266edc2fb37532047d747ba47eaae5ffe1ac00000000\", \"P2SH\"],\n \n+\n+[\"OP_CODESEPARATOR tests\"],\n+\n+[\"Test that SignatureHash() removes OP_CODESEPARATOR with FindAndDelete()\"],\n+[[[\"bc7fd132fcf817918334822ee6d9bd95c889099c96e07ca2c1eb2cc70db63224\", 0, \"CODESEPARATOR 0x21 0x038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041 CHECKSIG\"]],\n+\"01000000012432b60dc72cebc1a27ce0969c0989c895bdd9e62e8234839117f8fc32d17fbc000000004a493046022100a576b52051962c25e642c0fd3d77ee6c92487048e5d90818bcf5b51abaccd7900221008204f8fb121be4ec3b24483b1f92d89b1b0548513a134e345c5442e86e8617a501ffffffff010000000000000000016a00000000\", \"P2SH\"],\n+[[[\"83e194f90b6ef21fa2e3a365b63794fb5daa844bdc9b25de30899fcfe7b01047\", 0, \"CODESEPARATOR CODESEPARATOR 0x21 0x038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041 CHECKSIG\"]],\n+\"01000000014710b0e7cf9f8930de259bdc4b84aa5dfb9437b665a3e3a21ff26e0bf994e183000000004a493046022100a166121a61b4eeb19d8f922b978ff6ab58ead8a5a5552bf9be73dc9c156873ea02210092ad9bc43ee647da4f6652c320800debcf08ec20a094a0aaf085f63ecb37a17201ffffffff010000000000000000016a00000000\", \"P2SH\"],\n+\n+[\"Hashed data starts at the CODESEPARATOR\"],\n+[[[\"326882a7f22b5191f1a0cc9962ca4b878cd969cf3b3a70887aece4d801a0ba5e\", 0, \"0x21 0x038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041 CODESEPARATOR CHECKSIG\"]],\n+\"01000000015ebaa001d8e4ec7a88703a3bcf69d98c874bca6299cca0f191512bf2a7826832000000004948304502203bf754d1c6732fbf87c5dcd81258aefd30f2060d7bd8ac4a5696f7927091dad1022100f5bcb726c4cf5ed0ed34cc13dadeedf628ae1045b7cb34421bc60b89f4cecae701ffffffff010000000000000000016a00000000\", \"P2SH\"],\n+\n+[\"But only if execution has reached it\"],\n+[[[\"a955032f4d6b0c9bfe8cad8f00a8933790b9c1dc28c82e0f48e75b35da0e4944\", 0, \"0x21 0x038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041 CHECKSIGVERIFY CODESEPARATOR 0x21 0x038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041 CHECKSIGVERIFY CODESEPARATOR 1\"]],\n+\"010000000144490eda355be7480f2ec828dcc1b9903793a8008fad8cfe9b0c6b4d2f0355a900000000924830450221009c0a27f886a1d8cb87f6f595fbc3163d28f7a81ec3c4b252ee7f3ac77fd13ffa02203caa8dfa09713c8c4d7ef575c75ed97812072405d932bd11e6a1593a98b679370148304502201e3861ef39a526406bad1e20ecad06be7375ad40ddb582c9be42d26c3a0d7b240221009d0a3985e96522e59635d19cc4448547477396ce0ef17a58e7d74c3ef464292301ffffffff010000000000000000016a00000000\", \"P2SH\"],\n+\n+[\"CHECKSIG is legal in scriptSigs\"],\n+[[[\"ccf7f4053a02e653c36ac75c891b7496d0dc5ce5214f6c913d9cf8f1329ebee0\", 0, \"DUP HASH160 0x14 0xee5a6aa40facefb2655ac23c0c28c57c65c41f9b EQUALVERIFY CHECKSIG\"]],\n+\"0100000001e0be9e32f1f89c3d916c4f21e55cdcd096741b895cc76ac353e6023a05f4f7cc00000000d86149304602210086e5f736a2c3622ebb62bd9d93d8e5d76508b98be922b97160edc3dcca6d8c47022100b23c312ac232a4473f19d2aeb95ab7bdf2b65518911a0d72d50e38b5dd31dc820121038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ac4730440220508fa761865c8abd81244a168392876ee1d94e8ed83897066b5e2df2400dad24022043f5ee7538e87e9c6aef7ef55133d3e51da7cc522830a9c4d736977a76ef755c0121038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ffffffff010000000000000000016a00000000\", \"P2SH\"],\n+\n+[\"Same semantics for OP_CODESEPARATOR\"],\n+[[[\"10c9f0effe83e97f80f067de2b11c6a00c3088a4bce42c5ae761519af9306f3c\", 1, \"DUP HASH160 0x14 0xee5a6aa40facefb2655ac23c0c28c57c65c41f9b EQUALVERIFY CHECKSIG\"]],\n+\"01000000013c6f30f99a5161e75a2ce4bca488300ca0c6112bde67f0807fe983feeff0c91001000000e608646561646265656675ab61493046022100ce18d384221a731c993939015e3d1bcebafb16e8c0b5b5d14097ec8177ae6f28022100bcab227af90bab33c3fe0a9abfee03ba976ee25dc6ce542526e9b2e56e14b7f10121038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ac493046022100c3b93edcc0fd6250eb32f2dd8a0bba1754b0f6c3be8ed4100ed582f3db73eba2022100bf75b5bd2eff4d6bf2bda2e34a40fcc07d4aa3cf862ceaa77b47b81eff829f9a01ab21038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ffffffff010000000000000000016a00000000\", \"P2SH\"],\n+\n+[\"Signatures are removed from the script they are in by FindAndDelete() in the CHECKSIG code; even multiple instances of one signature can be removed.\"],\n+[[[\"6056ebd549003b10cbbd915cea0d82209fe40b8617104be917a26fa92cbe3d6f\", 0, \"DUP HASH160 0x14 0xee5a6aa40facefb2655ac23c0c28c57c65c41f9b EQUALVERIFY CHECKSIG\"]],\n+\"01000000016f3dbe2ca96fa217e94b1017860be49f20820dea5c91bdcb103b0049d5eb566000000000fd1d0147304402203989ac8f9ad36b5d0919d97fa0a7f70c5272abee3b14477dc646288a8b976df5022027d19da84a066af9053ad3d1d7459d171b7e3a80bc6c4ef7a330677a6be548140147304402203989ac8f9ad36b5d0919d97fa0a7f70c5272abee3b14477dc646288a8b976df5022027d19da84a066af9053ad3d1d7459d171b7e3a80bc6c4ef7a330677a6be548140121038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ac47304402203757e937ba807e4a5da8534c17f9d121176056406a6465054bdd260457515c1a02200f02eccf1bec0f3a0d65df37889143c2e88ab7acec61a7b6f5aa264139141a2b0121038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ffffffff010000000000000000016a00000000\", \"P2SH\"],\n+\n+[\"That also includes ahead of the opcode being executed.\"],\n+[[[\"5a6b0021a6042a686b6b94abc36b387bef9109847774e8b1e51eb8cc55c53921\", 1, \"DUP HASH160 0x14 0xee5a6aa40facefb2655ac23c0c28c57c65c41f9b EQUALVERIFY CHECKSIG\"]],\n+\"01000000012139c555ccb81ee5b1e87477840991ef7b386bc3ab946b6b682a04a621006b5a01000000fdb40148304502201723e692e5f409a7151db386291b63524c5eb2030df652b1f53022fd8207349f022100b90d9bbf2f3366ce176e5e780a00433da67d9e5c79312c6388312a296a5800390148304502201723e692e5f409a7151db386291b63524c5eb2030df652b1f53022fd8207349f022100b90d9bbf2f3366ce176e5e780a00433da67d9e5c79312c6388312a296a5800390121038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f2204148304502201723e692e5f409a7151db386291b63524c5eb2030df652b1f53022fd8207349f022100b90d9bbf2f3366ce176e5e780a00433da67d9e5c79312c6388312a296a5800390175ac4830450220646b72c35beeec51f4d5bc1cbae01863825750d7f490864af354e6ea4f625e9c022100f04b98432df3a9641719dbced53393022e7249fb59db993af1118539830aab870148304502201723e692e5f409a7151db386291b63524c5eb2030df652b1f53022fd8207349f022100b90d9bbf2f3366ce176e5e780a00433da67d9e5c79312c6388312a296a580039017521038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041ffffffff010000000000000000016a00000000\", \"P2SH\"],\n+\n+[\"Finally CHECKMULTISIG removes all signatures prior to hashing the script containing those signatures. In conjunction with the SIGHASH_SINGLE bug this lets us test whether or not FindAndDelete() is actually present in scriptPubKey/redeemScript evaluation by including a signature of the digest 0x01 We can compute in advance for our pubkey, embed it it in the scriptPubKey, and then also using a normal SIGHASH_ALL signature. If FindAndDelete() wasn't run, the 'bugged' signature would still be in the hashed script, and the normal signature would fail.\"],\n+\n+[\"Here's an example on mainnet within a P2SH redeemScript. Remarkably it's a standard transaction in <0.9\"],\n+[[[\"b5b598de91787439afd5938116654e0b16b7a0d0f82742ba37564219c5afcbf9\", 0, \"DUP HASH160 0x14 0xf6f365c40f0739b61de827a44751e5e99032ed8f EQUALVERIFY CHECKSIG\"],\n+  [\"ab9805c6d57d7070d9a42c5176e47bb705023e6b67249fb6760880548298e742\", 0, \"HASH160 0x14 0xd8dacdadb7462ae15cd906f1878706d0da8660e6 EQUAL\"]],\n+\"0100000002f9cbafc519425637ba4227f8d0a0b7160b4e65168193d5af39747891de98b5b5000000006b4830450221008dd619c563e527c47d9bd53534a770b102e40faa87f61433580e04e271ef2f960220029886434e18122b53d5decd25f1f4acb2480659fea20aabd856987ba3c3907e0121022b78b756e2258af13779c1a1f37ea6800259716ca4b7f0b87610e0bf3ab52a01ffffffff42e7988254800876b69f24676b3e0205b77be476512ca4d970707dd5c60598ab00000000fd260100483045022015bd0139bcccf990a6af6ec5c1c52ed8222e03a0d51c334df139968525d2fcd20221009f9efe325476eb64c3958e4713e9eefe49bf1d820ed58d2112721b134e2a1a53034930460221008431bdfa72bc67f9d41fe72e94c88fb8f359ffa30b33c72c121c5a877d922e1002210089ef5fc22dd8bfc6bf9ffdb01a9862d27687d424d1fefbab9e9c7176844a187a014c9052483045022015bd0139bcccf990a6af6ec5c1c52ed8222e03a0d51c334df139968525d2fcd20221009f9efe325476eb64c3958e4713e9eefe49bf1d820ed58d2112721b134e2a1a5303210378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c71210378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c7153aeffffffff01a08601000000000017a914d8dacdadb7462ae15cd906f1878706d0da8660e68700000000\", \"P2SH\"],\n+\n+[\"Same idea, but with bare CHECKMULTISIG\"],\n+[[[\"ceafe58e0f6e7d67c0409fbbf673c84c166e3c5d3c24af58f7175b18df3bb3db\", 0, \"DUP HASH160 0x14 0xf6f365c40f0739b61de827a44751e5e99032ed8f EQUALVERIFY CHECKSIG\"],\n+  [\"ceafe58e0f6e7d67c0409fbbf673c84c166e3c5d3c24af58f7175b18df3bb3db\", 1, \"2 0x48 0x3045022015bd0139bcccf990a6af6ec5c1c52ed8222e03a0d51c334df139968525d2fcd20221009f9efe325476eb64c3958e4713e9eefe49bf1d820ed58d2112721b134e2a1a5303 0x21 0x0378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c71 0x21 0x0378d430274f8c5ec1321338151e9f27f4c676a008bdf8638d07c0b6be9ab35c71 3 CHECKMULTISIG\"]],\n+\"0100000002dbb33bdf185b17f758af243c5d3c6e164cc873f6bb9f40c0677d6e0f8ee5afce000000006b4830450221009627444320dc5ef8d7f68f35010b4c050a6ed0d96b67a84db99fda9c9de58b1e02203e4b4aaa019e012e65d69b487fdf8719df72f488fa91506a80c49a33929f1fd50121022b78b756e2258af13779c1a1f37ea6800259716ca4b7f0b87610e0bf3ab52a01ffffffffdbb33bdf185b17f758af243c5d3c6e164cc873f6bb9f40c0677d6e0f8ee5afce010000009300483045022015bd0139bcccf990a6af6ec5c1c52ed8222e03a0d51c334df139968525d2fcd20221009f9efe325476eb64c3958e4713e9eefe49bf1d820ed58d2112721b134e2a1a5303483045022015bd0139bcccf990a6af6ec5c1c52ed8222e03a0d51c334df139968525d2fcd20221009f9efe325476eb64c3958e4713e9eefe49bf1d820ed58d2112721b134e2a1a5303ffffffff01a0860100000000001976a9149bc0bbdd3024da4d0c38ed1aecf5c68dd1d3fa1288ac00000000\", \"P2SH\"],\n+\n+\n [\"Make diffs cleaner by leaving a comment here without comma at the end\"]\n ]"
      },
      {
        "sha": "1dc2a3d82fb15924c1c4dac53cd9bf471a8bb9af",
        "filename": "src/test/rpc_wallet_tests.cpp",
        "status": "modified",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/test/rpc_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/test/rpc_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_wallet_tests.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -67,6 +67,31 @@ BOOST_AUTO_TEST_CASE(rpc_wallet)\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n+    CPubKey demoPubkey = pwalletMain->GenerateNewKey();\n+\tCBitcoinAddress demoAddress = CBitcoinAddress(CTxDestination(demoPubkey.GetID()));\n+\tValue retValue;\n+\tstring strAccount = \"walletDemoAccount\";\n+\tstring strPurpose = \"receive\";\n+\tBOOST_CHECK_NO_THROW({ /*Initialize Wallet with an account */\n+\t\tCWalletDB walletdb(pwalletMain->strWalletFile);\n+\t\tCAccount account;\n+\t\taccount.vchPubKey = demoPubkey;\n+\t\tpwalletMain->SetAddressBook(account.vchPubKey.GetID(), strAccount, strPurpose);\n+\t\twalletdb.WriteAccount(strAccount, account);\n+\t});\n+\n+\n+\t/*********************************\n+\t * \t\t\tsetaccount\n+\t *********************************/\n+\tBOOST_CHECK_NO_THROW(CallRPC(\"setaccount 1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ nullaccount\"));\n+\tBOOST_CHECK_THROW(CallRPC(\"setaccount\"), runtime_error);\n+\t/* 1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4X (33 chars) is an illegal address (should be 34 chars) */\n+\tBOOST_CHECK_THROW(CallRPC(\"setaccount 1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4X nullaccount\"), runtime_error);\n+\n+    /*********************************\n+     * \t\t\tlistunspent\n+     *********************************/\n     BOOST_CHECK_NO_THROW(CallRPC(\"listunspent\"));\n     BOOST_CHECK_THROW(CallRPC(\"listunspent string\"), runtime_error);\n     BOOST_CHECK_THROW(CallRPC(\"listunspent 0 string\"), runtime_error);\n@@ -75,19 +100,81 @@ BOOST_AUTO_TEST_CASE(rpc_wallet)\n     BOOST_CHECK_NO_THROW(r=CallRPC(\"listunspent 0 1 []\"));\n     BOOST_CHECK(r.get_array().empty());\n \n+    /*********************************\n+\t * \t\tlistreceivedbyaddress\n+\t *********************************/\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress\"));\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress 0\"));\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress not_int\"), runtime_error);\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress 0 not_bool\"), runtime_error);\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress 0 true\"));\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress 0 true extra\"), runtime_error);\n \n+    /*********************************\n+\t * \t\tlistreceivedbyaccount\n+\t *********************************/\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount\"));\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0\"));\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount not_int\"), runtime_error);\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 not_bool\"), runtime_error);\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0 true\"));\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 true extra\"), runtime_error);\n+\n+    /*********************************\n+\t * \t\tgetrawchangeaddress\n+\t *********************************/\n+    BOOST_CHECK_NO_THROW(CallRPC(\"getrawchangeaddress\"));\n+\n+    /*********************************\n+\t * \t\tgetnewaddress\n+\t *********************************/\n+    BOOST_CHECK_NO_THROW(CallRPC(\"getnewaddress\"));\n+    BOOST_CHECK_NO_THROW(CallRPC(\"getnewaddress getnewaddress_demoaccount\"));\n+\n+    /*********************************\n+\t * \t\tgetaccountaddress\n+\t *********************************/\n+    BOOST_CHECK_NO_THROW(CallRPC(\"getaccountaddress \\\"\\\"\"));\n+\tBOOST_CHECK_NO_THROW(CallRPC(\"getaccountaddress accountThatDoesntExists\")); // Should generate a new account\n+\tBOOST_CHECK_NO_THROW(retValue = CallRPC(\"getaccountaddress \" + strAccount));\n+\tBOOST_CHECK(CBitcoinAddress(retValue.get_str()).Get() == demoAddress.Get());\n+\n+\t/*********************************\n+\t * \t\t\tgetaccount\n+\t *********************************/\n+\tBOOST_CHECK_THROW(CallRPC(\"getaccount\"), runtime_error);\n+\tBOOST_CHECK_NO_THROW(CallRPC(\"getaccount \" + demoAddress.ToString()));\n+\n+\t/*********************************\n+\t * \tsignmessage + verifymessage\n+\t *********************************/\n+\tBOOST_CHECK_NO_THROW(retValue = CallRPC(\"signmessage \" + demoAddress.ToString() + \" mymessage\"));\n+\tBOOST_CHECK_THROW(CallRPC(\"signmessage\"), runtime_error);\n+\t/* Should throw error because this address is not loaded in the wallet */\n+\tBOOST_CHECK_THROW(CallRPC(\"signmessage 1QFqqMUD55ZV3PJEJZtaKCsQmjLT6JkjvJ mymessage\"), runtime_error);\n+\n+\t/* missing arguments */\n+\tBOOST_CHECK_THROW(CallRPC(\"verifymessage \"+ demoAddress.ToString()), runtime_error);\n+\tBOOST_CHECK_THROW(CallRPC(\"verifymessage \"+ demoAddress.ToString() + \" \" + retValue.get_str()), runtime_error);\n+\t/* Illegal address */\n+\tBOOST_CHECK_THROW(CallRPC(\"verifymessage 1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4X \" + retValue.get_str() + \" mymessage\"), runtime_error);\n+\t/* wrong address */\n+\tBOOST_CHECK(CallRPC(\"verifymessage 1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ \" + retValue.get_str() + \" mymessage\").get_bool() == false);\n+\t/* Correct address and signature but wrong message */\n+\tBOOST_CHECK(CallRPC(\"verifymessage \"+ demoAddress.ToString() + \" \" + retValue.get_str() + \" wrongmessage\").get_bool() == false);\n+\t/* Correct address, message and signature*/\n+\tBOOST_CHECK(CallRPC(\"verifymessage \"+ demoAddress.ToString() + \" \" + retValue.get_str() + \" mymessage\").get_bool() == true);\n+\n+\t/*********************************\n+\t * \t\tgetaddressesbyaccount\n+\t *********************************/\n+\tBOOST_CHECK_THROW(CallRPC(\"getaddressesbyaccount\"), runtime_error);\n+\tBOOST_CHECK_NO_THROW(retValue = CallRPC(\"getaddressesbyaccount \" + strAccount));\n+\tArray arr = retValue.get_array();\n+\tBOOST_CHECK(arr.size() > 0);\n+\tBOOST_CHECK(CBitcoinAddress(arr[0].get_str()).Get() == demoAddress.Get());\n+\n }\n \n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "0b071361d81935fa3ea53da9105902e005b22c8b",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -108,13 +108,11 @@ BOOST_AUTO_TEST_CASE(util_HexStr)\n \n BOOST_AUTO_TEST_CASE(util_DateTimeStrFormat)\n {\n-/*These are platform-dependant and thus removed to avoid useless test failures\n     BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", 0), \"1970-01-01 00:00:00\");\n     BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", 0x7FFFFFFF), \"2038-01-19 03:14:07\");\n-    // Formats used within Bitcoin\n     BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", 1317425777), \"2011-09-30 23:36:17\");\n     BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%Y-%m-%d %H:%M\", 1317425777), \"2011-09-30 23:36\");\n-*/\n+    BOOST_CHECK_EQUAL(DateTimeStrFormat(\"%a, %d %b %Y %H:%M:%S +0000\", 1317425777), \"Fri, 30 Sep 2011 23:36:17 +0000\");\n }\n \n BOOST_AUTO_TEST_CASE(util_ParseParameters)\n@@ -353,4 +351,15 @@ BOOST_AUTO_TEST_CASE(test_ParseInt32)\n     BOOST_CHECK(!ParseInt32(\"32482348723847471234\", NULL));\n }\n \n+BOOST_AUTO_TEST_CASE(test_FormatParagraph)\n+{\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"\", 79, 0), \"\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"test\", 79, 0), \"test\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\" test\", 79, 0), \"test\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"test test\", 79, 0), \"test test\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"test test\", 4, 0), \"test\\ntest\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"testerde test \", 4, 0), \"testerde\\ntest\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"test test\", 4, 4), \"test\\n    test\");\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "4bf01d4848b1a07df931fed7707229e98b115dbb",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 370,
        "deletions": 0,
        "changes": 370,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -6,6 +6,8 @@\n #include \"core.h\"\n #include \"txmempool.h\"\n \n+#include <boost/circular_buffer.hpp>\n+\n using namespace std;\n \n CTxMemPoolEntry::CTxMemPoolEntry()\n@@ -35,12 +37,311 @@ CTxMemPoolEntry::GetPriority(unsigned int currentHeight) const\n     return dResult;\n }\n \n+//\n+// Keep track of fee/priority for transactions confirmed within N blocks\n+//\n+class CBlockAverage\n+{\n+private:\n+    boost::circular_buffer<CFeeRate> feeSamples;\n+    boost::circular_buffer<double> prioritySamples;\n+\n+    template<typename T> std::vector<T> buf2vec(boost::circular_buffer<T> buf) const\n+    {\n+        std::vector<T> vec(buf.begin(), buf.end());\n+        return vec;\n+    }\n+\n+public:\n+    CBlockAverage() : feeSamples(100), prioritySamples(100) { }\n+\n+    void RecordFee(const CFeeRate& feeRate) {\n+        feeSamples.push_back(feeRate);\n+    }\n+\n+    void RecordPriority(double priority) {\n+        prioritySamples.push_back(priority);\n+    }\n+\n+    size_t FeeSamples() const { return feeSamples.size(); }\n+    size_t GetFeeSamples(std::vector<CFeeRate>& insertInto) const\n+    {\n+        BOOST_FOREACH(const CFeeRate& f, feeSamples)\n+            insertInto.push_back(f);\n+        return feeSamples.size();\n+    }\n+    size_t PrioritySamples() const { return prioritySamples.size(); }\n+    size_t GetPrioritySamples(std::vector<double>& insertInto) const\n+    {\n+        BOOST_FOREACH(double d, prioritySamples)\n+            insertInto.push_back(d);\n+        return prioritySamples.size();\n+    }\n+\n+    // Used as belt-and-suspenders check when reading to detect\n+    // file corruption\n+    bool AreSane(const std::vector<CFeeRate>& vecFee)\n+    {\n+        BOOST_FOREACH(CFeeRate fee, vecFee)\n+        {\n+            if (fee < CFeeRate(0))\n+                return false;\n+            if (fee.GetFee(1000) > CTransaction::minRelayTxFee.GetFee(1000) * 10000)\n+                return false;\n+        }\n+        return true;\n+    }\n+    bool AreSane(const std::vector<double> vecPriority)\n+    {\n+        BOOST_FOREACH(double priority, vecPriority)\n+        {\n+            if (priority < 0)\n+                return false;\n+        }\n+        return true;\n+    }\n+\n+    void Write(CAutoFile& fileout) const\n+    {\n+        std::vector<CFeeRate> vecFee = buf2vec(feeSamples);\n+        fileout << vecFee;\n+        std::vector<double> vecPriority = buf2vec(prioritySamples);\n+        fileout << vecPriority;\n+    }\n+\n+    void Read(CAutoFile& filein) {\n+        std::vector<CFeeRate> vecFee;\n+        filein >> vecFee;\n+        if (AreSane(vecFee))\n+            feeSamples.insert(feeSamples.end(), vecFee.begin(), vecFee.end());\n+        else\n+            throw runtime_error(\"Corrupt fee value in estimates file.\");\n+        std::vector<double> vecPriority;\n+        filein >> vecPriority;\n+        if (AreSane(vecPriority))\n+            prioritySamples.insert(prioritySamples.end(), vecPriority.begin(), vecPriority.end());\n+        else\n+            throw runtime_error(\"Corrupt priority value in estimates file.\");\n+        if (feeSamples.size() + prioritySamples.size() > 0)\n+            LogPrint(\"estimatefee\", \"Read %d fee samples and %d priority samples\\n\",\n+                     feeSamples.size(), prioritySamples.size());\n+    }\n+};\n+\n+class CMinerPolicyEstimator\n+{\n+private:\n+    // Records observed averages transactions that confirmed within one block, two blocks,\n+    // three blocks etc.\n+    std::vector<CBlockAverage> history;\n+    std::vector<CFeeRate> sortedFeeSamples;\n+    std::vector<double> sortedPrioritySamples;\n+\n+    int nBestSeenHeight;\n+\n+    // nBlocksAgo is 0 based, i.e. transactions that confirmed in the highest seen block are\n+    // nBlocksAgo == 0, transactions in the block before that are nBlocksAgo == 1 etc.\n+    void seenTxConfirm(CFeeRate feeRate, double dPriority, int nBlocksAgo)\n+    {\n+        // Last entry records \"everything else\".\n+        int nBlocksTruncated = min(nBlocksAgo, (int) history.size() - 1);\n+        assert(nBlocksTruncated >= 0);\n+\n+        // We need to guess why the transaction was included in a block-- either\n+        // because it is high-priority or because it has sufficient fees.\n+        bool sufficientFee = (feeRate > CTransaction::minRelayTxFee);\n+        bool sufficientPriority = AllowFree(dPriority);\n+        const char* assignedTo = \"unassigned\";\n+        if (sufficientFee && !sufficientPriority)\n+        {\n+            history[nBlocksTruncated].RecordFee(feeRate);\n+            assignedTo = \"fee\";\n+        }\n+        else if (sufficientPriority && !sufficientFee)\n+        {\n+            history[nBlocksTruncated].RecordPriority(dPriority);\n+            assignedTo = \"priority\";\n+        }\n+        else\n+        {\n+            // Neither or both fee and priority sufficient to get confirmed:\n+            // don't know why they got confirmed.\n+        }\n+        LogPrint(\"estimatefee\", \"Seen TX confirm: %s : %s fee/%g priority, took %d blocks\\n\",\n+                 assignedTo, feeRate.ToString(), dPriority, nBlocksAgo);\n+    }\n+\n+public:\n+    CMinerPolicyEstimator(int nEntries) : nBestSeenHeight(0)\n+    {\n+        history.resize(nEntries);\n+    }\n+\n+    void seenBlock(const std::vector<CTxMemPoolEntry>& entries, int nBlockHeight)\n+    {\n+        if (nBlockHeight <= nBestSeenHeight)\n+        {\n+            // Ignore side chains and re-orgs; assuming they are random\n+            // they don't affect the estimate.\n+            // And if an attacker can re-org the chain at will, then\n+            // you've got much bigger problems than \"attacker can influence\n+            // transaction fees.\"\n+            return;\n+        }\n+        nBestSeenHeight = nBlockHeight;\n+\n+        // Fill up the history buckets based on how long transactions took\n+        // to confirm.\n+        std::vector<std::vector<const CTxMemPoolEntry*> > entriesByConfirmations;\n+        entriesByConfirmations.resize(history.size());\n+        BOOST_FOREACH(const CTxMemPoolEntry& entry, entries)\n+        {\n+            // How many blocks did it take for miners to include this transaction?\n+            int delta = nBlockHeight - entry.GetHeight();\n+            if (delta <= 0)\n+            {\n+                // Re-org made us lose height, this should only happen if we happen\n+                // to re-org on a difficulty transition point: very rare!\n+                continue;\n+            }\n+            if ((delta-1) >= (int)history.size())\n+                delta = history.size(); // Last bucket is catch-all\n+            entriesByConfirmations[delta-1].push_back(&entry);\n+        }\n+        for (size_t i = 0; i < entriesByConfirmations.size(); i++)\n+        {\n+            std::vector<const CTxMemPoolEntry*> &e = entriesByConfirmations.at(i);\n+            // Insert at most 10 random entries per bucket, otherwise a single block\n+            // can dominate an estimate:\n+            if (e.size() > 10) {\n+                std::random_shuffle(e.begin(), e.end());\n+                e.resize(10);\n+            }\n+            BOOST_FOREACH(const CTxMemPoolEntry* entry, e)\n+            {\n+                // Fees are stored and reported as BTC-per-kb:\n+                CFeeRate feeRate(entry->GetFee(), entry->GetTxSize());\n+                double dPriority = entry->GetPriority(entry->GetHeight()); // Want priority when it went IN\n+                seenTxConfirm(feeRate, dPriority, i);\n+            }\n+        }\n+        for (size_t i = 0; i < history.size(); i++) {\n+            if (history[i].FeeSamples() + history[i].PrioritySamples() > 0)\n+                LogPrint(\"estimatefee\", \"estimates: for confirming within %d blocks based on %d/%d samples, fee=%s, prio=%g\\n\", \n+                         i,\n+                         history[i].FeeSamples(), history[i].PrioritySamples(),\n+                         estimateFee(i+1).ToString(), estimatePriority(i+1));\n+        }\n+        sortedFeeSamples.clear();\n+        sortedPrioritySamples.clear();\n+    }\n+\n+    // Can return CFeeRate(0) if we don't have any data for that many blocks back. nBlocksToConfirm is 1 based.\n+    CFeeRate estimateFee(int nBlocksToConfirm)\n+    {\n+        nBlocksToConfirm--;\n+\n+        if (nBlocksToConfirm < 0 || nBlocksToConfirm >= (int)history.size())\n+            return CFeeRate(0);\n+\n+        if (sortedFeeSamples.size() == 0)\n+        {\n+            for (size_t i = 0; i < history.size(); i++)\n+                history.at(i).GetFeeSamples(sortedFeeSamples);\n+            std::sort(sortedFeeSamples.begin(), sortedFeeSamples.end(),\n+                      std::greater<CFeeRate>());\n+        }\n+        if (sortedFeeSamples.size() == 0)\n+            return CFeeRate(0);\n+\n+        int nBucketSize = history.at(nBlocksToConfirm).FeeSamples();\n+\n+        // Estimates should not increase as number of confirmations goes up,\n+        // but the estimates are noisy because confirmations happen discretely\n+        // in blocks. To smooth out the estimates, use all samples in the history\n+        // and use the nth highest where n is (number of samples in previous bucket +\n+        // half the samples in nBlocksToConfirm bucket):\n+        size_t nPrevSize = 0;\n+        for (int i = 0; i < nBlocksToConfirm; i++)\n+            nPrevSize += history.at(i).FeeSamples();\n+        size_t index = min(nPrevSize + nBucketSize/2, sortedFeeSamples.size()-1);\n+        return sortedFeeSamples[index];\n+    }\n+    double estimatePriority(int nBlocksToConfirm)\n+    {\n+        nBlocksToConfirm--;\n+\n+        if (nBlocksToConfirm < 0 || nBlocksToConfirm >= (int)history.size())\n+            return -1;\n+\n+        if (sortedPrioritySamples.size() == 0)\n+        {\n+            for (size_t i = 0; i < history.size(); i++)\n+                history.at(i).GetPrioritySamples(sortedPrioritySamples);\n+            std::sort(sortedPrioritySamples.begin(), sortedPrioritySamples.end(),\n+                      std::greater<double>());\n+        }\n+        if (sortedPrioritySamples.size() == 0)\n+            return -1.0;\n+\n+        int nBucketSize = history.at(nBlocksToConfirm).PrioritySamples();\n+\n+        // Estimates should not increase as number of confirmations needed goes up,\n+        // but the estimates are noisy because confirmations happen discretely\n+        // in blocks. To smooth out the estimates, use all samples in the history\n+        // and use the nth highest where n is (number of samples in previous buckets +\n+        // half the samples in nBlocksToConfirm bucket).\n+        size_t nPrevSize = 0;\n+        for (int i = 0; i < nBlocksToConfirm; i++)\n+            nPrevSize += history.at(i).PrioritySamples();\n+        size_t index = min(nPrevSize + nBucketSize/2, sortedFeeSamples.size()-1);\n+        return sortedPrioritySamples[index];\n+    }\n+\n+    void Write(CAutoFile& fileout) const\n+    {\n+        fileout << nBestSeenHeight;\n+        fileout << history.size();\n+        BOOST_FOREACH(const CBlockAverage& entry, history)\n+        {\n+            entry.Write(fileout);\n+        }\n+    }\n+\n+    void Read(CAutoFile& filein)\n+    {\n+        filein >> nBestSeenHeight;\n+        size_t numEntries;\n+        filein >> numEntries;\n+        history.clear();\n+        for (size_t i = 0; i < numEntries; i++)\n+        {\n+            CBlockAverage entry;\n+            entry.Read(filein);\n+            history.push_back(entry);\n+        }\n+    }\n+};\n+\n+\n CTxMemPool::CTxMemPool()\n {\n     // Sanity checks off by default for performance, because otherwise\n     // accepting transactions becomes O(N^2) where N is the number\n     // of transactions in the pool\n     fSanityCheck = false;\n+\n+    // 25 blocks is a compromise between using a lot of disk/memory and\n+    // trying to give accurate estimates to people who might be willing\n+    // to wait a day or two to save a fraction of a penny in fees.\n+    // Confirmation times for very-low-fee transactions that take more\n+    // than an hour or three to confirm are highly variable.\n+    minerPolicyEstimator = new CMinerPolicyEstimator(25);\n+}\n+\n+CTxMemPool::~CTxMemPool()\n+{\n+    delete minerPolicyEstimator;\n }\n \n void CTxMemPool::pruneSpent(const uint256 &hashTx, CCoins &coins)\n@@ -128,6 +429,28 @@ void CTxMemPool::removeConflicts(const CTransaction &tx, std::list<CTransaction>\n     }\n }\n \n+// Called when a block is connected. Removes from mempool and updates the miner fee estimator.\n+void CTxMemPool::removeForBlock(const std::vector<CTransaction>& vtx, unsigned int nBlockHeight,\n+                                std::list<CTransaction>& conflicts)\n+{\n+    LOCK(cs);\n+    std::vector<CTxMemPoolEntry> entries;\n+    BOOST_FOREACH(const CTransaction& tx, vtx)\n+    {\n+        uint256 hash = tx.GetHash();\n+        if (mapTx.count(hash))\n+            entries.push_back(mapTx[hash]);\n+    }\n+    minerPolicyEstimator->seenBlock(entries, nBlockHeight);\n+    BOOST_FOREACH(const CTransaction& tx, vtx)\n+    {\n+        std::list<CTransaction> dummy;\n+        remove(tx, dummy, false);\n+        removeConflicts(tx, conflicts);\n+    }\n+}\n+\n+\n void CTxMemPool::clear()\n {\n     LOCK(cs);\n@@ -195,6 +518,53 @@ bool CTxMemPool::lookup(uint256 hash, CTransaction& result) const\n     return true;\n }\n \n+CFeeRate CTxMemPool::estimateFee(int nBlocks) const\n+{\n+    LOCK(cs);\n+    return minerPolicyEstimator->estimateFee(nBlocks);\n+}\n+double CTxMemPool::estimatePriority(int nBlocks) const\n+{\n+    LOCK(cs);\n+    return minerPolicyEstimator->estimatePriority(nBlocks);\n+}\n+\n+bool\n+CTxMemPool::WriteFeeEstimates(CAutoFile& fileout) const\n+{\n+    try {\n+        LOCK(cs);\n+        fileout << 99900; // version required to read: 0.9.99 or later\n+        fileout << CLIENT_VERSION; // version that wrote the file\n+        minerPolicyEstimator->Write(fileout);\n+    }\n+    catch (std::exception &e) {\n+        LogPrintf(\"CTxMemPool::WriteFeeEstimates() : unable to write policy estimator data (non-fatal)\");\n+        return false;\n+    }\n+    return true;\n+}\n+\n+bool\n+CTxMemPool::ReadFeeEstimates(CAutoFile& filein)\n+{\n+    try {\n+        int nVersionRequired, nVersionThatWrote;\n+        filein >> nVersionRequired >> nVersionThatWrote;\n+        if (nVersionRequired > CLIENT_VERSION)\n+            return error(\"CTxMemPool::ReadFeeEstimates() : up-version (%d) fee estimate file\", nVersionRequired);\n+\n+        LOCK(cs);\n+        minerPolicyEstimator->Read(filein);\n+    }\n+    catch (std::exception &e) {\n+        LogPrintf(\"CTxMemPool::ReadFeeEstimates() : unable to read policy estimator data (non-fatal)\");\n+        return false;\n+    }\n+    return true;\n+}\n+\n+\n CCoinsViewMemPool::CCoinsViewMemPool(CCoinsView &baseIn, CTxMemPool &mempoolIn) : CCoinsViewBacked(baseIn), mempool(mempoolIn) { }\n \n bool CCoinsViewMemPool::GetCoins(const uint256 &txid, CCoins &coins) {"
      },
      {
        "sha": "b2915aa842bd0c186a3bcf6fc3fc8f3e8f0d2975",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -11,6 +11,13 @@\n #include \"core.h\"\n #include \"sync.h\"\n \n+inline bool AllowFree(double dPriority)\n+{\n+    // Large (in bytes) low-priority (new, small-coin) transactions\n+    // need a fee.\n+    return dPriority > COIN * 144 / 250;\n+}\n+\n /** Fake height value used in CCoins to signify they are only in the memory pool (since 0.8) */\n static const unsigned int MEMPOOL_HEIGHT = 0x7FFFFFFF;\n \n@@ -41,6 +48,8 @@ class CTxMemPoolEntry\n     unsigned int GetHeight() const { return nHeight; }\n };\n \n+class CMinerPolicyEstimator;\n+\n /*\n  * CTxMemPool stores valid-according-to-the-current-best-chain\n  * transactions that may be included in the next block.\n@@ -56,13 +65,15 @@ class CTxMemPool\n private:\n     bool fSanityCheck; // Normally false, true if -checkmempool or -regtest\n     unsigned int nTransactionsUpdated;\n+    CMinerPolicyEstimator* minerPolicyEstimator;\n \n public:\n     mutable CCriticalSection cs;\n     std::map<uint256, CTxMemPoolEntry> mapTx;\n     std::map<COutPoint, CInPoint> mapNextTx;\n \n     CTxMemPool();\n+    ~CTxMemPool();\n \n     /*\n      * If sanity-checking is turned on, check makes sure the pool is\n@@ -76,6 +87,8 @@ class CTxMemPool\n     bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry);\n     void remove(const CTransaction &tx, std::list<CTransaction>& removed, bool fRecursive = false);\n     void removeConflicts(const CTransaction &tx, std::list<CTransaction>& removed);\n+    void removeForBlock(const std::vector<CTransaction>& vtx, unsigned int nBlockHeight,\n+                        std::list<CTransaction>& conflicts);\n     void clear();\n     void queryHashes(std::vector<uint256>& vtxid);\n     void pruneSpent(const uint256& hash, CCoins &coins);\n@@ -95,6 +108,16 @@ class CTxMemPool\n     }\n \n     bool lookup(uint256 hash, CTransaction& result) const;\n+\n+    // Estimate fee rate needed to get into the next\n+    // nBlocks\n+    CFeeRate estimateFee(int nBlocks) const;\n+    // Estimate priority needed to get into the next\n+    // nBlocks\n+    double estimatePriority(int nBlocks) const;\n+    // Write/Read estimates to disk\n+    bool WriteFeeEstimates(CAutoFile& fileout) const;\n+    bool ReadFeeEstimates(CAutoFile& filein);\n };\n \n /** CCoinsView that brings transactions from a memorypool into view."
      },
      {
        "sha": "e1a3e04e12f1ef3e1a971f093f76d5ccbff51a32",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -94,6 +94,9 @@ class CClientUIInterface\n \n     /** A wallet has been loaded. */\n     boost::signals2::signal<void (CWallet* wallet)> LoadWallet;\n+\n+    /** Show progress e.g. for verifychain */\n+    boost::signals2::signal<void (const std::string &title, int nProgress)> ShowProgress;\n };\n \n extern CClientUIInterface uiInterface;"
      },
      {
        "sha": "30590912ff033262c2378fbe569f2a4e7f3d4b44",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 67,
        "deletions": 29,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -14,6 +14,8 @@\n \n #include <stdarg.h>\n \n+#include <boost/date_time/posix_time/posix_time.hpp>\n+\n #ifndef WIN32\n // for posix_fallocate\n #ifdef __linux_\n@@ -92,7 +94,6 @@ bool fPrintToDebugLog = true;\n bool fDaemon = false;\n bool fServer = false;\n string strMiscWarning;\n-bool fNoListen = false;\n bool fLogTimestamps = false;\n volatile bool fReopenDebugLog = false;\n CClientUIInterface uiInterface;\n@@ -459,6 +460,7 @@ void ParseParameters(int argc, const char* const argv[])\n {\n     mapArgs.clear();\n     mapMultiArgs.clear();\n+\n     for (int i = 1; i < argc; i++)\n     {\n         std::string str(argv[i]);\n@@ -474,29 +476,24 @@ void ParseParameters(int argc, const char* const argv[])\n         if (boost::algorithm::starts_with(str, \"/\"))\n             str = \"-\" + str.substr(1);\n #endif\n+\n         if (str[0] != '-')\n             break;\n \n+        // Interpret --foo as -foo.\n+        // If both --foo and -foo are set, the last takes effect.\n+        if (str.length() > 1 && str[1] == '-')\n+            str = str.substr(1);\n+\n         mapArgs[str] = strValue;\n         mapMultiArgs[str].push_back(strValue);\n     }\n \n     // New 0.6 features:\n     BOOST_FOREACH(const PAIRTYPE(string,string)& entry, mapArgs)\n     {\n-        string name = entry.first;\n-\n-        //  interpret --foo as -foo (as long as both are not set)\n-        if (name.find(\"--\") == 0)\n-        {\n-            std::string singleDash(name.begin()+1, name.end());\n-            if (mapArgs.count(singleDash) == 0)\n-                mapArgs[singleDash] = entry.second;\n-            name = singleDash;\n-        }\n-\n         // interpret -nofoo as -foo=0 (and -nofoo=0 as -foo=1) as long as -foo not set\n-        InterpretNegativeSetting(name, mapArgs);\n+        InterpretNegativeSetting(entry.first, mapArgs);\n     }\n }\n \n@@ -885,12 +882,6 @@ static std::string FormatException(std::exception* pex, const char* pszThread)\n             \"UNKNOWN EXCEPTION       \\n%s in %s       \\n\", pszModule, pszThread);\n }\n \n-void LogException(std::exception* pex, const char* pszThread)\n-{\n-    std::string message = FormatException(pex, pszThread);\n-    LogPrintf(\"\\n%s\", message);\n-}\n-\n void PrintExceptionContinue(std::exception* pex, const char* pszThread)\n {\n     std::string message = FormatException(pex, pszThread);\n@@ -967,13 +958,15 @@ const boost::filesystem::path &GetDataDir(bool fNetSpecific)\n void ClearDatadirCache()\n {\n     std::fill(&pathCached[0], &pathCached[CChainParams::MAX_NETWORK_TYPES+1],\n-              boost::filesystem::path());\n+        boost::filesystem::path());\n }\n \n boost::filesystem::path GetConfigFile()\n {\n     boost::filesystem::path pathConfigFile(GetArg(\"-conf\", \"bitcoin.conf\"));\n-    if (!pathConfigFile.is_complete()) pathConfigFile = GetDataDir(false) / pathConfigFile;\n+    if (!pathConfigFile.is_complete())\n+        pathConfigFile = GetDataDir(false) / pathConfigFile;\n+\n     return pathConfigFile;\n }\n \n@@ -1033,9 +1026,9 @@ bool RenameOver(boost::filesystem::path src, boost::filesystem::path dest)\n #endif /* WIN32 */\n }\n \n-\n-// Ignores exceptions thrown by boost's create_directory if the requested directory exists.\n-//   Specifically handles case where path p exists, but it wasn't possible for the user to write to the parent directory.\n+// Ignores exceptions thrown by Boost's create_directory if the requested directory exists.\n+// Specifically handles case where path p exists, but it wasn't possible for the user to\n+// write to the parent directory.\n bool TryCreateDirectory(const boost::filesystem::path& p)\n {\n     try\n@@ -1386,17 +1379,62 @@ bool ParseInt32(const std::string& str, int32_t *out)\n \n void SetupEnvironment()\n {\n-    #ifndef WIN32\n+#ifndef WIN32\n     try\n     {\n-\t#if BOOST_FILESYSTEM_VERSION == 3\n+#if BOOST_FILESYSTEM_VERSION == 3\n             boost::filesystem::path::codecvt(); // Raises runtime error if current locale is invalid\n-\t#else\t\t\t\t          // boost filesystem v2\n+#else // boost filesystem v2\n             std::locale();                      // Raises runtime error if current locale is invalid\n-\t#endif\n+#endif\n     } catch(std::runtime_error &e)\n     {\n         setenv(\"LC_ALL\", \"C\", 1); // Force C locale\n     }\n-    #endif\n+#endif\n+}\n+\n+std::string DateTimeStrFormat(const char* pszFormat, int64_t nTime)\n+{\n+    // std::locale takes ownership of the pointer\n+    std::locale loc(std::locale::classic(), new boost::posix_time::time_facet(pszFormat));\n+    std::stringstream ss;\n+    ss.imbue(loc);\n+    ss << boost::posix_time::from_time_t(nTime);\n+    return ss.str();\n+}\n+\n+std::string FormatParagraph(const std::string in, size_t width, size_t indent)\n+{\n+    std::stringstream out;\n+    size_t col = 0;\n+    size_t ptr = 0;\n+    while(ptr < in.size())\n+    {\n+        // Find beginning of next word\n+        ptr = in.find_first_not_of(' ', ptr);\n+        if (ptr == std::string::npos)\n+            break;\n+        // Find end of next word\n+        size_t endword = in.find_first_of(' ', ptr);\n+        if (endword == std::string::npos)\n+            endword = in.size();\n+        // Add newline and indentation if this wraps over the allowed width\n+        if (col > 0)\n+        {\n+            if ((col + endword - ptr) > width)\n+            {\n+                out << '\\n';\n+                for(size_t i=0; i<indent; ++i)\n+                    out << ' ';\n+                col = 0;\n+            } else\n+                out << ' ';\n+        }\n+        // Append word\n+        out << in.substr(ptr, endword - ptr);\n+        col += endword - ptr;\n+        ptr = endword;\n+    }\n+    return out.str();\n }"
      },
      {
        "sha": "da1810a3d35c145b276fa899f30c91f153a01aa4",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 5,
        "deletions": 21,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -100,7 +100,6 @@ extern bool fPrintToConsole;\n extern bool fPrintToDebugLog;\n extern bool fServer;\n extern std::string strMiscWarning;\n-extern bool fNoListen;\n extern bool fLogTimestamps;\n extern volatile bool fReopenDebugLog;\n \n@@ -151,8 +150,6 @@ static inline bool error(const char* format)\n     return false;\n }\n \n-\n-void LogException(std::exception* pex, const char* pszThread);\n void PrintExceptionContinue(std::exception* pex, const char* pszThread);\n std::string FormatMoney(int64_t n, bool fPlus=false);\n bool ParseMoney(const std::string& str, int64_t& nRet);\n@@ -289,16 +286,10 @@ inline std::string HexStr(const T& vch, bool fSpaces=false)\n     return HexStr(vch.begin(), vch.end(), fSpaces);\n }\n \n-template<typename T>\n-void PrintHex(const T pbegin, const T pend, const char* pszFormat=\"%s\", bool fSpaces=true)\n-{\n-    LogPrintf(pszFormat, HexStr(pbegin, pend, fSpaces).c_str());\n-}\n-\n-inline void PrintHex(const std::vector<unsigned char>& vch, const char* pszFormat=\"%s\", bool fSpaces=true)\n-{\n-    LogPrintf(pszFormat, HexStr(vch, fSpaces).c_str());\n-}\n+/** Format a paragraph of text to a fixed width, adding spaces for\n+ * indentation to any added line.\n+ */\n+std::string FormatParagraph(const std::string in, size_t width=79, size_t indent=0);\n \n inline int64_t GetPerformanceCounter()\n {\n@@ -325,14 +316,7 @@ inline int64_t GetTimeMicros()\n             boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_microseconds();\n }\n \n-inline std::string DateTimeStrFormat(const char* pszFormat, int64_t nTime)\n-{\n-    time_t n = nTime;\n-    struct tm* ptmTime = gmtime(&n);\n-    char pszTime[200];\n-    strftime(pszTime, sizeof(pszTime), pszFormat, ptmTime);\n-    return pszTime;\n-}\n+std::string DateTimeStrFormat(const char* pszFormat, int64_t nTime);\n \n inline bool IsSwitchChar(char c)\n {"
      },
      {
        "sha": "d86caa3ac2e21be1811b540671921329e23f2283",
        "filename": "src/version.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/version.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/version.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -12,7 +12,7 @@\n const std::string CLIENT_NAME(\"Satoshi\");\n \n // Client version number\n-#define CLIENT_VERSION_SUFFIX   \"-beta\"\n+#define CLIENT_VERSION_SUFFIX   \"\"\n \n \n // The following part of the code determines the CLIENT_BUILD variable."
      },
      {
        "sha": "400c966a950ae5fdc15a52ef87cfeda875526273",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 31,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -16,7 +16,7 @@\n using namespace std;\n \n // Settings\n-int64_t nTransactionFee = DEFAULT_TRANSACTION_FEE;\n+CFeeRate payTxFee(DEFAULT_TRANSACTION_FEE);\n bool bSpendZeroConfChange = true;\n \n //////////////////////////////////////////////////////////////////////////////\n@@ -128,6 +128,22 @@ bool CWallet::AddCScript(const CScript& redeemScript)\n     return CWalletDB(strWalletFile).WriteCScript(Hash160(redeemScript), redeemScript);\n }\n \n+bool CWallet::LoadCScript(const CScript& redeemScript)\n+{\n+    /* A sanity check was added in pull #3843 to avoid adding redeemScripts\n+     * that never can be redeemed. However, old wallets may still contain\n+     * these. Do not add them to the wallet and warn. */\n+    if (redeemScript.size() > MAX_SCRIPT_ELEMENT_SIZE)\n+    {\n+        std::string strAddr = CBitcoinAddress(redeemScript.GetID()).ToString();\n+        LogPrintf(\"%s: Warning: This wallet contains a redeemScript of size %i which exceeds maximum size %i thus can never be redeemed. Do not use address %s.\\n\",\n+            __func__, redeemScript.size(), MAX_SCRIPT_ELEMENT_SIZE, strAddr);\n+        return true;\n+    }\n+\n+    return CCryptoKeyStore::AddCScript(redeemScript);\n+}\n+\n bool CWallet::Unlock(const SecureString& strWalletPassphrase)\n {\n     CCrypter crypter;\n@@ -1233,7 +1249,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n     {\n         LOCK2(cs_main, cs_wallet);\n         {\n-            nFeeRet = nTransactionFee;\n+            nFeeRet = payTxFee.GetFeePerK();\n             while (true)\n             {\n                 wtxNew.vin.clear();\n@@ -1246,7 +1262,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n                 BOOST_FOREACH (const PAIRTYPE(CScript, int64_t)& s, vecSend)\n                 {\n                     CTxOut txout(s.second, s.first);\n-                    if (txout.IsDust(CTransaction::nMinRelayTxFee))\n+                    if (txout.IsDust(CTransaction::minRelayTxFee))\n                     {\n                         strFailReason = _(\"Transaction amount too small\");\n                         return false;\n@@ -1272,16 +1288,6 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n                 }\n \n                 int64_t nChange = nValueIn - nValue - nFeeRet;\n-                // The following if statement should be removed once enough miners\n-                // have upgraded to the 0.9 GetMinFee() rules. Until then, this avoids\n-                // creating free transactions that have change outputs less than\n-                // CENT bitcoins.\n-                if (nFeeRet < CTransaction::nMinTxFee && nChange > 0 && nChange < CENT)\n-                {\n-                    int64_t nMoveToFee = min(nChange, CTransaction::nMinTxFee - nFeeRet);\n-                    nChange -= nMoveToFee;\n-                    nFeeRet += nMoveToFee;\n-                }\n \n                 if (nChange > 0)\n                 {\n@@ -1317,7 +1323,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n \n                     // Never create dust outputs; if we would, just\n                     // add the dust to the fee.\n-                    if (newTxOut.IsDust(CTransaction::nMinRelayTxFee))\n+                    if (newTxOut.IsDust(CTransaction::minRelayTxFee))\n                     {\n                         nFeeRet += nChange;\n                         reservekey.ReturnKey();\n@@ -1355,7 +1361,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64_t> >& vecSend,\n                 dPriority = wtxNew.ComputePriority(dPriority, nBytes);\n \n                 // Check that enough fee is included\n-                int64_t nPayFee = nTransactionFee * (1 + (int64_t)nBytes / 1000);\n+                int64_t nPayFee = payTxFee.GetFee(nBytes);\n                 bool fAllowFree = AllowFree(dPriority);\n                 int64_t nMinFee = GetMinFee(wtxNew, nBytes, fAllowFree, GMF_SEND);\n                 if (nFeeRet < max(nPayFee, nMinFee))\n@@ -1464,7 +1470,7 @@ string CWallet::SendMoneyToDestination(const CTxDestination& address, int64_t nV\n     // Check amount\n     if (nValue <= 0)\n         return _(\"Invalid amount\");\n-    if (nValue + nTransactionFee > GetBalance())\n+    if (nValue > GetBalance())\n         return _(\"Insufficient funds\");\n \n     // Parse Bitcoin address\n@@ -1671,21 +1677,6 @@ void CWallet::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool)\n     }\n }\n \n-int64_t CWallet::AddReserveKey(const CKeyPool& keypool)\n-{\n-    {\n-        LOCK2(cs_main, cs_wallet);\n-        CWalletDB walletdb(strWalletFile);\n-\n-        int64_t nIndex = 1 + *(--setKeyPool.end());\n-        if (!walletdb.WritePool(nIndex, keypool))\n-            throw runtime_error(\"AddReserveKey() : writing added key failed\");\n-        setKeyPool.insert(nIndex);\n-        return nIndex;\n-    }\n-    return -1;\n-}\n-\n void CWallet::KeepKey(int64_t nIndex)\n {\n     // Remove from key pool"
      },
      {
        "sha": "7df656fc25fd389f620ab636dddc209450f7131a",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 14,
        "deletions": 15,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49675884c4c5956da90ec2b65ea9234060ddd635/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49675884c4c5956da90ec2b65ea9234060ddd635/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=49675884c4c5956da90ec2b65ea9234060ddd635",
        "patch": "@@ -24,7 +24,7 @@\n #include <vector>\n \n // Settings\n-extern int64_t nTransactionFee;\n+extern CFeeRate payTxFee;\n extern bool bSpendZeroConfChange;\n \n // -paytxfee default\n@@ -143,26 +143,26 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n \n     CWallet()\n     {\n-        nWalletVersion = FEATURE_BASE;\n-        nWalletMaxVersion = FEATURE_BASE;\n-        fFileBacked = false;\n-        nMasterKeyMaxID = 0;\n-        pwalletdbEncryption = NULL;\n-        nOrderPosNext = 0;\n-        nNextResend = 0;\n-        nLastResend = 0;\n+        SetNull();\n     }\n     CWallet(std::string strWalletFileIn)\n     {\n-        nWalletVersion = FEATURE_BASE;\n-        nWalletMaxVersion = FEATURE_BASE;\n+        SetNull();\n+\n         strWalletFile = strWalletFileIn;\n         fFileBacked = true;\n+    }\n+    void SetNull()\n+    {\n+        nWalletVersion = FEATURE_BASE;\n+        nWalletMaxVersion = FEATURE_BASE;\n+        fFileBacked = false;\n         nMasterKeyMaxID = 0;\n         pwalletdbEncryption = NULL;\n         nOrderPosNext = 0;\n         nNextResend = 0;\n         nLastResend = 0;\n+        nTimeFirstKey = 0;\n     }\n \n     std::map<uint256, CWalletTx> mapWallet;\n@@ -211,7 +211,7 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     // Adds an encrypted key to the store, without saving it to disk (used by LoadWallet)\n     bool LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n     bool AddCScript(const CScript& redeemScript);\n-    bool LoadCScript(const CScript& redeemScript) { return CCryptoKeyStore::AddCScript(redeemScript); }\n+    bool LoadCScript(const CScript& redeemScript);\n \n     /// Adds a destination data tuple to the store, and saves it to disk\n     bool AddDestData(const CTxDestination &dest, const std::string &key, const std::string &value);\n@@ -263,7 +263,6 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n \n     bool NewKeyPool();\n     bool TopUpKeyPool(unsigned int kpSize = 0);\n-    int64_t AddReserveKey(const CKeyPool& keypool);\n     void ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool);\n     void KeepKey(int64_t nIndex);\n     void ReturnKey(int64_t nIndex);\n@@ -720,12 +719,12 @@ class COutput\n \n     std::string ToString() const\n     {\n-        return strprintf(\"COutput(%s, %d, %d) [%s]\", tx->GetHash().ToString().c_str(), i, nDepth, FormatMoney(tx->vout[i].nValue).c_str());\n+        return strprintf(\"COutput(%s, %d, %d) [%s]\", tx->GetHash().ToString(), i, nDepth, FormatMoney(tx->vout[i].nValue).c_str());\n     }\n \n     void print() const\n     {\n-        LogPrintf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString());\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "69f72d2564a6a2ed2051aa359cdc6bc8b6577e98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OWY3MmQyNTY0YTZhMmVkMjA1MWFhMzU5Y2RjNmJjOGI2NTc3ZTk4",
    "commit": {
      "author": {
        "name": "007longshao",
        "email": "007longshao@gmail.com",
        "date": "2014-06-18T05:34:56Z"
      },
      "committer": {
        "name": "007longshao",
        "email": "007longshao@gmail.com",
        "date": "2014-06-18T05:34:56Z"
      },
      "message": "change buffer size from 1000 bytes to 1024 bytes\n\nWhy set receive and send buffer size to <n>*1000 bytes, i think it\nshould be <n>*1024 bytes.",
      "tree": {
        "sha": "55959ed6ff6dd0a07352fe4cb8c941817d122bf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55959ed6ff6dd0a07352fe4cb8c941817d122bf1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69f72d2564a6a2ed2051aa359cdc6bc8b6577e98",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69f72d2564a6a2ed2051aa359cdc6bc8b6577e98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/69f72d2564a6a2ed2051aa359cdc6bc8b6577e98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69f72d2564a6a2ed2051aa359cdc6bc8b6577e98/comments",
    "author": {
      "login": "LongShao007",
      "id": 7669610,
      "node_id": "MDQ6VXNlcjc2Njk2MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7669610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LongShao007",
      "html_url": "https://github.com/LongShao007",
      "followers_url": "https://api.github.com/users/LongShao007/followers",
      "following_url": "https://api.github.com/users/LongShao007/following{/other_user}",
      "gists_url": "https://api.github.com/users/LongShao007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LongShao007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LongShao007/subscriptions",
      "organizations_url": "https://api.github.com/users/LongShao007/orgs",
      "repos_url": "https://api.github.com/users/LongShao007/repos",
      "events_url": "https://api.github.com/users/LongShao007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LongShao007/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "LongShao007",
      "id": 7669610,
      "node_id": "MDQ6VXNlcjc2Njk2MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7669610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LongShao007",
      "html_url": "https://github.com/LongShao007",
      "followers_url": "https://api.github.com/users/LongShao007/followers",
      "following_url": "https://api.github.com/users/LongShao007/following{/other_user}",
      "gists_url": "https://api.github.com/users/LongShao007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LongShao007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LongShao007/subscriptions",
      "organizations_url": "https://api.github.com/users/LongShao007/orgs",
      "repos_url": "https://api.github.com/users/LongShao007/repos",
      "events_url": "https://api.github.com/users/LongShao007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LongShao007/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "49675884c4c5956da90ec2b65ea9234060ddd635",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49675884c4c5956da90ec2b65ea9234060ddd635",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/49675884c4c5956da90ec2b65ea9234060ddd635"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "586d473baeb56494234165ad284d207a5aa9e504",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69f72d2564a6a2ed2051aa359cdc6bc8b6577e98/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69f72d2564a6a2ed2051aa359cdc6bc8b6577e98/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=69f72d2564a6a2ed2051aa359cdc6bc8b6577e98",
        "patch": "@@ -52,8 +52,8 @@ static const bool DEFAULT_UPNP = USE_UPNP;\n static const bool DEFAULT_UPNP = false;\n #endif\n \n-inline unsigned int ReceiveFloodSize() { return 1000*GetArg(\"-maxreceivebuffer\", 5*1000); }\n-inline unsigned int SendBufferSize() { return 1000*GetArg(\"-maxsendbuffer\", 1*1000); }\n+inline unsigned int ReceiveFloodSize() { return 1024*GetArg(\"-maxreceivebuffer\", 5*1024); }\n+inline unsigned int SendBufferSize() { return 1024*GetArg(\"-maxsendbuffer\", 1*1024); }\n \n void AddOneShot(std::string strDest);\n bool RecvLine(SOCKET hSocket, std::string& strLine);"
      }
    ]
  }
]