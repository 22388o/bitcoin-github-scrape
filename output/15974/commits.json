[
  {
    "sha": "879ce09cab907c8ca77f7cbb2cce5e92e79f38b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzljZTA5Y2FiOTA3YzhjYTc3ZjdjYmIyY2NlNWU5MmU3OWYzOGI4",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-05-07T15:10:35Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-05-07T15:12:08Z"
      },
      "message": "refactor: Avoid UniValue copy constructor",
      "tree": {
        "sha": "3bf3a05588747935e115876ca157a73c8d27fe59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3bf3a05588747935e115876ca157a73c8d27fe59"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3632143ebbfdd4888571db800c8ee8d684eec57b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3632143ebbfdd4888571db800c8ee8d684eec57b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3632143ebbfdd4888571db800c8ee8d684eec57b"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 22,
      "deletions": 24
    },
    "files": [
      {
        "sha": "c0718d30f1ddf11f2d36bbcea0e615fe55e0bd7a",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=879ce09cab907c8ca77f7cbb2cce5e92e79f38b8",
        "patch": "@@ -443,7 +443,7 @@ static int CommandLineRPC(int argc, char *argv[])\n \n                 // Parse reply\n                 const UniValue& result = find_value(reply, \"result\");\n-                const UniValue& error  = find_value(reply, \"error\");\n+                const UniValue& error = find_value(reply, \"error\");\n \n                 if (!error.isNull()) {\n                     // Error\n@@ -454,8 +454,8 @@ static int CommandLineRPC(int argc, char *argv[])\n                     nRet = abs(code);\n                     if (error.isObject())\n                     {\n-                        UniValue errCode = find_value(error, \"code\");\n-                        UniValue errMsg  = find_value(error, \"message\");\n+                        const UniValue& errCode = find_value(error, \"code\");\n+                        const UniValue& errMsg  = find_value(error, \"message\");\n                         strPrint = errCode.isNull() ? \"\" : \"error code: \"+errCode.getValStr()+\"\\n\";\n \n                         if (errMsg.isStr())"
      },
      {
        "sha": "7c774946c5ea77ecbb6d09985395788d451de884",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=879ce09cab907c8ca77f7cbb2cce5e92e79f38b8",
        "patch": "@@ -487,8 +487,8 @@ static UniValue getmemoryinfo(const JSONRPCRequest& request)\n     }\n }\n \n-static void EnableOrDisableLogCategories(UniValue cats, bool enable) {\n-    cats = cats.get_array();\n+static void EnableOrDisableLogCategories(const UniValue& categories, bool enable) {\n+    const UniValue& cats = categories.get_array();\n     for (unsigned int i = 0; i < cats.size(); ++i) {\n         std::string cat = cats[i].get_str();\n "
      },
      {
        "sha": "1eedbf425f5c763cd01c91613e29cc806c5fa01e",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=879ce09cab907c8ca77f7cbb2cce5e92e79f38b8",
        "patch": "@@ -248,7 +248,7 @@ static UniValue gettxoutproof(const JSONRPCRequest& request)\n \n     std::set<uint256> setTxids;\n     uint256 oneTxid;\n-    UniValue txids = request.params[0].get_array();\n+    const UniValue& txids = request.params[0].get_array();\n     for (unsigned int idx = 0; idx < txids.size(); idx++) {\n         const UniValue& txid = txids[idx];\n         uint256 hash(ParseHashV(txid, \"txid\"));\n@@ -566,8 +566,7 @@ static UniValue decodescript(const JSONRPCRequest& request)\n     }\n     ScriptPubKeyToUniv(script, r, /* fIncludeHex */ false);\n \n-    UniValue type;\n-    type = find_value(r, \"type\");\n+    const UniValue& type = find_value(r, \"type\");\n \n     if (type.isStr() && type.get_str() != \"scripthash\") {\n         // P2SH cannot be wrapped in a P2SH. If this script is already a P2SH,\n@@ -631,7 +630,7 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n             }.ToString());\n \n \n-    UniValue txs = request.params[0].get_array();\n+    const UniValue& txs = request.params[0].get_array();\n     std::vector<CMutableTransaction> txVariants(txs.size());\n \n     for (unsigned int idx = 0; idx < txs.size(); idx++) {\n@@ -763,7 +762,7 @@ static UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n     CBasicKeyStore keystore;\n     const UniValue& keys = request.params[1].get_array();\n     for (unsigned int idx = 0; idx < keys.size(); ++idx) {\n-        UniValue k = keys[idx];\n+        const UniValue& k = keys[idx];\n         CKey key = DecodeSecret(k.get_str());\n         if (!key.IsValid()) {\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid private key\");\n@@ -1262,7 +1261,7 @@ UniValue combinepsbt(const JSONRPCRequest& request)\n \n     // Unserialize the transactions\n     std::vector<PartiallySignedTransaction> psbtxs;\n-    UniValue txs = request.params[0].get_array();\n+    const UniValue& txs = request.params[0].get_array();\n     if (txs.empty()) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Parameter 'txs' cannot be empty\");\n     }\n@@ -1577,7 +1576,7 @@ UniValue joinpsbts(const JSONRPCRequest& request)\n \n     // Unserialize the transactions\n     std::vector<PartiallySignedTransaction> psbtxs;\n-    UniValue txs = request.params[0].get_array();\n+    const UniValue& txs = request.params[0].get_array();\n \n     if (txs.size() <= 1) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"At least two PSBTs are required to join PSBTs.\");"
      },
      {
        "sha": "a484c6aa3417eb47f8533c7e814091a3ecd98171",
        "filename": "src/rpc/rawtransaction_util.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/rpc/rawtransaction_util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/rpc/rawtransaction_util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.cpp?ref=879ce09cab907c8ca77f7cbb2cce5e92e79f38b8",
        "patch": "@@ -205,7 +205,7 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n                         {\"redeemScript\", UniValueType(UniValue::VSTR)},\n                         {\"witnessScript\", UniValueType(UniValue::VSTR)},\n                     }, true);\n-                UniValue rs = find_value(prevOut, \"redeemScript\");\n+                const UniValue& rs = find_value(prevOut, \"redeemScript\");\n                 if (!rs.isNull()) {\n                     std::vector<unsigned char> rsData(ParseHexV(rs, \"redeemScript\"));\n                     CScript redeemScript(rsData.begin(), rsData.end());\n@@ -214,7 +214,7 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n                     // This is only for compatibility, it is encouraged to use the explicit witnessScript field instead.\n                     keystore->AddCScript(GetScriptForWitness(redeemScript));\n                 }\n-                UniValue ws = find_value(prevOut, \"witnessScript\");\n+                const UniValue& ws = find_value(prevOut, \"witnessScript\");\n                 if (!ws.isNull()) {\n                     std::vector<unsigned char> wsData(ParseHexV(ws, \"witnessScript\"));\n                     CScript witnessScript(wsData.begin(), wsData.end());"
      },
      {
        "sha": "579811ef5911f5c9cd9b9737a515a0b1ab940a93",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=879ce09cab907c8ca77f7cbb2cce5e92e79f38b8",
        "patch": "@@ -90,7 +90,7 @@ std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest&\n \n     JSONRPCRequest jreq(helpreq);\n     jreq.fHelp = true;\n-    jreq.params = UniValue();\n+    jreq.params = NullUniValue;\n \n     for (const std::pair<std::string, const CRPCCommand*>& command : vCommands)\n     {\n@@ -342,7 +342,7 @@ void JSONRPCRequest::parse(const UniValue& valRequest)\n     id = find_value(request, \"id\");\n \n     // Parse method\n-    UniValue valMethod = find_value(request, \"method\");\n+    const UniValue& valMethod = find_value(request, \"method\");\n     if (valMethod.isNull())\n         throw JSONRPCError(RPC_INVALID_REQUEST, \"Missing method\");\n     if (!valMethod.isStr())\n@@ -355,7 +355,7 @@ void JSONRPCRequest::parse(const UniValue& valRequest)\n         LogPrint(BCLog::RPC, \"ThreadRPCServer method=%s user=%s\\n\", SanitizeString(strMethod), this->authUser);\n \n     // Parse params\n-    UniValue valParams = find_value(request, \"params\");\n+    const UniValue& valParams = find_value(request, \"params\");\n     if (valParams.isArray() || valParams.isObject())\n         params = valParams;\n     else if (valParams.isNull())\n@@ -436,7 +436,7 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n                 // Fill hole between specified parameters with JSON nulls,\n                 // but not at the end (for backwards compatibility with calls\n                 // that act based on number of specified parameters).\n-                out.params.push_back(UniValue());\n+                out.params.push_back(NullUniValue);\n             }\n             hole = 0;\n             out.params.push_back(*fr->second);"
      },
      {
        "sha": "ab212f96d3965239e50c03fb4aa9a1f11e611031",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=879ce09cab907c8ca77f7cbb2cce5e92e79f38b8",
        "patch": "@@ -33,12 +33,11 @@ class JSONRPCRequest\n     UniValue id;\n     std::string strMethod;\n     UniValue params;\n-    bool fHelp;\n+    bool fHelp{false};\n     std::string URI;\n     std::string authUser;\n     std::string peerAddr;\n \n-    JSONRPCRequest() : id(NullUniValue), params(NullUniValue), fHelp(false) {}\n     void parse(const UniValue& valRequest);\n };\n "
      },
      {
        "sha": "27662e34cc8e0a1f4a0efc96ae313ba8d8c525a4",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=879ce09cab907c8ca77f7cbb2cce5e92e79f38b8",
        "patch": "@@ -994,8 +994,8 @@ static UniValue ProcessImportLegacy(ImportData& import_data, std::map<CKeyID, CP\n     // Optional fields.\n     const std::string& strRedeemScript = data.exists(\"redeemscript\") ? data[\"redeemscript\"].get_str() : \"\";\n     const std::string& witness_script_hex = data.exists(\"witnessscript\") ? data[\"witnessscript\"].get_str() : \"\";\n-    const UniValue& pubKeys = data.exists(\"pubkeys\") ? data[\"pubkeys\"].get_array() : UniValue();\n-    const UniValue& keys = data.exists(\"keys\") ? data[\"keys\"].get_array() : UniValue();\n+    const UniValue& pubKeys = data.exists(\"pubkeys\") ? data[\"pubkeys\"].get_array() : NullUniValue;\n+    const UniValue& keys = data.exists(\"keys\") ? data[\"keys\"].get_array() : NullUniValue;\n     const bool internal = data.exists(\"internal\") ? data[\"internal\"].get_bool() : false;\n     const bool watchOnly = data.exists(\"watchonly\") ? data[\"watchonly\"].get_bool() : false;\n \n@@ -1152,7 +1152,7 @@ static UniValue ProcessImportDescriptor(ImportData& import_data, std::map<CKeyID\n         }\n     }\n \n-    const UniValue& priv_keys = data.exists(\"keys\") ? data[\"keys\"].get_array() : UniValue();\n+    const UniValue& priv_keys = data.exists(\"keys\") ? data[\"keys\"].get_array() : NullUniValue;\n \n     // Expand all descriptors to get public keys and scripts.\n     // TODO: get private keys from descriptors too"
      },
      {
        "sha": "a70e17b417fde58d81a5eccd2bb506278fd1017b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/879ce09cab907c8ca77f7cbb2cce5e92e79f38b8/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=879ce09cab907c8ca77f7cbb2cce5e92e79f38b8",
        "patch": "@@ -3490,7 +3490,7 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     }\n     UniValue response(UniValue::VOBJ);\n     response.pushKV(\"start_height\", start_height);\n-    response.pushKV(\"stop_height\", result.last_scanned_height ? *result.last_scanned_height : UniValue());\n+    response.pushKV(\"stop_height\", result.last_scanned_height ? *result.last_scanned_height : NullUniValue);\n     return response;\n }\n "
      }
    ]
  }
]