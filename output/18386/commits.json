[
  {
    "sha": "b4926840633a254e46a462f9d38ac664ce7682f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDkyNjg0MDYzM2EyNTRlNDZhNDYyZjlkMzhhYzY2NGNlNzY4MmY2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-03-19T19:56:55Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-03-19T19:57:11Z"
      },
      "message": "doc: Temporary note that release notes should be edited in wiki",
      "tree": {
        "sha": "7024075280d30b6d03336fd09623048346fea0de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7024075280d30b6d03336fd09623048346fea0de"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4926840633a254e46a462f9d38ac664ce7682f6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4926840633a254e46a462f9d38ac664ce7682f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b4926840633a254e46a462f9d38ac664ce7682f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4926840633a254e46a462f9d38ac664ce7682f6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "312d27b11ceaacd3be75a14907f856352b7dcf48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/312d27b11ceaacd3be75a14907f856352b7dcf48",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/312d27b11ceaacd3be75a14907f856352b7dcf48"
      }
    ],
    "stats": {
      "total": 210,
      "additions": 2,
      "deletions": 208
    },
    "files": [
      {
        "sha": "cd6a4d6b5948ce862af16764859c10604f35b566",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 2,
        "deletions": 208,
        "changes": 210,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4926840633a254e46a462f9d38ac664ce7682f6/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4926840633a254e46a462f9d38ac664ce7682f6/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=b4926840633a254e46a462f9d38ac664ce7682f6",
        "patch": "@@ -1,211 +1,5 @@\n-*After branching off for a major version release of Bitcoin Core, use this\n-template to create the initial release notes draft.*\n+Please edit the release notes here:\n \n-*The release notes draft is a temporary file that can be added to by anyone. See\n-[/doc/developer-notes.md#release-notes](/doc/developer-notes.md#release-notes)\n-for the process.*\n-\n-*Create the draft, named* \"*version* Release Notes Draft\"\n-*(e.g. \"0.20.0 Release Notes Draft\"), as a collaborative wiki in:*\n-\n-https://github.com/bitcoin-core/bitcoin-devwiki/wiki/\n+https://github.com/bitcoin-core/bitcoin-devwiki/wiki/0.20.0-Release-Notes-Draft\n \n *Before the final release, move the notes back to this git repository.*\n-\n-*version* Release Notes Draft\n-===============================\n-\n-Bitcoin Core version *version* is now available from:\n-\n-  <https://bitcoincore.org/bin/bitcoin-core-*version*/>\n-\n-This release includes new features, various bug fixes and performance\n-improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at GitHub:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-How to Upgrade\n-==============\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n-or `bitcoind`/`bitcoin-qt` (on Linux).\n-\n-Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n-possible, but it might take some time if the datadir needs to be migrated. Old\n-wallet versions of Bitcoin Core are generally supported.\n-\n-Compatibility\n-==============\n-\n-Bitcoin Core is supported and extensively tested on operating systems using\n-the Linux kernel, macOS 10.12+, and Windows 7 and newer. It is not recommended\n-to use Bitcoin Core on unsupported systems.\n-\n-Bitcoin Core should also work on most other Unix-like systems but is not\n-as frequently tested on them.\n-\n-From Bitcoin Core 0.20.0 onwards, macOS versions earlier than 10.12 are no\n-longer supported. Additionally, Bitcoin Core does not yet change appearance\n-when macOS \"dark mode\" is activated.\n-\n-In addition to previously supported CPU platforms, this release's pre-compiled\n-distribution provides binaries for the RISC-V platform.\n-\n-Notable changes\n-===============\n-\n-P2P and network changes\n------------------------\n-\n-#### Removal of reject network messages from Bitcoin Core (BIP61)\n-\n-The command line option to enable BIP61 (`-enablebip61`) has been removed.\n-\n-This feature has been disabled by default since Bitcoin Core version 0.18.0.\n-Nodes on the network can not generally be trusted to send valid (\"reject\")\n-messages, so this should only ever be used when connected to a trusted node.\n-Please use the recommended alternatives if you rely on this deprecated feature:\n-\n-* Testing or debugging of implementations of the Bitcoin P2P network protocol\n-  should be done by inspecting the log messages that are produced by a recent\n-  version of Bitcoin Core. Bitcoin Core logs debug messages\n-  (`-debug=<category>`) to a stream (`-printtoconsole`) or to a file\n-  (`-debuglogfile=<debug.log>`).\n-\n-* Testing the validity of a block can be achieved by specific RPCs:\n-  - `submitblock`\n-  - `getblocktemplate` with `'mode'` set to `'proposal'` for blocks with\n-    potentially invalid POW\n-\n-* Testing the validity of a transaction can be achieved by specific RPCs:\n-  - `sendrawtransaction`\n-  - `testmempoolaccept`\n-\n-* Wallets should not use the absence of \"reject\" messages to indicate a\n-  transaction has propagated the network, nor should wallets use \"reject\"\n-  messages to set transaction fees. Wallets should rather use fee estimation\n-  to determine transaction fees and set replace-by-fee if desired. Thus, they\n-  could wait until the transaction has confirmed (taking into account the fee\n-  target they set (compare the RPC `estimatesmartfee`)) or listen for the\n-  transaction announcement by other network peers to check for propagation.\n-\n-The removal of BIP61 REJECT message support also has the following minor RPC\n-and logging implications:\n-\n-* `testmempoolaccept` and `sendrawtransaction` no longer return the P2P REJECT\n-  code when a transaction is not accepted to the mempool. They still return the\n-  verbal reject reason.\n-\n-* Log messages that previously reported the REJECT code when a transaction was\n-  not accepted to the mempool now no longer report the REJECT code. The reason\n-  for rejection is still reported.\n-\n-Updated RPCs\n-------------\n-\n-- `testmempoolaccept` and `sendrawtransaction` no longer return the P2P REJECT\n-  code when a transaction is not accepted to the mempool. See the Section\n-  _Removal of reject network messages from Bitcoin Core (BIP61)_ for details on\n-  the removal of BIP61 REJECT message support.\n-\n-- A new descriptor type `sortedmulti(...)` has been added to support multisig scripts where the public keys are sorted lexicographically in the resulting script.\n-\n-- `walletprocesspsbt` and `walletcreatefundedpsbt` now include BIP 32 derivation paths by default for public keys if we know them. This can be disabled by setting `bip32derivs` to `false`.\n-\n-Build System\n-------------\n-\n-- OpenSSL is no longer used by Bitcoin Core. The last usage of the library\n-was removed in #17265.\n-\n-- glibc 2.17 or greater is now required to run the release binaries. This\n-retains compatibility with RHEL 7, CentOS 7, Debian 8 and Ubuntu 14.04 LTS.\n-Further details can be found in #17538.\n-\n-New RPCs\n---------\n-\n-New settings\n-------------\n-\n-- RPC Whitelist system. It can give certain RPC users permissions to only some RPC calls.\n-It can be set with two command line arguments (`rpcwhitelist` and `rpcwhitelistdefault`). (#12763)\n-\n-- A new `-asmap` configuration option has been added to enable IP-to-ASN mapping\n-  for bucketing of the network peers to diversify the network connections. The\n-  legacy /16 prefix mapping remains the default. See [issue\n-  #16599](https://github.com/bitcoin/bitcoin/issues/16599), [PR\n-  #16702](https://github.com/bitcoin/bitcoin/pull/16702), and the `bitcoind\n-  help` for more information. This option is experimental and subject to changes\n-  or removal in future releases.\n-\n-Updated settings\n-----------------\n-\n-Importing blocks upon startup via the `bootstrap.dat` file no longer occurs by default. The file must now be specified with `-loadblock=<file>`.\n-\n--  The `-debug=db` logging category has been renamed to `-debug=walletdb`, to distinguish it from `coindb`.\n-   `-debug=db` has been deprecated and will be removed in the next major release.\n-\n-GUI changes\n------------\n-\n-- The \"Start Bitcoin Core on system login\" option has been removed on macOS.\n-\n-Wallet\n-------\n-\n-- The wallet now by default uses bech32 addresses when using RPC, and creates native segwit change outputs.\n-- The way that output trust was computed has been fixed in #16766, which impacts confirmed/unconfirmed balance status and coin selection.\n-\n-- The RPC gettransaction, listtransactions and listsinceblock responses now also\n-includes the height of the block that contains the wallet transaction, if any.\n-\n-- RPC `getaddressinfo` changes:\n-\n-  - the `label` field has been deprecated in favor of the `labels` field and\n-    will be removed in 0.21. It can be re-enabled in the interim by launching\n-    with `-deprecatedrpc=label`.\n-\n-  - the `labels` behavior of returning an array of JSON objects containing name\n-    and purpose key/value pairs has been deprecated in favor of an array of\n-    label names and will be removed in 0.21. The previous behavior can be\n-    re-enabled in the interim by launching with `-deprecatedrpc=labelspurpose`.\n-\n-Low-level changes\n-=================\n-\n-Command line\n-------------\n-\n-Command line options prefixed with main/test/regtest network names like\n-`-main.port=8333` `-test.server=1` previously were allowed but ignored. Now\n-they trigger \"Invalid parameter\" errors on startup.\n-\n-Tests\n------\n-\n-- It is now an error to use an unqualified `walletdir=path` setting in the config file if running on testnet or regtest\n-  networks. The setting now needs to be qualified as `chain.walletdir=path` or placed in the appropriate `[chain]`\n-  section. (#17447)\n-\n-- `-fallbackfee` was 0 (disabled) by default for the main chain, but 0.0002 by default for the test chains. Now it is 0\n-  by default for all chains. Testnet and regtest users will have to add `fallbackfee=0.0002` to their configuration if\n-  they weren't setting it and they want it to keep working like before. (#16524)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-\n-As well as to everyone that helped with translations on\n-[Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      }
    ]
  }
]