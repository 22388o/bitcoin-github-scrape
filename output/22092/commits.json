[
  {
    "sha": "b043ca8e8b65199061ebe4bbed2200504dfc6ce9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDQzY2E4ZThiNjUxOTkwNjFlYmU0YmJlZDIyMDA1MDRkZmM2Y2U5",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-05-28T05:15:04Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-06-03T12:45:03Z"
      },
      "message": "test: convert docs into type annotations in test_framework/util.py",
      "tree": {
        "sha": "a5781d0f3eb2102690ba8f7aa4ac69d9c3a0d79f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a5781d0f3eb2102690ba8f7aa4ac69d9c3a0d79f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b043ca8e8b65199061ebe4bbed2200504dfc6ce9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmC4zs8ACgkQLuufXMCV\nJsF2Rg/8DfxnoieqlBPBQcb9E3XXxyTx6upvPa2tYf8ODYGXUjKHKOVT0Znfhyyz\niybwfjJ8scyKy6DH+kLUW4LQ5Iy2ZdAAiGRgqSzd1Pvs/sgFoT3NGsPHJUOJDlY4\nOHxhxKtQ01BWruTYl8KiDA1zwoAwwQq/NxD1CWndCwEvjhNFZJDpe6o5RDGR/3HM\nDaNgMoMqXDd9jWy8lf7dK7MHXl3fTW0dJ81wjuqYSAYwQTRIBRt0KwXIgQG2T15p\n6xooypyXtIzq1W0huc0XDmvUEBoRktpwBWiSIjuByaXPph9ufN0HPnJfEw6jGaIj\nlyH3ttl7McVw/lLyP76VdRgzloAB+KUGqtfcb45TdO1Fkh/EpflZounAn5+bSQ2S\nbGezDko7MnG3lmBe3I1YRWHlX8Qv7Wm75T1Y0peLtw9H1VbM8Adx5WMTJ/M3ldo+\nsZZrLGyizjf1goLUFav5OPwuArmhSspuTiFRns3m0aaHPKDvFpKQeV+nDZWexnQR\nLxiL6WxuZSExEOXhcDUyPnXPh9Lh+1jJq5Nz+afyJBEM3jMwPtPEfEIpGYol4zHE\nUwQdV3rujtC7rdCjccDctWxz7VDHQjSv19eouxFP6iTbIGiC8FJFM3LG2VVJ9UJu\nUD3EUbakdS6zilue5yu3hUdB/4Im9HOxZj4TEC6vNbjvV1bZB3g=\n=/ml0\n-----END PGP SIGNATURE-----",
        "payload": "tree a5781d0f3eb2102690ba8f7aa4ac69d9c3a0d79f\nparent 6fe012c6bd6a7977281df0b9292dc9c684915aba\nauthor fanquake <fanquake@gmail.com> 1622178904 +0800\ncommitter fanquake <fanquake@gmail.com> 1622724303 +0800\n\ntest: convert docs into type annotations in test_framework/util.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b043ca8e8b65199061ebe4bbed2200504dfc6ce9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b043ca8e8b65199061ebe4bbed2200504dfc6ce9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b043ca8e8b65199061ebe4bbed2200504dfc6ce9/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6fe012c6bd6a7977281df0b9292dc9c684915aba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fe012c6bd6a7977281df0b9292dc9c684915aba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fe012c6bd6a7977281df0b9292dc9c684915aba"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 11,
      "deletions": 10
    },
    "files": [
      {
        "sha": "462019566c85c7dc3eed4ab373b54bd22105aa7b",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b043ca8e8b65199061ebe4bbed2200504dfc6ce9/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b043ca8e8b65199061ebe4bbed2200504dfc6ce9/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=b043ca8e8b65199061ebe4bbed2200504dfc6ce9",
        "patch": "@@ -20,6 +20,7 @@\n from . import coverage\n from .authproxy import AuthServiceProxy, JSONRPCException\n from io import BytesIO\n+from typing import Callable, Optional\n \n logger = logging.getLogger(\"TestFramework.utils\")\n \n@@ -80,17 +81,17 @@ def assert_raises_message(exc, message, fun, *args, **kwds):\n         raise AssertionError(\"No exception raised\")\n \n \n-def assert_raises_process_error(returncode, output, fun, *args, **kwds):\n+def assert_raises_process_error(returncode: int, output: str, fun: Callable, *args, **kwds):\n     \"\"\"Execute a process and asserts the process return code and output.\n \n     Calls function `fun` with arguments `args` and `kwds`. Catches a CalledProcessError\n     and verifies that the return code and output are as expected. Throws AssertionError if\n     no CalledProcessError was raised or if the return code and output are not as expected.\n \n     Args:\n-        returncode (int): the process return code.\n-        output (string): [a substring of] the process output.\n-        fun (function): the function to call. This should execute a process.\n+        returncode: the process return code.\n+        output: [a substring of] the process output.\n+        fun: the function to call. This should execute a process.\n         args*: positional arguments for the function.\n         kwds**: named arguments for the function.\n     \"\"\"\n@@ -105,19 +106,19 @@ def assert_raises_process_error(returncode, output, fun, *args, **kwds):\n         raise AssertionError(\"No exception raised\")\n \n \n-def assert_raises_rpc_error(code, message, fun, *args, **kwds):\n+def assert_raises_rpc_error(code: Optional[int], message: Optional[str], fun: Callable, *args, **kwds):\n     \"\"\"Run an RPC and verify that a specific JSONRPC exception code and message is raised.\n \n     Calls function `fun` with arguments `args` and `kwds`. Catches a JSONRPCException\n     and verifies that the error code and message are as expected. Throws AssertionError if\n     no JSONRPCException was raised or if the error code/message are not as expected.\n \n     Args:\n-        code (int), optional: the error code returned by the RPC call (defined\n-            in src/rpc/protocol.h). Set to None if checking the error code is not required.\n-        message (string), optional: [a substring of] the error string returned by the\n-            RPC call. Set to None if checking the error string is not required.\n-        fun (function): the function to call. This should be the name of an RPC.\n+        code: the error code returned by the RPC call (defined in src/rpc/protocol.h).\n+            Set to None if checking the error code is not required.\n+        message: [a substring of] the error string returned by the RPC call.\n+            Set to None if checking the error string is not required.\n+        fun: the function to call. This should be the name of an RPC.\n         args*: positional arguments for the function.\n         kwds**: named arguments for the function.\n     \"\"\""
      }
    ]
  },
  {
    "sha": "8bfcba36db974326d258c610456bd55cf5818b1e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YmZjYmEzNmRiOTc0MzI2ZDI1OGM2MTA0NTZiZDU1Y2Y1ODE4YjFl",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-05-28T05:21:14Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-06-03T12:45:03Z"
      },
      "message": "test: convert docs into type annotations in test_framework/wallet.py",
      "tree": {
        "sha": "6c368e76ccff9681e7e9e5faa067d0f07701e686",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c368e76ccff9681e7e9e5faa067d0f07701e686"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bfcba36db974326d258c610456bd55cf5818b1e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmC4zs8ACgkQLuufXMCV\nJsHYvBAAl0+ROOzTIRQkO0ogFnTO76v8X9eJqozCuERROsd64GbQas2VoZrWi4tR\nCbUSTJZNTPzQGDpVZsRB+MCpdsBJ3Ud2X2YSP18IvADpQY9opEU1XBG/h9vwyvfp\nNnZEz1h+MX4xhiw/1YSw4hua/2Z3D52Fcw6zZfwLxluhbXBo5ua4+kTFQ7XF94ey\nlpFtWix29m4BDdYCDkBlTwDkkEnR22/8sPEH+6fTH3FnKomKgeLMlD5OtKpxsgVO\n4Lyh8p0N6sIDzoqGIhmLkcWljE1xbTXzEJdZFlQYFYXor2B8Bm+FV+04Mpf+iLKv\nsac4ZQgGecrCqT9Cd+hJE/TmxAYmJYezEp3gV94l0t88JTCvYar1Zo9Siu1sExzc\nsWGcCKeNFbKNr3jHKNEj668OblVhZ6DAAgWW+yvWKmxxYg4/9nSZXZ1qYyXpDNkq\n1KksbRgITks4mYgY9eYEHA4qrIzyylsTp71QJgV6xWjUoXMc+x+y8FP4Js4dnL/k\nM63TuU3TgW3HpWjyMrvoLZvRBY9Z5AOb9ZAapUyZ6Lsv2ird0jXxHPK8qWTUeCEb\ngEJeGdEr/EAXwQG4gjnlDIf/yzo1iRCplXw9tjIxD5wuE2hCw5ZMU19aWAaTBnSn\nsfQR8Birf3mgsWWtM33WRg+SsVvbOrNhSG6j9Pdo4NJcYZzo8/c=\n=cT9j\n-----END PGP SIGNATURE-----",
        "payload": "tree 6c368e76ccff9681e7e9e5faa067d0f07701e686\nparent b043ca8e8b65199061ebe4bbed2200504dfc6ce9\nauthor fanquake <fanquake@gmail.com> 1622179274 +0800\ncommitter fanquake <fanquake@gmail.com> 1622724303 +0800\n\ntest: convert docs into type annotations in test_framework/wallet.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bfcba36db974326d258c610456bd55cf5818b1e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8bfcba36db974326d258c610456bd55cf5818b1e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bfcba36db974326d258c610456bd55cf5818b1e/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b043ca8e8b65199061ebe4bbed2200504dfc6ce9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b043ca8e8b65199061ebe4bbed2200504dfc6ce9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b043ca8e8b65199061ebe4bbed2200504dfc6ce9"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0962a5cb54769a343ac51c1f18179ea9c3a4ff3b",
        "filename": "test/functional/test_framework/wallet.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8bfcba36db974326d258c610456bd55cf5818b1e/test/functional/test_framework/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8bfcba36db974326d258c610456bd55cf5818b1e/test/functional/test_framework/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/wallet.py?ref=8bfcba36db974326d258c610456bd55cf5818b1e",
        "patch": "@@ -6,6 +6,7 @@\n \n from decimal import Decimal\n from enum import Enum\n+from typing import Optional\n from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.key import ECKey\n from test_framework.messages import (\n@@ -105,12 +106,12 @@ def generate(self, num_blocks):\n     def get_address(self):\n         return self._address\n \n-    def get_utxo(self, *, txid='', mark_as_spent=True):\n+    def get_utxo(self, *, txid: Optional[str]='', mark_as_spent=True):\n         \"\"\"\n         Returns a utxo and marks it as spent (pops it from the internal list)\n \n         Args:\n-        txid (string), optional: get the first utxo we find from a specific transaction\n+        txid: get the first utxo we find from a specific transaction\n \n         Note: Can be used to get the change output immediately after a send_self_transfer\n         \"\"\""
      }
    ]
  },
  {
    "sha": "68ace23fa3bc01baa734ddf2c0963acae1c75ed1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OGFjZTIzZmEzYmMwMWJhYTczNGRkZjJjMDk2M2FjYWUxYzc1ZWQx",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-05-28T05:31:05Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-06-03T12:45:03Z"
      },
      "message": "test: convert docs into type annotations in test_framework/test_node.py",
      "tree": {
        "sha": "a71b8441eef6ac739a4e42623098470f79176b38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a71b8441eef6ac739a4e42623098470f79176b38"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68ace23fa3bc01baa734ddf2c0963acae1c75ed1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmC4zs8ACgkQLuufXMCV\nJsGRBxAAgILJf+az+Zc098jRlg9JuOOjgz2gYEeSNf82fyGC+y/kbOZUoCe/+HE0\nUwBSKMaoMxqqdzJEdQOraEuPuuAKvdHsw9fF1q4wQ86t6tcqqn/sLQigSaaMpuKx\nmKIr1vmS6tqrD2VNY2u0/JD3BqYiAAo0yRM/v4yFJPkfmcKzT+Wq1bvFSHPQTf4h\nJMZ07ZtxTnr5GaV4NCHXuDeAWkph/YoJm/gTQbpKQ7YuaS9XAHzi4C68b81GG7YX\npb2rcgBc+17xr9gU4MW+i+1xj8xXrTrvXnvilN62YD7Sbh9NHZNgTD7UF+1VUIqk\nW3dm4FqrtSyQ18vbMpqHn1dBbU0H41L7+WcBgdClE6CDlbxLi4zV9Fkh/w/T57Zo\nQnxwz/dcG5DA10geMbw0XnkmO++N97EpjIlLcMp24EhEVafRbgqzCZzlC5Nn0SH7\nZ21cJT0t45A3Xi7Snz9HaZYFDJbOD9P85R9cQwWgckLRUrD8M0rJGPDTvHNQzGyQ\n8mx9JlbCxjJRtd89YYEy4faZDj9T/AmqRsp/CcRDhJxhJWNLKosaSob0tN68Oz7C\nl6fmRd/EPridiUdOPxvIiO1j7wL35uv1h/mwrHRRjMMma2xYqOZqn16JPdPWBxaM\nezkdD+Nb5bsuB1HLpd+F7qW8VSMBZmqlockgM/w0yYODdQDiNCc=\n=IQGh\n-----END PGP SIGNATURE-----",
        "payload": "tree a71b8441eef6ac739a4e42623098470f79176b38\nparent 8bfcba36db974326d258c610456bd55cf5818b1e\nauthor fanquake <fanquake@gmail.com> 1622179865 +0800\ncommitter fanquake <fanquake@gmail.com> 1622724303 +0800\n\ntest: convert docs into type annotations in test_framework/test_node.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68ace23fa3bc01baa734ddf2c0963acae1c75ed1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/68ace23fa3bc01baa734ddf2c0963acae1c75ed1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68ace23fa3bc01baa734ddf2c0963acae1c75ed1/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8bfcba36db974326d258c610456bd55cf5818b1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bfcba36db974326d258c610456bd55cf5818b1e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8bfcba36db974326d258c610456bd55cf5818b1e"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ba52abc7ddf7322560eae4db878359306481ad9b",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/68ace23fa3bc01baa734ddf2c0963acae1c75ed1/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/68ace23fa3bc01baa734ddf2c0963acae1c75ed1/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=68ace23fa3bc01baa734ddf2c0963acae1c75ed1",
        "patch": "@@ -400,14 +400,14 @@ def assert_debug_log(self, expected_msgs, unexpected_msgs=None, timeout=2):\n         self._raise_assertion_error('Expected messages \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(str(expected_msgs), print_log))\n \n     @contextlib.contextmanager\n-    def profile_with_perf(self, profile_name):\n+    def profile_with_perf(self, profile_name: str):\n         \"\"\"\n         Context manager that allows easy profiling of node activity using `perf`.\n \n         See `test/functional/README.md` for details on perf usage.\n \n         Args:\n-            profile_name (str): This string will be appended to the\n+            profile_name: This string will be appended to the\n                 profile data filename generated by perf.\n         \"\"\"\n         subp = self._start_perf(profile_name)"
      }
    ]
  }
]