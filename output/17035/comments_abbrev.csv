emilengler,2019-10-06 04:50:21,@hebasto Done,https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-538711735,538711735,
emilengler,2019-10-06 17:07:30,Squashing done,https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-538766983,538766983,
hebasto,2019-10-06 17:52:34,"Approach ACK 727f86f3a75051daaeb81cb3984574c06eb62449, tested on Linux Mint 19.2.\n\nNit: https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331801244\n\nCommit 727f86f3a75051daaeb81cb3984574c06eb62449 message ""_... It also removes a useless boolean added before_"" is a hint ;) Why to introduce a variable in a commit to remove it in the next one?\n\nIt does not work if disk space is in",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-538770943,538770943,
emilengler,2019-10-07 00:03:41,"@hebasto \n> EDIT: The ""qt: Update the required space message when the prune box is checked"" commit (727f86f) should deal with both ui->prune->setChecked() and pruneTarget. The latter is ignored now ;)\n\nI removed this message completely because a variable rename wasn't the real point of this commit",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-538802276,538802276,
hebasto,2019-10-07 17:08:22,"As I wrote:\n\n> ... should deal with both `ui->prune->setChecked()` _and_ `pruneTarget`. The latter is ignored now ;)\n\nMore details are in the screenshot:\n![Screenshot from 2019-10-07 20-02-26](https://user-images.githubusercontent.com/32963518/66332637-da85f600-e93d-11e9-8790-57670671f7f9.png)\n\nIf `pruneTarget` is set to 2 GB, amount 3 GB of stored data is obviously incorrect.\n\n",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-539111574,539111574,
emilengler,2019-10-07 19:56:41,"@hebasto Sure, what is with the chainstate?",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-539177658,539177658,
jonasschnelli,2019-10-08 09:52:41,"Tested a bit, something seems incorrect. If I start with `-prune=2000` I'll get a text ""Approx 7GB"" while when I start without `-prune`, I'll get 4GB as size warning.\n\nI know this is not the place to discuss that, but why have we chosen 2GB as prune target instead of the minimum of 550MB? ",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-539440268,539440268,
promag,2019-10-09 09:42:43,"> If I start with -prune=2000 I'll get a text ""Approx 7GB"" while when I start without -prune, I'll get 4GB as size warning.\n\nI confirm this behavior, setting `-prune` on command line and setting in the UI should give the same approximation?",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-539924837,539924837,
emilengler,2019-10-09 15:28:41,"@promag @jonasschnelli \nI might xe wrong but this is a feature and not a bug. It is because the chainstate size is also being incremented to the required amount of storage. When you prune with 550MB your bitcoin folder will still be around 4-5GB huge and not 550MB",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-540053876,540053876,
emilengler,2019-10-09 15:29:41,"See Line 361:\n```\nrequiredSpace += m_chain_state_size;\n```",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-540054293,540054293,
emilengler,2019-10-14 15:29:16,Push,https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-541747783,541747783,
hebasto,2019-10-15 08:09:18,"Tested this PR on top of the current master (dcc640811c8c1a0678a3c3726cb7df14f0a60250).\n\n---\n\n```\nsrc/qt/bitcoin-qt -chain=test -prune=2000\n```\n![Screenshot from 2019-10-15 10-56-44](https://user-images.githubusercontent.com/32963518/66811869-84ffa980-ef3a-11e9-942d-c4394285a0de.png)\n\nThat is correct, as 5 GB is a sum of pruned blockchain size (2 GB) and chainstate size (3 GB).\",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-542092866,542092866,
emilengler,2019-10-15 14:06:43,"Ok, will work on specific chain selection now",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-542230001,542230001,
emilengler,2019-10-16 14:14:45,"@hebasto Fixed, squashed and ready for merge",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-542722505,542722505,
hebasto,2019-10-17 11:08:30,"Tested 9ab3876b43d45e8d742adcad996537b2dcbacff3 on Linux Mint 19.2:\n\n```\n$ git log -1\ncommit 7fabf14f9556c6d56219f9c835d78a458d862ad5 (HEAD -> pr17035-20191017)\nMerge: 46d6930f8 9ab3876b4\nAuthor: Emil Engler <me@emilengler.com>\nDate:   Wed Oct 16 21:36:43 2019 +0000\n\n    Merge 9ab3876b43d45e8d742adcad996537b2dcbacff3 into 46d6930f8c7ba7cbcd7d86dd5d0117642fcbc819\n\n$ src/qt/bit",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-543124362,543124362,
emilengler,2019-10-17 11:38:28,@hebasto Fixed and tested heavily,https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-543134006,543134006,
emilengler,2019-10-17 16:13:23,"@hebasto Updated\n",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-543249573,543249573,
emilengler,2019-10-17 17:55:42,"@hebasto Fixed, however it will now round down if you prune, this should be correct behavior because it's now a slightly different unit",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-543290178,543290178,
emilengler,2019-10-22 15:02:46,Squashed,https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-545006510,545006510,
emilengler,2019-10-22 19:45:19,"@Sjors @ryanofsky \nWill patch your changes into the code tomorrow. So this can finally get merged...\nThanks for your reviews!",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-545122785,545122785,
ryanofsky,2019-10-22 20:17:49,"> So this can finally get merged\n\nMost of the reviews on the high-priority list are older than this, for some perspective: https://github.com/bitcoin/bitcoin/projects/8. More reviewers -> faster merges, of course.",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-545135395,545135395,
Sjors,2019-10-23 08:25:06,I don't think it's necessary to hold back the next release candidate for this. It can go into v0.19.1 if it doesn't make the cut.,https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-545329677,545329677,
emilengler,2019-10-23 13:09:47,"@Sjors There is still one and a half week, thats probably enough time",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-545435376,545435376,
Sjors,2019-10-23 13:26:37,"@emilengler there's no official timetable. Usually we decide during the IRC meeting to ship a new release candidate when it looks like the most important bugs are squashed. Then we wait another week or so, and do another release candidate if new bugs were found. Otherwise the last candidate becomes the final version.",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-545442845,545442845,
laanwj,2019-10-24 11:40:39,"I don't regard this as a blocker for the release either. IMO we'll cut rc2 without this. It would be nice to have, but it seems to be slightly controversial whether this is the right solution, has unaddressed comments, and it has garnered no ACKs yet.",https://github.com/bitcoin/bitcoin/pull/17035#issuecomment-545878673,545878673,
promag,2019-10-03 23:10:46,"IMO we should move away from these dynamic connections. My suggestion is to move to the constructor:\n```cpp\nconnect(ui->prune, &QCheckBox::stateChanged, [this](int state) {\n    setSizeWarningLabel(/* isPruning = */ state == 2, m_blockchain_size, m_chain_state_size);\n});\n```",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331289858,331289858,src/qt/intro.cpp
promag,2019-10-03 23:11:26,Why have the 2 last arguments if they are always the same?,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331289996,331289996,src/qt/intro.cpp
emilengler,2019-10-04 01:28:24,"I agree with you but this is a bigger change and should be a done in a separate PR because this one is intended to be a fix, not a replacement",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331313258,331313258,src/qt/intro.cpp
emilengler,2019-10-04 01:29:30,"What do you mean?\nIIRC the blockchain size and chainstate size are two different things",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331313413,331313413,src/qt/intro.cpp
promag,2019-10-04 06:44:04,Huh? Bigger? Please unresolved this.,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331359536,331359536,src/qt/intro.cpp
promag,2019-10-04 06:45:46,"Instead of arguments, you have access to m_blockchain_size and the other.",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331359940,331359940,src/qt/intro.cpp
emilengler,2019-10-04 20:20:32,"Are you sure?\nIIRC it was only available in the contructor but I could be wrong, thats why I used this method",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331670451,331670451,src/qt/intro.cpp
promag,2019-10-04 20:23:53,Both are members of `Intro`: https://github.com/bitcoin/bitcoin/blob/7b701fef58f627956d597817a1f9422edd890cdc/src/qt/intro.h#L70-L71,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331671713,331671713,src/qt/intro.cpp
emilengler,2019-10-04 21:35:58,"Done, don't know why it didn't worked last time",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331694651,331694651,src/qt/intro.cpp
hebasto,2019-10-05 08:19:55,Naming: s/isPruning/is_pruned/,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331738359,331738359,src/qt/intro.cpp
hebasto,2019-10-05 08:22:05,"This does not work if ""-prune"" is set:\n\n```bash\nsrc/qt/bitcoin-qt -prune=3000\n```\n\n![Screenshot from 2019-10-05 11-15-01](https://user-images.githubusercontent.com/32963518/66252279-4b70b680-e762-11e9-80a5-fb9568535f5f.png)\n",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331738410,331738410,src/qt/intro.cpp
hebasto,2019-10-05 08:52:30,"Could get rid of the magic number `2`?\nSee:\n- https://doc.qt.io/qt-5/qt.html#CheckState-enum\n- https://doc.qt.io/qt-5/qabstractbutton.html#checked-prop",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331739299,331739299,src/qt/intro.cpp
emilengler,2019-10-05 21:29:16,"Sure, I will work on your suggested changes now",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331762342,331762342,src/qt/intro.cpp
emilengler,2019-10-05 23:29:49,d35cfde6429dafe576f7490dd3fd880e70994fde,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331765091,331765091,src/qt/intro.cpp
emilengler,2019-10-05 23:44:08,255ab91b31ca3848654a63fcc384b83913bd36e8,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331765362,331765362,src/qt/intro.cpp
emilengler,2019-10-05 23:44:38,ea8ef9cde7b28fda72aa2313c92e6396e700e357,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331765368,331765368,src/qt/intro.cpp
hebasto,2019-10-06 13:49:25,"[Developer Notes - C++ data structures](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#c-data-structures):\n\n> Initialize all non-static class members where they are defined.",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331790590,331790590,src/qt/intro.cpp
hebasto,2019-10-06 13:52:36,"[Developer Notes - Coding Style (C++)](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c):\n\n> - Variable (including function arguments) and namespace names are all lowercase and may use `_` to separate words (snake_case).\n>   - Class member variables have a `m_` prefix.\n\nAlso a negated name is confusing. Could it be positive?",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331790727,331790727,src/qt/intro.h
hebasto,2019-10-06 14:30:52,`ui->prune->isChecked()` is accessible here. `bool is_pruned` parameter seems redundant.,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331792494,331792494,src/qt/intro.h
emilengler,2019-10-06 16:06:58,"Yes, do this now",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331797123,331797123,src/qt/intro.h
emilengler,2019-10-06 16:08:25,"Oh yeah, it is just a remaining of the first version of this patch",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331797191,331797191,src/qt/intro.h
promag,2019-10-06 16:31:17,"You don't have to add this, just use `ui->prune->isChecked()`?",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331798197,331798197,src/qt/intro.h
emilengler,2019-10-06 16:55:56,430985b1ab5639f1a7440705bc857fd9f7b45aaf,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331799349,331799349,src/qt/intro.cpp
emilengler,2019-10-06 16:57:02,"@promag I do, it is there to check if it touched by the user. If the user has used the checkbox once, this bool will go to false",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331799399,331799399,src/qt/intro.h
hebasto,2019-10-06 17:39:36,"```suggestion\n    bool m_prune_set{false};\n```",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331801244,331801244,src/qt/intro.h
emilengler,2019-10-07 00:01:59,Done,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r331817879,331817879,src/qt/intro.h
hebasto,2019-10-17 12:10:22,"`pruneTarget` variable holds semantically different values at different points: (1) pruned target in mebibytes (MiB), and (2) pruned target in gigabytes (10^6 bytes). IMO, such semantic overloading should be avoided.\n\nPlease note, that the binary coefficient is used in master branch: https://github.com/bitcoin/bitcoin/blob/46d6930f8c7ba7cbcd7d86dd5d0117642fcbc819/src/qt/intro.cpp#L142\n\n`-p",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r335966027,335966027,src/qt/intro.cpp
hebasto,2019-10-17 12:14:39,Could be renamed: s/`pruneTarget`/`m_prune_target`/ and initialized to `0` by default?,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r335967758,335967758,src/qt/intro.h
emilengler,2019-10-17 14:57:23,ACK,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r336056586,336056586,src/qt/intro.h
emilengler,2019-10-17 15:11:39,IIRC it still uses megabyte internally but only gigabyte for the display in the GUI because otherwise it could get strange looking,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r336065320,336065320,src/qt/intro.cpp
emilengler,2019-10-17 15:13:08,"ACK on the overloading problem.\nI will multiply with 1000 instead",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r336066189,336066189,src/qt/intro.cpp
hebasto,2019-10-17 16:27:45,Eh? Why is this comment marked as resolved?,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r336105348,336105348,src/qt/intro.cpp
hebasto,2019-10-17 16:31:23,This is inconsistent with https://github.com/bitcoin/bitcoin/blob/ec3ed5a4487886f1c2a35fda0a3289be7b280248/src/init.cpp#L386-L388,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r336106975,336106975,src/qt/intro.cpp
emilengler,2019-10-17 17:51:58,"Ok, then I will change everything to Mebibyte",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r336143276,336143276,src/qt/intro.cpp
Sjors,2019-10-22 14:25:34,"Move to start of function, otherwise `storageRequiresMsg` will have the wrong amount.",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r337549911,337549911,src/qt/intro.cpp
Sjors,2019-10-22 14:39:30,"MiB is indeed consistent with other places, but you should also change `uint64_t GB_BYTES{1000000000}` to `uint64_t GiB_BYTES{1073741824}`. But that impacts the settings screen. Probably better to leave this change for another PR.",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r337558619,337558619,src/qt/intro.cpp
emilengler,2019-10-22 14:57:41,"Nope, see L352-354",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r337570373,337570373,src/qt/intro.cpp
ryanofsky,2019-10-22 15:37:22,"Instead of doing ad-hoc calculations everywhere, I'd strongly encourage using the following well-defined `PruneGBtoMiB` and `PruneMiBtoGB` functions (from #15936) for this:\n\nhttps://github.com/bitcoin/bitcoin/blob/0ab41dd770c1f13983df528b111cfc8a51fe016a/src/qt/optionsmodel.h#L24-L25\n\nThis would increase readability and prevent bugs and let us be sure when we migrate this setting out of qs",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r337594268,337594268,src/qt/intro.cpp
ryanofsky,2019-10-22 15:51:03,"> MiB is indeed consistent with other places, but you should also change `uint64_t GB_BYTES{1000000000}` to `uint64_t GiB_BYTES{1073741824}`. But that impacts the settings screen. Probably better to leave this change for another PR.\n\nI'm not sure what the goal of this change would be, and would definitely think it should be done as separately from this PR. ~The existing conversions in this PR ",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r337601980,337601980,src/qt/intro.cpp
ryanofsky,2019-10-22 16:09:15,"This is doing a conversion from MiB to GiB not GB. Also it is rounding down instead of up, which means round trips between two units are not stable. (Maybe not a problem for this PR since it is a one-time conversion, but definitely a problem for #12833 and #15936 which need consistent repeatable conversions.)\n\nWould suggest:\n\n- Renaming this variable from `m_prune_target` to `m_prune_targe",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r337612190,337612190,src/qt/intro.cpp
Sjors,2019-10-22 16:24:34,"Not sure what's to see there?\n<img width=""438"" alt=""Schermafbeelding 2019-10-22 om 18 22 17"" src=""https://user-images.githubusercontent.com/10217/67307520-ec989480-f4f8-11e9-969d-7ffcd3748b50.png"">\nEverywhere it says 3 GB it should say 5 GB; 2 GB pruning + 3 GB chainstate (`m_assumed_chain_state_size`).\n",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r337620182,337620182,src/qt/intro.cpp
Sjors,2019-10-22 16:26:56,This should check `prunedGBs  + m_chain_state_size <= requiredSpace` (assuming you  add m_chain_state_size to requiredSpace earlier).,https://github.com/bitcoin/bitcoin/pull/17035#discussion_r337621386,337621386,src/qt/intro.cpp
Sjors,2019-10-22 16:29:27,"This has never been a very precise number because 3 GB more or less didn't matter, but with pruning we should show the correct numbers. ",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r337622712,337622712,src/qt/intro.cpp
ryanofsky,2019-10-22 16:31:26,"Maybe I'm misunderstanding the flow, but it seems like there a bug here. This code is trying to convert `m_prune_target` from mib to gb when m_prune_target would already contain gib after running the code in the constructor.",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r337623723,337623723,src/qt/intro.cpp
emilengler,2019-10-22 19:44:29,"Oh now I understand what you mean.\nWill work on that tomorrow",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r337714001,337714001,src/qt/intro.cpp
emilengler,2019-10-23 14:40:18,"@ryanofsky These functions are not existent in my branch.\nShould I copy them?",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r338090491,338090491,src/qt/intro.cpp
ryanofsky,2019-10-23 15:01:00,"> @ryanofsky These functions are not existent in my branch.\n> Should I copy them?\n\nYes, that's why I linked to my branch.",https://github.com/bitcoin/bitcoin/pull/17035#discussion_r338103838,338103838,src/qt/intro.cpp
