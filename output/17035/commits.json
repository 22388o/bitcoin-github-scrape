[
  {
    "sha": "f3108a01a03a937fc3d31f007caa69e1f95f182f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzEwOGEwMWEwM2E5MzdmYzNkMzFmMDA3Y2FhNjllMWY5NWYxODJm",
    "commit": {
      "author": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2019-10-03T00:20:38Z"
      },
      "committer": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2019-10-22T15:02:01Z"
      },
      "message": "qt: Fix text display when state of prune button is changed\n\nThis fixes the bug of the required amount of storage in the intro screen",
      "tree": {
        "sha": "5e6ccf67c4dfd8b6bd1794980740569be3bff34d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e6ccf67c4dfd8b6bd1794980740569be3bff34d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3108a01a03a937fc3d31f007caa69e1f95f182f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE82XmVEpcmrEyk0LUL21BRcVfx8cFAl2vGf0ACgkQL21BRcVf\nx8eLqBAA4iG7Z/+s/cZJYAUBwOO1rhnmwfWMdADqYUOqqSIxZnNw7fT17zeN1Tm3\nj5tiBq+Nyx5P+kTP0t53AGztlpttNBnFiYTMAJkyjI23nJYRYW5budu4wG/fKxrf\npXINrWrZ8dSrnRG0jQ6Sk1h5g79bRLtTd6RRNhKcdFQ/7RVGFoJoKuy2FwMS0AEH\nasblX0q24gr9LxvUu4BqLIjeN6tZtFTE1V+bZUfb2MNs05KQXOKq1E6XAOWaegLb\nGqligfm4GHbn4eFwiUCzkVRvzuM/CIszyagQ6QnEslRlb1VTloNK/LswYtxzU5uD\ncyPhAAd+i/d+0H1mJy49QbeyGcgSXLJohRxKrPtf5Q00CRRtTN2vneMJnBuLdf4I\n/gaBs7vZP8YJHqRIchwQ+1MGCQiwEKr60msXreaYdo+Vkq8AjRVParPeWoGT6ZrW\nQfMojy2t9kOKWpnzVpjmuSdU8os5PIVrdJ5WIymqQ4Rjb3HquwmG26ssIqSCsPk5\nWEtFLpHCnzhGvnEWqRG7L0UAagzI/x6LCFW+nX9ot2huxCEeHBDfRC9vZHinDeq9\nNQ2XIdRJbuNoxldVXvVG8E+YgMDOqxl90IR3djqOF0qG21322R02AI0m7j7MX/bI\nckuJYnLSloCiAxWeuqas0AhTEy/8ZwoVoqRtoe4NrimK4DH6JQw=\n=ovwl\n-----END PGP SIGNATURE-----",
        "payload": "tree 5e6ccf67c4dfd8b6bd1794980740569be3bff34d\nparent 696b5eb1799d9ac7d6dd72134ac30df87e9df222\nauthor Emil Engler <me@emilengler.com> 1570062038 +0200\ncommitter Emil Engler <me@emilengler.com> 1571756521 +0200\n\nqt: Fix text display when state of prune button is changed\n\nThis fixes the bug of the required amount of storage in the intro screen\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3108a01a03a937fc3d31f007caa69e1f95f182f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f3108a01a03a937fc3d31f007caa69e1f95f182f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3108a01a03a937fc3d31f007caa69e1f95f182f/comments",
    "author": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "696b5eb1799d9ac7d6dd72134ac30df87e9df222",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/696b5eb1799d9ac7d6dd72134ac30df87e9df222",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/696b5eb1799d9ac7d6dd72134ac30df87e9df222"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 44,
      "deletions": 23
    },
    "files": [
      {
        "sha": "c164916923d7b9c6ba8886ad27e55195d824c406",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 23,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3108a01a03a937fc3d31f007caa69e1f95f182f/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3108a01a03a937fc3d31f007caa69e1f95f182f/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=f3108a01a03a937fc3d31f007caa69e1f95f182f",
        "patch": "@@ -130,30 +130,14 @@ Intro::Intro(QWidget *parent, uint64_t blockchain_size, uint64_t chain_state_siz\n     );\n     ui->lblExplanation2->setText(ui->lblExplanation2->text().arg(PACKAGE_NAME));\n \n-    uint64_t pruneTarget = std::max<int64_t>(0, gArgs.GetArg(\"-prune\", 0));\n-    if (pruneTarget > 1) { // -prune=1 means enabled, above that it's a size in MB\n+    m_prune_target = std::max<int64_t>(0, gArgs.GetArg(\"-prune\", 0));\n+    if (m_prune_target > 1) { // -prune=1 means enabled, above that it's a size in MB\n         ui->prune->setChecked(true);\n         ui->prune->setEnabled(false);\n     }\n-    ui->prune->setText(tr(\"Discard blocks after verification, except most recent %1 GB (prune)\").arg(pruneTarget ? pruneTarget / 1000 : 2));\n-    requiredSpace = m_blockchain_size;\n-    QString storageRequiresMsg = tr(\"At least %1 GB of data will be stored in this directory, and it will grow over time.\");\n-    if (pruneTarget) {\n-        uint64_t prunedGBs = std::ceil(pruneTarget * 1024 * 1024.0 / GB_BYTES);\n-        if (prunedGBs <= requiredSpace) {\n-            requiredSpace = prunedGBs;\n-            storageRequiresMsg = tr(\"Approximately %1 GB of data will be stored in this directory.\");\n-        }\n-        ui->lblExplanation3->setVisible(true);\n-    } else {\n-        ui->lblExplanation3->setVisible(false);\n-    }\n-    requiredSpace += m_chain_state_size;\n-    ui->sizeWarningLabel->setText(\n-        tr(\"%1 will download and store a copy of the Bitcoin block chain.\").arg(PACKAGE_NAME) + \" \" +\n-        storageRequiresMsg.arg(requiredSpace) + \" \" +\n-        tr(\"The wallet will also be stored in this directory.\")\n-    );\n+    setSizeWarningLabel();\n+    m_prune_target = m_prune_target ? m_prune_target / 1024 : 2;\n+    ui->prune->setText(tr(\"Discard blocks after verification, except most recent %1 GB (prune)\").arg(m_prune_target));\n     this->adjustSize();\n     startThread();\n }\n@@ -275,11 +259,17 @@ void Intro::setStatus(int status, const QString &message, quint64 bytesAvailable\n         {\n             freeString += \" \" + tr(\"(of %n GB needed)\", \"\", requiredSpace);\n             ui->freeSpace->setStyleSheet(\"QLabel { color: #800000 }\");\n-            ui->prune->setChecked(true);\n+            if (!m_prune_set) {\n+                ui->prune->setChecked(true);\n+                m_prune_set = true;\n+            }\n         } else if (bytesAvailable / GB_BYTES - requiredSpace < 10) {\n             freeString += \" \" + tr(\"(%n GB needed for full chain)\", \"\", requiredSpace);\n             ui->freeSpace->setStyleSheet(\"QLabel { color: #999900 }\");\n-            ui->prune->setChecked(true);\n+            if (!m_prune_set) {\n+                ui->prune->setChecked(true);\n+                m_prune_set = true;\n+            }\n         } else {\n             ui->freeSpace->setStyleSheet(\"\");\n         }\n@@ -322,6 +312,10 @@ void Intro::startThread()\n \n     connect(executor, &FreespaceChecker::reply, this, &Intro::setStatus);\n     connect(this, &Intro::requestCheck, executor, &FreespaceChecker::check);\n+    connect(ui->prune, &QCheckBox::stateChanged, [this](int state) {\n+        setSizeWarningLabel();\n+        Q_EMIT requestCheck();\n+    });\n     /*  make sure executor object is deleted in its own thread */\n     connect(thread, &QThread::finished, executor, &QObject::deleteLater);\n \n@@ -349,3 +343,27 @@ QString Intro::getPathToCheck()\n     mutex.unlock();\n     return retval;\n }\n+\n+void Intro::setSizeWarningLabel()\n+{\n+    requiredSpace = m_blockchain_size;\n+    QString storageRequiresMsg = QObject::tr(\"At least %1 GB of data will be stored in this directory, and it will grow over time.\");\n+    if (ui->prune->isChecked()) {\n+        uint64_t prunedGBs = std::ceil(m_prune_target * 1024 * 1024 / GB_BYTES);\n+        if (prunedGBs <= requiredSpace) {\n+            requiredSpace = prunedGBs;\n+            storageRequiresMsg = QObject::tr(\"Approximately %1 GB of data will be stored in this directory.\");\n+        }\n+        Intro::ui->lblExplanation3->setVisible(true);\n+    } else {\n+        Intro::ui->lblExplanation3->setVisible(false);\n+    }\n+    requiredSpace += m_chain_state_size;\n+    Intro::ui->sizeWarningLabel->setText(\n+        QObject::tr(\"%1 will download and store a copy of the Bitcoin block chain.\").arg(PACKAGE_NAME) + \" \" +\n+        storageRequiresMsg.arg(requiredSpace) + \" \" +\n+        QObject::tr(\"The wallet will also be stored in this directory.\")\n+    );\n+    // Reset GUI width and update storage warning if neccesary\n+    this->adjustSize();\n+}"
      },
      {
        "sha": "4f73c209f6552e02e9fd48c7f3623f0496af9797",
        "filename": "src/qt/intro.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3108a01a03a937fc3d31f007caa69e1f95f182f/src/qt/intro.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3108a01a03a937fc3d31f007caa69e1f95f182f/src/qt/intro.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.h?ref=f3108a01a03a937fc3d31f007caa69e1f95f182f",
        "patch": "@@ -69,10 +69,13 @@ private Q_SLOTS:\n     QString pathToCheck;\n     uint64_t m_blockchain_size;\n     uint64_t m_chain_state_size;\n+    bool m_prune_set{false};\n+    uint64_t m_prune_target{0};\n \n     void startThread();\n     void checkPath(const QString &dataDir);\n     QString getPathToCheck();\n+    void setSizeWarningLabel();\n \n     friend class FreespaceChecker;\n };"
      }
    ]
  }
]