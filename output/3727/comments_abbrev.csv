jgarzik,2014-02-22T02:05:38Z,"ACK the first commit.  I need to trace through the code to fully review the second commit, which touches key validation code.\n",https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-35791656,35791656,
sipa,2014-02-22T22:42:10Z,"Looks correct to me. The only validation change is replace a ""true"" by state.Orphan (which returns true), and the changes to state itself should be unobservable except for the IsOrphan() method, which the core code doesn't call.\n",https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-35817452,35817452,
luke-jr,2014-06-26T14:40:27Z,"Rebased, with @laanwj 's change implemented.\n",https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-47234020,47234020,
gavinandresen,2014-06-26T15:57:07Z,Untested-but-code-reviewed ACK.\n,https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-47244197,47244197,
BitcoinPullTester,2014-06-26T17:45:14Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p3727_8608fce20ac72af78d1f01f8c10d9dacc2c364ed/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-47256482,47256482,
jgarzik,2014-07-29T17:13:17Z,Shall we move this along and collect ACKs?  Consensus seems to be we like this one.\n,https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-50507370,50507370,
laanwj,2014-07-30T08:45:52Z,Untested ACK\n,https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-50589113,50589113,
sipa,2014-07-30T11:08:20Z,"This will not work for all types of errors. All ProcessBlock does now is do preliminary checks and store the block in the block database, and remember who we got the block from. Then we invoke ActivateBestChain which connects the new best chain if any, but as it's not about a specific block anymore, it does not return information about errors with the block - they're sent directly as rejections to",https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-50601253,50601253,
luke-jr,2014-07-30T16:33:37Z,"@sipa In this case, the ""peer that give us the block"" is a RPC client. Can we tie in via that somehow?\n",https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-50641812,50641812,
sipa,2014-07-30T21:09:40Z,"An alternative is not using ProcessBlock, but calling CheckBlock, AcceptBlock and ConnectTip directly. The logic should be trivial as submitblock can just fail in case the block submitted is not an immediate successor that would cause switching immediately.\n",https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-50680369,50680369,
laanwj,2014-08-01T09:17:23Z,@sipa Sounds like a good idea to me.\n,https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-50864884,50864884,
luke-jr,2014-10-30T02:19:27Z,Rebased on top of #5106\n,https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-61036606,61036606,
luke-jr,2014-11-03T11:30:48Z,I believe this is now simple enough to be quickly re-ACK'd?\n,https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-61465894,61465894,
sipa,2014-11-03T11:49:44Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/3727#issuecomment-61467579,61467579,
laanwj,2014-02-25T07:13:12Z,"You could use RPC_TRANSACTION_REJECTED code here, which I introduce in #3730 (maybe rename it to transaction or block rejected...).\n",https://github.com/bitcoin/bitcoin/pull/3727#discussion_r10026333,10026333,src/rpcmining.cpp
luke-jr,2014-02-25T07:14:51Z,RPC_INPUT_REJECTED?\n,https://github.com/bitcoin/bitcoin/pull/3727#discussion_r10026353,10026353,src/rpcmining.cpp
laanwj,2014-02-25T07:16:35Z,"Input is too general. It should be clear that this concerns transaction/block-level rejection, not just invalid input.\nEdit: also it would be useful to be able to get the reject code from the error as well, not just the string message.\n",https://github.com/bitcoin/bitcoin/pull/3727#discussion_r10026377,10026377,src/rpcmining.cpp
laanwj,2014-04-16T07:23:20Z,"I eventually added three transaction-validation related error codes in #3730, RPC_TRANSACTION_ERROR would be appropriate here:\n\n```\nRPC_TRANSACTION_ERROR           = -25, // General error during transaction submission\nRPC_TRANSACTION_REJECTED        = -26, // Transaction was rejected by network rules\nRPC_TRANSACTION_ALREADY_IN_CHAIN= -27, // Transaction already in chain\n```\n",https://github.com/bitcoin/bitcoin/pull/3727#discussion_r11672491,11672491,src/rpcmining.cpp
luke-jr,2014-04-16T09:13:06Z,But there's no reason to think it has anything to do with transactions...\n,https://github.com/bitcoin/bitcoin/pull/3727#discussion_r11675464,11675464,src/rpcmining.cpp
laanwj,2014-04-16T09:45:12Z,Obviously. But you could widen the scope.\n,https://github.com/bitcoin/bitcoin/pull/3727#discussion_r11676681,11676681,src/rpcmining.cpp
luke-jr,2014-04-16T09:48:47Z,So rename it to RPC_ACCEPT_ERROR? Or what?\n,https://github.com/bitcoin/bitcoin/pull/3727#discussion_r11676808,11676808,src/rpcmining.cpp
laanwj,2014-04-16T09:52:43Z,"I'd say RPC_VERIFY_\* and change the comments to be ""Transaction or block""\n",https://github.com/bitcoin/bitcoin/pull/3727#discussion_r11676920,11676920,src/rpcmining.cpp
