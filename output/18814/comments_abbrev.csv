DrahtBot,2020-04-29 10:56:02,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18452 (qt: Fix shutdown when waitfor* cmds are called from RPC console by hebasto)\n* #18354 (Protect wallet by using sha",https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-621127303,621127303,
MarcoFalke,2020-04-29 12:22:24,Would be nice to write a test for this,https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-621167692,621167692,
promag,2020-04-29 12:38:19,"Thanks for reviewing @ryanofsky. I'll address that case.\n\n@MarcoFalke probably a unit test no?",https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-621176155,621176155,
MarcoFalke,2020-04-29 12:56:33,"Yes, I haven't looked at the code changes, but I assume some kind of unit test makes sense.",https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-621185922,621185922,
MarcoFalke,2020-04-29 13:17:44,"Also, this needs backport, right?",https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-621198353,621198353,
promag,2020-04-29 21:58:19,"> A unit test could be a good idea, but might be difficult to write\n\nFWIW I'm still trying this.",https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-621487300,621487300,
promag,2020-04-29 22:11:22,"> instead of blocking waiting for the old callback to finish.\n\nBTW If we bump minimum libevent then we could use this https://github.com/libevent/libevent/blob/29cc8386a2f7911eaa9336692a2c5544d8b4734f/whatsnew-2.1.txt#L248-L265\n",https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-621492478,621492478,
MarcoFalke,2020-04-29 22:30:49,Bumping libevent should be discussed separately. See also #18676 ,https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-621501209,621501209,
ryanofsky,2020-04-29 22:37:00,"Also, I haven't looked but I doubt there's a need for a special libevent feature to improve rpcRunLater. We should just need an extra bit of code at the end of the existing libevent callback to register a new callback if there's one pending",https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-621503715,621503715,
promag,2020-05-03 22:34:06,"> FWIW I'm still trying this.\n\nAnd I quit. Tried with unit test but it required to start HTTP/RPC server because of libevent and timer stuff. Then tried funcional test but can't figure how to hit the problem.\n\n@ryanofsky I'll borrow your comment above to improve PR description.",https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-623193625,623193625,
ryanofsky,2020-05-07 00:38:32,"This still looks good but it might be simpler to squash second and third commits to avoid having a bug in the second commit which is fixed by the third commit.\n\nThis would simplify the PR description so you could drop the paragraph ""Failure to relock race condition in 59a50e7"" about the temporary bug.",https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-624963210,624963210,
promag,2020-05-07 00:45:21,Done.,https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-624964941,624964941,
ryanofsky,2020-05-07 01:04:38,"Code review ACK 9f59dde9740d065118bdddde75ef9f4e4603a7b1. No changes since last review except squashing commits.\n\nTwo other thoughts:\n\n- It might be nice to add a comment for [`RPCRunLater`](https://github.com/bitcoin/bitcoin/blob/7bcc42b4035b878719d13201286e322989b415c5/src/rpc/server.h#L78-L82) that mentions the risk of deadlocks:\n\n  ```c++\n  /** \n   * Run func nSeconds from now.",https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-624969955,624969955,
MarcoFalke,2020-05-11 14:45:16,ACK 9f59dde9740d065118bdddde75ef9f4e4603a7b1,https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-626748762,626748762,
promag,2020-05-13 10:01:13,"@ryanofsky honestly I'd suggest to avoid using it. Instead of timeout what I think would be best is to exclusively ""bind"" the unlock to the current RPC connection. In the GUI we could have a timer. I don't see other uses of the timer in the server.",https://github.com/bitcoin/bitcoin/pull/18814#issuecomment-627882950,627882950,
ryanofsky,2020-04-29 12:04:35,"I think this could introduce a bug where wallet never relocks.\n\nIn case where walletpassphrase is called from two threads, first thread sets `pwallet->nRelockTime` and is interrupted after constructing lambda but before invoking rpcRunLater. Second thread sets `pwallet->nRelockTime` to a different value and calls `rpcRunLater`, and then first thread wakes up and calls `rpcRunLater`.\n\nLambd",https://github.com/bitcoin/bitcoin/pull/18814#discussion_r417262916,417262916,src/wallet/rpcwallet.cpp
promag,2020-04-29 12:29:09,"That would make timers list grow - they are never removed, just replaced.\n\n",https://github.com/bitcoin/bitcoin/pull/18814#discussion_r417276244,417276244,src/wallet/rpcwallet.cpp
promag,2020-04-29 21:09:01,Added a mutex to prevent concurrent calls with the same wallet. The lock is held during wallet `Unlock` and `RPCRunLater` so the case you describe can't happen.,https://github.com/bitcoin/bitcoin/pull/18814#discussion_r417613093,417613093,src/wallet/rpcwallet.cpp
promag,2020-05-03 22:30:53,Nice catch BTW.,https://github.com/bitcoin/bitcoin/pull/18814#discussion_r419169288,419169288,src/wallet/rpcwallet.cpp
