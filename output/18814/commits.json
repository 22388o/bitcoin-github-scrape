[
  {
    "sha": "a2e6db5c4f1bb52a8814102b628e51652493d06a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMmU2ZGI1YzRmMWJiNTJhODgxNDEwMmI2MjhlNTE2NTI0OTNkMDZh",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-04-29T09:40:39Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-04-29T10:47:57Z"
      },
      "message": "rpc: Add mutex to guard deadlineTimers",
      "tree": {
        "sha": "7c0ed0374e01c2f0902d295cd07ab1b9e3cd2192",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c0ed0374e01c2f0902d295cd07ab1b9e3cd2192"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2e6db5c4f1bb52a8814102b628e51652493d06a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2e6db5c4f1bb52a8814102b628e51652493d06a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a2e6db5c4f1bb52a8814102b628e51652493d06a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2e6db5c4f1bb52a8814102b628e51652493d06a/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0ef0d33f7562c3b7f9c021549e70b3b4dbcc504c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ef0d33f7562c3b7f9c021549e70b3b4dbcc504c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ef0d33f7562c3b7f9c021549e70b3b4dbcc504c"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "219979f09533378e286725b27bf978ec134b5bcf",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a2e6db5c4f1bb52a8814102b628e51652493d06a/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a2e6db5c4f1bb52a8814102b628e51652493d06a/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=a2e6db5c4f1bb52a8814102b628e51652493d06a",
        "patch": "@@ -25,7 +25,8 @@ static std::string rpcWarmupStatus GUARDED_BY(cs_rpcWarmup) = \"RPC server starte\n /* Timer-creating functions */\n static RPCTimerInterface* timerInterface = nullptr;\n /* Map of name to timer. */\n-static std::map<std::string, std::unique_ptr<RPCTimerBase> > deadlineTimers;\n+static Mutex g_deadline_timers_mutex;\n+static std::map<std::string, std::unique_ptr<RPCTimerBase> > deadlineTimers GUARDED_BY(g_deadline_timers_mutex);\n static bool ExecuteCommand(const CRPCCommand& command, const JSONRPCRequest& request, UniValue& result, bool last_handler);\n \n struct RPCCommandExecutionInfo\n@@ -298,7 +299,7 @@ void InterruptRPC()\n void StopRPC()\n {\n     LogPrint(BCLog::RPC, \"Stopping RPC\\n\");\n-    deadlineTimers.clear();\n+    WITH_LOCK(g_deadline_timers_mutex, deadlineTimers.clear());\n     DeleteAuthCookie();\n     g_rpcSignals.Stopped();\n }\n@@ -486,6 +487,7 @@ void RPCRunLater(const std::string& name, std::function<void()> func, int64_t nS\n {\n     if (!timerInterface)\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"No timer handler registered for RPC\");\n+    LOCK(g_deadline_timers_mutex);\n     deadlineTimers.erase(name);\n     LogPrint(BCLog::RPC, \"queue run of timer %s in %i seconds (using %s)\\n\", name, nSeconds, timerInterface->Name());\n     deadlineTimers.emplace(name, std::unique_ptr<RPCTimerBase>(timerInterface->NewTimer(func, nSeconds*1000)));"
      }
    ]
  },
  {
    "sha": "9f59dde9740d065118bdddde75ef9f4e4603a7b1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZjU5ZGRlOTc0MGQwNjUxMThiZGRkZGU3NWVmOWY0ZTQ2MDNhN2Ix",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-04-29T09:45:12Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-05-07T00:42:07Z"
      },
      "message": "rpc: Relock wallet only if most recent callback",
      "tree": {
        "sha": "5b3a7997c0dd3cf6f564fdae529f047c69aa7de3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b3a7997c0dd3cf6f564fdae529f047c69aa7de3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f59dde9740d065118bdddde75ef9f4e4603a7b1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f59dde9740d065118bdddde75ef9f4e4603a7b1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9f59dde9740d065118bdddde75ef9f4e4603a7b1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f59dde9740d065118bdddde75ef9f4e4603a7b1/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a2e6db5c4f1bb52a8814102b628e51652493d06a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2e6db5c4f1bb52a8814102b628e51652493d06a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a2e6db5c4f1bb52a8814102b628e51652493d06a"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 10,
      "deletions": 2
    },
    "files": [
      {
        "sha": "93889ae99e898b164ad483df2a2c6e73c5c0e177",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f59dde9740d065118bdddde75ef9f4e4603a7b1/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f59dde9740d065118bdddde75ef9f4e4603a7b1/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=9f59dde9740d065118bdddde75ef9f4e4603a7b1",
        "patch": "@@ -1908,6 +1908,9 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n             }.Check(request);\n \n     int64_t nSleepTime;\n+    int64_t relock_time;\n+    // Prevent concurrent calls to walletpassphrase with the same wallet.\n+    LOCK(pwallet->m_unlock_mutex);\n     {\n         auto locked_chain = pwallet->chain().lock();\n         LOCK(pwallet->cs_wallet);\n@@ -1946,6 +1949,7 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n         pwallet->TopUpKeyPool();\n \n         pwallet->nRelockTime = GetTime() + nSleepTime;\n+        relock_time = pwallet->nRelockTime;\n     }\n \n     // rpcRunLater must be called without cs_wallet held otherwise a deadlock\n@@ -1957,9 +1961,11 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n     // wallet before the following callback is called. If a valid shared pointer\n     // is acquired in the callback then the wallet is still loaded.\n     std::weak_ptr<CWallet> weak_wallet = wallet;\n-    pwallet->chain().rpcRunLater(strprintf(\"lockwallet(%s)\", pwallet->GetName()), [weak_wallet] {\n+    pwallet->chain().rpcRunLater(strprintf(\"lockwallet(%s)\", pwallet->GetName()), [weak_wallet, relock_time] {\n         if (auto shared_wallet = weak_wallet.lock()) {\n             LOCK(shared_wallet->cs_wallet);\n+            // Skip if this is not the most recent rpcRunLater callback.\n+            if (shared_wallet->nRelockTime != relock_time) return;\n             shared_wallet->Lock();\n             shared_wallet->nRelockTime = 0;\n         }"
      },
      {
        "sha": "e05973799c79f064ce5fbf2db772285c316b8076",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9f59dde9740d065118bdddde75ef9f4e4603a7b1/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9f59dde9740d065118bdddde75ef9f4e4603a7b1/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=9f59dde9740d065118bdddde75ef9f4e4603a7b1",
        "patch": "@@ -869,8 +869,10 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     std::vector<std::string> GetDestValues(const std::string& prefix) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     //! Holds a timestamp at which point the wallet is scheduled (externally) to be relocked. Caller must arrange for actual relocking to occur via Lock().\n-    int64_t nRelockTime = 0;\n+    int64_t nRelockTime GUARDED_BY(cs_wallet){0};\n \n+    // Used to prevent concurrent calls to walletpassphrase RPC.\n+    Mutex m_unlock_mutex;\n     bool Unlock(const SecureString& strWalletPassphrase, bool accept_no_keys = false);\n     bool ChangeWalletPassphrase(const SecureString& strOldWalletPassphrase, const SecureString& strNewWalletPassphrase);\n     bool EncryptWallet(const SecureString& strWalletPassphrase);"
      }
    ]
  }
]