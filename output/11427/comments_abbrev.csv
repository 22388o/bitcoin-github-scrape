sdaftuar,2017-10-01T18:30:38Z,"This is incorrect -- on a random chain, we can't disable BIP30 merely because BIP34 has activated.  It's possible to have a chain where there are multiple coinbases with the same txid (mined pre-bip34), where the first bip30 violation would be after the bip34 activation height, because the coinbases didn't overwrite each other.  This in turn could prevent reorging back to the honest chain.  NACK.",https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-333396501,333396501,
jtimon,2017-10-02T09:25:06Z,"I don't follow. In a ""random chain"", let's say testnet where bip34 is\nburied in the past, the situation is similar to bitcoin main. On a newly\ncreated ""random chain"", bip34 (or a hf equivalent) can be validated from\nblock 1.\n\nOn 1 Oct 2017 8:31 pm, ""Suhas Daftuar"" <notifications@github.com> wrote:\n\n> This is incorrect -- on a random chain, we can't disable BIP30 merely\n> because BIP34 has ",https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-333483647,333483647,
jl2012,2017-10-02T10:21:17Z,"@jtimon , say I start from genesis block. Since BIP34 is not checked before BIP34Height, I could make a pre-BIP34 coinbase transaction that includes a post-BIP34Height value in scriptSig, and is perfectly valid. After BIP34Height, with this PR, BIP30 is disabled, so I could replay the same pre-BIP34 coinbase tx.\n\n@sdaftuar thanks for pointing out. I missed it.",https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-333495761,333495761,
jtimon,2017-10-02T10:46:16Z,"> say I start from genesis block\n\nThe genesis block never needs to be checked.\n\n> After BIP34Height, with this PR, BIP30 is disabled, so I could replay the same pre-BIP34 coinbase tx.\n\nNot after this PR, after BIP34Height bip30 is always disabled (assuming no huge reorg, an assumption buried deployments is doing for bip34 already anyway).\n\n> Since BIP34 is not checked before BIP34H",https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-333500428,333500428,
jl2012,2017-10-02T10:53:26Z,@jtimon : I mean I start from block 1. Say I make a new block 1 with a post-BIP34 height written in the coinbase. It is valid. Now with this PR this tx could be replayed after BIP34 height. Of course I need a quantum computer to rewrite the chain. But the point is this PR is redefining the consensus and could create a situation where BIP30 is bypassed.,https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-333501712,333501712,
jtimon,2017-10-02T11:42:07Z,"Just like bip90 redefines consensus. So we agree: the only problem would be\nwith a big reorg. But we disagree on that being a problem or not.\nUnless I'm missing the point about the ""random chain"".\n\nOn 2 Oct 2017 12:54 pm, ""Johnson Lau"" <notifications@github.com> wrote:\n\n> @jtimon <https://github.com/jtimon> : I mean I start from block 1. Say I\n> make a new block 1 with a post-BIP34 height w",https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-333510548,333510548,
TheBlueMatt,2017-10-03T20:24:06Z,"@jtimon someone can feed you a chain during IBD which will result in you being unable to reorg back to the main chain with this change, ie your node will be permanently stuck and you will have to reindex-chainstate (but there will be no error printed to that effect).",https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-333967090,333967090,
jtimon,2017-10-04T02:25:56Z,"Thank you for trying to explain, but, I'm sorry, I still don't get it.\nLet's assume the same attack with this change and without it during IBD.\n\nIn case A (without this change) you're fed a chain that diverges pre-bip34Height and thus continues to validate bip30 after bip34 is being valdiated too. But that chain has less work than the most-work valid chain, so when you see a most-work chain ",https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-334033122,334033122,
meshcollider,2017-10-05T10:23:35Z,"@jtimon (someone correct me if im wrong but this is what I think is the issue): if before BIP34 activation, you mine a block with a post-BIP34 blockheight in coinbase, and then replay it after BIP30 stops being validated, that replay is valid on that chain (like @jl2012 said) and the replay overwrites the original transaction. I believe it's this overwriting which makes the reorg impossible, becau",https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-334424316,334424316,
TheBlueMatt,2017-10-05T21:30:41Z,"Or, just generally, after this change, I can feed an IBD node a two-block chain: start with the real block 1, then a block 2 which duplicates the block 1 coinbase. Now the node will (eventually) try to reorg to the real chain and find itself with a UTXO set which is missing the block 1 coinbase output!",https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-334597791,334597791,
meshcollider,2017-10-05T21:46:41Z,@TheBlueMatt what wouldn't be possible below BIP34Height though because BIP30 is still enforced right? You'd have to feed the bad block in after BIP34Height on the bad chain wouldn't you?,https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-334601229,334601229,
TheBlueMatt,2017-10-05T22:17:27Z,"@MeshCollider Oh, indeed, yes, your original description is accurate, not mine.",https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-334607616,334607616,
jtimon,2017-10-06T13:37:53Z,"Alright, thanks again for the explanations. I believe I may actually being explained this before but forgot the part about not needing a huge reorg. Sorry for the noise, closing.\n",https://github.com/bitcoin/bitcoin/pull/11427#issuecomment-334757254,334757254,
jl2012,2017-09-30T15:24:58Z,should be `pindex->nHeight < chainparams.GetConsensus().BIP34Height;` ?,https://github.com/bitcoin/bitcoin/pull/11427#discussion_r142008315,142008315,src/validation.cpp
jtimon,2017-09-30T17:53:56Z,"oops, yeah it's bip34 that we need to enforce it after BIP34Height but not before, not bip30. bip30b is the opposite. Thanks!",https://github.com/bitcoin/bitcoin/pull/11427#discussion_r142011574,142011574,src/validation.cpp
jl2012,2017-10-01T03:14:53Z,"I think we could make this an `if` condition before any BIP30 code, and skip all BIP30 codes after BIP34Height. Therefore, we don't need to compare the block hash of every blocks with the BIP30 special cases",https://github.com/bitcoin/bitcoin/pull/11427#discussion_r142019645,142019645,src/validation.cpp
