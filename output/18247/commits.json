[
  {
    "sha": "fa9064704524a0fd1fa9ea73eea45b07316ac3d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTkwNjQ3MDQ1MjRhMGZkMWZhOWVhNzNlZWE0NWIwNzMxNmFjM2Qx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-03-02T19:14:30Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-03-31T21:03:03Z"
      },
      "message": "test: Wait for both veracks in add_p2p_connection",
      "tree": {
        "sha": "433ddf8d93da71c6c33b06ea7985bd1c6c9624cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/433ddf8d93da71c6c33b06ea7985bd1c6c9624cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa9064704524a0fd1fa9ea73eea45b07316ac3d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgqjQv/c5ikErFRVD2VCKs023PWYByQAiW1j8nOszkzSK516ehnGipM8y70Kq34\n/PusXsJONzlG0AzVGVszeSUYEKbZdNF1VQE5zh4is250BLJCtUxf8gnM8abNLNdW\nsAe9CCRLNL92L4SSIbV3JjpxCpIBxowC9gIgUAu+2t313Q1j/zQmOOp99MhQB3tW\nDXGUyFp23Kq9GW2WksQR80G5093ryOf6Ghr8w9LUu7fcodgT4ReDBjQq8Y23G/W7\nJZgYCmsVjhhstR1Wdc7edYWyyuQlzUaG9UNKxsyXsYNFRwsxdK+sUrBcFlykeZ0W\nkBYoTmTKd4RnKoUEVlKdWwRKW3tou3W3cgaqtG7U4KJ6NBI4TL+1iYcPszSoKqJo\nZtuh9KjWvYN9emYO+S6LZSaFrz9vELBCHH0S2bJUTC66vnhlttY4zRTx/Y7x8PHX\nhTKu7fGsK9INeZ1hlGEllCqEXIuA/7uPU0gKAO439wxhEcobrcfa9nDMABZMJnuM\nLJZQM+uq\n=Mq0Z\n-----END PGP SIGNATURE-----",
        "payload": "tree 433ddf8d93da71c6c33b06ea7985bd1c6c9624cb\nparent ac5c5d0162a963be6fbaa53261c01705436a65f3\nauthor MarcoFalke <falke.marco@gmail.com> 1583176470 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1585688583 -0400\n\ntest: Wait for both veracks in add_p2p_connection\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9064704524a0fd1fa9ea73eea45b07316ac3d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9064704524a0fd1fa9ea73eea45b07316ac3d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9064704524a0fd1fa9ea73eea45b07316ac3d1/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac5c5d0162a963be6fbaa53261c01705436a65f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac5c5d0162a963be6fbaa53261c01705436a65f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac5c5d0162a963be6fbaa53261c01705436a65f3"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 30,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2751ae6a5bd0120406375b60d86f0a74302976e5",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9064704524a0fd1fa9ea73eea45b07316ac3d1/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9064704524a0fd1fa9ea73eea45b07316ac3d1/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=fa9064704524a0fd1fa9ea73eea45b07316ac3d1",
        "patch": "@@ -19,6 +19,7 @@\n \n banscore = 10\n \n+\n class CLazyNode(P2PInterface):\n     def __init__(self):\n         super().__init__()\n@@ -88,6 +89,7 @@ def on_version(self, message):\n         self.send_message(msg_ping())\n         self.send_message(msg_getaddr())\n \n+\n class P2PLeakTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n@@ -96,7 +98,11 @@ def set_test_params(self):\n     def run_test(self):\n         no_version_bannode = self.nodes[0].add_p2p_connection(CNodeNoVersionBan(), send_version=False, wait_for_verack=False)\n         no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n-        no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle())\n+        no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n+\n+        # Wait until we got the verack in response to the version. Though, don't wait for the other node to receive the\n+        # verack, since we never sent one\n+        no_verack_idlenode.wait_for_verack()\n \n         wait_until(lambda: no_version_bannode.ever_connected, timeout=10, lock=mininode_lock)\n         wait_until(lambda: no_version_idlenode.ever_connected, timeout=10, lock=mininode_lock)"
      },
      {
        "sha": "c1235f8a6b46223f1e07953471600fac2eb0ebda",
        "filename": "test/functional/p2p_timeouts.py",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9064704524a0fd1fa9ea73eea45b07316ac3d1/test/functional/p2p_timeouts.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9064704524a0fd1fa9ea73eea45b07316ac3d1/test/functional/p2p_timeouts.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_timeouts.py?ref=fa9064704524a0fd1fa9ea73eea45b07316ac3d1",
        "patch": "@@ -27,11 +27,13 @@\n from test_framework.mininode import P2PInterface\n from test_framework.test_framework import BitcoinTestFramework\n \n+\n class TestP2PConn(P2PInterface):\n     def on_version(self, message):\n         # Don't send a verack in response\n         pass\n \n+\n class TimeoutsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n@@ -41,10 +43,14 @@ def set_test_params(self):\n \n     def run_test(self):\n         # Setup the p2p connections\n-        no_verack_node = self.nodes[0].add_p2p_connection(TestP2PConn())\n+        no_verack_node = self.nodes[0].add_p2p_connection(TestP2PConn(), wait_for_verack=False)\n         no_version_node = self.nodes[0].add_p2p_connection(TestP2PConn(), send_version=False, wait_for_verack=False)\n         no_send_node = self.nodes[0].add_p2p_connection(TestP2PConn(), send_version=False, wait_for_verack=False)\n \n+        # Wait until we got the verack in response to the version. Though, don't wait for the other node to receive the\n+        # verack, since we never sent one\n+        no_verack_node.wait_for_verack()\n+\n         sleep(1)\n \n         assert no_verack_node.is_connected\n@@ -81,5 +87,6 @@ def run_test(self):\n             assert not no_version_node.is_connected\n             assert not no_send_node.is_connected\n \n+\n if __name__ == '__main__':\n     TimeoutsTest().main()"
      },
      {
        "sha": "8260c917fe5986f67eb0da5e03deda6006cb518b",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9064704524a0fd1fa9ea73eea45b07316ac3d1/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9064704524a0fd1fa9ea73eea45b07316ac3d1/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=fa9064704524a0fd1fa9ea73eea45b07316ac3d1",
        "patch": "@@ -468,7 +468,19 @@ def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n         p2p_conn.peer_connect(**kwargs, net=self.chain)()\n         self.p2ps.append(p2p_conn)\n         if wait_for_verack:\n+            # Wait for the node to send us the version and verack\n             p2p_conn.wait_for_verack()\n+            # At this point we have sent our version message and received the version and verack, however the full node\n+            # has not yet received the verack from us (in reply to their version). So, the connection is not yet fully\n+            # established (fSuccessfullyConnected).\n+            #\n+            # This shouldn't lead to any issues when sending messages, since the verack will be in-flight before the\n+            # message we send. However, it might lead to races where we are expecting to receive a message. E.g. a\n+            # transaction that will be added to the mempool as soon as we return here.\n+            #\n+            # So syncing here is redundant when we only want to send a message, but the cost is low (a few milliseconds)\n+            # in comparision to the upside of making tests less fragile and unexpected intermittent errors less likely.\n+            p2p_conn.sync_with_ping()\n \n         return p2p_conn\n \n@@ -487,6 +499,7 @@ def disconnect_p2ps(self):\n             p.peer_disconnect()\n         del self.p2ps[:]\n \n+\n class TestNodeCLIAttr:\n     def __init__(self, cli, command):\n         self.cli = cli\n@@ -498,6 +511,7 @@ def __call__(self, *args, **kwargs):\n     def get_request(self, *args, **kwargs):\n         return lambda: self(*args, **kwargs)\n \n+\n def arg_to_cli(arg):\n     if isinstance(arg, bool):\n         return str(arg).lower()\n@@ -506,6 +520,7 @@ def arg_to_cli(arg):\n     else:\n         return str(arg)\n \n+\n class TestNodeCLI():\n     \"\"\"Interface to bitcoin-cli for an individual node\"\"\"\n "
      }
    ]
  },
  {
    "sha": "faf1d047313e71658fb31f6b94fdd5d37705ab85",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWYxZDA0NzMxM2U3MTY1OGZiMzFmNmI5NGZkZDVkMzc3MDVhYjg1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-03-31T19:36:46Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-03-31T21:03:24Z"
      },
      "message": "test: Remove redundant sync_with_ping after add_p2p_connection\n\nAlso replace the two-line (send_message + sync_with_ping) with the one-line send_and_ping",
      "tree": {
        "sha": "c44b9e207d76432b3f066cc16e7d2fa480213790",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c44b9e207d76432b3f066cc16e7d2fa480213790"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf1d047313e71658fb31f6b94fdd5d37705ab85",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjohQv/V6uIEvurxM5i9x7uk6poV/qV8mZGTByiZ9bqoxmG+v1r57LC79hkCtCE\nmCpxIpYgThoLW4UCC9rrpb6N0PVK9YIURlXzllnYHjChyfJJR/VIkR4gbzgS8S1q\nxBgAwPZUh4D05LMZK2QOGOTL6gv9yYXmPN6rsqSTAUS7bgarC+10Z7eUTe2RFEk9\n2jamDFwPwvRgx8Zn/0mA5/4/aSi2mMKCPOsM98uUgWWB5FEP8K1vbLLgH6iDOtHw\nz61FNlSDZBG8UYEU5tj5d4yZuG86iNcGmJHutCaryZc93f3qcn/GXEQZxSfWkkjN\nOiExHsiAkGtSFzjXNmloXdRIGAl3+7LMmNKvZldxR3r7rTOFTBUAOZxXtkg5clCx\nAdoaaki8KXjk7WK8trre/hcmF0fS/DANGBIJ9NKTN7ZaLd6RNfz4p8N+uggnFaaM\nRFBnOwlb3teQKRh1QfQ3yUs+EikrINAw5CvD88HS7fnD0B1jJ3C/UgvTPMeqtNoV\nDWxcgFOn\n=OsEc\n-----END PGP SIGNATURE-----",
        "payload": "tree c44b9e207d76432b3f066cc16e7d2fa480213790\nparent fa9064704524a0fd1fa9ea73eea45b07316ac3d1\nauthor MarcoFalke <falke.marco@gmail.com> 1585683406 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1585688604 -0400\n\ntest: Remove redundant sync_with_ping after add_p2p_connection\n\nAlso replace the two-line (send_message + sync_with_ping) with the one-line send_and_ping\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf1d047313e71658fb31f6b94fdd5d37705ab85",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf1d047313e71658fb31f6b94fdd5d37705ab85",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf1d047313e71658fb31f6b94fdd5d37705ab85/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa9064704524a0fd1fa9ea73eea45b07316ac3d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9064704524a0fd1fa9ea73eea45b07316ac3d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9064704524a0fd1fa9ea73eea45b07316ac3d1"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 3,
      "deletions": 7
    },
    "files": [
      {
        "sha": "28dd809ca56cdf1645c24a7ab670af6e1aac58d1",
        "filename": "test/functional/p2p_dos_header_tree.py",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf1d047313e71658fb31f6b94fdd5d37705ab85/test/functional/p2p_dos_header_tree.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf1d047313e71658fb31f6b94fdd5d37705ab85/test/functional/p2p_dos_header_tree.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_dos_header_tree.py?ref=faf1d047313e71658fb31f6b94fdd5d37705ab85",
        "patch": "@@ -47,8 +47,7 @@ def run_test(self):\n \n         self.log.info(\"Feed all non-fork headers, including and up to the first checkpoint\")\n         self.nodes[0].add_p2p_connection(P2PInterface())\n-        self.nodes[0].p2p.send_message(msg_headers(self.headers))\n-        self.nodes[0].p2p.sync_with_ping()\n+        self.nodes[0].p2p.send_and_ping(msg_headers(self.headers))\n         assert {\n             'height': 546,\n             'hash': '000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70',\n@@ -65,8 +64,7 @@ def run_test(self):\n         # On node 0 it succeeds because checkpoints are disabled\n         self.restart_node(0, extra_args=['-nocheckpoints'])\n         self.nodes[0].add_p2p_connection(P2PInterface())\n-        self.nodes[0].p2p.send_message(msg_headers(self.headers_fork))\n-        self.nodes[0].p2p.sync_with_ping()\n+        self.nodes[0].p2p.send_and_ping(msg_headers(self.headers_fork))\n         assert {\n             \"height\": 2,\n             \"hash\": \"00000000b0494bd6c3d5ff79c497cfce40831871cbf39b1bc28bd1dac817dc39\",\n@@ -76,8 +74,7 @@ def run_test(self):\n \n         # On node 1 it succeeds because no checkpoint has been reached yet by a chain tip\n         self.nodes[1].add_p2p_connection(P2PInterface())\n-        self.nodes[1].p2p.send_message(msg_headers(self.headers_fork))\n-        self.nodes[1].p2p.sync_with_ping()\n+        self.nodes[1].p2p.send_and_ping(msg_headers(self.headers_fork))\n         assert {\n             \"height\": 2,\n             \"hash\": \"00000000b0494bd6c3d5ff79c497cfce40831871cbf39b1bc28bd1dac817dc39\","
      },
      {
        "sha": "759f111e69b1ed295639c814eee1025b45367222",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf1d047313e71658fb31f6b94fdd5d37705ab85/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf1d047313e71658fb31f6b94fdd5d37705ab85/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=faf1d047313e71658fb31f6b94fdd5d37705ab85",
        "patch": "@@ -140,7 +140,6 @@ def run_test(self):\n \n         # Node is still up.\n         conn = node.add_p2p_connection(P2PDataStore())\n-        conn.sync_with_ping()\n \n     def test_magic_bytes(self):\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())"
      }
    ]
  }
]