MarcoFalke,2020-03-31 12:53:57,Would be nice to move forward with this. I am seeing about one ci failure each day because of this bug.,https://github.com/bitcoin/bitcoin/pull/18247#issuecomment-606608141,606608141,
jonatack,2020-03-31 21:18:49,"ACK faf1d04\n\nVerified that p2p_leaks and p2p_timeouts needed these changes and looked at other tests.",https://github.com/bitcoin/bitcoin/pull/18247#issuecomment-606881499,606881499,
jonatack,2020-03-06 12:09:07,"non-blocking suggestion (line wrap and content) here and p2p_timeouts.py::50:\n```\n        # Wait until we get the verack in response to the version. Do not wait\n        # for the other node to receive the verack, since we never sent one.\n```\n",https://github.com/bitcoin/bitcoin/pull/18247#discussion_r388868195,388868195,test/functional/p2p_leak.py
jonatack,2020-03-06 12:14:04,"It looks like this change would affect quite a few other functional tests that don't pass `wait_for_verack=False`. Is it a good idea to change it here rather than in p2p_blocksonly?\n\n\n",https://github.com/bitcoin/bitcoin/pull/18247#discussion_r388869967,388869967,test/functional/test_framework/test_node.py
MarcoFalke,2020-03-06 14:21:34,"Most terminal sizes are 120 by default, also most review tools as well as GitHub web. So my personal preference is 120. I think I will leave it as is for now.",https://github.com/bitcoin/bitcoin/pull/18247#discussion_r388928910,388928910,test/functional/p2p_leak.py
MarcoFalke,2020-03-06 14:24:11,"Yes, whenever we add a p2p connection in the tests we want the least amount of surprise and want to assume that the connection has been fully established when the function returns.\n\nOnly in adversarial tests do we need to make sure that the connection is not (or only partially) established. Do you see any other test that needs a partial connection?",https://github.com/bitcoin/bitcoin/pull/18247#discussion_r388930397,388930397,test/functional/test_framework/test_node.py
jonatack,2020-03-31 19:01:20,"There are some tests that now have a redundant `sync_with_ping()` immediately following an `add_p2p_connection()`, e.g. in p2p_invalid_messages.py::143\n\nand others that have a single operation between the two calls and which are probably being needlessly synced twice (or perhaps should not be synced until after the single operation), e.g. in 3 places in p2p_dos_header_tree.py\n",https://github.com/bitcoin/bitcoin/pull/18247#discussion_r401145106,401145106,test/functional/test_framework/test_node.py
MarcoFalke,2020-03-31 19:33:36,"I think this is fine, at worst slows down the test by a few milliseconds.\n\n> There are some tests that now have a redundant sync_with_ping() immediately following an add_p2p_connection(), e.g. in p2p_invalid_messages.py::143\n\nI fixed this instance in the latest commit, but couldn't find any other instances.\n\n> and others that have a single operation between the two calls and which are ",https://github.com/bitcoin/bitcoin/pull/18247#discussion_r401163638,401163638,test/functional/test_framework/test_node.py
jonatack,2020-03-31 19:51:59,"> Why are they needlessly being synced? \n\nUnless I am confused, these cases seem to be synced one additional time after this change:\n- Before: add connection / send / sync\n- After: add connection including sync by default / send / sync\n\nHelp me understand if that's not the case?",https://github.com/bitcoin/bitcoin/pull/18247#discussion_r401173756,401173756,test/functional/test_framework/test_node.py
MarcoFalke,2020-03-31 21:04:31,"Ok fine, in this case the sync is redundant, but I can't see a way to distinguish the redundant case from the non-redundant one. Even if we could, the cost of a few milliseconds is probably not worth it to optimize this, right?",https://github.com/bitcoin/bitcoin/pull/18247#discussion_r401214475,401214475,test/functional/test_framework/test_node.py
MarcoFalke,2020-03-31 21:05:19,Force pushed with additional doc to explain my reasoning,https://github.com/bitcoin/bitcoin/pull/18247#discussion_r401214838,401214838,test/functional/test_framework/test_node.py
jonatack,2020-03-31 21:15:13,I agree; thanks for the doc,https://github.com/bitcoin/bitcoin/pull/18247#discussion_r401219729,401219729,test/functional/test_framework/test_node.py
