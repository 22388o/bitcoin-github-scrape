jnewbery,2021-01-22 10:04:45,Marking as draft for now. I expect people will have **opinions**.,https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-765292529,765292529,
hebasto,2021-01-22 10:48:57,Concept ACK. And forbid refactoring pulls just to make lines shorter.,https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-765318270,765318270,
jnewbery,2021-01-22 12:10:13,"> The primary issue I experience as a reviewer is reformatting of lines, especially function signatures or function calls, to make lines shorter.\n\n@jonatack My take on this is that if I need to add an argument to a 230 char wide function declaration, then I'd much prefer to split that line then turn it into a 260 char wide function declaration. The alternative results in lines that just grow w",https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-765355346,765355346,
theStack,2021-01-22 13:51:18,"Concept ACK.\nThe long lines have been bothering me for quite some time and I think in the long-term following this guideline will increase code quality. Agree with hebasto though that refactor PRs with the sole goal of line-shortening should be discouraged. (On the other hand, I think many reasonable refactorings _will_ as a side-effect lead to shorter lines.)\n\nFrom a practical point of view",https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-765411143,765411143,
theStack,2021-01-22 15:22:01,"@jonatack: Hm, I see your point of view. Though it's very reviewers-centric and not taking into account potential new contributors which could also be turned off just by seeing those long lines. (And overly huge function/method bodies, but that's another topic...)\n\nI think in cases like #20788 where really lots of those line-breaks occur, the root of the problem is that stylistic changes and l",https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-765480088,765480088,
prusnak,2021-01-23 13:37:23,"You can enforce line lengths while still allowing exceptions to the rule via the following:\n\n``` c\n// clang-format off\nthis is a block where ...\n... very long lines ...\n... and other formatting exceptions ....\n... are allowed ....\n... but there always need to be ...\n... a very good reason for that\n// clang-format on\n```\n\nWe use this for Trezor and it's working perfectly. ",https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-766064387,766064387,
lontivero,2021-01-25 16:03:34,Concept ACK. It is cleaner and easier to compare in diffs.,https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-766921307,766921307,
michaelfolkson,2021-01-25 17:30:42,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-766981703,766981703,
amitiuttarwar,2021-01-25 21:05:24,"concept ACK, code is much easier to read when I can see it :) \n\nI'd personally prefer 120 characters, esp with some of our long function names, but its nbd and would rather aim for 100 than off-the-page long. ",https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-767112053,767112053,
practicalswift,2021-01-26 10:58:54,"Concept ACK: when it comes to degrees of freedom in code formatting less is more :)\n\nPersonally I'm a big fan of `black`, `clang-format`, `gofmt`, etc: computers have a comparative advantage when it comes to non-creative tasks :)",https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-767466913,767466913,
promag,2021-01-27 12:03:35,"Concept ACK, I think this notes what we currently try to do.\n\n> Concept ACK. And forbid refactoring pulls just to make lines shorter.\n\n@hebasto that's already noted:\n\n> Do not submit patches solely to modify the style of existing code.\n\n",https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-768240116,768240116,
laanwj,2021-01-27 16:43:06,"I'm fine with this, as long as it's meant as a review guideline for new code and not too zealously enforced. I wouldn't like to see e.g. PRs that just change line length all over the codebase.",https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-768415049,768415049,
glozow,2021-01-29 15:12:21,"Concept ACK, I believe documenting general preferences (which we already have) would reduce the amount of time spent on style when coding and reviewing. I think it'd be most effective to just point to a tool or script that we can use to do it automatically.",https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-769863216,769863216,
fanquake,2021-02-13 03:37:29,"ACK aa929abf8dc022e900755234c857541faeea8239 - this is basically just something to point too when a PR has unreasonably long lines for no particularly reason.\n\n> I'm fine with this, as long as it's meant as a review guideline for new code and not too zealously enforced. I wouldn't like to see e.g. PRs that just change line length all over the codebase.\n\nAgree. PRs opened just to shuffle co",https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-778556069,778556069,
practicalswift,2021-02-13 07:03:29,ACK aa929abf8dc022e900755234c857541faeea8239,https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-778574502,778574502,
jnewbery,2021-02-13 17:47:13,"This seems to have broad support, so I'm moving it out of draft.\n\nSeveral reviewers have highlighted that there shouldn't be PRs just to 'fix up' long lines. That's already covered further up in the developer notes:\n\n```\nDo not submit patches solely to modify the style of existing code.\n```",https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-778652137,778652137,
amitiuttarwar,2021-02-14 02:30:12,ACK aa929abf8dc022e900755234c857541faeea8239,https://github.com/bitcoin/bitcoin/pull/20986#issuecomment-778711098,778711098,
