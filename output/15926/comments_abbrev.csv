laanwj,2019-04-30 18:17:07,"Are you intending to use this in other places than logging?\nIf not, I'd prefer to keep bitcoin core specific code outside `tinyformat.h`.\nACK on reverting the style changes.",https://github.com/bitcoin/bitcoin/pull/15926#issuecomment-488058688,488058688,
MarcoFalke,2019-04-30 18:20:23,"Yes, the gui should probably use it for messages, so that at least the generic error is logged (as opposed to only ""A tfm error occured!"")",https://github.com/bitcoin/bitcoin/pull/15926#issuecomment-488059795,488059795,
DrahtBot,2019-05-09 14:54:40,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/15926#issuecomment-490938619,490938619,
MarcoFalke,2019-06-14 09:55:49,"We have a linter to check the number of arguments, so I guess this isn't much needed",https://github.com/bitcoin/bitcoin/pull/15926#issuecomment-502048711,502048711,
practicalswift,2019-05-01 06:50:30,"Add `noexcept` to make the ""no throw"" part of the contract and thus understandable also for the compiler :-)",https://github.com/bitcoin/bitcoin/pull/15926#discussion_r280014201,280014201,src/tinyformat.h
practicalswift,2019-05-01 07:11:10,"I suggest making `LogPrintf` `noexcept`, but before doing so note that the following call chain is triggered here (also before this PR):\n* `LogPrintStr` → `LogTimestampStr` → `FormatISO8601DateTime` → `strprintf`\n\nGenerally `strprintf` may throw `tinyformat::format_error`.\n\nIn the case of the call `FormatISO8601DateTime` I don't think that is possible since the format string is well form",https://github.com/bitcoin/bitcoin/pull/15926#discussion_r280015975,280015975,src/logging.h
MarcoFalke,2019-05-01 13:46:45,How can I (or the compiler) be sure that no other exceptions (e.g. `std::out_of_range`) are thrown?,https://github.com/bitcoin/bitcoin/pull/15926#discussion_r280075810,280075810,src/tinyformat.h
practicalswift,2019-05-02 16:20:36,"There is really no shortcut here AFAIK: reading + reasoning would be required :-)\n\nDo you see any places where e.g. `std::out_of_range` could be thrown that is reachable from `format`? Beyond the already handled `format_error`.\n\nThe contract of `tinyformat` is that `format_error` is the only exception thrown?",https://github.com/bitcoin/bitcoin/pull/15926#discussion_r280495908,280495908,src/tinyformat.h
sipa,2019-05-02 16:34:54,"I think the point of adding ""noexcept"" isn't so much because you know a function won't throw; it's that you know that exceptions thrown anyway can be regarded as fatal errors.",https://github.com/bitcoin/bitcoin/pull/15926#discussion_r280501345,280501345,src/tinyformat.h
practicalswift,2019-05-02 16:48:04,"Stroustrup and Sutter:\n\n> [E.12: Use noexcept when exiting a function because of a throw is impossible or unacceptable](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Re-noexcept)\n>\n> [F.6: If your function may not throw, declare it noexcept ](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-noexcept)\n\n`format_no_throw` seems like an ideal candidate for `no",https://github.com/bitcoin/bitcoin/pull/15926#discussion_r280506223,280506223,src/tinyformat.h
MarcoFalke,2019-05-02 17:59:53,"I see, so it is equivalent to `std::terminate`. I think I will leave that for later, as I am not sure that immediate termination is better than offering the gui or daemon to catch the exception",https://github.com/bitcoin/bitcoin/pull/15926#discussion_r280532933,280532933,src/tinyformat.h
practicalswift,2019-05-03 07:38:26,"I think it is unwise to use function naming (`format_no_throw`) which gives the caller the impression that the contract is that the function cannot throw if we're not willing to back that with a `noexcept` guarantee.\n\nI think we should either 1.) handle any non-fatal exception within `format_no_throw` and mark it `noexcept`, or 2.) remove the `_no_throw` suffix.",https://github.com/bitcoin/bitcoin/pull/15926#discussion_r280684124,280684124,src/tinyformat.h
promag,2019-06-09 10:52:13,Maybe add a comment like `This function wraps format() to return error messages instead of throwing format_error. All other format() exceptions are thrown away.`,https://github.com/bitcoin/bitcoin/pull/15926#discussion_r291833703,291833703,src/tinyformat.h
MarcoFalke,2019-06-10 07:03:38,Added a comment,https://github.com/bitcoin/bitcoin/pull/15926#discussion_r291900338,291900338,src/tinyformat.h
