[
  {
    "sha": "fa1bf40576baeb3494e3a889aa5fe7da7e3067e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTFiZjQwNTc2YmFlYjM0OTRlM2E4ODlhYTVmZTdkYTdlMzA2N2Uy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-30T17:59:34Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-05-14T13:07:07Z"
      },
      "message": "tinyformat: Undo style-fixes that should go upstream instead",
      "tree": {
        "sha": "3bc764eb41066affec6f41dd250034aba232e6ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3bc764eb41066affec6f41dd250034aba232e6ab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1bf40576baeb3494e3a889aa5fe7da7e3067e2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgSUwwApmyR7/HdD5tGNf+1Qd1NHS1Sr6FKsxmo2HTLPr7iU2+5FM+WPkI7MSwu\nAzc6ctQaPtgpgYr+x1nJ/8HcOd6/PrXQxsSjyvQXuW6/0ZmWoK2ghc48Rw8IIfE5\naUi1seexVxMtdc88xksu5QVr7DNaQsuDJp4TG8OOD5+naUUbNFOzDjPeg94xaQ7d\naXJ42gJ0kFlJPYT9pknqDzTlJmb+zyw2cdIwpNSbj3jCybZF/phz25vnMKVIRvmu\n7aJcF84Vwbz/ej//4+jzEK3fJBKQq/7yoLDyEcvvuwUJJBKKSPcBn05wOuPiFz23\n8CTaK6e0X5/TrjCACbSZo+Rjbt6JIuBQUvkdIKiQ4wi94yep7bbJY1rxjN+O0N5P\nY6D+0vzYMP36OKyQd82YC0HANSt+BtJ3X2EjzDWmSY+k2jz/Wuu9wR8MM7fYdIC0\nxkipqXrtVIo61oNDzGh5kdbML5UQFwPPesBa0CC8z06+bm0q6oQMY0C7Hn5qp21+\nk9V2HwWl\n=Ozjw\n-----END PGP SIGNATURE-----",
        "payload": "tree 3bc764eb41066affec6f41dd250034aba232e6ab\nparent 6f4ba6492a1265688acb2b95835388d39c918573\nauthor MarcoFalke <falke.marco@gmail.com> 1556647174 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1557839227 -0400\n\ntinyformat: Undo style-fixes that should go upstream instead\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1bf40576baeb3494e3a889aa5fe7da7e3067e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1bf40576baeb3494e3a889aa5fe7da7e3067e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1bf40576baeb3494e3a889aa5fe7da7e3067e2/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6f4ba6492a1265688acb2b95835388d39c918573",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f4ba6492a1265688acb2b95835388d39c918573",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f4ba6492a1265688acb2b95835388d39c918573"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 13,
      "deletions": 10
    },
    "files": [
      {
        "sha": "b48e7891530e748c75b9bc9f205c554098cfd69f",
        "filename": "src/tinyformat.h",
        "status": "modified",
        "additions": 13,
        "deletions": 10,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1bf40576baeb3494e3a889aa5fe7da7e3067e2/src/tinyformat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1bf40576baeb3494e3a889aa5fe7da7e3067e2/src/tinyformat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/tinyformat.h?ref=fa1bf40576baeb3494e3a889aa5fe7da7e3067e2",
        "patch": "@@ -155,7 +155,7 @@ namespace tfm = tinyformat;\n #endif\n \n #ifdef __APPLE__\n-// Workaround OSX linker warning: Xcode uses different default symbol\n+// Workaround OSX linker warning: xcode uses different default symbol\n // visibilities for static libs vs executables (see issue #25)\n #   define TINYFORMAT_HIDDEN __attribute__((visibility(\"hidden\")))\n #else\n@@ -496,13 +496,13 @@ class FormatArg\n {\n     public:\n         FormatArg()\n-             : m_value(nullptr),\n-             m_formatImpl(nullptr),\n-             m_toIntImpl(nullptr)\n-         { }\n+            : m_value(NULL),\n+            m_formatImpl(NULL),\n+            m_toIntImpl(NULL)\n+        { }\n \n         template<typename T>\n-        explicit FormatArg(const T& value)\n+        FormatArg(const T& value)\n             : m_value(static_cast<const void*>(&value)),\n             m_formatImpl(&formatImpl<T>),\n             m_toIntImpl(&toIntImpl<T>)\n@@ -592,7 +592,7 @@ inline const char* printFormatStringLiteral(std::ostream& out, const char* fmt)\n // Formatting options which can't be natively represented using the ostream\n // state are returned in spacePadPositive (for space padded positive numbers)\n // and ntrunc (for truncating conversions).  argIndex is incremented if\n-// necessary to pull out variable width and precision.  The function returns a\n+// necessary to pull out variable width and precision .  The function returns a\n // pointer to the character after the end of the current format spec.\n inline const char* streamStateFromFormat(std::ostream& out, bool& spacePadPositive,\n                                          int& ntrunc, const char* fmtStart,\n@@ -879,7 +879,7 @@ class FormatListN : public FormatList\n     public:\n #ifdef TINYFORMAT_USE_VARIADIC_TEMPLATES\n         template<typename... Args>\n-        explicit FormatListN(const Args&... args)\n+        FormatListN(const Args&... args)\n             : FormatList(&m_formatterStore[0], N),\n             m_formatterStore { FormatArg(args)... }\n         { static_assert(sizeof...(args) == N, \"Number of args must be N\"); }\n@@ -888,7 +888,7 @@ class FormatListN : public FormatList\n #       define TINYFORMAT_MAKE_FORMATLIST_CONSTRUCTOR(n)       \\\n                                                                \\\n         template<TINYFORMAT_ARGTYPES(n)>                       \\\n-        explicit FormatListN(TINYFORMAT_VARARGS(n))            \\\n+        FormatListN(TINYFORMAT_VARARGS(n))                     \\\n             : FormatList(&m_formatterStore[0], n)              \\\n         { assert(n == N); init(0, TINYFORMAT_PASSARGS(n)); }   \\\n                                                                \\\n@@ -993,6 +993,7 @@ void printfln(const char* fmt, const Args&... args)\n     std::cout << '\\n';\n }\n \n+\n #else // C++98 version\n \n inline void format(std::ostream& out, const char* fmt)\n@@ -1052,7 +1053,9 @@ TINYFORMAT_FOREACH_ARGNUM(TINYFORMAT_MAKE_FORMAT_FUNCS)\n \n #endif\n \n-// Added for Bitcoin Core\n+// Bitcoin Core specific patches\n+// Underlying tinyformat is up to date as of upstream commit\n+// https://raw.githubusercontent.com/c42f/tinyformat/689695cf58700e6defe3741829564cd682d5ae57/tinyformat.h\n template<typename... Args>\n std::string format(const std::string &fmt, const Args&... args)\n {"
      }
    ]
  },
  {
    "sha": "fa7e309ca13b7540238601e90b19a2b625013121",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTdlMzA5Y2ExM2I3NTQwMjM4NjAxZTkwYjE5YTJiNjI1MDEzMTIx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-30T17:58:41Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-10T07:03:02Z"
      },
      "message": "tinyformat: Add format_no_throw",
      "tree": {
        "sha": "011ac945b5046b50690ecd28ad53c5282cd030ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/011ac945b5046b50690ecd28ad53c5282cd030ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7e309ca13b7540238601e90b19a2b625013121",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgPHQwAoneB/fgEj+I9+pJOc9RdOVulsZnwr+uLBCEhjXmzwDnxZhmznGL7vY2F\nZh5UVrxERKq49dn+wnlUR9ttt8I82Z59vaSr731AahmSHGryl/JCtbLirpqHmvXA\nliikKTEL/BIdWiRzcfUBNZgQzczegCMaJ3XgHyuWl7pr6WqrMPfn6jSiR1ndRWD0\nMMhRfLVfkNYIPkAegBLrabVA1X7kU/kKz/W0PpzTcRBhPOHlfcxdeIbx9FTQuHqL\nGE96YeETXmgwdh+F5xblvjs3nZ4Fs8sCLVnIkvUQBbKIB+6yHb4P1WPO6wgAdCaz\nh7+IiUNqTKYwYHSRC4UGoSOpBdqCgBezDPSNvCV2kde1jRPAUAU9QX2CeHmrySjq\nRBS3jQ4PuedrkJKcpMFCbuLxESswCmSxiwDNltsPH7HQftA5q9mw42AraKEezgl0\nXvnt9Hb7LXjNZN3j6Fb5Pn4i+L4KnA6Lh1Am5f6qB40FmxoFe+AK1LphsJ69qbV8\nL7qniO8x\n=4PiE\n-----END PGP SIGNATURE-----",
        "payload": "tree 011ac945b5046b50690ecd28ad53c5282cd030ed\nparent fa1bf40576baeb3494e3a889aa5fe7da7e3067e2\nauthor MarcoFalke <falke.marco@gmail.com> 1556647121 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1560150182 +0200\n\ntinyformat: Add format_no_throw\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7e309ca13b7540238601e90b19a2b625013121",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7e309ca13b7540238601e90b19a2b625013121",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7e309ca13b7540238601e90b19a2b625013121/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa1bf40576baeb3494e3a889aa5fe7da7e3067e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1bf40576baeb3494e3a889aa5fe7da7e3067e2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1bf40576baeb3494e3a889aa5fe7da7e3067e2"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 42,
      "deletions": 15
    },
    "files": [
      {
        "sha": "72483cf57ecd54016ffb4991ccc95151e827e91b",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7e309ca13b7540238601e90b19a2b625013121/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7e309ca13b7540238601e90b19a2b625013121/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=fa7e309ca13b7540238601e90b19a2b625013121",
        "patch": "@@ -135,14 +135,7 @@ template <typename... Args>\n static inline void LogPrintf(const char* fmt, const Args&... args)\n {\n     if (LogInstance().Enabled()) {\n-        std::string log_msg;\n-        try {\n-            log_msg = tfm::format(fmt, args...);\n-        } catch (tinyformat::format_error& fmterr) {\n-            /* Original format string will have newline so don't add one here */\n-            log_msg = \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting log message: \" + fmt;\n-        }\n-        LogInstance().LogPrintStr(log_msg);\n+        LogInstance().LogPrintStr(tfm::format_no_throw(fmt, args...));\n     }\n }\n "
      },
      {
        "sha": "ac401b8837f7b17eccfb4cce85e2e268e0f06e0d",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 2,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7e309ca13b7540238601e90b19a2b625013121/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7e309ca13b7540238601e90b19a2b625013121/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=fa7e309ca13b7540238601e90b19a2b625013121",
        "patch": "@@ -7,10 +7,10 @@\n #include <clientversion.h>\n #include <primitives/transaction.h>\n #include <sync.h>\n+#include <test/setup_common.h>\n #include <test/util.h>\n-#include <util/strencodings.h>\n #include <util/moneystr.h>\n-#include <test/setup_common.h>\n+#include <util/strencodings.h>\n \n #include <stdint.h>\n #include <vector>\n@@ -121,6 +121,27 @@ BOOST_AUTO_TEST_CASE(util_HexStr)\n     );\n }\n \n+BOOST_AUTO_TEST_CASE(tinyformat_throw)\n+{\n+    const std::string fmt{\"%s\"};\n+    for (const bool use_c_str : {true, false}) {\n+        // format_no_throw does not throw\n+        BOOST_CHECK_EQUAL(use_c_str ?\n+                              tfm::format_no_throw(fmt.c_str(), 1, 2) :\n+                              tfm::format_no_throw(fmt, 1, 2),\n+            \"Error \\\"tinyformat: Not enough conversion specifiers in format string\\\" while formatting message: %s\");\n+\n+        // format might throw\n+        try {\n+            use_c_str ?\n+                tfm::format(fmt.c_str(), 1, 2) :\n+                tfm::format(fmt, 1, 2);\n+            BOOST_REQUIRE(false);\n+        } catch (const tfm::format_error& e) {\n+            BOOST_CHECK_EQUAL(std::string(e.what()), \"tinyformat: Not enough conversion specifiers in format string\");\n+        }\n+    }\n+}\n \n BOOST_AUTO_TEST_CASE(util_FormatISO8601DateTime)\n {"
      },
      {
        "sha": "b0d528f1483431e0f07b6064c84cd1eaab118c88",
        "filename": "src/tinyformat.h",
        "status": "modified",
        "additions": 18,
        "deletions": 5,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7e309ca13b7540238601e90b19a2b625013121/src/tinyformat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7e309ca13b7540238601e90b19a2b625013121/src/tinyformat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/tinyformat.h?ref=fa7e309ca13b7540238601e90b19a2b625013121",
        "patch": "@@ -1056,12 +1056,25 @@ TINYFORMAT_FOREACH_ARGNUM(TINYFORMAT_MAKE_FORMAT_FUNCS)\n // Bitcoin Core specific patches\n // Underlying tinyformat is up to date as of upstream commit\n // https://raw.githubusercontent.com/c42f/tinyformat/689695cf58700e6defe3741829564cd682d5ae57/tinyformat.h\n-template<typename... Args>\n-std::string format(const std::string &fmt, const Args&... args)\n+template <typename... Args>\n+std::string format(const std::string& fmt, const Args&... args)\n {\n-    std::ostringstream oss;\n-    format(oss, fmt.c_str(), args...);\n-    return oss.str();\n+    return format(fmt.c_str(), args...);\n+}\n+\n+/**\n+ * Bitcoin Core specific\n+ * Wraps format() to return an error string instead of throwing tinyformat::format_error.\n+ */\n+template <typename... Args>\n+std::string format_no_throw(const std::string& fmt, const Args&... args)\n+{\n+    try {\n+        return format(fmt, args...);\n+    } catch (const format_error& fmterr) {\n+        /* Original format string will have newline so don't add one here */\n+        return \"Error \\\"\" + std::string(fmterr.what()) + \"\\\" while formatting message: \" + fmt;\n+    }\n }\n \n } // namespace tinyformat"
      }
    ]
  }
]