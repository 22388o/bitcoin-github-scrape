[
  {
    "sha": "abac4367607d8d2b628e4db6a9663c960bacdacc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYmFjNDM2NzYwN2Q4ZDJiNjI4ZTRkYjZhOTY2M2M5NjBiYWNkYWNj",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-06-15T22:08:06Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-09-06T09:59:01Z"
      },
      "message": "wallet: Avoid multiple BerkeleyBatch in DelAddressBook",
      "tree": {
        "sha": "5af1680fdd3c639c5127c77f1b70cd59e3dd92a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5af1680fdd3c639c5127c77f1b70cd59e3dd92a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/abac4367607d8d2b628e4db6a9663c960bacdacc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abac4367607d8d2b628e4db6a9663c960bacdacc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/abac4367607d8d2b628e4db6a9663c960bacdacc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abac4367607d8d2b628e4db6a9663c960bacdacc/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "03689317021a72431762c1974530f2a980a7fffa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03689317021a72431762c1974530f2a980a7fffa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/03689317021a72431762c1974530f2a980a7fffa"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "25854f9785eb5a48f14ad9e3baebd66924526f55",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abac4367607d8d2b628e4db6a9663c960bacdacc/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abac4367607d8d2b628e4db6a9663c960bacdacc/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=abac4367607d8d2b628e4db6a9663c960bacdacc",
        "patch": "@@ -2346,6 +2346,7 @@ std::map<CTxDestination, std::vector<COutput>> CWallet::ListCoins() const\n \n const CTxOut& CWallet::FindNonChangeParentOutput(const CTransaction& tx, int output) const\n {\n+    AssertLockHeld(cs_wallet);\n     const CTransaction* ptx = &tx;\n     int n = output;\n     while (IsChange(ptx->vout[n]) && ptx->vin.size() > 0) {\n@@ -3264,6 +3265,7 @@ bool CWallet::SetAddressBook(const CTxDestination& address, const std::string& s\n bool CWallet::DelAddressBook(const CTxDestination& address)\n {\n     bool is_mine;\n+    WalletBatch batch(*database);\n     {\n         LOCK(cs_wallet);\n         // If we want to delete receiving addresses, we need to take care that DestData \"used\" (and possibly newer DestData) gets preserved (and the \"deleted\" address transformed into a change entry instead of actually being deleted)\n@@ -3277,16 +3279,16 @@ bool CWallet::DelAddressBook(const CTxDestination& address)\n         std::string strAddress = EncodeDestination(address);\n         for (const std::pair<const std::string, std::string> &item : m_address_book[address].destdata)\n         {\n-            WalletBatch(*database).EraseDestData(strAddress, item.first);\n+            batch.EraseDestData(strAddress, item.first);\n         }\n         m_address_book.erase(address);\n         is_mine = IsMine(address) != ISMINE_NO;\n     }\n \n     NotifyAddressBookChanged(this, address, \"\", is_mine, \"\", CT_DELETED);\n \n-    WalletBatch(*database).ErasePurpose(EncodeDestination(address));\n-    return WalletBatch(*database).EraseName(EncodeDestination(address));\n+    batch.ErasePurpose(EncodeDestination(address));\n+    return batch.EraseName(EncodeDestination(address));\n }\n \n size_t CWallet::KeypoolCountExternalKeys() const"
      }
    ]
  }
]