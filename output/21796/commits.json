[
  {
    "sha": "faad68fcd440e77e61a5a1560471417dd984e390",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWFkNjhmY2Q0NDBlNzdlNjFhNWExNTYwNDcxNDE3ZGQ5ODRlMzkw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-28T12:01:37Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-12T08:47:35Z"
      },
      "message": "index: Avoid async shutdown on init error",
      "tree": {
        "sha": "0e6783601ce151ae81ff78ae7fe2a32768862d9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e6783601ce151ae81ff78ae7fe2a32768862d9e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faad68fcd440e77e61a5a1560471417dd984e390",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj0eAv/QbCNBMgaLjuxZzlNeS8PXtFarLGi8Xa3zVNieRHZvmt6aVQVg2yXIVne\nzE5TOylINzjnCUY1sLADhJmGI0M9nrx+VV1I0AMfnZWaZ9ORxZc59yvUFsPQdIWq\nYNYxn/+3N4Kiu8yC0B7Kxx+TgBxKmY8O3/llCP9XMUFQHWenrloAie6H61IRrkhE\nRc8bjs4Aq3Vd4vhAhoxH0plNDIlS/JobkI5UmLlmoKDZLW6me1K+25sVudhMBlY9\nRVTEJpj4PpJ7NEE7D4w5kdkmRbHozGpJtnW5JQbr2lTTMexq3V46sGKg64c3l0ot\nrso0o/Cl98Z/Vf5YzFOWVxYmr7eNNzqQ+u/qz66Yvh9v0XtpMw49LCUizecdb1wc\n6526cB5/pmu6p0LR5R4LOf/B/eetV9sIaRpGUINgtBvaWGprwdwR6A2DGCQSUP/2\nPu8jGqQZqPICO4t6G/eUKwPEqf0Xs1S7wX2kOEnZTM3ZsBRi8xRljstBXTZ5vgdj\n5Sm7InP4\n=sbqr\n-----END PGP SIGNATURE-----",
        "payload": "tree 0e6783601ce151ae81ff78ae7fe2a32768862d9e\nparent 2e30e328a7a46e0405664fd0cb31d971171f71d1\nauthor MarcoFalke <falke.marco@gmail.com> 1619611297 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1620809255 +0200\n\nindex: Avoid async shutdown on init error\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faad68fcd440e77e61a5a1560471417dd984e390",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faad68fcd440e77e61a5a1560471417dd984e390",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faad68fcd440e77e61a5a1560471417dd984e390/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2e30e328a7a46e0405664fd0cb31d971171f71d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e30e328a7a46e0405664fd0cb31d971171f71d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2e30e328a7a46e0405664fd0cb31d971171f71d1"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 23,
      "deletions": 17
    },
    "files": [
      {
        "sha": "4079fc456947c45d016d8c8413c32955c4d8d362",
        "filename": "src/index/base.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad68fcd440e77e61a5a1560471417dd984e390/src/index/base.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad68fcd440e77e61a5a1560471417dd984e390/src/index/base.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.cpp?ref=faad68fcd440e77e61a5a1560471417dd984e390",
        "patch": "@@ -98,9 +98,7 @@ bool BaseIndex::Init()\n             }\n         }\n         if (prune_violation) {\n-            // throw error and graceful shutdown if we can't build the index\n-            FatalError(\"%s: %s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\", __func__, GetName());\n-            return false;\n+            return InitError(strprintf(Untranslated(\"%s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"), GetName()));\n         }\n     }\n     return true;\n@@ -339,17 +337,17 @@ void BaseIndex::Interrupt()\n     m_interrupt();\n }\n \n-void BaseIndex::Start()\n+bool BaseIndex::Start()\n {\n     // Need to register this ValidationInterface before running Init(), so that\n     // callbacks are not missed if Init sets m_synced to true.\n     RegisterValidationInterface(this);\n     if (!Init()) {\n-        FatalError(\"%s: %s failed to initialize\", __func__, GetName());\n-        return;\n+        return false;\n     }\n \n     m_thread_sync = std::thread(&util::TraceThread, GetName(), [this] { ThreadSync(); });\n+    return true;\n }\n \n void BaseIndex::Stop()"
      },
      {
        "sha": "59eefab29ef19f54de24cdc35befd6756a6b76d5",
        "filename": "src/index/base.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad68fcd440e77e61a5a1560471417dd984e390/src/index/base.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad68fcd440e77e61a5a1560471417dd984e390/src/index/base.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.h?ref=faad68fcd440e77e61a5a1560471417dd984e390",
        "patch": "@@ -84,7 +84,7 @@ class BaseIndex : public CValidationInterface\n     const CBlockIndex* CurrentIndex() { return m_best_block_index.load(); };\n \n     /// Initialize internal state from the database and block index.\n-    virtual bool Init();\n+    [[nodiscard]] virtual bool Init();\n \n     /// Write update index entries for a newly connected block.\n     virtual bool WriteBlock(const CBlock& block, const CBlockIndex* pindex) { return true; }\n@@ -117,7 +117,7 @@ class BaseIndex : public CValidationInterface\n \n     /// Start initializes the sync state and registers the instance as a\n     /// ValidationInterface so that it stays in sync with blockchain updates.\n-    void Start();\n+    [[nodiscard]] bool Start();\n \n     /// Stops the instance from staying in sync with blockchain updates.\n     void Stop();"
      },
      {
        "sha": "89e152e56fb85ba74e867db63538c1219f351e0f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 3,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad68fcd440e77e61a5a1560471417dd984e390/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad68fcd440e77e61a5a1560471417dd984e390/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=faad68fcd440e77e61a5a1560471417dd984e390",
        "patch": "@@ -1550,17 +1550,23 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     // ********************************************************* Step 8: start indexers\n     if (args.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n         g_txindex = std::make_unique<TxIndex>(nTxIndexCache, false, fReindex);\n-        g_txindex->Start();\n+        if (!g_txindex->Start()) {\n+            return false;\n+        }\n     }\n \n     for (const auto& filter_type : g_enabled_filter_types) {\n         InitBlockFilterIndex(filter_type, filter_index_cache, false, fReindex);\n-        GetBlockFilterIndex(filter_type)->Start();\n+        if (!GetBlockFilterIndex(filter_type)->Start()) {\n+            return false;\n+        }\n     }\n \n     if (args.GetBoolArg(\"-coinstatsindex\", DEFAULT_COINSTATSINDEX)) {\n         g_coin_stats_index = std::make_unique<CoinStatsIndex>(/* cache size */ 0, false, fReindex);\n-        g_coin_stats_index->Start();\n+        if (!g_coin_stats_index->Start()) {\n+            return false;\n+        }\n     }\n \n     // ********************************************************* Step 9: load wallet"
      },
      {
        "sha": "1cb1c002f4fa806d7086925cb1c3f1167507775b",
        "filename": "src/test/blockfilter_index_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad68fcd440e77e61a5a1560471417dd984e390/src/test/blockfilter_index_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad68fcd440e77e61a5a1560471417dd984e390/src/test/blockfilter_index_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_index_tests.cpp?ref=faad68fcd440e77e61a5a1560471417dd984e390",
        "patch": "@@ -131,7 +131,7 @@ BOOST_FIXTURE_TEST_CASE(blockfilter_index_initial_sync, BuildChainTestingSetup)\n     // BlockUntilSyncedToCurrentChain should return false before index is started.\n     BOOST_CHECK(!filter_index.BlockUntilSyncedToCurrentChain());\n \n-    filter_index.Start();\n+    BOOST_REQUIRE(filter_index.Start());\n \n     // Allow filter index to catch up with the block index.\n     constexpr int64_t timeout_ms = 10 * 1000;"
      },
      {
        "sha": "bf7a80ae5cdc78b47ab5f2103a84b7953d60cb8c",
        "filename": "src/test/coinstatsindex_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad68fcd440e77e61a5a1560471417dd984e390/src/test/coinstatsindex_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad68fcd440e77e61a5a1560471417dd984e390/src/test/coinstatsindex_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/coinstatsindex_tests.cpp?ref=faad68fcd440e77e61a5a1560471417dd984e390",
        "patch": "@@ -32,7 +32,7 @@ BOOST_FIXTURE_TEST_CASE(coinstatsindex_initial_sync, TestChain100Setup)\n     // is started.\n     BOOST_CHECK(!coin_stats_index.BlockUntilSyncedToCurrentChain());\n \n-    coin_stats_index.Start();\n+    BOOST_REQUIRE(coin_stats_index.Start());\n \n     // Allow the CoinStatsIndex to catch up with the block index that is syncing\n     // in a background thread."
      },
      {
        "sha": "082655d811f4d377b5fb66bbd75ca75469fbea5b",
        "filename": "src/test/txindex_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad68fcd440e77e61a5a1560471417dd984e390/src/test/txindex_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad68fcd440e77e61a5a1560471417dd984e390/src/test/txindex_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txindex_tests.cpp?ref=faad68fcd440e77e61a5a1560471417dd984e390",
        "patch": "@@ -27,7 +27,7 @@ BOOST_FIXTURE_TEST_CASE(txindex_initial_sync, TestChain100Setup)\n     // BlockUntilSyncedToCurrentChain should return false before txindex is started.\n     BOOST_CHECK(!txindex.BlockUntilSyncedToCurrentChain());\n \n-    txindex.Start();\n+    BOOST_REQUIRE(txindex.Start());\n \n     // Allow tx index to catch up with the block index.\n     constexpr int64_t timeout_ms = 10 * 1000;"
      },
      {
        "sha": "28d8f2fbbc986089baf513ea66f675634b9f3455",
        "filename": "test/functional/feature_blockfilterindex_prune.py",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faad68fcd440e77e61a5a1560471417dd984e390/test/functional/feature_blockfilterindex_prune.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faad68fcd440e77e61a5a1560471417dd984e390/test/functional/feature_blockfilterindex_prune.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_blockfilterindex_prune.py?ref=faad68fcd440e77e61a5a1560471417dd984e390",
        "patch": "@@ -54,11 +54,13 @@ def run_test(self):\n         self.stop_node(0)\n \n         self.log.info(\"make sure we get an init error when starting the node again with block filters\")\n-        with self.nodes[0].assert_debug_log([\"basic block filter index best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"]):\n-            self.nodes[0].assert_start_raises_init_error(extra_args=[\"-fastprune\", \"-prune=1\", \"-blockfilterindex=1\"])\n+        self.nodes[0].assert_start_raises_init_error(\n+            extra_args=[\"-fastprune\", \"-prune=1\", \"-blockfilterindex=1\"],\n+            expected_msg=\"Error: basic block filter index best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\",\n+        )\n \n         self.log.info(\"make sure the node starts again with the -reindex arg\")\n-        self.start_node(0, extra_args = [\"-fastprune\", \"-prune=1\", \"-blockfilterindex\", \"-reindex\"])\n+        self.start_node(0, extra_args=[\"-fastprune\", \"-prune=1\", \"-blockfilterindex\", \"-reindex\"])\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]