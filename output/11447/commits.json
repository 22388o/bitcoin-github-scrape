[
  {
    "sha": "9e8aae31c103e1d76365c34ce1fe1dd68e93912b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZThhYWUzMWMxMDNlMWQ3NjM2NWMzNGNlMWZlMWRkNjhlOTM5MTJi",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-08-09T08:24:15Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T16:15:46Z"
      },
      "message": "[wallet] Close DB on error.\n\nGithub-Pull: #11017\nRebased-From: 03bc719a85cb4928cb4b43d0bc4142f72cb01b23",
      "tree": {
        "sha": "af144ee78e4268ed975ace9a411c30ab5578100d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af144ee78e4268ed975ace9a411c30ab5578100d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e8aae31c103e1d76365c34ce1fe1dd68e93912b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e8aae31c103e1d76365c34ce1fe1dd68e93912b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e8aae31c103e1d76365c34ce1fe1dd68e93912b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e8aae31c103e1d76365c34ce1fe1dd68e93912b/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb7b5293844ea6adc5dcf5ad0a0c5890b4495939",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb7b5293844ea6adc5dcf5ad0a0c5890b4495939",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb7b5293844ea6adc5dcf5ad0a0c5890b4495939"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "d2fe4866fae36743e521b8db773e328ef86d12b3",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e8aae31c103e1d76365c34ce1fe1dd68e93912b/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e8aae31c103e1d76365c34ce1fe1dd68e93912b/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=9e8aae31c103e1d76365c34ce1fe1dd68e93912b",
        "patch": "@@ -101,8 +101,10 @@ bool CDBEnv::Open(const fs::path& pathIn)\n                              DB_RECOVER |\n                              nEnvFlags,\n                          S_IRUSR | S_IWUSR);\n-    if (ret != 0)\n+    if (ret != 0) {\n+        dbenv->close(0);\n         return error(\"CDBEnv::Open: Error %d opening database environment: %s\\n\", ret, DbEnv::strerror(ret));\n+    }\n \n     fDbEnvInit = true;\n     fMockDb = false;\n@@ -196,9 +198,9 @@ bool CDB::Recover(const std::string& filename, void *callbackDataIn, bool (*reco\n                             DB_BTREE,           // Database type\n                             DB_CREATE,          // Flags\n                             0);\n-    if (ret > 0)\n-    {\n+    if (ret > 0) {\n         LogPrintf(\"Cannot create database file %s\\n\", filename);\n+        pdbCopy->close(0);\n         return false;\n     }\n \n@@ -536,8 +538,10 @@ bool CDB::Rewrite(CWalletDBWrapper& dbw, const char* pszSkip)\n                         env->CloseDb(strFile);\n                         if (pdbCopy->close(0))\n                             fSuccess = false;\n-                        delete pdbCopy;\n+                    } else {\n+                        pdbCopy->close(0);\n                     }\n+                    delete pdbCopy;\n                 }\n                 if (fSuccess) {\n                     Db dbA(env->dbenv, 0);"
      }
    ]
  },
  {
    "sha": "50bd3f626d7ce35d52543b88a2e512074f9df134",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MGJkM2Y2MjZkN2NlMzVkNTI1NDNiODhhMmU1MTIwNzRmOWRmMTM0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-30T21:36:33Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T16:19:35Z"
      },
      "message": "Avoid returning a BIP9Stats object with uninitialized values\n\nUninitialized data potentially used in `rpc/blockchain.cpp`:\n\n```\nstatic UniValue BIP9SoftForkDesc(const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n{\n    ...\n    const ThresholdState thresholdState = VersionBitsTipState(consensusParams, id);\n    ...\n    if (THRESHOLD_STARTED == thresholdState)\n    {\n        UniValue statsUV(UniValue::VOBJ);\n        BIP9Stats statsStruct = VersionBitsTipStatistics(consensusParams, id);\n        statsUV.push_back(Pair(\"period\", statsStruct.period));\n        statsUV.push_back(Pair(\"threshold\", statsStruct.threshold));\n        statsUV.push_back(Pair(\"elapsed\", statsStruct.elapsed));\n        statsUV.push_back(Pair(\"count\", statsStruct.count));\n        statsUV.push_back(Pair(\"possible\", statsStruct.possible));\n        rv.push_back(Pair(\"statistics\", statsUV));\n    }\n    ...\n    return rv;\n}\n```\n\nGithub-Pull: #10957\nRebased-From: 3eb53b867153c957529484b5338d27e69de027c1",
      "tree": {
        "sha": "0d72d3ba11f107b39578ddc48c42e3b47800c0e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d72d3ba11f107b39578ddc48c42e3b47800c0e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50bd3f626d7ce35d52543b88a2e512074f9df134",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50bd3f626d7ce35d52543b88a2e512074f9df134",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50bd3f626d7ce35d52543b88a2e512074f9df134",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50bd3f626d7ce35d52543b88a2e512074f9df134/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e8aae31c103e1d76365c34ce1fe1dd68e93912b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e8aae31c103e1d76365c34ce1fe1dd68e93912b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e8aae31c103e1d76365c34ce1fe1dd68e93912b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "59588023ad77793fdab28c8371ece94062a3804b",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50bd3f626d7ce35d52543b88a2e512074f9df134/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50bd3f626d7ce35d52543b88a2e512074f9df134/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=50bd3f626d7ce35d52543b88a2e512074f9df134",
        "patch": "@@ -107,7 +107,7 @@ ThresholdState AbstractThresholdConditionChecker::GetStateFor(const CBlockIndex*\n // return the numerical statistics of blocks signalling the specified BIP9 condition in this current period\n BIP9Stats AbstractThresholdConditionChecker::GetStateStatisticsFor(const CBlockIndex* pindex, const Consensus::Params& params) const\n {\n-    BIP9Stats stats;\n+    BIP9Stats stats = {};\n \n     stats.period = Period(params);\n     stats.threshold = Threshold(params);"
      }
    ]
  },
  {
    "sha": "b278a43646c8fb331a1b830b09a60ec2544dd6b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjc4YTQzNjQ2YzhmYjMzMWExYjgzMGIwOWE2MGVjMjU0NGRkNmI2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-08-25T10:39:30Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T16:34:30Z"
      },
      "message": "rpc: Write authcookie atomically\n\nUse POSIX rename atomicity at the `bitcoind` side to create a working\ncookie atomically:\n\n- Write `.cookie.tmp`, close file\n- Rename `.cookie.tmp` to `.cookie`\n\nThis avoids clients reading invalid/partial cookies as in #11129.\n\nGithub-Pull: #11131\nRebased-From: 82dd7195e1fb943f9cd45a48188f9678219c0206",
      "tree": {
        "sha": "829882527cd8fb64d62bc9ec2e745aaf1d9223ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/829882527cd8fb64d62bc9ec2e745aaf1d9223ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b278a43646c8fb331a1b830b09a60ec2544dd6b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b278a43646c8fb331a1b830b09a60ec2544dd6b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b278a43646c8fb331a1b830b09a60ec2544dd6b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b278a43646c8fb331a1b830b09a60ec2544dd6b6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "50bd3f626d7ce35d52543b88a2e512074f9df134",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50bd3f626d7ce35d52543b88a2e512074f9df134",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50bd3f626d7ce35d52543b88a2e512074f9df134"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 16,
      "deletions": 7
    },
    "files": [
      {
        "sha": "dc6bcec382fb26f57fcc95da986d0cd5a66685da",
        "filename": "src/rpc/protocol.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 5,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b278a43646c8fb331a1b830b09a60ec2544dd6b6/src/rpc/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b278a43646c8fb331a1b830b09a60ec2544dd6b6/src/rpc/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.cpp?ref=b278a43646c8fb331a1b830b09a60ec2544dd6b6",
        "patch": "@@ -66,9 +66,14 @@ static const std::string COOKIEAUTH_USER = \"__cookie__\";\n /** Default name for auth cookie file */\n static const std::string COOKIEAUTH_FILE = \".cookie\";\n \n-fs::path GetAuthCookieFile()\n+/** Get name of RPC authentication cookie file */\n+static fs::path GetAuthCookieFile(bool temp=false)\n {\n-    fs::path path(gArgs.GetArg(\"-rpccookiefile\", COOKIEAUTH_FILE));\n+    std::string arg = gArgs.GetArg(\"-rpccookiefile\", COOKIEAUTH_FILE);\n+    if (temp) {\n+        arg += \".tmp\";\n+    }\n+    fs::path path(arg);\n     if (!path.is_complete()) path = GetDataDir() / path;\n     return path;\n }\n@@ -84,14 +89,20 @@ bool GenerateAuthCookie(std::string *cookie_out)\n      * these are set to 077 in init.cpp unless overridden with -sysperms.\n      */\n     std::ofstream file;\n-    fs::path filepath = GetAuthCookieFile();\n-    file.open(filepath.string().c_str());\n+    fs::path filepath_tmp = GetAuthCookieFile(true);\n+    file.open(filepath_tmp.string().c_str());\n     if (!file.is_open()) {\n-        LogPrintf(\"Unable to open cookie authentication file %s for writing\\n\", filepath.string());\n+        LogPrintf(\"Unable to open cookie authentication file %s for writing\\n\", filepath_tmp.string());\n         return false;\n     }\n     file << cookie;\n     file.close();\n+\n+    fs::path filepath = GetAuthCookieFile(false);\n+    if (!RenameOver(filepath_tmp, filepath)) {\n+        LogPrintf(\"Unable to rename cookie authentication file %s to %s\\n\", filepath_tmp.string(), filepath.string());\n+        return false;\n+    }\n     LogPrintf(\"Generated RPC authentication cookie %s\\n\", filepath.string());\n \n     if (cookie_out)"
      },
      {
        "sha": "5c9c64f67d1ce47b9b3131ad8972c42759a11ab7",
        "filename": "src/rpc/protocol.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b278a43646c8fb331a1b830b09a60ec2544dd6b6/src/rpc/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b278a43646c8fb331a1b830b09a60ec2544dd6b6/src/rpc/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.h?ref=b278a43646c8fb331a1b830b09a60ec2544dd6b6",
        "patch": "@@ -91,8 +91,6 @@ UniValue JSONRPCReplyObj(const UniValue& result, const UniValue& error, const Un\n std::string JSONRPCReply(const UniValue& result, const UniValue& error, const UniValue& id);\n UniValue JSONRPCError(int code, const std::string& message);\n \n-/** Get name of RPC authentication cookie file */\n-fs::path GetAuthCookieFile();\n /** Generate a new RPC authentication cookie and write it to disk */\n bool GenerateAuthCookie(std::string *cookie_out);\n /** Read the RPC authentication cookie from disk */"
      }
    ]
  },
  {
    "sha": "2cb720ae6122101c83a8836da057a5a7cba5b5df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyY2I3MjBhZTYxMjIxMDFjODNhODgzNmRhMDU3YTVhN2NiYTViNWRm",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-08-24T18:12:21Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T16:35:39Z"
      },
      "message": "Acquire cs_main lock before cs_wallet during wallet initialization\n\nCWallet::MarkConflicted may acquire the cs_main lock after\nCWalletDB::LoadWallet acquires the cs_wallet lock during wallet initialization.\n(CWalletDB::LoadWallet calls ReadKeyValue which calls CWallet::LoadToWallet\nwhich calls CWallet::MarkConflicted). This is the opposite order that cs_main\nand cs_wallet locks are acquired in the rest of the code, and so leads to\nPOTENTIAL DEADLOCK DETECTED errors if bitcoin is built with -DDEBUG_LOCKORDER.\n\nThis commit changes CWallet::LoadWallet (which calls CWalletDB::LoadWallet) to\nacquire both locks in the standard order. It also fixes some tests that were\nacquiring wallet and main locks out of order and failed with the new locking in\nCWallet::LoadWallet.\n\nError was reported by Luke Dashjr <luke-jr@utopios.org> in\nhttps://botbot.me/freenode/bitcoin-core-dev/msg/90244330/\n\nGithub-Pull: #11126\nRebased-From: de9a1db2ed14e0c75ffd82dc031f7ad30c56d195",
      "tree": {
        "sha": "f2493a881014fbfde03c34d2df004801363089e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2493a881014fbfde03c34d2df004801363089e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2cb720ae6122101c83a8836da057a5a7cba5b5df",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cb720ae6122101c83a8836da057a5a7cba5b5df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2cb720ae6122101c83a8836da057a5a7cba5b5df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cb720ae6122101c83a8836da057a5a7cba5b5df/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b278a43646c8fb331a1b830b09a60ec2544dd6b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b278a43646c8fb331a1b830b09a60ec2544dd6b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b278a43646c8fb331a1b830b09a60ec2544dd6b6"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 12,
      "deletions": 8
    },
    "files": [
      {
        "sha": "5ebacd57d3ab897f3bb8c5fe7d2fe221eaf96d0f",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cb720ae6122101c83a8836da057a5a7cba5b5df/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cb720ae6122101c83a8836da057a5a7cba5b5df/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=2cb720ae6122101c83a8836da057a5a7cba5b5df",
        "patch": "@@ -364,6 +364,12 @@ BOOST_AUTO_TEST_CASE(ApproximateBestSubset)\n     empty_wallet();\n }\n \n+static void AddKey(CWallet& wallet, const CKey& key)\n+{\n+    LOCK(wallet.cs_wallet);\n+    wallet.AddKeyPubKey(key, key.GetPubKey());\n+}\n+\n BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n {\n     LOCK(cs_main);\n@@ -379,8 +385,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n     // and new block files.\n     {\n         CWallet wallet;\n-        LOCK(wallet.cs_wallet);\n-        wallet.AddKeyPubKey(coinbaseKey, coinbaseKey.GetPubKey());\n+        AddKey(wallet, coinbaseKey);\n         BOOST_CHECK_EQUAL(nullBlock, wallet.ScanForWalletTransactions(oldTip));\n         BOOST_CHECK_EQUAL(wallet.GetImmatureBalance(), 100 * COIN);\n     }\n@@ -393,8 +398,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n     // file.\n     {\n         CWallet wallet;\n-        LOCK(wallet.cs_wallet);\n-        wallet.AddKeyPubKey(coinbaseKey, coinbaseKey.GetPubKey());\n+        AddKey(wallet, coinbaseKey);\n         BOOST_CHECK_EQUAL(oldTip, wallet.ScanForWalletTransactions(oldTip));\n         BOOST_CHECK_EQUAL(wallet.GetImmatureBalance(), 50 * COIN);\n     }\n@@ -599,8 +603,7 @@ class ListCoinsTestingSetup : public TestChain100Setup\n         wallet.reset(new CWallet(std::unique_ptr<CWalletDBWrapper>(new CWalletDBWrapper(&bitdb, \"wallet_test.dat\"))));\n         bool firstRun;\n         wallet->LoadWallet(firstRun);\n-        LOCK(wallet->cs_wallet);\n-        wallet->AddKeyPubKey(coinbaseKey, coinbaseKey.GetPubKey());\n+        AddKey(*wallet, coinbaseKey);\n         wallet->ScanForWalletTransactions(chainActive.Genesis());\n     }\n \n@@ -635,7 +638,7 @@ class ListCoinsTestingSetup : public TestChain100Setup\n BOOST_FIXTURE_TEST_CASE(ListCoins, ListCoinsTestingSetup)\n {\n     std::string coinbaseAddress = coinbaseKey.GetPubKey().GetID().ToString();\n-    LOCK(wallet->cs_wallet);\n+    LOCK2(cs_main, wallet->cs_wallet);\n \n     // Confirm ListCoins initially returns 1 coin grouped under coinbaseKey\n     // address."
      },
      {
        "sha": "bf8981e4e871846ca66b763ad08a889b83bf81db",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cb720ae6122101c83a8836da057a5a7cba5b5df/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cb720ae6122101c83a8836da057a5a7cba5b5df/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=2cb720ae6122101c83a8836da057a5a7cba5b5df",
        "patch": "@@ -3101,13 +3101,14 @@ CAmount CWallet::GetMinimumFee(unsigned int nTxBytes, const CCoinControl& coin_c\n \n DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n {\n+    LOCK2(cs_main, cs_wallet);\n+\n     fFirstRunRet = false;\n     DBErrors nLoadWalletRet = CWalletDB(*dbw,\"cr+\").LoadWallet(this);\n     if (nLoadWalletRet == DB_NEED_REWRITE)\n     {\n         if (dbw->Rewrite(\"\\x04pool\"))\n         {\n-            LOCK(cs_wallet);\n             setInternalKeyPool.clear();\n             setExternalKeyPool.clear();\n             m_pool_key_to_index.clear();"
      }
    ]
  },
  {
    "sha": "7310f1f2eb5900a9d07e2c6427a71d161762000a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MzEwZjFmMmViNTkwMGE5ZDA3ZTJjNjQyN2E3MWQxNjE3NjIwMDBh",
    "commit": {
      "author": {
        "name": "Daniel Edgecumbe",
        "email": "esotericnonsense@danedgecumbe.com",
        "date": "2017-08-30T18:14:07Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T16:46:51Z"
      },
      "message": "[Qt] Fix display of package name on 'open config file' tooltip\n\nGithub-Pull: #11198\nRebased-From: 14ccd4d8d1847d64903224562ad3c7eb795b3781",
      "tree": {
        "sha": "d7b0cf3ff98e855946aaccd798d21e2ccc68503c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7b0cf3ff98e855946aaccd798d21e2ccc68503c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7310f1f2eb5900a9d07e2c6427a71d161762000a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7310f1f2eb5900a9d07e2c6427a71d161762000a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7310f1f2eb5900a9d07e2c6427a71d161762000a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7310f1f2eb5900a9d07e2c6427a71d161762000a/comments",
    "author": {
      "login": "esotericnonsense",
      "id": 7999704,
      "node_id": "MDQ6VXNlcjc5OTk3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7999704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/esotericnonsense",
      "html_url": "https://github.com/esotericnonsense",
      "followers_url": "https://api.github.com/users/esotericnonsense/followers",
      "following_url": "https://api.github.com/users/esotericnonsense/following{/other_user}",
      "gists_url": "https://api.github.com/users/esotericnonsense/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/esotericnonsense/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/esotericnonsense/subscriptions",
      "organizations_url": "https://api.github.com/users/esotericnonsense/orgs",
      "repos_url": "https://api.github.com/users/esotericnonsense/repos",
      "events_url": "https://api.github.com/users/esotericnonsense/events{/privacy}",
      "received_events_url": "https://api.github.com/users/esotericnonsense/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2cb720ae6122101c83a8836da057a5a7cba5b5df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cb720ae6122101c83a8836da057a5a7cba5b5df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2cb720ae6122101c83a8836da057a5a7cba5b5df"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "550884ed8e4f2f01dfb4211e75be21d2120460fe",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7310f1f2eb5900a9d07e2c6427a71d161762000a/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7310f1f2eb5900a9d07e2c6427a71d161762000a/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=7310f1f2eb5900a9d07e2c6427a71d161762000a",
        "patch": "@@ -80,6 +80,8 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n     ui->bitcoinAtStartup->setToolTip(ui->bitcoinAtStartup->toolTip().arg(tr(PACKAGE_NAME)));\n     ui->bitcoinAtStartup->setText(ui->bitcoinAtStartup->text().arg(tr(PACKAGE_NAME)));\n \n+    ui->openBitcoinConfButton->setToolTip(ui->openBitcoinConfButton->toolTip().arg(tr(PACKAGE_NAME)));\n+\n     ui->lang->setToolTip(ui->lang->toolTip().arg(tr(PACKAGE_NAME)));\n     ui->lang->addItem(QString(\"(\") + tr(\"default\") + QString(\")\"), QVariant(\"\"));\n     for (const QString &langStr : translations.entryList())"
      }
    ]
  },
  {
    "sha": "47c02a8ae8b406a1a7d7004b2a0337a1f32420e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0N2MwMmE4YWU4YjQwNmExYTdkNzAwNGIyYTAzMzdhMWYzMjQyMGU5",
    "commit": {
      "author": {
        "name": "Chris Moore",
        "email": "dooglus@gmail.com",
        "date": "2017-08-30T07:32:54Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T16:52:28Z"
      },
      "message": "qt: Use IsMine to validate custom change address\n\n(cherry picked from commit c41224dfd51c896341bbf2fa23e160bf5ffe27c3)\n\nGithub-Pull: #11247\nRebased-From: a1ea1cfbd8d4fc976f0ab2423d395e03ded6eedd",
      "tree": {
        "sha": "6caba5c6f953a53b79792e004b107a8f3eb24894",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6caba5c6f953a53b79792e004b107a8f3eb24894"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/47c02a8ae8b406a1a7d7004b2a0337a1f32420e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47c02a8ae8b406a1a7d7004b2a0337a1f32420e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/47c02a8ae8b406a1a7d7004b2a0337a1f32420e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47c02a8ae8b406a1a7d7004b2a0337a1f32420e9/comments",
    "author": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7310f1f2eb5900a9d07e2c6427a71d161762000a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7310f1f2eb5900a9d07e2c6427a71d161762000a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7310f1f2eb5900a9d07e2c6427a71d161762000a"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 7,
      "deletions": 9
    },
    "files": [
      {
        "sha": "7732c7398818baa50267d66054dfc22520fabcc5",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47c02a8ae8b406a1a7d7004b2a0337a1f32420e9/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47c02a8ae8b406a1a7d7004b2a0337a1f32420e9/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=47c02a8ae8b406a1a7d7004b2a0337a1f32420e9",
        "patch": "@@ -789,18 +789,16 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n         }\n         else // Valid address\n         {\n-            CKeyID keyid;\n-            addr.GetKeyID(keyid);\n-            if (!model->havePrivKey(keyid)) // Unknown change address\n-            {\n+            const CTxDestination dest = addr.Get();\n+            if (!model->IsSpendable(dest)) {\n                 ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Unknown change address\"));\n \n                 // confirmation dialog\n                 QMessageBox::StandardButton btnRetVal = QMessageBox::question(this, tr(\"Confirm custom change address\"), tr(\"The address you selected for change is not part of this wallet. Any or all funds in your wallet may be sent to this address. Are you sure?\"),\n                     QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n \n                 if(btnRetVal == QMessageBox::Yes)\n-                    CoinControlDialog::coinControl->destChange = addr.Get();\n+                    CoinControlDialog::coinControl->destChange = dest;\n                 else\n                 {\n                     ui->lineEditCoinControlChange->setText(\"\");\n@@ -819,7 +817,7 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n                 else\n                     ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n \n-                CoinControlDialog::coinControl->destChange = addr.Get();\n+                CoinControlDialog::coinControl->destChange = dest;\n             }\n         }\n     }"
      },
      {
        "sha": "aedbf22e4d1d3c637fcae04ef17217af49c39f42",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47c02a8ae8b406a1a7d7004b2a0337a1f32420e9/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47c02a8ae8b406a1a7d7004b2a0337a1f32420e9/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=47c02a8ae8b406a1a7d7004b2a0337a1f32420e9",
        "patch": "@@ -561,9 +561,9 @@ bool WalletModel::getPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const\n     return wallet->GetPubKey(address, vchPubKeyOut);\n }\n \n-bool WalletModel::havePrivKey(const CKeyID &address) const\n+bool WalletModel::IsSpendable(const CTxDestination& dest) const\n {\n-    return wallet->HaveKey(address);\n+    return IsMine(*wallet, dest) & ISMINE_SPENDABLE;\n }\n \n bool WalletModel::getPrivKey(const CKeyID &address, CKey& vchPrivKeyOut) const"
      },
      {
        "sha": "05733f82727a6be6d695685e71297e5deb98c6a4",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47c02a8ae8b406a1a7d7004b2a0337a1f32420e9/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47c02a8ae8b406a1a7d7004b2a0337a1f32420e9/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=47c02a8ae8b406a1a7d7004b2a0337a1f32420e9",
        "patch": "@@ -190,7 +190,7 @@ class WalletModel : public QObject\n     UnlockContext requestUnlock();\n \n     bool getPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const;\n-    bool havePrivKey(const CKeyID &address) const;\n+    bool IsSpendable(const CTxDestination& dest) const;\n     bool getPrivKey(const CKeyID &address, CKey& vchPrivKeyOut) const;\n     void getOutputs(const std::vector<COutPoint>& vOutpoints, std::vector<COutput>& vOutputs);\n     bool isSpent(const COutPoint& outpoint) const;"
      }
    ]
  },
  {
    "sha": "2e31b1d48d4da31bf32e1e4123c7e5d662490826",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZTMxYjFkNDhkNGRhMzFiZjMyZTFlNDEyM2M3ZTVkNjYyNDkwODI2",
    "commit": {
      "author": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-09-05T22:49:36Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T17:19:46Z"
      },
      "message": "Fix division by zero in time remaining\n\nGithub-Pull: #11237\nRebased-From: 3b69a08c53c2ef738f32c270fdacf1e4ed5a4c97",
      "tree": {
        "sha": "4f724420b8cea2c67c506020a55b3d9473b29415",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f724420b8cea2c67c506020a55b3d9473b29415"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e31b1d48d4da31bf32e1e4123c7e5d662490826",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e31b1d48d4da31bf32e1e4123c7e5d662490826",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2e31b1d48d4da31bf32e1e4123c7e5d662490826",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e31b1d48d4da31bf32e1e4123c7e5d662490826/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "47c02a8ae8b406a1a7d7004b2a0337a1f32420e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47c02a8ae8b406a1a7d7004b2a0337a1f32420e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/47c02a8ae8b406a1a7d7004b2a0337a1f32420e9"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 7,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4f357e297d79e6cd89a0ed27abe43553beeb6b21",
        "filename": "src/qt/modaloverlay.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e31b1d48d4da31bf32e1e4123c7e5d662490826/src/qt/modaloverlay.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e31b1d48d4da31bf32e1e4123c7e5d662490826/src/qt/modaloverlay.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.cpp?ref=2e31b1d48d4da31bf32e1e4123c7e5d662490826",
        "patch": "@@ -99,15 +99,18 @@ void ModalOverlay::tipUpdate(int count, const QDateTime& blockDate, double nVeri\n                 progressDelta = progressStart-sample.second;\n                 timeDelta = blockProcessTime[0].first - sample.first;\n                 progressPerHour = progressDelta/(double)timeDelta*1000*3600;\n-                remainingMSecs = remainingProgress / progressDelta * timeDelta;\n+                remainingMSecs = (progressDelta > 0) ? remainingProgress / progressDelta * timeDelta : -1;\n                 break;\n             }\n         }\n         // show progress increase per hour\n         ui->progressIncreasePerH->setText(QString::number(progressPerHour*100, 'f', 2)+\"%\");\n \n-        // show expected remaining time\n-        ui->expectedTimeLeft->setText(GUIUtil::formatNiceTimeOffset(remainingMSecs/1000.0));\n+        if(remainingMSecs >= 0) {\t\n+            ui->expectedTimeLeft->setText(GUIUtil::formatNiceTimeOffset(remainingMSecs / 1000.0));\n+        } else {\n+            ui->expectedTimeLeft->setText(QObject::tr(\"unknown\"));\n+        }\n \n         static const int MAX_SAMPLES = 5000;\n         if (blockProcessTime.count() > MAX_SAMPLES)\n@@ -169,4 +172,4 @@ void ModalOverlay::closeClicked()\n {\n     showHide(true);\n     userClosed = true;\n-}\n+}\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "921542e0bde120cc5e36e6c400b9fcd486c73cdf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MjE1NDJlMGJkZTEyMGNjNWUzNmU2YzQwMGI5ZmNkNDg2YzczY2Rm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-09-07T16:16:34Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T17:23:55Z"
      },
      "message": "rpc: update cli for estimatefee argument rename\n\nThe first argument of estimatesmartfee was renamed from nblocks to\nconf_target in 06bcdb8da64502a64df03f3c89fbc6ccb72cd349. Update the\nclient-side table as well.\n\nGithub-Pull: #11267\nRebased-From: 24697c40ee6739b812259140042d426c81179977",
      "tree": {
        "sha": "278666f7aced93efef9dad23dba77414f047d474",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/278666f7aced93efef9dad23dba77414f047d474"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/921542e0bde120cc5e36e6c400b9fcd486c73cdf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/921542e0bde120cc5e36e6c400b9fcd486c73cdf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/921542e0bde120cc5e36e6c400b9fcd486c73cdf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/921542e0bde120cc5e36e6c400b9fcd486c73cdf/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2e31b1d48d4da31bf32e1e4123c7e5d662490826",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e31b1d48d4da31bf32e1e4123c7e5d662490826",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2e31b1d48d4da31bf32e1e4123c7e5d662490826"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7c1c4c55a750c14045833d0f0c19f20005873eba",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/921542e0bde120cc5e36e6c400b9fcd486c73cdf/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/921542e0bde120cc5e36e6c400b9fcd486c73cdf/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=921542e0bde120cc5e36e6c400b9fcd486c73cdf",
        "patch": "@@ -116,7 +116,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"getrawmempool\", 0, \"verbose\" },\n     { \"estimatefee\", 0, \"nblocks\" },\n     { \"estimatesmartfee\", 0, \"nblocks\" },\n-    { \"estimaterawfee\", 0, \"nblocks\" },\n+    { \"estimaterawfee\", 0, \"conf_target\" },\n     { \"estimaterawfee\", 1, \"threshold\" },\n     { \"prioritisetransaction\", 1, \"dummy\" },\n     { \"prioritisetransaction\", 2, \"fee_delta\" },"
      }
    ]
  },
  {
    "sha": "b1a6c946838fb070fe3079084b800836c7d5ddfa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMWE2Yzk0NjgzOGZiMDcwZmUzMDc5MDg0YjgwMDgzNmM3ZDVkZGZh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-09-07T17:15:45Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T17:30:27Z"
      },
      "message": "rpc: make estimatesmartfee argument naming consistent with documentation\n\nGithub-Pull: #11267\nRebased-From: 5acd82de9ad6df8cab922da66d49b8ff2bd35439",
      "tree": {
        "sha": "f26c16e2d4f541b1b821d94b63fe0826c840c7b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f26c16e2d4f541b1b821d94b63fe0826c840c7b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1a6c946838fb070fe3079084b800836c7d5ddfa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1a6c946838fb070fe3079084b800836c7d5ddfa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1a6c946838fb070fe3079084b800836c7d5ddfa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1a6c946838fb070fe3079084b800836c7d5ddfa/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "921542e0bde120cc5e36e6c400b9fcd486c73cdf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/921542e0bde120cc5e36e6c400b9fcd486c73cdf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/921542e0bde120cc5e36e6c400b9fcd486c73cdf"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "406ad2f6ec6032f65be8fbe170b85d35247e7c99",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1a6c946838fb070fe3079084b800836c7d5ddfa/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1a6c946838fb070fe3079084b800836c7d5ddfa/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=b1a6c946838fb070fe3079084b800836c7d5ddfa",
        "patch": "@@ -115,7 +115,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"keypoolrefill\", 0, \"newsize\" },\n     { \"getrawmempool\", 0, \"verbose\" },\n     { \"estimatefee\", 0, \"nblocks\" },\n-    { \"estimatesmartfee\", 0, \"nblocks\" },\n+    { \"estimatesmartfee\", 0, \"conf_target\" },\n     { \"estimaterawfee\", 0, \"conf_target\" },\n     { \"estimaterawfee\", 1, \"threshold\" },\n     { \"prioritisetransaction\", 1, \"dummy\" },"
      }
    ]
  },
  {
    "sha": "19d63e8a939abb89385fc5758771351cbe650ffe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOWQ2M2U4YTkzOWFiYjg5Mzg1ZmM1NzU4NzcxMzUxY2JlNjUwZmZl",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-09-15T04:07:45Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T17:51:35Z"
      },
      "message": "Remove custom fee radio group\n\nRemoves the extraneous custom fee radio group and its single radio\nbutton. The radio button is replaced with a label that has the\nradio button's text.\n\nGithub-Pull: #11334\nRebased-From: e53fa4a1ca58ef46416c4a96542722601fb75c5a",
      "tree": {
        "sha": "3c4134efe84c3550f6ec978f5e2615df29314f5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3c4134efe84c3550f6ec978f5e2615df29314f5b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19d63e8a939abb89385fc5758771351cbe650ffe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19d63e8a939abb89385fc5758771351cbe650ffe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19d63e8a939abb89385fc5758771351cbe650ffe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19d63e8a939abb89385fc5758771351cbe650ffe/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1a6c946838fb070fe3079084b800836c7d5ddfa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1a6c946838fb070fe3079084b800836c7d5ddfa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1a6c946838fb070fe3079084b800836c7d5ddfa"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 3,
      "deletions": 20
    },
    "files": [
      {
        "sha": "a0e48334c1b5b4394ed5f7b96a1a1ee3e5eaed1e",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19d63e8a939abb89385fc5758771351cbe650ffe/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19d63e8a939abb89385fc5758771351cbe650ffe/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=19d63e8a939abb89385fc5758771351cbe650ffe",
        "patch": "@@ -846,19 +846,13 @@\n                <item>\n                 <layout class=\"QHBoxLayout\" name=\"horizontalLayoutFee13\">\n                  <item>\n-                  <widget class=\"QRadioButton\" name=\"radioCustomPerKilobyte\">\n+                  <widget class=\"QLabel\" name=\"labelCustomPerKilobyte\">\n                    <property name=\"toolTip\">\n                     <string>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then &quot;per kilobyte&quot; only pays 250 satoshis in fee, while &quot;total at least&quot; pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</string>\n                    </property>\n                    <property name=\"text\">\n                     <string>per kilobyte</string>\n                    </property>\n-                   <property name=\"checked\">\n-                    <bool>true</bool>\n-                   </property>\n-                   <attribute name=\"buttonGroup\">\n-                    <string notr=\"true\">groupCustomFee</string>\n-                   </attribute>\n                   </widget>\n                  </item>\n                  <item>\n@@ -1285,6 +1279,5 @@\n  <connections/>\n  <buttongroups>\n   <buttongroup name=\"groupFee\"/>\n-  <buttongroup name=\"groupCustomFee\"/>\n  </buttongroups>\n </ui>"
      },
      {
        "sha": "96adae73daf6849091eabdd5ef28828d2e8d6e4f",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 12,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19d63e8a939abb89385fc5758771351cbe650ffe/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19d63e8a939abb89385fc5758771351cbe650ffe/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=19d63e8a939abb89385fc5758771351cbe650ffe",
        "patch": "@@ -114,10 +114,6 @@ SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *p\n         settings.setValue(\"nFeeRadio\", 1); // custom\n     if (!settings.contains(\"nFeeRadio\"))\n         settings.setValue(\"nFeeRadio\", 0); // recommended\n-    if (!settings.contains(\"nCustomFeeRadio\") && settings.contains(\"nTransactionFee\") && settings.value(\"nTransactionFee\").toLongLong() > 0) // compatibility\n-        settings.setValue(\"nCustomFeeRadio\", 1); // total at least\n-    if (!settings.contains(\"nCustomFeeRadio\"))\n-        settings.setValue(\"nCustomFeeRadio\", 0); // per kilobyte\n     if (!settings.contains(\"nSmartFeeSliderPosition\"))\n         settings.setValue(\"nSmartFeeSliderPosition\", 0);\n     if (!settings.contains(\"nTransactionFee\"))\n@@ -127,8 +123,6 @@ SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *p\n     ui->groupFee->setId(ui->radioSmartFee, 0);\n     ui->groupFee->setId(ui->radioCustomFee, 1);\n     ui->groupFee->button((int)std::max(0, std::min(1, settings.value(\"nFeeRadio\").toInt())))->setChecked(true);\n-    ui->groupCustomFee->setId(ui->radioCustomPerKilobyte, 0);\n-    ui->groupCustomFee->button(0)->setChecked(true);\n     ui->customFee->setValue(settings.value(\"nTransactionFee\").toLongLong());\n     ui->checkBoxMinimumFee->setChecked(settings.value(\"fPayOnlyMinFee\").toBool());\n     minimizeFeeSection(settings.value(\"fFeeSectionMinimized\").toBool());\n@@ -178,7 +172,6 @@ void SendCoinsDialog::setModel(WalletModel *_model)\n         connect(ui->confTargetSelector, SIGNAL(currentIndexChanged(int)), this, SLOT(coinControlUpdateLabels()));\n         connect(ui->groupFee, SIGNAL(buttonClicked(int)), this, SLOT(updateFeeSectionControls()));\n         connect(ui->groupFee, SIGNAL(buttonClicked(int)), this, SLOT(coinControlUpdateLabels()));\n-        connect(ui->groupCustomFee, SIGNAL(buttonClicked(int)), this, SLOT(coinControlUpdateLabels()));\n         connect(ui->customFee, SIGNAL(valueChanged()), this, SLOT(coinControlUpdateLabels()));\n         connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(setMinimumFee()));\n         connect(ui->checkBoxMinimumFee, SIGNAL(stateChanged(int)), this, SLOT(updateFeeSectionControls()));\n@@ -214,7 +207,6 @@ SendCoinsDialog::~SendCoinsDialog()\n     QSettings settings;\n     settings.setValue(\"fFeeSectionMinimized\", fFeeMinimized);\n     settings.setValue(\"nFeeRadio\", ui->groupFee->checkedId());\n-    settings.setValue(\"nCustomFeeRadio\", ui->groupCustomFee->checkedId());\n     settings.setValue(\"nConfTarget\", getConfTargetForIndex(ui->confTargetSelector->currentIndex()));\n     settings.setValue(\"nTransactionFee\", (qint64)ui->customFee->value());\n     settings.setValue(\"fPayOnlyMinFee\", ui->checkBoxMinimumFee->isChecked());\n@@ -609,7 +601,6 @@ void SendCoinsDialog::on_buttonMinimizeFee_clicked()\n \n void SendCoinsDialog::setMinimumFee()\n {\n-    ui->radioCustomPerKilobyte->setChecked(true);\n     ui->customFee->setValue(CWallet::GetRequiredFee(1000));\n }\n \n@@ -622,7 +613,7 @@ void SendCoinsDialog::updateFeeSectionControls()\n     ui->labelFeeEstimation      ->setEnabled(ui->radioSmartFee->isChecked());\n     ui->checkBoxMinimumFee      ->setEnabled(ui->radioCustomFee->isChecked());\n     ui->labelMinFeeWarning      ->setEnabled(ui->radioCustomFee->isChecked());\n-    ui->radioCustomPerKilobyte  ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n+    ui->labelCustomPerKilobyte  ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n     ui->customFee               ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n }\n \n@@ -634,8 +625,7 @@ void SendCoinsDialog::updateFeeMinimizedLabel()\n     if (ui->radioSmartFee->isChecked())\n         ui->labelFeeMinimized->setText(ui->labelSmartFee->text());\n     else {\n-        ui->labelFeeMinimized->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), ui->customFee->value()) +\n-            ((ui->radioCustomPerKilobyte->isChecked()) ? \"/kB\" : \"\"));\n+        ui->labelFeeMinimized->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), ui->customFee->value()) + \"/kB\");\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "6642558078deaae2bdf1d85ed2156eb23ba004b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjQyNTU4MDc4ZGVhYWUyYmRmMWQ4NWVkMjE1NmViMjNiYTAwNGIw",
    "commit": {
      "author": {
        "name": "Lucas Betschart",
        "email": "lucasbetschart@gmail.com",
        "date": "2017-08-06T20:55:14Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T18:03:42Z"
      },
      "message": "[Qt] Add delay before filtering transactions\nFixes 3141\n\nGithub-Pull: #11015\nRebased-From: 7b137acedd5e2ff3fe5395a927c546a528b0cac6",
      "tree": {
        "sha": "8808e91fade3204dc70893a5a377c5be95104c4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8808e91fade3204dc70893a5a377c5be95104c4f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6642558078deaae2bdf1d85ed2156eb23ba004b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6642558078deaae2bdf1d85ed2156eb23ba004b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6642558078deaae2bdf1d85ed2156eb23ba004b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6642558078deaae2bdf1d85ed2156eb23ba004b0/comments",
    "author": {
      "login": "lclc",
      "id": 1846033,
      "node_id": "MDQ6VXNlcjE4NDYwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1846033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lclc",
      "html_url": "https://github.com/lclc",
      "followers_url": "https://api.github.com/users/lclc/followers",
      "following_url": "https://api.github.com/users/lclc/following{/other_user}",
      "gists_url": "https://api.github.com/users/lclc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lclc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lclc/subscriptions",
      "organizations_url": "https://api.github.com/users/lclc/orgs",
      "repos_url": "https://api.github.com/users/lclc/repos",
      "events_url": "https://api.github.com/users/lclc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lclc/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19d63e8a939abb89385fc5758771351cbe650ffe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19d63e8a939abb89385fc5758771351cbe650ffe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19d63e8a939abb89385fc5758771351cbe650ffe"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 22,
      "deletions": 9
    },
    "files": [
      {
        "sha": "39dfdb587c2a6c1d0288a400d8dbb7e4551bfa8b",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 7,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6642558078deaae2bdf1d85ed2156eb23ba004b0/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6642558078deaae2bdf1d85ed2156eb23ba004b0/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=6642558078deaae2bdf1d85ed2156eb23ba004b0",
        "patch": "@@ -33,6 +33,7 @@\n #include <QScrollBar>\n #include <QSignalMapper>\n #include <QTableView>\n+#include <QTimer>\n #include <QUrl>\n #include <QVBoxLayout>\n \n@@ -112,6 +113,17 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     amountWidget->setValidator(new QDoubleValidator(0, 1e20, 8, this));\n     hlayout->addWidget(amountWidget);\n \n+    // Delay before filtering transactions in ms\n+    static const int input_filter_delay = 200;\n+\n+    QTimer* amount_typing_delay = new QTimer(this);\n+    amount_typing_delay->setSingleShot(true);\n+    amount_typing_delay->setInterval(input_filter_delay);\n+\n+    QTimer* prefix_typing_delay = new QTimer(this);\n+    prefix_typing_delay->setSingleShot(true);\n+    prefix_typing_delay->setInterval(input_filter_delay);\n+\n     QVBoxLayout *vlayout = new QVBoxLayout(this);\n     vlayout->setContentsMargins(0,0,0,0);\n     vlayout->setSpacing(0);\n@@ -173,8 +185,10 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     connect(dateWidget, SIGNAL(activated(int)), this, SLOT(chooseDate(int)));\n     connect(typeWidget, SIGNAL(activated(int)), this, SLOT(chooseType(int)));\n     connect(watchOnlyWidget, SIGNAL(activated(int)), this, SLOT(chooseWatchonly(int)));\n-    connect(addressWidget, SIGNAL(textChanged(QString)), this, SLOT(changedPrefix(QString)));\n-    connect(amountWidget, SIGNAL(textChanged(QString)), this, SLOT(changedAmount(QString)));\n+    connect(amountWidget, SIGNAL(textChanged(QString)), amount_typing_delay, SLOT(start()));\n+    connect(amount_typing_delay, SIGNAL(timeout()), this, SLOT(changedAmount()));\n+    connect(addressWidget, SIGNAL(textChanged(QString)), prefix_typing_delay, SLOT(start()));\n+    connect(prefix_typing_delay, SIGNAL(timeout()), this, SLOT(changedPrefix()));\n \n     connect(view, SIGNAL(doubleClicked(QModelIndex)), this, SIGNAL(doubleClicked(QModelIndex)));\n     connect(view, SIGNAL(customContextMenuRequested(QPoint)), this, SLOT(contextualMenu(QPoint)));\n@@ -312,20 +326,19 @@ void TransactionView::chooseWatchonly(int idx)\n         (TransactionFilterProxy::WatchOnlyFilter)watchOnlyWidget->itemData(idx).toInt());\n }\n \n-void TransactionView::changedPrefix(const QString &prefix)\n+void TransactionView::changedPrefix()\n {\n     if(!transactionProxyModel)\n         return;\n-    transactionProxyModel->setAddressPrefix(prefix);\n+    transactionProxyModel->setAddressPrefix(addressWidget->text());\n }\n \n-void TransactionView::changedAmount(const QString &amount)\n+void TransactionView::changedAmount()\n {\n     if(!transactionProxyModel)\n         return;\n     CAmount amount_parsed = 0;\n-    if(BitcoinUnits::parse(model->getOptionsModel()->getDisplayUnit(), amount, &amount_parsed))\n-    {\n+    if (BitcoinUnits::parse(model->getOptionsModel()->getDisplayUnit(), amountWidget->text(), &amount_parsed)) {\n         transactionProxyModel->setMinAmount(amount_parsed);\n     }\n     else"
      },
      {
        "sha": "5b4cfd4a88d3822eb1c3559317a53374fd6b651e",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6642558078deaae2bdf1d85ed2156eb23ba004b0/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6642558078deaae2bdf1d85ed2156eb23ba004b0/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=6642558078deaae2bdf1d85ed2156eb23ba004b0",
        "patch": "@@ -112,8 +112,8 @@ public Q_SLOTS:\n     void chooseDate(int idx);\n     void chooseType(int idx);\n     void chooseWatchonly(int idx);\n-    void changedPrefix(const QString &prefix);\n-    void changedAmount(const QString &amount);\n+    void changedAmount();\n+    void changedPrefix();\n     void exportClicked();\n     void focusTransaction(const QModelIndex&);\n "
      }
    ]
  },
  {
    "sha": "8d13b4298c1ca83db0a65c8c8a93bd3be9135754",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDEzYjQyOThjMWNhODNkYjBhNjVjOGM4YTkzYmQzYmU5MTM1NzU0",
    "commit": {
      "author": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-09-15T04:38:42Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T18:12:07Z"
      },
      "message": "Replace save|restoreWindowGeometry with Qt functions\n\nGithub-Pull: #11335\nRebased-From: 13baf7217bf8394ae02efc376208ae86eac4d0f6",
      "tree": {
        "sha": "8795198b85493731df606d2f5825251b87407540",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8795198b85493731df606d2f5825251b87407540"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d13b4298c1ca83db0a65c8c8a93bd3be9135754",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d13b4298c1ca83db0a65c8c8a93bd3be9135754",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8d13b4298c1ca83db0a65c8c8a93bd3be9135754",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d13b4298c1ca83db0a65c8c8a93bd3be9135754/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6642558078deaae2bdf1d85ed2156eb23ba004b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6642558078deaae2bdf1d85ed2156eb23ba004b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6642558078deaae2bdf1d85ed2156eb23ba004b0"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 15,
      "deletions": 36
    },
    "files": [
      {
        "sha": "56373563b81b4b37cf68a773c837453171d7e8b0",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d13b4298c1ca83db0a65c8c8a93bd3be9135754/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d13b4298c1ca83db0a65c8c8a93bd3be9135754/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=8d13b4298c1ca83db0a65c8c8a93bd3be9135754",
        "patch": "@@ -123,7 +123,11 @@ BitcoinGUI::BitcoinGUI(const PlatformStyle *_platformStyle, const NetworkStyle *\n     spinnerFrame(0),\n     platformStyle(_platformStyle)\n {\n-    GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n+    QSettings settings;\n+    if (!restoreGeometry(settings.value(\"MainWindowGeometry\").toByteArray())) {\n+        // Restore failed (perhaps missing setting), center the window\n+        move(QApplication::desktop()->availableGeometry().center() - frameGeometry().center());\n+    }\n \n     QString windowTitle = tr(PACKAGE_NAME) + \" - \";\n #ifdef ENABLE_WALLET\n@@ -261,7 +265,8 @@ BitcoinGUI::~BitcoinGUI()\n     // Unsubscribe from notifications from core\n     unsubscribeFromCoreSignals();\n \n-    GUIUtil::saveWindowGeometry(\"nWindow\", this);\n+    QSettings settings;\n+    settings.setValue(\"MainWindowGeometry\", saveGeometry());\n     if(trayIcon) // Hide tray icon, as deleting will let it linger until quit (on Ubuntu)\n         trayIcon->hide();\n #ifdef Q_OS_MAC"
      },
      {
        "sha": "69c3e06869639ec25d7e39261bc13cb193997d44",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d13b4298c1ca83db0a65c8c8a93bd3be9135754/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d13b4298c1ca83db0a65c8c8a93bd3be9135754/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=8d13b4298c1ca83db0a65c8c8a93bd3be9135754",
        "patch": "@@ -842,32 +842,6 @@ bool SetStartOnSystemStartup(bool fAutoStart) { return false; }\n \n #endif\n \n-void saveWindowGeometry(const QString& strSetting, QWidget *parent)\n-{\n-    QSettings settings;\n-    settings.setValue(strSetting + \"Pos\", parent->pos());\n-    settings.setValue(strSetting + \"Size\", parent->size());\n-}\n-\n-void restoreWindowGeometry(const QString& strSetting, const QSize& defaultSize, QWidget *parent)\n-{\n-    QSettings settings;\n-    QPoint pos = settings.value(strSetting + \"Pos\").toPoint();\n-    QSize size = settings.value(strSetting + \"Size\", defaultSize).toSize();\n-\n-    parent->resize(size);\n-    parent->move(pos);\n-\n-    if ((!pos.x() && !pos.y()) || (QApplication::desktop()->screenNumber(parent) == -1))\n-    {\n-        QRect screen = QApplication::desktop()->screenGeometry();\n-        QPoint defaultPos((screen.width() - defaultSize.width()) / 2,\n-                          (screen.height() - defaultSize.height()) / 2);\n-        parent->resize(defaultSize);\n-        parent->move(defaultPos);\n-    }\n-}\n-\n void setClipboard(const QString& str)\n {\n     QApplication::clipboard()->setText(str, QClipboard::Clipboard);"
      },
      {
        "sha": "d10818d0c88e9804497266e5eb738d3948e484e0",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d13b4298c1ca83db0a65c8c8a93bd3be9135754/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d13b4298c1ca83db0a65c8c8a93bd3be9135754/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=8d13b4298c1ca83db0a65c8c8a93bd3be9135754",
        "patch": "@@ -179,11 +179,6 @@ namespace GUIUtil\n     bool GetStartOnSystemStartup();\n     bool SetStartOnSystemStartup(bool fAutoStart);\n \n-    /** Save window size and position */\n-    void saveWindowGeometry(const QString& strSetting, QWidget *parent);\n-    /** Restore window size and position */\n-    void restoreWindowGeometry(const QString& strSetting, const QSize &defaultSizeIn, QWidget *parent);\n-\n     /* Convert QString to OS specific boost path through UTF-8 */\n     fs::path qstringToBoostPath(const QString &path);\n "
      },
      {
        "sha": "d895fc16630c96c621bd2c358adcb7499d156781",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d13b4298c1ca83db0a65c8c8a93bd3be9135754/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d13b4298c1ca83db0a65c8c8a93bd3be9135754/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=8d13b4298c1ca83db0a65c8c8a93bd3be9135754",
        "patch": "@@ -28,6 +28,7 @@\n #include <wallet/wallet.h>\n #endif\n \n+#include <QDesktopWidget>\n #include <QKeyEvent>\n #include <QMenu>\n #include <QMessageBox>\n@@ -428,7 +429,11 @@ RPCConsole::RPCConsole(const PlatformStyle *_platformStyle, QWidget *parent) :\n     consoleFontSize(0)\n {\n     ui->setupUi(this);\n-    GUIUtil::restoreWindowGeometry(\"nRPCConsoleWindow\", this->size(), this);\n+    QSettings settings;\n+    if (!restoreGeometry(settings.value(\"RPCConsoleWindowGeometry\").toByteArray())) {\n+        // Restore failed (perhaps missing setting), center the window\n+        move(QApplication::desktop()->availableGeometry().center() - frameGeometry().center());\n+    }\n \n     ui->openDebugLogfileButton->setToolTip(ui->openDebugLogfileButton->toolTip().arg(tr(PACKAGE_NAME)));\n \n@@ -466,14 +471,14 @@ RPCConsole::RPCConsole(const PlatformStyle *_platformStyle, QWidget *parent) :\n     ui->detailWidget->hide();\n     ui->peerHeading->setText(tr(\"Select a peer to view detailed information.\"));\n \n-    QSettings settings;\n     consoleFontSize = settings.value(fontSizeSettingsKey, QFontInfo(QFont()).pointSize()).toInt();\n     clear();\n }\n \n RPCConsole::~RPCConsole()\n {\n-    GUIUtil::saveWindowGeometry(\"nRPCConsoleWindow\", this);\n+    QSettings settings;\n+    settings.setValue(\"RPCConsoleWindowGeometry\", saveGeometry());\n     RPCUnsetTimerInterface(rpcTimerInterface);\n     delete rpcTimerInterface;\n     delete ui;"
      }
    ]
  },
  {
    "sha": "75997c3b35db39031a222e2d63da83e67cc9397c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NTk5N2MzYjM1ZGIzOTAzMWEyMjJlMmQ2M2RhODNlNjdjYzkzOTdj",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-09-21T00:19:14Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T18:12:07Z"
      },
      "message": "Disallow uncompressed pubkeys in bitcoin-tx [multisig] output adds\n\nGithub-Pull: #11377\nRebased-From: 28d4542a0ac77a30a242d0568e580a5b437f53fa",
      "tree": {
        "sha": "a55618c338b8275925bb301abd2fd3a86927a760",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a55618c338b8275925bb301abd2fd3a86927a760"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75997c3b35db39031a222e2d63da83e67cc9397c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75997c3b35db39031a222e2d63da83e67cc9397c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/75997c3b35db39031a222e2d63da83e67cc9397c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75997c3b35db39031a222e2d63da83e67cc9397c/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8d13b4298c1ca83db0a65c8c8a93bd3be9135754",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d13b4298c1ca83db0a65c8c8a93bd3be9135754",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d13b4298c1ca83db0a65c8c8a93bd3be9135754"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 53,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3b62a106031c86f431981d4bae5f5447ef0efea1",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75997c3b35db39031a222e2d63da83e67cc9397c/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75997c3b35db39031a222e2d63da83e67cc9397c/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=75997c3b35db39031a222e2d63da83e67cc9397c",
        "patch": "@@ -249,6 +249,7 @@ EXTRA_DIST += \\\n     test/util/data/txcreatemultisig3.json \\\n     test/util/data/txcreatemultisig4.hex \\\n     test/util/data/txcreatemultisig4.json \\\n+    test/util/data/txcreatemultisig5.json \\\n     test/util/data/txcreateoutpubkey1.hex \\\n     test/util/data/txcreateoutpubkey1.json \\\n     test/util/data/txcreateoutpubkey2.hex \\"
      },
      {
        "sha": "0f2c19bd5df7206814499f232993bd76b5798c42",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75997c3b35db39031a222e2d63da83e67cc9397c/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75997c3b35db39031a222e2d63da83e67cc9397c/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=75997c3b35db39031a222e2d63da83e67cc9397c",
        "patch": "@@ -310,6 +310,9 @@ static void MutateTxAddOutPubKey(CMutableTransaction& tx, const std::string& str\n     }\n \n     if (bSegWit) {\n+        if (!pubkey.IsCompressed()) {\n+            throw std::runtime_error(\"Uncompressed pubkeys are not useable for SegWit outputs\");\n+        }\n         // Call GetScriptForWitness() to build a P2WSH scriptPubKey\n         scriptPubKey = GetScriptForWitness(scriptPubKey);\n     }\n@@ -377,6 +380,11 @@ static void MutateTxAddOutMultiSig(CMutableTransaction& tx, const std::string& s\n     CScript scriptPubKey = GetScriptForMultisig(required, pubkeys);\n \n     if (bSegWit) {\n+        for (CPubKey& pubkey : pubkeys) {\n+            if (!pubkey.IsCompressed()) {\n+                throw std::runtime_error(\"Uncompressed pubkeys are not useable for SegWit outputs\");\n+            }\n+        }\n         // Call GetScriptForWitness() to build a P2WSH scriptPubKey\n         scriptPubKey = GetScriptForWitness(scriptPubKey);\n     }"
      },
      {
        "sha": "89b28bba6ced9ccd0633221405bc27cfaeac23dd",
        "filename": "test/util/data/bitcoin-util-test.json",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75997c3b35db39031a222e2d63da83e67cc9397c/test/util/data/bitcoin-util-test.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75997c3b35db39031a222e2d63da83e67cc9397c/test/util/data/bitcoin-util-test.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/bitcoin-util-test.json?ref=75997c3b35db39031a222e2d63da83e67cc9397c",
        "patch": "@@ -261,6 +261,13 @@\n     \"output_cmp\": \"txcreateoutpubkey3.json\",\n     \"description\": \"Creates a new transaction with a single pay-to-pub-key output, wrapped in P2SH (output as json)\"\n   },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\":\n+    [\"-json\", \"-create\", \"outpubkey=0:047d1368ba7ae01c94bc32293efd70bd7e3be7aa7912d07d0b1c659c1008d179b8642f5fb90f47580feb29f045e216ff5a4716d3a0fed36da414d332046303c44a:WS\", \"nversion=1\"],\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: Uncompressed pubkeys are not useable for SegWit outputs\",\n+    \"description\": \"Creates a new transaction with a single pay-to-pub-key output, wrapped in P2SH (output as json)\"\n+  },\n   { \"exec\": \"./bitcoin-tx\",\n     \"args\":\n     [\"-create\",\n@@ -388,5 +395,16 @@\n     \"args\": [\"-json\", \"-create\", \"outmultisig=1:2:3:02a5613bd857b7048924264d1e70e08fb2a7e6527d32b7ab1bb993ac59964ff397:021ac43c7ff740014c3b33737ede99c967e4764553d1b2b83db77c83b8715fa72d:02df2089105c77f266fa11a9d33f05c735234075f2e8780824c6b709415f9fb485:WS\", \"nversion=1\"],\n     \"output_cmp\": \"txcreatemultisig4.json\",\n     \"description\": \"Creates a new transaction with a single 2-of-3 multisig in a P2WSH output, wrapped in P2SH (output in json)\"\n+  },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\": [\"-json\", \"-create\", \"outmultisig=1:2:3:02a5613bd857b7048924264d1e70e08fb2a7e6527d32b7ab1bb993ac59964ff397:021ac43c7ff740014c3b33737ede99c967e4764553d1b2b83db77c83b8715fa72d:047d1368ba7ae01c94bc32293efd70bd7e3be7aa7912d07d0b1c659c1008d179b8642f5fb90f47580feb29f045e216ff5a4716d3a0fed36da414d332046303c44a:S\"],\n+    \"output_cmp\": \"txcreatemultisig5.json\",\n+    \"description\": \"Uncompressed pubkeys should work just fine for non-witness outputs\"\n+  },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\": [\"-json\", \"-create\", \"outmultisig=1:2:3:02a5613bd857b7048924264d1e70e08fb2a7e6527d32b7ab1bb993ac59964ff397:021ac43c7ff740014c3b33737ede99c967e4764553d1b2b83db77c83b8715fa72d:047d1368ba7ae01c94bc32293efd70bd7e3be7aa7912d07d0b1c659c1008d179b8642f5fb90f47580feb29f045e216ff5a4716d3a0fed36da414d332046303c44a:WS\"],\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: Uncompressed pubkeys are not useable for SegWit outputs\",\n+    \"description\": \"Ensure adding witness outputs with uncompressed pubkeys fails\"\n   }\n ]"
      },
      {
        "sha": "20e9bb077bbf5bc85bc4a60876e7061dbd7e6960",
        "filename": "test/util/data/txcreatemultisig5.json",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75997c3b35db39031a222e2d63da83e67cc9397c/test/util/data/txcreatemultisig5.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75997c3b35db39031a222e2d63da83e67cc9397c/test/util/data/txcreatemultisig5.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/util/data/txcreatemultisig5.json?ref=75997c3b35db39031a222e2d63da83e67cc9397c",
        "patch": "@@ -0,0 +1,26 @@\n+{\n+    \"txid\": \"813cf75e1f08debd242ef7c8192b7d478fb651355209369499a0de779ba7eb2f\",\n+    \"hash\": \"813cf75e1f08debd242ef7c8192b7d478fb651355209369499a0de779ba7eb2f\",\n+    \"version\": 2,\n+    \"size\": 42,\n+    \"vsize\": 42,\n+    \"locktime\": 0,\n+    \"vin\": [\n+    ],\n+    \"vout\": [\n+        {\n+            \"value\": 1.00000000,\n+            \"n\": 0,\n+            \"scriptPubKey\": {\n+                \"asm\": \"OP_HASH160 a4051c02398868af83f28f083208fae99a769263 OP_EQUAL\",\n+                \"hex\": \"a914a4051c02398868af83f28f083208fae99a76926387\",\n+                \"reqSigs\": 1,\n+                \"type\": \"scripthash\",\n+                \"addresses\": [\n+                    \"3GeGs1eHUxPz5YyuFe9WPpXid2UsUb5Jos\"\n+                ]\n+            }\n+        }\n+    ],\n+    \"hex\": \"02000000000100e1f5050000000017a914a4051c02398868af83f28f083208fae99a7692638700000000\"\n+}"
      }
    ]
  },
  {
    "sha": "8b61aee69026b03dfd5ebdb29c8d27a2b87462d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjYxYWVlNjkwMjZiMDNkZmQ1ZWJkYjI5YzhkMjdhMmI4NzQ2MmQx",
    "commit": {
      "author": {
        "name": "Paul Berg",
        "email": "paul.berg@inl.gov",
        "date": "2017-09-13T07:24:42Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T18:18:01Z"
      },
      "message": "Put back inadvertently removed copyright notices\n\nIn an abundance of caution this restores \"Bitcoin Developers\" to the COPYING file in\ncase there were contributors before that point in time that would object to the\ncurrent label.  It's harmless and more pedantically correct.\n\n[Change extracted from the Bitcoin-abc repository, commit message by gmaxwell]\n\nSigned-off-by: Gregory Maxwell <greg@xiph.org>\n\nGithub-Pull: #11318\nRebased-From: d552ed678c2632bafeab695c639f5fe185dc9853",
      "tree": {
        "sha": "854f64dee26c689874b86a80d24f23264598cb64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/854f64dee26c689874b86a80d24f23264598cb64"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b61aee69026b03dfd5ebdb29c8d27a2b87462d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b61aee69026b03dfd5ebdb29c8d27a2b87462d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b61aee69026b03dfd5ebdb29c8d27a2b87462d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b61aee69026b03dfd5ebdb29c8d27a2b87462d1/comments",
    "author": {
      "login": "paulberg",
      "id": 3239883,
      "node_id": "MDQ6VXNlcjMyMzk4ODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3239883?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulberg",
      "html_url": "https://github.com/paulberg",
      "followers_url": "https://api.github.com/users/paulberg/followers",
      "following_url": "https://api.github.com/users/paulberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulberg/subscriptions",
      "organizations_url": "https://api.github.com/users/paulberg/orgs",
      "repos_url": "https://api.github.com/users/paulberg/repos",
      "events_url": "https://api.github.com/users/paulberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "75997c3b35db39031a222e2d63da83e67cc9397c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75997c3b35db39031a222e2d63da83e67cc9397c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/75997c3b35db39031a222e2d63da83e67cc9397c"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "45d51c3c7851ed2043b6b540f31fcd0d54dc861f",
        "filename": "COPYING",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b61aee69026b03dfd5ebdb29c8d27a2b87462d1/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b61aee69026b03dfd5ebdb29c8d27a2b87462d1/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=8b61aee69026b03dfd5ebdb29c8d27a2b87462d1",
        "patch": "@@ -1,6 +1,7 @@\n The MIT License (MIT)\n \n Copyright (c) 2009-2017 The Bitcoin Core developers\n+Copyright (c) 2009-2017 Bitcoin Developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      }
    ]
  },
  {
    "sha": "62d18cdb893fea92680a6f382bb8b3e8ca157bcf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MmQxOGNkYjg5M2ZlYTkyNjgwYTZmMzgyYmI4YjNlOGNhMTU3YmNm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T16:09:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-03T18:28:38Z"
      },
      "message": "doc: Prepare release notes for 0.15.1",
      "tree": {
        "sha": "ced5bfc1f3924363eb8179cfed4588c7ac54f32a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ced5bfc1f3924363eb8179cfed4588c7ac54f32a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62d18cdb893fea92680a6f382bb8b3e8ca157bcf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62d18cdb893fea92680a6f382bb8b3e8ca157bcf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/62d18cdb893fea92680a6f382bb8b3e8ca157bcf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62d18cdb893fea92680a6f382bb8b3e8ca157bcf/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b61aee69026b03dfd5ebdb29c8d27a2b87462d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b61aee69026b03dfd5ebdb29c8d27a2b87462d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b61aee69026b03dfd5ebdb29c8d27a2b87462d1"
      }
    ],
    "stats": {
      "total": 993,
      "additions": 975,
      "deletions": 18
    },
    "files": [
      {
        "sha": "ef8de316a505ed080e336f89553d57b848c6ec43",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 10,
        "deletions": 18,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62d18cdb893fea92680a6f382bb8b3e8ca157bcf/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62d18cdb893fea92680a6f382bb8b3e8ca157bcf/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=62d18cdb893fea92680a6f382bb8b3e8ca157bcf",
        "patch": "@@ -1,8 +1,12 @@\n-Bitcoin Core version *0.15.0.1* is now available from:\n+(note: this is a temporary file, to be added-to by anybody, and moved to\n+release-notes at release time)\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.15.0.1/>\n+Bitcoin Core version *0.15.1* is now available from:\n \n-This is a minor bug fix for 0.15.0.\n+  <https://bitcoin.org/bin/bitcoin-core-0.15.1/>\n+\n+This is a new minor version release, including various bugfixes and\n+performance improvements, as well as updated translations.\n \n Please report bugs using the issue tracker at GitHub:\n \n@@ -56,28 +60,16 @@ frequently tested on them.\n Notable changes\n ===============\n \n-GUI startup crash issue\n--------------------------\n-\n-After upgrade to 0.15.0, some clients would crash at startup because a custom\n-fee setting was configured that no longer exists in the GUI. This is a minimal\n-patch to avoid this issue from occuring.\n-\n-0.15.0.1 Change log\n-====================\n \n--  #11332 `46c8d23` Fix possible crash with invalid nCustomFeeRadio in QSettings (achow101, TheBlueMatt)\n \n-Also the manpages were updated, as this was forgotten for 0.15.0.\n+0.15.1 Change log\n+=================\n \n Credits\n =======\n \n Thanks to everyone who directly contributed to this release:\n \n-- Andrew Chow\n-- Matt Corallo\n-- Jonas Schnelli\n-- Wladimir J. van der Laan\n+(fill this in)\n \n As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "53ab02cbb0242957ba3697655d848a9461ab7455",
        "filename": "doc/release-notes/release-notes-0.15.0.1.md",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62d18cdb893fea92680a6f382bb8b3e8ca157bcf/doc/release-notes/release-notes-0.15.0.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62d18cdb893fea92680a6f382bb8b3e8ca157bcf/doc/release-notes/release-notes-0.15.0.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.1.md?ref=62d18cdb893fea92680a6f382bb8b3e8ca157bcf",
        "patch": "@@ -0,0 +1,87 @@\n+Bitcoin Core version *0.15.0.1* is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.15.0.1/>\n+\n+and\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.15.0.1/>\n+\n+This is a minor bug fix for 0.15.0.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the \n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+The first time you run version 0.15.0 or higher, your chainstate database will\n+be converted to a new format, which will take anywhere from a few minutes to\n+half an hour, depending on the speed of your machine.\n+\n+The file format of `fee_estimates.dat` changed in version 0.15.0. Hence, a\n+downgrade from version 0.15.0 or upgrade to version 0.15.0 will cause all fee\n+estimates to be discarded.\n+\n+Note that the block database format also changed in version 0.8.0 and there is no\n+automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading\n+directly from 0.7.x and earlier without redownloading the blockchain is not supported.\n+However, as usual, old wallet versions are still supported.\n+\n+Downgrading warning\n+-------------------\n+\n+The chainstate database for this release is not compatible with previous\n+releases, so if you run 0.15 and then decide to switch back to any\n+older version, you will need to run the old release with the `-reindex-chainstate`\n+option to rebuild the chainstate data structures in the old format.\n+\n+If your node has pruning enabled, this will entail re-downloading and\n+processing the entire blockchain.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+frequently tested on them.\n+\n+Notable changes\n+===============\n+\n+GUI startup crash issue\n+-------------------------\n+\n+After upgrade to 0.15.0, some clients would crash at startup because a custom\n+fee setting was configured that no longer exists in the GUI. This is a minimal\n+patch to avoid this issue from occuring.\n+\n+0.15.0.1 Change log\n+====================\n+\n+-  #11332 `46c8d23` Fix possible crash with invalid nCustomFeeRadio in QSettings (achow101, TheBlueMatt)\n+\n+Also the manpages were updated, as this was forgotten for 0.15.0.\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Andrew Chow\n+- Matt Corallo\n+- Jonas Schnelli\n+- Wladimir J. van der Laan\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "29816cacf73024538d20e24a261fa9565b05801f",
        "filename": "doc/release-notes/release-notes-0.15.0.md",
        "status": "added",
        "additions": 878,
        "deletions": 0,
        "changes": 878,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62d18cdb893fea92680a6f382bb8b3e8ca157bcf/doc/release-notes/release-notes-0.15.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62d18cdb893fea92680a6f382bb8b3e8ca157bcf/doc/release-notes/release-notes-0.15.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.md?ref=62d18cdb893fea92680a6f382bb8b3e8ca157bcf",
        "patch": "@@ -0,0 +1,878 @@\n+Bitcoin Core version *0.15.0* is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.15.0/>\n+\n+This is a new major version release, including new features, various bugfixes\n+and performance improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the \n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+The first time you run version 0.15.0, your chainstate database will be converted to a\n+new format, which will take anywhere from a few minutes to half an hour,\n+depending on the speed of your machine.\n+\n+The file format of `fee_estimates.dat` changed in version 0.15.0. Hence, a\n+downgrade from version 0.15.0 or upgrade to version 0.15.0 will cause all fee\n+estimates to be discarded.\n+\n+Note that the block database format also changed in version 0.8.0 and there is no\n+automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading\n+directly from 0.7.x and earlier without redownloading the blockchain is not supported.\n+However, as usual, old wallet versions are still supported.\n+\n+Downgrading warning\n+-------------------\n+\n+The chainstate database for this release is not compatible with previous\n+releases, so if you run 0.15 and then decide to switch back to any\n+older version, you will need to run the old release with the `-reindex-chainstate`\n+option to rebuild the chainstate data structures in the old format.\n+\n+If your node has pruning enabled, this will entail re-downloading and\n+processing the entire blockchain.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+frequently tested on them.\n+\n+Notes for 0.15.0\n+================\n+\n+Current SegWit support\n+----------------------\n+\n+Version 0.15.0 supports adding a segregated witness address via the `addwitnessaddress` RPC, but\n+please note that this is a testing/expert RPC, which does not guarantee recovery from backup. Only use\n+this RPC if you know what you are doing. More complete wallet support for segregated witness is coming\n+in a next version.\n+\n+Rescanning with encrypted wallets\n+---------------------------------\n+\n+As in previous versions, when using an encrypted HD wallet, the keypool cannot be topped up without unlocking\n+the wallet. This means that currently, in order to recover from a backup of an encrypted HD wallet, the user\n+must unlock the wallet with a really long timeout and manually trigger a rescan, otherwise they risk missing\n+some keys when auto-topup cannot run. Unfortunately there is no `rescan` RPC in this version, that will be\n+included in a future version, so for now a rescan can be triggered using one of the `import*` commands, using\n+a dummy address generated by another (trusted) wallet.\n+\n+Notable changes\n+===============\n+\n+Performance Improvements\n+------------------------\n+\n+Version 0.15 contains a number of significant performance improvements, which make\n+Initial Block Download, startup, transaction and block validation much faster:\n+\n+- The chainstate database (which is used for tracking UTXOs) has been changed\n+  from a per-transaction model to a per-output model (See [PR 10195](https://github.com/bitcoin/bitcoin/pull/10195)). Advantages of this model\n+  are that it:\n+    - avoids the CPU overhead of deserializing and serializing the unused outputs;\n+    - has more predictable memory usage;\n+    - uses simpler code;\n+    - is adaptable to various future cache flushing strategies.\n+\n+  As a result, validating the blockchain during Initial Block Download (IBD) and reindex\n+  is ~30-40% faster, uses 10-20% less memory, and flushes to disk far less frequently.\n+  The only downside is that the on-disk database is 15% larger. During the conversion from the previous format\n+  a few extra gigabytes may be used.\n+- Earlier versions experienced a spike in memory usage while flushing UTXO updates to disk.\n+  As a result, only half of the available memory was actually used as cache, and the other half was\n+  reserved to accommodate flushing. This is no longer the case (See [PR 10148](https://github.com/bitcoin/bitcoin/pull/10148)), and the entirety of\n+  the available cache (see `-dbcache`) is now actually used as cache. This reduces the flushing\n+  frequency by a factor 2 or more.\n+- In previous versions, signature validation for transactions has been cached when the\n+  transaction is accepted to the mempool. Version 0.15 extends this to cache the entire script\n+  validity (See [PR 10192](https://github.com/bitcoin/bitcoin/pull/10192)). This means that if a transaction in a block has already been accepted to the\n+  mempool, the scriptSig does not need to be re-evaluated. Empirical tests show that\n+  this results in new block validation being 40-50% faster.\n+- LevelDB has been upgraded to version 1.20 (See [PR 10544](https://github.com/bitcoin/bitcoin/pull/10544)). This version contains hardware acceleration for CRC\n+  on architectures supporting SSE 4.2. As a result, synchronization and block validation are now faster.\n+- SHA256 hashing has been optimized for architectures supporting SSE 4 (See [PR 10821](https://github.com/bitcoin/bitcoin/pull/10821)). SHA256 is around\n+  50% faster on supported hardware, which results in around 5% faster IBD and block\n+  validation. In version 0.15, SHA256 hardware optimization is disabled in release builds by\n+  default, but can be enabled by using `--enable-experimental-asm` when building.\n+- Refill of the keypool no longer flushes the wallet between each key which resulted in a ~20x speedup in creating a new wallet. Part of this speedup was used to increase the default keypool to 1000 keys to make recovery more robust. (See [PR 10831](https://github.com/bitcoin/bitcoin/pull/10831)).\n+\n+Fee Estimation Improvements\n+---------------------------\n+\n+Fee estimation has been significantly improved in version 0.15, with more accurate fee estimates used by the wallet and a wider range of options for advanced users of the `estimatesmartfee` and `estimaterawfee` RPCs (See [PR 10199](https://github.com/bitcoin/bitcoin/pull/10199)).\n+\n+### Changes to internal logic and wallet behavior\n+\n+- Internally, estimates are now tracked on 3 different time horizons. This allows for longer targets and means estimates adjust more quickly to changes in conditions.\n+- Estimates can now be *conservative* or *economical*. *Conservative* estimates use longer time horizons to produce an estimate which is less susceptible to rapid changes in fee conditions. *Economical* estimates use shorter time horizons and will be more affected by short-term changes in fee conditions. Economical estimates may be considerably lower during periods of low transaction activity (for example over weekends), but may result in transactions being unconfirmed if prevailing fees increase rapidly.\n+- By default, the wallet will use conservative fee estimates to increase the reliability of transactions being confirmed within the desired target. For transactions that are marked as replaceable, the wallet will use an economical estimate by default, since the fee can be 'bumped' if the fee conditions change rapidly (See [PR 10589](https://github.com/bitcoin/bitcoin/pull/10589)).\n+- Estimates can now be made for confirmation targets up to 1008 blocks (one week).\n+- More data on historical fee rates is stored, leading to more precise fee estimates.\n+- Transactions which leave the mempool due to eviction or other non-confirmed reasons are now taken into account by the fee estimation logic, leading to more accurate fee estimates.\n+- The fee estimation logic will make sure enough data has been gathered to return a meaningful estimate. If there is insufficient data, a fallback default fee is used.\n+\n+### Changes to fee estimate RPCs\n+\n+- The `estimatefee` RPC is now deprecated in favor of using only `estimatesmartfee` (which is the implementation used by the GUI)\n+- The `estimatesmartfee` RPC interface has been changed (See [PR 10707](https://github.com/bitcoin/bitcoin/pull/10707)):\n+    - The `nblocks` argument has been renamed to `conf_target` (to be consistent with other RPC methods).\n+    - An `estimate_mode` argument has been added. This argument takes one of the following strings: `CONSERVATIVE`, `ECONOMICAL` or `UNSET` (which defaults to `CONSERVATIVE`).\n+    - The RPC return object now contains an `errors` member, which returns errors encountered during processing.\n+    - If Bitcoin Core has not been running for long enough and has not seen enough blocks or transactions to produce an accurate fee estimation, an error will be returned (previously a value of -1 was used to indicate an error, which could be confused for a feerate).\n+- A new `estimaterawfee` RPC is added to provide raw fee data. External clients can query and use this data in their own fee estimation logic.\n+\n+Multi-wallet support\n+--------------------\n+\n+Bitcoin Core now supports loading multiple, separate wallets (See [PR 8694](https://github.com/bitcoin/bitcoin/pull/8694), [PR 10849](https://github.com/bitcoin/bitcoin/pull/10849)). The wallets are completely separated, with individual balances, keys and received transactions.\n+\n+Multi-wallet is enabled by using more than one `-wallet` argument when starting Bitcoin, either on the command line or in the Bitcoin config file.\n+\n+**In Bitcoin-Qt, only the first wallet will be displayed and accessible for creating and signing transactions.** GUI selectable multiple wallets will be supported in a future version. However, even in 0.15 other loaded wallets will remain synchronized to the node's current tip in the background. This can be useful if running a pruned node, since loading a wallet where the most recent sync is beyond the pruned height results in having to download and revalidate the whole blockchain. Continuing to synchronize all wallets in the background avoids this problem.\n+\n+Bitcoin Core 0.15.0 contains the following changes to the RPC interface and `bitcoin-cli` for multi-wallet:\n+\n+* When running Bitcoin Core with a single wallet, there are **no** changes to the RPC interface or `bitcoin-cli`. All RPC calls and `bitcoin-cli` commands continue to work as before.\n+* When running Bitcoin Core with multi-wallet, all *node-level* RPC methods continue to work as before. HTTP RPC requests should be send to the normal `<RPC IP address>:<RPC port>/` endpoint, and `bitcoin-cli` commands should be run as before. A *node-level* RPC method is any method which does not require access to the wallet.\n+* When running Bitcoin Core with multi-wallet, *wallet-level* RPC methods must specify the wallet for which they're intended in every request. HTTP RPC requests should be send to the `<RPC IP address>:<RPC port>/wallet/<wallet name>/` endpoint, for example `127.0.0.1:8332/wallet/wallet1.dat/`. `bitcoin-cli` commands should be run with a `-rpcwallet` option, for example `bitcoin-cli -rpcwallet=wallet1.dat getbalance`.\n+* A new *node-level* `listwallets` RPC method is added to display which wallets are currently loaded. The names returned by this method are the same as those used in the HTTP endpoint and for the `rpcwallet` argument.\n+\n+Note that while multi-wallet is now fully supported, the RPC multi-wallet interface should be considered unstable for version 0.15.0, and there may backwards-incompatible changes in future versions.\n+\n+Replace-by-fee control in the GUI\n+---------------------------------\n+\n+Bitcoin Core has supported creating opt-in replace-by-fee (RBF) transactions\n+since version 0.12.0, and since version 0.14.0 has included a `bumpfee` RPC method to\n+replace unconfirmed opt-in RBF transactions with a new transaction that pays\n+a higher fee.\n+\n+In version 0.15, creating an opt-in RBF transaction and replacing the unconfirmed\n+transaction with a higher-fee transaction are both supported in the GUI (See [PR 9592](https://github.com/bitcoin/bitcoin/pull/9592)).\n+\n+Removal of Coin Age Priority\n+----------------------------\n+\n+In previous versions of Bitcoin Core, a portion of each block could be reserved for transactions based on the age and value of UTXOs they spent. This concept (Coin Age Priority) is a policy choice by miners, and there are no consensus rules around the inclusion of Coin Age Priority transactions in blocks. In practice, only a few miners continue to use Coin Age Priority for transaction selection in blocks. Bitcoin Core 0.15 removes all remaining support for Coin Age Priority (See [PR 9602](https://github.com/bitcoin/bitcoin/pull/9602)). This has the following implications:\n+\n+- The concept of *free transactions* has been removed. High Coin Age Priority transactions would previously be allowed to be relayed even if they didn't attach a miner fee. This is no longer possible since there is no concept of Coin Age Priority. The `-limitfreerelay` and `-relaypriority` options which controlled relay of free transactions have therefore been removed.\n+- The `-sendfreetransactions` option has been removed, since almost all miners do not include transactions which do not attach a transaction fee.\n+- The `-blockprioritysize` option has been removed.\n+- The `estimatepriority` and `estimatesmartpriority` RPCs have been removed.\n+- The `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry` and `getrawmempool` RPCs no longer return `startingpriority` and `currentpriority`.\n+- The `prioritisetransaction` RPC no longer takes a `priority_delta` argument, which is replaced by a `dummy` argument for backwards compatibility with clients using positional arguments. The RPC is still used to change the apparent fee-rate of the transaction by using the `fee_delta` argument.\n+- `-minrelaytxfee` can now be set to 0. If `minrelaytxfee` is set, then fees smaller than `minrelaytxfee` (per kB) are rejected from relaying, mining and transaction creation. This defaults to 1000 satoshi/kB.\n+- The `-printpriority` option has been updated to only output the fee rate and hash of transactions included in a block by the mining code.\n+\n+Mempool Persistence Across Restarts\n+-----------------------------------\n+\n+Version 0.14 introduced mempool persistence across restarts (the mempool is saved to a `mempool.dat` file in the data directory prior to shutdown and restores the mempool when the node is restarted). Version 0.15 allows this feature to be switched on or off using the `-persistmempool` command-line option (See [PR 9966](https://github.com/bitcoin/bitcoin/pull/9966)). By default, the option is set to true, and the mempool is saved on shutdown and reloaded on startup. If set to false, the `mempool.dat` file will not be loaded on startup or saved on shutdown.\n+\n+New RPC methods\n+---------------\n+\n+Version 0.15 introduces several new RPC methods:\n+\n+- `abortrescan` stops current wallet rescan, e.g. when triggered by an `importprivkey` call (See [PR 10208](https://github.com/bitcoin/bitcoin/pull/10208)).\n+- `combinerawtransaction` accepts a JSON array of raw transactions and combines them into a single raw transaction (See [PR 10571](https://github.com/bitcoin/bitcoin/pull/10571)).\n+- `estimaterawfee` returns raw fee data so that customized logic can be implemented to analyze the data and calculate estimates. See [Fee Estimation Improvements](#fee-estimation-improvements) for full details on changes to the fee estimation logic and interface.\n+- `getchaintxstats` returns statistics about the total number and rate of transactions\n+  in the chain (See [PR 9733](https://github.com/bitcoin/bitcoin/pull/9733)).\n+- `listwallets` lists wallets which are currently loaded. See the *Multi-wallet* section\n+  of these release notes for full details (See [Multi-wallet support](#multi-wallet-support)).\n+- `uptime` returns the total runtime of the `bitcoind` server since its last start (See [PR 10400](https://github.com/bitcoin/bitcoin/pull/10400)).\n+\n+Low-level RPC changes\n+---------------------\n+\n+- When using Bitcoin Core in multi-wallet mode, RPC requests for wallet methods must specify\n+  the wallet that they're intended for. See [Multi-wallet support](#multi-wallet-support) for full details.\n+\n+- The new database model no longer stores information about transaction\n+  versions of unspent outputs (See [Performance improvements](#performance-improvements)). This means that:\n+  - The `gettxout` RPC no longer has a `version` field in the response.\n+  - The `gettxoutsetinfo` RPC reports `hash_serialized_2` instead of `hash_serialized`,\n+    which does not commit to the transaction versions of unspent outputs, but does\n+    commit to the height and coinbase information.\n+  - The `getutxos` REST path no longer reports the `txvers` field in JSON format,\n+    and always reports 0 for transaction versions in the binary format\n+\n+- The `estimatefee` RPC is deprecated. Clients should switch to using the `estimatesmartfee` RPC, which returns better fee estimates. See [Fee Estimation Improvements](#fee-estimation-improvements) for full details on changes to the fee estimation logic and interface.\n+\n+- The `gettxoutsetinfo` response now contains `disk_size` and `bogosize` instead of\n+  `bytes_serialized`. The first is a more accurate estimate of actual disk usage, but\n+  is not deterministic. The second is unrelated to disk usage, but is a\n+  database-independent metric of UTXO set size: it counts every UTXO entry as 50 + the\n+  length of its scriptPubKey (See [PR 10426](https://github.com/bitcoin/bitcoin/pull/10426)).\n+\n+- `signrawtransaction` can no longer be used to combine multiple transactions into a single transaction. Instead, use the new `combinerawtransaction` RPC (See [PR 10571](https://github.com/bitcoin/bitcoin/pull/10571)).\n+\n+- `fundrawtransaction` no longer accepts a `reserveChangeKey` option. This option used to allow RPC users to fund a raw transaction using an key from the keypool for the change address without removing it from the available keys in the keypool. The key could then be re-used for a `getnewaddress` call, which could potentially result in confusing or dangerous behaviour (See [PR 10784](https://github.com/bitcoin/bitcoin/pull/10784)).\n+\n+- `estimatepriority` and `estimatesmartpriority` have been removed. See [Removal of Coin Age Priority](#removal-of-coin-age-priority).\n+\n+- The `listunspent` RPC now takes a `query_options` argument (see [PR 8952](https://github.com/bitcoin/bitcoin/pull/8952)), which is a JSON object\n+  containing one or more of the following members:\n+  - `minimumAmount` - a number specifying the minimum value of each UTXO\n+  - `maximumAmount` - a number specifying the maximum value of each UTXO\n+  - `maximumCount` - a number specifying the minimum number of UTXOs\n+  - `minimumSumAmount` - a number specifying the minimum sum value of all UTXOs\n+\n+- The `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry` and `getrawmempool` RPCs no longer return `startingpriority` and `currentpriority`. See [Removal of Coin Age Priority](#removal-of-coin-age-priority).\n+\n+- The `dumpwallet` RPC now returns the full absolute path to the dumped wallet. It\n+  used to return no value, even if successful (See [PR 9740](https://github.com/bitcoin/bitcoin/pull/9740)).\n+\n+- In the `getpeerinfo` RPC, the return object for each peer now returns an `addrbind` member, which contains the ip address and port of the connection to the peer. This is in addition to the `addrlocal` member which contains the ip address and port of the local node as reported by the peer (See [PR 10478](https://github.com/bitcoin/bitcoin/pull/10478)).\n+\n+- The `disconnectnode` RPC can now disconnect a node specified by node ID (as well as by IP address/port). To disconnect a node based on node ID, call the RPC with the new `nodeid` argument (See [PR 10143](https://github.com/bitcoin/bitcoin/pull/10143)).\n+\n+- The second argument in `prioritisetransaction` has been renamed from `priority_delta` to `dummy` since Bitcoin Core no longer has a concept of coin age priority. The `dummy` argument has no functional effect, but is retained for positional argument compatibility. See [Removal of Coin Age Priority](#removal-of-coin-age-priority).\n+\n+- The `resendwallettransactions` RPC throws an error if the `-walletbroadcast` option is set to false (See [PR 10995](https://github.com/bitcoin/bitcoin/pull/10995)).\n+\n+- The second argument in the `submitblock` RPC argument has been renamed from `parameters` to `dummy`. This argument never had any effect, and the renaming is simply to communicate this fact to the user (See [PR 10191](https://github.com/bitcoin/bitcoin/pull/10191))\n+  (Clients should, however, use positional arguments for `submitblock` in order to be compatible with BIP 22.)\n+\n+- The `verbose` argument of `getblock` has been renamed to `verbosity` and now takes an integer from 0 to 2. Verbose level 0 is equivalent to `verbose=false`. Verbose level 1 is equivalent to `verbose=true`. Verbose level 2 will give the full transaction details of each transaction in the output as given by `getrawtransaction`. The old behavior of using the `verbose` named argument and a boolean value is still maintained for compatibility.\n+\n+- Error codes have been updated to be more accurate for the following error cases (See [PR 9853](https://github.com/bitcoin/bitcoin/pull/9853)):\n+  - `getblock` now returns RPC_MISC_ERROR if the block can't be found on disk (for\n+  example if the block has been pruned). Previously returned RPC_INTERNAL_ERROR.\n+  - `pruneblockchain` now returns RPC_MISC_ERROR if the blocks cannot be pruned\n+  because the node is not in pruned mode. Previously returned RPC_METHOD_NOT_FOUND.\n+  - `pruneblockchain` now returns RPC_INVALID_PARAMETER if the blocks cannot be pruned\n+  because the supplied timestamp is too late. Previously returned RPC_INTERNAL_ERROR.\n+  - `pruneblockchain` now returns RPC_MISC_ERROR if the blocks cannot be pruned\n+  because the blockchain is too short. Previously returned RPC_INTERNAL_ERROR.\n+  - `setban` now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the supplied IP address\n+  or subnet is invalid. Previously returned RPC_CLIENT_NODE_ALREADY_ADDED.\n+  - `setban` now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the user tries to unban\n+  a node that has not previously been banned. Previously returned RPC_MISC_ERROR.\n+  - `removeprunedfunds` now returns RPC_WALLET_ERROR if `bitcoind` is unable to remove\n+  the transaction. Previously returned RPC_INTERNAL_ERROR.\n+  - `removeprunedfunds` now returns RPC_INVALID_PARAMETER if the transaction does not\n+  exist in the wallet. Previously returned RPC_INTERNAL_ERROR.\n+  - `fundrawtransaction` now returns RPC_INVALID_ADDRESS_OR_KEY if an invalid change\n+  address is provided. Previously returned RPC_INVALID_PARAMETER.\n+  - `fundrawtransaction` now returns RPC_WALLET_ERROR if `bitcoind` is unable to create\n+  the transaction. The error message provides further details. Previously returned\n+  RPC_INTERNAL_ERROR.\n+  - `bumpfee` now returns RPC_INVALID_PARAMETER if the provided transaction has\n+  descendants in the wallet. Previously returned RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_INVALID_PARAMETER if the provided transaction has\n+  descendants in the mempool. Previously returned RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has\n+  has been mined or conflicts with a mined transaction. Previously returned\n+  RPC_INVALID_ADDRESS_OR_KEY.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction is not\n+  BIP 125 replaceable. Previously returned RPC_INVALID_ADDRESS_OR_KEY.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has already\n+  been bumped by a different transaction. Previously returned RPC_INVALID_REQUEST.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction contains\n+  inputs which don't belong to this wallet. Previously returned RPC_INVALID_ADDRESS_OR_KEY.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has multiple change\n+  outputs. Previously returned RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has no change\n+  output. Previously returned RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the fee is too high. Previously returned\n+  RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the fee is too low. Previously returned\n+  RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the change output is too small to bump the\n+  fee. Previously returned RPC_MISC_ERROR.\n+\n+0.15.0 Change log\n+=================\n+\n+### RPC and other APIs\n+- #9485 `61a640e` ZMQ example using python3 and asyncio (mcelrath)\n+- #9894 `0496e15` remove 'label' filter for rpc command help (instagibbs)\n+- #9853 `02bd6e9` Fix error codes from various RPCs (jnewbery)\n+- #9842 `598ef9c` Fix RPC failure testing (continuation of #9707) (jnewbery)\n+- #10038 `d34995a` Add mallocinfo mode to `getmemoryinfo` RPC (laanwj)\n+- #9500 `3568b30` [Qt][RPC] Autocomplete commands for 'help' command in debug console (achow101)\n+- #10056 `e6156a0` [zmq] Call va_end() on va_start()ed args (kallewoof)\n+- #10086 `7438cea` Trivial: move rpcserialversion into RPC option group (jlopp)\n+- #10150 `350b224` [rpc] Add logging rpc (jnewbery)\n+- #10208 `393160c` [wallet] Rescan abortability (kallewoof)\n+- #10143 `a987def` [net] Allow disconnectnode RPC to be called with node id (jnewbery)\n+- #10281 `0e8499c` doc: Add RPC interface guidelines (laanwj)\n+- #9733 `d4732f3` Add getchaintxstats RPC (sipa)\n+- #10310 `f4b15e2` [doc] Add hint about getmempoolentry to getrawmempool help (kallewoof)\n+- #8704 `96c850c` [RPC] Transaction details in getblock (achow101)\n+- #8952 `9390845` Add query options to listunspent RPC call (pedrobranco)\n+- #10413 `08ac35a` Fix docs (there's no rpc command setpaytxfee) (RHavar)\n+- #8384 `e317c0d` Add witness data output to TxInError messages (instagibbs)\n+- #9571 `4677151` RPC: getblockchaininfo returns BIP signaling statistics  (pinheadmz)\n+- #10450 `ef2d062` Fix bumpfee rpc \"errors\" return value (ryanofsky)\n+- #10475 `39039b1` [RPC] getmempoolinfo mempoolminfee is a BTC/KB feerate (instagibbs)\n+- #10478 `296928e` rpc: Add listen address to incoming connections in `getpeerinfo` (laanwj)\n+- #10403 `08d0390` Fix importmulti failure to return rescan errors (ryanofsky)\n+- #9740 `9fec4da` Add friendly output to dumpwallet (aideca)\n+- #10426 `16f6c98` Replace bytes_serialized with bogosize (sipa)\n+- #10252 `980deaf` RPC/Mining: Restore API compatibility for prioritisetransaction (luke-jr)\n+- #9672 `46311e7` Opt-into-RBF for RPC & bitcoin-tx (luke-jr)\n+- #10481 `9c248e3` Decodehextx scripts sanity check  (achow101)\n+- #10488 `fa1f106` Note that the prioritizetransaction dummy value is deprecated, and has no meaning (TheBlueMatt)\n+- #9738 `c94b89e` gettxoutproof() should return consistent result (jnewbery)\n+- #10191 `00350bd` [trivial] Rename unused RPC arguments 'dummy' (jnewbery)\n+- #10627 `b62b4c8` fixed listunspent rpc convert parameter (tnakagawa)\n+- #10412 `bef02fb` Improve wallet rescan API (ryanofsky)\n+- #10400 `1680ee0` [RPC] Add an uptime command that displays the amount of time (in seconds) bitcoind has been running (rvelhote)\n+- #10683 `d81bec7` rpc: Move the `generate` RPC call to rpcwallet (laanwj)\n+- #10710 `30bc0f6` REST/RPC example update (Mirobit)\n+- #10747 `9edda0c` [rpc] fix verbose argument for getblock in bitcoin-cli (jnewbery)\n+- #10589 `104f5f2` More economical fee estimates for RBF and RPC options to control (morcos)\n+- #10543 `b27b004` Change API to estimaterawfee (morcos)\n+- #10807 `afd2fca` getbalance example covers at least 6 confirms (instagibbs)\n+- #10707 `75b5643` Better API for estimatesmartfee RPC  (morcos)\n+- #10784 `9e8d6a3` Do not allow users to get keys from keypool without reserving them (TheBlueMatt)\n+- #10857 `d445a2c` [RPC] Add a deprecation warning to getinfo's output (achow101)\n+- #10571 `adf170d` [RPC]Move transaction combining from signrawtransaction to new RPC (achow101)\n+- #10783 `041dad9` [RPC] Various rpc argument fixes (instagibbs)\n+- #9622 `6ef3c7e` [rpc] listsinceblock should include lost transactions when parameter is a reorg'd block (kallewoof)\n+- #10799 `8537187` Prevent user from specifying conflicting parameters to fundrawtx (TheBlueMatt)\n+- #10931 `0b11a07` Fix misleading \"Method not found\" multiwallet errors (ryanofsky)\n+- #10788 `f66c596` [RPC] Fix addwitnessaddress by replacing ismine with producesignature (achow101)\n+- #10999 `627c3c0` Fix amounts formatting in `decoderawtransaction` (laanwj)\n+- #11002 `4268426` [wallet] return correct error code from resendwallettransaction (jnewbery)\n+- #11029 `96a63a3` [RPC] trivial: gettxout no longer shows version of tx (FelixWeis)\n+- #11083 `6c2b008` Fix combinerawtransaction RPC help result section (jonasnick)\n+- #11027 `07164bb` [RPC] Only return hex field once in getrawtransaction (achow101)\n+- #10698 `5af6572` Be consistent in calling transactions \"replaceable\" for Opt-In RBF (TheBlueMatt)\n+\n+### Block and transaction handling\n+- #9801 `a8c5751` Removed redundant parameter from mempool.PrioritiseTransaction (gubatron)\n+- #9819 `1efc99c` Remove harmless read of unusued priority estimates (morcos)\n+- #9822 `b7547fa` Remove block file location upgrade code (benma)\n+- #9602 `30ff3a2` Remove coin age priority and free transactions - implementation (morcos)\n+- #9548 `47510ad` Remove min reasonable fee (morcos)\n+- #10249 `c73af54` Switch CCoinsMap from boost to std unordered_map (sipa)\n+- #9966 `2a183de` Control mempool persistence using a command line parameter (jnewbery)\n+- #10199 `318ea50` Better fee estimates (morcos)\n+- #10196 `bee3529` Bugfix: PrioritiseTransaction updates the mempool tx counter (sdaftuar)\n+- #10195 `1088b02` Switch chainstate db and cache to per-txout model (sipa)\n+- #10284 `c2ab38b` Always log debug information for fee calculation in CreateTransaction (morcos)\n+- #10503 `efbcf2b` Use REJECT_DUPLICATE for already known and conflicted txn (sipa)\n+- #10537 `b3eb0d6` Few Minor per-utxo assert-semantics re-adds and tweak (TheBlueMatt)\n+- #10626 `8c841a3` doc: Remove outdated minrelaytxfee comment (MarcoFalke)\n+- #10559 `234ffc6` Change semantics of HaveCoinInCache to match HaveCoin (morcos)\n+- #10581 `7878353` Simplify return values of GetCoin/HaveCoin(InCache) (sipa)\n+- #10684 `a381f6a` Remove no longer used mempool.exists(outpoint) (morcos)\n+- #10148 `d4e551a` Use non-atomic flushing with block replay (sipa)\n+- #10685 `30c2130` Clarify CCoinsViewMemPool documentation (TheBlueMatt)\n+- #10558 `90a002e` Address nits from per-utxo change (morcos)\n+- #10706 `6859ad2` Improve wallet fee logic and fix GUI bugs (morcos)\n+- #10526 `754aa02` Force on-the-fly compaction during pertxout upgrade (sipa)\n+- #10985 `d896d5c` Add undocumented -forcecompactdb to force LevelDB compactions (sipa)\n+- #10292 `e4bbd3d` Improved efficiency in COutPoint constructors (mm-s)\n+- #10290 `8d6d43e` Add -stopatheight for benchmarking (sipa)\n+\n+### P2P protocol and network code\n+- #9726 `7639d38` netbase: Do not print an error on connection timeouts through proxy (laanwj)\n+- #9805 `5b583ef` Add seed.btc.petertodd.org to mainnet DNS seeds (petertodd)\n+- #9861 `22f609f` Trivial: Debug log ambiguity fix for peer addrs (keystrike)\n+- #9774 `90cb2a2` Enable host lookups for -proxy and -onion parameters (jmcorgan)\n+- #9558 `7b585cf` Clarify assumptions made about when BlockCheck is called (TheBlueMatt)\n+- #10135 `e19586a` [p2p] Send the correct error code in reject messages (jnewbery)\n+- #9665 `eab00d9` Use cached [compact] blocks to respond to getdata messages (TheBlueMatt)\n+- #10215 `a077a90` Check interruptNet during dnsseed lookups (TheBlueMatt)\n+- #10234 `faf2dea` [net] listbanned RPC and QT should show correct banned subnets (jnewbery)\n+- #10134 `314ebdf` [qa] Fixes segwit block relay test after inv-direct-fetch was disabled (sdaftuar)\n+- #10351 `3f57c55` removed unused code in INV message (Greg-Griffith)\n+- #10061 `ae78609` [net] Added SetSocketNoDelay() utility function (tjps)\n+- #10408 `28c6e8d` Net: Improvements to Tor control port parser (str4d)\n+- #10460 `5c63d66` Broadcast address every day, not 9 hours (sipa)\n+- #10471 `400fdd0` Denote functions CNode::GetRecvVersion() and CNode::GetRefCount()  as const (pavlosantoniou)\n+- #10345 `67700b3` [P2P] Timeout for headers sync (sdaftuar)\n+- #10564 `8d9f45e` Return early in IsBanned (gmaxwell)\n+- #10587 `de8db47` Net: Fix resource leak in ReadBinaryFile(...) (practicalswift)\n+- #9549 `b33ca14` [net] Avoid possibility of NULL pointer dereference in MarkBlockAsInFlight(...) (practicalswift)\n+- #10446 `2772dc9` net: avoid extra dns query per seed (theuni)\n+- #10824 `9dd6a2b` Avoid unnecessary work in SetNetworkActive (promag)\n+- #10948 `df3a6f4` p2p: Hardcoded seeds update pre-0.15 branch (laanwj)\n+- #10977 `02f4c4a` [net] Fix use of uninitialized value in getnetworkinfo(const JSONRPCRequest&) (practicalswift)\n+- #10982 `c8b62c7` Disconnect network service bits 6 and 8 until Aug 1, 2018 (TheBlueMatt)\n+- #11012 `0e5cff6` Make sure to clean up mapBlockSource if we've already seen the block (theuni)\n+\n+### Validation\n+- #9725 `67023e9` CValidationInterface Cleanups (TheBlueMatt)\n+- #10178 `2584925` Remove CValidationInterface::UpdatedTransaction (TheBlueMatt)\n+- #10201 `a6548a4` pass Consensus::Params& to functions in validation.cpp and make them static (mariodian)\n+- #10297 `431a548` Simplify DisconnectBlock arguments/return value (sipa)\n+- #10464 `f94b7d5` Introduce static DoWarning (simplify UpdateTip) (jtimon)\n+- #10569 `2e7d8f8` Fix stopatheight (achow101)\n+- #10192 `2935b46` Cache full script execution results in addition to signatures (TheBlueMatt)\n+- #10179 `21ed30a` Give CValidationInterface Support for calling notifications on the CScheduler Thread (TheBlueMatt)\n+- #10557 `66270a4` Make check to distinguish between orphan txs and old txs more efficient (morcos)\n+- #10775 `7c2400c` nCheckDepth chain height fix (romanornr)\n+- #10821 `16240f4` Add SSE4 optimized SHA256 (sipa)\n+- #10854 `04d395e` Avoid using sizes on non-fixed-width types to derive protocol constants (gmaxwell)\n+- #10945 `2a50b11` Update defaultAssumeValid according to release-process.md (gmaxwell)\n+- #10986 `2361208` Update chain transaction statistics (sipa)\n+- #11028 `6bdf4b3` Avoid masking of difficulty adjustment errors by checkpoints (sipa)\n+- #9533 `cb598cf` Allow non-power-of-2 signature cache sizes (sipa)\n+- #9208 `acd9957` Improve DisconnectTip performance (sdaftuar)\n+- #10618 `f90603a` Remove confusing MAX_BLOCK_BASE_SIZE (gmaxwell)\n+- #10758 `bd92424` Fix some chainstate-init-order bugs (TheBlueMatt)\n+- #10550 `b7296bc` Don't return stale data from CCoinsViewCache::Cursor() (ryanofsky)\n+- #10998 `2507fd5` Fix upgrade cancel warnings (TheBlueMatt)\n+- #9868 `cbdb473` Abstract out the command line options for block assembly (sipa)\n+\n+### Build system\n+- #9727 `5f0556d` Remove fallbacks for boost_filesystem < v3 (laanwj)\n+- #9788 `50a2265` gitian: bump descriptors for master (theuni)\n+- #9794 `7ca2f54` Minor update to qrencode package builder (mitchellcash)\n+- #9514 `2cc0df1` release: Windows signing script (theuni)\n+- #9921 `8b789d8` build: Probe MSG_DONTWAIT in the same way as MSG_NOSIGNAL (laanwj)\n+- #10011 `32d1b34` build: Fix typo s/HAVE_DONTWAIT/HAVE_MSG_DONTWAIT (laanwj)\n+- #9946 `90dd9e6` Fix build errors if spaces in path or parent directory (pinheadmz)\n+- #10136 `81da4c7` build: Disable Wshadow warning (laanwj)\n+- #10166 `64962ae` Ignore Doxyfile generated from Doxyfile.in template (paveljanik)\n+- #10239 `0416ea9` Make Boost use std::atomic internally (sipa)\n+- #10228 `27faa6c` build: regenerate bitcoin-config.h as necessary (theuni)\n+- #10273 `8979f45` [scripts] Minor improvements to `macdeployqtplus` script (chrisgavin)\n+- #10325 `a26280b` 0.15.0 Depends Updates (fanquake)\n+- #10328 `79aeff6` Update contrib/debian to latest Ubuntu PPA upload (TheBlueMatt)\n+- #7522 `d25449f` Bugfix: Only use git for build info if the repository is actually the right one (luke-jr)\n+- #10489 `e654d61` build: silence gcc7's implicit fallthrough warning (theuni)\n+- #10549 `ad1a13e` Avoid printing generic and duplicated \"checking for QT\" during ./configure (drizzt)\n+- #10628 `8465b68` [depends] expat 2.2.1 (fanquake)\n+- #10806 `db825d2` build: verify that the assembler can handle crc32 functions (theuni)\n+- #10766 `b4d03be` Building Environment: Set ARFLAGS to cr (ReneNyffenegger)\n+- #10803 `91edda8` Explicitly search for bdb5.3 (pstratem)\n+- #10855 `81560b0` random: only use getentropy on openbsd (theuni)\n+- #10508 `1caafa6` Run Qt wallet tests on travis (ryanofsky)\n+- #10851 `e222618` depends: fix fontconfig with newer glibc (theuni)\n+- #10971 `88b1e4b` build: fix missing sse42 in depends builds (theuni)\n+- #11097 `129b03f` gitian: quick hack to fix version string in releases (theuni)\n+- #10039 `919aaf6` Fix compile errors with Qt 5.3.2 and Boost 1.55.0 (ryanofsky)\n+- #10168 `7032021` Fix build warning from #error text (jnewbery)\n+- #10301 `318392c` Check if sys/random.h is required for getentropy (jameshilliard)\n+\n+### GUI\n+- #9724 `1a9fd5c` Qt/Intro: Add explanation of IBD process (luke-jr)\n+- #9834 `b00ba62` qt: clean up initialize/shutdown signals (benma)\n+- #9481 `ce01e62` [Qt] Show more significant warning if we fall back to the default fee (jonasschnelli)\n+- #9974 `b9f930b` Add basic Qt wallet test (ryanofsky)\n+- #9690 `a387d3a` Change 'Clear' button string to 'Reset' (da2x)\n+- #9592 `9c7b7cf` [Qt] Add checkbox in the GUI to opt-in to RBF when creating a transaction (ryanofsky)\n+- #10098 `2b477e6` Make qt wallet test compatible with qt4 (ryanofsky)\n+- #9890 `1fa4ae6` Add a button to open the config file in a text editor (ericshawlinux)\n+- #10156 `51833a1` Fix for issues with startup and multiple monitors on windows (AllanDoensen)\n+- #10177 `de01da7` Changed \"Send\" button default status from true to false (KibbledJiveElkZoo)\n+- #10221 `e96486c` Stop treating coinbase outputs differently in GUI: show them at 1conf (TheBlueMatt)\n+- #10231 `987a6c0` [Qt] Reduce a significant cs_main lock freeze (jonasschnelli)\n+- #10242 `f6f3b58` [qt] Don't call method on null WalletModel object (ryanofsky)\n+- #10093 `a3e756b` [Qt] Don't add arguments of sensitive command to console window (jonasschnelli)\n+- #10362 `95546c8` [GUI] Add OSX keystroke to RPCConsole info (spencerlievens)\n+- #9697 `962cd3f` [Qt] simple fee bumper with user verification (jonasschnelli)\n+- #10390 `e477516` [wallet] remove minimum total fee option (instagibbs)\n+- #10420 `4314544` Add Qt tests for wallet spends & bumpfee (ryanofsky)\n+- #10454 `c1c9a95` Fix broken q4 test build (ryanofsky)\n+- #10449 `64beb13` Overhaul Qt fee bumper (jonasschnelli)\n+- #10582 `7c72fb9` Pass in smart fee slider value to coin control dialog (morcos)\n+- #10673 `4c72cc3` [qt] Avoid potential null pointer dereference in TransactionView::exportClicked() (practicalswift)\n+- #10769 `8fdd23a` [Qt] replace fee slider with a Dropdown, extend conf. targets (jonasschnelli)\n+- #10870 `412b466` [Qt] Use wallet 0 in rpc console if running with multiple wallets (jonasschnelli)\n+- #10988 `a9dd111` qt: Increase BLOCK_CHAIN_SIZE constants (laanwj)\n+- #10644 `e292140` Slightly overhaul NSI pixmaps (jonasschnelli)\n+- #10660 `0c3542e` Allow to cancel the txdb upgrade via splashscreen keypress 'q' (jonasschnelli)\n+\n+### Wallet\n+- #9359 `f7ec7cf` Add test for CWalletTx::GetImmatureCredit() returning stale values (ryanofsky)\n+- #9576 `56ab672` [wallet] Remove redundant initialization (practicalswift)\n+- #9333 `fa625b0` Document CWalletTx::mapValue entries and remove erase of nonexistent \"version\" entry (ryanofsky)\n+- #9906 `72fb515` Disallow copy constructor CReserveKeys (instagibbs)\n+- #9369 `3178b2c` Factor out CWallet::nTimeSmart computation into a method (ryanofsky)\n+- #9830 `afcd7c0` Add safe flag to listunspent result (NicolasDorier)\n+- #9993 `c49355c` Initialize nRelockTime (pstratem)\n+- #9818 `3d857f3` Save watch only key timestamps when reimporting keys (ryanofsky)\n+- #9294 `f34cdcb` Use internal HD chain for change outputs (hd split) (jonasschnelli)\n+- #10164 `e183ea2` Wallet: reduce excess logic InMempool() (kewde)\n+- #10186 `c9ff4f8` Remove SYNC_TRANSACTION_NOT_IN_BLOCK magic number (jnewbery)\n+- #10226 `64c45aa` wallet: Use boost to more portably ensure -wallet specifies only a filename (luke-jr)\n+- #9827 `c91ca0a` Improve ScanForWalletTransactions return value (ryanofsky)\n+- #9951 `fa1ac28` Wallet database handling abstractions/simplifications (laanwj)\n+- #10265 `c29a0d4` [wallet] [moveonly] Check non-null pindex before potentially referencing (kallewoof)\n+- #10283 `a550f6e` Cleanup: reduce to one GetMinimumFee call signature (morcos)\n+- #10294 `e2b99b1` [Wallet] unset change position when there is no change (instagibbs)\n+- #10115 `d3dce0e` Avoid reading the old hd master key during wallet encryption (TheBlueMatt)\n+- #10341 `18c9deb` rpc/wallet: Workaround older UniValue which returns a std::string temporary for get_str (luke-jr)\n+- #10308 `94e5227` [wallet] Securely erase potentially sensitive keys/values (tjps)\n+- #10257 `ea1fd43` [test] Add test for getmemoryinfo (jimmysong)\n+- #10295 `ce8176d` [qt] Move some WalletModel functions into CWallet (ryanofsky)\n+- #10506 `7cc2c67` Fix bumpfee test after #10449 (ryanofsky)\n+- #10500 `098b01d` Avoid CWalletTx copies in GetAddressBalances and GetAddressGroupings (ryanofsky)\n+- #10455 `0747d33` Simplify feebumper minimum fee code slightly (ryanofsky)\n+- #10522 `2805d60` [wallet] Remove unused variables (practicalswift)\n+- #8694 `177433a` Basic multiwallet support (luke-jr)\n+- #10598 `7a74f88` Supress struct/class mismatch warnings introduced in #10284 (paveljanik)\n+- #9343 `209eef6` Don't create change at dust limit (morcos)\n+- #10744 `ed88e31` Use method name via __func__ macro (darksh1ne)\n+- #10712 `e8b9523` Add change output if necessary to reduce excess fee (morcos)\n+- #10816 `1c011ff` Properly forbid -salvagewallet and -zapwallettxes for multi wallet (morcos)\n+- #10235 `5cfdda2` Track keypool entries as internal vs external in memory (TheBlueMatt)\n+- #10330 `bf0a08b` [wallet] fix zapwallettxes interaction with persistent mempool (jnewbery)\n+- #10831 `0b01935` Batch flushing operations to the walletdb during top up and increase keypool size (gmaxwell)\n+- #10795 `7b6e8bc` No longer ever reuse keypool indexes (TheBlueMatt)\n+- #10849 `bde4f93` Multiwallet: simplest endpoint support (jonasschnelli)\n+- #10817 `9022aa3` Redefine Dust and add a discard_rate (morcos)\n+- #10883 `bf3b742` Rename -usewallet to -rpcwallet (morcos)\n+- #10604 `420238d` [wallet] [tests] Add listwallets RPC, include wallet name in `getwalletinfo` and add multiwallet test (jnewbery)\n+- #10885 `70888a3` Reject invalid wallets (promag)\n+- #10949 `af56397` Clarify help message for -discardfee (morcos)\n+- #10942 `2e857bb` Eliminate fee overpaying edge case when subtracting fee from recipients (morcos)\n+- #10995 `fa64636` Fix resendwallettransactions assert failure if -walletbroadcast=0 (TheBlueMatt)\n+- #11022 `653a46d` Basic keypool topup (jnewbery)\n+- #11081 `9fe1f6b` Add length check for CExtKey deserialization (jonasschnelli, guidovranken)\n+- #11044 `4ef8374` [wallet] Keypool topup cleanups (jnewbery)\n+- #11145 `e51bb71` Fix rounding bug in calculation of minimum change (morcos)\n+- #9605 `779f2f9` Use CScheduler for wallet flushing, remove ThreadFlushWalletDB (TheBlueMatt)\n+- #10108 `4e3efd4` ApproximateBestSubset should take inputs by reference, not value (RHavar)\n+\n+### Tests and QA\n+- #9744 `8efd1c8` Remove unused module from rpc-tests (34ro)\n+- #9657 `7ff4a53` Improve rpc-tests.py (jnewbery)\n+- #9766 `7146d96` Add --exclude option to rpc-tests.py (jnewbery)\n+- #9577 `d6064a8` Fix docstrings in qa tests (jnewbery)\n+- #9823 `a13a417` qa: Set correct path for binaries in rpc tests (MarcoFalke)\n+- #9847 `6206252` Extra test vector for BIP32 (sipa)\n+- #9350 `88c2ae3` [Trivial] Adding label for amount inside of tx_valid/tx_invalid.json (Christewart)\n+- #9888 `36afd4d` travis: Verify commits only for one target (MarcoFalke)\n+- #9904 `58861ad` test: Fail if InitBlockIndex fails (laanwj)\n+- #9828 `67c5cc1` Avoid -Wshadow warnings in wallet_tests (ryanofsky)\n+- #9832 `48c3429` [qa] assert_start_raises_init_error (NicolasDorier)\n+- #9739 `9d5fcbf` Fix BIP68 activation test (jnewbery)\n+- #9547 `d32581c` bench: Assert that division by zero is unreachable (practicalswift)\n+- #9843 `c78adbf` Fix segwit getblocktemplate test (jnewbery)\n+- #9929 `d5ce14e` tests: Delete unused function _rpchost_to_args (laanwj)\n+- #9555 `19be26a` [test] Avoid reading a potentially uninitialized variable in tx_invalid-test (transaction_tests.cpp) (practicalswift)\n+- #9945 `ac23a7c` Improve logging in bctest.py if there is a formatting mismatch (jnewbery)\n+- #9768 `8910b47` [qa] Add logging to test_framework.py (jnewbery)\n+- #9972 `21833f9` Fix extended rpc tests broken by #9768 (jnewbery)\n+- #9977 `857d1e1` QA: getblocktemplate_longpoll.py should always use >0 fee tx (sdaftuar)\n+- #9970 `3cc13ea` Improve readability of segwit.py, smartfees.py (sdaftuar)\n+- #9497 `2c781fb` CCheckQueue Unit Tests (JeremyRubin)\n+- #10024 `9225de2` [trivial] Use log.info() instead of print() in remaining functional test cases (jnewbery)\n+- #9956 `3192e52` Reorganise qa directory (jnewbery)\n+- #10017 `02d64bd` combine_logs.py - aggregates log files from multiple bitcoinds during functional tests (jnewbery)\n+- #10047 `dfef6b6` [tests] Remove unused variables and imports (practicalswift)\n+- #9701 `a230b05` Make bumpfee tests less fragile (ryanofsky)\n+- #10053 `ca20923` [test] Allow functional test cases to be skipped (jnewbery)\n+- #10052 `a0b1e57` [test] Run extended tests once daily in Travis (jnewbery)\n+- #10069 `1118493` [QA] Fix typo in fundrawtransaction test (NicolasDorier)\n+- #10083 `c044f03` [QA] Renaming rawTx into rawtx (NicolasDorier)\n+- #10073 `b1a4f27` Actually run assumevalid.py (jnewbery)\n+- #9780 `c412fd8` Suppress noisy output from qa tests in Travis (jnewbery)\n+- #10096 `79af9fb` Check that all test scripts in test/functional are being run (jnewbery)\n+- #10076 `5b029aa` [qa] combine_logs: Use ordered list for logfiles (MarcoFalke)\n+- #10107 `f2734c2` Remove unused variable. Remove accidental trailing semicolons in Python code (practicalswift)\n+- #10109 `8ac8041` Remove SingleNodeConnCB (jnewbery)\n+- #10114 `edc62c9` [tests] sync_with_ping should assert that ping hasn't timed out (jnewbery)\n+- #10128 `427d2fd` Speed Up CuckooCache tests (JeremyRubin)\n+- #10072 `12af74b` Remove sources of unreliablility in extended functional tests (jnewbery)\n+- #10077 `ebfd653` [qa] Add setnetworkactive smoke test (MarcoFalke)\n+- #10152 `080d7c7` [trivial] remove unused line in Travis config (jnewbery)\n+- #10159 `df1ca9e` [tests] color test results and sort alphabetically (jnewbery)\n+- #10124 `88799ea` [test] Suppress test logging spam (jnewbery)\n+- #10142 `ed09dd3` Run bitcoin_test-qt under minimal QPA platform (ryanofsky)\n+- #9949 `a27dbc5` [bench] Avoid function call arguments which are pointers to uninitialized values (practicalswift)\n+- #10187 `b44adf9` tests: Fix test_runner return value in case of skipped test (laanwj)\n+- #10197 `d86bb07` [tests] Functional test warnings (jnewbery)\n+- #10219 `9111df9` Tests: Order Python Tests Differently (jimmysong)\n+- #10229 `f3db4c6` Tests: Add test for getdifficulty (jimmysong)\n+- #10224 `2723bcd` [test] Add test for getaddednodeinfo (jimmysong)\n+- #10023 `c530c15` [tests] remove maxblocksinflight.py (functionality covered by other test) (jnewbery)\n+- #10097 `1b25b6d` Move zmq test skipping logic into individual test case (jnewbery)\n+- #10272 `54e2d87` [Tests] Prevent warning: variable 'x' is uninitialized (paveljanik)\n+- #10225 `e0a7e19` [test] Add aborttrescan tests (kallewoof)\n+- #10278 `8254a8a` [test] Add Unit Test for GetListenPort (jimmysong)\n+- #10280 `47535d7` [test] Unit test amount.h/amount.cpp (jimmysong)\n+- #10256 `80c3a73` [test] Add test for gettxout to wallet.py (jimmysong)\n+- #10264 `492d22f` [test] Add tests for getconnectioncount, getnettotals and ping (jimmysong)\n+- #10169 `8f3e384` [tests] Remove func test code duplication (jnewbery)\n+- #10198 `dc8fc0c` [tests] Remove is_network_split from functional test framework (jnewbery)\n+- #10255 `3c5e6c9` [test] Add test for listaddressgroupings (jimmysong)\n+- #10137 `75171f0` Remove unused import. Remove accidental trailing semicolons (practicalswift)\n+- #10307 `83073de` [tests] allow zmq test to be run in out-of-tree builds (jnewbery)\n+- #10344 `e927483` [tests] Fix abandonconflict.py intermittency (jnewbery)\n+- #10318 `170bc2c` [tests] fix wait_for_inv() (jnewbery)\n+- #10171 `fff72de` [tests] Add node methods to test framework (jnewbery)\n+- #10352 `23d78c4` test: Add elapsed time to RPC tracing (laanwj)\n+- #10342 `6a796b2` [tests] Improve mempool_persist test (jnewbery)\n+- #10287 `776ba23` [tests] Update Unit Test for addrman.h/addrman.cpp (jimmysong)\n+- #10365 `7ee5236` [tests] increase timeouts in sendheaders test (jnewbery)\n+- #10361 `f6241b3` qa: disablewallet: Check that wallet is really disabled (MarcoFalke)\n+- #10371 `4b766fc` [tests] Clean up addrman_tests.cpp (jimmysong)\n+- #10253 `87abe20` [test] Add test for getnetworkhashps (jimmysong)\n+- #10376 `8bd16ee` [tests] fix disconnect_ban intermittency (jnewbery)\n+- #10374 `5411997` qa: Warn when specified test is not found (MarcoFalke)\n+- #10405 `0542978` tests: Correct testcase in script_tests.json for large number OP_EQUAL (laanwj)\n+- #10429 `6b99daf` tests: fix spurious addrman test failure (theuni)\n+- #10433 `8e57256` [tests] improve tmpdir structure (jnewbery)\n+- #10415 `217b416` [tests] Speed up fuzzing by ~200x when using afl-fuzz (practicalswift)\n+- #10445 `b4b057a` Add test for empty chain and reorg consistency for gettxoutsetinfo (gmaxwell)\n+- #10423 `1aefc94` [tests] skipped tests should clean up after themselves (jnewbery)\n+- #10359 `329fc1d` [tests] functional tests should call BitcoinTestFramework start/stop node methods (jnewbery)\n+- #10514 `e103b3f` Bugfix: missing == 0 after randrange (sipa)\n+- #10515 `c871f32` [test] Add test for getchaintxstats (jimmysong)\n+- #10509 `bea5b00` Remove xvfb configuration from travis (ryanofsky)\n+- #10535 `30853e1` [qa] fundrawtx: Fix shutdown race (MarcoFalke)\n+- #9909 `300f8e7` tests: Add FindEarliestAtLeast test for edge cases (ryanofsky)\n+- #10331 `75e898c` Share config between util and functional tests (jnewbery)\n+- #10321 `e801084` Use FastRandomContext for all tests (sipa)\n+- #10524 `6c2d81f` [tests] Remove printf(...) (practicalswift)\n+- #10547 `71ab6e5` [tests] Use FastRandomContext instead of boost::random::{mt19937,uniform_int_distribution} (practicalswift)\n+- #10551 `6702617` [Tests] Wallet encryption functional tests (achow101)\n+- #10555 `643fa0b` [tests] various improvements to zmq_test.py (jnewbery)\n+- #10533 `d083bd9` [tests] Use cookie auth instead of rpcuser and rpcpassword (achow101)\n+- #10632 `c68a9a6` qa: Add stopatheight test (MarcoFalke)\n+- #10636 `4bc853b` [qa] util: Check return code after closing bitcoind proc (MarcoFalke)\n+- #10662 `e0a7801` Initialize randomness in benchmarks (achow101)\n+- #10612 `7c87a9c` The young person's guide to the test_framework (jnewbery)\n+- #10659 `acb1153` [qa] blockchain: Pass on closed connection during generate call (MarcoFalke)\n+- #10690 `416af3e` [qa] Bugfix: allow overriding extra_args in ComparisonTestFramework (sdaftuar)\n+- #10556 `65cc7aa` Move stop/start functions from utils.py into BitcoinTestFramework (jnewbery)\n+- #10704 `dd07f47` [tests] nits in dbcrash.py (jnewbery)\n+- #10743 `be82498` [test] don't run dbcrash.py on Travis (jnewbery)\n+- #10761 `d3b5870` [tests] fix replace_by_fee.py (jnewbery)\n+- #10759 `1d4805c` Fix multi_rpc test for hosts that dont default to utf8 (TheBlueMatt)\n+- #10190 `e4f226a` [tests] mining functional tests (including regression test for submitblock) (jnewbery)\n+- #10739 `1fc783f` test: Move variable `state` down where it is used (paveljanik)\n+- #9980 `fee0d80` Fix mem access violation merkleblock (Christewart)\n+- #10893 `0c173a1` [QA] Avoid running multiwallet.py twice (jonasschnelli)\n+- #10927 `9d5e8f9` test: Make sure wallet.backup is created in temp path (laanwj)\n+- #10899 `f29d5db` [test] Qt: Use _putenv_s instead of setenv on Windows builds (brianmcmichael)\n+- #10912 `5c8eb79` [tests] Fix incorrect memory_cleanse(\u2026) call in crypto_tests.cpp (practicalswift)\n+- #11001 `fa8a063` [tests] Test disconnecting unsupported service bits logic (jnewbery)\n+- #10695 `929fd72` [qa] Rewrite BIP65/BIP66 functional tests (sdaftuar)\n+- #10963 `ecd2135` [bench] Restore format state of cout after printing with std::fixed/setprecision (practicalswift)\n+- #11025 `e5d26e4` qa: Fix inv race in example_test (MarcoFalke)\n+- #10765 `2c811e0` Tests: address placement should be deterministic by default (ReneNyffenegger)\n+- #11000 `ac016e1` test: Add resendwallettransactions functional tests (promag)\n+- #11032 `aeb3175` [qa] Fix block message processing error in sendheaders.py (sdaftuar)\n+- #10105 `0b9fb68` [tests] fixup - make all Travis test runs quiet, non just cron job runs (jnewbery)\n+- #10222 `6ce7337` [tests] test_runner - check unicode (jnewbery)\n+- #10327 `35da2ae` [tests] remove import-abort-rescan.py (jnewbery)\n+- #11023 `bf74d37` [tests] Add option to attach a python debugger if functional test fails (jnewbery)\n+- #10565 `8c2098a` [coverage] Remove subtrees and benchmarks from coverage report (achow101)\n+\n+### Miscellaneous\n+- #9871 `be8ba2c` Add a tree sha512 hash to merge commits (sipa)\n+- #9821 `d19d45a` util: Specific GetOSRandom for Linux/FreeBSD/OpenBSD (laanwj)\n+- #9903 `ba80a68` Docs: add details to -rpcclienttimeout doc (ian-kelling)\n+- #9910 `53c300f` Docs: correct and elaborate -rpcbind doc (ian-kelling)\n+- #9905 `01b7cda` [contrib] gh-merge: Move second sha512 check to the end (MarcoFalke)\n+- #9880 `4df8213` Verify Tree-SHA512s in merge commits, enforce sigs are not SHA1 (TheBlueMatt)\n+- #9932 `00c13ea` Fix verify-commits on travis and always check top commit's tree (TheBlueMatt)\n+- #9952 `6996e06` Add historical release notes for 0.14.0 (laanwj)\n+- #9940 `fa99663` Fix verify-commits on OSX, update for new bad Tree-SHA512, point travis to different keyservers (TheBlueMatt)\n+- #9963 `8040ae6` util: Properly handle errors during log message formatting (laanwj)\n+- #9984 `cce056d` devtools: Make github-merge compute SHA512 from git, instead of worktree (laanwj)\n+- #9995 `8bcf934` [doc] clarify blockchain size and pruning (askmike)\n+- #9734 `0c17afc` Add updating of chainTxData to release process (sipa)\n+- #10063 `530fcbd` add missing spaces so that markdown recognizes headline (flack)\n+- #10085 `db1ae54` Docs: remove 'noconnect' option (jlopp)\n+- #10090 `8e4f7e7` Update bitcoin.conf with example for pruning (coinables)\n+- #9424 `1a5aaab` Change LogAcceptCategory to use uint32_t rather than sets of strings (gmaxwell)\n+- #10036 `fbf36ca` Fix init README format to render correctly on github (jlopp)\n+- #10058 `a2cd0b0` No need to use OpenSSL malloc/free (tjps)\n+- #10123 `471ed00` Allow debug logs to be excluded from specified component (jnewbery)\n+- #10104 `fadf078` linearize script: Option to use RPC cookie (achow101)\n+- #10162 `a3a2160` [trivial] Log calls to getblocktemplate (jnewbery)\n+- #10155 `928695b` build: Deduplicate version numbers (laanwj)\n+- #10211 `a86255b` [doc] Contributor fixes & new \"finding reviewers\" section (kallewoof)\n+- #10250 `1428f30` Fix some empty vector references (sipa)\n+- #10270 `95f5e44` Remove Clang workaround for Boost 1.46 (fanquake)\n+- #10263 `cb007e4` Trivial: fix fee estimate write error log message (CryptAxe)\n+- #9670 `bd9ec0e` contrib: github-merge improvements (laanwj)\n+- #10260 `1d75597` [doc] Minor corrections to osx dependencies (fanquake)\n+- #10189 `750c5a5` devtools/net: add a verifier for scriptable changes. Use it to make CNode::id private (theuni)\n+- #10322 `bc64b5a` Use hardware timestamps in RNG seeding (sipa)\n+- #10381 `7f2b9e0` Shadowing warnings are not enabled by default, update doc accordingly (paveljanik)\n+- #10380 `b6ee855` [doc] Removing comments about dirty entries on txmempool (madeo)\n+- #10383 `d0c37ee` [logging] log system time and mock time (jnewbery)\n+- #10404 `b45a52a` doc: Add logging to FinalizeNode() (sdaftuar)\n+- #10388 `526e839` Output line to debug.log when IsInitialBlockDownload latches to false (morcos)\n+- #10372 `15254e9` Add perf counter data to GetStrongRandBytes state in scheduler (TheBlueMatt)\n+- #10461 `55b72f3` Update style guide (sipa)\n+- #10486 `10e8c0a` devtools: Retry after signing fails in github-merge (laanwj)\n+- #10447 `f259263` Make bitcoind invalid argument error message specific (laanwj)\n+- #10495 `6a38b79` contrib: Update location of seeds.txt (laanwj)\n+- #10469 `b6b150b` Fixing typo in rpcdump.cpp help message (keystrike)\n+- #10451 `27b9931` contrib/init/bitcoind.openrcconf: Don't disable wallet by default (luke-jr)\n+- #10323 `00d3692` Update to latest libsecp256k1 master (sipa)\n+- #10422 `cec9e1e` Fix timestamp in fee estimate debug message (morcos)\n+- #10566 `5d034ee` [docs] Use the \"domain name setup\" image (previously unused) in the gitian docs (practicalswift)\n+- #10534 `a514ac3` Clarify prevector::erase and avoid swap-to-clear (sipa)\n+- #10575 `22ec768` Header include guideline (sipa)\n+- #10480 `fbf5d3b` Improve commit-check-script.sh (sipa)\n+- #10502 `1ad3d4e` scripted-diff: Remove BOOST_FOREACH, Q_FOREACH and PAIRTYPE (jtimon)\n+- #10377 `b63be2c` Use rdrand as entropy source on supported platforms (sipa)\n+- #9895 `228c319` Turn TryCreateDirectory() into TryCreateDirectories() (benma)\n+- #10602 `d76e84a` Make clang-format use C++11 features (e.g. A<A<int>> instead of A<A<int> >) (practicalswift)\n+- #10623 `c38f540` doc: Add 0.14.2 release notes (MarcoFalke)\n+- #10276 `b750b33` contrib/verifybinaries: allow filtering by platform (knocte)\n+- #10248 `01c4b14` Rewrite addrdb with less duplication using CHashVerifier (sipa)\n+- #10577 `232508f` Add an explanation of quickly hashing onto a non-power of two range (gmaxwell)\n+- #10608 `eee398f` Add a comment explaining the use of MAX_BLOCK_BASE_SIZE (gmaxwell)\n+- #10728 `7397af9` fix typo in help text for removeprunedfunds (AkioNak)\n+- #10193 `6dbcc74` scripted-diff: Remove #include <boost/foreach.hpp> (jtimon)\n+- #10676 `379aed0` document script-based return fields for validateaddress (instagibbs)\n+- #10651 `cef4b5c` Verify binaries from bitcoincore.org and bitcoin.org (TheBlueMatt)\n+- #10786 `ca4c545` Add PR description to merge commit in github-merge.py (sipa)\n+- #10812 `c5904e8` [utils] Allow bitcoin-cli's -rpcconnect option to be used with square brackets (jnewbery)\n+- #10842 `3895e25` Fix incorrect Doxygen tag (@ince \u2192 @since). Doxygen parameter name matching (practicalswift)\n+- #10681 `df0793f` add gdb attach process to test README (instagibbs)\n+- #10789 `1124328` Punctuation/grammer fixes in rpcwallet.cpp (stevendlander)\n+- #10655 `78f307b` Properly document target_confirmations in listsinceblock (RHavar)\n+- #10917 `5c003cb` developer-notes: add reference to snake_case and PascalCase (benma)\n+- #11003 `4b5a7ce` Docs: Capitalize bullet points in CONTRIBUTING guide (eklitzke)\n+- #10968 `98aa3f6` Add instructions for parallel gitian builds (coblee)\n+- #11076 `1c4b9b3` 0.15 release-notes nits: fix redundancy, remove accidental parenthesis & fix range style (practicalswift)\n+- #11090 `8f0121c` Update contributor names in release-notes.md (Derek701)\n+- #11056 `cbdd338` disable jni in builds (instagibbs)\n+- #11080 `2b59cfb` doc: Update build-openbsd for 6.1 (laanwj)\n+- #11119 `0a6af47` [doc] build-windows: Mention that only trusty works (MarcoFalke)\n+- #11108 `e8ad101` Changing -txindex requires -reindex, not -reindex-chainstate (TheBlueMatt)\n+- #9792 `342b9bc` FastRandomContext improvements and switch to ChaCha20 (sipa)\n+- #9505 `67ed40e` Prevector Quick Destruct (JeremyRubin)\n+- #10820 `ef37f20` Use cpuid intrinsics instead of asm code (sipa)\n+- #9999 `a328904` [LevelDB] Plug leveldb logs to bitcoin logs (NicolasDorier)\n+- #9693 `c5e9e42` Prevent integer overflow in ReadVarInt (gmaxwell)\n+- #10129 `351d0ad` scheduler: fix sub-second precision with boost < 1.50 (theuni)\n+- #10153 `fade788` logging: Fix off-by-one for shrinkdebugfile default (MarcoFalke)\n+- #10305 `c45da32` Fix potential NPD introduced in b297426c (TheBlueMatt)\n+- #10338 `daf3e7d` Maintain state across GetStrongRandBytes calls (sipa)\n+- #10544 `a4fe077` Update to LevelDB 1.20 (sipa)\n+- #10614 `cafe24f` random: fix crash on some 64bit platforms (theuni)\n+- #10714 `2a09a38` Avoid printing incorrect block indexing time due to uninitialized variable (practicalswift)\n+- #10837 `8bc6d1f` Fix resource leak on error in GetDevURandom (corebob)\n+- #10832 `89bb036` init: Factor out AppInitLockDataDirectory and fix startup core dump issue (laanwj)\n+- #10914 `b995a37` Add missing lock in CScheduler::AreThreadsServicingQueue() (TheBlueMatt)\n+- #10958 `659c096` Update to latest Bitcoin patches for LevelDB (sipa)\n+- #10919 `c1c671f` Fix more init bugs (TheBlueMatt)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- \u30ed\u30cf\u30f3 \u30c0\u30eb\n+- Ahmad Kazi\n+- aideca\n+- Akio Nakamura\n+- Alex Morcos\n+- Allan Doensen\n+- Andres G. Aragoneses\n+- Andrew Chow\n+- Angel Leon\n+- Awemany\n+- Bob McElrath\n+- Brian McMichael\n+- BtcDrak\n+- Charlie Lee\n+- Chris Gavin\n+- Chris Stewart\n+- Cory Fields\n+- CryptAxe\n+- Dag Robole\n+- Daniel Aleksandersen\n+- Daniel Cousens\n+- darksh1ne\n+- Dimitris Tsapakidis\n+- Eric Shaw\n+- Evan Klitzke\n+- fanquake\n+- Felix Weis\n+- flack\n+- Guido Vranken\n+- Greg Griffith\n+- Gregory Maxwell\n+- Gregory Sanders\n+- Ian Kelling\n+- Jack Grigg\n+- James Evans\n+- James Hilliard\n+- Jameson Lopp\n+- Jeremy Rubin\n+- Jimmy Song\n+- Jo\u00e3o Barbosa\n+- Johnathan Corgan\n+- John Newbery\n+- Jonas Schnelli\n+- Jorge Tim\u00f3n\n+- Karl-Johan Alm\n+- kewde\n+- KibbledJiveElkZoo\n+- Kirit Thadaka\n+- kobake\n+- Kyle Honeycutt\n+- Lawrence Nahum\n+- Luke Dashjr\n+- Marco Falke\n+- Marcos Mayorga\n+- Marijn Stollenga\n+- Mario Dian\n+- Mark Friedenbach\n+- Marko Bencun\n+- Masahiko Hyuga\n+- Matt Corallo\n+- Matthew Zipkin\n+- Matthias Grundmann\n+- Michael Goldstein\n+- Michael Rotarius\n+- Mikerah\n+- Mike van Rossum\n+- Mitchell Cash\n+- Nicolas Dorier\n+- Patrick Strateman\n+- Pavel Jan\u00edk\n+- Pavlos Antoniou\n+- Pavol Rusnak\n+- Pedro Branco\n+- Peter Todd\n+- Pieter Wuille\n+- practicalswift\n+- Ren\u00e9 Nyffenegger\n+- Ricardo Velhote\n+- romanornr\n+- Russell Yanofsky\n+- Rusty Russell\n+- Ryan Havar\n+- shaolinfry\n+- Shigeya Suzuki\n+- Simone Madeo\n+- Spencer Lievens\n+- Steven D. Lander\n+- Suhas Daftuar\n+- Takashi Mitsuta\n+- Thomas Snider\n+- Timothy Redaelli\n+- tintinweb\n+- tnaka\n+- Warren Togami\n+- Wladimir J. van der Laan\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      }
    ]
  },
  {
    "sha": "6b4d9f273607bcacaa65a7a030eef5cc9d6bb6e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YjRkOWYyNzM2MDdiY2FjYWE2NWE3YTAzMGVlZjVjYzlkNmJiNmU4",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2017-09-03T12:43:35Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-04T09:47:44Z"
      },
      "message": "wallet: update stored witness in AddToWallet\n\nReplace witness-stripped wallet transactions with full transactions;\nthis can happen when upgrading from a pre-segwit wallet to a segwit-\naware wallet.\n\nGithub-Pull: #11225\nRebased-From: d01a9682b126a5f83c7311e652e6e62f2c2e1d20",
      "tree": {
        "sha": "533adb0369c613f550c8b5a88ca8953a3e0cafb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/533adb0369c613f550c8b5a88ca8953a3e0cafb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b4d9f273607bcacaa65a7a030eef5cc9d6bb6e8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b4d9f273607bcacaa65a7a030eef5cc9d6bb6e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6b4d9f273607bcacaa65a7a030eef5cc9d6bb6e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b4d9f273607bcacaa65a7a030eef5cc9d6bb6e8/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "62d18cdb893fea92680a6f382bb8b3e8ca157bcf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62d18cdb893fea92680a6f382bb8b3e8ca157bcf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/62d18cdb893fea92680a6f382bb8b3e8ca157bcf"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5e833ebee70e81dc3c1f5c0abcf36ba21188a0ba",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6b4d9f273607bcacaa65a7a030eef5cc9d6bb6e8/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6b4d9f273607bcacaa65a7a030eef5cc9d6bb6e8/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=6b4d9f273607bcacaa65a7a030eef5cc9d6bb6e8",
        "patch": "@@ -969,6 +969,15 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n             wtx.fFromMe = wtxIn.fFromMe;\n             fUpdated = true;\n         }\n+        // If we have a witness-stripped version of this transaction, and we\n+        // see a new version with a witness, then we must be upgrading a pre-segwit\n+        // wallet.  Store the new version of the transaction with the witness,\n+        // as the stripped-version must be invalid.\n+        // TODO: Store all versions of the transaction, instead of just one.\n+        if (wtxIn.tx->HasWitness() && !wtx.tx->HasWitness()) {\n+            wtx.SetTx(wtxIn.tx);\n+            fUpdated = true;\n+        }\n     }\n \n     //// debug print"
      }
    ]
  },
  {
    "sha": "0fe2a9a196b2f81fed2ea84a5979e95f37094b22",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZmUyYTlhMTk2YjJmODFmZWQyZWE4NGE1OTc5ZTk1ZjM3MDk0YjIy",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2017-09-06T00:32:06Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-04T09:48:39Z"
      },
      "message": "when clearing addrman clear mapInfo and mapAddr\n\nGithub-Pull: #11252\nRebased-From: b86a42077a134888c53bfd406b87bf0a39c78264",
      "tree": {
        "sha": "46cc1ce5432977c499d98808f6299a35fad3b3a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46cc1ce5432977c499d98808f6299a35fad3b3a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0fe2a9a196b2f81fed2ea84a5979e95f37094b22",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fe2a9a196b2f81fed2ea84a5979e95f37094b22",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0fe2a9a196b2f81fed2ea84a5979e95f37094b22",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fe2a9a196b2f81fed2ea84a5979e95f37094b22/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b4d9f273607bcacaa65a7a030eef5cc9d6bb6e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b4d9f273607bcacaa65a7a030eef5cc9d6bb6e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b4d9f273607bcacaa65a7a030eef5cc9d6bb6e8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "18f3062287306d15c06b00e72a91855148872c08",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0fe2a9a196b2f81fed2ea84a5979e95f37094b22/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0fe2a9a196b2f81fed2ea84a5979e95f37094b22/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=0fe2a9a196b2f81fed2ea84a5979e95f37094b22",
        "patch": "@@ -472,6 +472,8 @@ class CAddrMan\n         nTried = 0;\n         nNew = 0;\n         nLastGood = 1; //Initially at 1 so that \"never\" is strictly worse.\n+        mapInfo.clear();\n+        mapAddr.clear();\n     }\n \n     CAddrMan()"
      }
    ]
  },
  {
    "sha": "6a62c745a9ce7d08667ab544ee3627e035e9d0ce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTYyYzc0NWE5Y2U3ZDA4NjY3YWI1NDRlZTM2MjdlMDM1ZTlkMGNl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-09-15T09:50:45Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-04T09:53:18Z"
      },
      "message": "qt: Backup former GUI settings on `-resetguisettings`\n\nWrites the GUI settings to `guisettings.bak` in the data directory\nbefore wiping them. This can be used to retroactively troubleshoot\nissues (e.g. #11262) where `-resetguisettings` solves the problem.\n\nGithub-Pull: #11338\nRebased-From: 723aa1b8752c1d6c6c0a76059c532ebe2f406fc1",
      "tree": {
        "sha": "d4829e2f6cf3d5c7e577be235d99c1b0fe79ef11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4829e2f6cf3d5c7e577be235d99c1b0fe79ef11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a62c745a9ce7d08667ab544ee3627e035e9d0ce",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a62c745a9ce7d08667ab544ee3627e035e9d0ce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a62c745a9ce7d08667ab544ee3627e035e9d0ce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a62c745a9ce7d08667ab544ee3627e035e9d0ce/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0fe2a9a196b2f81fed2ea84a5979e95f37094b22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fe2a9a196b2f81fed2ea84a5979e95f37094b22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0fe2a9a196b2f81fed2ea84a5979e95f37094b22"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3d603445fbfcd7d75a8541f0c7f41c6ee289840e",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a62c745a9ce7d08667ab544ee3627e035e9d0ce/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a62c745a9ce7d08667ab544ee3627e035e9d0ce/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=6a62c745a9ce7d08667ab544ee3627e035e9d0ce",
        "patch": "@@ -15,6 +15,7 @@\n * wallet.dat: personal wallet (BDB) with keys and transactions\n * .cookie: session RPC authentication cookie (written at start when cookie authentication is used, deleted on shutdown): since 0.12.0\n * onion_private_key: cached Tor hidden service private key for `-listenonion`: since 0.12.0\n+* guisettings.ini.bak: backup of former GUI settings after `-resetguisettings` is used\n \n Only used in pre-0.8.0\n ---------------------"
      },
      {
        "sha": "a2dd52d9cbe4b9e2125b0e0541b1be74aa143442",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a62c745a9ce7d08667ab544ee3627e035e9d0ce/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a62c745a9ce7d08667ab544ee3627e035e9d0ce/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=6a62c745a9ce7d08667ab544ee3627e035e9d0ce",
        "patch": "@@ -151,10 +151,32 @@ void OptionsModel::Init(bool resetSettings)\n     language = settings.value(\"language\").toString();\n }\n \n+/** Helper function to copy contents from one QSettings to another.\n+ * By using allKeys this also covers nested settings in a hierarchy.\n+ */\n+static void CopySettings(QSettings& dst, const QSettings& src)\n+{\n+    for (const QString& key : src.allKeys()) {\n+        dst.setValue(key, src.value(key));\n+    }\n+}\n+\n+/** Back up a QSettings to an ini-formatted file. */\n+static void BackupSettings(const fs::path& filename, const QSettings& src)\n+{\n+    qWarning() << \"Backing up GUI settings to\" << GUIUtil::boostPathToQString(filename);\n+    QSettings dst(GUIUtil::boostPathToQString(filename), QSettings::IniFormat);\n+    dst.clear();\n+    CopySettings(dst, src);\n+}\n+\n void OptionsModel::Reset()\n {\n     QSettings settings;\n \n+    // Backup old settings to chain-specific datadir for troubleshooting\n+    BackupSettings(GetDataDir(true) / \"guisettings.ini.bak\", settings);\n+\n     // Save the strDataDir setting\n     QString dataDir = Intro::getDefaultDataDirectory();\n     dataDir = settings.value(\"strDataDir\", dataDir).toString();"
      }
    ]
  },
  {
    "sha": "b6c0209aaf372a21090c0a3eed973022af14ece0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNmMwMjA5YWFmMzcyYTIxMDkwYzBhM2VlZDk3MzAyMmFmMTRlY2Uw",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-10-02T22:24:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-04T09:54:36Z"
      },
      "message": "Fix validationinterface build on super old boost/clang\n\nThis should fix all the non-dependancy issues for termux builds.\nSee Github issue #11388.\n\nGithub-Pull: #11440\nRebased-From: 96c2ce9d343147608c197bc2333138b82141340f",
      "tree": {
        "sha": "d726b9d54887130d7de298efe3a7509bc6318681",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d726b9d54887130d7de298efe3a7509bc6318681"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6c0209aaf372a21090c0a3eed973022af14ece0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6c0209aaf372a21090c0a3eed973022af14ece0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b6c0209aaf372a21090c0a3eed973022af14ece0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6c0209aaf372a21090c0a3eed973022af14ece0/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a62c745a9ce7d08667ab544ee3627e035e9d0ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a62c745a9ce7d08667ab544ee3627e035e9d0ce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a62c745a9ce7d08667ab544ee3627e035e9d0ce"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cd2fecd2245590431ffa61298efc4f6b0b574b56",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6c0209aaf372a21090c0a3eed973022af14ece0/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6c0209aaf372a21090c0a3eed973022af14ece0/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=b6c0209aaf372a21090c0a3eed973022af14ece0",
        "patch": "@@ -4,7 +4,9 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"validationinterface.h\"\n+\n #include \"init.h\"\n+#include \"primitives/block.h\"\n #include \"scheduler.h\"\n #include \"sync.h\"\n #include \"util.h\""
      }
    ]
  },
  {
    "sha": "a43be5bcdb27a68abe9bb5fec57185a1b6652479",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDNiZTViY2RiMjdhNjhhYmU5YmI1ZmVjNTcxODVhMWI2NjUyNDc5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-07T08:50:41Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-04T13:11:24Z"
      },
      "message": "rpc: Prevent `dumpwallet` from overwriting files\n\nPrevent arbitrary files from being overwritten. There have been reports\nthat users have overwritten wallet files this way. It may also avoid\nother security issues.\n\nFixes #9934. Adds mention to release notes and adds a test.\n\nGithub-Pull: #9937\nRebased-From: 0cd9273fd959c6742574259d026039f7da0309a2",
      "tree": {
        "sha": "41a6954250a13e353d05f1bcddcc122382a9bcef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41a6954250a13e353d05f1bcddcc122382a9bcef"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a43be5bcdb27a68abe9bb5fec57185a1b6652479",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a43be5bcdb27a68abe9bb5fec57185a1b6652479",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a43be5bcdb27a68abe9bb5fec57185a1b6652479",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a43be5bcdb27a68abe9bb5fec57185a1b6652479/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6c0209aaf372a21090c0a3eed973022af14ece0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6c0209aaf372a21090c0a3eed973022af14ece0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6c0209aaf372a21090c0a3eed973022af14ece0"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 19,
      "deletions": 3
    },
    "files": [
      {
        "sha": "0235e1c606ecd071e3021ea52fd16145c295efd5",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a43be5bcdb27a68abe9bb5fec57185a1b6652479/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a43be5bcdb27a68abe9bb5fec57185a1b6652479/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=a43be5bcdb27a68abe9bb5fec57185a1b6652479",
        "patch": "@@ -65,6 +65,9 @@ Notable changes\n 0.15.1 Change log\n =================\n \n+- `dumpwallet` no longer allows overwriting files. This is a security measure\n+  as well as prevents dangerous user mistakes.\n+\n Credits\n =======\n "
      },
      {
        "sha": "e56485e29621b47a2c0bceaef47cc1081ddb510e",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a43be5bcdb27a68abe9bb5fec57185a1b6652479/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a43be5bcdb27a68abe9bb5fec57185a1b6652479/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=a43be5bcdb27a68abe9bb5fec57185a1b6652479",
        "patch": "@@ -595,7 +595,7 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"dumpwallet \\\"filename\\\"\\n\"\n-            \"\\nDumps all wallet keys in a human-readable format.\\n\"\n+            \"\\nDumps all wallet keys in a human-readable format to a server-side file. This does not allow overwriting existing files.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"filename\\\"    (string, required) The filename with path (either absolute or relative to bitcoind)\\n\"\n             \"\\nResult:\\n\"\n@@ -611,9 +611,19 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n \n     EnsureWalletIsUnlocked(pwallet);\n \n-    std::ofstream file;\n     boost::filesystem::path filepath = request.params[0].get_str();\n     filepath = boost::filesystem::absolute(filepath);\n+\n+    /* Prevent arbitrary files from being overwritten. There have been reports\n+     * that users have overwritten wallet files this way:\n+     * https://github.com/bitcoin/bitcoin/issues/9934\n+     * It may also avoid other security issues.\n+     */\n+    if (boost::filesystem::exists(filepath)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, filepath.string() + \" already exists. If you are sure this is what you want, move it out of the way first\");\n+    }\n+\n+    std::ofstream file;\n     file.open(filepath.string().c_str());\n     if (!file.is_open())\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");"
      },
      {
        "sha": "016bd95925a968af6480b98e89aa8cf8c8b2aa12",
        "filename": "test/functional/wallet-dump.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a43be5bcdb27a68abe9bb5fec57185a1b6652479/test/functional/wallet-dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a43be5bcdb27a68abe9bb5fec57185a1b6652479/test/functional/wallet-dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet-dump.py?ref=a43be5bcdb27a68abe9bb5fec57185a1b6652479",
        "patch": "@@ -7,7 +7,7 @@\n import os\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal\n+from test_framework.util import (assert_equal, assert_raises_jsonrpc)\n \n \n def read_dump(file_name, addrs, hd_master_addr_old):\n@@ -108,5 +108,8 @@ def run_test (self):\n         assert_equal(found_addr_chg, 90*2 + 50)  # old reserve keys are marked as change now\n         assert_equal(found_addr_rsv, 90*2) \n \n+        # Overwriting should fail\n+        assert_raises_jsonrpc(-8, \"already exists\", self.nodes[0].dumpwallet, tmpdir + \"/node0/wallet.unencrypted.dump\")\n+\n if __name__ == '__main__':\n     WalletDumpTest().main ()"
      }
    ]
  },
  {
    "sha": "dea3b87dd974edc18961005e66395c9238f0ab16",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZWEzYjg3ZGQ5NzRlZGMxODk2MTAwNWU2NjM5NWM5MjM4ZjBhYjE2",
    "commit": {
      "author": {
        "name": "Donal OConnor",
        "email": "donaloconnor@gmail.com",
        "date": "2017-09-05T20:26:20Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-05T16:56:54Z"
      },
      "message": "Add new step to clean $PATH var by removing /mnt specific Window's %PATH% paths that cause issues with the make system\n\nGithub-Pull: #11437\nRebased-From: 4f890ba6bc8caba5394c7a5388d7f07959ced78b",
      "tree": {
        "sha": "314e3f498da899dd4852d6483de73d8690e76da9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/314e3f498da899dd4852d6483de73d8690e76da9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dea3b87dd974edc18961005e66395c9238f0ab16",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dea3b87dd974edc18961005e66395c9238f0ab16",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dea3b87dd974edc18961005e66395c9238f0ab16",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dea3b87dd974edc18961005e66395c9238f0ab16/comments",
    "author": {
      "login": "donaloconnor",
      "id": 6394033,
      "node_id": "MDQ6VXNlcjYzOTQwMzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6394033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/donaloconnor",
      "html_url": "https://github.com/donaloconnor",
      "followers_url": "https://api.github.com/users/donaloconnor/followers",
      "following_url": "https://api.github.com/users/donaloconnor/following{/other_user}",
      "gists_url": "https://api.github.com/users/donaloconnor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/donaloconnor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/donaloconnor/subscriptions",
      "organizations_url": "https://api.github.com/users/donaloconnor/orgs",
      "repos_url": "https://api.github.com/users/donaloconnor/repos",
      "events_url": "https://api.github.com/users/donaloconnor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/donaloconnor/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a43be5bcdb27a68abe9bb5fec57185a1b6652479",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a43be5bcdb27a68abe9bb5fec57185a1b6652479",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a43be5bcdb27a68abe9bb5fec57185a1b6652479"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "24ca8fd41f2f04df0fcb970eb924fca08a382b53",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dea3b87dd974edc18961005e66395c9238f0ab16/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dea3b87dd974edc18961005e66395c9238f0ab16/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=dea3b87dd974edc18961005e66395c9238f0ab16",
        "patch": "@@ -70,6 +70,7 @@ To build executables for Windows 64-bit, install the following dependencies:\n \n Then build using:\n \n+    PATH=$(echo \"$PATH\" | sed -e 's/:\\/mnt.*//g') # strip out problematic Windows %PATH% imported var\n     cd depends\n     make HOST=x86_64-w64-mingw32\n     cd ..\n@@ -85,6 +86,7 @@ To build executables for Windows 32-bit, install the following dependencies:\n \n Then build using:\n \n+    PATH=$(echo \"$PATH\" | sed -e 's/:\\/mnt.*//g') # strip out problematic Windows %PATH% imported var\n     cd depends\n     make HOST=i686-w64-mingw32\n     cd .."
      }
    ]
  },
  {
    "sha": "27e861a9b394857b0005347962ced92ac65e5dac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2U4NjFhOWIzOTQ4NTdiMDAwNTM0Nzk2MmNlZDkyYWM2NWU1ZGFj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-09-23T08:36:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-09T20:31:41Z"
      },
      "message": "net: Improve and document SOCKS code\n\nMake the SOCKS code more consistent, and document the constants used.\n\nGithub-Pull: #11397\nRebased-From: 22f816ef4dd57785627d801c247714cace7fc5b5",
      "tree": {
        "sha": "8ff949e129cc87e388ada1a389a109e7ed7093e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ff949e129cc87e388ada1a389a109e7ed7093e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27e861a9b394857b0005347962ced92ac65e5dac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27e861a9b394857b0005347962ced92ac65e5dac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27e861a9b394857b0005347962ced92ac65e5dac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27e861a9b394857b0005347962ced92ac65e5dac/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dea3b87dd974edc18961005e66395c9238f0ab16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dea3b87dd974edc18961005e66395c9238f0ab16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dea3b87dd974edc18961005e66395c9238f0ab16"
      }
    ],
    "stats": {
      "total": 125,
      "additions": 89,
      "deletions": 36
    },
    "files": [
      {
        "sha": "914124cb178183bd7ae726e610d97cdc6b410c74",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 89,
        "deletions": 36,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27e861a9b394857b0005347962ced92ac65e5dac/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27e861a9b394857b0005347962ced92ac65e5dac/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=27e861a9b394857b0005347962ced92ac65e5dac",
        "patch": "@@ -184,6 +184,48 @@ struct timeval MillisToTimeval(int64_t nTimeout)\n     return timeout;\n }\n \n+/** SOCKS version */\n+enum SOCKSVersion: uint8_t {\n+    SOCKS4 = 0x04,\n+    SOCKS5 = 0x05\n+};\n+\n+/** Values defined for METHOD in RFC1928 */\n+enum SOCKS5Method: uint8_t {\n+    NOAUTH = 0x00,        //! No authentication required\n+    GSSAPI = 0x01,        //! GSSAPI\n+    USER_PASS = 0x02,     //! Username/password\n+    NO_ACCEPTABLE = 0xff, //! No acceptable methods\n+};\n+\n+/** Values defined for CMD in RFC1928 */\n+enum SOCKS5Command: uint8_t {\n+    CONNECT = 0x01,\n+    BIND = 0x02,\n+    UDP_ASSOCIATE = 0x03\n+};\n+\n+/** Values defined for REP in RFC1928 */\n+enum SOCKS5Reply: uint8_t {\n+    SUCCEEDED = 0x00,        //! Succeeded\n+    GENFAILURE = 0x01,       //! General failure\n+    NOTALLOWED = 0x02,       //! Connection not allowed by ruleset\n+    NETUNREACHABLE = 0x03,   //! Network unreachable\n+    HOSTUNREACHABLE = 0x04,  //! Network unreachable\n+    CONNREFUSED = 0x05,      //! Connection refused\n+    TTLEXPIRED = 0x06,       //! TTL expired\n+    CMDUNSUPPORTED = 0x07,   //! Command not supported\n+    ATYPEUNSUPPORTED = 0x08, //! Address type not supported\n+};\n+\n+/** Values defined for ATYPE in RFC1928 */\n+enum SOCKS5Atyp: uint8_t {\n+    IPV4 = 0x01,\n+    DOMAINNAME = 0x03,\n+    IPV6 = 0x04,\n+};\n+\n+/** Status codes that can be returned by InterruptibleRecv */\n enum class IntrRecvError {\n     OK,\n     Timeout,\n@@ -203,15 +245,15 @@ enum class IntrRecvError {\n  *\n  * @note This function requires that hSocket is in non-blocking mode.\n  */\n-static IntrRecvError InterruptibleRecv(char* data, size_t len, int timeout, const SOCKET& hSocket)\n+static IntrRecvError InterruptibleRecv(uint8_t* data, size_t len, int timeout, const SOCKET& hSocket)\n {\n     int64_t curTime = GetTimeMillis();\n     int64_t endTime = curTime + timeout;\n     // Maximum time to wait in one select call. It will take up until this time (in millis)\n     // to break off in case of an interruption.\n     const int64_t maxWait = 1000;\n     while (len > 0 && curTime < endTime) {\n-        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n+        ssize_t ret = recv(hSocket, (char*)data, len, 0); // Optimistically try the recv first\n         if (ret > 0) {\n             len -= ret;\n             data += ret;\n@@ -242,24 +284,35 @@ static IntrRecvError InterruptibleRecv(char* data, size_t len, int timeout, cons\n     return len == 0 ? IntrRecvError::OK : IntrRecvError::Timeout;\n }\n \n+/** Credentials for proxy authentication */\n struct ProxyCredentials\n {\n     std::string username;\n     std::string password;\n };\n \n-std::string Socks5ErrorString(int err)\n+/** Convert SOCKS5 reply to a an error message */\n+std::string Socks5ErrorString(uint8_t err)\n {\n     switch(err) {\n-        case 0x01: return \"general failure\";\n-        case 0x02: return \"connection not allowed\";\n-        case 0x03: return \"network unreachable\";\n-        case 0x04: return \"host unreachable\";\n-        case 0x05: return \"connection refused\";\n-        case 0x06: return \"TTL expired\";\n-        case 0x07: return \"protocol error\";\n-        case 0x08: return \"address type not supported\";\n-        default:   return \"unknown\";\n+        case SOCKS5Reply::GENFAILURE:\n+            return \"general failure\";\n+        case SOCKS5Reply::NOTALLOWED:\n+            return \"connection not allowed\";\n+        case SOCKS5Reply::NETUNREACHABLE:\n+            return \"network unreachable\";\n+        case SOCKS5Reply::HOSTUNREACHABLE:\n+            return \"host unreachable\";\n+        case SOCKS5Reply::CONNREFUSED:\n+            return \"connection refused\";\n+        case SOCKS5Reply::TTLEXPIRED:\n+            return \"TTL expired\";\n+        case SOCKS5Reply::CMDUNSUPPORTED:\n+            return \"protocol error\";\n+        case SOCKS5Reply::ATYPEUNSUPPORTED:\n+            return \"address type not supported\";\n+        default:\n+            return \"unknown\";\n     }\n }\n \n@@ -274,34 +327,34 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n     }\n     // Accepted authentication methods\n     std::vector<uint8_t> vSocks5Init;\n-    vSocks5Init.push_back(0x05);\n+    vSocks5Init.push_back(SOCKSVersion::SOCKS5);\n     if (auth) {\n-        vSocks5Init.push_back(0x02); // # METHODS\n-        vSocks5Init.push_back(0x00); // X'00' NO AUTHENTICATION REQUIRED\n-        vSocks5Init.push_back(0x02); // X'02' USERNAME/PASSWORD (RFC1929)\n+        vSocks5Init.push_back(0x02); // Number of methods\n+        vSocks5Init.push_back(SOCKS5Method::NOAUTH);\n+        vSocks5Init.push_back(SOCKS5Method::USER_PASS);\n     } else {\n-        vSocks5Init.push_back(0x01); // # METHODS\n-        vSocks5Init.push_back(0x00); // X'00' NO AUTHENTICATION REQUIRED\n+        vSocks5Init.push_back(0x01); // Number of methods\n+        vSocks5Init.push_back(SOCKS5Method::NOAUTH);\n     }\n     ssize_t ret = send(hSocket, (const char*)vSocks5Init.data(), vSocks5Init.size(), MSG_NOSIGNAL);\n     if (ret != (ssize_t)vSocks5Init.size()) {\n         CloseSocket(hSocket);\n         return error(\"Error sending to proxy\");\n     }\n-    char pchRet1[2];\n+    uint8_t pchRet1[2];\n     if ((recvr = InterruptibleRecv(pchRet1, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n         CloseSocket(hSocket);\n         LogPrintf(\"Socks5() connect to %s:%d failed: InterruptibleRecv() timeout or other failure\\n\", strDest, port);\n         return false;\n     }\n-    if (pchRet1[0] != 0x05) {\n+    if (pchRet1[0] != SOCKSVersion::SOCKS5) {\n         CloseSocket(hSocket);\n         return error(\"Proxy failed to initialize\");\n     }\n-    if (pchRet1[1] == 0x02 && auth) {\n+    if (pchRet1[1] == SOCKS5Method::USER_PASS && auth) {\n         // Perform username/password authentication (as described in RFC1929)\n         std::vector<uint8_t> vAuth;\n-        vAuth.push_back(0x01);\n+        vAuth.push_back(0x01); // Current (and only) version of user/pass subnegotiation\n         if (auth->username.size() > 255 || auth->password.size() > 255)\n             return error(\"Proxy username or password too long\");\n         vAuth.push_back(auth->username.size());\n@@ -314,7 +367,7 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n             return error(\"Error sending authentication to proxy\");\n         }\n         LogPrint(BCLog::PROXY, \"SOCKS5 sending proxy authentication %s:%s\\n\", auth->username, auth->password);\n-        char pchRetA[2];\n+        uint8_t pchRetA[2];\n         if ((recvr = InterruptibleRecv(pchRetA, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n             CloseSocket(hSocket);\n             return error(\"Error reading proxy authentication response\");\n@@ -323,17 +376,17 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n             CloseSocket(hSocket);\n             return error(\"Proxy authentication unsuccessful\");\n         }\n-    } else if (pchRet1[1] == 0x00) {\n+    } else if (pchRet1[1] == SOCKS5Method::NOAUTH) {\n         // Perform no authentication\n     } else {\n         CloseSocket(hSocket);\n         return error(\"Proxy requested wrong authentication method %02x\", pchRet1[1]);\n     }\n     std::vector<uint8_t> vSocks5;\n-    vSocks5.push_back(0x05); // VER protocol version\n-    vSocks5.push_back(0x01); // CMD CONNECT\n-    vSocks5.push_back(0x00); // RSV Reserved\n-    vSocks5.push_back(0x03); // ATYP DOMAINNAME\n+    vSocks5.push_back(SOCKSVersion::SOCKS5); // VER protocol version\n+    vSocks5.push_back(SOCKS5Command::CONNECT); // CMD CONNECT\n+    vSocks5.push_back(0x00); // RSV Reserved must be 0\n+    vSocks5.push_back(SOCKS5Atyp::DOMAINNAME); // ATYP DOMAINNAME\n     vSocks5.push_back(strDest.size()); // Length<=255 is checked at beginning of function\n     vSocks5.insert(vSocks5.end(), strDest.begin(), strDest.end());\n     vSocks5.push_back((port >> 8) & 0xFF);\n@@ -343,7 +396,7 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n         CloseSocket(hSocket);\n         return error(\"Error sending to proxy\");\n     }\n-    char pchRet2[4];\n+    uint8_t pchRet2[4];\n     if ((recvr = InterruptibleRecv(pchRet2, 4, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n         CloseSocket(hSocket);\n         if (recvr == IntrRecvError::Timeout) {\n@@ -355,26 +408,26 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n             return error(\"Error while reading proxy response\");\n         }\n     }\n-    if (pchRet2[0] != 0x05) {\n+    if (pchRet2[0] != SOCKSVersion::SOCKS5) {\n         CloseSocket(hSocket);\n         return error(\"Proxy failed to accept request\");\n     }\n-    if (pchRet2[1] != 0x00) {\n+    if (pchRet2[1] != SOCKS5Reply::SUCCEEDED) {\n         // Failures to connect to a peer that are not proxy errors\n         CloseSocket(hSocket);\n         LogPrintf(\"Socks5() connect to %s:%d failed: %s\\n\", strDest, port, Socks5ErrorString(pchRet2[1]));\n         return false;\n     }\n-    if (pchRet2[2] != 0x00) {\n+    if (pchRet2[2] != 0x00) { // Reserved field must be 0\n         CloseSocket(hSocket);\n         return error(\"Error: malformed proxy response\");\n     }\n-    char pchRet3[256];\n+    uint8_t pchRet3[256];\n     switch (pchRet2[3])\n     {\n-        case 0x01: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, hSocket); break;\n-        case 0x04: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, hSocket); break;\n-        case 0x03:\n+        case SOCKS5Atyp::IPV4: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, hSocket); break;\n+        case SOCKS5Atyp::IPV6: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, hSocket); break;\n+        case SOCKS5Atyp::DOMAINNAME:\n         {\n             recvr = InterruptibleRecv(pchRet3, 1, SOCKS5_RECV_TIMEOUT, hSocket);\n             if (recvr != IntrRecvError::OK) {"
      }
    ]
  },
  {
    "sha": "c94527a973611d7bc230af37d946d0c2d8b3ad13",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTQ1MjdhOTczNjExZDdiYzIzMGFmMzdkOTQ2ZDBjMmQ4YjNhZDEz",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2017-10-02T11:16:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-09T20:31:41Z"
      },
      "message": "[Docs] Update Windows build instructions for using WSL and Ubuntu 17.04\n\nGithub-Pull: #11437\nRebased-From: 696ce46306e40f48dc4b2d7010812d564a43289d",
      "tree": {
        "sha": "6896929121d8a443762569e5b2bb84490e6b9110",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6896929121d8a443762569e5b2bb84490e6b9110"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c94527a973611d7bc230af37d946d0c2d8b3ad13",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c94527a973611d7bc230af37d946d0c2d8b3ad13",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c94527a973611d7bc230af37d946d0c2d8b3ad13",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c94527a973611d7bc230af37d946d0c2d8b3ad13/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "27e861a9b394857b0005347962ced92ac65e5dac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27e861a9b394857b0005347962ced92ac65e5dac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27e861a9b394857b0005347962ced92ac65e5dac"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 13,
      "deletions": 4
    },
    "files": [
      {
        "sha": "7527a418584b54a67dd83e4b062ad87a86fccc48",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c94527a973611d7bc230af37d946d0c2d8b3ad13/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c94527a973611d7bc230af37d946d0c2d8b3ad13/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=c94527a973611d7bc230af37d946d0c2d8b3ad13",
        "patch": "@@ -4,10 +4,11 @@ WINDOWS BUILD NOTES\n Below are some notes on how to build Bitcoin Core for Windows.\n \n Most developers use cross-compilation from Ubuntu to build executables for\n-Windows. This is also used to build the release binaries.\n+Windows. Cross-compilation is also used to build the release binaries.\n \n-Currently only building on Ubuntu Trusty 14.04 is supported.\n-Other versions are unsupported or known to be broken (e.g. Ubuntu Xenial 16.04).\n+Currently only building on Ubuntu Trusty 14.04 or Ubuntu Zesty 17.04 or later is supported.\n+Building on Ubuntu Xenial 16.04 is known to be broken, see extensive discussion in issue [8732](https://github.com/bitcoin/bitcoin/issues/8732).\n+While it may be possible to do so with work arounds, it's potentially dangerous and not recommended.\n \n While there are potentially a number of ways to build on Windows (for example using msys / mingw-w64),\n using the Windows Subsystem For Linux is the most straightforward. If you are building with\n@@ -62,6 +63,14 @@ A host toolchain (`build-essential`) is necessary because some dependency\n packages (such as `protobuf`) need to build host utilities that are used in the\n build process.\n \n+\n+If you're building on Ubuntu 17.04 or later, run these two commands, selecting the 'posix' variant for both,\n+to work around issues with mingw-w64. See issue [8732](https://github.com/bitcoin/bitcoin/issues/8732) for more information.\n+```\n+sudo update-alternatives --config x86_64-w64-mingw32-g++\n+sudo update-alternatives --config x86_64-w64-mingw32-gcc\n+```\n+\n ## Building for 64-bit Windows\n \n To build executables for Windows 64-bit, install the following dependencies:\n@@ -82,7 +91,7 @@ Then build using:\n \n To build executables for Windows 32-bit, install the following dependencies:\n \n-    sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev \n+    sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev\n \n Then build using:\n "
      }
    ]
  },
  {
    "sha": "405e069d3b8c71b0f5161d9dfb2334a0bb988f2e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MDVlMDY5ZDNiOGM3MWIwZjUxNjFkOWRmYjIzMzRhMGJiOTg4ZjJl",
    "commit": {
      "author": {
        "name": "Dusty Williams",
        "email": "dusty.wil@gmail.com",
        "date": "2017-10-09T03:18:48Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-09T20:31:41Z"
      },
      "message": "Update importprivkey named args documentation\n\nFixes #11462. Updated documentation for importprivkey function to use the correct name for the first argument.\nAlso updates a call to importprivkey to use named args in functional test.\n\nGithub-Pull: #11465\nRebased-From: aa57590d7c5eab1df5443e8ac9ed53ad0db46c02",
      "tree": {
        "sha": "799cfbf80fa3752ebb3b8ff79149bcde521122e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/799cfbf80fa3752ebb3b8ff79149bcde521122e8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/405e069d3b8c71b0f5161d9dfb2334a0bb988f2e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/405e069d3b8c71b0f5161d9dfb2334a0bb988f2e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/405e069d3b8c71b0f5161d9dfb2334a0bb988f2e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/405e069d3b8c71b0f5161d9dfb2334a0bb988f2e/comments",
    "author": {
      "login": "dusty-wil",
      "id": 16580885,
      "node_id": "MDQ6VXNlcjE2NTgwODg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16580885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dusty-wil",
      "html_url": "https://github.com/dusty-wil",
      "followers_url": "https://api.github.com/users/dusty-wil/followers",
      "following_url": "https://api.github.com/users/dusty-wil/following{/other_user}",
      "gists_url": "https://api.github.com/users/dusty-wil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dusty-wil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dusty-wil/subscriptions",
      "organizations_url": "https://api.github.com/users/dusty-wil/orgs",
      "repos_url": "https://api.github.com/users/dusty-wil/repos",
      "events_url": "https://api.github.com/users/dusty-wil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dusty-wil/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c94527a973611d7bc230af37d946d0c2d8b3ad13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c94527a973611d7bc230af37d946d0c2d8b3ad13",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c94527a973611d7bc230af37d946d0c2d8b3ad13"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "8e0e4a8e14efabf0500bf4ff6b325119bd3d5822",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/405e069d3b8c71b0f5161d9dfb2334a0bb988f2e/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/405e069d3b8c71b0f5161d9dfb2334a0bb988f2e/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=405e069d3b8c71b0f5161d9dfb2334a0bb988f2e",
        "patch": "@@ -79,10 +79,10 @@ UniValue importprivkey(const JSONRPCRequest& request)\n \n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n-            \"importprivkey \\\"bitcoinprivkey\\\" ( \\\"label\\\" ) ( rescan )\\n\"\n+            \"importprivkey \\\"privkey\\\" ( \\\"label\\\" ) ( rescan )\\n\"\n             \"\\nAdds a private key (as returned by dumpprivkey) to your wallet.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"bitcoinprivkey\\\"   (string, required) The private key (see dumpprivkey)\\n\"\n+            \"1. \\\"privkey\\\"          (string, required) The private key (see dumpprivkey)\\n\"\n             \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n             \"3. rescan               (boolean, optional, default=true) Rescan the wallet for transactions\\n\"\n             \"\\nNote: This call can take minutes to complete if rescan is true.\\n\""
      },
      {
        "sha": "198a2058aaced537ae667f70c82280eb473dd53a",
        "filename": "test/functional/importprunedfunds.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/405e069d3b8c71b0f5161d9dfb2334a0bb988f2e/test/functional/importprunedfunds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/405e069d3b8c71b0f5161d9dfb2334a0bb988f2e/test/functional/importprunedfunds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/importprunedfunds.py?ref=405e069d3b8c71b0f5161d9dfb2334a0bb988f2e",
        "patch": "@@ -82,8 +82,8 @@ def run_test(self):\n         assert_equal(balance2, Decimal('0.05'))\n \n         #Import with private key with no rescan\n-        self.nodes[1].importprivkey(address3_privkey, \"add3\", False)\n-        result3 = self.nodes[1].importprunedfunds(rawtxn3, proof3)\n+        self.nodes[1].importprivkey(privkey=address3_privkey, label=\"add3\", rescan=False)\n+        self.nodes[1].importprunedfunds(rawtxn3, proof3)\n         balance3 = self.nodes[1].getbalance(\"add3\", 0, False)\n         assert_equal(balance3, Decimal('0.025'))\n         balance3 = self.nodes[1].getbalance(\"*\", 0, True)"
      }
    ]
  },
  {
    "sha": "20cdc2b36c40221a0eec942a1fbdf38ca7c4e005",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMGNkYzJiMzZjNDAyMjFhMGVlYzk0MmExZmJkZjM4Y2E3YzRlMDA1",
    "commit": {
      "author": {
        "name": "Pedro Branco",
        "email": "branco@uphold.com",
        "date": "2017-10-11T10:12:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-10-17T19:44:23Z"
      },
      "message": "Fix importmulti bug when importing an already imported key\n\nGithub-Pull: #11483\nRebased-From: a44a215177ab55b4a3b36a7980c313e908e2dd18",
      "tree": {
        "sha": "0aa67d9446e49456d0cd4635a44f7b9e3a93e295",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0aa67d9446e49456d0cd4635a44f7b9e3a93e295"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20cdc2b36c40221a0eec942a1fbdf38ca7c4e005",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20cdc2b36c40221a0eec942a1fbdf38ca7c4e005",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/20cdc2b36c40221a0eec942a1fbdf38ca7c4e005",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20cdc2b36c40221a0eec942a1fbdf38ca7c4e005/comments",
    "author": null,
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "405e069d3b8c71b0f5161d9dfb2334a0bb988f2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/405e069d3b8c71b0f5161d9dfb2334a0bb988f2e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/405e069d3b8c71b0f5161d9dfb2334a0bb988f2e"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 13,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6c8ff7fc3b2ef4b3fe25a6f4db868ac3bc1f3b62",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20cdc2b36c40221a0eec942a1fbdf38ca7c4e005/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20cdc2b36c40221a0eec942a1fbdf38ca7c4e005/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=20cdc2b36c40221a0eec942a1fbdf38ca7c4e005",
        "patch": "@@ -960,7 +960,7 @@ UniValue ProcessImport(CWallet * const pwallet, const UniValue& data, const int6\n                 pwallet->SetAddressBook(vchAddress, label, \"receive\");\n \n                 if (pwallet->HaveKey(vchAddress)) {\n-                    return false;\n+                    throw JSONRPCError(RPC_WALLET_ERROR, \"The wallet already contains the private key for this address or script\");\n                 }\n \n                 pwallet->mapKeyMetadata[vchAddress].nCreateTime = timestamp;"
      },
      {
        "sha": "783f06f9121e83fc4bf23eea634b7a020181016a",
        "filename": "test/functional/importmulti.py",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20cdc2b36c40221a0eec942a1fbdf38ca7c4e005/test/functional/importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20cdc2b36c40221a0eec942a1fbdf38ca7c4e005/test/functional/importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/importmulti.py?ref=20cdc2b36c40221a0eec942a1fbdf38ca7c4e005",
        "patch": "@@ -170,6 +170,18 @@ def run_test (self):\n         assert_equal(address_assert['ismine'], True)\n         assert_equal(address_assert['timestamp'], timestamp)\n \n+        self.log.info(\"Should not import an address with private key if is already imported\")\n+        result = self.nodes[1].importmulti([{\n+            \"scriptPubKey\": {\n+                \"address\": address['address']\n+            },\n+            \"timestamp\": \"now\",\n+            \"keys\": [ self.nodes[0].dumpprivkey(address['address']) ]\n+        }])\n+        assert_equal(result[0]['success'], False)\n+        assert_equal(result[0]['error']['code'], -4)\n+        assert_equal(result[0]['error']['message'], 'The wallet already contains the private key for this address or script')\n+\n         # Address + Private key + watchonly\n         self.log.info(\"Should not import an address with private key and with watchonly\")\n         address = self.nodes[0].validateaddress(self.nodes[0].getnewaddress())"
      }
    ]
  }
]