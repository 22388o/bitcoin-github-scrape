[
  {
    "sha": "ab2c5144a3092d1960ba64279148fe561c82e371",
    "node_id": "C_kwDOABII59oAKGFiMmM1MTQ0YTMwOTJkMTk2MGJhNjQyNzkxNDhmZTU2MWM4MmUzNzE",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-09T15:17:39Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-11-21T17:17:38Z"
      },
      "message": "consensus: require CBlockIndex::GetBlockPos() to hold mutex cs_main",
      "tree": {
        "sha": "7add3fc401272f26e19279c4d81c50d3bbb2b13c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7add3fc401272f26e19279c4d81c50d3bbb2b13c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab2c5144a3092d1960ba64279148fe561c82e371",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab2c5144a3092d1960ba64279148fe561c82e371",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab2c5144a3092d1960ba64279148fe561c82e371",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab2c5144a3092d1960ba64279148fe561c82e371/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7e360081506cc646dd86f131df2d01f3c544f0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7e360081506cc646dd86f131df2d01f3c544f0e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7e360081506cc646dd86f131df2d01f3c544f0e"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 34,
      "deletions": 22
    },
    "files": [
      {
        "sha": "187ca8bec67d21ef6590cb38b486ad1e89ba85b0",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab2c5144a3092d1960ba64279148fe561c82e371/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab2c5144a3092d1960ba64279148fe561c82e371/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=ab2c5144a3092d1960ba64279148fe561c82e371",
        "patch": "@@ -10,6 +10,7 @@\n #include <consensus/params.h>\n #include <flatfile.h>\n #include <primitives/block.h>\n+#include <sync.h>\n #include <tinyformat.h>\n #include <uint256.h>\n \n@@ -37,6 +38,8 @@ static constexpr int64_t TIMESTAMP_WINDOW = MAX_FUTURE_BLOCK_TIME;\n  */\n static constexpr int64_t MAX_BLOCK_TIME_GAP = 90 * 60;\n \n+extern RecursiveMutex cs_main;\n+\n class CBlockFileInfo\n {\n public:\n@@ -220,7 +223,9 @@ class CBlockIndex\n     {\n     }\n \n-    FlatFilePos GetBlockPos() const {\n+    FlatFilePos GetBlockPos() const EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+    {\n+        AssertLockHeld(cs_main);\n         FlatFilePos ret;\n         if (nStatus & BLOCK_HAVE_DATA) {\n             ret.nFile = nFile;"
      },
      {
        "sha": "8873b3ffccd685bdc8fed8dba7183c492e4129a4",
        "filename": "src/index/txindex.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab2c5144a3092d1960ba64279148fe561c82e371/src/index/txindex.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab2c5144a3092d1960ba64279148fe561c82e371/src/index/txindex.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/txindex.cpp?ref=ab2c5144a3092d1960ba64279148fe561c82e371",
        "patch": "@@ -57,7 +57,10 @@ bool TxIndex::WriteBlock(const CBlock& block, const CBlockIndex* pindex)\n     // Exclude genesis block transaction because outputs are not spendable.\n     if (pindex->nHeight == 0) return true;\n \n-    CDiskTxPos pos(pindex->GetBlockPos(), GetSizeOfCompactSize(block.vtx.size()));\n+    CDiskTxPos pos{\n+        WITH_LOCK(cs_main, return pindex->GetBlockPos()),\n+        GetSizeOfCompactSize(block.vtx.size())\n+    };\n     std::vector<std::pair<uint256, CDiskTxPos>> vPos;\n     vPos.reserve(block.vtx.size());\n     for (const auto& tx : block.vtx) {"
      },
      {
        "sha": "31ba684237b3a734e596fe4057cc246c1abe7ac6",
        "filename": "src/node/blockstorage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab2c5144a3092d1960ba64279148fe561c82e371/src/node/blockstorage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab2c5144a3092d1960ba64279148fe561c82e371/src/node/blockstorage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/blockstorage.cpp?ref=ab2c5144a3092d1960ba64279148fe561c82e371",
        "patch": "@@ -443,12 +443,7 @@ bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const FlatFilePos& pos, c\n \n bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CBlockIndex* pindex, const CMessageHeader::MessageStartChars& message_start)\n {\n-    FlatFilePos block_pos;\n-    {\n-        LOCK(cs_main);\n-        block_pos = pindex->GetBlockPos();\n-    }\n-\n+    const FlatFilePos block_pos{WITH_LOCK(cs_main, return pindex->GetBlockPos())};\n     return ReadRawBlockFromDisk(block, block_pos, message_start);\n }\n "
      },
      {
        "sha": "cca472df2203ce31329cf0e78ffc7c5e8bc6acb3",
        "filename": "src/test/fuzz/chain.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 9,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab2c5144a3092d1960ba64279148fe561c82e371/src/test/fuzz/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab2c5144a3092d1960ba64279148fe561c82e371/src/test/fuzz/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/chain.cpp?ref=ab2c5144a3092d1960ba64279148fe561c82e371",
        "patch": "@@ -21,15 +21,18 @@ FUZZ_TARGET(chain)\n \n     const uint256 zero{};\n     disk_block_index->phashBlock = &zero;\n-    (void)disk_block_index->GetBlockHash();\n-    (void)disk_block_index->GetBlockPos();\n-    (void)disk_block_index->GetBlockTime();\n-    (void)disk_block_index->GetBlockTimeMax();\n-    (void)disk_block_index->GetMedianTimePast();\n-    (void)disk_block_index->GetUndoPos();\n-    (void)disk_block_index->HaveTxsDownloaded();\n-    (void)disk_block_index->IsValid();\n-    (void)disk_block_index->ToString();\n+    {\n+        LOCK(cs_main);\n+        (void)disk_block_index->GetBlockHash();\n+        (void)disk_block_index->GetBlockPos();\n+        (void)disk_block_index->GetBlockTime();\n+        (void)disk_block_index->GetBlockTimeMax();\n+        (void)disk_block_index->GetMedianTimePast();\n+        (void)disk_block_index->GetUndoPos();\n+        (void)disk_block_index->HaveTxsDownloaded();\n+        (void)disk_block_index->IsValid();\n+        (void)disk_block_index->ToString();\n+    }\n \n     const CBlockHeader block_header = disk_block_index->GetBlockHeader();\n     (void)CDiskBlockIndex{*disk_block_index};"
      },
      {
        "sha": "1a663bd0b346a2431a95be77032febff17e60019",
        "filename": "src/test/util/blockfilter.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab2c5144a3092d1960ba64279148fe561c82e371/src/test/util/blockfilter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab2c5144a3092d1960ba64279148fe561c82e371/src/test/util/blockfilter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/blockfilter.cpp?ref=ab2c5144a3092d1960ba64279148fe561c82e371",
        "patch": "@@ -11,6 +11,8 @@\n \n bool ComputeFilter(BlockFilterType filter_type, const CBlockIndex* block_index, BlockFilter& filter)\n {\n+    LOCK(cs_main);\n+\n     CBlock block;\n     if (!ReadBlockFromDisk(block, block_index->GetBlockPos(), Params().GetConsensus())) {\n         return false;"
      },
      {
        "sha": "4ac8936ee76a9cdb3c6d74f1f48a98d1eb7549f4",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab2c5144a3092d1960ba64279148fe561c82e371/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab2c5144a3092d1960ba64279148fe561c82e371/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=ab2c5144a3092d1960ba64279148fe561c82e371",
        "patch": "@@ -86,7 +86,10 @@ BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n {\n     // Cap last block file size, and mine new block in a new block file.\n     CBlockIndex* oldTip = m_node.chainman->ActiveChain().Tip();\n-    GetBlockFileInfo(oldTip->GetBlockPos().nFile)->nSize = MAX_BLOCKFILE_SIZE;\n+    {\n+        LOCK(cs_main);\n+        GetBlockFileInfo(oldTip->GetBlockPos().nFile)->nSize = MAX_BLOCKFILE_SIZE;\n+    }\n     CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey()));\n     CBlockIndex* newTip = m_node.chainman->ActiveChain().Tip();\n \n@@ -131,8 +134,8 @@ BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n     {\n         LOCK(cs_main);\n         Assert(m_node.chainman)->m_blockman.PruneOneBlockFile(oldTip->GetBlockPos().nFile);\n+        UnlinkPrunedFiles({oldTip->GetBlockPos().nFile});\n     }\n-    UnlinkPrunedFiles({oldTip->GetBlockPos().nFile});\n \n     // Verify ScanForWalletTransactions only picks transactions in the new block\n     // file.\n@@ -157,8 +160,8 @@ BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n     {\n         LOCK(cs_main);\n         Assert(m_node.chainman)->m_blockman.PruneOneBlockFile(newTip->GetBlockPos().nFile);\n+        UnlinkPrunedFiles({newTip->GetBlockPos().nFile});\n     }\n-    UnlinkPrunedFiles({newTip->GetBlockPos().nFile});\n \n     // Verify ScanForWalletTransactions scans no blocks.\n     {\n@@ -183,16 +186,17 @@ BOOST_FIXTURE_TEST_CASE(importmulti_rescan, TestChain100Setup)\n {\n     // Cap last block file size, and mine new block in a new block file.\n     CBlockIndex* oldTip = m_node.chainman->ActiveChain().Tip();\n-    GetBlockFileInfo(oldTip->GetBlockPos().nFile)->nSize = MAX_BLOCKFILE_SIZE;\n+    const auto pos{WITH_LOCK(cs_main, return oldTip->GetBlockPos())};\n+    GetBlockFileInfo(pos.nFile)->nSize = MAX_BLOCKFILE_SIZE;\n     CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey()));\n     CBlockIndex* newTip = m_node.chainman->ActiveChain().Tip();\n \n     // Prune the older block file.\n     {\n         LOCK(cs_main);\n         Assert(m_node.chainman)->m_blockman.PruneOneBlockFile(oldTip->GetBlockPos().nFile);\n+        UnlinkPrunedFiles({oldTip->GetBlockPos().nFile});\n     }\n-    UnlinkPrunedFiles({oldTip->GetBlockPos().nFile});\n \n     // Verify importmulti RPC returns failure for a key whose creation time is\n     // before the missing block, and success for a key whose creation time is"
      }
    ]
  },
  {
    "sha": "686ae2d9757886dcd2499a98a78cf877c1dda8bc",
    "node_id": "C_kwDOABII59oAKDY4NmFlMmQ5NzU3ODg2ZGNkMjQ5OWE5OGE3OGNmODc3YzFkZGE4YmM",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-10-21T14:56:34Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-11-21T17:17:38Z"
      },
      "message": "blockstorage: require WriteUndoDataForBlock() to hold mutex cs_main\n\nThis is needed in order to require CBlockIndex::GetUndoPos()\nto hold mutex cs_main in the next commit, without adding the\nfollowing unnecessary lock to WriteUndoDataForBlock() to compile\nwithout clang warnings:\n\n    if (WITH_LOCK(cs_main, return pindex->GetUndoPos()).IsNull()) {",
      "tree": {
        "sha": "597b2cba758bc3e646cdfc6a57e5b4401842c9d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/597b2cba758bc3e646cdfc6a57e5b4401842c9d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/686ae2d9757886dcd2499a98a78cf877c1dda8bc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/686ae2d9757886dcd2499a98a78cf877c1dda8bc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/686ae2d9757886dcd2499a98a78cf877c1dda8bc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/686ae2d9757886dcd2499a98a78cf877c1dda8bc/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab2c5144a3092d1960ba64279148fe561c82e371",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab2c5144a3092d1960ba64279148fe561c82e371",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab2c5144a3092d1960ba64279148fe561c82e371"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "875110b04b2eaeac15b5e1c2d2629350a9aa48a5",
        "filename": "src/node/blockstorage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/686ae2d9757886dcd2499a98a78cf877c1dda8bc/src/node/blockstorage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/686ae2d9757886dcd2499a98a78cf877c1dda8bc/src/node/blockstorage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/blockstorage.cpp?ref=686ae2d9757886dcd2499a98a78cf877c1dda8bc",
        "patch": "@@ -335,6 +335,7 @@ static bool WriteBlockToDisk(const CBlock& block, FlatFilePos& pos, const CMessa\n \n bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex* pindex, const CChainParams& chainparams)\n {\n+    AssertLockHeld(cs_main);\n     // Write undo information to disk\n     if (pindex->GetUndoPos().IsNull()) {\n         FlatFilePos _pos;"
      },
      {
        "sha": "93e3b1e934373c3284f0f22c0ab5ee9113ce335f",
        "filename": "src/node/blockstorage.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/686ae2d9757886dcd2499a98a78cf877c1dda8bc/src/node/blockstorage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/686ae2d9757886dcd2499a98a78cf877c1dda8bc/src/node/blockstorage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/blockstorage.h?ref=686ae2d9757886dcd2499a98a78cf877c1dda8bc",
        "patch": "@@ -7,11 +7,14 @@\n \n #include <fs.h>\n #include <protocol.h> // For CMessageHeader::MessageStartChars\n+#include <sync.h>\n \n #include <atomic>\n #include <cstdint>\n #include <vector>\n \n+extern RecursiveMutex cs_main;\n+\n class ArgsManager;\n class BlockValidationState;\n class CBlock;\n@@ -73,7 +76,7 @@ bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const FlatFilePos& pos, c\n bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CBlockIndex* pindex, const CMessageHeader::MessageStartChars& message_start);\n \n bool UndoReadFromDisk(CBlockUndo& blockundo, const CBlockIndex* pindex);\n-bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex* pindex, const CChainParams& chainparams);\n+bool WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValidationState& state, CBlockIndex* pindex, const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n FlatFilePos SaveBlockToDisk(const CBlock& block, int nHeight, CChain& active_chain, const CChainParams& chainparams, const FlatFilePos* dbp);\n "
      }
    ]
  },
  {
    "sha": "c54dd68f3821428f7853517566c26bc5d32a060a",
    "node_id": "C_kwDOABII59oAKGM1NGRkNjhmMzgyMTQyOGY3ODUzNTE3NTY2YzI2YmM1ZDMyYTA2MGE",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-09T16:48:22Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-11-21T17:17:38Z"
      },
      "message": "consensus: require CBlockIndex::GetUndoPos() to hold mutex cs_main",
      "tree": {
        "sha": "c4d5305ea4be8528a999fb98ce6fd07165abb201",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c4d5305ea4be8528a999fb98ce6fd07165abb201"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c54dd68f3821428f7853517566c26bc5d32a060a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c54dd68f3821428f7853517566c26bc5d32a060a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c54dd68f3821428f7853517566c26bc5d32a060a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c54dd68f3821428f7853517566c26bc5d32a060a/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "686ae2d9757886dcd2499a98a78cf877c1dda8bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/686ae2d9757886dcd2499a98a78cf877c1dda8bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/686ae2d9757886dcd2499a98a78cf877c1dda8bc"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "52455358bb94a3a35f2b900d9765130170065eff",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c54dd68f3821428f7853517566c26bc5d32a060a/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c54dd68f3821428f7853517566c26bc5d32a060a/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=c54dd68f3821428f7853517566c26bc5d32a060a",
        "patch": "@@ -234,7 +234,9 @@ class CBlockIndex\n         return ret;\n     }\n \n-    FlatFilePos GetUndoPos() const {\n+    FlatFilePos GetUndoPos() const EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+    {\n+        AssertLockHeld(cs_main);\n         FlatFilePos ret;\n         if (nStatus & BLOCK_HAVE_UNDO) {\n             ret.nFile = nFile;"
      },
      {
        "sha": "a73462efe28851e820fddadfc5da273a63b249e1",
        "filename": "src/node/blockstorage.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c54dd68f3821428f7853517566c26bc5d32a060a/src/node/blockstorage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c54dd68f3821428f7853517566c26bc5d32a060a/src/node/blockstorage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/blockstorage.cpp?ref=c54dd68f3821428f7853517566c26bc5d32a060a",
        "patch": "@@ -136,7 +136,8 @@ static bool UndoWriteToDisk(const CBlockUndo& blockundo, FlatFilePos& pos, const\n \n bool UndoReadFromDisk(CBlockUndo& blockundo, const CBlockIndex* pindex)\n {\n-    FlatFilePos pos = pindex->GetUndoPos();\n+    const FlatFilePos pos{WITH_LOCK(cs_main, return pindex->GetUndoPos())};\n+\n     if (pos.IsNull()) {\n         return error(\"%s: no undo data available\", __func__);\n     }"
      }
    ]
  },
  {
    "sha": "b1c859abb790a1bbc9c31e3a535e36d1c59085b9",
    "node_id": "C_kwDOABII59oAKGIxYzg1OWFiYjc5MGExYmJjOWMzMWUzYTUzNWUzNmQxYzU5MDg1Yjk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-17T17:07:19Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-11-21T17:17:38Z"
      },
      "message": "consensus: guard CBlockIndex::nStatus by mutex cs_main",
      "tree": {
        "sha": "2e48b399430ff1c94524113b8a621e5e7014e0d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e48b399430ff1c94524113b8a621e5e7014e0d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1c859abb790a1bbc9c31e3a535e36d1c59085b9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1c859abb790a1bbc9c31e3a535e36d1c59085b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1c859abb790a1bbc9c31e3a535e36d1c59085b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1c859abb790a1bbc9c31e3a535e36d1c59085b9/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c54dd68f3821428f7853517566c26bc5d32a060a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c54dd68f3821428f7853517566c26bc5d32a060a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c54dd68f3821428f7853517566c26bc5d32a060a"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 16,
      "deletions": 4
    },
    "files": [
      {
        "sha": "91c5f3cc0c2e3f5827aaff64fddd98ff770d83a8",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1c859abb790a1bbc9c31e3a535e36d1c59085b9/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1c859abb790a1bbc9c31e3a535e36d1c59085b9/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=b1c859abb790a1bbc9c31e3a535e36d1c59085b9",
        "patch": "@@ -195,7 +195,7 @@ class CBlockIndex\n     //! load to avoid the block index being spuriously rewound.\n     //! @sa NeedsRedownload\n     //! @sa ActivateSnapshot\n-    uint32_t nStatus{0};\n+    uint32_t nStatus GUARDED_BY(cs_main){0};\n \n     //! block header\n     int32_t nVersion{0};\n@@ -310,20 +310,27 @@ class CBlockIndex\n     bool IsValid(enum BlockStatus nUpTo = BLOCK_VALID_TRANSACTIONS) const\n     {\n         assert(!(nUpTo & ~BLOCK_VALID_MASK)); // Only validity flags allowed.\n-        if (nStatus & BLOCK_FAILED_MASK)\n+        LOCK(cs_main);\n+        if (nStatus & BLOCK_FAILED_MASK) {\n             return false;\n+        }\n         return ((nStatus & BLOCK_VALID_MASK) >= nUpTo);\n     }\n \n     //! @returns true if the block is assumed-valid; this means it is queued to be\n     //!   validated by a background chainstate.\n-    bool IsAssumedValid() const { return nStatus & BLOCK_ASSUMED_VALID; }\n+    bool IsAssumedValid() const\n+    {\n+        LOCK(cs_main);\n+        return nStatus & BLOCK_ASSUMED_VALID;\n+    }\n \n     //! Raise the validity level of this block index entry.\n     //! Returns true if the validity was changed.\n     bool RaiseValidity(enum BlockStatus nUpTo)\n     {\n         assert(!(nUpTo & ~BLOCK_VALID_MASK)); // Only validity flags allowed.\n+        LOCK(cs_main);\n         if (nStatus & BLOCK_FAILED_MASK) return false;\n \n         if ((nStatus & BLOCK_VALID_MASK) < nUpTo) {\n@@ -370,6 +377,7 @@ class CDiskBlockIndex : public CBlockIndex\n \n     SERIALIZE_METHODS(CDiskBlockIndex, obj)\n     {\n+        LOCK(cs_main);\n         int _nVersion = s.GetVersion();\n         if (!(s.GetType() & SER_GETHASH)) READWRITE(VARINT_MODE(_nVersion, VarIntMode::NONNEGATIVE_SIGNED));\n "
      },
      {
        "sha": "ab306426c98b0ca73745ad98248a9b820cfbb588",
        "filename": "src/node/blockstorage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1c859abb790a1bbc9c31e3a535e36d1c59085b9/src/node/blockstorage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1c859abb790a1bbc9c31e3a535e36d1c59085b9/src/node/blockstorage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/blockstorage.cpp?ref=b1c859abb790a1bbc9c31e3a535e36d1c59085b9",
        "patch": "@@ -48,6 +48,7 @@ static FlatFileSeq UndoFileSeq();\n \n bool IsBlockPruned(const CBlockIndex* pblockindex)\n {\n+    LOCK(cs_main);\n     return (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0);\n }\n "
      },
      {
        "sha": "70ec89957998cfff05734486cb5679e630beb1b9",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1c859abb790a1bbc9c31e3a535e36d1c59085b9/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1c859abb790a1bbc9c31e3a535e36d1c59085b9/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=b1c859abb790a1bbc9c31e3a535e36d1c59085b9",
        "patch": "@@ -196,7 +196,8 @@ static RPCHelpMan getrawtransaction()\n     if (!tx) {\n         std::string errmsg;\n         if (blockindex) {\n-            if (!(blockindex->nStatus & BLOCK_HAVE_DATA)) {\n+            const bool block_has_data{WITH_LOCK(cs_main, return static_cast<bool>(blockindex->nStatus & BLOCK_HAVE_DATA))};\n+            if (!block_has_data) {\n                 throw JSONRPCError(RPC_MISC_ERROR, \"Block not available\");\n             }\n             errmsg = \"No such transaction found in the provided block\";"
      },
      {
        "sha": "20df6962623e55956e0ba2892b31744e4fef1a4a",
        "filename": "src/test/interfaces_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1c859abb790a1bbc9c31e3a535e36d1c59085b9/src/test/interfaces_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1c859abb790a1bbc9c31e3a535e36d1c59085b9/src/test/interfaces_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/interfaces_tests.cpp?ref=b1c859abb790a1bbc9c31e3a535e36d1c59085b9",
        "patch": "@@ -123,6 +123,7 @@ BOOST_AUTO_TEST_CASE(findCommonAncestor)\n \n BOOST_AUTO_TEST_CASE(hasBlocks)\n {\n+    LOCK(cs_main);\n     auto& chain = m_node.chain;\n     const CChain& active = Assert(m_node.chainman)->ActiveChain();\n "
      },
      {
        "sha": "c56af964f3d40f4b2a6f39eeee77b99fa4df340e",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1c859abb790a1bbc9c31e3a535e36d1c59085b9/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1c859abb790a1bbc9c31e3a535e36d1c59085b9/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=b1c859abb790a1bbc9c31e3a535e36d1c59085b9",
        "patch": "@@ -308,6 +308,7 @@ bool CBlockTreeDB::LoadBlockIndexGuts(const Consensus::Params& consensusParams,\n             CDiskBlockIndex diskindex;\n             if (pcursor->GetValue(diskindex)) {\n                 // Construct block index object\n+                LOCK(cs_main);\n                 CBlockIndex* pindexNew = insertBlockIndex(diskindex.GetBlockHash());\n                 pindexNew->pprev          = insertBlockIndex(diskindex.hashPrev);\n                 pindexNew->nHeight        = diskindex.nHeight;"
      }
    ]
  }
]