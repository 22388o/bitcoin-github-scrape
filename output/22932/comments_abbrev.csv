DrahtBot,2021-09-12 16:00:46,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23581](https://github.com/bitcoin/bitcoin/pull/23581) (Move BlockManager to node/blockstorage by MarcoFalke)\n\nIf you c",https://github.com/bitcoin/bitcoin/pull/22932#issuecomment-917662835,917662835,
jonatack,2021-09-16 20:04:00,Rebased following the merge of #22895 that this was based on.,https://github.com/bitcoin/bitcoin/pull/22932#issuecomment-921206538,921206538,
jonatack,2021-09-17 16:22:22,"Thanks @MarcoFalke, updated with your suggestions per `git diff f6c2fdb e950f0e`\n\n<details><summary>diff</summary><p>\n\n```diff \ndiff --git a/src/test/util/blockfilter.cpp b/src/test/util/blockfilter.cpp\nindex 311913b5db..1a663bd0b3 100644\n--- a/src/test/util/blockfilter.cpp\n+++ b/src/test/util/blockfilter.cpp\n@@ -11,8 +11,10 @@\n \n bool ComputeFilter(BlockFilterType filter_typ",https://github.com/bitcoin/bitcoin/pull/22932#issuecomment-921923502,921923502,
jonatack,2021-09-23 21:29:53,Rebased after the merge of #21526.,https://github.com/bitcoin/bitcoin/pull/22932#issuecomment-926175891,926175891,
jonatack,2021-11-22 10:29:26,"Thank you for reviewing, @promag. Updated based on your feedback per `git diff 9cacc50 b1c859a`.",https://github.com/bitcoin/bitcoin/pull/22932#issuecomment-975378387,975378387,
fjahr,2021-11-28 17:24:22,"Hm, the description only says ""Potentially related to issue #17161."", otherwise I don't really see a description of what problem this PR is actually fixing/improving?",https://github.com/bitcoin/bitcoin/pull/22932#issuecomment-981121451,981121451,
MarcoFalke,2021-09-17 10:17:17,"This is annotating the function, but not the underlying data member that needs the annotation.\n\nNot sure how involved it will be to annotate everything properly here. Also, given that cs_main is the validation lock, we should (eventually/ideally) have a separate node_storage lock. Though, this again requires a major validation/node_storage rewrite.\n\nHowever an argument against adding the l",https://github.com/bitcoin/bitcoin/pull/22932#discussion_r710934432,710934432,src/chain.h
MarcoFalke,2021-09-17 10:29:40,"nit: unit tests are single-threaded, so you can just take the lock for the whole function. It is likely that there are other lock violations anyway: See https://github.com/bitcoin/bitcoin/issues/17161#issuecomment-543151879",https://github.com/bitcoin/bitcoin/pull/22932#discussion_r710942005,710942005,src/test/util/blockfilter.cpp
MarcoFalke,2021-09-17 10:30:50,"Same: Can include this in the cs_main scope as well, I think.",https://github.com/bitcoin/bitcoin/pull/22932#discussion_r710942658,710942658,src/wallet/test/wallet_tests.cpp
jonatack,2021-09-17 16:07:38,done,https://github.com/bitcoin/bitcoin/pull/22932#discussion_r711181854,711181854,src/test/util/blockfilter.cpp
jonatack,2021-09-17 16:15:45,"done, thank you",https://github.com/bitcoin/bitcoin/pull/22932#discussion_r711187206,711187206,src/wallet/test/wallet_tests.cpp
jonatack,2021-09-17 16:38:02,Having a quick look at annotating `nStatus` to assess.,https://github.com/bitcoin/bitcoin/pull/22932#discussion_r711201778,711201778,src/chain.h
jonatack,2021-09-17 17:17:27,Appended a small commit to guard `CBlockIndex::nStatus` by `cs_main`.,https://github.com/bitcoin/bitcoin/pull/22932#discussion_r711225765,711225765,src/chain.h
promag,2021-10-16 09:59:01,"e8cc6987f34d19f88de8c461af1efcdd8c3825ec\n\nMissing\n```\nAssertLockHeld(cs_main);\n```",https://github.com/bitcoin/bitcoin/pull/22932#discussion_r730241371,730241371,src/chain.h
promag,2021-10-16 09:59:43,"9bec673716e68b1854562e4e48a6cb26d8949a59\n\nMissing\n```\nAssertLockHeld(cs_main);\n```",https://github.com/bitcoin/bitcoin/pull/22932#discussion_r730241402,730241402,src/chain.h
promag,2021-10-16 10:03:11,"9bec673716e68b1854562e4e48a6cb26d8949a59\n\nWhy is this needed? `WriteUndoDataForBlock` is only called  from `CChainState::ConnectBlock` which already locks `cs_main`.",https://github.com/bitcoin/bitcoin/pull/22932#discussion_r730241821,730241821,src/node/blockstorage.cpp
promag,2021-10-16 10:05:56,"9cacc50225f5d8990aeb4bd3cb6d03a18d776ff0\n\nAgain, `cs_main` is already held here right?",https://github.com/bitcoin/bitcoin/pull/22932#discussion_r730242048,730242048,src/node/blockstorage.cpp
promag,2021-10-16 10:08:03,"9cacc50225f5d8990aeb4bd3cb6d03a18d776ff0\n\nnit,\n```cpp\nconst bool block_have_data{WITH_LOCK(cs_main, return blockindex->nStatus & BLOCK_HAVE_DATA)};\n```",https://github.com/bitcoin/bitcoin/pull/22932#discussion_r730242273,730242273,src/rpc/rawtransaction.cpp
jonatack,2021-11-21 17:26:46,"Thanks @promag, done.",https://github.com/bitcoin/bitcoin/pull/22932#discussion_r753830643,753830643,src/chain.h
jonatack,2021-11-21 17:27:09,Done.,https://github.com/bitcoin/bitcoin/pull/22932#discussion_r753830745,753830745,src/chain.h
jonatack,2021-11-21 17:30:36,Done.,https://github.com/bitcoin/bitcoin/pull/22932#discussion_r753831056,753831056,src/rpc/rawtransaction.cpp
jonatack,2021-11-21 17:39:51,"@promag You're right; Clang 13 seems unable to detect this on its own, but the unneeded lock can be avoided by requiring `WriteUndoDataForBlock()` to hold cs_main instead. Done in  686ae2d97.",https://github.com/bitcoin/bitcoin/pull/22932#discussion_r753832096,753832096,src/node/blockstorage.cpp
jonatack,2021-11-21 17:41:29,Thanks! Removed in both places in this function as described in https://github.com/bitcoin/bitcoin/pull/22932#discussion_r753832096.,https://github.com/bitcoin/bitcoin/pull/22932#discussion_r753832294,753832294,src/node/blockstorage.cpp
