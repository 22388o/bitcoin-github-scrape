MarcoFalke,2018-03-18T13:47:41Z,utACK db9fd32284c8ad5b7f3b11efc0716324a5abd147,https://github.com/bitcoin/bitcoin/pull/12510#issuecomment-374000540,374000540,
jnewbery,2018-03-20T17:44:46Z,"I think there should be some indication in the test_runner summary that the full test has not been run. A printed warning log is not enough, since the user will have no indication that the test hasn't been fully executed.\n\nOne way we could do this is to add options to the rpc_bind.py test. See https://github.com/jnewbery/bitcoin/commit/2361e82258675d52612675904565b15694fabed3 for example.",https://github.com/bitcoin/bitcoin/pull/12510#issuecomment-374691949,374691949,
MarcoFalke,2018-04-01T22:41:01Z,Needs rebase if still relevant,https://github.com/bitcoin/bitcoin/pull/12510#issuecomment-377822446,377822446,
laanwj,2018-04-02T11:38:33Z,"Well the thought here was that running part of the test is better than not running it at all. \nIndeed, adding options for ipv4/ipv6 testing would be an option, But I feel we're overcomplicating this, this is also what made me unsure about this change.\n\n> Vendors have had at least 15 years to add IPv6 support to their IP networking stacks: https://www.ipv6.com/general/ipv6-the-history-and-tim",https://github.com/bitcoin/bitcoin/pull/12510#issuecomment-377912483,377912483,
laanwj,2018-04-02T11:50:06Z,Rebased and added a squasshme commit that skips the entire test if no IPv6 localhost. Probably should do the same for `non_loopback_ip`. But let's see how this goes on travis.,https://github.com/bitcoin/bitcoin/pull/12510#issuecomment-377913961,377913961,
laanwj,2018-04-02T14:52:21Z,"So apparently travis still has no IPv6 support. Disappointing.\nThis causes the test to be skipped on travis for now.\nThat's ok, at least it will still run by default locally.\n",https://github.com/bitcoin/bitcoin/pull/12510#issuecomment-377946810,377946810,
jnewbery,2018-04-02T15:50:52Z,"Changes look good. Will ACK once the commits are squashed.\n\nI think there's still value to running a subset of the tests when ipv6/non-loopback interfaces are not available, as long as it's clearly communicated to the user that the full test has not been run.\n\nI still think something like https://github.com/jnewbery/bitcoin/commit/2361e82258675d52612675904565b15694fabed3 could be useful in",https://github.com/bitcoin/bitcoin/pull/12510#issuecomment-377960953,377960953,
laanwj,2018-04-03T11:44:04Z,"> I still think something like jnewbery/bitcoin@2361e82 could be useful in a future PR, so at least Travis is running a subset of this test.\n\nOh that's a good idea, I didn't think of splitting up the test into parts and still adding all the sub-parts to the default-run tests (so that they'll run locally) - will take that over.",https://github.com/bitcoin/bitcoin/pull/12510#issuecomment-378221319,378221319,
laanwj,2018-04-13T12:40:27Z,Took over @jnewbery's commit and did the rebase that was needed.,https://github.com/bitcoin/bitcoin/pull/12510#issuecomment-381122711,381122711,
jnewbery,2018-04-13T13:49:28Z,"Thanks @laanwj . Will rereview.\n\nTravis failure was unrelated. p2p_compactblocks.py seems to be particularly flakey these days. I'll kick travis.",https://github.com/bitcoin/bitcoin/pull/12510#issuecomment-381141270,381141270,
jnewbery,2018-04-23T15:49:55Z,"post-merge tested ACK e87fefc60fc0f648b5e26aa716481e79a85f04de.\n\nSorry for not rereviewing earlier - feel free to prod me if I've promised a review and not delivered!",https://github.com/bitcoin/bitcoin/pull/12510#issuecomment-383624577,383624577,
laanwj,2018-02-22T15:29:23Z,"The allowip test could also be done by connecting from a second loopback IP, say, 127.0.0.2. This would obliterate the need for a non loopback IP, but would need support in the test framework at the RPC/HTTP level for binding to a different address before outgoing connection (connecting to a different interface IP does that part automatically...)",https://github.com/bitcoin/bitcoin/pull/12510#discussion_r169994145,169994145,test/functional/rpc_bind.py
laanwj,2018-02-22T15:56:57Z,"Ughh, I tried this but it doesn't work. Apparently the entire IPv4 subnet is unconditionally allowed.\n```c++\nrpc_allow_subnets.push_back(CSubNet(localv4, 8));      // always allow IPv4 local subnet\n```\n(It works when removing the `, 8` - the full changes are here: https://github.com/laanwj/bitcoin/commit/0dad20fe2f9ef3c053b007704f46fd1f0e26fc5f)\n(It would also work for IPv6, as it only b",https://github.com/bitcoin/bitcoin/pull/12510#discussion_r170003975,170003975,test/functional/rpc_bind.py
randolf,2018-03-18T14:20:47Z,@laanwj It depends on the IP stack implementation.  Some only allow the use of only 127.0.0.1 while others seem to effectively bind 127/8.  I think it would be best to rely only on 127.0.0.1 and ::1 for loopback-based IPv4/IPv6 compatibility checks.,https://github.com/bitcoin/bitcoin/pull/12510#discussion_r175290862,175290862,test/functional/rpc_bind.py
laanwj,2018-04-02T11:33:52Z,"This is a linux-specific test though, so in this test we can asume `/8` and don't care about other IP stack implementations.",https://github.com/bitcoin/bitcoin/pull/12510#discussion_r178528992,178528992,test/functional/rpc_bind.py
