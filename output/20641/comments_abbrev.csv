BlockMechanic,2020-12-13 15:29:06,"This seems pretty clean, testing. Had you tested this with additional modules ? (that was my reasoning for changing the way QT builds)",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-744023840,744023840,
hebasto,2020-12-13 15:35:57,"> Had you tested this with additional modules ? (that was my reasoning for changing the way QT builds)\n\nI've started with the following `qt.pro`\n```\n# Create the super cache so modules will add themselves to it.\ncache(, super)\n\nCONFIG += prepare_docs qt_docs_targets\n\nTEMPLATE = subdirs\nSUBDIRS = qtbase qtdeclarative qtgraphicaleffects qtquickcontrols2 qttools qttranslations\n",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-744024797,744024797,
BlockMechanic,2020-12-13 15:42:42,"> > Had you tested this with additional modules ? (that was my reasoning for changing the way QT builds)\n> \n> I've started with the following `qt.pro`\n\n> that works, and reduced changes to this minimal diff.\n\nI will test this, great work ! ",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-744025794,744025794,
promag,2020-12-13 16:09:15,Is there any advantage of this approach beside avoid downloading the full source archive?,https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-744030080,744030080,
hebasto,2020-12-13 16:31:35,"> Is there any advantage of this approach beside avoid downloading the full source archive?\n\nNot dealing with unneeded stuff, I guess.",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-744032977,744032977,
BlockMechanic,2020-12-13 16:44:36,"> Is there any advantage of this approach beside avoid downloading the full source archive?\n\nNot that i can see. but it is much cleaner IMO. ",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-744034786,744034786,
DrahtBot,2020-12-13 22:43:45,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22469 by hebasto\n\nIf you consider this pull request important, please also help to review the conflicting pull requests",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-744081230,744081230,
laanwj,2020-12-16 17:21:05,"> Is there any advantage of this approach beside avoid downloading the full source archive?\n\nThe full Qt source archive is **huge**. I prefer being selective.",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-746671045,746671045,
hebasto,2020-12-25 09:10:14,"Rebased 770e40c4af3e77dcc9f0cc1fa4973d4f9a1baf5a -> b72ff7c3c30a41167f3a14f89ad18f6cf7124122 ([pr20641.01](https://github.com/hebasto/bitcoin/commits/pr20641.01) -> [pr20641.02](https://github.com/hebasto/bitcoin/commits/pr20641.02)) due to the conflict with #20673.\n",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-751215742,751215742,
promag,2021-01-08 20:50:14,"> > Is there any advantage of this approach beside avoid downloading the full source archive?\n> \n> The full Qt source archive is **huge**. I prefer being selective.\n\n@laanwj true, in Qt 5.15. But in Qt 6 the fat module (qtwebengine-everywhere-src-5.15.2.tar.xz with 267M) is gone, see\nhttp://download.qt.io/official_releases/qt/5.15/5.15.2/single/ and http://download.qt.io/official_release",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-756991858,756991858,
promag,2021-01-08 20:52:55,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-756992814,756992814,
BlockMechanic,2021-01-09 03:16:50,"@hebasto check out how I selected the required components using gitmodules, it effectively keeps compile time the same, while allowing easier addition/removal of modules.",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-757086436,757086436,
hebasto,2021-01-09 08:06:05,"> @hebasto check out how I selected the required components using gitmodules, it effectively keeps compile time the same, while allowing easier addition/removal of modules.\n\nWhich branch?",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-757114022,757114022,
BlockMechanic,2021-01-09 08:09:27,"> > @hebasto check out how I selected the required components using gitmodules, it effectively keeps compile time the same, while allowing easier addition/removal of modules.\n> \n> Which branch?\nsee files gitmodules and fix_git_modules.patch here :- https://github.com/bitcoin/bitcoin/pull/20600/files",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-757114332,757114332,
hebasto,2021-06-10 19:09:07,"Rebased b72ff7c3c30a41167f3a14f89ad18f6cf7124122 -> 5ca6e8f16bc8bf7d4a388aeb8677ba2262d91b8e ([pr20641.02](https://github.com/hebasto/bitcoin/commits/pr20641.02) -> [pr20641.05](https://github.com/hebasto/bitcoin/commits/pr20641.05)) and improved.\n\nThe OP updated.",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-858930807,858930807,
hebasto,2021-06-10 22:08:13,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n1666b7e6a342b0089a900edb02721dcede74269eaa2976e5a01f443c0c0929fc  guix-build-5ca6e8f16bc8/output/aarch64-linux-gnu/bitcoin-5ca6e8f16bc8-aarch64-linux-gnu-debug.tar.gz\nbcd89e2835e7b25b84c1e32f81e8424edd0be22301ae44b778648a3ad3e40891  guix-build-5ca6e8",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-859111915,859111915,
hebasto,2021-06-11 01:12:38,"#### Gitian builds:\n\n- Linux\n```\nGenerating report\n36b88f354e1354df4d350a568a460f1068c68730eb249476b35df29ee1859d3f  bitcoin-5ca6e8f16bc8-aarch64-linux-gnu-debug.tar.gz\n6becaea105d391be157e56b313501bd8fcbb7eb739b06fe44008577a2edf02ae  bitcoin-5ca6e8f16bc8-aarch64-linux-gnu.tar.gz\nb26eccbb6536f64fa0d29005d41bb95bad4087aaf134543377d07eab14de26b2  bitcoin-5ca6e8f16bc8-arm-linux-gnueabih",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-859188778,859188778,
fanquake,2021-06-11 05:26:56,"Guix builds:\n```bash\nbash-5.1# find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n1666b7e6a342b0089a900edb02721dcede74269eaa2976e5a01f443c0c0929fc  guix-build-5ca6e8f16bc8/output/aarch64-linux-gnu/bitcoin-5ca6e8f16bc8-aarch64-linux-gnu-debug.tar.gz\nbcd89e2835e7b25b84c1e32f81e8424edd0be22301ae44b778648a3ad3e40891  guix-build",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-859277166,859277166,
fanquake,2021-06-14 07:27:24,"> makes it easy to integrate new modules into static builds\n\nCan you demonstrate this in a branch on top of these changes?",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-860451752,860451752,
hebasto,2021-06-15 21:26:04,"Updated 5ca6e8f16bc8bf7d4a388aeb8677ba2262d91b8e -> 763793b60e4ec0d1df129279ca3f08fc97d6d90e ([pr20641.05](https://github.com/hebasto/bitcoin/commits/pr20641.05) -> [pr20641.06](https://github.com/hebasto/bitcoin/commits/pr20641.06)):\n- dropped some unimportant commits\n- improved compatibility with possible module addition\n- rebased\n\n@fanquake \n\n> > makes it easy to integrate new mod",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-861844730,861844730,
hebasto,2021-06-16 03:00:28,"#### Guix builds:\n\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n5bb23a2c9ff259da9516f763afaec4ebef92214bb21d5f8eb4818019e12d19df  guix-build-1155978d8f3f/output/aarch64-linux-gnu/bitcoin-1155978d8f3f-aarch64-linux-gnu-debug.tar.gz\n764d717839128d1a5194b48a953ee162248a782d8614a5aa8f498c27460768f1  guix-build-115",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-861999112,861999112,
hebasto,2021-06-16 05:21:01,"#### Gitian builds:\n\n- Linux\n```\nGenerating report\n1d5173dedbcac24a458b97bdb8e2634dc8434e40ab84d5c551d3a4fb680d0344  bitcoin-1155978d8f3f-aarch64-linux-gnu-debug.tar.gz\n9b05b71039bc0690bd6d44342f1823354acc3567098c1a1e647e93a27cc37459  bitcoin-1155978d8f3f-aarch64-linux-gnu.tar.gz\n865f31945c0f1519b4fb0b3401ad54d606c11ba38326eaef2b61d3c5fd9c7972  bitcoin-1155978d8f3f-arm-linux-gnueabih",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-862048059,862048059,
hebasto,2021-06-16 19:34:42,"@fanquake\n \n> > Can you demonstrate this in a branch on top of these changes?\n> \n> See: [hebasto:201213-top-DEMO](https://github.com/hebasto/bitcoin/commits/201213-top-DEMO).\n\nCI on Cirrus: https://cirrus-ci.com/build/5900358854639616\n\nThe only [error](https://cirrus-ci.com/task/5275098656538624) is about linking against `xcb-shm` (see #21376 and #22174), but it is not related to t",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-862657868,862657868,
fanquake,2021-07-18 06:00:25,"Guix builds:\n```bash\n5bb23a2c9ff259da9516f763afaec4ebef92214bb21d5f8eb4818019e12d19df  guix-build-1155978d8f3f/output/aarch64-linux-gnu/bitcoin-1155978d8f3f-aarch64-linux-gnu-debug.tar.gz\n764d717839128d1a5194b48a953ee162248a782d8614a5aa8f498c27460768f1  guix-build-1155978d8f3f/output/aarch64-linux-gnu/bitcoin-1155978d8f3f-aarch64-linux-gnu.tar.gz\nc33129ffcec4e1ced5b21663facc034f08ffcb7e599",https://github.com/bitcoin/bitcoin/pull/20641#issuecomment-882004084,882004084,
icota,2020-12-14 08:23:46,Should we move this file and `mac-qmake.conf` to `../../configs/qt`?,https://github.com/bitcoin/bitcoin/pull/20641#discussion_r542191953,542191953,depends/patches/qt/qt.pro
hebasto,2020-12-14 09:31:52,"Files in the `depends/patches/<package>/` directory are subjects of a [build hash calculation](https://github.com/bitcoin/bitcoin/blob/25bc840e038f5cc3a1d70d6fbaf1dc2eb2c6e460/depends/funcs.mk#L37-L40). So, I don't think that moving some of them to another directory is a good idea.",https://github.com/bitcoin/bitcoin/pull/20641#discussion_r542235756,542235756,depends/patches/qt/qt.pro
icota,2020-12-14 11:12:16,"One could add `depends/configs` to the calculation. No big deal either way, perhaps I'm nitpicking",https://github.com/bitcoin/bitcoin/pull/20641#discussion_r542302885,542302885,depends/patches/qt/qt.pro
