[
  {
    "sha": "4eb5025eae67ab781b02c95fd2aa5101a3221694",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWI1MDI1ZWFlNjdhYjc4MWIwMmM5NWZkMmFhNTEwMWEzMjIxNjk0",
    "commit": {
      "author": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2018-05-04T14:37:46Z"
      },
      "committer": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2018-05-04T14:37:46Z"
      },
      "message": "replaces std::vector<bool> with std::vector<char>\n\nstd::vector<bool> is unfortunately very slow. This change replaces it with std::vector<char>\nlike it is done in ApproximateBestSubset. Also updates number of iterations for the benchmark.\n\nThe performance difference is quite significant:\n\nBnBExhaustion, 5, 650, 2.08837, 0.000634196, 0.000660664, 0.000638457  # before\nBnBExhaustion, 5, 2300, 4.89576, 0.000422629, 0.000429628, 0.000424571 # after\n\nThis changes speeds up the benchmark by a factor of about 1.5.",
      "tree": {
        "sha": "e89f1f7f20f9609768ffb3389d799493d26ec3f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e89f1f7f20f9609768ffb3389d799493d26ec3f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4eb5025eae67ab781b02c95fd2aa5101a3221694",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4eb5025eae67ab781b02c95fd2aa5101a3221694",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4eb5025eae67ab781b02c95fd2aa5101a3221694",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4eb5025eae67ab781b02c95fd2aa5101a3221694/comments",
    "author": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7eb7076f70078c06bef9752f22acf92fd86e616a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7eb7076f70078c06bef9752f22acf92fd86e616a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7eb7076f70078c06bef9752f22acf92fd86e616a"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f46e175e0d9384ce626cbe051541c8ff99cf8156",
        "filename": "src/bench/coin_selection.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4eb5025eae67ab781b02c95fd2aa5101a3221694/src/bench/coin_selection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4eb5025eae67ab781b02c95fd2aa5101a3221694/src/bench/coin_selection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/coin_selection.cpp?ref=4eb5025eae67ab781b02c95fd2aa5101a3221694",
        "patch": "@@ -105,4 +105,4 @@ static void BnBExhaustion(benchmark::State& state)\n }\n \n BENCHMARK(CoinSelection, 650);\n-BENCHMARK(BnBExhaustion, 650);\n+BENCHMARK(BnBExhaustion, 2300);"
      },
      {
        "sha": "d23da50bf976485c20a27073fcdbfc0c324f07cc",
        "filename": "src/wallet/coinselection.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4eb5025eae67ab781b02c95fd2aa5101a3221694/src/wallet/coinselection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4eb5025eae67ab781b02c95fd2aa5101a3221694/src/wallet/coinselection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coinselection.cpp?ref=4eb5025eae67ab781b02c95fd2aa5101a3221694",
        "patch": "@@ -64,7 +64,7 @@ bool SelectCoinsBnB(std::vector<CInputCoin>& utxo_pool, const CAmount& target_va\n     out_set.clear();\n     CAmount curr_value = 0;\n \n-    std::vector<bool> curr_selection; // select the utxo at this index\n+    std::vector<char> curr_selection; // select the utxo at this index\n     curr_selection.reserve(utxo_pool.size());\n     CAmount actual_target = not_input_fees + target_value;\n \n@@ -83,7 +83,7 @@ bool SelectCoinsBnB(std::vector<CInputCoin>& utxo_pool, const CAmount& target_va\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n \n     CAmount curr_waste = 0;\n-    std::vector<bool> best_selection;\n+    std::vector<char> best_selection;\n     CAmount best_waste = MAX_MONEY;\n \n     // Depth First search loop for choosing the UTXOs"
      }
    ]
  },
  {
    "sha": "70be3e2bb730dfe1f997f378d569b69ff4c49722",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MGJlM2UyYmI3MzBkZmUxZjk5N2YzNzhkNTY5YjY5ZmY0YzQ5NzIy",
    "commit": {
      "author": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2018-05-04T15:10:49Z"
      },
      "committer": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2018-05-04T15:10:49Z"
      },
      "message": "Use indexing instead of push_back() / pop_back\n\nUsing a preallocated std::vector<char> with indexing instead of push_back and\npop_back further speeds up the algorithm:\n\nBnBExhaustion, 5, 2300, 4.89576, 0.000422629, 0.000429628, 0.000424571 # std::vector<const>\nBnBExhaustion, 5, 2300, 3.48065, 0.000299667, 0.000308361, 0.000301751 # with indexing\n\nSpeedup is a factor of 1.4 on my machine.",
      "tree": {
        "sha": "33c5e6ed6dd4ea6df9861f122f731348ad9d2d97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33c5e6ed6dd4ea6df9861f122f731348ad9d2d97"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70be3e2bb730dfe1f997f378d569b69ff4c49722",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70be3e2bb730dfe1f997f378d569b69ff4c49722",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/70be3e2bb730dfe1f997f378d569b69ff4c49722",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70be3e2bb730dfe1f997f378d569b69ff4c49722/comments",
    "author": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4eb5025eae67ab781b02c95fd2aa5101a3221694",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4eb5025eae67ab781b02c95fd2aa5101a3221694",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4eb5025eae67ab781b02c95fd2aa5101a3221694"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 15,
      "deletions": 15
    },
    "files": [
      {
        "sha": "31c545047ab9d588ecb3fee18106135d5b6827d6",
        "filename": "src/wallet/coinselection.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70be3e2bb730dfe1f997f378d569b69ff4c49722/src/wallet/coinselection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70be3e2bb730dfe1f997f378d569b69ff4c49722/src/wallet/coinselection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coinselection.cpp?ref=70be3e2bb730dfe1f997f378d569b69ff4c49722",
        "patch": "@@ -64,8 +64,8 @@ bool SelectCoinsBnB(std::vector<CInputCoin>& utxo_pool, const CAmount& target_va\n     out_set.clear();\n     CAmount curr_value = 0;\n \n-    std::vector<char> curr_selection; // select the utxo at this index\n-    curr_selection.reserve(utxo_pool.size());\n+    std::vector<char> curr_selection(utxo_pool.size(), false); // select the utxo at this index\n+    size_t curr_selection_size = 0;\n     CAmount actual_target = not_input_fees + target_value;\n \n     // Calculate curr_available_value\n@@ -102,7 +102,6 @@ bool SelectCoinsBnB(std::vector<CInputCoin>& utxo_pool, const CAmount& target_va\n             // explore any more UTXOs to avoid burning money like that.\n             if (curr_waste <= best_waste) {\n                 best_selection = curr_selection;\n-                best_selection.resize(utxo_pool.size());\n                 best_waste = curr_waste;\n             }\n             curr_waste -= (curr_value - actual_target); // Remove the excess value as we will be selecting different coins now\n@@ -112,38 +111,39 @@ bool SelectCoinsBnB(std::vector<CInputCoin>& utxo_pool, const CAmount& target_va\n         // Backtracking, moving backwards\n         if (backtrack) {\n             // Walk backwards to find the last included UTXO that still needs to have its omission branch traversed.\n-            while (!curr_selection.empty() && !curr_selection.back()) {\n-                curr_selection.pop_back();\n-                curr_available_value += utxo_pool.at(curr_selection.size()).effective_value;\n+            while (curr_selection_size > 0 && !curr_selection[curr_selection_size - 1]) {\n+                --curr_selection_size;\n+                curr_available_value += utxo_pool.at(curr_selection_size).effective_value;\n             };\n \n-            if (curr_selection.empty()) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n+            if (curr_selection_size == 0) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n                 break;\n             }\n \n             // Output was included on previous iterations, try excluding now.\n-            curr_selection.back() = false;\n-            CInputCoin& utxo = utxo_pool.at(curr_selection.size() - 1);\n+            curr_selection[curr_selection_size - 1] = false;\n+            CInputCoin& utxo = utxo_pool.at(curr_selection_size - 1);\n             curr_value -= utxo.effective_value;\n             curr_waste -= utxo.fee - utxo.long_term_fee;\n         } else { // Moving forwards, continuing down this branch\n-            CInputCoin& utxo = utxo_pool.at(curr_selection.size());\n+            CInputCoin& utxo = utxo_pool.at(curr_selection_size);\n \n             // Remove this utxo from the curr_available_value utxo amount\n             curr_available_value -= utxo.effective_value;\n \n             // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded. Since the ratio of fee to\n             // long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n-            if (!curr_selection.empty() && !curr_selection.back() &&\n-                utxo.effective_value == utxo_pool.at(curr_selection.size() - 1).effective_value &&\n-                utxo.fee == utxo_pool.at(curr_selection.size() - 1).fee) {\n-                curr_selection.push_back(false);\n+            if (curr_selection_size > 0 && !curr_selection[curr_selection_size - 1] &&\n+                utxo.effective_value == utxo_pool.at(curr_selection_size - 1).effective_value &&\n+                utxo.fee == utxo_pool.at(curr_selection_size - 1).fee) {\n+                curr_selection[curr_selection_size] = false;\n             } else {\n                 // Inclusion branch first (Largest First Exploration)\n-                curr_selection.push_back(true);\n+                curr_selection[curr_selection_size] = true;\n                 curr_value += utxo.effective_value;\n                 curr_waste += utxo.fee - utxo.long_term_fee;\n             }\n+            ++curr_selection_size;\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "d339f1f85e3fd7765464718d2c077712a9c07177",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzM5ZjFmODVlM2ZkNzc2NTQ2NDcxOGQyYzA3NzcxMmE5YzA3MTc3",
    "commit": {
      "author": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2018-05-04T15:16:00Z"
      },
      "committer": {
        "name": "Martin Ankerl",
        "email": "martin.ankerl@gmail.com",
        "date": "2018-05-04T15:16:00Z"
      },
      "message": "replace .at() with [] indexing\n\n.at() performs out of bounds checks, which are not necessary because\ncurr_available_value is used as a stopping criteria anyways. Another speedup:\n\nBnBExhaustion, 5, 2300, 3.48065, 0.000299667, 0.000308361, 0.000301751 # with curr_selection_size\nBnBExhaustion, 5, 2300, 3.08375, 0.000266867, 0.000270109, 0.00026751  # [] instead of .at\n\nSpeeds up by another factor of 1.13.",
      "tree": {
        "sha": "91ee3ca57d0bbe942dee997a8a069f0b70ac2e65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91ee3ca57d0bbe942dee997a8a069f0b70ac2e65"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d339f1f85e3fd7765464718d2c077712a9c07177",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d339f1f85e3fd7765464718d2c077712a9c07177",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d339f1f85e3fd7765464718d2c077712a9c07177",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d339f1f85e3fd7765464718d2c077712a9c07177/comments",
    "author": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70be3e2bb730dfe1f997f378d569b69ff4c49722",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70be3e2bb730dfe1f997f378d569b69ff4c49722",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70be3e2bb730dfe1f997f378d569b69ff4c49722"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "ad3d7a859d7acfe72e787aeaa7c30e0a30a6ab7e",
        "filename": "src/wallet/coinselection.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d339f1f85e3fd7765464718d2c077712a9c07177/src/wallet/coinselection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d339f1f85e3fd7765464718d2c077712a9c07177/src/wallet/coinselection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coinselection.cpp?ref=d339f1f85e3fd7765464718d2c077712a9c07177",
        "patch": "@@ -92,7 +92,7 @@ bool SelectCoinsBnB(std::vector<CInputCoin>& utxo_pool, const CAmount& target_va\n         bool backtrack = false;\n         if (curr_value + curr_available_value < actual_target ||                // Cannot possibly reach target with the amount remaining in the curr_available_value.\n             curr_value > actual_target + cost_of_change ||    // Selected value is out of range, go back and try other branch\n-            (curr_waste > best_waste && (utxo_pool.at(0).fee - utxo_pool.at(0).long_term_fee) > 0)) { // Don't select things which we know will be more wasteful if the waste is increasing\n+            (curr_waste > best_waste && (utxo_pool[0].fee - utxo_pool[0].long_term_fee) > 0)) { // Don't select things which we know will be more wasteful if the waste is increasing\n             backtrack = true;\n         } else if (curr_value >= actual_target) {       // Selected value is within range\n             curr_waste += (curr_value - actual_target); // This is the excess value which is added to the waste for the below comparison\n@@ -113,7 +113,7 @@ bool SelectCoinsBnB(std::vector<CInputCoin>& utxo_pool, const CAmount& target_va\n             // Walk backwards to find the last included UTXO that still needs to have its omission branch traversed.\n             while (curr_selection_size > 0 && !curr_selection[curr_selection_size - 1]) {\n                 --curr_selection_size;\n-                curr_available_value += utxo_pool.at(curr_selection_size).effective_value;\n+                curr_available_value += utxo_pool[curr_selection_size].effective_value;\n             };\n \n             if (curr_selection_size == 0) { // We have walked back to the first utxo and no branch is untraversed. All solutions searched\n@@ -122,20 +122,20 @@ bool SelectCoinsBnB(std::vector<CInputCoin>& utxo_pool, const CAmount& target_va\n \n             // Output was included on previous iterations, try excluding now.\n             curr_selection[curr_selection_size - 1] = false;\n-            CInputCoin& utxo = utxo_pool.at(curr_selection_size - 1);\n+            CInputCoin& utxo = utxo_pool[curr_selection_size - 1];\n             curr_value -= utxo.effective_value;\n             curr_waste -= utxo.fee - utxo.long_term_fee;\n         } else { // Moving forwards, continuing down this branch\n-            CInputCoin& utxo = utxo_pool.at(curr_selection_size);\n+            CInputCoin& utxo = utxo_pool[curr_selection_size];\n \n             // Remove this utxo from the curr_available_value utxo amount\n             curr_available_value -= utxo.effective_value;\n \n             // Avoid searching a branch if the previous UTXO has the same value and same waste and was excluded. Since the ratio of fee to\n             // long term fee is the same, we only need to check if one of those values match in order to know that the waste is the same.\n             if (curr_selection_size > 0 && !curr_selection[curr_selection_size - 1] &&\n-                utxo.effective_value == utxo_pool.at(curr_selection_size - 1).effective_value &&\n-                utxo.fee == utxo_pool.at(curr_selection_size - 1).fee) {\n+                utxo.effective_value == utxo_pool[curr_selection_size - 1].effective_value &&\n+                utxo.fee == utxo_pool[curr_selection_size - 1].fee) {\n                 curr_selection[curr_selection_size] = false;\n             } else {\n                 // Inclusion branch first (Largest First Exploration)\n@@ -155,9 +155,9 @@ bool SelectCoinsBnB(std::vector<CInputCoin>& utxo_pool, const CAmount& target_va\n     // Set output set\n     value_ret = 0;\n     for (size_t i = 0; i < best_selection.size(); ++i) {\n-        if (best_selection.at(i)) {\n-            out_set.insert(utxo_pool.at(i));\n-            value_ret += utxo_pool.at(i).txout.nValue;\n+        if (best_selection[i]) {\n+            out_set.insert(utxo_pool[i]);\n+            value_ret += utxo_pool[i].txout.nValue;\n         }\n     }\n "
      }
    ]
  }
]