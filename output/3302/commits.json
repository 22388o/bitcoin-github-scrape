[
  {
    "sha": "e5adec35c65b5194d0d4465b4d095f34e80dcc94",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNWFkZWMzNWM2NWI1MTk0ZDBkNDQ2NWI0ZDA5NWYzNGU4MGRjYzk0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-22T04:49:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-11-24T11:44:31Z"
      },
      "message": "contrib: add sipa's github-merge script",
      "tree": {
        "sha": "85c90820804979bc77eb939a9c861becc1c14b39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85c90820804979bc77eb939a9c861becc1c14b39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5adec35c65b5194d0d4465b4d095f34e80dcc94",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5adec35c65b5194d0d4465b4d095f34e80dcc94",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5adec35c65b5194d0d4465b4d095f34e80dcc94",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5adec35c65b5194d0d4465b4d095f34e80dcc94/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "be5d37c59757ac3b6deae1e3b238dcb2168207cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/be5d37c59757ac3b6deae1e3b238dcb2168207cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/be5d37c59757ac3b6deae1e3b238dcb2168207cb"
      }
    ],
    "stats": {
      "total": 215,
      "additions": 215,
      "deletions": 0
    },
    "files": [
      {
        "sha": "167b5df4e18d45e974bb5c2d894c244664e0334c",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5adec35c65b5194d0d4465b4d095f34e80dcc94/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5adec35c65b5194d0d4465b4d095f34e80dcc94/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=e5adec35c65b5194d0d4465b4d095f34e80dcc94",
        "patch": "@@ -52,3 +52,7 @@ tests each pull and when master is tested using jenkins.\n ### [Verify SF Binaries](/contrib/verifysfbinaries) ###\n This script attempts to download and verify the signature file SHA256SUMS.asc from SourceForge.\n \n+### [Developer tools](/control/devtools) ###\n+Specific tools for developers working on this repository.\n+Contains the script `github-merge.sh` for merging github pull requests securely and signing them using GPG.\n+"
      },
      {
        "sha": "55d5d24cca097c20e8db9224b2e4253307ca5263",
        "filename": "contrib/devtools/README.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5adec35c65b5194d0d4465b4d095f34e80dcc94/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5adec35c65b5194d0d4465b4d095f34e80dcc94/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=e5adec35c65b5194d0d4465b4d095f34e80dcc94",
        "patch": "@@ -0,0 +1,38 @@\n+Contents\n+===========\n+This directory contains tools for developers working on this repository.\n+\n+github-merge.sh\n+----------------\n+\n+A small script to automate merging pull-requests securely and sign them with GPG.\n+\n+For example:\n+\n+  ./github-merge.sh bitcoin/bitcoin 3077\n+\n+(in any git repository) will help you merge pull request #3077 for the\n+bitcoin/bitcoin repository.\n+\n+What it does:\n+* Fetch master and the pull request.\n+* Locally construct a merge commit.\n+* Show the diff that merge results in.\n+* Ask you to verify the resulting source tree (so you can do a make\n+check or whatever).\n+* Ask you whether to GPG sign the merge commit.\n+* Ask you whether to push the result upstream.\n+\n+This means that there are no potential race conditions (where a\n+pullreq gets updated while you're reviewing it, but before you click\n+merge), and when using GPG signatures, that even a compromised github\n+couldn't mess with the sources.\n+\n+Setup\n+---------\n+Configuring the github-merge tool for the bitcoin repository is done in the following way:\n+\n+    git config githubmerge.repository bitcoin/bitcoin\n+    git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n+    git config --global user.signingkey mykeyid (if you want to GPG sign)\n+"
      },
      {
        "sha": "e42b71a54ac076e120a8965848b976834e30195d",
        "filename": "contrib/devtools/github-merge.sh",
        "status": "added",
        "additions": 173,
        "deletions": 0,
        "changes": 173,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5adec35c65b5194d0d4465b4d095f34e80dcc94/contrib/devtools/github-merge.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5adec35c65b5194d0d4465b4d095f34e80dcc94/contrib/devtools/github-merge.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.sh?ref=e5adec35c65b5194d0d4465b4d095f34e80dcc94",
        "patch": "@@ -0,0 +1,173 @@\n+#!/bin/bash\n+\n+# This script will locally construct a merge commit for a pull request on a\n+# github repository, inspect it, sign it and optionally push it.\n+\n+# The following temporary branches are created/overwritten and deleted:\n+# * pull/$PULL/base (the current master we're merging onto)\n+# * pull/$PULL/head (the current state of the remote pull request)\n+# * pull/$PULL/merge (github's merge)\n+# * pull/$PULL/local-merge (our merge)\n+\n+# In case of a clean merge that is accepted by the user, the local branch with\n+# name $BRANCH is overwritten with the merged result, and optionally pushed.\n+\n+REPO=\"$(git config --get githubmerge.repository)\"\n+if [[ \"d$REPO\" == \"d\" ]]; then\n+  echo \"ERROR: No repository configured. Use this command to set:\" >&2\n+  echo \"git config githubmerge.repository <owner>/<repo>\" >&2\n+  echo \"In addition, you can set the following variables:\" >&2\n+  echo \"- githubmerge.host (default git@github.com)\" >&2\n+  echo \"- githubmerge.branch (default master)\" >&2\n+  echo \"- githubmerge.testcmd (default none)\" >&2\n+  exit 1\n+fi\n+\n+HOST=\"$(git config --get githubmerge.host)\"\n+if [[ \"d$HOST\" == \"d\" ]]; then\n+  HOST=\"git@github.com\"\n+fi\n+\n+BRANCH=\"$(git config --get githubmerge.branch)\"\n+if [[ \"d$BRANCH\" == \"d\" ]]; then\n+  BRANCH=\"master\"\n+fi\n+\n+TESTCMD=\"$(git config --get githubmerge.testcmd)\"\n+\n+PULL=\"$1\"\n+\n+if [[ \"d$PULL\" == \"d\" ]]; then\n+  echo \"Usage: $0 pullnumber [branch]\" >&2\n+  exit 2\n+fi\n+\n+if [[ \"d$2\" != \"d\" ]]; then\n+  BRANCH=\"$2\"\n+fi\n+\n+# Initialize source branches.\n+git checkout -q \"$BRANCH\"\n+if git fetch -q \"$HOST\":\"$REPO\" \"+refs/pull/$PULL/*:refs/heads/pull/$PULL/*\"; then\n+  if ! git log -1q \"refs/heads/pull/$PULL/head\" >/dev/null 2>&1; then\n+    echo \"ERROR: Cannot find head of pull request #$PULL on $HOST:$REPO.\" >&2\n+    exit 3\n+  fi\n+  if ! git log -1q \"refs/heads/pull/$PULL/merge\" >/dev/null 2>&1; then\n+    echo \"ERROR: Cannot find merge of pull request #$PULL on $HOST:$REPO.\" >&2\n+    exit 3\n+  fi\n+else\n+  echo \"ERROR: Cannot find pull request #$PULL on $HOST:$REPO.\" >&2\n+  exit 3\n+fi\n+if git fetch -q \"$HOST\":\"$REPO\" +refs/heads/\"$BRANCH\":refs/heads/pull/\"$PULL\"/base; then\n+  true\n+else\n+  echo \"ERROR: Cannot find branch $BRANCH on $HOST:$REPO.\" >&2\n+  exit 3\n+fi\n+git checkout -q pull/\"$PULL\"/base\n+git branch -q -D pull/\"$PULL\"/local-merge 2>/dev/null\n+git checkout -q -b pull/\"$PULL\"/local-merge\n+TMPDIR=\"$(mktemp -d -t ghmXXXXX)\"\n+\n+function cleanup() {\n+  git checkout -q \"$BRANCH\"\n+  git branch -q -D pull/\"$PULL\"/head 2>/dev/null\n+  git branch -q -D pull/\"$PULL\"/base 2>/dev/null\n+  git branch -q -D pull/\"$PULL\"/merge 2>/dev/null\n+  git branch -q -D pull/\"$PULL\"/local-merge 2>/dev/null\n+  rm -rf \"$TMPDIR\"\n+}\n+\n+# Create unsigned merge commit.\n+(\n+  echo \"Merge pull request #$PULL\"\n+  echo \"\"\n+  git log --no-merges --topo-order --pretty='format:%h %s (%an)' pull/\"$PULL\"/base..pull/\"$PULL\"/head\n+)>\"$TMPDIR/message\"\n+if git merge -q --commit --no-edit --no-ff -m \"$(<\"$TMPDIR/message\")\" pull/\"$PULL\"/head; then\n+  if [ \"d$(git log --pretty='format:%s' -n 1)\" != \"dMerge pull request #$PULL\" ]; then\n+    echo \"ERROR: Creating merge failed (already merged?).\" >&2\n+    cleanup\n+    exit 4\n+  fi\n+else\n+  echo \"ERROR: Cannot be merged cleanly.\" >&2\n+  git merge --abort\n+  cleanup\n+  exit 4\n+fi\n+\n+# Run test command if configured.\n+if [[ \"d$TESTCMD\" != \"d\" ]]; then\n+  # Go up to the repository's root.\n+  while [ ! -d .git ]; do cd ..; done\n+  if ! $TESTCMD; then\n+    echo \"ERROR: Running $TESTCMD failed.\" >&2\n+    cleanup\n+    exit 5\n+  fi\n+  # Show the created merge.\n+  git diff pull/\"$PULL\"/merge..pull/\"$PULL\"/local-merge >\"$TMPDIR\"/diff\n+  git diff pull/\"$PULL\"/base..pull/\"$PULL\"/local-merge\n+  if [[ \"$(<\"$TMPDIR\"/diff)\" != \"\" ]]; then\n+    echo \"WARNING: merge differs from github!\" >&2\n+    read -p \"Type 'ignore' to continue. \" -r >&2\n+    if [[ \"d$REPLY\" =~ ^d[iI][gG][nN][oO][rR][eE]$ ]]; then\n+      echo \"Difference with github ignored.\" >&2\n+    else\n+      cleanup\n+      exit 6\n+    fi\n+  fi\n+  read -p \"Press 'd' to accept the diff. \" -n 1 -r >&2\n+  echo\n+  if [[ \"d$REPLY\" =~ ^d[dD]$ ]]; then\n+    echo \"Diff accepted.\" >&2\n+  else\n+    echo \"ERROR: Diff rejected.\" >&2\n+    cleanup\n+    exit 6\n+  fi\n+else\n+  # Verify the result.\n+  echo \"Dropping you on a shell so you can try building/testing the merged source.\" >&2\n+  echo \"Run 'git diff HEAD~' to show the changes being merged.\" >&2\n+  echo \"Type 'exit' when done.\" >&2\n+  bash -i\n+  read -p \"Press 'm' to accept the merge. \" -n 1 -r >&2\n+  echo\n+  if [[ \"d$REPLY\" =~ ^d[Mm]$ ]]; then\n+    echo \"Merge accepted.\" >&2\n+  else\n+    echo \"ERROR: Merge rejected.\" >&2\n+    cleanup\n+    exit 7\n+  fi\n+fi\n+\n+# Sign the merge commit.\n+read -p \"Press 's' to sign off on the merge. \" -n 1 -r >&2\n+echo\n+if [[ \"d$REPLY\" =~ ^d[Ss]$ ]]; then\n+  if [[ \"$(git config --get user.signingkey)\" == \"\" ]]; then\n+    echo \"WARNING: No GPG signing key set, not signing. Set one using:\" >&2\n+    echo \"git config --global user.signingkey <key>\" >&2\n+    git commit -q --signoff --amend --no-edit\n+  else\n+    git commit -q --gpg-sign --amend --no-edit\n+  fi\n+fi\n+\n+# Clean up temporary branches, and put the result in $BRANCH.\n+git checkout -q \"$BRANCH\"\n+git reset -q --hard pull/\"$PULL\"/local-merge\n+cleanup\n+\n+# Push the result.\n+read -p \"Type 'push' to push the result to $HOST:$REPO, branch $BRANCH. \" -r >&2\n+if [[ \"d$REPLY\" =~ ^d[Pp][Uu][Ss][Hh]$ ]]; then\n+  git push \"$HOST\":\"$REPO\" refs/heads/\"$BRANCH\"\n+fi"
      }
    ]
  }
]