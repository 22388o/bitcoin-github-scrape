[
  {
    "sha": "fa8192f42e1d24444f1d0433c96dbce1adf76967",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTgxOTJmNDJlMWQyNDQ0NGYxZDA0MzNjOTZkYmNlMWFkZjc2OTY3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-23T09:41:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-01T10:16:28Z"
      },
      "message": "rpc: Fail to return undocumented return values",
      "tree": {
        "sha": "ac36014b0eda47a216e01977b7c6dc6940d288a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac36014b0eda47a216e01977b7c6dc6940d288a8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8192f42e1d24444f1d0433c96dbce1adf76967",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhp5Av8C/e2mI4zXDvYhbpLH6wIuKdXg77GEJjELIaxiLWj79TmJBabTd2ZsdNt\nsnJAaQ95SNcvJF7W6KbiPxYrWHsi21KuoLrIpowd+5xunIJpPSxaX7FadJlc2lJY\n9+PkZOW/TjEOb4w2+2Q27u4NFR5bETMMYore+uHjmvr1Ru4/8ehZ8GofhsgFxMLB\nhPUzXNtsJMFFHHKvR4/0i02MrVRgncwdEl3jOjnXDmFoDfjzQbShfiVX1YcB7a28\nITiMe0EDM32gFgpzsQaRQfmihug0YYA00vG5A1dA0F6mm6qbMf9ghhG68xnIlfpo\nInf27eQAMsvdTd9LApoD5YP+ZQKQ/uuY+JVH0bfVCeKS9zO6XeDMGNDaB00T2KyZ\n6Wh7NBrJUxuBvhT6BggGmsgktG+l//Rjyk8aowHDT3dw/pS8AQbikrCURDFxjmjo\nwdvg4CgcE44ICN8g4m3eaF5k2283M9ejgOHTR+f/9pAaN6Hns2WU4NmL893ELK6V\nKzwqKkdy\n=BZXb\n-----END PGP SIGNATURE-----",
        "payload": "tree ac36014b0eda47a216e01977b7c6dc6940d288a8\nparent 80a699fda9ff1129546cabbf17e955680a1cc705\nauthor MarcoFalke <falke.marco@gmail.com> 1606124487 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1617272188 +0200\n\nrpc: Fail to return undocumented return values\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8192f42e1d24444f1d0433c96dbce1adf76967",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8192f42e1d24444f1d0433c96dbce1adf76967",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8192f42e1d24444f1d0433c96dbce1adf76967/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80a699fda9ff1129546cabbf17e955680a1cc705",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80a699fda9ff1129546cabbf17e955680a1cc705",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80a699fda9ff1129546cabbf17e955680a1cc705"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 53,
      "deletions": 7
    },
    "files": [
      {
        "sha": "89457cb7623e4dfb70a0e6280d970dfecc6b6bbc",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8192f42e1d24444f1d0433c96dbce1adf76967/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8192f42e1d24444f1d0433c96dbce1adf76967/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=fa8192f42e1d24444f1d0433c96dbce1adf76967",
        "patch": "@@ -24,7 +24,7 @@ static RPCHelpMan rpcNestedTest_rpc()\n             {\"arg2\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"\"},\n             {\"arg3\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"\"},\n         },\n-        {},\n+        RPCResult{RPCResult::Type::ANY, \"\", \"\"},\n         RPCExamples{\"\"},\n         [](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n             return request.params.write(0, 0);"
      },
      {
        "sha": "8e989193915d5ec6c4376cee9e49f6518e113a6f",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8192f42e1d24444f1d0433c96dbce1adf76967/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8192f42e1d24444f1d0433c96dbce1adf76967/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=fa8192f42e1d24444f1d0433c96dbce1adf76967",
        "patch": "@@ -628,7 +628,7 @@ static RPCHelpMan echo(const std::string& name)\n                     {\"arg8\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"\"},\n                     {\"arg9\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"\"},\n                 },\n-                RPCResult{RPCResult::Type::NONE, \"\", \"Returns whatever was passed in\"},\n+                RPCResult{RPCResult::Type::ANY, \"\", \"Returns whatever was passed in\"},\n                 RPCExamples{\"\"},\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n {"
      },
      {
        "sha": "5d816ba5bb64e2a27b0b5ee6cb25bec898f7a71a",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8192f42e1d24444f1d0433c96dbce1adf76967/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8192f42e1d24444f1d0433c96dbce1adf76967/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=fa8192f42e1d24444f1d0433c96dbce1adf76967",
        "patch": "@@ -137,8 +137,9 @@ static RPCHelpMan help()\n                 {\n                     {\"command\", RPCArg::Type::STR, /* default */ \"all commands\", \"The command to get help on\"},\n                 },\n-                RPCResult{\n-                    RPCResult::Type::STR, \"\", \"The help text\"\n+                {\n+                    RPCResult{RPCResult::Type::STR, \"\", \"The help text\"},\n+                    RPCResult{RPCResult::Type::ANY, \"\", \"\"},\n                 },\n                 RPCExamples{\"\"},\n         [&](const RPCHelpMan& self, const JSONRPCRequest& jsonRequest) -> UniValue"
      },
      {
        "sha": "52499cd1d6aecd87f45da0f0863ebd92bc166e44",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 2,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8192f42e1d24444f1d0433c96dbce1adf76967/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8192f42e1d24444f1d0433c96dbce1adf76967/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=fa8192f42e1d24444f1d0433c96dbce1adf76967",
        "patch": "@@ -442,6 +442,7 @@ std::string RPCResults::ToDescriptionString() const\n {\n     std::string result;\n     for (const auto& r : m_results) {\n+        if (r.m_type == RPCResult::Type::ANY) continue; // for testing only\n         if (r.m_cond.empty()) {\n             result += \"\\nResult:\\n\";\n         } else {\n@@ -459,7 +460,7 @@ std::string RPCExamples::ToDescriptionString() const\n     return m_examples.empty() ? m_examples : \"\\nExamples:\\n\" + m_examples;\n }\n \n-UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request)\n+UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request) const\n {\n     if (request.mode == JSONRPCRequest::GET_ARGS) {\n         return GetArgMap();\n@@ -471,7 +472,9 @@ UniValue RPCHelpMan::HandleRequest(const JSONRPCRequest& request)\n     if (request.mode == JSONRPCRequest::GET_HELP || !IsValidNumArgs(request.params.size())) {\n         throw std::runtime_error(ToString());\n     }\n-    return m_fun(*this, request);\n+    const UniValue ret = m_fun(*this, request);\n+    CHECK_NONFATAL(std::any_of(m_results.m_results.begin(), m_results.m_results.end(), [ret](const RPCResult& res) { return res.MatchesType(ret); }));\n+    return ret;\n }\n \n bool RPCHelpMan::IsValidNumArgs(size_t num_args) const\n@@ -677,6 +680,9 @@ void RPCResult::ToSections(Sections& sections, const OuterType outer_type, const\n         sections.PushSection({indent + \"...\" + maybe_separator, m_description});\n         return;\n     }\n+    case Type::ANY: {\n+        CHECK_NONFATAL(false); // Only for testing\n+    }\n     case Type::NONE: {\n         sections.PushSection({indent + \"null\" + maybe_separator, Description(\"json null\")});\n         return;\n@@ -742,6 +748,42 @@ void RPCResult::ToSections(Sections& sections, const OuterType outer_type, const\n     CHECK_NONFATAL(false);\n }\n \n+bool RPCResult::MatchesType(const UniValue& result) const\n+{\n+    switch (m_type) {\n+    case Type::ELISION: {\n+        return false;\n+    }\n+    case Type::ANY: {\n+        return true;\n+    }\n+    case Type::NONE: {\n+        return UniValue::VNULL == result.getType();\n+    }\n+    case Type::STR:\n+    case Type::STR_HEX: {\n+        return UniValue::VSTR == result.getType();\n+    }\n+    case Type::NUM:\n+    case Type::STR_AMOUNT:\n+    case Type::NUM_TIME: {\n+        return UniValue::VNUM == result.getType();\n+    }\n+    case Type::BOOL: {\n+        return UniValue::VBOOL == result.getType();\n+    }\n+    case Type::ARR_FIXED:\n+    case Type::ARR: {\n+        return UniValue::VARR == result.getType();\n+    }\n+    case Type::OBJ_DYN:\n+    case Type::OBJ: {\n+        return UniValue::VOBJ == result.getType();\n+    }\n+    } // no default case, so the compiler can warn about missing cases\n+    CHECK_NONFATAL(false);\n+}\n+\n std::string RPCArg::ToStringObj(const bool oneline) const\n {\n     std::string res;"
      },
      {
        "sha": "db7f626e9c3b4573b92d596a249abb2a563c3b7b",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8192f42e1d24444f1d0433c96dbce1adf76967/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8192f42e1d24444f1d0433c96dbce1adf76967/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=fa8192f42e1d24444f1d0433c96dbce1adf76967",
        "patch": "@@ -223,6 +223,7 @@ struct RPCResult {\n         NUM,\n         BOOL,\n         NONE,\n+        ANY,        //!< Special type to disable type checks (for testing only)\n         STR_AMOUNT, //!< Special string to represent a floating point amount\n         STR_HEX,    //!< Special string with only hex chars\n         OBJ_DYN,    //!< Special dictionary with keys that are not literals\n@@ -295,6 +296,8 @@ struct RPCResult {\n     std::string ToStringObj() const;\n     /** Return the description string, including the result type. */\n     std::string ToDescriptionString() const;\n+    /** Check whether the result JSON type matches. */\n+    bool MatchesType(const UniValue& result) const;\n };\n \n struct RPCResults {\n@@ -333,7 +336,7 @@ class RPCHelpMan\n     using RPCMethodImpl = std::function<UniValue(const RPCHelpMan&, const JSONRPCRequest&)>;\n     RPCHelpMan(std::string name, std::string description, std::vector<RPCArg> args, RPCResults results, RPCExamples examples, RPCMethodImpl fun);\n \n-    UniValue HandleRequest(const JSONRPCRequest& request);\n+    UniValue HandleRequest(const JSONRPCRequest& request) const;\n     std::string ToString() const;\n     /** Return the named args that need to be converted from string to another JSON type */\n     UniValue GetArgMap() const;"
      }
    ]
  }
]