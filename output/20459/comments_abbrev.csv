laanwj,2020-11-23 11:14:38,"Concept ACK but it would be much better if checks like this could be done at compile time instead of run time. This seems to me like a kind of a python-esque solution instead of a static language one.\n",https://github.com/bitcoin/bitcoin/pull/20459#issuecomment-732095391,732095391,
MarcoFalke,2020-11-23 11:44:25,"UniValue::getType() is not a compile-time constant, so I don't think this works at compile time (without replacing UniValue with something else)",https://github.com/bitcoin/bitcoin/pull/20459#issuecomment-732110388,732110388,
DrahtBot,2020-11-23 21:43:59,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/20459#issuecomment-732443956,732443956,
amitiuttarwar,2020-12-24 23:31:14,"concept ACK, very nice! having a programatic check that the docs are in sync with the actual output seems like a win for maintaining up-to-date docs & reducing review burden ",https://github.com/bitcoin/bitcoin/pull/20459#issuecomment-751130023,751130023,
sipa,2020-12-27 07:10:13,Nit: using single quotes isn't valid JSON or C++. Maybe use double quotes?,https://github.com/bitcoin/bitcoin/pull/20459#discussion_r549075478,549075478,src/rpc/mining.cpp
sipa,2020-12-27 07:11:13,Same here: single quotes isn't valid JSON.,https://github.com/bitcoin/bitcoin/pull/20459#discussion_r549075547,549075547,src/rpc/blockchain.cpp
sipa,2020-12-27 07:16:58,"Suggestion for a follow-up: for NUM_AMOUNT, you can do a stronger test (parse with AmountFromValue, convert back to JSON using ValueFromAmount, and the string representation must match exactly).",https://github.com/bitcoin/bitcoin/pull/20459#discussion_r549076087,549076087,src/rpc/util.cpp
MarcoFalke,2020-12-27 09:06:18,"The existing docs use single quotes:\n\nhttps://github.com/bitcoin/bitcoin/blob/02cf20b9f571474c939d18a8b9d6b5d22479a222/src/rpc/mining.cpp#L508\n\nhttps://github.com/bitcoin/bitcoin/blob/02cf20b9f571474c939d18a8b9d6b5d22479a222/src/rpc/mining.cpp#L521\n\nSo I used that. Also, a lot of RPC clients are implemented in python, which also allows single quotes.",https://github.com/bitcoin/bitcoin/pull/20459#discussion_r549086474,549086474,src/rpc/mining.cpp
MarcoFalke,2020-12-27 09:06:38,https://github.com/bitcoin/bitcoin/pull/20459#discussion_r549086474,https://github.com/bitcoin/bitcoin/pull/20459#discussion_r549086549,549086549,src/rpc/blockchain.cpp
MarcoFalke,2021-03-20 09:57:34,"This is currently safe to do, because JSONRPCRequest isn't const where it is (copy-)constructed. I don't like the const_cast myself, but the only alternative I came up with was to change every rpc method with the new signature. Any other ideas? Maybe @ryanofsky ",https://github.com/bitcoin/bitcoin/pull/20459#discussion_r598090918,598090918,src/rpc/server.cpp
ryanofsky,2021-04-01 02:19:04,"re: https://github.com/bitcoin/bitcoin/pull/20459#discussion_r598090918\n\n> This is currently safe to do, because JSONRPCRequest isn't const where it is (copy-)constructed. I don't like the const_cast myself, but the only alternative I came up with was to change every rpc method with the new signature. Any other ideas? Maybe @ryanofsky\n\nI think it would be better add ANY to list of acceptab",https://github.com/bitcoin/bitcoin/pull/20459#discussion_r605333260,605333260,src/rpc/server.cpp
MarcoFalke,2021-04-01 10:24:32,"Thanks, done",https://github.com/bitcoin/bitcoin/pull/20459#discussion_r605545904,605545904,src/rpc/server.cpp
