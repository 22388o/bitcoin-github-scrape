jamesob,2020-05-06 20:23:52,"ACK https://github.com/bitcoin/bitcoin/pull/18899/commits/fa082d0a57afedca9122fac4aecd6a3070f06b04\n\nSad but true.",https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624870483,624870483,
jnewbery,2020-05-06 20:26:55,"Concept ACK! I think it's very important for developer experience to be able to iterate quickly on pull requests. If someone suggests a change and the author pushes it, then the ci should run quickly so reviewers don't feel blocked.\n\nI think it would make sense to have a valgrind run with just the unit tests, and perhaps a basic functional test, as long as that could be done in a reasonable ti",https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624872124,624872124,
practicalswift,2020-05-06 20:45:47,"Oh, please don't remove Valgrind until we have an MSAN job in Travis. We *really* need automated detection of uninitialized memory reads enabled in Travis.",https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624881756,624881756,
promag,2020-05-06 21:59:29,Could run the job only in master (or non PR branch) or use travis cron?,https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624913394,624913394,
jnewbery,2020-05-06 22:07:10,"@practicalswift I think it's a trade-off. valgrind tests are useful, but running all the functional tests in valgrind for every branch push in every PR is terrible for fast iteration and developer experience. I fully support doing valgrind testing, just not for every functional test in every PR.\n\nThings like this:\n\n![image](https://user-images.githubusercontent.com/1063656/81233423-a901060",https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624916450,624916450,
DrahtBot,2020-05-07 00:45:15,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18677 (Multiprocess build support by ryanofsky)\n* #18288 (build: Add MemorySanitizer (MSan) in Travis to detect use of u",https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624964918,624964918,
jnewbery,2020-05-07 02:17:08,"Travis completed in 1hr3mins. That's an improvement!\n\nutACK fa082d0a57afedca9122fac4aecd6a3070f06b04",https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-624989390,624989390,
practicalswift,2020-05-07 06:08:14,"> > Oh, please don't remove Valgrind until we have an MSAN job in Travis. We _really_ need automated detection of uninitialized memory reads enabled in Travis.\n>\n> @practicalswift I think it's a trade-off. valgrind tests are useful, but running all the functional tests in valgrind for every branch push in every PR is terrible for fast iteration and developer experience. I fully support doing v",https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-625048923,625048923,
sipa,2020-05-07 07:17:10,"We could also just run Valgrind on master but not all PRs, independently of when/how msan testing is enabled.",https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-625076095,625076095,
practicalswift,2020-05-07 08:11:32,"> We could also just run Valgrind on master but not all PRs, independently of when/how msan testing is enabled.\n\nYes, that is a very good point.\n\nAs long as we continue guarding `master` on `bitcoin/bitcoin` from uninitialized memory reads by running the unit tests, functional tests and fuzz tests using Valgrind _or_ MSAN I'm happy :) ",https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-625101554,625101554,
laanwj,2020-05-07 09:15:20,"> I think it would make sense to have a valgrind run with just the unit tests, and perhaps a basic functional test, as long as that could be done in a reasonable time.\n\nI ike this idea. At least the initialization/shutdown sequence will be run at least once in valgrind in that case, which seems to be an effective use of CI resources.\n\n(but removing it entirely in the mean time is fine with",https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-625133216,625133216,
practicalswift,2020-05-07 11:11:42,"I now noticed that this PR removes also the valgrind fuzz job too, is that intentional? Is running the fuzzing targets against our seed corpus under `valgrind` *that* slow? :(\n\nFWIW: pulling in 7e14297b28bf77ad200075480df845365fe3414c from #18288 to this PR would allow us to get both a.) good CI speed _and_ b.) no reduction in uninitialized memory testing coverage. What are the best arguments ",https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-625189502,625189502,
MarcoFalke,2020-05-07 11:56:19,"I am going to merge this to unbreak travis. This has two ACKs and is needed as a first step for anything that is done later. If someone has ideas or implementations of how this can be improved in the future, they are more than welcome to submit pull requests and ask me for review. When those improvements are ready for merge, I am happy to take them.\n\nJust to respond to some points:\n\n* We c",https://github.com/bitcoin/bitcoin/pull/18899#issuecomment-625209628,625209628,
