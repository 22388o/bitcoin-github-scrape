[
  {
    "sha": "2f19905324078e07d8c21b991ef010da80403d95",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZjE5OTA1MzI0MDc4ZTA3ZDhjMjFiOTkxZWYwMTBkYTgwNDAzZDk1",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2016-01-31T05:40:23Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2016-01-31T05:40:23Z"
      },
      "message": "Improve block validity/ConnectBlock() comments\n\nPreviously didn't make clear that the ContextualCheckBlock* functions\nmeant the block headers as context - not the UTXO set itself - and that\nConnectBlock() also did UTXO-related validity checks (in the future we\nmay split that functionality into a separate UTXO-specific contextual\ncheck block function).\n\nAlso, reordered to put validity checks first for better readability.",
      "tree": {
        "sha": "8551eee819e885447c9b9be388b63efe8a173fe0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8551eee819e885447c9b9be388b63efe8a173fe0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f19905324078e07d8c21b991ef010da80403d95",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGrBAABCACVBQJWrZ8nXhSAAAAAABUAQGJsb2NraGFzaEBiaXRjb2luLm9yZzAw\nMDAwMDAwMDAwMDAwMDAwOGEwZThhMGMzZTViOTZkOWE3Y2Q4MmM5ZjUyZmRhNzc5\nZmFkOTc4YjAwYmIxYTgvFIAAAAAAFQARcGthLWFkZHJlc3NAZ251cGcub3JncGV0\nZUBwZXRlcnRvZC5vcmcACgkQJIFAPaXwkfvNDAf8CzXeTgIt2m7yU5PCT/Km4JGY\nZurQOGffCic/1C/36U3LZq+bxi96vaWyLDKuI1lovjdYOQ6vSETZlLkSM+FwYTmZ\nmnDXpvSm8z3djIckqbDvKYLYcURRhzjgdnfZWpsBEQExEbOpkjmLAK0rRaUbCIOi\nGvIIZ020CA2XnSdTOJ/YGHolXHe5cJrEWPXHMhsAa2TfkZt00UbB6bB7cFi8GTI/\nh+ZzUNDAMyk7lqdRjoBIFJd4c66qqXKmlA03ayy/psuiENxIce7ZqtIjTpYSDPaB\n1nokp71yy1VHBIBKxj+PpG7ZorshZcNz9vLmgVt4B+xtRIS0/ryO60o9MxxAaA==\n=ApDD\n-----END PGP SIGNATURE-----",
        "payload": "tree 8551eee819e885447c9b9be388b63efe8a173fe0\nparent a6771fc9734ad822f2e10f8fbdeb723daf5c3b29\nauthor Peter Todd <pete@petertodd.org> 1454218823 -0500\ncommitter Peter Todd <pete@petertodd.org> 1454218823 -0500\n\nImprove block validity/ConnectBlock() comments\n\nPreviously didn't make clear that the ContextualCheckBlock* functions\nmeant the block headers as context - not the UTXO set itself - and that\nConnectBlock() also did UTXO-related validity checks (in the future we\nmay split that functionality into a separate UTXO-specific contextual\ncheck block function).\n\nAlso, reordered to put validity checks first for better readability.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f19905324078e07d8c21b991ef010da80403d95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2f19905324078e07d8c21b991ef010da80403d95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f19905324078e07d8c21b991ef010da80403d95/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6771fc9734ad822f2e10f8fbdeb723daf5c3b29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6771fc9734ad822f2e10f8fbdeb723daf5c3b29",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6771fc9734ad822f2e10f8fbdeb723daf5c3b29"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 14,
      "deletions": 10
    },
    "files": [
      {
        "sha": "4a5131776243f59b4e63077dbc283c95735d6b88",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 14,
        "deletions": 10,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f19905324078e07d8c21b991ef010da80403d95/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f19905324078e07d8c21b991ef010da80403d95/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=2f19905324078e07d8c21b991ef010da80403d95",
        "patch": "@@ -395,23 +395,27 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n \n /** Functions for validating blocks and updating the block tree */\n \n-/** Undo the effects of this block (with given index) on the UTXO set represented by coins.\n- *  In case pfClean is provided, operation will try to be tolerant about errors, and *pfClean\n- *  will be true if no problems were found. Otherwise, the return value will be false in case\n- *  of problems. Note that in any case, coins may be modified. */\n-bool DisconnectBlock(const CBlock& block, CValidationState& state, const CBlockIndex* pindex, CCoinsViewCache& coins, bool* pfClean = NULL);\n-\n-/** Apply the effects of this block (with given index) on the UTXO set represented by coins */\n-bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pindex, CCoinsViewCache& coins, bool fJustCheck = false);\n-\n /** Context-independent validity checks */\n bool CheckBlockHeader(const CBlockHeader& block, CValidationState& state, bool fCheckPOW = true);\n bool CheckBlock(const CBlock& block, CValidationState& state, bool fCheckPOW = true, bool fCheckMerkleRoot = true);\n \n-/** Context-dependent validity checks */\n+/** Context-dependent validity checks.\n+ *  By \"context\", we mean only the previous block headers, but not the UTXO\n+ *  set; UTXO-related validity checks are done in ConnectBlock(). */\n bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& state, CBlockIndex *pindexPrev);\n bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIndex *pindexPrev);\n \n+/** Apply the effects of this block (with given index) on the UTXO set represented by coins.\n+ *  Validity checks that depend on the UTXO set are also done; ConnectBlock()\n+ *  can fail if those validity checks fail (among other reasons). */\n+bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pindex, CCoinsViewCache& coins, bool fJustCheck = false);\n+\n+/** Undo the effects of this block (with given index) on the UTXO set represented by coins.\n+ *  In case pfClean is provided, operation will try to be tolerant about errors, and *pfClean\n+ *  will be true if no problems were found. Otherwise, the return value will be false in case\n+ *  of problems. Note that in any case, coins may be modified. */\n+bool DisconnectBlock(const CBlock& block, CValidationState& state, const CBlockIndex* pindex, CCoinsViewCache& coins, bool* pfClean = NULL);\n+\n /** Check a block is completely valid from start to finish (only works on top of our current best block, with cs_main held) */\n bool TestBlockValidity(CValidationState& state, const CChainParams& chainparams, const CBlock& block, CBlockIndex* pindexPrev, bool fCheckPOW = true, bool fCheckMerkleRoot = true);\n "
      }
    ]
  }
]