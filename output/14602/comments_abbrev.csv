DrahtBot,2018-10-29T17:03:35Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14726](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14726.html) (Use RPCHelpMan for all RPCs by MarcoFalke)\",https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-433993015,433993015,
luke-jr,2018-10-29T17:14:48Z,I don't understand what the Travis linter is trying to complain about.,https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-433997205,433997205,
MarcoFalke,2018-10-29T17:38:11Z,"I think the linter doesn't understand that an option can have two different types (and wants you to specify both conversions similar to `{ ""getblock"", 1, ""verbosity"" }, { ""getblock"", 1, ""verbose"" },`)",https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-434006656,434006656,
practicalswift,2018-10-29T21:56:40Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-434095908,434095908,
promag,2018-11-03T15:16:07Z,"Failing with\n```\n* Checking consistency between dispatch tables and vRPCConvertParams\nERROR: getbalance argument ['trusted_only', 'account'] has conflicts in vRPCConvertParams conversion specifier [True, False]\n```",https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-435595499,435595499,
luke-jr,2018-11-03T18:13:24Z,"@promag That's a linter bug, and IMO outside the scope of this PR to fix.\n\nIt is correct that trusted_only is a JSON/converted parameter, and the account alias is a String parameter.",https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-435609305,435609305,
sipa,2018-11-19T21:31:54Z,@luke-jr Needs rebase.,https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-440048636,440048636,
sipa,2018-11-22T01:11:28Z,"It'd be great to have this in 0.17.1.\n\n@luke-jr Would you mind someone else rebasing this?",https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-440876681,440876681,
luke-jr,2018-11-22T01:41:34Z,Rebased,https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-440886663,440886663,
meshcollider,2018-11-22T02:15:01Z,Still needs comments above addressed too,https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-440891788,440891788,
luke-jr,2018-11-22T02:31:13Z,Test issues fixed,https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-440894139,440894139,
DrahtBot,2018-11-23T09:22:50Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-441189633,441189633,
MarcoFalke,2018-11-23T17:54:48Z,"Would be nice to have a basic test that covers these changes. Otherwise a future refactoring or ""bug fix"" will likely break this again and all effort is undone.",https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-441295511,441295511,
ryanofsky,2018-11-28T16:57:15Z,"> \<luke-jr\> jnewbery: making it impossible to get the current balance (ie, with untrusted txs included) is IMO not acceptable\n\n@luke-jr I agree with this, but I don't understand if adding up values of `getbalance` and  `getunconfirmedbalance` as an alternative would give the wrong result, or if it would give the right result, but be less than ideal because it's inconvenient or not atomic. Do",https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-442521929,442521929,
luke-jr,2019-01-05T11:27:50Z,Closing this for now.,https://github.com/bitcoin/bitcoin/pull/14602#issuecomment-451647509,451647509,
MarcoFalke,2018-10-29T16:34:45Z,Should keep this as `trusted_only|dummy` to not break existing clients that use named args?,https://github.com/bitcoin/bitcoin/pull/14602#discussion_r229003659,229003659,src/wallet/rpcwallet.cpp
luke-jr,2018-10-29T17:13:24Z,"Hmm. Probably not, since afaik ""dummy"" has only ever been used in versions where it's actually broken anyway?",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r229018902,229018902,src/wallet/rpcwallet.cpp
jnewbery,2018-10-29T20:41:10Z,I think we should try to avoid having a single argument accept two different types. It's messy and I don't think it's supported by the `CRPConvertTable` logic.,https://github.com/bitcoin/bitcoin/pull/14602#discussion_r229090304,229090304,src/wallet/rpcwallet.cpp
jnewbery,2018-10-29T20:46:15Z,I'd prefer to drop this undocumented functionality if at all possible. It's confusing that `getbalance` and `getbalance *` should return different values (and this argument has been deprecated since https://github.com/bitcoin/bitcoin/commit/7b782f5b01f4c2d906a28800d01ffd05ad257cbe).,https://github.com/bitcoin/bitcoin/pull/14602#discussion_r229092060,229092060,src/wallet/rpcwallet.cpp
luke-jr,2018-10-29T21:03:09Z,It's only a boolean. The string stuff is strictly for backward compatibility.,https://github.com/bitcoin/bitcoin/pull/14602#discussion_r229097709,229097709,src/wallet/rpcwallet.cpp
luke-jr,2018-10-29T21:04:45Z,They always have returned different values. I think the API changes here clear up the confusion?,https://github.com/bitcoin/bitcoin/pull/14602#discussion_r229098214,229098214,src/wallet/rpcwallet.cpp
meshcollider,2018-11-09T06:12:08Z,"I agree that `dummy` as a named arg doesn't need to be kept around, but if `account` was already removed as an alias, why add it back? This should just be `trusted_only` I think?\n\nThis is also the cause of the linter error, because `trusted_only` has an entry in vRPCConvertParams but `account` doesn't",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r232150614,232150614,src/wallet/rpcwallet.cpp
meshcollider,2018-11-09T06:15:46Z,"Tests are failing because this error message has been changed, you'll either need to update the tests or just change it back to `""dummy first argument must be excluded or set to \""*\"".""`",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r232151041,232151041,src/wallet/rpcwallet.cpp
meshcollider,2018-11-09T06:24:07Z,"Agree with @jnewbery, because you've added the argument to vRPCConvertParams it'll try and convert it from JSON despite it being a string? Have you tested this backwards compatibility? IMO if this is going to be done, we just drop the string part completely and put it in release notes as a breaking change",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r232151993,232151993,src/wallet/rpcwallet.cpp
luke-jr,2018-11-09T10:14:02Z,"`bitcoin-cli` is just a testing tool. As such, I don't think we need to worry about backward compatibility there.\n\nThis is fully backward compatible with any normal JSON-RPC client.",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r232202968,232202968,src/wallet/rpcwallet.cpp
luke-jr,2018-11-09T10:15:13Z,"Removing `account` appears to have been a bug, since we still accept `""*""` as a value?",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r232203312,232203312,src/wallet/rpcwallet.cpp
meshcollider,2018-11-09T11:14:59Z,"@luke-jr only as a dummy, hence the name, accounts are completely removed",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r232220034,232220034,src/wallet/rpcwallet.cpp
luke-jr,2018-11-09T11:58:06Z,"Existing code calling `getbalance(account=""*"")` shouldn't be broken...",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r232229749,232229749,src/wallet/rpcwallet.cpp
meshcollider,2018-11-09T12:50:12Z,@luke-jr yes it should in 0.18 and in 0.17 without explicitly enabling deprecated accounts?,https://github.com/bitcoin/bitcoin/pull/14602#discussion_r232242029,232242029,src/wallet/rpcwallet.cpp
luke-jr,2018-11-09T13:00:25Z,"""*"" isn't an account.",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r232244702,232244702,src/wallet/rpcwallet.cpp
meshcollider,2018-11-09T22:08:56Z,Then why would specifying it using `account=` make sense?,https://github.com/bitcoin/bitcoin/pull/14602#discussion_r232408228,232408228,src/wallet/rpcwallet.cpp
luke-jr,2018-11-09T23:23:34Z,Because that's what the parameter was called when named args were introduced.,https://github.com/bitcoin/bitcoin/pull/14602#discussion_r232421932,232421932,src/wallet/rpcwallet.cpp
meshcollider,2018-11-10T10:43:43Z,"Well, that name was already removed, so NACK on adding it back again, it makes no sense",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r232448858,232448858,src/wallet/rpcwallet.cpp
luke-jr,2018-11-22T02:30:51Z,"Removing it introduced a bug by breaking existing code that uses the `""*""` mode.",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r235586588,235586588,src/wallet/rpcwallet.cpp
meshcollider,2018-11-22T07:36:51Z,"IMO this would be better just to give a type error, that it should be boolean not string ",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r235624304,235624304,src/wallet/rpcwallet.cpp
meshcollider,2018-11-22T08:32:04Z,"This still won't work because of the entry in vRPCConvertParams. I don't think a single parameter can accept either a string or a boolean in this way, because there is no way to tell otherwise if `true` is supposed to be a string `""true""` (which should error) or the boolean value `true` (which should work). I think the only options are either to break compatibility and drop the `""*""` case in favor",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r235636532,235636532,src/wallet/rpcwallet.cpp
luke-jr,2018-11-22T09:31:40Z,"It works fine... the lookup table has no effect on the JSON-RPC server, only the bitcoin-cli testing tool.",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r235654273,235654273,src/wallet/rpcwallet.cpp
jnewbery,2018-11-27T22:57:09Z,"This won't work. `GetAvailableCredit()` uses the `nAvailableCreditCached` cache, so it doesn't matter what value is passed in as min_depth here after the first call.",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r236880909,236880909,src/wallet/wallet.cpp
jnewbery,2018-11-28T14:13:31Z,Please at least add a comment here to explain why you're not hitting/updating the cache if min_depth != 0,https://github.com/bitcoin/bitcoin/pull/14602#discussion_r237099132,237099132,src/wallet/wallet.cpp
promag,2018-12-03T17:31:37Z,Dummy should stay otherwise it breaks calls using named parameters.,https://github.com/bitcoin/bitcoin/pull/14602#discussion_r238364722,238364722,src/wallet/rpcwallet.cpp
luke-jr,2018-12-03T18:00:22Z,"""dummy"" has NEVER worked as a named parameter. The only calls using named parameters where this ever worked, used the name ""account""",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r238374634,238374634,src/wallet/rpcwallet.cpp
promag,2018-12-03T22:48:08Z,"Just tested v0.17.0 and the following works:\n```\nbitcoin-cli -regtest --named getbalance account=""*""\n5097.99999647\nbitcoin-cli -regtest --named getbalance dummy=""*""\n5097.99999647\n```",https://github.com/bitcoin/bitcoin/pull/14602#discussion_r238468915,238468915,src/wallet/rpcwallet.cpp
