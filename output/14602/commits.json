[
  {
    "sha": "dfcfa807c949cb4dc6158583a5b0d2d7b270be4a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZmNmYTgwN2M5NDljYjRkYzYxNTg1ODNhNWIwZDJkN2IyNzBiZTRh",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-10-29T15:51:17Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-22T05:21:37Z"
      },
      "message": "Wallet: Add trusted_only flag to GetBalance",
      "tree": {
        "sha": "5ed63bf18c7307aa26374e9a0a8fdd0f58b639cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ed63bf18c7307aa26374e9a0a8fdd0f58b639cd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfcfa807c949cb4dc6158583a5b0d2d7b270be4a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfcfa807c949cb4dc6158583a5b0d2d7b270be4a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dfcfa807c949cb4dc6158583a5b0d2d7b270be4a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfcfa807c949cb4dc6158583a5b0d2d7b270be4a/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d7b0258ff037ae90f60a86fc68cb55069c96e8d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7b0258ff037ae90f60a86fc68cb55069c96e8d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d7b0258ff037ae90f60a86fc68cb55069c96e8d0"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 12,
      "deletions": 4
    },
    "files": [
      {
        "sha": "57941694deb968ebb51e8d37b1f40c4e232059c6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfcfa807c949cb4dc6158583a5b0d2d7b270be4a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfcfa807c949cb4dc6158583a5b0d2d7b270be4a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=dfcfa807c949cb4dc6158583a5b0d2d7b270be4a",
        "patch": "@@ -2035,7 +2035,7 @@ void CWallet::ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman\n  */\n \n \n-CAmount CWallet::GetBalance(const isminefilter& filter, const int min_depth) const\n+CAmount CWallet::GetBalance(const isminefilter& filter, const int min_depth, const bool trusted_only) const\n {\n     CAmount nTotal = 0;\n     {\n@@ -2044,9 +2044,17 @@ CAmount CWallet::GetBalance(const isminefilter& filter, const int min_depth) con\n         for (const auto& entry : mapWallet)\n         {\n             const CWalletTx* pcoin = &entry.second;\n-            if (pcoin->IsTrusted(*locked_chain) && pcoin->GetDepthInMainChain(*locked_chain) >= min_depth) {\n-                nTotal += pcoin->GetAvailableCredit(*locked_chain, true, filter);\n+\n+            if (trusted_only) {\n+                if (!pcoin->IsTrusted(*locked_chain)) continue;\n+            } else {\n+                LockAnnotation lock(::cs_main); // Temporary, for CheckFinalTx below. Removed in upcoming commit.\n+                if (!CheckFinalTx(*pcoin->tx)) continue;\n             }\n+\n+            if (pcoin->GetDepthInMainChain(*locked_chain) < min_depth) continue;\n+\n+            nTotal += pcoin->GetAvailableCredit(*locked_chain, true, filter);\n         }\n     }\n "
      },
      {
        "sha": "d8d81c0868d645c6210623b29339aec0c6c6c1ab",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfcfa807c949cb4dc6158583a5b0d2d7b270be4a/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfcfa807c949cb4dc6158583a5b0d2d7b270be4a/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=dfcfa807c949cb4dc6158583a5b0d2d7b270be4a",
        "patch": "@@ -902,7 +902,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) override EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     // ResendWalletTransactionsBefore may only be called if fBroadcastTransactions!\n     std::vector<uint256> ResendWalletTransactionsBefore(interfaces::Chain::Lock& locked_chain, int64_t nTime, CConnman* connman);\n-    CAmount GetBalance(const isminefilter& filter=ISMINE_SPENDABLE, const int min_depth=0) const;\n+    CAmount GetBalance(const isminefilter& filter=ISMINE_SPENDABLE, const int min_depth=0, bool trusted_only=true) const;\n     CAmount GetUnconfirmedBalance() const;\n     CAmount GetImmatureBalance() const;\n     CAmount GetUnconfirmedWatchOnlyBalance() const;"
      }
    ]
  },
  {
    "sha": "4996d9813e53c724bd69dde1b75e4deb3f6bbd70",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTk2ZDk4MTNlNTNjNzI0YmQ2OWRkZTFiNzVlNGRlYjNmNmJiZDcw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-10-29T15:53:15Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-22T05:23:03Z"
      },
      "message": "Bugfix: RPC/Wallet: Restore getbalance(\"*\") behaviour (include untrusted coins), while updating the API to accept a boolean as well",
      "tree": {
        "sha": "06003803e2c8b7df6a91419bcf7f6eb0ce739467",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06003803e2c8b7df6a91419bcf7f6eb0ce739467"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4996d9813e53c724bd69dde1b75e4deb3f6bbd70",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4996d9813e53c724bd69dde1b75e4deb3f6bbd70",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4996d9813e53c724bd69dde1b75e4deb3f6bbd70",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4996d9813e53c724bd69dde1b75e4deb3f6bbd70/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dfcfa807c949cb4dc6158583a5b0d2d7b270be4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfcfa807c949cb4dc6158583a5b0d2d7b270be4a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dfcfa807c949cb4dc6158583a5b0d2d7b270be4a"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 19,
      "deletions": 9
    },
    "files": [
      {
        "sha": "7a11294beed1fc30fc07e71fa58af7a419119fdc",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4996d9813e53c724bd69dde1b75e4deb3f6bbd70/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4996d9813e53c724bd69dde1b75e4deb3f6bbd70/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=4996d9813e53c724bd69dde1b75e4deb3f6bbd70",
        "patch": "@@ -48,6 +48,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"listreceivedbylabel\", 0, \"minconf\" },\n     { \"listreceivedbylabel\", 1, \"include_empty\" },\n     { \"listreceivedbylabel\", 2, \"include_watchonly\" },\n+    { \"getbalance\", 0, \"trusted_only\" },\n     { \"getbalance\", 1, \"minconf\" },\n     { \"getbalance\", 2, \"include_watchonly\" },\n     { \"getblockhash\", 0, \"height\" },"
      },
      {
        "sha": "c9506addd23a9c340b0d27b030481b42b8a19f24",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 7,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4996d9813e53c724bd69dde1b75e4deb3f6bbd70/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4996d9813e53c724bd69dde1b75e4deb3f6bbd70/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=4996d9813e53c724bd69dde1b75e4deb3f6bbd70",
        "patch": "@@ -693,12 +693,12 @@ static UniValue getbalance(const JSONRPCRequest& request)\n \n     if (request.fHelp || (request.params.size() > 3 ))\n         throw std::runtime_error(\n-            \"getbalance ( \\\"dummy\\\" minconf include_watchonly )\\n\"\n+            \"getbalance ( trusted_only minconf include_watchonly )\\n\"\n             \"\\nReturns the total available balance.\\n\"\n             \"The available balance is what the wallet considers currently spendable, and is\\n\"\n             \"thus affected by options which limit spendability such as -spendzeroconfchange.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. (dummy)           (string, optional) Remains for backward compatibility. Must be excluded or set to \\\"*\\\".\\n\"\n+            \"1. trusted_only      (boolean, optional, default=true) Only include transactions considered trusted by the wallet.\\n\"\n             \"2. minconf           (numeric, optional, default=0) Only include transactions confirmed at least this many times.\\n\"\n             \"3. include_watchonly (bool, optional, default=false) Also include balance in watch-only addresses (see 'importaddress')\\n\"\n             \"\\nResult:\\n\"\n@@ -719,9 +719,18 @@ static UniValue getbalance(const JSONRPCRequest& request)\n     auto locked_chain = pwallet->chain().lock();\n     LOCK(pwallet->cs_wallet);\n \n-    const UniValue& dummy_value = request.params[0];\n-    if (!dummy_value.isNull() && dummy_value.get_str() != \"*\") {\n-        throw JSONRPCError(RPC_METHOD_DEPRECATED, \"dummy first argument must be excluded or set to \\\"*\\\".\");\n+    const UniValue& trusted_only_uv = request.params[0];\n+    bool trusted_only = true;\n+    if (trusted_only_uv.isBool()) {\n+        trusted_only = trusted_only_uv.get_bool();\n+    } else if (trusted_only_uv.isStr()) {\n+        // backward compatibility\n+        if (trusted_only_uv.get_str() != \"*\") {\n+            throw JSONRPCError(RPC_METHOD_DEPRECATED, \"accounts no longer supported; set 1st field to trusted_only\");\n+        }\n+        trusted_only = false;\n+    } else if (!trusted_only_uv.isNull()) {\n+        throw JSONRPCError(RPC_TYPE_ERROR, strprintf(\"Expected type %s, got %s\", uvTypeName(UniValue::VSTR), uvTypeName(trusted_only_uv.type())));\n     }\n \n     int min_depth = 0;\n@@ -734,7 +743,7 @@ static UniValue getbalance(const JSONRPCRequest& request)\n         filter = filter | ISMINE_WATCH_ONLY;\n     }\n \n-    return ValueFromAmount(pwallet->GetBalance(filter, min_depth));\n+    return ValueFromAmount(pwallet->GetBalance(filter, min_depth, trusted_only));\n }\n \n static UniValue getunconfirmedbalance(const JSONRPCRequest &request)\n@@ -4132,7 +4141,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"encryptwallet\",                    &encryptwallet,                 {\"passphrase\"} },\n     { \"wallet\",             \"getaddressesbylabel\",              &getaddressesbylabel,           {\"label\"} },\n     { \"wallet\",             \"getaddressinfo\",                   &getaddressinfo,                {\"address\"} },\n-    { \"wallet\",             \"getbalance\",                       &getbalance,                    {\"dummy\",\"minconf\",\"include_watchonly\"} },\n+    { \"wallet\",             \"getbalance\",                       &getbalance,                    {\"trusted_only\",\"minconf\",\"include_watchonly\"} },\n     { \"wallet\",             \"getnewaddress\",                    &getnewaddress,                 {\"label\",\"address_type\"} },\n     { \"wallet\",             \"getrawchangeaddress\",              &getrawchangeaddress,           {\"address_type\"} },\n     { \"wallet\",             \"getreceivedbyaddress\",             &getreceivedbyaddress,          {\"address\",\"minconf\"} },"
      },
      {
        "sha": "822a34755e59ed006b0407d3e49d4e115d5ba259",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4996d9813e53c724bd69dde1b75e4deb3f6bbd70/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4996d9813e53c724bd69dde1b75e4deb3f6bbd70/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=4996d9813e53c724bd69dde1b75e4deb3f6bbd70",
        "patch": "@@ -73,8 +73,8 @@ def run_test(self):\n         assert_equal(self.nodes[0].getbalance(\"*\", 1, True), 50)\n         assert_equal(self.nodes[0].getbalance(minconf=1), 50)\n \n-        # first argument of getbalance must be excluded or set to \"*\"\n-        assert_raises_rpc_error(-32, \"dummy first argument must be excluded or set to \\\"*\\\"\", self.nodes[0].getbalance, \"\")\n+        # first argument of getbalance must be trusted_only or set to \"*\"\n+        assert_raises_rpc_error(-32, \"accounts no longer supported; set 1st field to trusted_only\", self.nodes[0].getbalance, \"\")\n \n         # Check that only first and second nodes have UTXOs\n         utxos = self.nodes[0].listunspent()"
      }
    ]
  },
  {
    "sha": "cfa948da1c5a283fe8f5a80cc0c0dda055408783",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZmE5NDhkYTFjNWEyODNmZThmNWE4MGNjMGMwZGRhMDU1NDA4Nzgz",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-10-29T15:55:24Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-22T05:23:03Z"
      },
      "message": "Bugfix: Wallet: When getting balance w/ min_conf, include UTXOs that were spent more recently",
      "tree": {
        "sha": "8a50c92c28de8b82e25107a3dcd6a0a0e0059bf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a50c92c28de8b82e25107a3dcd6a0a0e0059bf3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfa948da1c5a283fe8f5a80cc0c0dda055408783",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfa948da1c5a283fe8f5a80cc0c0dda055408783",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cfa948da1c5a283fe8f5a80cc0c0dda055408783",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfa948da1c5a283fe8f5a80cc0c0dda055408783/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4996d9813e53c724bd69dde1b75e4deb3f6bbd70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4996d9813e53c724bd69dde1b75e4deb3f6bbd70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4996d9813e53c724bd69dde1b75e4deb3f6bbd70"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "f60fb7254398af8c910cef57052d72e96b71dbb6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfa948da1c5a283fe8f5a80cc0c0dda055408783/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfa948da1c5a283fe8f5a80cc0c0dda055408783/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=cfa948da1c5a283fe8f5a80cc0c0dda055408783",
        "patch": "@@ -594,7 +594,7 @@ void CWallet::SyncMetaData(std::pair<TxSpends::iterator, TxSpends::iterator> ran\n  * Outpoint is spent if any non-conflicted transaction\n  * spends it:\n  */\n-bool CWallet::IsSpent(interfaces::Chain::Lock& locked_chain, const uint256& hash, unsigned int n) const\n+bool CWallet::IsSpent(interfaces::Chain::Lock& locked_chain, const uint256& hash, unsigned int n, const int min_depth) const\n {\n     const COutPoint outpoint(hash, n);\n     std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n@@ -606,6 +606,7 @@ bool CWallet::IsSpent(interfaces::Chain::Lock& locked_chain, const uint256& hash\n         std::map<uint256, CWalletTx>::const_iterator mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n             int depth = mit->second.GetDepthInMainChain(locked_chain);\n+            if (depth < min_depth) continue;\n             if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n                 return true; // Spent\n         }\n@@ -1861,7 +1862,7 @@ CAmount CWalletTx::GetImmatureCredit(interfaces::Chain::Lock& locked_chain, bool\n     return 0;\n }\n \n-CAmount CWalletTx::GetAvailableCredit(interfaces::Chain::Lock& locked_chain, bool fUseCache, const isminefilter& filter) const\n+CAmount CWalletTx::GetAvailableCredit(interfaces::Chain::Lock& locked_chain, bool fUseCache, const isminefilter& filter, const int min_depth) const\n {\n     if (pwallet == nullptr)\n         return 0;\n@@ -1889,7 +1890,7 @@ CAmount CWalletTx::GetAvailableCredit(interfaces::Chain::Lock& locked_chain, boo\n     uint256 hashTx = GetHash();\n     for (unsigned int i = 0; i < tx->vout.size(); i++)\n     {\n-        if (!pwallet->IsSpent(locked_chain, hashTx, i))\n+        if (!pwallet->IsSpent(locked_chain, hashTx, i, min_depth))\n         {\n             const CTxOut &txout = tx->vout[i];\n             nCredit += pwallet->GetCredit(txout, filter);\n@@ -2054,7 +2055,7 @@ CAmount CWallet::GetBalance(const isminefilter& filter, const int min_depth, con\n \n             if (pcoin->GetDepthInMainChain(*locked_chain) < min_depth) continue;\n \n-            nTotal += pcoin->GetAvailableCredit(*locked_chain, true, filter);\n+            nTotal += pcoin->GetAvailableCredit(*locked_chain, true, filter, min_depth);\n         }\n     }\n "
      },
      {
        "sha": "c299e97fd62a93d9b39e0f6db66b2079484ba7d5",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfa948da1c5a283fe8f5a80cc0c0dda055408783/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfa948da1c5a283fe8f5a80cc0c0dda055408783/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=cfa948da1c5a283fe8f5a80cc0c0dda055408783",
        "patch": "@@ -485,7 +485,7 @@ class CWalletTx : public CMerkleTx\n     // annotation \"EXCLUSIVE_LOCKS_REQUIRED(cs_main, pwallet->cs_wallet)\". The\n     // annotation \"NO_THREAD_SAFETY_ANALYSIS\" was temporarily added to avoid\n     // having to resolve the issue of member access into incomplete type CWallet.\n-    CAmount GetAvailableCredit(interfaces::Chain::Lock& locked_chain, bool fUseCache=true, const isminefilter& filter=ISMINE_SPENDABLE) const NO_THREAD_SAFETY_ANALYSIS;\n+    CAmount GetAvailableCredit(interfaces::Chain::Lock& locked_chain, bool fUseCache=true, const isminefilter& filter=ISMINE_SPENDABLE, int min_depth = 0) const NO_THREAD_SAFETY_ANALYSIS;\n     CAmount GetImmatureWatchOnlyCredit(interfaces::Chain::Lock& locked_chain, const bool fUseCache=true) const;\n     CAmount GetChange() const;\n \n@@ -815,7 +815,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     bool SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibilityFilter& eligibility_filter, std::vector<OutputGroup> groups,\n         std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params, bool& bnb_used) const;\n \n-    bool IsSpent(interfaces::Chain::Lock& locked_chain, const uint256& hash, unsigned int n) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool IsSpent(interfaces::Chain::Lock& locked_chain, const uint256& hash, unsigned int n, int min_depth = 0) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     std::vector<OutputGroup> GroupOutputs(const std::vector<COutput>& outputs, bool single_coin) const;\n \n     bool IsLockedCoin(uint256 hash, unsigned int n) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);"
      }
    ]
  },
  {
    "sha": "1ac717f8d836b16d5cb808c07f0578a309f4e9d0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYWM3MTdmOGQ4MzZiMTZkNWNiODA4YzA3ZjA1NzhhMzA5ZjRlOWQw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-28T02:37:21Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-11-28T02:37:21Z"
      },
      "message": "fixup! Bugfix: Wallet: When getting balance w/ min_conf, include UTXOs that were spent more recently",
      "tree": {
        "sha": "b6e0d4112585cb1b3c646f52a790fb4c75730fae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6e0d4112585cb1b3c646f52a790fb4c75730fae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ac717f8d836b16d5cb808c07f0578a309f4e9d0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ac717f8d836b16d5cb808c07f0578a309f4e9d0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ac717f8d836b16d5cb808c07f0578a309f4e9d0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ac717f8d836b16d5cb808c07f0578a309f4e9d0/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cfa948da1c5a283fe8f5a80cc0c0dda055408783",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfa948da1c5a283fe8f5a80cc0c0dda055408783",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cfa948da1c5a283fe8f5a80cc0c0dda055408783"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "09a885f1cf89c750a35f428ad473984fc0a5a531",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ac717f8d836b16d5cb808c07f0578a309f4e9d0/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ac717f8d836b16d5cb808c07f0578a309f4e9d0/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=1ac717f8d836b16d5cb808c07f0578a309f4e9d0",
        "patch": "@@ -1874,12 +1874,14 @@ CAmount CWalletTx::GetAvailableCredit(interfaces::Chain::Lock& locked_chain, boo\n     CAmount* cache = nullptr;\n     bool* cache_used = nullptr;\n \n-    if (filter == ISMINE_SPENDABLE) {\n-        cache = &nAvailableCreditCached;\n-        cache_used = &fAvailableCreditCached;\n-    } else if (filter == ISMINE_WATCH_ONLY) {\n-        cache = &nAvailableWatchCreditCached;\n-        cache_used = &fAvailableWatchCreditCached;\n+    if (min_depth == 0) {\n+        if (filter == ISMINE_SPENDABLE) {\n+            cache = &nAvailableCreditCached;\n+            cache_used = &fAvailableCreditCached;\n+        } else if (filter == ISMINE_WATCH_ONLY) {\n+            cache = &nAvailableWatchCreditCached;\n+            cache_used = &fAvailableWatchCreditCached;\n+        }\n     }\n \n     if (fUseCache && cache_used && *cache_used) {"
      }
    ]
  }
]