jonasschnelli,2015-04-16T14:09:23Z,"dnsseed at `seed.bitcoin.jonasschnelli.ch` supports xored output.\nBy querying `x.seed.bitcoin.jonasschnelli.ch` (""x."" at subdomain indicates client request xored output) it will xor the IPs with a static key of `0xFA9CFB199AC5ABFF` (key t.b.d.)\n",https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-93743880,93743880,
laanwj,2015-04-16T15:05:23Z,"So for completeness: the motivation for this is to avoid the DNS seeds getting blocked at ISPs, because they are seen to deal out IPs that may host malware as well?\n",https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-93757943,93757943,
ajweiss,2015-04-16T15:09:22Z,"Just a random thought, but maybe it makes sense to only xor the last 16 bits?  Otherwise it may be possible for the xor to produce reserved addresses (broadcast, multicast, internal, etc) that could trigger blocks by DNS firewalls/etc...\n",https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-93758845,93758845,
jonasschnelli,2015-04-16T16:23:29Z,@laanwj: Right. This would obfuscate DNS IP seeding data to avoid blocking through ISPs and other net authorities. IMHO this would make clients more robust (especially SPV) and could avoid centralized IP seeding services like https://github.com/mikehearn/httpseed.\n,https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-93777024,93777024,
jonasschnelli,2015-04-16T18:08:14Z,Here are some relevant documents:\nhttp://sourceforge.net/p/bitcoin/mailman/message/33187042/\nhttp://sourceforge.net/p/bitcoin/mailman/message/33169876/\n,https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-93804683,93804683,
jonasschnelli,2015-04-17T07:03:16Z,"Sorry. I forget to correctly pointing out the benefits of this PR:\nIn the past, ISP had been blocking (removing from DNS relaying) IPs coming from Bitcoin DNS seeders.\n\nISP could also block whole IP and port ranges. They won't becaus this would affect the business models of ISP.\n\nBlocking DNS relaying and saying, the blocked IP serves malware, could be a low-noise incentive to reduce traffic.",https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-93922223,93922223,
jonasschnelli,2015-04-20T11:11:26Z,"@ajweiss: Right. Xorin IP addresses might swap addresses to be within a private range like 10.x.x.x. But there i still think they will be transferred through DNS (IMO there is no DNS policy that says you can can't rely IPs in private ranges).\nBut even when a IP in a private range gets removed from the response, there will be enough IPs to allow a bitcoin-client to get a reasonable connection to t",https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-94425355,94425355,
sipa,2015-04-21T11:05:30Z,@ajweiss Do you have any evidence of ISPs/DNS services that filter based on IP ranges? (other than blacklisting for using specific IPs)?\n,https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-94745294,94745294,
ajweiss,2015-04-21T20:19:25Z,"I just took a quick look at bind and djbdns and they don't have anything built in right now.  But, OpenDNS talks about blocking bogon range responses here:\n\nhttps://labs.opendns.com/2013/09/03/what-are-the-suspicious-responses-and-why-you-should-block-them/\n\n(Fuller range discussion here: http://en.wikipedia.org/wiki/Martian_packet). \n\nI've tested this and it appears to only take place when ",https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-94926928,94926928,
jonasschnelli,2015-04-23T09:25:56Z,Agreed with @ajweiss.\nAfter xoring a IP there should be a check if the xored output results in a IP within a reserved and non public IP Addresses according to rfc6890 (ipv4) as well as rfc5156 (ipv6).\nSuch IPs need to be removed (and the response can be filled up with other xored IPs).\n,https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-95508758,95508758,
spinza,2015-04-23T15:44:25Z,AFAIK private ips as results of dns lookups are not generally blocked. Bind also does not limit the use of private ips or caching of such ips.  I can confirm that google dns (8.8.8.8 / 8.8.4.4) does not block private ips being returned via lookups and seems to cache them as well.  \n,https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-95629186,95629186,
jonasschnelli,2015-04-28T19:35:08Z,Updated.\nNot it will queries randomly one of 26 subdomains x[a-z].<seed.hostname.etc> to lower the risk if a ns domain got blocked. The xor key stays the same between different subdomains.\n\nMy try to use the first ip in the DNS response a xor key failed. It looks like some DNS servers/implementations will rotate the IP sorting by random.\n,https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-97179258,97179258,
jonasschnelli,2015-04-28T20:31:35Z,Added xor key selecting based on subdomain x[a-z]\n\n(matches with https://github.com/jonasschnelli/bitcoin-seeder/commit/1e3e9746fab344db02f7ac944ab364bdc79d2cc8).\n,https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-97199219,97199219,
laanwj,2015-04-29T07:16:33Z,"It appears DNS isn't a good seeding mechanism if obfuscation is desirable.\n\nThis may well bring the IPs _into_ forbidden ranges. 'encoding to non-blacklisted data of the same size' seems an impossible challenge, given that the blacklists are an unknown in the first place.\n\nWell maybe DNS is good for this - but maybe we can use another record type? so it's not interpreted at all by intermediate",https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-97330169,97330169,
jonasschnelli,2015-04-29T07:23:17Z,"@laanwj What if we check if the xored ip lays within a reserved range like 127.0.0.0/24, etc.? Still there is a chance that we xor a non-blacklisted ip to a blacklisted ip.\nUsing a DNS TXT could be possible. But there i don't know how ISPs/DNS relays handle TXT only records. And it would also require to go down ""another layer"" and send raw dns responses.\n\nI think by xoring and checking if the x",https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-97330803,97330803,
spinza,2015-04-29T07:54:22Z,TXT responses as mentioned above seems a good idea.  I also thought of having some DNS seeds available on non-standard ports?\n,https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-97338295,97338295,
jonasschnelli,2015-04-29T11:22:57Z,"Closing.\nThis is controversial.\n\nAfter implementing, thinking and discussion about this, XORin DNS seed output goes into the wrong direction and might bring in new risks while not improving the overall quality of a quick connect to some reliable nodes.\n\nSPV clients should use multiple dns seeds and when all connection to all seeds fail, they should fallback to a recent static list of node-ips",https://github.com/bitcoin/bitcoin/pull/6021#issuecomment-97392265,97392265,
jonasschnelli,2015-04-16T12:49:19Z,This seed is running in a gnu screen session over a shell `until` `do` script and will startup in case of a server reboot (over `rc.local`).\nIt's a non-virtual dedicated linux server with recent debian version (Debian 7.8) using a Intel(R) Xeon(R) CPU E31245 @ 3.30GHz with 16GB RAM.\nNext to the dns-seed the server is also used for automatic gitian builds as well as for a bitcoind mainnet full-no,https://github.com/bitcoin/bitcoin/pull/6021#discussion_r28505975,28505975,src/chainparams.cpp
jonasschnelli,2015-04-16T12:54:41Z,"Server is in ""Rechenzentrumspark Falkenstein"" (Germany)\n",https://github.com/bitcoin/bitcoin/pull/6021#discussion_r28506329,28506329,src/chainparams.cpp
cdecker,2015-04-19T10:06:24Z,"I added your seed to my DNS seed monitoring (http://bitcoinstats.com/network/dns-servers/) looks nice and stable, I assume you take the XORed peer IPs out of the same pool you use to serve the non-XORed, right? \n",https://github.com/bitcoin/bitcoin/pull/6021#discussion_r28651472,28651472,src/chainparams.cpp
jonasschnelli,2015-04-19T11:53:09Z,"@cdecker: yes. Its the same seeder software and the same data. If you query the seeder DNS with a ""x."" in front of the query domain it will xor the output. https://github.com/sipa/bitcoin-seeder/pull/24\n",https://github.com/bitcoin/bitcoin/pull/6021#discussion_r28652175,28652175,src/chainparams.cpp
laanwj,2015-04-28T08:29:42Z,"This should be `IsIPv4()`, not `!IsIPv6()` (which would include `IsTor()`)\n",https://github.com/bitcoin/bitcoin/pull/6021#discussion_r29222805,29222805,src/netbase.cpp
laanwj,2015-04-28T08:34:49Z,"Be really careful with references (`CNetAddr& ip`) and this function mutating its state in-place, as it could garble existing data structures. In this case it doesn't give problems as the vector being iterated over is being thrown away after use. But from a peace of mind point of view I'd prefer a function `ip.XORedAddress() const` that returns a new address instead of overwrites itself.\n",https://github.com/bitcoin/bitcoin/pull/6021#discussion_r29223143,29223143,src/net.cpp
jonasschnelli,2015-04-28T12:15:24Z,"Hmm... i thought about this when i was writing to code.\nBut because the XORed ip is kind of a cyphertext, i was thinking a in-state manipulating of the instance variable `ip` is appropriate. But i also dislike state changing functions for such cases.\n",https://github.com/bitcoin/bitcoin/pull/6021#discussion_r29236237,29236237,src/net.cpp
jonasschnelli,2015-04-28T12:15:49Z,Thanks! Will fix this.\n,https://github.com/bitcoin/bitcoin/pull/6021#discussion_r29236273,29236273,src/netbase.cpp
sipa,2015-04-28T19:48:28Z,You'll need to pass the result of your GetRand(25) to XORAddress somehow.\n,https://github.com/bitcoin/bitcoin/pull/6021#discussion_r29281003,29281003,src/net.cpp
sipa,2015-04-28T19:48:45Z,GetRand(26)\n,https://github.com/bitcoin/bitcoin/pull/6021#discussion_r29281031,29281031,src/net.cpp
sipa,2015-04-28T19:49:06Z,Why x + [a-z] rather than just [a-z] ?\n,https://github.com/bitcoin/bitcoin/pull/6021#discussion_r29281061,29281061,src/net.cpp
jonasschnelli,2015-04-28T19:56:56Z,To avoid collision. But probably no one will run a seed with [a-z].<domain.etc>.\nIMO the x can be removed. On the other hand it is a more clear indicator of when a response should be xored.\nSo unsure.\n,https://github.com/bitcoin/bitcoin/pull/6021#discussion_r29281753,29281753,src/net.cpp
laanwj,2015-04-29T07:18:23Z,"Do it really need a huge key like this? Wasn't the simple obfuscation enough? I mean it's just a token obfuscation, if your goal is to do encryption we have better algorithms available.\n",https://github.com/bitcoin/bitcoin/pull/6021#discussion_r29314334,29314334,src/netbase.cpp
jonasschnelli,2015-04-29T07:26:20Z,"After a discussion on IRC sipa was pointing out, that if a ISP blocks a dns query domain like (xa.seed.bitcoin.sipa.be) because a xored ip was in a blacklist, we then still would have 25 other domains [a-z] to allow dns queries. The xor key must be different within the 26 [a-z] subdomains to ensure we not xor again to a blacklisted ip.\n",https://github.com/bitcoin/bitcoin/pull/6021#discussion_r29314613,29314613,src/netbase.cpp
