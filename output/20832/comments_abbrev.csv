eilx2,2021-01-03 01:14:48,Tagging @instagibbs as requested.,https://github.com/bitcoin/bitcoin/pull/20832#issuecomment-753552426,753552426,
eilx2,2021-01-03 23:11:29,"Thanks a lot for the review! I've made the proposed changes.\n\nIn addition, I've realized that DecodeDestination is used in other places too which return a generic 'invalid address' error message in case if fails. Should we also handle those places as part of this PR?\n",https://github.com/bitcoin/bitcoin/pull/20832#issuecomment-753690035,753690035,
eilx2,2021-01-04 14:56:01,"Thanks again for the comments. \n\nI think for now I'll let this PR cover only 'getaddressinfo' and 'validateaddress' just to keep it small enough. In the future I will work on the other code paths.",https://github.com/bitcoin/bitcoin/pull/20832#issuecomment-754022532,754022532,
jonatack,2021-01-04 17:43:08,ACK f58a4ed145f79ea3c62c3929647db6a4ee193a8c,https://github.com/bitcoin/bitcoin/pull/20832#issuecomment-754115570,754115570,
DrahtBot,2021-01-04 18:03:21,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20861 (Implement Bech32m and use it for v1+ segwit addresses by sipa)\n\nIf you consider this pull request important, ple",https://github.com/bitcoin/bitcoin/pull/20832#issuecomment-754125916,754125916,
instagibbs,2021-01-06 00:23:05,reACK https://github.com/bitcoin/bitcoin/pull/20832/commits/f58a4ed145f79ea3c62c3929647db6a4ee193a8c,https://github.com/bitcoin/bitcoin/pull/20832#issuecomment-754981991,754981991,
instagibbs,2021-01-08 08:02:44,"4 ACKs, RFM imo",https://github.com/bitcoin/bitcoin/pull/20832#issuecomment-756611258,756611258,
eilx2,2021-01-24 01:52:27,Thanks everyone for the review! I've rebased on the latest master so there are no more merge conflicts.,https://github.com/bitcoin/bitcoin/pull/20832#issuecomment-766274176,766274176,
jonatack,2021-01-03 11:27:40,"See doc/developer-notes.md:\n\n    If an `if` only has a single-statement `then`-clause, it can appear\n    on the same line as the `if`, without braces. In every other case,\n    braces are required, and the `then` and `else` clauses must appear\n    correctly indented on a new line.",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r550993093,550993093,src/key_io.cpp
jonatack,2021-01-03 11:28:17,Idem as previous comment about conditional formatting,https://github.com/bitcoin/bitcoin/pull/20832#discussion_r550993154,550993154,src/wallet/rpcwallet.cpp
jonatack,2021-01-03 11:33:34,"suggestion\n```diff\n@@ -40,13 +40,13 @@ static RPCHelpMan validateaddress()\n                     RPCResult::Type::OBJ, """", """",\n                     {\n                         {RPCResult::Type::BOOL, ""isvalid"", ""If the address is valid or not. If not, this is the only property returned.""},\n-                        {RPCResult::Type::STR, ""error_msg"", ""If the address is not valid this prop",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r550993634,550993634,src/rpc/misc.cpp
jonatack,2021-01-03 11:38:46,"this description needs to be updated (can remove trailing full stop too, like the other descriptions here)\n```suggestion\n                        {RPCResult::Type::BOOL, ""isvalid"", ""If the address is valid or not""},\n```",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r550994226,550994226,src/rpc/misc.cpp
jonatack,2021-01-03 11:40:42,"suggestion\n```diff\n-        ret.pushKV(""error_msg"", error_msg);\n+        CHECK_NONFATAL(!error_msg.empty());\n+        ret.pushKV(""error"", error_msg);\n```\n",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r550994400,550994400,src/rpc/misc.cpp
jonatack,2021-01-03 11:50:38,"```suggestion\n        // This message may be changed if the address can also be interpreted as a Bech32 address.\n```",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r550995455,550995455,src/key_io.cpp
jonatack,2021-01-03 11:54:12,"```suggestion\n    // Set error message if address can't be interpreted as Base58 or Bech32.\n```",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r550995797,550995797,src/key_io.cpp
jonatack,2021-01-03 11:56:43,"nit, remove extra line break here",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r550996084,550996084,src/key_io.cpp
jonatack,2021-01-03 11:57:31,"nit, remove extra line break here",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r550996187,550996187,src/key_io.cpp
jonatack,2021-01-03 11:57:36,"nit, remove extra line break here",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r550996190,550996190,src/key_io.cpp
jonatack,2021-01-03 23:54:08,"nit, might be better like this, just realized I'm doing the same [here](https://github.com/bitcoin/bitcoin/pull/20391/files#diff-63c7710d72381cffe692175dd70e47f1891bf75c3e09249ed826f9df3917d02dR2415)\n```diff\n@@ -57,7 +57,8 @@ static RPCHelpMan validateaddress()\n {\n     std::string error_msg;\n     CTxDestination dest = DecodeDestination(request.params[0].get_str(), error_msg);\n-    bool",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r551071195,551071195,src/rpc/misc.cpp
instagibbs,2021-01-04 06:25:27,micro-nit: constants can be in ALL_CAPS,https://github.com/bitcoin/bitcoin/pull/20832#discussion_r551135810,551135810,test/functional/rpc_invalid_address_message.py
instagibbs,2021-01-04 06:32:19,"suggested: ""Invalid Bech32 address witness version"" to clarify what thing's version is wrong",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r551137458,551137458,src/key_io.cpp
jonasschnelli,2021-01-04 08:11:32,maybe use a constant (maybe `WITHNESS_PROG_MAX_LEN`) instead of a magic `40`,https://github.com/bitcoin/bitcoin/pull/20832#discussion_r551166839,551166839,src/key_io.cpp
jonasschnelli,2021-01-04 08:14:15,Maybe a comment why this can happen and why it's not caught in `DecodeDestination()`?,https://github.com/bitcoin/bitcoin/pull/20832#discussion_r551167890,551167890,src/wallet/rpcwallet.cpp
eilx2,2021-01-04 12:07:43,I added an additional check in case someone changes the DecodeDestination method in the future and forgets to set the error_msg. I've added a comment explaining this.,https://github.com/bitcoin/bitcoin/pull/20832#discussion_r551279039,551279039,src/wallet/rpcwallet.cpp
jonatack,2021-01-04 15:41:10,"nit if you retouch (and maybe move to key_io.cpp if we only expect to use it there, I'm not sure what is preferred)\n```suggestion\nstatic constexpr std::size_t WITNESS_PROG_MAX_LEN = 40;\n```",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r551393015,551393015,src/key_io.h
eilx2,2021-01-04 16:39:31,"Good point, I moved it inside key_io.cpp",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r551430378,551430378,src/key_io.h
luke-jr,2021-01-06 16:51:07,Maybe this should have BECH32 in the var name?,https://github.com/bitcoin/bitcoin/pull/20832#discussion_r552801051,552801051,src/key_io.cpp
luke-jr,2021-01-06 16:58:57,Maybe split up the two possible return cases like `getrawmempool` does?,https://github.com/bitcoin/bitcoin/pull/20832#discussion_r552808619,552808619,src/rpc/misc.cpp
eilx2,2021-01-24 01:51:52,"Good idea, I will try to do this in a future commit where I address the other places where you need to return an error message for invalid address as they probably all require a similar change",https://github.com/bitcoin/bitcoin/pull/20832#discussion_r563223821,563223821,src/rpc/misc.cpp
