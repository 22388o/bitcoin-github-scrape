theuni,2015-04-25T13:12:59Z,"This is not our code, so we're best off not modifying it is possible. Best options imo are either:\n- define `__STDC_LIMIT_MACROS` for the leveldb build, which should get `SIZE_MAX` defined\n- push this change upstream and catch it on the next sync\n",https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-96201842,96201842,
sinetek,2015-04-25T13:24:04Z,"The inclusion of leveldb made me think it has been modified. I agree it would be better to modify the Makefile, something like -D__STDC_LIMIT_MACROS. ?\n",https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-96202649,96202649,
sinetek,2015-04-25T13:25:04Z,That brings us to the same position because the Makefile is part of leveldb.\n,https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-96202977,96202977,
theuni,2015-04-25T13:26:51Z,"For the hard-coded approach:\n\n``` diff\ndiff --git a/src/Makefile.am b/src/Makefile.am\nindex 37184b6..aed47db 100644\n--- a/src/Makefile.am\n+++ b/src/Makefile.am\n@@ -14,7 +14,7 @@ $(LIBLEVELDB): $(LIBMEMENV)\n $(LIBLEVELDB) $(LIBMEMENV):\n        @echo ""Building LevelDB ..."" && $(MAKE) -C $(@D) $(@F) CXX=""$(CXX)"" \\n          CC=""$(CC)"" PLATFORM=$(TARGET_OS) AR=""$(AR)"" $(LEVELDB_TARGET_FLAGS)",https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-96203631,96203631,
sinetek,2015-04-25T15:09:43Z,Works.\n,https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-96220356,96220356,
laanwj,2015-04-26T12:44:33Z,You should still aim to get this merged upstream; apparently it doesn't support DragonFlyBSD at the moment.\n,https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-96374145,96374145,
laanwj,2015-04-29T07:08:03Z,utACK in any case - as a workarond until the issue is resolved upstream\n,https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-97329464,97329464,
sinetek,2015-04-29T10:41:19Z,I'll see if I can push upstream too.\n,https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-97384374,97384374,
sinetek,2015-04-29T10:53:26Z,"There must be a difference in the build systems, as upstream compiles fine.\n\ng++ -I. -I./include -std=c++0x -fno-builtin-memcmp -D_REENTRANT -DOS_DRAGONFLYBSD -DLEVELDB_PLATFORM_POSIX -DLEVELDB_ATOMIC_PRESENT -O2 -DNDEBUG -c helpers/memenv/memenv.cc -o helpers/memenv/memenv.o\n",https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-97387269,97387269,
laanwj,2015-04-30T12:45:37Z,"Ok that's strange, I wonder why it would be needed here then. Maybe because we override the CFLAGS?\n",https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-97759152,97759152,
laanwj,2015-05-08T15:22:07Z,"@theuni any idea what could be the issue here? according to @sinetek the upstream leveldb compiles fine, do our overrides create this issue then?\n",https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-100271471,100271471,
theuni,2015-05-08T17:17:42Z,"I'm not sure what could be causing the difference. We could defined the freebsd/openbsd/dflybsd targets in configure and pass them on to leveldb (which we should do, to fix cross builds), but they should be correctly detected for native builds already.\n\n@sinetek could you please paste the failing compile-line so that we can see the difference? My only guesses are that we somehow define a differe",https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-100302552,100302552,
laanwj,2015-05-16T08:48:38Z,"Going to merge this. Normally a build fix for a platform should only affect that platform, but I'm reasonably confident that it won't have adverse effects on other platforms.\n",https://github.com/bitcoin/bitcoin/pull/6062#issuecomment-102591060,102591060,
