[
  {
    "sha": "747cd17404832604c50d03d58e11ba816bb229f7",
    "node_id": "C_kwDOABII59oAKDc0N2NkMTc0MDQ4MzI2MDRjNTBkMDNkNThlMTFiYTgxNmJiMjI5Zjc",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-10-04T05:03:38Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-10-05T03:38:28Z"
      },
      "message": "build: no-longer fail default configure if BDB isn't available\n\nInline with moving to descriptor (sqlite) wallets by default for 0.23,\nthis adapts the build system so that a default `./configure` invocation\nno-longer fails if BDB isn't present. Currently, if configure is run\nwith no options, and no BDB is present, we'll fail with:\n```bash\nchecking for Berkeley DB C++ headers... no\nconfigure: error: libdb_cxx headers missing, Bitcoin Core requires this library for BDB wallet support (--without-bdb to disable BDB wallet support)\n```\n\nIf descriptor wallets are to be the default, this behaviour no longer\nmakes sense, as a builder should be able to configure and build, to use\na wallet, without BDB installed, and without passing additional\narguments, i.e `--without-bdb` or `--with-incompatible-bdb`, to\nconfigure.\n\nWith this change, running configure will no-longer fail, and will\ninstead print:\n```bash\nchecking for Berkeley DB C++ headers... no\nconfigure: WARNING: libdb_cxx headers missing\nconfigure: WARNING: Bitcoin Core requires this library for BDB (legacy) wallet support\nconfigure: WARNING: Passing --without-bdb will suppress this warning\nchecking for sqlite3 >= 3.7.17... yes\nchecking whether to build wallet with support for sqlite... yes\n```",
      "tree": {
        "sha": "fe04e2ee6f095d17485b83da4d44ce66cefdd4ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe04e2ee6f095d17485b83da4d44ce66cefdd4ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/747cd17404832604c50d03d58e11ba816bb229f7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmFbyLQACgkQLuufXMCV\nJsFvTBAAg6siTrXMcsYe1mxIpxOLQbDRhNaVb3TF1Q723E1SnzBTXc4Ztn68ps+/\nTwvz98EcXfZ0+51MA2BeQjML4XBnkIIbD016qGQS+k10813Bh/016C5KHBCCxYO0\nhK1BF7Iuhh9MYjmaXUWwpBfz4D4qL2hc7gOJP4DGFfjNA077M7fi60L/YBPxUYkx\nHamD7G2By3P4qihxx4Yy8K2IuWLVyHIetR0AUlpngvCa2IMJgpwy4K1ZrkdHrZ1z\nlkBxIU2mnip0T4fJhCTnk9/L5OvLbRdOvzdq2Pxlu4LTAtlVV6hlA9BA9nFViahi\nMsNBZBw9VsaUaNN9DKsxLpdHzWZnn74OM29VVptWicA8LWCquY7eQbHU7hhBWnFV\n/6yJ+9OEmQUImhjBjfaPoTfhYo4XeXL6Hhes1k6L7FqkhpF1MRCC0aNfhIM/C7c+\ndb8BKuaFBPNW1pz/xD9u5O/AhQe63o9xbv7ajnKXAikoxVfRrXzZytHwI5fyjZzd\nCtsvvR5OHEUMMrRFysnQZHS5Y2tbM4htGxcfZCJkD4DFE4TLqEd85izL/O6LC2lY\nbWT1My/Uv5N2N+w/xZz8f8LU2DwM1fYkTuwcK38X5wZ8Padk1fqRTu5Zp84iYGn7\nc8OVykDxyN/OnApLg1UQ9FSgomeURerjyWwWq/ZL+EPPiglqUyg=\n=nC62\n-----END PGP SIGNATURE-----",
        "payload": "tree fe04e2ee6f095d17485b83da4d44ce66cefdd4ad\nparent 446b706696451ae1a66ac416f347d734c5741d7c\nauthor fanquake <fanquake@gmail.com> 1633323818 +0800\ncommitter fanquake <fanquake@gmail.com> 1633405108 +0800\n\nbuild: no-longer fail default configure if BDB isn't available\n\nInline with moving to descriptor (sqlite) wallets by default for 0.23,\nthis adapts the build system so that a default `./configure` invocation\nno-longer fails if BDB isn't present. Currently, if configure is run\nwith no options, and no BDB is present, we'll fail with:\n```bash\nchecking for Berkeley DB C++ headers... no\nconfigure: error: libdb_cxx headers missing, Bitcoin Core requires this library for BDB wallet support (--without-bdb to disable BDB wallet support)\n```\n\nIf descriptor wallets are to be the default, this behaviour no longer\nmakes sense, as a builder should be able to configure and build, to use\na wallet, without BDB installed, and without passing additional\narguments, i.e `--without-bdb` or `--with-incompatible-bdb`, to\nconfigure.\n\nWith this change, running configure will no-longer fail, and will\ninstead print:\n```bash\nchecking for Berkeley DB C++ headers... no\nconfigure: WARNING: libdb_cxx headers missing\nconfigure: WARNING: Bitcoin Core requires this library for BDB (legacy) wallet support\nconfigure: WARNING: Passing --without-bdb will suppress this warning\nchecking for sqlite3 >= 3.7.17... yes\nchecking whether to build wallet with support for sqlite... yes\n```\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/747cd17404832604c50d03d58e11ba816bb229f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/747cd17404832604c50d03d58e11ba816bb229f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/747cd17404832604c50d03d58e11ba816bb229f7/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "446b706696451ae1a66ac416f347d734c5741d7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/446b706696451ae1a66ac416f347d734c5741d7c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/446b706696451ae1a66ac416f347d734c5741d7c"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 14,
      "deletions": 5
    },
    "files": [
      {
        "sha": "3d6c8210ede2ed91ff48622b83b5a2e681cd5584",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/747cd17404832604c50d03d58e11ba816bb229f7/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/747cd17404832604c50d03d58e11ba816bb229f7/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=747cd17404832604c50d03d58e11ba816bb229f7",
        "patch": "@@ -48,15 +48,22 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n     if test \"x$bdbpath\" = \"xX\"; then\n       use_bdb=no\n       AC_MSG_RESULT([no])\n-      AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for BDB wallet support (--without-bdb to disable BDB wallet support)])\n+      AC_MSG_WARN([libdb_cxx headers missing])\n+      AC_MSG_WARN(AC_PACKAGE_NAME[ requires this library for BDB (legacy) wallet support])\n+      AC_MSG_WARN([Passing --without-bdb will suppress this warning])\n     elif test \"x$bdb48path\" = \"xX\"; then\n       BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n       AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n-        AC_MSG_WARN([Found Berkeley DB other than 4.8; BDB wallets opened by this build will not be portable!])\n+        AC_MSG_WARN([Found Berkeley DB other than 4.8])\n+        AC_MSG_WARN([BDB (legacy) wallets opened by this build will not be portable!])\n+        use_bdb=yes\n       ],[\n-        AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable BDB wallets (--with-incompatible-bdb to ignore or --without-bdb to disable BDB wallet support)])\n+        AC_MSG_WARN([Found Berkeley DB other than 4.8])\n+        AC_MSG_WARN([BDB (legacy) wallets opened by this build would not be portable!])\n+        AC_MSG_WARN([If this is intended, pass --with-incompatible-bdb])\n+        AC_MSG_WARN([Passing --without-bdb will suppress this warning])\n+        use_bdb=no\n       ])\n-      use_bdb=yes\n     else\n       BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n       bdbpath=\"${bdb48path}\"\n@@ -78,7 +85,9 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n       ])\n     done\n     if test \"x$BDB_LIBS\" = \"x\"; then\n-        AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for BDB wallet support (--without-bdb to disable BDB wallet support)])\n+        AC_MSG_WARN([libdb_cxx headers missing])\n+        AC_MSG_WARN(AC_PACKAGE_NAME[ requires this library for BDB (legacy) wallet support])\n+        AC_MSG_WARN([Passing --without-bdb will suppress this warning])\n     fi\n   fi\n   if test \"x$use_bdb\" != \"xno\"; then"
      }
    ]
  }
]