[
  {
    "sha": "75019774c96795ef1a57af2a92dd9491f5065cc5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NTAxOTc3NGM5Njc5NWVmMWE1N2FmMmE5MmRkOTQ5MWY1MDY1Y2M1",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-03-27T22:12:38Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-09T13:42:43Z"
      },
      "message": "cli -getinfo: use getbalances instead of deprecated getwalletinfo balance",
      "tree": {
        "sha": "146b36aa19ef88f83434a5a22d283145900be431",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/146b36aa19ef88f83434a5a22d283145900be431"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75019774c96795ef1a57af2a92dd9491f5065cc5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6PJlQACgkQT1chs9Dj\nkh27EQ//Xpe4+4VbfPqDeK/dJoS1dyROc/j7gf231YKlQPmUMhzL/T/FlMy5sISd\nVwLtvJ+dHGQD8GmRqWfzhqFHkqhHrSBXM1d5VbadSkBqg3trdX+s67TnUkus6Ugd\n7TcI9NorIVuZdrLM9av+ItfDhIGRnI3AVF8WvCR+ln7ZD3+Y8d+3JSj3wJ4qAcQc\ngjbhzkVj9cUkGVZJRjnsx0dxcrwcUXdA39hqthr5nVqmulN0MDUP/yzfTObMFcKg\nE8uaem3peFp0G0bbhlHlS0IKVboEf8OZRDZSNPkfPZOXate9EiL1Lc2b/Ex6+NUe\nMOZG+F5fDoxRbmFa9aN/KZ2dNtIGEO2yFDHIyvcBR6/Pjye4nQCmQpl1aM4PIybY\nvrzb1UIl2BU6VdlwRTPrLxFSRjXiMZ88kcahYM0LdGlNh5+v9owxfEoNRmL+raV0\nXlMVNDE5UbR7shFTjYdGNSRGH0zueKkP+p0gNZVfZKto9mNTK6w9JcZG3xdWhOSB\nQgiuYdu/cfPBltT7z8TzN0Y9j5Kl4aZqktn3QKXlNrI+Q8y5EMyARSj3tFX9bIv1\nEg/zmdsYNgM3SUBA6wbqRSFfWOJFGt2g9Oq+GpGvxzg+hKRCBkyOzO2ooWrHQBVo\nSTK6Cx8/hFYrm0F+M1Yr0YeFDR3dPAuVTWYXGmt7PpJAI/0WUDY=\n=DcSV\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFMSjwDqm9SshwRRd9yK0vPczld/5ygjL4sipBboaDZ1CP/wEAFBncWABsKu\n3Lza0IItGVEI8QRejyZV8AhqDWeH7e4UJACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wELjay5kWruZCN2piF2tU\naiYI8QRejyZW8Ag3YhHT0MHFVACD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wENIirpZ4as/9+81Fx/AW8vII8QRejyZW8AjenEER\nnVsMVACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BDVokuKLoqHasShCTQUNPhTCPEEXo8mVvAI4NYhfVvFfOEA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 146b36aa19ef88f83434a5a22d283145900be431\nparent 661bd5dea3d080cd79f15c7703fc6ab577a1aa0c\nauthor Jon Atack <jon@atack.com> 1585347158 +0100\ncommitter Jon Atack <jon@atack.com> 1586439763 +0200\n\ncli -getinfo: use getbalances instead of deprecated getwalletinfo balance\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75019774c96795ef1a57af2a92dd9491f5065cc5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/75019774c96795ef1a57af2a92dd9491f5065cc5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75019774c96795ef1a57af2a92dd9491f5065cc5/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "661bd5dea3d080cd79f15c7703fc6ab577a1aa0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/661bd5dea3d080cd79f15c7703fc6ab577a1aa0c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/661bd5dea3d080cd79f15c7703fc6ab577a1aa0c"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a602688e649118fcbcf93b68e3b915062815fa2a",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75019774c96795ef1a57af2a92dd9491f5065cc5/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75019774c96795ef1a57af2a92dd9491f5065cc5/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=75019774c96795ef1a57af2a92dd9491f5065cc5",
        "patch": "@@ -228,6 +228,7 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     const int ID_NETWORKINFO = 0;\n     const int ID_BLOCKCHAININFO = 1;\n     const int ID_WALLETINFO = 2;\n+    const int ID_BALANCES = 3;\n \n     /** Create a simulated `getinfo` request. */\n     UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n@@ -239,16 +240,17 @@ class GetinfoRequestHandler: public BaseRequestHandler\n         result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n         result.push_back(JSONRPCRequestObj(\"getblockchaininfo\", NullUniValue, ID_BLOCKCHAININFO));\n         result.push_back(JSONRPCRequestObj(\"getwalletinfo\", NullUniValue, ID_WALLETINFO));\n+        result.push_back(JSONRPCRequestObj(\"getbalances\", NullUniValue, ID_BALANCES));\n         return result;\n     }\n \n     /** Collect values from the batch and form a simulated `getinfo` reply. */\n     UniValue ProcessReply(const UniValue &batch_in) override\n     {\n         UniValue result(UniValue::VOBJ);\n-        std::vector<UniValue> batch = JSONRPCProcessBatchReply(batch_in, 3);\n-        // Errors in getnetworkinfo() and getblockchaininfo() are fatal, pass them on\n-        // getwalletinfo() is allowed to fail in case there is no wallet.\n+        std::vector<UniValue> batch = JSONRPCProcessBatchReply(batch_in, batch_in.size());\n+        // Errors in getnetworkinfo() and getblockchaininfo() are fatal, pass them on;\n+        // getwalletinfo() and getbalances() are allowed to fail if there is no wallet.\n         if (!batch[ID_NETWORKINFO][\"error\"].isNull()) {\n             return batch[ID_NETWORKINFO];\n         }\n@@ -265,13 +267,15 @@ class GetinfoRequestHandler: public BaseRequestHandler\n         result.pushKV(\"difficulty\", batch[ID_BLOCKCHAININFO][\"result\"][\"difficulty\"]);\n         result.pushKV(\"chain\", UniValue(batch[ID_BLOCKCHAININFO][\"result\"][\"chain\"]));\n         if (!batch[ID_WALLETINFO][\"result\"].isNull()) {\n-            result.pushKV(\"balance\", batch[ID_WALLETINFO][\"result\"][\"balance\"]);\n             result.pushKV(\"keypoolsize\", batch[ID_WALLETINFO][\"result\"][\"keypoolsize\"]);\n             if (!batch[ID_WALLETINFO][\"result\"][\"unlocked_until\"].isNull()) {\n                 result.pushKV(\"unlocked_until\", batch[ID_WALLETINFO][\"result\"][\"unlocked_until\"]);\n             }\n             result.pushKV(\"paytxfee\", batch[ID_WALLETINFO][\"result\"][\"paytxfee\"]);\n         }\n+        if (!batch[ID_BALANCES][\"result\"].isNull()) {\n+            result.pushKV(\"balance\", batch[ID_BALANCES][\"result\"][\"mine\"][\"trusted\"]);\n+        }\n         result.pushKV(\"relayfee\", batch[ID_NETWORKINFO][\"result\"][\"relayfee\"]);\n         result.pushKV(\"warnings\", batch[ID_NETWORKINFO][\"result\"][\"warnings\"]);\n         return JSONRPCReplyObj(result, NullUniValue, 1);"
      }
    ]
  },
  {
    "sha": "5df0877f91f4ed59031b0d7dcd66780df87ac1af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZGYwODc3ZjkxZjRlZDU5MDMxYjBkN2RjZDY2NzgwZGY4N2FjMWFm",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-09T08:14:21Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-09T15:34:07Z"
      },
      "message": "test: update and harden interface_bitcoin_cli tests\n\n- no longer depend on the deprecated balance field of getwalletinfo\n\n- test blockcount and balance against non-default, non-zero expected values",
      "tree": {
        "sha": "0bc9e2cf66b3800c9083ddfd677655a1b8a3e3c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0bc9e2cf66b3800c9083ddfd677655a1b8a3e3c7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5df0877f91f4ed59031b0d7dcd66780df87ac1af",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6PQHMACgkQT1chs9Dj\nkh3G+A//ZGqV3xCY01IuxP2I4WOLIu27ZZFLigdILtY7MHJw1SMZK7+MtsYzxJz2\nY81xijXlMxApbUKpAE+JzQMI4ZotT2rMXoXgD7r8EQpeIWg9lTB5e2xDE5iEs3fx\njWf2OTYHoFgtgmUDmuINushlyHGFXGj5re8xRjWgFw15wzOS5SuE62DPrbqZyV8i\ng9QRjrQ2wbscwfgmMHI3J4VeM82pj1afflQ1Hw0Mlf5FUHxnTU8mr72hcOeGiMXz\niXnt+k/HiZxdXL3MAU1V1eGA1Ubrcy6qmNJ4Uknq6zTMVNP7VsdEOXfQnhoWrm0W\nFT7aOMd2rCTMgb0inG/G38bayk7gu5j9u7Kpbt367ZIudQe3mPhudQ3Ma5m0PyMD\ntXHmrSJ9HHo7/Rlx1QVBif/4VwIqGfkESX+HNbh61HXKlExC/HHhH0RbLlfHuyzn\nFO8rTXPzT9DRwLeLrP7OGqiaA8Wpg1QNLmUyq+Zhw0PqWakGs3D1HJoVgDpkz7TD\ny92v4mPxLU1GRigiUKdvkKj0kv/VmbXUteg7wIuejODkQNSlt/vbPAGhKTb62mdu\n5LbFQDgDSptzrJ627HrOlezCBCV/VV5bYb6SraGik1qx6hLui3ZxUVplvISZZDHz\nYnL/ftjTbIEe6S57/KxwvLEjsQawPSQbPIIbwLyVQK68o0CtovE=\n=U8Wi\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIAEeFwwbvLw7HvRERwIkYJKR+LVb3TiSf7oZT3MZD0DnCP/wEC/OW0OS7KpU\nXvbbTgVKqdAI8QRej0B18Aj48153nwgdZACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEEq5phX79merUzJzTNzZ/4QI8QRej0B0\n8AgcxWcMn+exOwCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wEJM7fFj16BSeIBy/xfqRc78I8QRej0B18Aj3Yl1AG/tn\nVACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BD+JQQdxV4mzy6wuNJ9I6QiCPEEXo9AdfAIK0ogjlC7fh0Ag9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 0bc9e2cf66b3800c9083ddfd677655a1b8a3e3c7\nparent 75019774c96795ef1a57af2a92dd9491f5065cc5\nauthor Jon Atack <jon@atack.com> 1586420061 +0200\ncommitter Jon Atack <jon@atack.com> 1586446447 +0200\n\ntest: update and harden interface_bitcoin_cli tests\n\n- no longer depend on the deprecated balance field of getwalletinfo\n\n- test blockcount and balance against non-default, non-zero expected values\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5df0877f91f4ed59031b0d7dcd66780df87ac1af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5df0877f91f4ed59031b0d7dcd66780df87ac1af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5df0877f91f4ed59031b0d7dcd66780df87ac1af/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "75019774c96795ef1a57af2a92dd9491f5065cc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75019774c96795ef1a57af2a92dd9491f5065cc5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/75019774c96795ef1a57af2a92dd9491f5065cc5"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 14,
      "deletions": 5
    },
    "files": [
      {
        "sha": "2e1e84b707391f4fccc568820f2e2670b3571b88",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5df0877f91f4ed59031b0d7dcd66780df87ac1af/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5df0877f91f4ed59031b0d7dcd66780df87ac1af/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=5df0877f91f4ed59031b0d7dcd66780df87ac1af",
        "patch": "@@ -6,6 +6,12 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_process_error, get_auth_cookie\n \n+# The block reward of coinbaseoutput.nValue (50) BTC/block matures after\n+# COINBASE_MATURITY (100) blocks. Therefore, after mining 101 blocks we expect\n+# node 0 to have a balance of (BLOCKS - COINBASE_MATURITY) * 50 BTC/block.\n+BLOCKS = 101\n+BALANCE = (BLOCKS - 100) * 50\n+\n class TestBitcoinCli(BitcoinTestFramework):\n \n     def set_test_params(self):\n@@ -17,6 +23,7 @@ def skip_test_if_missing_module(self):\n \n     def run_test(self):\n         \"\"\"Main test logic\"\"\"\n+        self.nodes[0].generate(BLOCKS)\n \n         cli_response = self.nodes[0].cli(\"-version\").send_cli()\n         assert \"{} RPC client version\".format(self.config['environment']['PACKAGE_NAME']) in cli_response\n@@ -35,7 +42,7 @@ def run_test(self):\n         user, password = get_auth_cookie(self.nodes[0].datadir, self.chain)\n \n         self.log.info(\"Test -stdinrpcpass option\")\n-        assert_equal(0, self.nodes[0].cli('-rpcuser=%s' % user, '-stdinrpcpass', input=password).getblockcount())\n+        assert_equal(BLOCKS, self.nodes[0].cli('-rpcuser=%s' % user, '-stdinrpcpass', input=password).getblockcount())\n         assert_raises_process_error(1, \"Incorrect rpcuser or rpcpassword\", self.nodes[0].cli('-rpcuser=%s' % user, '-stdinrpcpass', input=\"foo\").echo)\n \n         self.log.info(\"Test -stdin and -stdinrpcpass\")\n@@ -51,10 +58,8 @@ def run_test(self):\n         self.log.info(\"Make sure that -getinfo with arguments fails\")\n         assert_raises_process_error(1, \"-getinfo takes no arguments\", self.nodes[0].cli('-getinfo').help)\n \n-        self.log.info(\"Compare responses from `bitcoin-cli -getinfo` and the RPCs data is retrieved from.\")\n+        self.log.info(\"Test that -getinfo returns the expected network and blockchain info\")\n         cli_get_info = self.nodes[0].cli('-getinfo').send_cli()\n-        if self.is_wallet_compiled():\n-            wallet_info = self.nodes[0].getwalletinfo()\n         network_info = self.nodes[0].getnetworkinfo()\n         blockchain_info = self.nodes[0].getblockchaininfo()\n \n@@ -66,11 +71,15 @@ def run_test(self):\n         assert_equal(cli_get_info['difficulty'], blockchain_info['difficulty'])\n         assert_equal(cli_get_info['chain'], blockchain_info['chain'])\n         if self.is_wallet_compiled():\n-            assert_equal(cli_get_info['balance'], wallet_info['balance'])\n+            self.log.info(\"Test that -getinfo returns the expected wallet info\")\n+            assert_equal(cli_get_info['balance'], BALANCE)\n+            wallet_info = self.nodes[0].getwalletinfo()\n             assert_equal(cli_get_info['keypoolsize'], wallet_info['keypoolsize'])\n             assert_equal(cli_get_info['paytxfee'], wallet_info['paytxfee'])\n             assert_equal(cli_get_info['relayfee'], network_info['relayfee'])\n             # unlocked_until is not tested because the wallet is not encrypted\n+        else:\n+            self.log.info(\"*** Wallet not compiled; -getinfo wallet tests skipped\")\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]