laanwj,2014-03-04T09:41:07Z,"BTW this same design can be trivially used to send monetary values via RPC in any desired way. For example, a mode that returns and takes satoshis as integer is just a matter of adding the necessary option parsing and updating `ValueFromAmount` and `AmountFromValue`.\n\nSomething like\n\n```\n--rpcamountsmode=double (default, legacy)\n--rpcamountsmode=string\n--rpcamountsmode=int\n```\n",https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-36606968,36606968,
jgarzik,2014-03-04T13:00:44Z,"@laanwj I was thinking the same thing, RE outputting satoshis rather than strings or decimal numbers.\n",https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-36621330,36621330,
sipa,2014-03-04T13:04:50Z,JSON has no native integer type. Outputting satoshi counts is no better than outputting Bitcoin amounts (they'll be interpreted as floating point in both case).\n,https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-36621621,36621621,
jgarzik,2014-03-04T13:16:27Z,"@sipa The former is true -- no integer type -- but the latter is not.\n\nOutputting satoshi amounts does not automatically imply interpretation as floating point.  Most libs, including our own, provide integer or Decimal interpretations without an intermediate floating point conversion step.\n\nThe options should be more bitcoin-specific, though, and are really a matrix of four possibilities:\n1) ",https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-36622391,36622391,
laanwj,2014-03-04T13:16:31Z,"Well I like strings (with the `.` in the right place), so I want to keep that option. I'm fine with adding more possibilities of course.\n",https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-36622395,36622395,
jgarzik,2014-03-04T13:24:07Z,"-rpcamounttype=[number | string]   --- JSON string or number\n-rpcamountdecimal=[yes | no]        --- satoshis, or no\n",https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-36623003,36623003,
laanwj,2014-03-04T13:26:05Z,"Hmm... can we still combine it into one option somehow? I don't like two separate options affecting the monetary format, one in one place is confusing enough :-)\n",https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-36623167,36623167,
jgarzik,2014-03-04T13:32:47Z,"-rpcamount=[number-decimal, number-satoshis, string-decimal, string-satoshis]\n\nmeh.  Open to suggestions...  it is a quad-state.\n",https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-36623665,36623665,
laanwj,2014-03-04T13:39:12Z,That looks good to me.\n,https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-36624143,36624143,
luke-jr,2014-03-04T16:36:09Z,s/decimal/btc/ (in case someone wants to do mbtc or ubtc in the future)?\n,https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-36644473,36644473,
laanwj,2014-03-04T17:13:52Z,@luke-jr Hmm... It was never my intention to add different units to the RPC. It's waay too easy to introduce thousandfold errors this way by having the client and server use a different setting.\n\nInteger (in lowest possible denomination) and decimal (BTC proper) is enough IMO.\n\nConfusion can be avoided with these four options by enforcing a `.` in decimal types and rejecting `.`. in the intege,https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-36648925,36648925,
laanwj,2014-03-05T17:22:11Z,OK implemented all four modes + added tests for them\n- number-btc: Format as number in decimal BTC (default)\n- number-satoshis: Format as number in satoshis\n- string-btc: Format as string in decimal BTC\n- string-satoshis: Format as string in satoshis\n,https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-36768188,36768188,
sipa,2014-03-10T15:07:46Z,"If we're seriously thinking about making such pervasive changes to the RPC interface, I'd like to go all the way, and overhaul some other things:\n- Consistent method names.\n- Group method names based on the subsystem(s) they interfact with; for example prefix every wallet rpc with 'wallet.' (json-rpc allows arbitrary strings as method node), others with 'util.' (no subsystems), 'blockchain.' / '",https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-37192191,37192191,
luke-jr,2014-03-10T17:02:03Z,@sipa Those all sound like good ideas to me.\n,https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-37206391,37206391,
davecgh,2014-03-10T17:25:10Z,"I would also like to see a full blown overhaul with proper REST versioning and grouped and prefixed method names along the same lines as what sipa suggests.  I'm particularly keen on the idea of using named arguments.  Positional arguments are not conducive to optional arguments at all.  Having spent quite a bit of time on the RPC interface, I concur that the current positional design with optiona",https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-37209166,37209166,
jgarzik,2014-03-10T17:56:41Z,"@sipa +1 to all that\n\n@davecgh See existing pull req #2844 for a REST interface (though it is for something different, not an RPC replacement)\n",https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-37213082,37213082,
laanwj,2014-03-11T08:32:45Z,+1\n- JSON V2 may also be a good opportunity to remove getwork.\n- Regarding the wallet.\* methods: it should be possible to specify which wallet they apply to in the case of multiwallet\n,https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-37272896,37272896,
BitcoinPullTester,2014-05-28T13:14:21Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f3f8460fe51be719231612a921dd37af638df46a for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-44404358,44404358,
laanwj,2014-06-12T11:58:21Z,"No longer going to maintain this, at some point I suppose we'll want to do a RPC overhaul and the money amounts should just be integers in satoshis.\n",https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-45882558,45882558,
gdm85,2015-01-15T14:52:13Z,> JSON has no native integer type. Outputting satoshi counts is no better than outputting Bitcoin amounts (they'll be interpreted as floating point in both case).\n\n@sipa luckily there are other implementations of JSON readers e.g. the world is not really always using JavaScript to parse JSON data. See also http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf (page 4):\n\n> J,https://github.com/bitcoin/bitcoin/pull/3759#issuecomment-70096186,70096186,
