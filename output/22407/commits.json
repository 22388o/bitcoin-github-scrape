[
  {
    "sha": "20edf4bcf61e9fa310c3d7f3cac0c80a04df5364",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMGVkZjRiY2Y2MWU5ZmEzMTBjM2Q3ZjNjYWMwYzgwYTA0ZGY1MzY0",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2021-07-05T21:39:36Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2021-07-20T09:43:26Z"
      },
      "message": "rpc: Return block time in getblockchaininfo",
      "tree": {
        "sha": "83bc6401ae6570f8b3e2be589c901f62253af34f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83bc6401ae6570f8b3e2be589c901f62253af34f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20edf4bcf61e9fa310c3d7f3cac0c80a04df5364",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20edf4bcf61e9fa310c3d7f3cac0c80a04df5364",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/20edf4bcf61e9fa310c3d7f3cac0c80a04df5364",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20edf4bcf61e9fa310c3d7f3cac0c80a04df5364/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a62fc35a150da584d39d7cd01ade14bbb5002fb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a62fc35a150da584d39d7cd01ade14bbb5002fb9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a62fc35a150da584d39d7cd01ade14bbb5002fb9"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 8,
      "deletions": 1
    },
    "files": [
      {
        "sha": "013ed891eeab2f93dac0126c84621d15b2a463e3",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20edf4bcf61e9fa310c3d7f3cac0c80a04df5364/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20edf4bcf61e9fa310c3d7f3cac0c80a04df5364/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=20edf4bcf61e9fa310c3d7f3cac0c80a04df5364",
        "patch": "@@ -197,6 +197,8 @@ Low-level changes\n RPC\n ---\n \n+- `getblockchaininfo` now returns a new `time` field, that provides the chain tip time. (#22407)\n+\n - The RPC server can process a limited number of simultaneous RPC requests.\n   Previously, if this limit was exceeded, the RPC server would respond with\n   [status code 500 (`HTTP_INTERNAL_SERVER_ERROR`)](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_server_errors)."
      },
      {
        "sha": "faa80b4ee9cb3894b62fadfcb7932876e8dea218",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20edf4bcf61e9fa310c3d7f3cac0c80a04df5364/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20edf4bcf61e9fa310c3d7f3cac0c80a04df5364/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=20edf4bcf61e9fa310c3d7f3cac0c80a04df5364",
        "patch": "@@ -1425,7 +1425,8 @@ RPCHelpMan getblockchaininfo()\n                         {RPCResult::Type::NUM, \"headers\", \"the current number of headers we have validated\"},\n                         {RPCResult::Type::STR, \"bestblockhash\", \"the hash of the currently best block\"},\n                         {RPCResult::Type::NUM, \"difficulty\", \"the current difficulty\"},\n-                        {RPCResult::Type::NUM, \"mediantime\", \"median time for the current best block\"},\n+                        {RPCResult::Type::NUM_TIME, \"time\", \"The block time expressed in \" + UNIX_EPOCH_TIME},\n+                        {RPCResult::Type::NUM_TIME, \"mediantime\", \"The median block time expressed in \" + UNIX_EPOCH_TIME},\n                         {RPCResult::Type::NUM, \"verificationprogress\", \"estimate of verification progress [0..1]\"},\n                         {RPCResult::Type::BOOL, \"initialblockdownload\", \"(debug information) estimate of whether this node is in Initial Block Download mode\"},\n                         {RPCResult::Type::STR_HEX, \"chainwork\", \"total amount of work in active chain, in hexadecimal\"},\n@@ -1481,6 +1482,7 @@ RPCHelpMan getblockchaininfo()\n     obj.pushKV(\"headers\",               pindexBestHeader ? pindexBestHeader->nHeight : -1);\n     obj.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n     obj.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+    obj.pushKV(\"time\",                  (int64_t)tip->nTime);\n     obj.pushKV(\"mediantime\",            (int64_t)tip->GetMedianTimePast());\n     obj.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n     obj.pushKV(\"initialblockdownload\",  active_chainstate.IsInitialBlockDownload());"
      },
      {
        "sha": "f7290ff22916348c59aa6e233ad818395010ec56",
        "filename": "test/functional/rpc_blockchain.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/20edf4bcf61e9fa310c3d7f3cac0c80a04df5364/test/functional/rpc_blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/20edf4bcf61e9fa310c3d7f3cac0c80a04df5364/test/functional/rpc_blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_blockchain.py?ref=20edf4bcf61e9fa310c3d7f3cac0c80a04df5364",
        "patch": "@@ -93,11 +93,14 @@ def _test_getblockchaininfo(self):\n             'pruned',\n             'size_on_disk',\n             'softforks',\n+            'time',\n             'verificationprogress',\n             'warnings',\n         ]\n         res = self.nodes[0].getblockchaininfo()\n \n+        assert isinstance(res['time'], int)\n+\n         # result should have these additional pruning keys if manual pruning is enabled\n         assert_equal(sorted(res.keys()), sorted(['pruneheight', 'automatic_pruning'] + keys))\n "
      }
    ]
  }
]