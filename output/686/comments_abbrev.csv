TheBlueMatt,2011-12-07T17:13:36Z,"Other than that one concern, ACK\n",https://github.com/bitcoin/bitcoin/pull/686#issuecomment-3050001,3050001,
luke-jr,2011-12-07T23:11:36Z,"At the same time, I propose adjusting the testnet base58 versions to match with the new proposed base58 version spec.\n",https://github.com/bitcoin/bitcoin/pull/686#issuecomment-3055166,3055166,
gavinandresen,2011-12-08T02:45:13Z,"RE: why keep the regular-difficulty-every-2016-blocks:\n\nBecause if you don't, and hashing power drops, then it will never adjust downward properly because the common case for non-cusp blocks is ""find the last block with something other than minimum work and return its difficulty.""\n\nExample:  Imagine difficulty is at 1111 before block 201600, and that block ends up taking 60 minutes to find. Im",https://github.com/bitcoin/bitcoin/pull/686#issuecomment-3057087,3057087,
TheBlueMatt,2011-12-08T02:47:41Z,"mmm, fair enough\n",https://github.com/bitcoin/bitcoin/pull/686#issuecomment-3057108,3057108,
luke-jr,2011-12-08T02:49:58Z,"Yes, 192 for testnet pubkey-addresses. 196 for testnet script-addresses (OP_EVAL).\n",https://github.com/bitcoin/bitcoin/pull/686#issuecomment-3057120,3057120,
luke-jr,2011-12-08T21:19:49Z,"The new anti-orphan-flood code won't break this, will it?\n",https://github.com/bitcoin/bitcoin/pull/686#issuecomment-3070164,3070164,
gavinandresen,2011-12-09T02:30:16Z,"coblee: Nice catch!  You're right, this would prevent difficulty from ever dropping all the way down to min difficulty.\n\nluke-jr: Nice catch! You're right, the orphan block DoS code needs to take into account this change.\n\nI won't have time to fix this until I'm back next week.\n",https://github.com/bitcoin/bitcoin/pull/686#issuecomment-3074729,3074729,
gavinandresen,2011-12-15T21:02:09Z,Code updated/rebased to fix the issues pointed out by coblee and luke-jr.\n,https://github.com/bitcoin/bitcoin/pull/686#issuecomment-3168939,3168939,
luke-jr,2012-01-11T21:34:10Z,Is this going to be merged before 15 Jan? ;)\n,https://github.com/bitcoin/bitcoin/pull/686#issuecomment-3454071,3454071,
TheBlueMatt,2011-12-07T17:13:22Z,"Why inside the interval check?  If we are on the cusp of an interval, why shouldn't we allow min-diff blocks?\n",https://github.com/bitcoin/bitcoin/pull/686#discussion_r277175,277175,src/main.cpp
coblee,2011-12-08T21:11:33Z,What if the correct difficulty for this interval is min difficulty? Wouldn't this code return something higher from a block that it finds in the previous inteval? It should probably stop at the interval change and use the difficulty there.\n\nconst CBlockIndex\* pindex = pindexLast;\nwhile (pindex->pprev && pindex->nHeight % nInterval != 0 && pindex->nBits == nProofOfWorkLimit)\n    pindex = pinde,https://github.com/bitcoin/bitcoin/pull/686#discussion_r281113,281113,src/main.cpp
laanwj,2012-01-11T22:19:14Z,"I'm not sure whether this affects anything, but this does not check `pblock->nTime > 1326585600` like the other one.\n",https://github.com/bitcoin/bitcoin/pull/686#discussion_r345182,345182,src/main.cpp
gavinandresen,2012-01-12T14:30:10Z,It is OK-- the code that calls ComputeMinWork call pblock->GetBlockTime() which just return pblock->nTime.\n,https://github.com/bitcoin/bitcoin/pull/686#discussion_r346948,346948,src/main.cpp
