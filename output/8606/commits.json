[
  {
    "sha": "144ed76ea0b38b7c21b224501964f8a2c65c4bb6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDRlZDc2ZWEwYjM4YjdjMjFiMjI0NTAxOTY0ZjhhMmM2NWM0YmI2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-08-26T19:07:05Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-08-26T19:11:57Z"
      },
      "message": "Fix some locks\n\nThis makes sure that cs_filter is never held while taking cs_main\nor CNode::cs_vSend.",
      "tree": {
        "sha": "4717f409e10828c5366000a66b23c4dcf8b7a46a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4717f409e10828c5366000a66b23c4dcf8b7a46a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/144ed76ea0b38b7c21b224501964f8a2c65c4bb6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/144ed76ea0b38b7c21b224501964f8a2c65c4bb6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/144ed76ea0b38b7c21b224501964f8a2c65c4bb6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/144ed76ea0b38b7c21b224501964f8a2c65c4bb6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb566761fbe1631b5a7205ec1e93d9484c9c7ee8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb566761fbe1631b5a7205ec1e93d9484c9c7ee8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb566761fbe1631b5a7205ec1e93d9484c9c7ee8"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 21,
      "deletions": 15
    },
    "files": [
      {
        "sha": "8c4447a6d5d190d8093df15bde6ddaf2ccb231c6",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 15,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/144ed76ea0b38b7c21b224501964f8a2c65c4bb6/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/144ed76ea0b38b7c21b224501964f8a2c65c4bb6/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=144ed76ea0b38b7c21b224501964f8a2c65c4bb6",
        "patch": "@@ -4781,10 +4781,16 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                         pfrom->PushMessage(NetMsgType::BLOCK, block);\n                     else if (inv.type == MSG_FILTERED_BLOCK)\n                     {\n-                        LOCK(pfrom->cs_filter);\n-                        if (pfrom->pfilter)\n+                        bool send = false;\n+                        CMerkleBlock merkleBlock;\n                         {\n-                            CMerkleBlock merkleBlock(block, *pfrom->pfilter);\n+                            LOCK(pfrom->cs_filter);\n+                            if (pfrom->pfilter) {\n+                                send = true;\n+                                merkleBlock = CMerkleBlock(block, *pfrom->pfilter);\n+                            }\n+                        }\n+                        if (send) {\n                             pfrom->PushMessage(NetMsgType::MERKLEBLOCK, merkleBlock);\n                             // CMerkleBlock just contains hashes, so also push any transactions in the block the client did not see\n                             // This avoids hurting performance by pointlessly requiring a round-trip\n@@ -6052,8 +6058,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         CBloomFilter filter;\n         vRecv >> filter;\n \n-        LOCK(pfrom->cs_filter);\n-\n         if (!filter.IsWithinSizeConstraints())\n         {\n             // There is no excuse for sending a too-large filter\n@@ -6062,11 +6066,12 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         }\n         else\n         {\n+            LOCK(pfrom->cs_filter);\n             delete pfrom->pfilter;\n             pfrom->pfilter = new CBloomFilter(filter);\n             pfrom->pfilter->UpdateEmptyFull();\n+            pfrom->fRelayTxes = true;\n         }\n-        pfrom->fRelayTxes = true;\n     }\n \n \n@@ -6077,20 +6082,21 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n         // Nodes must NEVER send a data item > 520 bytes (the max size for a script data object,\n         // and thus, the maximum size any matched object can have) in a filteradd message\n-        if (vData.size() > MAX_SCRIPT_ELEMENT_SIZE)\n-        {\n-            LOCK(cs_main);\n-            Misbehaving(pfrom->GetId(), 100);\n+        bool bad = false;\n+        if (vData.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n+            bad = true;\n         } else {\n             LOCK(pfrom->cs_filter);\n-            if (pfrom->pfilter)\n+            if (pfrom->pfilter) {\n                 pfrom->pfilter->insert(vData);\n-            else\n-            {\n-                LOCK(cs_main);\n-                Misbehaving(pfrom->GetId(), 100);\n+            } else {\n+                bad = true;\n             }\n         }\n+        if (bad) {\n+            LOCK(cs_main);\n+            Misbehaving(pfrom->GetId(), 100);\n+        }\n     }\n \n "
      }
    ]
  }
]