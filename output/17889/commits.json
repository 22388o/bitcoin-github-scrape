[
  {
    "sha": "2b1641492fbf81e2c5a95f3e580811ca8700adc5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjE2NDE0OTJmYmY4MWUyYzVhOTVmM2U1ODA4MTFjYTg3MDBhZGM1",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-01-07T13:47:20Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-01-17T01:12:17Z"
      },
      "message": "wallet: Improve CWallet:MarkDestinationsDirty",
      "tree": {
        "sha": "270d29293a5c8fa2bb7c81461102ea5725e3815b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/270d29293a5c8fa2bb7c81461102ea5725e3815b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b1641492fbf81e2c5a95f3e580811ca8700adc5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b1641492fbf81e2c5a95f3e580811ca8700adc5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b1641492fbf81e2c5a95f3e580811ca8700adc5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b1641492fbf81e2c5a95f3e580811ca8700adc5/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac61ec9da6793f00b29ba11f784b9b1c3ae662e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac61ec9da6793f00b29ba11f784b9b1c3ae662e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac61ec9da6793f00b29ba11f784b9b1c3ae662e9"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 12,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0e0f06c64cde6402820023076a7ac3b1024815b7",
        "filename": "src/wallet/test/coinselector_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b1641492fbf81e2c5a95f3e580811ca8700adc5/src/wallet/test/coinselector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b1641492fbf81e2c5a95f3e580811ca8700adc5/src/wallet/test/coinselector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/coinselector_tests.cpp?ref=2b1641492fbf81e2c5a95f3e580811ca8700adc5",
        "patch": "@@ -78,6 +78,7 @@ static void add_coin(CWallet& wallet, const CAmount& nValue, int nAge = 6*24, bo\n     if (fIsFromMe)\n     {\n         wtx->m_amounts[CWalletTx::DEBIT].Set(ISMINE_SPENDABLE, 1);\n+        wtx->m_is_cache_empty = false;\n     }\n     COutput output(wtx.get(), nInput, nAge, true /* spendable */, true /* solvable */, true /* safe */);\n     vCoins.push_back(output);"
      },
      {
        "sha": "07fa152ccae5de6d85a4e268aba54b7e44e67296",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b1641492fbf81e2c5a95f3e580811ca8700adc5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b1641492fbf81e2c5a95f3e580811ca8700adc5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=2b1641492fbf81e2c5a95f3e580811ca8700adc5",
        "patch": "@@ -1795,6 +1795,7 @@ CAmount CWalletTx::GetCachableAmount(AmountType type, const isminefilter& filter\n     auto& amount = m_amounts[type];\n     if (recalculate || !amount.m_cached[filter]) {\n         amount.Set(filter, type == DEBIT ? pwallet->GetDebit(*tx, filter) : pwallet->GetCredit(*tx, filter));\n+        m_is_cache_empty = false;\n     }\n     return amount.m_value[filter];\n }\n@@ -1871,6 +1872,7 @@ CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter\n \n     if (allow_cache) {\n         m_amounts[AVAILABLE_CREDIT].Set(filter, nCredit);\n+        m_is_cache_empty = false;\n     }\n \n     return nCredit;\n@@ -3171,10 +3173,9 @@ int64_t CWallet::GetOldestKeyPoolTime()\n void CWallet::MarkDestinationsDirty(const std::set<CTxDestination>& destinations) {\n     for (auto& entry : mapWallet) {\n         CWalletTx& wtx = entry.second;\n-\n+        if (wtx.m_is_cache_empty) continue;\n         for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n             CTxDestination dst;\n-\n             if (ExtractDestination(wtx.tx->vout[i].scriptPubKey, dst) && destinations.count(dst)) {\n                 wtx.MarkDirty();\n                 break;"
      },
      {
        "sha": "6835f33b5242504d02a2f798deebe0eea06c2c2f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b1641492fbf81e2c5a95f3e580811ca8700adc5/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b1641492fbf81e2c5a95f3e580811ca8700adc5/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=2b1641492fbf81e2c5a95f3e580811ca8700adc5",
        "patch": "@@ -313,6 +313,13 @@ class CWalletTx\n     enum AmountType { DEBIT, CREDIT, IMMATURE_CREDIT, AVAILABLE_CREDIT, AMOUNTTYPE_ENUM_ELEMENTS };\n     CAmount GetCachableAmount(AmountType type, const isminefilter& filter, bool recalculate = false) const;\n     mutable CachableAmount m_amounts[AMOUNTTYPE_ENUM_ELEMENTS];\n+    /**\n+     * This flag is true if all m_amounts caches are empty. This is particularly\n+     * useful in places where MarkDirty is conditionally called and the\n+     * condition can be expensive and thus can be skipped if the flag is true.\n+     * See MarkDestinationsDirty.\n+     */\n+    mutable bool m_is_cache_empty{true};\n     mutable bool fChangeCached;\n     mutable bool fInMempool;\n     mutable CAmount nChangeCached;\n@@ -439,6 +446,7 @@ class CWalletTx\n         m_amounts[IMMATURE_CREDIT].Reset();\n         m_amounts[AVAILABLE_CREDIT].Reset();\n         fChangeCached = false;\n+        m_is_cache_empty = true;\n     }\n \n     void BindWallet(CWallet *pwalletIn)"
      }
    ]
  }
]