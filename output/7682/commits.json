[
  {
    "sha": "7e1f9750b6d5c66eaa95feb433a75f6d008d2920",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTFmOTc1MGI2ZDVjNjZlYWE5NWZlYjQzM2E3NWY2ZDAwOGQyOTIw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-09-11T21:31:30Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-03-14T14:02:58Z"
      },
      "message": "[trivial] init cleanup\n\nGithub-Pull: #6664\nRebased-From: 4c3cab14b71dd13be066f5be7c24ddaa7a2f8724",
      "tree": {
        "sha": "b18755b821d8dd8be08d28776f8f378b94e3c695",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b18755b821d8dd8be08d28776f8f378b94e3c695"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e1f9750b6d5c66eaa95feb433a75f6d008d2920",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e1f9750b6d5c66eaa95feb433a75f6d008d2920",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e1f9750b6d5c66eaa95feb433a75f6d008d2920",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e1f9750b6d5c66eaa95feb433a75f6d008d2920/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a0cfe3a9e6c5319ad8130bc0c53877e6b3962bb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0cfe3a9e6c5319ad8130bc0c53877e6b3962bb7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a0cfe3a9e6c5319ad8130bc0c53877e6b3962bb7"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "62a401f5d79f5288679e07bc2ac3c6306499a448",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e1f9750b6d5c66eaa95feb433a75f6d008d2920/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e1f9750b6d5c66eaa95feb433a75f6d008d2920/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7e1f9750b6d5c66eaa95feb433a75f6d008d2920",
        "patch": "@@ -275,7 +275,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), \"bitcoin.conf\"));\n     if (mode == HMM_BITCOIND)\n     {\n-#if !defined(WIN32)\n+#ifndef WIN32\n         strUsage += HelpMessageOpt(\"-daemon\", _(\"Run in the background as a daemon and accept commands\"));\n #endif\n     }\n@@ -292,7 +292,7 @@ std::string HelpMessage(HelpMessageMode mode)\n             \"Warning: Reverting this setting requires re-downloading the entire blockchain. \"\n             \"(default: 0 = disable pruning blocks, >%u = target size in MiB to use for block files)\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n     strUsage += HelpMessageOpt(\"-reindex\", _(\"Rebuild block chain index from current blk000??.dat files on startup\"));\n-#if !defined(WIN32)\n+#ifndef WIN32\n     strUsage += HelpMessageOpt(\"-sysperms\", _(\"Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)\"));\n #endif\n     strUsage += HelpMessageOpt(\"-txindex\", strprintf(_(\"Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)\"), 0));\n@@ -787,15 +787,15 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     fServer = GetBoolArg(\"-server\", false);\n \n-    // block pruning; get the amount of disk space (in MB) to allot for block & undo files\n+    // block pruning; get the amount of disk space (in MiB) to allot for block & undo files\n     int64_t nSignedPruneTarget = GetArg(\"-prune\", 0) * 1024 * 1024;\n     if (nSignedPruneTarget < 0) {\n         return InitError(_(\"Prune cannot be configured with a negative value.\"));\n     }\n     nPruneTarget = (uint64_t) nSignedPruneTarget;\n     if (nPruneTarget) {\n         if (nPruneTarget < MIN_DISK_SPACE_FOR_BLOCK_FILES) {\n-            return InitError(strprintf(_(\"Prune configured below the minimum of %d MB.  Please use a higher number.\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n+            return InitError(strprintf(_(\"Prune configured below the minimum of %d MiB.  Please use a higher number.\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n         }\n         LogPrintf(\"Prune configured to target %uMiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\n         fPruneMode = true;\n@@ -960,8 +960,8 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         if (!warningString.empty())\n             InitWarning(warningString);\n         if (!errorString.empty())\n-            return InitError(warningString);\n-        \n+            return InitError(errorString);\n+\n     } // (!fDisableWallet)\n #endif // ENABLE_WALLET\n     // ********************************************************* Step 6: network initialization\n@@ -1443,7 +1443,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         GenerateBitcoins(GetBoolArg(\"-gen\", false), pwalletMain, GetArg(\"-genproclimit\", 1));\n #endif\n \n-    // ********************************************************* Step 11: finished\n+    // ********************************************************* Step 12: finished\n \n     SetRPCWarmupFinished();\n     uiInterface.InitMessage(_(\"Done loading\"));"
      }
    ]
  }
]