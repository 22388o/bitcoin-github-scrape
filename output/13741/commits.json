[
  {
    "sha": "980b93e75a574989ba38299655aee0499f41c8b3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODBiOTNlNzVhNTc0OTg5YmEzODI5OTY1NWFlZTA0OTlmNDFjOGIz",
    "commit": {
      "author": {
        "name": "Evan Klitzke",
        "email": "evan@eklitzke.org",
        "date": "2018-03-29T06:05:13Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2018-07-25T14:13:51Z"
      },
      "message": "Only give LevelDB a block cache if LevelDB will actually use it.\n\nOn systems that use mmap LevelDB does not use a block cache. On these systems we\ngive the memory instead to the write buffer, where it will be used more\neffectively.",
      "tree": {
        "sha": "063fa31425b8bbe60afe88a43dfa142cb76ca341",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/063fa31425b8bbe60afe88a43dfa142cb76ca341"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/980b93e75a574989ba38299655aee0499f41c8b3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAltYhZ8THGZhbnF1YWtl\nQGdtYWlsLmNvbQAKCRAu659cwJUmwa8KD/9r48PyaUYhgw8LcAaA/is2Rc5rcdw7\nF42S2xCz8l16I9cGm5geD83vbHvhIzvb8AUSgVusriZFCHyYFVVGWPd8Loc7jS08\no/eJ4Ex5qhnJav8Vt3iR4GfTI1bijUsA6Eb0L8Cnxu5efqdJJnsMzrAMbbQy48vC\nVwiGmIE0+ym8k8YZTjQ4oh//reIjLk7HbabrMs7CM7f+J+gHt6X9lFHL6cM/05Zd\nNbgtyetJMrqgz16+BaXDubHSssaVZYb+fwGhTAlOvrwWdmqoxSUrs9esjdm9Nszm\n3i+D8NyKGtvhQomXwp7Pwk47tTGlXjcs6uZzcMS47TWcnA1L+zmw+YWUbkWeF4V5\nXZqGZU+ivuM78akuzDODA2JvWxtkk77qqW2OpRKtkhRLmQHPWyR4VtGOWQzIOVWA\ndOWPiwS7qltnc77Aqq1+pWzhv98gkxYFUsxFNUzjJWx1vbta08pSU/pDsiNgMKZy\nt+3YTjpbbiJC3iGegBKXeUINn2W4ORVJ1xrVMEsdjCcs/m8PLAN83306eMTO4bd5\nbFtuZOO5XERHpxQ3/JI/5gQfjBwLjzuGOxaQfL9RPeFAJDT5U6zfoPxSYbOaEv+i\nr0WJhI/J2k68kQjDs9G4/IMUe9bq28hZN3dXRjunYnA1vl3x2EgmVoL7E6TJR1nU\n3D982zRtPYMYnQ==\n=TPfQ\n-----END PGP SIGNATURE-----",
        "payload": "tree 063fa31425b8bbe60afe88a43dfa142cb76ca341\nparent 29b4ee64695f79511912ae127e66e0fe82f7a0d1\nauthor Evan Klitzke <evan@eklitzke.org> 1522303513 -0700\ncommitter fanquake <fanquake@gmail.com> 1532528031 +0800\n\nOnly give LevelDB a block cache if LevelDB will actually use it.\n\nOn systems that use mmap LevelDB does not use a block cache. On these systems we\ngive the memory instead to the write buffer, where it will be used more\neffectively.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/980b93e75a574989ba38299655aee0499f41c8b3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/980b93e75a574989ba38299655aee0499f41c8b3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/980b93e75a574989ba38299655aee0499f41c8b3/comments",
    "author": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29b4ee64695f79511912ae127e66e0fe82f7a0d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29b4ee64695f79511912ae127e66e0fe82f7a0d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29b4ee64695f79511912ae127e66e0fe82f7a0d1"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 31,
      "deletions": 3
    },
    "files": [
      {
        "sha": "803c1a499f8962a7f7de1c73f29ca69e44d7a2f9",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 3,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/980b93e75a574989ba38299655aee0499f41c8b3/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/980b93e75a574989ba38299655aee0499f41c8b3/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=980b93e75a574989ba38299655aee0499f41c8b3",
        "patch": "@@ -72,7 +72,23 @@ class CBitcoinLevelDBLogger : public leveldb::Logger {\n     }\n };\n \n-static void SetMaxOpenFiles(leveldb::Options *options) {\n+// Mmap is only used on 64-bit Unix systems.\n+static constexpr bool LevelDBUsesMmap() {\n+#ifdef WIN32\n+    return false;\n+#else\n+    return sizeof(void*) >= 8;\n+#endif\n+}\n+\n+// Systems with mmap do not use the block cache.\n+static constexpr bool LevelDBUsesBlockCache()\n+{\n+    return !LevelDBUsesMmap();\n+}\n+\n+static void SetMaxOpenFiles(leveldb::Options *options)\n+{\n     // On most platforms the default setting of max_open_files (which is 1000)\n     // is optimal. On Windows using a large file count is OK because the handles\n     // do not interfere with select() loops. On 64-bit Unix hosts this value is\n@@ -100,8 +116,20 @@ static void SetMaxOpenFiles(leveldb::Options *options) {\n static leveldb::Options GetOptions(size_t nCacheSize)\n {\n     leveldb::Options options;\n-    options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n-    options.write_buffer_size = nCacheSize / 4; // up to two write buffers may be held in memory simultaneously\n+\n+    // Only give LevelDB memory for the block cache if it will actually use it;\n+    // on systems mmap this space is not used by LevelDB (as it's already in the\n+    // page cache), so don't bother in that case.\n+    //\n+    // Up to two write buffers may be held in memory simultaneously, so set\n+    // write_buffer_size for the worst case.\n+    if (LevelDBUsesBlockCache()) {\n+        options.write_buffer_size = nCacheSize / 4;\n+        options.block_cache = leveldb::NewLRUCache(nCacheSize / 2);\n+    } else {\n+        options.write_buffer_size = nCacheSize / 2;\n+    }\n+\n     options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n     options.compression = leveldb::kNoCompression;\n     options.info_log = new CBitcoinLevelDBLogger();"
      }
    ]
  }
]