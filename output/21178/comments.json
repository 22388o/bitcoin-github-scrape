[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/779060043",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#issuecomment-779060043",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21178",
    "id": 779060043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTA2MDA0Mw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-15T08:44:27Z",
    "updated_at": "2021-05-31T22:47:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20874 (test: Run mempool_limit.py even with wallet disabled by stackman27)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/779060043/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/811757670",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#issuecomment-811757670",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21178",
    "id": 811757670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTc1NzY3MA==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-01T08:50:11Z",
    "updated_at": "2021-04-01T08:50:11Z",
    "author_association": "MEMBER",
    "body": "@DariusParvin are you planning on following up with the review comments here?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/811757670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812713184",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#issuecomment-812713184",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21178",
    "id": 812713184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjcxMzE4NA==",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?u=def8aeeafa5b7ee820db7c45c9be9873e875ff87&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-02T20:58:58Z",
    "updated_at": "2021-04-02T20:58:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fanquake Yes, thanks for prompting me, I'll push updates this weekend!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812713184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822998617",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#issuecomment-822998617",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21178",
    "id": 822998617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjk5ODYxNw==",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?u=def8aeeafa5b7ee820db7c45c9be9873e875ff87&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-20T06:05:00Z",
    "updated_at": "2021-04-20T06:05:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've addressed the comments, but since there are conflicting changes with #20874, it would probably make sense for that one to get merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/822998617/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841923462",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#issuecomment-841923462",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21178",
    "id": 841923462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTkyMzQ2Mg==",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?u=def8aeeafa5b7ee820db7c45c9be9873e875ff87&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-17T01:50:24Z",
    "updated_at": "2021-05-17T01:50:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@stackman27 thanks for your review! I added logs instead of comments, as you suggested. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841923462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842248248",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#issuecomment-842248248",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21178",
    "id": 842248248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MjI0ODI0OA==",
    "user": {
      "login": "michaelfolkson",
      "id": 16323900,
      "node_id": "MDQ6VXNlcjE2MzIzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16323900?u=e2201a78ad660e42fd175003d02ad749b855e0a9&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelfolkson",
      "html_url": "https://github.com/michaelfolkson",
      "followers_url": "https://api.github.com/users/michaelfolkson/followers",
      "following_url": "https://api.github.com/users/michaelfolkson/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
      "repos_url": "https://api.github.com/users/michaelfolkson/repos",
      "events_url": "https://api.github.com/users/michaelfolkson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-17T11:29:41Z",
    "updated_at": "2021-05-17T11:34:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I've addressed the comments, but since there are conflicting changes with #20874, it would probably make sense for that one to get merged first.\r\n\r\nIs this still waiting on #20874? Given Marco has reviewed this and not #20874 presumably this is closer to merging? \ud83d\ude05 \r\n\r\nedit: #20874 needs a rebase so yeah I think this is closer to merging. Obvious Concept ACK too btw.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842248248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842283896",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#issuecomment-842283896",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21178",
    "id": 842283896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MjI4Mzg5Ng==",
    "user": {
      "login": "michaelfolkson",
      "id": 16323900,
      "node_id": "MDQ6VXNlcjE2MzIzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16323900?u=e2201a78ad660e42fd175003d02ad749b855e0a9&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelfolkson",
      "html_url": "https://github.com/michaelfolkson",
      "followers_url": "https://api.github.com/users/michaelfolkson/followers",
      "following_url": "https://api.github.com/users/michaelfolkson/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
      "repos_url": "https://api.github.com/users/michaelfolkson/repos",
      "events_url": "https://api.github.com/users/michaelfolkson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-17T12:27:34Z",
    "updated_at": "2021-05-17T12:27:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "The test is still skipped when wallet is disabled. I think you need to delete:\r\n\r\n```\r\ndef skip_test_if_missing_module(self):\r\n        self.skip_if_no_wallet()\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842283896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842416510",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#issuecomment-842416510",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21178",
    "id": 842416510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MjQxNjUxMA==",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?u=def8aeeafa5b7ee820db7c45c9be9873e875ff87&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-17T15:25:42Z",
    "updated_at": "2021-05-17T15:26:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@michaelfolkson oops! I removed those lines. And yes, since #21762 where `create_self_transfer` was added, this PR is relatively independent of everything else, so it's not waiting on anything. Cheers",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/842416510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850872166",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#issuecomment-850872166",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21178",
    "id": 850872166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MDg3MjE2Ng==",
    "user": {
      "login": "michaelfolkson",
      "id": 16323900,
      "node_id": "MDQ6VXNlcjE2MzIzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16323900?u=e2201a78ad660e42fd175003d02ad749b855e0a9&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelfolkson",
      "html_url": "https://github.com/michaelfolkson",
      "followers_url": "https://api.github.com/users/michaelfolkson/followers",
      "following_url": "https://api.github.com/users/michaelfolkson/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
      "repos_url": "https://api.github.com/users/michaelfolkson/repos",
      "events_url": "https://api.github.com/users/michaelfolkson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-29T17:49:18Z",
    "updated_at": "2021-05-29T17:49:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re-ACK 163e8881e88a798462a60b5232a6b4ff62e1969a",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/850872166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/851427023",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#issuecomment-851427023",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21178",
    "id": 851427023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTQyNzAyMw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-31T11:32:56Z",
    "updated_at": "2021-05-31T11:34:13Z",
    "author_association": "MEMBER",
    "body": "`s/disable/disabled/` in commit message 163e8881e88a798462a60b5232a6b4ff62e1969a",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/851427023/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/851613165",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#issuecomment-851613165",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21178",
    "id": 851613165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTYxMzE2NQ==",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?u=def8aeeafa5b7ee820db7c45c9be9873e875ff87&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-31T17:41:43Z",
    "updated_at": "2021-05-31T17:41:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @MarcoFalke! typo fixed and rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/851613165/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/852107614",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#issuecomment-852107614",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21178",
    "id": 852107614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1MjEwNzYxNA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-01T13:04:45Z",
    "updated_at": "2021-06-01T13:04:45Z",
    "author_association": "MEMBER",
    "body": "cr ACK a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/852107614/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576830729",
    "pull_request_review_id": 591233260,
    "id": 576830729,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjgzMDcyOQ==",
    "diff_hunk": "@@ -67,13 +67,26 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx = CTransaction()\n         tx.vin = [CTxIn(COutPoint(int(utxo_to_spend['txid'], 16), utxo_to_spend['vout']))]\n         tx.vout = [CTxOut(int(send_value * COIN), self._scriptPubKey)]\n+        tx.nLockTime = locktime\n         tx.wit.vtxinwit = [CTxInWitness()]\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n-        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        if tx_info['allowed']:\n+            assert_equal(tx_info['vsize'], vsize)\n+            assert_equal(tx_info['fees']['base'], fee)\n+\n+        new_utxo = {'txid': tx_info['txid'], 'vout': 0, 'value': send_value}\n+        return tx_hex,  new_utxo\n+\n+    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None, locktime=0):\n+        \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+\n+        tx_hex, new_utxo = self.create_self_transfer(fee_rate=fee_rate, from_node=from_node, utxo_to_spend=utxo_to_spend, locktime=locktime)\n+\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]",
    "path": "test/functional/test_framework/wallet.py",
    "position": null,
    "original_position": 34,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "a96c58aad6912eb725455dec5997bd60308aa762",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "this is not needed anymore i believe",
    "created_at": "2021-02-16T13:41:55Z",
    "updated_at": "2021-04-05T05:01:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r576830729",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576830729"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r576830729"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576830729/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 88,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576833170",
    "pull_request_review_id": 591233260,
    "id": 576833170,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjgzMzE3MA==",
    "diff_hunk": "@@ -46,33 +42,34 @@ def run_test(self):\n         # and make sure the mempool code behaves correctly.\n         b = [self.nodes[0].getblockhash(n) for n in range(101, 105)]\n         coinbase_txids = [self.nodes[0].getblock(h)['tx'][0] for h in b]\n-        spend_101_raw = create_raw_transaction(self.nodes[0], coinbase_txids[1], node1_address, amount=49.99)\n-        spend_102_raw = create_raw_transaction(self.nodes[0], coinbase_txids[2], node0_address, amount=49.99)\n-        spend_103_raw = create_raw_transaction(self.nodes[0], coinbase_txids[3], node0_address, amount=49.99)\n+        utxo_101 = wallet.get_utxo(txid=coinbase_txids[1])\n+        utxo_102 = wallet.get_utxo(txid=coinbase_txids[2])\n+        utxo_103 = wallet.get_utxo(txid=coinbase_txids[3])\n+        spend_101_raw, _ = wallet.create_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_101)\n+        spend_102_raw, utxo_102 = wallet.create_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_102)\n+        spend_103_raw, utxo_103 = wallet.create_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_103)\n \n         # Create a transaction which is time-locked to two blocks in the future\n-        timelock_tx = self.nodes[0].createrawtransaction(\n-            inputs=[{\n-                \"txid\": coinbase_txids[0],\n-                \"vout\": 0,\n-            }],\n-            outputs={node0_address: 49.99},\n-            locktime=self.nodes[0].getblockcount() + 2,\n-        )\n-        timelock_tx = self.nodes[0].signrawtransactionwithwallet(timelock_tx)[\"hex\"]\n+        utxo = wallet.get_utxo(txid=coinbase_txids[0])\n+        timelock_tx, _ = wallet.create_self_transfer(\n+            from_node=self.nodes[0],\n+            utxo_to_spend=utxo,\n+            locktime=self.nodes[0].getblockcount() + 2\n+            )",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 72,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "2ff5034eb12ff3771c9e2640a5f3d4f5004df430",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit\r\n```suggestion\r\n        timelock_tx, _ = wallet.create_self_transfer(\r\n            from_node=self.nodes[0],\r\n            utxo_to_spend=utxo,\r\n            locktime=self.nodes[0].getblockcount() + 2\r\n         )\r\n```",
    "created_at": "2021-02-16T13:45:35Z",
    "updated_at": "2021-04-05T05:01:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r576833170",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576833170"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r576833170"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576833170/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 54,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576838361",
    "pull_request_review_id": 591233260,
    "id": 576838361,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjgzODM2MQ==",
    "diff_hunk": "@@ -55,8 +55,8 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n-        \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+    def create_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None, locktime=0):\n+        \"\"\"Create a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: k['value'])\n         utxo_to_spend = utxo_to_spend or self._utxos.pop()  # Pick the largest utxo (if none provided) and hope it covers the fee\n         vsize = Decimal(96)",
    "path": "test/functional/test_framework/wallet.py",
    "position": null,
    "original_position": 10,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "2ff5034eb12ff3771c9e2640a5f3d4f5004df430",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not sure if this is relevant to this PR or previous one, but I'm surprised the vsize is hard-coded? It should be programmatically obtained or asserted to be correct after it's constructed. There's a `get_vsize()` for `CTransaction`s in test_framework.messages",
    "created_at": "2021-02-16T13:53:07Z",
    "updated_at": "2021-04-05T05:01:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r576838361",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576838361"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r576838361"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576838361/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 136,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576918272",
    "pull_request_review_id": 591348524,
    "id": 576918272,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjkxODI3Mg==",
    "diff_hunk": "@@ -55,8 +55,8 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n-        \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+    def create_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None, locktime=0):\n+        \"\"\"Create a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n         self._utxos = sorted(self._utxos, key=lambda k: k['value'])\n         utxo_to_spend = utxo_to_spend or self._utxos.pop()  # Pick the largest utxo (if none provided) and hope it covers the fee\n         vsize = Decimal(96)",
    "path": "test/functional/test_framework/wallet.py",
    "position": null,
    "original_position": 10,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "2ff5034eb12ff3771c9e2640a5f3d4f5004df430",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> asserted to be correct\r\n\r\nThere is an assertion: `assert_equal(tx_info['vsize'], vsize)`",
    "created_at": "2021-02-16T15:37:20Z",
    "updated_at": "2021-04-05T05:01:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r576918272",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576918272"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r576918272"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576918272/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 136,
    "side": "RIGHT",
    "in_reply_to_id": 576838361
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576979517",
    "pull_request_review_id": 591427993,
    "id": 576979517,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Njk3OTUxNw==",
    "diff_hunk": "@@ -8,36 +8,32 @@\n that spend (directly or indirectly) coinbase transactions.\n \"\"\"\n \n-from test_framework.blocktools import create_raw_transaction\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n-\n+from test_framework.wallet import MiniWallet\n \n class MempoolCoinbaseTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n+        self.setup_clean_chain = True",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 13,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "2ff5034eb12ff3771c9e2640a5f3d4f5004df430",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Generating blocks takes a few seconds in valgrind, so I am thinking if this test may benefit from using `miniwallet.scan_blocks` (to be introduced in #21200)",
    "created_at": "2021-02-16T16:54:20Z",
    "updated_at": "2021-04-05T05:01:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r576979517",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576979517"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r576979517"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576979517/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580374456",
    "pull_request_review_id": 595513119,
    "id": 580374456,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDM3NDQ1Ng==",
    "diff_hunk": "@@ -67,13 +67,26 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx = CTransaction()\n         tx.vin = [CTxIn(COutPoint(int(utxo_to_spend['txid'], 16), utxo_to_spend['vout']))]\n         tx.vout = [CTxOut(int(send_value * COIN), self._scriptPubKey)]\n+        tx.nLockTime = locktime\n         tx.wit.vtxinwit = [CTxInWitness()]\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n-        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        if tx_info['allowed']:\n+            assert_equal(tx_info['vsize'], vsize)\n+            assert_equal(tx_info['fees']['base'], fee)\n+\n+        new_utxo = {'txid': tx_info['txid'], 'vout': 0, 'value': send_value}\n+        return tx_hex,  new_utxo\n+\n+    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None, locktime=0):\n+        \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+\n+        tx_hex, new_utxo = self.create_self_transfer(fee_rate=fee_rate, from_node=from_node, utxo_to_spend=utxo_to_spend, locktime=locktime)\n+\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]\n+        self._utxos.append(new_utxo)",
    "path": "test/functional/test_framework/wallet.py",
    "position": null,
    "original_position": 35,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "2ff5034eb12ff3771c9e2640a5f3d4f5004df430",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: shouldn't the append be after `sendrawtx` as per [this](https://github.com/bitcoin/bitcoin/pull/21014#discussion_r575909995) comment \r\n\ud83e\udd14",
    "created_at": "2021-02-22T16:07:42Z",
    "updated_at": "2021-04-05T05:01:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r580374456",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580374456"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r580374456"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580374456/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580377508",
    "pull_request_review_id": 595513119,
    "id": 580377508,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDM3NzUwOA==",
    "diff_hunk": "@@ -67,13 +67,26 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx = CTransaction()\n         tx.vin = [CTxIn(COutPoint(int(utxo_to_spend['txid'], 16), utxo_to_spend['vout']))]\n         tx.vout = [CTxOut(int(send_value * COIN), self._scriptPubKey)]\n+        tx.nLockTime = locktime\n         tx.wit.vtxinwit = [CTxInWitness()]\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n-        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        if tx_info['allowed']:\n+            assert_equal(tx_info['vsize'], vsize)\n+            assert_equal(tx_info['fees']['base'], fee)\n+\n+        new_utxo = {'txid': tx_info['txid'], 'vout': 0, 'value': send_value}\n+        return tx_hex,  new_utxo\n+\n+    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None, locktime=0):\n+        \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+\n+        tx_hex, new_utxo = self.create_self_transfer(fee_rate=fee_rate, from_node=from_node, utxo_to_spend=utxo_to_spend, locktime=locktime)\n+\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]",
    "path": "test/functional/test_framework/wallet.py",
    "position": null,
    "original_position": 34,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "a96c58aad6912eb725455dec5997bd60308aa762",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I believe `tx_info` is being reused used in line 92 ",
    "created_at": "2021-02-22T16:11:27Z",
    "updated_at": "2021-04-05T05:01:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r580377508",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580377508"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r580377508"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580377508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 88,
    "side": "RIGHT",
    "in_reply_to_id": 576830729
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580392460",
    "pull_request_review_id": 595513119,
    "id": 580392460,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDM5MjQ2MA==",
    "diff_hunk": "@@ -67,13 +67,26 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx = CTransaction()\n         tx.vin = [CTxIn(COutPoint(int(utxo_to_spend['txid'], 16), utxo_to_spend['vout']))]\n         tx.vout = [CTxOut(int(send_value * COIN), self._scriptPubKey)]\n+        tx.nLockTime = locktime\n         tx.wit.vtxinwit = [CTxInWitness()]\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n-        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        if tx_info['allowed']:\n+            assert_equal(tx_info['vsize'], vsize)\n+            assert_equal(tx_info['fees']['base'], fee)\n+\n+        new_utxo = {'txid': tx_info['txid'], 'vout': 0, 'value': send_value}\n+        return tx_hex,  new_utxo",
    "path": "test/functional/test_framework/wallet.py",
    "position": null,
    "original_position": 27,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "2ff5034eb12ff3771c9e2640a5f3d4f5004df430",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm not very sure the intuition behind this but, can we just add everything in one variable and use key/value pairs to retrieve things? Seems cleaner to me and wouldn't have to include dead `_` every time I create a tx. For instance instead of doing `spend_101_raw, _ = wallet.create_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_101)` we can simplt do       `spend_101_raw= wallet.create_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_101)['tx_hex']`",
    "created_at": "2021-02-22T16:29:29Z",
    "updated_at": "2021-04-05T05:01:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r580392460",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580392460"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r580392460"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580392460/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 81,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580394186",
    "pull_request_review_id": 595513119,
    "id": 580394186,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDM5NDE4Ng==",
    "diff_hunk": "@@ -67,13 +67,26 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx = CTransaction()\n         tx.vin = [CTxIn(COutPoint(int(utxo_to_spend['txid'], 16), utxo_to_spend['vout']))]\n         tx.vout = [CTxOut(int(send_value * COIN), self._scriptPubKey)]\n+        tx.nLockTime = locktime\n         tx.wit.vtxinwit = [CTxInWitness()]\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n-        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        if tx_info['allowed']:\n+            assert_equal(tx_info['vsize'], vsize)\n+            assert_equal(tx_info['fees']['base'], fee)\n+\n+        new_utxo = {'txid': tx_info['txid'], 'vout': 0, 'value': send_value}\n+        return tx_hex,  new_utxo\n+\n+    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None, locktime=0):\n+        \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+\n+        tx_hex, new_utxo = self.create_self_transfer(fee_rate=fee_rate, from_node=from_node, utxo_to_spend=utxo_to_spend, locktime=locktime)\n+\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]",
    "path": "test/functional/test_framework/wallet.py",
    "position": null,
    "original_position": 34,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "a96c58aad6912eb725455dec5997bd60308aa762",
    "user": {
      "login": "stackman27",
      "id": 26356227,
      "node_id": "MDQ6VXNlcjI2MzU2MjI3",
      "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stackman27",
      "html_url": "https://github.com/stackman27",
      "followers_url": "https://api.github.com/users/stackman27/followers",
      "following_url": "https://api.github.com/users/stackman27/following{/other_user}",
      "gists_url": "https://api.github.com/users/stackman27/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stackman27/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
      "organizations_url": "https://api.github.com/users/stackman27/orgs",
      "repos_url": "https://api.github.com/users/stackman27/repos",
      "events_url": "https://api.github.com/users/stackman27/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stackman27/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Also is there a need to recheck `testmempoolaccept`? Every time we call `send_self_transfer` it checks the mempool acceptance through `create_self_transfer` so, can we just return proper values and remove the additional check? ",
    "created_at": "2021-02-22T16:31:37Z",
    "updated_at": "2021-04-05T05:01:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r580394186",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580394186"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r580394186"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580394186/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 88,
    "side": "RIGHT",
    "in_reply_to_id": 576830729
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606922029",
    "pull_request_review_id": 627634511,
    "id": 606922029,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjkyMjAyOQ==",
    "diff_hunk": "@@ -67,13 +67,26 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx = CTransaction()\n         tx.vin = [CTxIn(COutPoint(int(utxo_to_spend['txid'], 16), utxo_to_spend['vout']))]\n         tx.vout = [CTxOut(int(send_value * COIN), self._scriptPubKey)]\n+        tx.nLockTime = locktime\n         tx.wit.vtxinwit = [CTxInWitness()]\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n-        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        if tx_info['allowed']:\n+            assert_equal(tx_info['vsize'], vsize)\n+            assert_equal(tx_info['fees']['base'], fee)\n+\n+        new_utxo = {'txid': tx_info['txid'], 'vout': 0, 'value': send_value}\n+        return tx_hex,  new_utxo\n+\n+    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None, locktime=0):\n+        \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+\n+        tx_hex, new_utxo = self.create_self_transfer(fee_rate=fee_rate, from_node=from_node, utxo_to_spend=utxo_to_spend, locktime=locktime)\n+\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]",
    "path": "test/functional/test_framework/wallet.py",
    "position": null,
    "original_position": 34,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "a96c58aad6912eb725455dec5997bd60308aa762",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "good catch! I replaced it with `testmempoolaccept` with `FromHex` to get the txid and wtxid.",
    "created_at": "2021-04-05T05:12:55Z",
    "updated_at": "2021-04-05T05:12:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r606922029",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606922029"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r606922029"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606922029/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 88,
    "side": "RIGHT",
    "in_reply_to_id": 576830729
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606922107",
    "pull_request_review_id": 627634610,
    "id": 606922107,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjkyMjEwNw==",
    "diff_hunk": "@@ -8,36 +8,32 @@\n that spend (directly or indirectly) coinbase transactions.\n \"\"\"\n \n-from test_framework.blocktools import create_raw_transaction\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n-\n+from test_framework.wallet import MiniWallet\n \n class MempoolCoinbaseTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n+        self.setup_clean_chain = True",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 13,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "2ff5034eb12ff3771c9e2640a5f3d4f5004df430",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I had a go but I don't think it helps in this case since the pre-mined chain doesn't send the coinbase transaction to `self._address`. I made it little bit faster though by only mining 100 blocks instead of 200.",
    "created_at": "2021-04-05T05:13:23Z",
    "updated_at": "2021-04-05T05:13:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r606922107",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606922107"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r606922107"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606922107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT",
    "in_reply_to_id": 576979517
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606922141",
    "pull_request_review_id": 627634649,
    "id": 606922141,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjkyMjE0MQ==",
    "diff_hunk": "@@ -67,13 +67,26 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx = CTransaction()\n         tx.vin = [CTxIn(COutPoint(int(utxo_to_spend['txid'], 16), utxo_to_spend['vout']))]\n         tx.vout = [CTxOut(int(send_value * COIN), self._scriptPubKey)]\n+        tx.nLockTime = locktime\n         tx.wit.vtxinwit = [CTxInWitness()]\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n-        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        if tx_info['allowed']:\n+            assert_equal(tx_info['vsize'], vsize)\n+            assert_equal(tx_info['fees']['base'], fee)\n+\n+        new_utxo = {'txid': tx_info['txid'], 'vout': 0, 'value': send_value}\n+        return tx_hex,  new_utxo\n+\n+    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None, locktime=0):\n+        \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+\n+        tx_hex, new_utxo = self.create_self_transfer(fee_rate=fee_rate, from_node=from_node, utxo_to_spend=utxo_to_spend, locktime=locktime)\n+\n+        tx_info = from_node.testmempoolaccept([tx_hex])[0]\n+        self._utxos.append(new_utxo)",
    "path": "test/functional/test_framework/wallet.py",
    "position": null,
    "original_position": 35,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "2ff5034eb12ff3771c9e2640a5f3d4f5004df430",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "switched it around!",
    "created_at": "2021-04-05T05:13:33Z",
    "updated_at": "2021-04-05T05:13:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r606922141",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606922141"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r606922141"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606922141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 89,
    "side": "RIGHT",
    "in_reply_to_id": 580374456
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606922195",
    "pull_request_review_id": 627634701,
    "id": 606922195,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjkyMjE5NQ==",
    "diff_hunk": "@@ -67,13 +67,26 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n         tx = CTransaction()\n         tx.vin = [CTxIn(COutPoint(int(utxo_to_spend['txid'], 16), utxo_to_spend['vout']))]\n         tx.vout = [CTxOut(int(send_value * COIN), self._scriptPubKey)]\n+        tx.nLockTime = locktime\n         tx.wit.vtxinwit = [CTxInWitness()]\n         tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n         tx_hex = tx.serialize().hex()\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n-        self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n+        if tx_info['allowed']:\n+            assert_equal(tx_info['vsize'], vsize)\n+            assert_equal(tx_info['fees']['base'], fee)\n+\n+        new_utxo = {'txid': tx_info['txid'], 'vout': 0, 'value': send_value}\n+        return tx_hex,  new_utxo",
    "path": "test/functional/test_framework/wallet.py",
    "position": null,
    "original_position": 27,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "2ff5034eb12ff3771c9e2640a5f3d4f5004df430",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done!",
    "created_at": "2021-04-05T05:13:45Z",
    "updated_at": "2021-04-05T05:13:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r606922195",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606922195"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r606922195"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606922195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 81,
    "side": "RIGHT",
    "in_reply_to_id": 580392460
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616397499",
    "pull_request_review_id": 639570554,
    "id": 616397499,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxNjM5NzQ5OQ==",
    "diff_hunk": "@@ -8,36 +8,32 @@\n that spend (directly or indirectly) coinbase transactions.\n \"\"\"\n \n-from test_framework.blocktools import create_raw_transaction\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n-\n+from test_framework.wallet import MiniWallet\n \n class MempoolCoinbaseTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n+        self.setup_clean_chain = True",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 13,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "2ff5034eb12ff3771c9e2640a5f3d4f5004df430",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It should. Specifically the last 25 mature blocks (including block 100). And the last 25 immature blocks (including block 200), but you don't need those.",
    "created_at": "2021-04-20T07:01:16Z",
    "updated_at": "2021-04-20T07:01:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r616397499",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616397499"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r616397499"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/616397499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT",
    "in_reply_to_id": 576979517
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622789643",
    "pull_request_review_id": 647876998,
    "id": 622789643,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMjc4OTY0Mw==",
    "diff_hunk": "@@ -8,36 +8,32 @@\n that spend (directly or indirectly) coinbase transactions.\n \"\"\"\n \n-from test_framework.blocktools import create_raw_transaction\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n-\n+from test_framework.wallet import MiniWallet\n \n class MempoolCoinbaseTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n+        self.setup_clean_chain = True",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 13,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "2ff5034eb12ff3771c9e2640a5f3d4f5004df430",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sorry, there was a bug. If you rebase, the bug should fix itself.",
    "created_at": "2021-04-29T07:13:56Z",
    "updated_at": "2021-04-29T07:13:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r622789643",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622789643"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r622789643"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/622789643/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT",
    "in_reply_to_id": 576979517
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633169672",
    "pull_request_review_id": 660491344,
    "id": 633169672,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzE2OTY3Mg==",
    "diff_hunk": "@@ -8,36 +8,32 @@\n that spend (directly or indirectly) coinbase transactions.\n \"\"\"\n \n-from test_framework.blocktools import create_raw_transaction\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n-\n+from test_framework.wallet import MiniWallet\n \n class MempoolCoinbaseTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n+        self.setup_clean_chain = True",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 13,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "2ff5034eb12ff3771c9e2640a5f3d4f5004df430",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "yes, it worked! I updated the PR to use `miniwallet.scan_blocks` starting from block 76.",
    "created_at": "2021-05-17T01:11:59Z",
    "updated_at": "2021-05-17T01:11:59Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r633169672",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633169672"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r633169672"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633169672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 18,
    "side": "RIGHT",
    "in_reply_to_id": 576979517
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633280595",
    "pull_request_review_id": 660628946,
    "id": 633280595,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzI4MDU5NQ==",
    "diff_hunk": "@@ -27,82 +26,89 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n+        wallet = MiniWallet(self.nodes[0])\n+\n         # Start with a 200 block chain\n         assert_equal(self.nodes[0].getblockcount(), 200)\n \n-        # Mine four blocks. After this, nodes[0] blocks\n-        # 101, 102, and 103 are spend-able.\n-        new_blocks = self.nodes[1].generate(4)\n-        self.sync_all()\n-\n-        node0_address = self.nodes[0].getnewaddress()\n-        node1_address = self.nodes[1].getnewaddress()\n+        self.log.info(\"Add 4 coinbase utxos to the miniwallet\")\n+        # Block 76 contains the first spendable coinbase txs.\n+        first_block = 76\n+        wallet.scan_blocks(start=first_block, num=4)\n \n         # Three scenarios for re-orging coinbase spends in the memory pool:\n-        # 1. Direct coinbase spend  :  spend_101\n-        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_102 and spend_102_1\n-        # 3. Indirect (coinbase and child both in chain) : spend_103 and spend_103_1\n+        # 1. Direct coinbase spend  :  spend_1\n+        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_2 and spend_2_1\n+        # 3. Indirect (coinbase and child both in chain) : spend_3 and spend_3_1\n         # Use invalidatblock to make all of the above coinbase spends invalid (immature coinbase),\n         # and make sure the mempool code behaves correctly.\n-        b = [self.nodes[0].getblockhash(n) for n in range(101, 105)]\n+        b = [self.nodes[0].getblockhash(n) for n in range(76, 80)]",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 43,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "a856630c27cd28186d4e39dd1129f0cae8149261",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        b = [self.nodes[0].getblockhash(n) for n in range(first_block, first_block+4)]\r\n```",
    "created_at": "2021-05-17T07:20:42Z",
    "updated_at": "2021-05-17T07:26:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r633280595",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633280595"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r633280595"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633280595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633644036",
    "pull_request_review_id": 661121913,
    "id": 633644036,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzY0NDAzNg==",
    "diff_hunk": "@@ -27,82 +26,89 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n+        wallet = MiniWallet(self.nodes[0])\n+\n         # Start with a 200 block chain\n         assert_equal(self.nodes[0].getblockcount(), 200)\n \n-        # Mine four blocks. After this, nodes[0] blocks\n-        # 101, 102, and 103 are spend-able.\n-        new_blocks = self.nodes[1].generate(4)\n-        self.sync_all()\n-\n-        node0_address = self.nodes[0].getnewaddress()\n-        node1_address = self.nodes[1].getnewaddress()\n+        self.log.info(\"Add 4 coinbase utxos to the miniwallet\")\n+        # Block 76 contains the first spendable coinbase txs.\n+        first_block = 76\n+        wallet.scan_blocks(start=first_block, num=4)\n \n         # Three scenarios for re-orging coinbase spends in the memory pool:\n-        # 1. Direct coinbase spend  :  spend_101\n-        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_102 and spend_102_1\n-        # 3. Indirect (coinbase and child both in chain) : spend_103 and spend_103_1\n+        # 1. Direct coinbase spend  :  spend_1\n+        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_2 and spend_2_1\n+        # 3. Indirect (coinbase and child both in chain) : spend_3 and spend_3_1\n         # Use invalidatblock to make all of the above coinbase spends invalid (immature coinbase),\n         # and make sure the mempool code behaves correctly.\n-        b = [self.nodes[0].getblockhash(n) for n in range(101, 105)]\n+        b = [self.nodes[0].getblockhash(n) for n in range(76, 80)]",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 43,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "a856630c27cd28186d4e39dd1129f0cae8149261",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Any reason you didn't fix this as well on the latest force push?",
    "created_at": "2021-05-17T15:39:58Z",
    "updated_at": "2021-05-17T15:39:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r633644036",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633644036"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r633644036"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633644036/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT",
    "in_reply_to_id": 633280595
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633708888",
    "pull_request_review_id": 661208513,
    "id": 633708888,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzcwODg4OA==",
    "diff_hunk": "@@ -27,82 +26,89 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n+        wallet = MiniWallet(self.nodes[0])\n+\n         # Start with a 200 block chain\n         assert_equal(self.nodes[0].getblockcount(), 200)\n \n-        # Mine four blocks. After this, nodes[0] blocks\n-        # 101, 102, and 103 are spend-able.\n-        new_blocks = self.nodes[1].generate(4)\n-        self.sync_all()\n-\n-        node0_address = self.nodes[0].getnewaddress()\n-        node1_address = self.nodes[1].getnewaddress()\n+        self.log.info(\"Add 4 coinbase utxos to the miniwallet\")\n+        # Block 76 contains the first spendable coinbase txs.\n+        first_block = 76\n+        wallet.scan_blocks(start=first_block, num=4)\n \n         # Three scenarios for re-orging coinbase spends in the memory pool:\n-        # 1. Direct coinbase spend  :  spend_101\n-        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_102 and spend_102_1\n-        # 3. Indirect (coinbase and child both in chain) : spend_103 and spend_103_1\n+        # 1. Direct coinbase spend  :  spend_1\n+        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_2 and spend_2_1\n+        # 3. Indirect (coinbase and child both in chain) : spend_3 and spend_3_1\n         # Use invalidatblock to make all of the above coinbase spends invalid (immature coinbase),\n         # and make sure the mempool code behaves correctly.\n-        b = [self.nodes[0].getblockhash(n) for n in range(101, 105)]\n+        b = [self.nodes[0].getblockhash(n) for n in range(76, 80)]",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 43,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "a856630c27cd28186d4e39dd1129f0cae8149261",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "sorry i didn't see this comments, i'll fix it now!",
    "created_at": "2021-05-17T17:08:13Z",
    "updated_at": "2021-05-17T17:08:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r633708888",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633708888"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r633708888"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633708888/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT",
    "in_reply_to_id": 633280595
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633710664",
    "pull_request_review_id": 661210843,
    "id": 633710664,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzcxMDY2NA==",
    "diff_hunk": "@@ -27,82 +26,89 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n+        wallet = MiniWallet(self.nodes[0])\n+\n         # Start with a 200 block chain\n         assert_equal(self.nodes[0].getblockcount(), 200)\n \n-        # Mine four blocks. After this, nodes[0] blocks\n-        # 101, 102, and 103 are spend-able.\n-        new_blocks = self.nodes[1].generate(4)\n-        self.sync_all()\n-\n-        node0_address = self.nodes[0].getnewaddress()\n-        node1_address = self.nodes[1].getnewaddress()\n+        self.log.info(\"Add 4 coinbase utxos to the miniwallet\")\n+        # Block 76 contains the first spendable coinbase txs.\n+        first_block = 76\n+        wallet.scan_blocks(start=first_block, num=4)\n \n         # Three scenarios for re-orging coinbase spends in the memory pool:\n-        # 1. Direct coinbase spend  :  spend_101\n-        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_102 and spend_102_1\n-        # 3. Indirect (coinbase and child both in chain) : spend_103 and spend_103_1\n+        # 1. Direct coinbase spend  :  spend_1\n+        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_2 and spend_2_1\n+        # 3. Indirect (coinbase and child both in chain) : spend_3 and spend_3_1\n         # Use invalidatblock to make all of the above coinbase spends invalid (immature coinbase),\n         # and make sure the mempool code behaves correctly.\n-        b = [self.nodes[0].getblockhash(n) for n in range(101, 105)]\n+        b = [self.nodes[0].getblockhash(n) for n in range(76, 80)]",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 43,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "a856630c27cd28186d4e39dd1129f0cae8149261",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "just pushed it. Thanks for the review",
    "created_at": "2021-05-17T17:10:51Z",
    "updated_at": "2021-05-17T17:10:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r633710664",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633710664"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r633710664"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633710664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT",
    "in_reply_to_id": 633280595
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640534231",
    "pull_request_review_id": 670060959,
    "id": 640534231,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MDUzNDIzMQ==",
    "diff_hunk": "@@ -23,86 +22,90 @@ def set_test_params(self):\n             []\n         ]\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n+        wallet = MiniWallet(self.nodes[0])\n+\n         # Start with a 200 block chain\n         assert_equal(self.nodes[0].getblockcount(), 200)\n \n-        # Mine four blocks. After this, nodes[0] blocks\n-        # 101, 102, and 103 are spend-able.\n-        new_blocks = self.nodes[1].generate(4)\n-        self.sync_all()\n-\n-        node0_address = self.nodes[0].getnewaddress()\n-        node1_address = self.nodes[1].getnewaddress()\n+        self.log.info(\"Add 4 coinbase utxos to the miniwallet\")\n+        # Block 76 contains the first spendable coinbase txs.\n+        first_block = 76\n+        wallet.scan_blocks(start=first_block, num=4)\n \n         # Three scenarios for re-orging coinbase spends in the memory pool:\n-        # 1. Direct coinbase spend  :  spend_101\n-        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_102 and spend_102_1\n-        # 3. Indirect (coinbase and child both in chain) : spend_103 and spend_103_1\n+        # 1. Direct coinbase spend  :  spend_1\n+        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_2 and spend_2_1\n+        # 3. Indirect (coinbase and child both in chain) : spend_3 and spend_3_1\n         # Use invalidatblock to make all of the above coinbase spends invalid (immature coinbase),",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 44,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "65dd482ba8c87443e4c27dc28f2027625ca43005",
    "user": {
      "login": "michaelfolkson",
      "id": 16323900,
      "node_id": "MDQ6VXNlcjE2MzIzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelfolkson",
      "html_url": "https://github.com/michaelfolkson",
      "followers_url": "https://api.github.com/users/michaelfolkson/followers",
      "following_url": "https://api.github.com/users/michaelfolkson/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
      "repos_url": "https://api.github.com/users/michaelfolkson/repos",
      "events_url": "https://api.github.com/users/michaelfolkson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: s/invalidatblock/invalidateblock Might as well fix the typo",
    "created_at": "2021-05-27T11:26:42Z",
    "updated_at": "2021-05-27T12:05:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r640534231",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640534231"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r640534231"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640534231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 40,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640956561",
    "pull_request_review_id": 670627920,
    "id": 640956561,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MDk1NjU2MQ==",
    "diff_hunk": "@@ -23,86 +22,90 @@ def set_test_params(self):\n             []\n         ]\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n+        wallet = MiniWallet(self.nodes[0])\n+\n         # Start with a 200 block chain\n         assert_equal(self.nodes[0].getblockcount(), 200)\n \n-        # Mine four blocks. After this, nodes[0] blocks\n-        # 101, 102, and 103 are spend-able.\n-        new_blocks = self.nodes[1].generate(4)\n-        self.sync_all()\n-\n-        node0_address = self.nodes[0].getnewaddress()\n-        node1_address = self.nodes[1].getnewaddress()\n+        self.log.info(\"Add 4 coinbase utxos to the miniwallet\")\n+        # Block 76 contains the first spendable coinbase txs.\n+        first_block = 76\n+        wallet.scan_blocks(start=first_block, num=4)\n \n         # Three scenarios for re-orging coinbase spends in the memory pool:\n-        # 1. Direct coinbase spend  :  spend_101\n-        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_102 and spend_102_1\n-        # 3. Indirect (coinbase and child both in chain) : spend_103 and spend_103_1\n+        # 1. Direct coinbase spend  :  spend_1\n+        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_2 and spend_2_1\n+        # 3. Indirect (coinbase and child both in chain) : spend_3 and spend_3_1\n         # Use invalidatblock to make all of the above coinbase spends invalid (immature coinbase),",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 44,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "65dd482ba8c87443e4c27dc28f2027625ca43005",
    "user": {
      "login": "DariusParvin",
      "id": 41220998,
      "node_id": "MDQ6VXNlcjQxMjIwOTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/41220998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DariusParvin",
      "html_url": "https://github.com/DariusParvin",
      "followers_url": "https://api.github.com/users/DariusParvin/followers",
      "following_url": "https://api.github.com/users/DariusParvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/DariusParvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DariusParvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
      "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
      "repos_url": "https://api.github.com/users/DariusParvin/repos",
      "events_url": "https://api.github.com/users/DariusParvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "thanks! by the way, should I be squashing commits when making small fixes to the PR or will they get squashed at merge time?",
    "created_at": "2021-05-27T20:49:59Z",
    "updated_at": "2021-05-27T20:52:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r640956561",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640956561"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r640956561"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640956561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 40,
    "side": "RIGHT",
    "in_reply_to_id": 640534231
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641438939",
    "pull_request_review_id": 671151530,
    "id": 641438939,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MTQzODkzOQ==",
    "diff_hunk": "@@ -23,86 +22,90 @@ def set_test_params(self):\n             []\n         ]\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n+        wallet = MiniWallet(self.nodes[0])\n+\n         # Start with a 200 block chain\n         assert_equal(self.nodes[0].getblockcount(), 200)\n \n-        # Mine four blocks. After this, nodes[0] blocks\n-        # 101, 102, and 103 are spend-able.\n-        new_blocks = self.nodes[1].generate(4)\n-        self.sync_all()\n-\n-        node0_address = self.nodes[0].getnewaddress()\n-        node1_address = self.nodes[1].getnewaddress()\n+        self.log.info(\"Add 4 coinbase utxos to the miniwallet\")\n+        # Block 76 contains the first spendable coinbase txs.\n+        first_block = 76\n+        wallet.scan_blocks(start=first_block, num=4)\n \n         # Three scenarios for re-orging coinbase spends in the memory pool:\n-        # 1. Direct coinbase spend  :  spend_101\n-        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_102 and spend_102_1\n-        # 3. Indirect (coinbase and child both in chain) : spend_103 and spend_103_1\n+        # 1. Direct coinbase spend  :  spend_1\n+        # 2. Indirect (coinbase spend in chain, child in mempool) : spend_2 and spend_2_1\n+        # 3. Indirect (coinbase and child both in chain) : spend_3 and spend_3_1\n         # Use invalidatblock to make all of the above coinbase spends invalid (immature coinbase),",
    "path": "test/functional/mempool_reorg.py",
    "position": null,
    "original_position": 44,
    "commit_id": "a3f0cbf82ddae2dd83001a9cc3a7948dcfb6fa47",
    "original_commit_id": "65dd482ba8c87443e4c27dc28f2027625ca43005",
    "user": {
      "login": "michaelfolkson",
      "id": 16323900,
      "node_id": "MDQ6VXNlcjE2MzIzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelfolkson",
      "html_url": "https://github.com/michaelfolkson",
      "followers_url": "https://api.github.com/users/michaelfolkson/followers",
      "following_url": "https://api.github.com/users/michaelfolkson/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
      "repos_url": "https://api.github.com/users/michaelfolkson/repos",
      "events_url": "https://api.github.com/users/michaelfolkson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "On this project we [squash commits](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits) prior to review and merging. Obviously if there is a reason to have multiple commits then don't squash but in this case I don't think there should be a separate commit for a typo.",
    "created_at": "2021-05-28T10:17:26Z",
    "updated_at": "2021-05-28T10:17:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r641438939",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641438939"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21178#discussion_r641438939"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21178"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641438939/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 40,
    "side": "RIGHT",
    "in_reply_to_id": 640534231
  }
]