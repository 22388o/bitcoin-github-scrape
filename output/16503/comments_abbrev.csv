promag,2019-07-30 23:46:45,"Also when `CWalletTx::RelayWalletTransaction` is called `g_connman` is already set and the scheduler is stopped before `g_connman` is released. AFAICT this change is correct. I was thinking adding `assert(g_connman)` in `interfaces::ChainImpl::relayTransaction` but probably it's unnecessary.\n\nACK 18d6a81505123e703be87aa31eeb7fb48b5d50bd.",https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-516637738,516637738,
DrahtBot,2019-07-31 02:41:58,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-516670891,516670891,
laanwj,2019-07-31 06:14:55,"~0 on this\n\nNeeds review by @theuni, he probably knows the reasoning behind this. I think the intent was that it's possible to run the node without P2P enabled at all, even though it's currently not an option.\n\n(or maybe the idea was to make various parts more loosely coupled to have more flexibility in the initialization sequence)\n\n>  assert(g_connman) in interfaces::ChainImpl::relayT",https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-516712215,516712215,
promag,2019-07-31 07:43:50,"> (or maybe the idea was to make various parts more loosely coupled to have more flexibility in the initialization sequence)\n\n@laanwj I don't think just checking `p2pEnabled()` is enough for that, it's not thread safe and it doesn't retain the `CConnMan`.",https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-516736651,516736651,
ariard,2019-07-31 14:29:46,"I would argue that removing global use in `ChainImpl` move forward getting the P2P self-contained, which is an ongoing project I think.\n\nYes of course @theuni should know the reason and if checks are still relevant.\n\nNote : #15713 is removing relayTransaction on the p2p check, wallet should just submit txn to mempool",https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-516874035,516874035,
MarcoFalke,2019-07-31 15:19:40,Concept ACK per @ariard and @promag . I prefer the way #15713 does it by returning `TransactionError::P2P_DISABLED` when connman is not there.,https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-516895658,516895658,
jnewbery,2019-08-01 15:39:33,"ACK 18d6a81505123e703be87aa31eeb7fb48b5d50bd\n\n> assert(g_connman) in interfaces::ChainImpl::relayTransaction\n\nSeems reasonable. I'd add a comment saying something like:\n\n`g_connman is assigned before chain clients are started, and reset after chain clients are stopped. g_connman should never be null for calls over the Chain interface.`",https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-517341709,517341709,
MarcoFalke,2019-08-07 20:32:29,@ariard Are you still working on this?,https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-519257907,519257907,
ariard,2019-08-07 20:53:37,"Yes, still waiting Concept ACK by @theuni to go further",https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-519264861,519264861,
jnewbery,2019-08-07 22:00:16,No need to allow this to be blocked by one person. I suggest you keep this rebased so it's ready to merge.,https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-519284786,519284786,
ariard,2019-08-08 02:00:38,"Rebased at 6e08957. `RelayWalletTransaction` P2P check  has been removed due to #15713 merge, which also added a `g_connman` assertion in `BroadcastTransaction`.",https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-519332886,519332886,
MarcoFalke,2019-08-08 18:32:30,"unsigned ACK 6e089572a79de38a08692b23b8a139171082139b (only looked at the diff on GitHub)\n\nI think it makes sense to remove obviously dead code. And if it wasn't dead code, it would be racy and result in either an assert failure or a segmentation fault.\nIf such a check is ever needed in the future, it should be added at that time.",https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-519637048,519637048,
jnewbery,2019-08-08 18:44:52,"Do you mind adding a comment to the `assert(g_connman)` in `BroadcastTransaction()`? Something like:\n\n""BroadcastTransaction can be called by the RPC server or wallet. g_connman is assigned before chain clients and the RPC server are started, and reset after chain clients adn the RPC are stopped are stopped. g_connman should never be null here.""",https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-519641355,519641355,
ariard,2019-08-09 03:00:53,Comment added at b7b9f6e,https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-519759168,519759168,
promag,2019-08-09 07:40:08,ACK b7b9f6e4cee262004643e2fe03d56cb47fdbf5c2,https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-519815836,519815836,
jnewbery,2019-08-09 13:34:08,ACK b7b9f6e4cee262004643e2fe03d56cb47fdbf5c2,https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-519920907,519920907,
theuni,2019-08-10 13:54:23,"Sorry for the delay. Post-merge concept ACK.\n\nChain was the wrong place for this anyway.",https://github.com/bitcoin/bitcoin/pull/16503#issuecomment-520150899,520150899,
