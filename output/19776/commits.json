[
  {
    "sha": "30bc8fab6833e0447ceadd3fff1566a680e33a98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMGJjOGZhYjY4MzNlMDQ0N2NlYWRkM2ZmZjE1NjZhNjgwZTMzYTk4",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-08-21T13:17:42Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-09-28T22:42:06Z"
      },
      "message": "net: save high-bandwidth mode states in CNodeStats",
      "tree": {
        "sha": "0b76b997f26531545afd1fa6bd006b8339d92775",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b76b997f26531545afd1fa6bd006b8339d92775"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30bc8fab6833e0447ceadd3fff1566a680e33a98",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30bc8fab6833e0447ceadd3fff1566a680e33a98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30bc8fab6833e0447ceadd3fff1566a680e33a98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30bc8fab6833e0447ceadd3fff1566a680e33a98/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "655937ebcbf681ededf86b1f0f60aac45c73393d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/655937ebcbf681ededf86b1f0f60aac45c73393d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/655937ebcbf681ededf86b1f0f60aac45c73393d"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 17,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2c41b314ffb03a991afccd558b8149ee1f75fdbd",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30bc8fab6833e0447ceadd3fff1566a680e33a98/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30bc8fab6833e0447ceadd3fff1566a680e33a98/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=30bc8fab6833e0447ceadd3fff1566a680e33a98",
        "patch": "@@ -563,6 +563,8 @@ void CNode::copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap)\n     }\n     stats.fInbound = IsInboundConn();\n     stats.m_manual_connection = IsManualConn();\n+    X(m_bip152_highbandwidth_to);\n+    X(m_bip152_highbandwidth_from);\n     X(nStartingHeight);\n     {\n         LOCK(cs_vSend);"
      },
      {
        "sha": "46050000928b985052650dd59d7ab5b2bc1e4a7a",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30bc8fab6833e0447ceadd3fff1566a680e33a98/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30bc8fab6833e0447ceadd3fff1566a680e33a98/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=30bc8fab6833e0447ceadd3fff1566a680e33a98",
        "patch": "@@ -681,6 +681,8 @@ class CNodeStats\n     std::string cleanSubVer;\n     bool fInbound;\n     bool m_manual_connection;\n+    bool m_bip152_highbandwidth_to;\n+    bool m_bip152_highbandwidth_from;\n     int nStartingHeight;\n     uint64_t nSendBytes;\n     mapMsgCmdSize mapSendBytesPerMsgCmd;\n@@ -942,6 +944,10 @@ class CNode\n public:\n     uint256 hashContinue;\n     std::atomic<int> nStartingHeight{-1};\n+    // We selected peer as (compact blocks) high-bandwidth peer (BIP152)\n+    std::atomic<bool> m_bip152_highbandwidth_to{false};\n+    // Peer selected us as (compact blocks) high-bandwidth peer (BIP152)\n+    std::atomic<bool> m_bip152_highbandwidth_from{false};\n \n     // flood relay\n     std::vector<CAddress> vAddrToSend;"
      },
      {
        "sha": "fb9978664cd43524b19afe080567b60ee2d4e58a",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30bc8fab6833e0447ceadd3fff1566a680e33a98/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30bc8fab6833e0447ceadd3fff1566a680e33a98/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=30bc8fab6833e0447ceadd3fff1566a680e33a98",
        "patch": "@@ -670,11 +670,15 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n                 // blocks using compact encodings.\n                 connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman, nCMPCTBLOCKVersion](CNode* pnodeStop){\n                     connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/false, nCMPCTBLOCKVersion));\n+                    // save BIP152 bandwidth state: we select peer to be low-bandwidth\n+                    pnodeStop->m_bip152_highbandwidth_to = false;\n                     return true;\n                 });\n                 lNodesAnnouncingHeaderAndIDs.pop_front();\n             }\n             connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, nCMPCTBLOCKVersion));\n+            // save BIP152 bandwidth state: we select peer to be high-bandwidth\n+            pfrom->m_bip152_highbandwidth_to = true;\n             lNodesAnnouncingHeaderAndIDs.push_back(pfrom->GetId());\n             return true;\n         });\n@@ -2652,8 +2656,12 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n                 State(pfrom.GetId())->fProvidesHeaderAndIDs = true;\n                 State(pfrom.GetId())->fWantsCmpctWitness = nCMPCTBLOCKVersion == 2;\n             }\n-            if (State(pfrom.GetId())->fWantsCmpctWitness == (nCMPCTBLOCKVersion == 2)) // ignore later version announces\n+            if (State(pfrom.GetId())->fWantsCmpctWitness == (nCMPCTBLOCKVersion == 2)) { // ignore later version announces\n                 State(pfrom.GetId())->fPreferHeaderAndIDs = fAnnounceUsingCMPCTBLOCK;\n+                // save whether peer selects us as BIP152 high-bandwidth peer\n+                // (receiving sendcmpct(1) signals high-bandwidth, sendcmpct(0) low-bandwidth)\n+                pfrom.m_bip152_highbandwidth_from = fAnnounceUsingCMPCTBLOCK;\n+            }\n             if (!State(pfrom.GetId())->fSupportsDesiredCmpctVersion) {\n                 if (pfrom.GetLocalServices() & NODE_WITNESS)\n                     State(pfrom.GetId())->fSupportsDesiredCmpctVersion = (nCMPCTBLOCKVersion == 2);"
      }
    ]
  },
  {
    "sha": "a7ed00f8bbc07dfc09f9e0a5bae10a1afe7612bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphN2VkMDBmOGJiYzA3ZGZjMDlmOWUwYTViYWUxMGExYWZlNzYxMmJi",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-08-21T13:20:21Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-09-28T22:42:06Z"
      },
      "message": "rpc: expose high-bandwidth mode states via getpeerinfo",
      "tree": {
        "sha": "f586c52e84cb02d5793ea757d5f88501a9c6d245",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f586c52e84cb02d5793ea757d5f88501a9c6d245"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7ed00f8bbc07dfc09f9e0a5bae10a1afe7612bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7ed00f8bbc07dfc09f9e0a5bae10a1afe7612bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7ed00f8bbc07dfc09f9e0a5bae10a1afe7612bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7ed00f8bbc07dfc09f9e0a5bae10a1afe7612bb/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30bc8fab6833e0447ceadd3fff1566a680e33a98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30bc8fab6833e0447ceadd3fff1566a680e33a98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30bc8fab6833e0447ceadd3fff1566a680e33a98"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8e0cb1762895f6d481f7ff626fda4e0961ed3c4e",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7ed00f8bbc07dfc09f9e0a5bae10a1afe7612bb/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7ed00f8bbc07dfc09f9e0a5bae10a1afe7612bb/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=a7ed00f8bbc07dfc09f9e0a5bae10a1afe7612bb",
        "patch": "@@ -116,6 +116,8 @@ static RPCHelpMan getpeerinfo()\n                             {RPCResult::Type::NUM, \"version\", \"The peer version, such as 70001\"},\n                             {RPCResult::Type::STR, \"subver\", \"The string version\"},\n                             {RPCResult::Type::BOOL, \"inbound\", \"Inbound (true) or Outbound (false)\"},\n+                            {RPCResult::Type::BOOL, \"bip152_hb_to\", \"Whether we selected peer as (compact blocks) high-bandwidth peer\"},\n+                            {RPCResult::Type::BOOL, \"bip152_hb_from\", \"Whether peer selected us as (compact blocks) high-bandwidth peer\"},\n                             {RPCResult::Type::BOOL, \"addnode\", \"Whether connection was due to addnode/-connect or if it was an automatic/inbound connection\\n\"\n                                                                \"(DEPRECATED, returned only if the config option -deprecatedrpc=getpeerinfo_addnode is passed)\"},\n                             {RPCResult::Type::STR, \"connection_type\", \"Type of connection: \\n\" + Join(CONNECTION_TYPE_DOC, \",\\n\") + \".\"},\n@@ -198,6 +200,8 @@ static RPCHelpMan getpeerinfo()\n         // their ver message.\n         obj.pushKV(\"subver\", stats.cleanSubVer);\n         obj.pushKV(\"inbound\", stats.fInbound);\n+        obj.pushKV(\"bip152_hb_to\", stats.m_bip152_highbandwidth_to);\n+        obj.pushKV(\"bip152_hb_from\", stats.m_bip152_highbandwidth_from);\n         if (IsDeprecatedRPCEnabled(\"getpeerinfo_addnode\")) {\n             // addnode is deprecated in v0.21 for removal in v0.22\n             obj.pushKV(\"addnode\", stats.m_manual_connection);"
      }
    ]
  },
  {
    "sha": "dab6583307ceb7dd94affcc3482ddcc1a5747147",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYWI2NTgzMzA3Y2ViN2RkOTRhZmZjYzM0ODJkZGNjMWE1NzQ3MTQ3",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-08-21T14:51:11Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-09-28T22:42:06Z"
      },
      "message": "doc: release note for new getpeerinfo fields \"bip152_hb_{from,to}\"\n\nCo-authored-by: Jon Atack <jon@atack.com>",
      "tree": {
        "sha": "26aac1a4516689bf028b6955072218d98e290c30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26aac1a4516689bf028b6955072218d98e290c30"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dab6583307ceb7dd94affcc3482ddcc1a5747147",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dab6583307ceb7dd94affcc3482ddcc1a5747147",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dab6583307ceb7dd94affcc3482ddcc1a5747147",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dab6583307ceb7dd94affcc3482ddcc1a5747147/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7ed00f8bbc07dfc09f9e0a5bae10a1afe7612bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7ed00f8bbc07dfc09f9e0a5bae10a1afe7612bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7ed00f8bbc07dfc09f9e0a5bae10a1afe7612bb"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5553c5a7bde7b78b23c8238e9bb0c0af2bad6212",
        "filename": "doc/release-notes-19776.md",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dab6583307ceb7dd94affcc3482ddcc1a5747147/doc/release-notes-19776.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dab6583307ceb7dd94affcc3482ddcc1a5747147/doc/release-notes-19776.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-19776.md?ref=dab6583307ceb7dd94affcc3482ddcc1a5747147",
        "patch": "@@ -0,0 +1,9 @@\n+Updated RPCs\n+------------\n+\n+- The `getpeerinfo` RPC returns two new boolean fields, `bip152_hb_to` and\n+  `bip152_hb_from`, that respectively indicate whether we selected a peer to be\n+  in compact blocks high-bandwidth mode or whether a peer selected us as a\n+  compact blocks high-bandwidth peer. High-bandwidth peers send new block\n+  announcements via a `cmpctblock` message rather than the usual inv/headers\n+  announcements. See BIP 152 for more details. (#19776)"
      }
    ]
  },
  {
    "sha": "343dc4760fd2407895fc8b3417a504b194429156",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDNkYzQ3NjBmZDI0MDc4OTVmYzhiMzQxN2E1MDRiMTk0NDI5MTU2",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-08-22T23:44:54Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-09-28T22:42:06Z"
      },
      "message": "test: add test for high-bandwidth mode states in getpeerinfo",
      "tree": {
        "sha": "574aa9a51e268e68154c20453fa58c6968a2a181",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/574aa9a51e268e68154c20453fa58c6968a2a181"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/343dc4760fd2407895fc8b3417a504b194429156",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/343dc4760fd2407895fc8b3417a504b194429156",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/343dc4760fd2407895fc8b3417a504b194429156",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/343dc4760fd2407895fc8b3417a504b194429156/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dab6583307ceb7dd94affcc3482ddcc1a5747147",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dab6583307ceb7dd94affcc3482ddcc1a5747147",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dab6583307ceb7dd94affcc3482ddcc1a5747147"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 31,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2a320dbd99161c72ab173896bad1023855c522d6",
        "filename": "test/functional/p2p_compactblocks.py",
        "status": "modified",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/343dc4760fd2407895fc8b3417a504b194429156/test/functional/p2p_compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/343dc4760fd2407895fc8b3417a504b194429156/test/functional/p2p_compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks.py?ref=343dc4760fd2407895fc8b3417a504b194429156",
        "patch": "@@ -768,6 +768,34 @@ def announce_cmpct_block(node, peer):\n         stalling_peer.send_and_ping(msg)\n         assert_equal(int(node.getbestblockhash(), 16), block.sha256)\n \n+    def test_highbandwidth_mode_states_via_getpeerinfo(self):\n+        # create new p2p connection for a fresh state w/o any prior sendcmpct messages sent\n+        hb_test_node = self.nodes[0].add_p2p_connection(TestP2PConn(cmpct_version=2))\n+\n+        # assert the RPC getpeerinfo boolean fields `bip152_hb_{to, from}`\n+        # match the given parameters for the last peer of a given node\n+        def assert_highbandwidth_states(node, hb_to, hb_from):\n+            peerinfo = node.getpeerinfo()[-1]\n+            assert_equal(peerinfo['bip152_hb_to'], hb_to)\n+            assert_equal(peerinfo['bip152_hb_from'], hb_from)\n+\n+        # initially, neither node has selected the other peer as high-bandwidth yet\n+        assert_highbandwidth_states(self.nodes[0], hb_to=False, hb_from=False)\n+\n+        # peer requests high-bandwidth mode by sending sendcmpct(1)\n+        hb_test_node.send_and_ping(msg_sendcmpct(announce=True, version=2))\n+        assert_highbandwidth_states(self.nodes[0], hb_to=False, hb_from=True)\n+\n+        # peer generates a block and sends it to node, which should\n+        # select the peer as high-bandwidth (up to 3 peers according to BIP 152)\n+        block = self.build_block_on_tip(self.nodes[0])\n+        hb_test_node.send_and_ping(msg_block(block))\n+        assert_highbandwidth_states(self.nodes[0], hb_to=True, hb_from=True)\n+\n+        # peer requests low-bandwidth mode by sending sendcmpct(0)\n+        hb_test_node.send_and_ping(msg_sendcmpct(announce=False, version=2))\n+        assert_highbandwidth_states(self.nodes[0], hb_to=True, hb_from=False)\n+\n     def run_test(self):\n         # Setup the p2p connections\n         self.segwit_node = self.nodes[0].add_p2p_connection(TestP2PConn(cmpct_version=2))\n@@ -823,6 +851,9 @@ def run_test(self):\n         self.log.info(\"Testing invalid index in cmpctblock message...\")\n         self.test_invalid_cmpctblock_message()\n \n+        self.log.info(\"Testing high-bandwidth mode states via getpeerinfo...\")\n+        self.test_highbandwidth_mode_states_via_getpeerinfo()\n+\n \n if __name__ == '__main__':\n     CompactBlocksTest().main()"
      }
    ]
  }
]