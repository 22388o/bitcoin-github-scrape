laanwj,2017-09-25T11:15:00Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-331850383,331850383,
TheBlueMatt,2017-09-26T21:22:07Z,Concept ACK @sdaftuar may be interested.,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-332340068,332340068,
jonasschnelli,2017-09-28T02:47:29Z,"Yes. Please.\n\nutACK 2902cec68031d61b5707f24edaebb4c26ee1712b",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-332712188,332712188,
laanwj,2017-10-05T10:35:58Z,"I'm adding this as ""high priority for review"" because it's a dependency for #11403.",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-334426995,334426995,
jl2012,2017-10-05T12:57:20Z,"utACK 2902cec, but please fix comment in `sendheaders.py` to ""Set nServices to NODE_WITNESS for test_node"" or something that matches the code",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-334456519,334456519,
sipa,2017-10-05T17:57:15Z,@jl2012 Done.,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-334543414,334543414,
NicolasDorier,2017-10-06T04:07:47Z,Can we do the same for CSV?,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-334652878,334652878,
jl2012,2017-10-06T08:02:26Z,zmq_test.py failed. I think you need to fix it like you did in #11403,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-334686835,334686835,
jl2012,2017-10-06T08:04:05Z,@NicolasDorier : why CSV? This one is needed because we need to make segwit addresses as default,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-334687165,334687165,
JeremyRubin,2017-10-06T17:21:11Z,"I think it might be good to make it such that bit must also be set to -1 (or similarly like 65 or something) if the starttime = -1.\n\nThis ensures that there aren't further changes needed if the bit is reused by another soft fork.",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-334817610,334817610,
achow101,2017-10-08T21:16:06Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-335039150,335039150,
jnewbery,2017-10-09T19:55:04Z,I have a fix for the failing zmq_test.py in my branch: https://github.com/jnewbery/bitcoin/tree/pr11389,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-335268701,335268701,
NicolasDorier,2017-10-10T04:44:17Z,@jl2012 well there is no good reason to have a regtest without CSV activated.,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-335359477,335359477,
sdaftuar,2017-10-10T19:41:33Z,"@jnewbery's observation about p2sh should be addressed: if we are setting segwit to always active in regtest, we should also set p2sh to always be active as well. \n\nHowever if we think it's likely we'd merge something like what @jl2012 has proposed in #11398, then I think this implementation would immediately go unused, as we'd be replacing the need for the versionbits state machine to have a ",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-335585198,335585198,
theuni,2017-10-10T20:03:11Z,utACK modulo @jnewbery's comments.,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-335590961,335590961,
sipa,2017-10-12T07:29:20Z,"I've pushed a rebase with some extra changes:\n* When a versionbits deployment has a negative start time, it is active from height (the absolute value of) that start time (rather than just -1 meaning always).\n* BIP16 deployment is changed into a versionbits deployment with accurate negative start times. This is certainly an improvement over the existing hardcoded chain-independent timestamp, th",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-336044804,336044804,
jnewbery,2017-10-12T18:46:03Z,"I much prefer the approach in #11398 . Once a deployment is sufficiently buried, I think we should remove all logic around how that deployment was activated. At that point it doesn't matter how the deployment was activated. We just want to know that if we're on a certain chain at a certain height we should start enforcing a rule.\n\nI think inventing a fiction that old softforks were activated u",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-336230108,336230108,
sipa,2017-10-12T20:20:07Z,"@jnewbery Good points, but perhaps I'm not making my intent clear.\n\nI'll start with describing my ideal end goal:\n* There is an option to configure the height at which (any) consensus rule activated, both for old deployments, and (originally) BIP9 deployments.\n* When no special activate-at-height is given, the normal activation rules (BIP9 or otherwise) apply.\n* After a deployment is bur",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-336254254,336254254,
jnewbery,2017-10-12T21:53:56Z,"> I'll start with describing my ideal end goal:\n\nGood! We have the same ideal end goal.\n\n> This PR implements effectively what was described above, but with the caveats (1) only for BIP9 deployments and BIP16 and (2) through a pretty hacky way of classifying BIP16 as a VB deployment\n\nYes - that's what I see as a complication rather than a simplification. I prefer #11398 and also pinnin",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-336284793,336284793,
sipa,2017-10-12T21:57:16Z,"> Yes - that's what I see as a complication rather than a simplification. I prefer #11398 and also pinning SegWit to block 481824.\n\nSure, that's a bigger step towards the intended goal, but I don't see that happening for 0.15.1. #11398 seems pretty invasive.",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-336285796,336285796,
sipa,2017-10-13T23:18:07Z,Updated to use @jnewbery's height-pinned-P2SH instead of the P2SH-was-really-a-BIP9-deployment-I-promise approach.,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-336588804,336588804,
theuni,2017-10-16T20:40:28Z,"@jnewbery Good points. Add to that list: This could invalidate a block on _current_ chains if timestamps went backwards at all after April 1, 2012. I checked a dozen or so blocks on mainnet/testnet for that, but I'd be more comfortable if others checked as well.",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-337034150,337034150,
jnewbery,2017-10-16T22:08:34Z,"@theuni - yes, that's another good reason not to use blocktime to deploy a softfork! I'm fairly certain that block times didn't go backwards over the P2SH activation, but it was a possibility that P2SH would have been activated and then deactivated.",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-337058190,337058190,
sipa,2017-10-23T14:57:36Z,"Rebased, and included some commits from @ajtowns. Instead of supporting negative numbers for any height, the only thing supported now is exactly -1 to mean always active.\n",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-338686914,338686914,
sipa,2017-10-24T13:04:07Z,@ajtowns Done.,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-338982656,338982656,
jnewbery,2017-10-24T14:21:15Z,"Tested ACK ccbc90ee485111634cc8941961b491f5a9b0ce85.\n\nAlso independently verified that 173805 and 514 are the correct heights for BIP16 activation on mainnet and testnet3, and that no blocks after those have a blocktime before 1333238400.",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-339006916,339006916,
theuni,2017-10-24T20:34:56Z,utACK ccbc90ee485111634cc8941961b491f5a9b0ce85,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-339122616,339122616,
jtimon,2017-11-02T19:59:45Z,"utACK abae8fb9cf719d3a187d103737a3a3139c6f7e71 7f1693bd733862f997980548a0818b9100fb796a d6247b496510a6307cba22db3e29445b4511f861\n\nfast review ack for the other 2 commits",https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-341540399,341540399,
meshcollider,2017-11-08T03:14:18Z,Post-merge utACK https://github.com/bitcoin/bitcoin/pull/11389/commits/d618458184742b15a7ab0349127ede7a2946a182,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-342697710,342697710,
MarcoFalke,2017-11-09T19:45:34Z,Removing from backport,https://github.com/bitcoin/bitcoin/pull/11389#issuecomment-343269878,343269878,
jl2012,2017-09-25T15:11:22Z,Please fix the comment,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r140805585,140805585,test/functional/sendheaders.py
jnewbery,2017-10-05T17:24:20Z,"nit: add comment saying ""never activate segwit for these tests""",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r143002742,143002742,src/test/test_bitcoin.cpp
jnewbery,2017-10-05T17:38:49Z,"request: add a comment to say that this script tests nulldummy activation, which is implemented to activate at the same height as SegWit, so we set SegWit to be inactive initially.",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r143006573,143006573,test/functional/nulldummy.py
jnewbery,2017-10-05T17:41:44Z,"I don't think this change is needed. In fact, `-whitelist` isn't needed either so we could remove this line entirely.",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r143007305,143007305,test/functional/p2p-fullblocktest.py
sipa,2017-10-12T07:17:28Z,Done.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144210416,144210416,test/functional/nulldummy.py
sipa,2017-10-12T07:17:37Z,Done.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144210445,144210445,test/functional/p2p-fullblocktest.py
ryanofsky,2017-10-16T13:35:27Z,Could expand comment to suggest why a bip9 deployment would have a hardcoded activation height.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144847649,144847649,src/consensus/params.h
ryanofsky,2017-10-16T13:58:43Z,"~~~I'm not sure, but could it make sense to comment or assert that nStartTime != -1. Saying that if start time is negative, then it should be \<= -2, because deployments are never active in genesis block. Right now it seems weird that the code basically ignores -1 value and treats it as if it were -2.~~~\n\nEDIT: Never mind. I was thinking genesis block had height 1 not height 0 (misremembered i",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144854107,144854107,src/consensus/params.h
ryanofsky,2017-10-16T14:00:20Z,Possible to test this logic in versionbits_tests.cpp?,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144854567,144854567,src/versionbits.cpp
jnewbery,2017-10-16T15:30:35Z,not addressed in 6998584728e45f77f7f67e65e17fb459558739f2. I think a comment would make it clearer why you're updating the vb parameter here.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144881558,144881558,src/test/test_bitcoin.cpp
jnewbery,2017-10-16T16:42:08Z,"Perhaps add a comment here to say something like:\n\nThis test was written assuming segwit is activated using BIP9 at height 432 (3 x `nMinerConfirmationWindow`s of 144).\nTODO: rewrite this test to have segwit always active.",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144901414,144901414,test/functional/p2p-compactblocks.py
jnewbery,2017-10-16T16:43:00Z,"suggestion: add comment saying that this test tests segwit pre- and post- activation, so segwit is activated using BIP9.",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144901605,144901605,test/functional/p2p-segwit.py
jnewbery,2017-10-16T16:43:05Z,"suggestion: add comment saying that this test tests segwit pre- and post- activation, so segwit is activated using BIP9.",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144901619,144901619,test/functional/segwit.py
jnewbery,2017-10-16T16:46:24Z,Update comment to say that the txid of the rawtx is the hashtx (it's not strictly true to say that the rawtx hashes to the hashtx since the rawtx now also includes the witness),https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144902502,144902502,test/functional/zmq_test.py
theuni,2017-10-16T19:11:10Z,"Unrelated nit, 999999999999ULL is a terribly confusing value for these nTimeouts!",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144940211,144940211,src/chainparams.cpp
theuni,2017-10-16T19:25:09Z,paranoid nit: check for ```nTimeStart != std::numeric_limits<int64_t>::min()```,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144943504,144943504,src/versionbits.cpp
theuni,2017-10-16T19:36:25Z,"Agree, this really needs a test :(\n\nMight be better to do it in the python framework though, to make sure that negative values are parsed correctly all the way down from the cmdline.",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144946148,144946148,src/versionbits.cpp
theuni,2017-10-16T22:58:44Z,"For anyone curious, the problem with these tests is that they create a block via ```CreateAndProcessBlock()```, which uses ```BlockAssembler::CreateNewBlock()```, then it adds transactions to the new block. The ```IncrementExtraNonce``` corrects for the new merkle root, but not the new witness root. ```GenerateCoinbaseCommitment``` wouldn't work as it only adds a commitment if there's not one ther",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r144991010,144991010,src/test/test_bitcoin.cpp
ajtowns,2017-10-17T09:06:33Z,I've added some tests to versionbits_tests in https://github.com/sipa/bitcoin/pull/106 fwiw.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r145069476,145069476,src/versionbits.cpp
morcos,2017-10-17T19:26:04Z,"I would expand this comment a bit.  I think its a bit ugly and counterintuitive that positive numbers are times and negative numbers are heights.  I think I'm ok with the hack, but it should be more clearly identified",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r145230759,145230759,src/consensus/params.h
sipa,2017-10-23T14:54:05Z,Done.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146292740,146292740,src/consensus/params.h
sipa,2017-10-23T14:54:25Z,Added a comment.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146292837,146292837,src/test/test_bitcoin.cpp
sipa,2017-10-23T14:55:15Z,"@ajtowns Thanks, I've included some of those commits, but reworked them a bit (I've simplied the code to only support always-active, so the tests are easier now).",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146293110,146293110,src/versionbits.cpp
sipa,2017-10-23T14:55:28Z,Used constants from @ajtowns's commit.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146293180,146293180,src/chainparams.cpp
sipa,2017-10-23T14:55:46Z,"This logic has been simplified, so I don't think this is necessary anymore.",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146293287,146293287,src/versionbits.cpp
sipa,2017-10-23T14:55:58Z,Added comment.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146293351,146293351,test/functional/p2p-compactblocks.py
sipa,2017-10-23T14:56:07Z,Added comment.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146293405,146293405,test/functional/p2p-segwit.py
sipa,2017-10-23T14:56:14Z,Added comment.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146293444,146293444,test/functional/segwit.py
sipa,2017-10-23T14:56:35Z,"This code has recently been refactored, and no change is necessary now.",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146293558,146293558,test/functional/zmq_test.py
sipa,2017-10-23T14:56:44Z,Better now?,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146293612,146293612,src/consensus/params.h
jnewbery,2017-10-23T16:48:51Z,nit: please remove extra line.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146327272,146327272,src/consensus/params.h
jnewbery,2017-10-23T16:53:41Z,"I think these could do with comments, since it's a bit of an abuse of the BIP9 parameters:\n- `NO_TIMEOUT` means that we're using BIP9 deployment, but that there's no timeout, ie we never go from `DEFINED` to `FAILED`\n- `ALWAYS_ACTIVE` means that BIP9 is bypassed and we go straight to `NO_TIMEOUT`.\n\n(ok, perhaps that's obvious, but I don't think a comment would hurt)",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146328580,146328580,src/consensus/params.h
jnewbery,2017-10-23T16:57:06Z,"oops. I see that there is a comment above, next to the `nStartTime` variable. Perhaps move it down so it's next to the constexpr?",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146329452,146329452,src/consensus/params.h
sipa,2017-10-24T13:03:32Z,Done.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146551686,146551686,src/consensus/params.h
sipa,2017-10-24T13:03:51Z,Done.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146551762,146551762,src/consensus/params.h
ryanofsky,2017-10-24T17:11:04Z,"In commit ""Unit tests for always-active versionbits.""\n\nCould return ALWAYS_ACTIVE instead of -1 literally here.",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146629247,146629247,src/test/versionbits_tests.cpp
theuni,2017-10-24T20:31:37Z,Micro nit: Still confusing value (int64 = unsigned long long). Not worth fixing unless other changes are needed too.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r146683391,146683391,src/consensus/params.h
sdaftuar,2017-10-31T14:02:35Z,"""cannot not"" -> ""cannot""",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r148004535,148004535,src/consensus/params.h
sdaftuar,2017-10-31T14:34:09Z,"This test is called `TestDefined`, but we're checking here for THRESHOLD_ACTIVE for the always-active version bit -- not really sure this makes sense?\n\nI guess maybe it makes a certain amount of sense that we want to check that the always-on bit is ACTIVE and not DEFINED, but I think it could use a comment here (and in `TestStarted`/`TestLockedIn`).  Also, I wonder why there's no similar test ",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r148014042,148014042,src/test/versionbits_tests.cpp
sdaftuar,2017-10-31T14:37:34Z,"nit: ""FixedHeight"" should be ""AlwaysActive"" or similar, everywhere in this file.",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r148015125,148015125,src/test/versionbits_tests.cpp
sdaftuar,2017-10-31T14:41:37Z,nit: I believe these 3 lines are unnecessary.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r148016562,148016562,src/test/versionbits_tests.cpp
MarcoFalke,2017-10-31T16:54:21Z,"nit: BytesIO is taken from the python stl, so `from io import BytesIO` should work as well",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r148059224,148059224,test/functional/zmq_test.py
sipa,2017-11-07T03:30:38Z,Done.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r149265451,149265451,src/test/versionbits_tests.cpp
sipa,2017-11-07T03:30:59Z,"Done, switched to numeric_limits.",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r149265475,149265475,src/consensus/params.h
sipa,2017-11-07T03:31:05Z,Done.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r149265486,149265486,src/consensus/params.h
sipa,2017-11-07T03:31:17Z,"Done, renamed in many places.",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r149265497,149265497,src/test/versionbits_tests.cpp
sipa,2017-11-07T03:31:24Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r149265501,149265501,src/test/versionbits_tests.cpp
sipa,2017-11-07T03:31:36Z,Added to TestFailed.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r149265521,149265521,src/test/versionbits_tests.cpp
sipa,2017-11-07T03:31:44Z,Done.,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r149265539,149265539,test/functional/zmq_test.py
MarcoFalke,2017-11-07T20:49:07Z,This was not fixed,https://github.com/bitcoin/bitcoin/pull/11389#discussion_r149499132,149499132,test/functional/sendheaders.py
MarcoFalke,2017-11-07T20:49:46Z,"µnit: could use named args `/* nStartTime */`..., maybe?",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r149499275,149499275,src/test/test_bitcoin.cpp
MarcoFalke,2017-11-07T21:38:05Z,"µnit: Since you change the default here, no need to overwrite in `p2p-segwit.py`",https://github.com/bitcoin/bitcoin/pull/11389#discussion_r149511438,149511438,test/functional/test_framework/mininode.py
