[
  {
    "sha": "5be01906e59d484ec997b594e39bab528845bb78",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YmUwMTkwNmU1OWQ0ODRlYzk5N2I1OTRlMzliYWI1Mjg4NDViYjc4",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-24T21:49:15Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-24T22:01:43Z"
      },
      "message": "Delete some unused (and broken) functions in CConnman",
      "tree": {
        "sha": "6173b2d27f4df59c88ed01d22396b2f1d74c286f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6173b2d27f4df59c88ed01d22396b2f1d74c286f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5be01906e59d484ec997b594e39bab528845bb78",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5be01906e59d484ec997b594e39bab528845bb78",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5be01906e59d484ec997b594e39bab528845bb78",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5be01906e59d484ec997b594e39bab528845bb78/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b68f898efa095dce03533be8ac015c1faef23053",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b68f898efa095dce03533be8ac015c1faef23053",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b68f898efa095dce03533be8ac015c1faef23053"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 0,
      "deletions": 32
    },
    "files": [
      {
        "sha": "4e296a31141e3329f281621daa89f7442ff10227",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5be01906e59d484ec997b594e39bab528845bb78/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5be01906e59d484ec997b594e39bab528845bb78/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=5be01906e59d484ec997b594e39bab528845bb78",
        "patch": "@@ -2371,24 +2371,6 @@ void CConnman::GetNodeStats(std::vector<CNodeStats>& vstats)\n     }\n }\n \n-bool CConnman::DisconnectAddress(const CNetAddr& netAddr)\n-{\n-    if (CNode* pnode = FindNode(netAddr)) {\n-        pnode->fDisconnect = true;\n-        return true;\n-    }\n-    return false;\n-}\n-\n-bool CConnman::DisconnectSubnet(const CSubNet& subNet)\n-{\n-    if (CNode* pnode = FindNode(subNet)) {\n-        pnode->fDisconnect = true;\n-        return true;\n-    }\n-    return false;\n-}\n-\n bool CConnman::DisconnectNode(const std::string& strNode)\n {\n     if (CNode* pnode = FindNode(strNode)) {\n@@ -2409,16 +2391,6 @@ bool CConnman::DisconnectNode(NodeId id)\n     return false;\n }\n \n-void CConnman::RelayTransaction(const CTransaction& tx)\n-{\n-    CInv inv(MSG_TX, tx.GetHash());\n-    LOCK(cs_vNodes);\n-    BOOST_FOREACH(CNode* pnode, vNodes)\n-    {\n-        pnode->PushInventory(inv);\n-    }\n-}\n-\n void CConnman::RecordBytesRecv(uint64_t bytes)\n {\n     LOCK(cs_totalBytesRecv);"
      },
      {
        "sha": "0b8efcc882ad50be9422084adc9963df9d8eade1",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5be01906e59d484ec997b594e39bab528845bb78/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5be01906e59d484ec997b594e39bab528845bb78/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=5be01906e59d484ec997b594e39bab528845bb78",
        "patch": "@@ -243,8 +243,6 @@ class CConnman\n         post();\n     };\n \n-    void RelayTransaction(const CTransaction& tx);\n-\n     // Addrman functions\n     size_t GetAddressCount() const;\n     void SetServices(const CService &addr, ServiceFlags nServices);\n@@ -286,10 +284,8 @@ class CConnman\n \n     size_t GetNodeCount(NumConnections num);\n     void GetNodeStats(std::vector<CNodeStats>& vstats);\n-    bool DisconnectAddress(const CNetAddr& addr);\n     bool DisconnectNode(const std::string& node);\n     bool DisconnectNode(NodeId id);\n-    bool DisconnectSubnet(const CSubNet& subnet);\n \n     unsigned int GetSendBufferSize() const;\n "
      }
    ]
  },
  {
    "sha": "3c37dc40d39e1a1e56b6b0d3e660626a78656d4f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzM3ZGM0MGQzOWUxYTFlNTZiNmIwZDNlNjYwNjI2YTc4NjU2ZDRm",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-24T21:50:27Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-24T22:01:45Z"
      },
      "message": "Ensure cs_vNodes is held when using the return value from FindNode",
      "tree": {
        "sha": "82ed28ec4782f4fd063a4462781dde83479ef744",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82ed28ec4782f4fd063a4462781dde83479ef744"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c37dc40d39e1a1e56b6b0d3e660626a78656d4f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c37dc40d39e1a1e56b6b0d3e660626a78656d4f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c37dc40d39e1a1e56b6b0d3e660626a78656d4f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c37dc40d39e1a1e56b6b0d3e660626a78656d4f/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5be01906e59d484ec997b594e39bab528845bb78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5be01906e59d484ec997b594e39bab528845bb78",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5be01906e59d484ec997b594e39bab528845bb78"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 4,
      "deletions": 5
    },
    "files": [
      {
        "sha": "7489b3f32be0dfeeea9f2b29f22598588ca3d743",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c37dc40d39e1a1e56b6b0d3e660626a78656d4f/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c37dc40d39e1a1e56b6b0d3e660626a78656d4f/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=3c37dc40d39e1a1e56b6b0d3e660626a78656d4f",
        "patch": "@@ -369,15 +369,13 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n             // In that case, drop the connection that was just created, and return the existing CNode instead.\n             // Also store the name we used to connect in that CNode, so that future FindNode() calls to that\n             // name catch this early.\n+            LOCK(cs_vNodes);\n             CNode* pnode = FindNode((CService)addrConnect);\n             if (pnode)\n             {\n                 pnode->AddRef();\n-                {\n-                    LOCK(cs_vNodes);\n-                    if (pnode->addrName.empty()) {\n-                        pnode->addrName = std::string(pszDest);\n-                    }\n+                if (pnode->addrName.empty()) {\n+                    pnode->addrName = std::string(pszDest);\n                 }\n                 CloseSocket(hSocket);\n                 return pnode;\n@@ -2373,6 +2371,7 @@ void CConnman::GetNodeStats(std::vector<CNodeStats>& vstats)\n \n bool CConnman::DisconnectNode(const std::string& strNode)\n {\n+    LOCK(cs_vNodes);\n     if (CNode* pnode = FindNode(strNode)) {\n         pnode->fDisconnect = true;\n         return true;"
      }
    ]
  },
  {
    "sha": "236618061a445d2cb11e722cfac5fdae5be26abb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzY2MTgwNjFhNDQ1ZDJjYjExZTcyMmNmYWM1ZmRhZTViZTI2YWJi",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-24T21:51:22Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-01-25T23:59:16Z"
      },
      "message": "Do not add to vNodes until fOneShot/fFeeler/fAddNode have been set",
      "tree": {
        "sha": "274900c35be308f40059881f196fcdc35cb02132",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/274900c35be308f40059881f196fcdc35cb02132"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/236618061a445d2cb11e722cfac5fdae5be26abb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/236618061a445d2cb11e722cfac5fdae5be26abb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/236618061a445d2cb11e722cfac5fdae5be26abb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/236618061a445d2cb11e722cfac5fdae5be26abb/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c37dc40d39e1a1e56b6b0d3e660626a78656d4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c37dc40d39e1a1e56b6b0d3e660626a78656d4f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c37dc40d39e1a1e56b6b0d3e660626a78656d4f"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 10,
      "deletions": 9
    },
    "files": [
      {
        "sha": "108d95a1762d2a0c9ae558a9265a646f53e87e87",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/236618061a445d2cb11e722cfac5fdae5be26abb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/236618061a445d2cb11e722cfac5fdae5be26abb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=236618061a445d2cb11e722cfac5fdae5be26abb",
        "patch": "@@ -342,8 +342,8 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         CNode* pnode = FindNode((CService)addrConnect);\n         if (pnode)\n         {\n-            pnode->AddRef();\n-            return pnode;\n+            LogPrintf(\"Failed to open new connection, already connected\\n\");\n+            return NULL;\n         }\n     }\n \n@@ -373,12 +373,12 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n             CNode* pnode = FindNode((CService)addrConnect);\n             if (pnode)\n             {\n-                pnode->AddRef();\n                 if (pnode->addrName.empty()) {\n                     pnode->addrName = std::string(pszDest);\n                 }\n                 CloseSocket(hSocket);\n-                return pnode;\n+                LogPrintf(\"Failed to open new connection, already connected\\n\");\n+                return NULL;\n             }\n         }\n \n@@ -391,11 +391,6 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         pnode->nServicesExpected = ServiceFlags(addrConnect.nServices & nRelevantServices);\n         pnode->nTimeConnected = GetTime();\n         pnode->AddRef();\n-        GetNodeSignals().InitializeNode(pnode, *this);\n-        {\n-            LOCK(cs_vNodes);\n-            vNodes.push_back(pnode);\n-        }\n \n         return pnode;\n     } else if (!proxyConnectionFailed) {\n@@ -1838,6 +1833,12 @@ bool CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\n     if (fAddnode)\n         pnode->fAddnode = true;\n \n+    {\n+        LOCK(cs_vNodes);\n+        vNodes.push_back(pnode);\n+    }\n+    GetNodeSignals().InitializeNode(pnode, *this);\n+\n     return true;\n }\n "
      }
    ]
  }
]