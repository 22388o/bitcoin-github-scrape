laanwj,2017-04-05T06:49:39Z,Concept ACK ofcourse,https://github.com/bitcoin/bitcoin/pull/10150#issuecomment-291770269,291770269,
jonasschnelli,2017-04-05T06:53:06Z,"Oh. That's great.\nConcept ACK. Will test soon.",https://github.com/bitcoin/bitcoin/pull/10150#issuecomment-291770883,291770883,
jnewbery,2017-04-06T20:10:02Z,Pushed a new commit that I hope addresses @laanwj's point here: https://github.com/bitcoin/bitcoin/pull/10150#discussion_r109834797,https://github.com/bitcoin/bitcoin/pull/10150#issuecomment-292301275,292301275,
jnewbery,2017-04-10T14:55:25Z,"Pushed an updated version that hopefully addresses @laanwj's comments. Changes:\n\n- `UpdateHTTPServerLogging()` is now called by `InitHTTPServer()`. This contains the `#if LIBEVENT_VERSION_NUMBER >= 0x02010100` preprocessor logic to one place.\n- `UpdateHTTPServerLogging()` now removes the `BCLog::LIBEVENT` bit flag if the libevent version does not support debug logging. That means that a call",https://github.com/bitcoin/bitcoin/pull/10150#issuecomment-292974648,292974648,
laanwj,2017-04-12T17:57:17Z,Tested ACK 7fd50c3,https://github.com/bitcoin/bitcoin/pull/10150#issuecomment-293658469,293658469,
rebroad,2021-04-28T23:58:07Z,"The help message could IMHO make it clearer how to enable and disable logging. I've tried ""logging exclude estimatefee"", ""logging estimatefee false"", ""logging estimatefee exclude"", and they all give a ""Error parsing JSON"" error.\n\nIs it possible to toggle logging from the console?",https://github.com/bitcoin/bitcoin/pull/10150#issuecomment-828854155,828854155,
laanwj,2017-04-05T05:52:41Z,"Don't do this! This existed for a reason. What you did will reduce libevent performance extremely by always enabling their internal debugging. Same is probably true for leveldb. I'd prefer just not to allow to switch those at runtime.\n(unless it can be done in a thread-safe way later on, but I don't think so)",https://github.com/bitcoin/bitcoin/pull/10150#discussion_r109834797,109834797,src/httpserver.cpp
jnewbery,2017-04-05T14:05:03Z,"Are you sure? I've tested this and logging is only enabled when libevent is built in debug mode:\n\nhttps://github.com/libevent/libevent/blob/2e52bace9f9998826bd3819af328efc8d18decf9/log-internal.h#L46\n\nand\n\nhttps://github.com/libevent/libevent/blob/2e52bace9f9998826bd3819af328efc8d18decf9/log-internal.h#L86\n\nI would have thought that if we're running libevent in debug, then performa",https://github.com/bitcoin/bitcoin/pull/10150#discussion_r109924304,109924304,src/httpserver.cpp
laanwj,2017-04-06T09:48:58Z,"Yes, it is possible to compile libevent wholesale without debug messages. However, most distributions enable them.\nEven if it is compiled with debug messages, normally they just sink at the libevent side before even being formatted: https://github.com/libevent/libevent/blob/master/log-internal.h#L80\nRemember that libevent debugging is extremely noisy. It always is - the mask is currently unuse",https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110120525,110120525,src/httpserver.cpp
jnewbery,2017-04-06T20:09:19Z,"Turns out libevent logging can be changed at runtime: https://github.com/libevent/libevent/blob/2e52bace9f9998826bd3819af328efc8d18decf9/whatsnew-2.1.txt#L269\n\nI've pushed a new commit that leaves `InitHTTPServer()` unchanged and uses `event_enable_debug_logging()` to update logging.",https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110255587,110255587,src/httpserver.cpp
laanwj,2017-04-06T20:52:27Z,It looks like this code is almost duplicated with the exclude case (except the |/& and true/false). Might make sense to roll this into a function that converts a list of flag strings into a bitmask and apply that wholesale.,https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110264637,110264637,src/rpc/misc.cpp
jnewbery,2017-04-07T19:40:58Z,sounds sensible. Done,https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110466837,110466837,src/rpc/misc.cpp
laanwj,2017-04-10T12:24:52Z,"If you add this warning I'd suggest it be context-sensitive:\n- libevent logging is being updated \n- the libevent version is older than 2.1.1\n\nThough you could also make it an error in that case! (e.g. make UpdateHTTPServerLogging return false and then raise a JSON exception here)",https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110640698,110640698,src/rpc/misc.cpp
laanwj,2017-04-10T12:25:20Z,"Yup, thanks, much better",https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110640802,110640802,src/rpc/misc.cpp
jnewbery,2017-04-10T13:06:38Z,"I initially tried doing something like that, but it's a bit tricky:\n\n- we only want to raise an error if *only* libevent logging is changed (ie if the user wants to include or exclude ""all"", then we shouldn't throw an error simply because ""all"" includes libevent).\n- I've already applied the include/excude bitmasks by this point, and we need the before/after state to know whether to throw.\n",https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110649021,110649021,src/rpc/misc.cpp
laanwj,2017-04-10T13:15:23Z,"I'm perfectly fine with removing this warning from this pull and doing that later. I just don't think it should be added unconditionally.\n\n> I've already applied the include/excude bitmasks by this point, and we need the before/after state to know whether to throw.\n\nSure. `if((before ^ after) & BCLog::LIBEVENT)` would work :-) Though it's probably best to do the check inside UpdateHTTPServ",https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110650882,110650882,src/rpc/misc.cpp
laanwj,2017-04-10T15:05:56Z,"Looks good to me. One nit: I don't think this global flag should be changed here as a side-effect. Maybe move the ""disable the flag in logCategories if this function returns false"" logic outside the function.",https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110680933,110680933,src/httpserver.cpp
jnewbery,2017-04-10T21:07:28Z,"ok, changed so that the caller updates the logCategories bitfield (happens in two places - ` InitHTTPServer()` and the `logging()` rpc).",https://github.com/bitcoin/bitcoin/pull/10150#discussion_r110763686,110763686,src/httpserver.cpp
