[
  {
    "sha": "4d9950d3bc72d92a0ee9a33ab3b77e097eb77354",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDk5NTBkM2JjNzJkOTJhMGVlOWEzM2FiM2I3N2UwOTdlYjc3MzU0",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-10T14:27:36Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-10T21:05:59Z"
      },
      "message": "Set BCLog::LIBEVENT correctly for old libevent versions.",
      "tree": {
        "sha": "8f90e8eb86ddbb1980beb7a361a0d08bedf4f9cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f90e8eb86ddbb1980beb7a361a0d08bedf4f9cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d9950d3bc72d92a0ee9a33ab3b77e097eb77354",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d9950d3bc72d92a0ee9a33ab3b77e097eb77354",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d9950d3bc72d92a0ee9a33ab3b77e097eb77354",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d9950d3bc72d92a0ee9a33ab3b77e097eb77354/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e19586a8a95502ce0f9fb8319ca6456c2ce161b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e19586a8a95502ce0f9fb8319ca6456c2ce161b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e19586a8a95502ce0f9fb8319ca6456c2ce161b3"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 24,
      "deletions": 8
    },
    "files": [
      {
        "sha": "e7df23295d1afd63f7e39f7534d269e73da0a41a",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 8,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d9950d3bc72d92a0ee9a33ab3b77e097eb77354/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d9950d3bc72d92a0ee9a33ab3b77e097eb77354/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=4d9950d3bc72d92a0ee9a33ab3b77e097eb77354",
        "patch": "@@ -384,15 +384,13 @@ bool InitHTTPServer()\n \n     // Redirect libevent's logging to our own log\n     event_set_log_callback(&libevent_log_cb);\n-#if LIBEVENT_VERSION_NUMBER >= 0x02010100\n-    // If -debug=libevent, set full libevent debugging.\n-    // Otherwise, disable all libevent debugging.\n-    if (LogAcceptCategory(BCLog::LIBEVENT)) {\n-        event_enable_debug_logging(EVENT_DBG_ALL);\n-    } else {\n-        event_enable_debug_logging(EVENT_DBG_NONE);\n+    // Update libevent's log handling. Returns false if our version of\n+    // libevent doesn't support debug logging, in which case we should\n+    // clear the BCLog::LIBEVENT flag.\n+    if (!UpdateHTTPServerLogging(logCategories & BCLog::LIBEVENT)) {\n+        logCategories &= ~BCLog::LIBEVENT;\n     }\n-#endif\n+\n #ifdef WIN32\n     evthread_use_windows_threads();\n #else\n@@ -435,6 +433,20 @@ bool InitHTTPServer()\n     return true;\n }\n \n+bool UpdateHTTPServerLogging(bool enable) {\n+#if LIBEVENT_VERSION_NUMBER >= 0x02010100\n+    if (enable) {\n+        event_enable_debug_logging(EVENT_DBG_ALL);\n+    } else {\n+        event_enable_debug_logging(EVENT_DBG_NONE);\n+    }\n+    return true;\n+#else\n+    // Can't update libevent logging if version < 02010100\n+    return false;\n+#endif\n+}\n+\n std::thread threadHTTP;\n std::future<bool> threadResult;\n "
      },
      {
        "sha": "6be9950682034d6a4b7fb37be7c3163c1864dedb",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d9950d3bc72d92a0ee9a33ab3b77e097eb77354/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d9950d3bc72d92a0ee9a33ab3b77e097eb77354/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=4d9950d3bc72d92a0ee9a33ab3b77e097eb77354",
        "patch": "@@ -32,6 +32,10 @@ void InterruptHTTPServer();\n /** Stop HTTP server */\n void StopHTTPServer();\n \n+/** Change logging level for libevent. Removes BCLog::LIBEVENT from logCategories if\n+ * libevent doesn't support debug logging.*/\n+bool UpdateHTTPServerLogging(bool enable);\n+\n /** Handler for requests to a certain HTTP path */\n typedef std::function<bool(HTTPRequest* req, const std::string &)> HTTPRequestHandler;\n /** Register handler for prefix."
      }
    ]
  },
  {
    "sha": "5255aca3f42e44eb02751299e84e2cf122ed9b49",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MjU1YWNhM2Y0MmU0NGViMDI3NTEyOTllODRlMmNmMTIyZWQ5YjQ5",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-03T17:39:11Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-10T21:05:59Z"
      },
      "message": "[rpc] Add logging RPC\n\nAdds an RPC to get and set currently active logging categories.",
      "tree": {
        "sha": "b61c5e177295c186263cde1a866647c5ef25e660",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b61c5e177295c186263cde1a866647c5ef25e660"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5255aca3f42e44eb02751299e84e2cf122ed9b49",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5255aca3f42e44eb02751299e84e2cf122ed9b49",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5255aca3f42e44eb02751299e84e2cf122ed9b49",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5255aca3f42e44eb02751299e84e2cf122ed9b49/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4d9950d3bc72d92a0ee9a33ab3b77e097eb77354",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d9950d3bc72d92a0ee9a33ab3b77e097eb77354",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4d9950d3bc72d92a0ee9a33ab3b77e097eb77354"
      }
    ],
    "stats": {
      "total": 86,
      "additions": 83,
      "deletions": 3
    },
    "files": [
      {
        "sha": "1f3c4e52adc0cc675c260fec80f45abfffa86aaf",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5255aca3f42e44eb02751299e84e2cf122ed9b49/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5255aca3f42e44eb02751299e84e2cf122ed9b49/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=5255aca3f42e44eb02751299e84e2cf122ed9b49",
        "patch": "@@ -113,6 +113,8 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"getmempoolancestors\", 1, \"verbose\" },\n     { \"getmempooldescendants\", 1, \"verbose\" },\n     { \"bumpfee\", 1, \"options\" },\n+    { \"logging\", 0, \"include\" },\n+    { \"logging\", 1, \"exclude\" },\n     // Echo with conversion (For testing only)\n     { \"echojson\", 0, \"arg0\" },\n     { \"echojson\", 1, \"arg1\" },"
      },
      {
        "sha": "d20184771e25dfecc225a6835035e24b4c5aa73d",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 55,
        "deletions": 1,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5255aca3f42e44eb02751299e84e2cf122ed9b49/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5255aca3f42e44eb02751299e84e2cf122ed9b49/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=5255aca3f42e44eb02751299e84e2cf122ed9b49",
        "patch": "@@ -555,6 +555,59 @@ UniValue getmemoryinfo(const JSONRPCRequest& request)\n     }\n }\n \n+uint32_t getCategoryMask(UniValue cats) {\n+    cats = cats.get_array();\n+    uint32_t mask = 0;\n+    for (unsigned int i = 0; i < cats.size(); ++i) {\n+        uint32_t flag = 0;\n+        std::string cat = cats[i].get_str();\n+        if (!GetLogCategory(&flag, &cat)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n+        }\n+        mask |= flag;\n+    }\n+    return mask;\n+}\n+\n+UniValue logging(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"logging [include,...] <exclude>\\n\"\n+            \"Gets and sets the logging configuration.\\n\"\n+            \"When called without an argument, returns the list of categories that are currently being debug logged.\\n\"\n+            \"When called with arguments, adds or removes categories from debug logging.\\n\"\n+            \"The valid logging categories are: \" + ListLogCategories() + \"\\n\"\n+            \"libevent logging is configured on startup and cannot be modified by this RPC during runtime.\"\n+            \"Arguments:\\n\"\n+            \"1. \\\"include\\\" (array of strings) add debug logging for these categories.\\n\"\n+            \"2. \\\"exclude\\\" (array of strings) remove debug logging for these categories.\\n\"\n+            \"\\nResult: <categories>  (string): a list of the logging categories that are active.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"logging\", \"\\\"[\\\\\\\"all\\\\\\\"]\\\" \\\"[\\\\\\\"http\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], \\\"[libevent]\\\"\")\n+        );\n+    }\n+\n+    uint32_t originalLogCategories = logCategories;\n+    if (request.params.size() > 0 && request.params[0].isArray()) {\n+        logCategories |= getCategoryMask(request.params[0]);\n+    }\n+\n+    if (request.params.size() > 1 && request.params[1].isArray()) {\n+        logCategories &= ~getCategoryMask(request.params[1]);\n+    }\n+\n+\n+    UniValue result(UniValue::VOBJ);\n+    std::vector<CLogCategoryActive> vLogCatActive = ListActiveLogCategories();\n+    for (const auto& logCatActive : vLogCatActive) {\n+        result.pushKV(logCatActive.category, logCatActive.active);\n+    }\n+\n+    return result;\n+}\n+\n UniValue echo(const JSONRPCRequest& request)\n {\n     if (request.fHelp)\n@@ -581,7 +634,8 @@ static const CRPCCommand commands[] =\n     /* Not shown in help */\n     { \"hidden\",             \"setmocktime\",            &setmocktime,            true,  {\"timestamp\"}},\n     { \"hidden\",             \"echo\",                   &echo,                   true,  {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n-    { \"hidden\",             \"echojson\",               &echo,                  true,  {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { \"hidden\",             \"echojson\",               &echo,                   true,  {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { \"hidden\",             \"logging\",                &logging,                true,  {\"include\", \"exclude\"}},\n };\n \n void RegisterMiscRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "e859c8a1a40c5b3ee46721fae5a7d30330c398a6",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5255aca3f42e44eb02751299e84e2cf122ed9b49/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5255aca3f42e44eb02751299e84e2cf122ed9b49/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=5255aca3f42e44eb02751299e84e2cf122ed9b49",
        "patch": "@@ -118,7 +118,7 @@ bool fLogIPs = DEFAULT_LOGIPS;\n std::atomic<bool> fReopenDebugLog(false);\n CTranslationInterface translationInterface;\n \n-/** Log categories bitfield. Leveldb/libevent need special handling if their flags are changed at runtime. */\n+/** Log categories bitfield. libevent needs special handling if their flags are changed at runtime. */\n std::atomic<uint32_t> logCategories(0);\n \n /** Init OpenSSL library multithreading support */\n@@ -295,6 +295,21 @@ std::string ListLogCategories()\n     return ret;\n }\n \n+std::vector<CLogCategoryActive> ListActiveLogCategories()\n+{\n+    std::vector<CLogCategoryActive> ret;\n+    for (unsigned int i = 0; i < ARRAYLEN(LogCategories); i++) {\n+        // Omit the special cases.\n+        if (LogCategories[i].flag != BCLog::NONE && LogCategories[i].flag != BCLog::ALL) {\n+            CLogCategoryActive catActive;\n+            catActive.category = LogCategories[i].category;\n+            catActive.active = LogAcceptCategory(LogCategories[i].flag);\n+            ret.push_back(catActive);\n+        }\n+    }\n+    return ret;\n+}\n+\n /**\n  * fStartedNewLine is a state variable held by the calling context that will\n  * suppress printing of the timestamp when multiple calls are made that don't"
      },
      {
        "sha": "ed28070a3f3d64ef08a556844acc04f12bb390d6",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5255aca3f42e44eb02751299e84e2cf122ed9b49/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5255aca3f42e44eb02751299e84e2cf122ed9b49/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=5255aca3f42e44eb02751299e84e2cf122ed9b49",
        "patch": "@@ -69,6 +69,12 @@ inline std::string _(const char* psz)\n void SetupEnvironment();\n bool SetupNetworking();\n \n+struct CLogCategoryActive\n+{\n+    std::string category;\n+    bool active;\n+};\n+\n namespace BCLog {\n     enum LogFlags : uint32_t {\n         NONE        = 0,\n@@ -102,9 +108,12 @@ static inline bool LogAcceptCategory(uint32_t category)\n     return (logCategories.load(std::memory_order_relaxed) & category) != 0;\n }\n \n-/** Returns a string with the supported log categories */\n+/** Returns a string with the log categories. */\n std::string ListLogCategories();\n \n+/** Returns a vector of the active log categories. */\n+std::vector<CLogCategoryActive> ListActiveLogCategories();\n+\n /** Return true if str parses as a log category and set the flags in f */\n bool GetLogCategory(uint32_t *f, const std::string *str);\n "
      }
    ]
  },
  {
    "sha": "7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZmQ1MGMzYjcwMzk3YzBkYzM5MDkzYTdhNGRkYmY5YjM2YTYxNWNm",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-10T14:34:23Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-10T21:05:59Z"
      },
      "message": "allow libevent logging to be updated during runtime",
      "tree": {
        "sha": "3e1e6f4962e68412de4bcb64b0c0755c6ed13acf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e1e6f4962e68412de4bcb64b0c0755c6ed13acf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5255aca3f42e44eb02751299e84e2cf122ed9b49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5255aca3f42e44eb02751299e84e2cf122ed9b49",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5255aca3f42e44eb02751299e84e2cf122ed9b49"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 17,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d08c8bde5b94e4162418d12105d7bdd651c328dd",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
        "patch": "@@ -97,7 +97,7 @@ endif\n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)\n test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS)\n+  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)"
      },
      {
        "sha": "7b8aa572d713bc78a70778c89ed2c169cb575897",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
        "patch": "@@ -7,6 +7,7 @@\n #include \"clientversion.h\"\n #include \"init.h\"\n #include \"validation.h\"\n+#include \"httpserver.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n #include \"rpc/blockchain.h\"\n@@ -598,6 +599,20 @@ UniValue logging(const JSONRPCRequest& request)\n         logCategories &= ~getCategoryMask(request.params[1]);\n     }\n \n+    // Update libevent logging if BCLog::LIBEVENT has changed.\n+    // If the library version doesn't allow it, UpdateHTTPServerLogging() returns false,\n+    // in which case we should clear the BCLog::LIBEVENT flag.\n+    // Throw an error if the user has explicitly asked to change only the libevent\n+    // flag and it failed.\n+    uint32_t changedLogCategories = originalLogCategories ^ logCategories;\n+    if (changedLogCategories & BCLog::LIBEVENT) {\n+        if (!UpdateHTTPServerLogging(logCategories & BCLog::LIBEVENT)) {\n+            logCategories &= ~BCLog::LIBEVENT;\n+            if (changedLogCategories == BCLog::LIBEVENT) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"libevent logging cannot be updated when using libevent before v2.1.1.\");\n+            }\n+        }\n+    }\n \n     UniValue result(UniValue::VOBJ);\n     std::vector<CLogCategoryActive> vLogCatActive = ListActiveLogCategories();"
      },
      {
        "sha": "0dc203cba5fc7a8839d00f8bca8afd183d17b36a",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=7fd50c3b70397c0dc39093a7a4ddbf9b36a615cf",
        "patch": "@@ -118,7 +118,7 @@ bool fLogIPs = DEFAULT_LOGIPS;\n std::atomic<bool> fReopenDebugLog(false);\n CTranslationInterface translationInterface;\n \n-/** Log categories bitfield. libevent needs special handling if their flags are changed at runtime. */\n+/** Log categories bitfield. */\n std::atomic<uint32_t> logCategories(0);\n \n /** Init OpenSSL library multithreading support */"
      }
    ]
  }
]