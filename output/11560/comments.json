[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339448546",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-339448546",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 339448546,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQ0ODU0Ng==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-25T19:44:46Z",
    "updated_at": "2017-10-25T19:44:46Z",
    "author_association": "MEMBER",
    "body": "I'm still working on a unit test for this, but wanted to get some eyes on it for consideration in 0.15.0.2.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339448546/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339520793",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-339520793",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 339520793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTUyMDc5Mw==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T01:17:17Z",
    "updated_at": "2017-10-26T01:17:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Remind me how the scheduler works... when blocks are slow is this going to result in all hosts on the network triggering their extra peer at basically the same time?  Or do we not need to insert a bit of randomness in order to spread them out over the checking interval?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339520793/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339714002",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-339714002",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 339714002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTcxNDAwMg==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T15:58:54Z",
    "updated_at": "2017-10-26T15:58:54Z",
    "author_association": "MEMBER",
    "body": "Regarding the scheduler, I mentioned this on IRC to @gmaxwell:\r\n> gmaxwell: my understanding of the scheduler is that it'll start scheduling callbacks at some point after startup, so i wouldn't expect the network to be completely synced\r\n> gmaxwell: also there's random drift, since the scheduler schedules the next callback N milliseconds after the prior one finishes \r\n> but worth discussing whether the interval is short enough that there still might be too much concentration of everyone trying to find a new peer\r\n\r\nI updated this PR with a unit test.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339714002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339786560",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-339786560",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 339786560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTc4NjU2MA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-26T20:11:05Z",
    "updated_at": "2017-10-26T20:11:05Z",
    "author_association": "MEMBER",
    "body": "Needed rebase after #11490.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/339786560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340058659",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340058659",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 340058659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDA1ODY1OQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T19:03:55Z",
    "updated_at": "2017-10-27T19:03:55Z",
    "author_association": "MEMBER",
    "body": "Pushed up a few small fixups.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340058659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340080341",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340080341",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 340080341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDA4MDM0MQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T20:43:14Z",
    "updated_at": "2017-10-27T21:15:18Z",
    "author_association": "MEMBER",
    "body": "@TheBlueMatt raised concerns about holding the 9th connection for too long.  One concern would be if we are reducing the number of available inbound slots on the network by too much. Another potentially more serious concern is that if we're holding the 9th connection long enough for a new block to be found and relayed, then over time we'll be selecting for peers with the fastest connectivity.\r\n\r\nIn the extreme, you could imagine that this algorithm would reduce to nodes grinding away, trying to connect to the peer that was closest to the miners (or the FIBRE network or similar), which is probably not what we want.\r\n\r\nIn this case, we only intend for the 9th connection to tell us whether we're really behind (eg because our existing peers are all broken) or if the network is just slow.  We can determine that very quickly after connection, so I think I'm going to change this so that we disconnect extra peers more quickly (ie on a faster timer than every 10 minutes, and requiring a shorter connection time), and reset the TryExtraOutboundPeer flag in CConnman after disconnecting an extra peer, essentially waiting until we decide at the next stale-tip-check that we're still stale, before trying another 9th peer.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340080341/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340095522",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340095522",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 340095522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDA5NTUyMg==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T21:36:20Z",
    "updated_at": "2017-10-27T21:36:20Z",
    "author_association": "MEMBER",
    "body": "Addressed @TheBlueMatt's nits.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340095522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340210331",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340210331",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 340210331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIxMDMzMQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T18:22:14Z",
    "updated_at": "2017-10-28T18:22:14Z",
    "author_association": "MEMBER",
    "body": "Needs rebase.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340210331/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340214132",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340214132",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 340214132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIxNDEzMg==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T19:26:14Z",
    "updated_at": "2017-10-28T19:26:14Z",
    "author_association": "MEMBER",
    "body": "Squashed and rebased.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340214132/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340215496",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340215496",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 340215496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIxNTQ5Ng==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T19:50:03Z",
    "updated_at": "2017-10-28T19:50:03Z",
    "author_association": "MEMBER",
    "body": "Without seeing the code, I think that would probably be simpler and more\nobvious.\n\nI wonder if we could actually combine the behavior with feelers. Launch a\nfeeler every 20 min or so as usual, and rather than disconnecting\nimmediately, replace a worse connection if necessary, and upgrade from\nfeeler to full outbound.\n\nOn Oct 28, 2017 11:11 AM, \"Suhas Daftuar\" <notifications@github.com> wrote:\n\n> *@sdaftuar* commented on this pull request.\n> ------------------------------\n>\n> In src/net.cpp\n> <https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147556553>:\n>\n> > +    return m_try_another_outbound_peer;\n> +}\n> +\n> +void CConnman::SetTryNewOutboundPeer(bool flag)\n> +{\n> +    LOCK(m_cs_outbound_peer);\n> +    m_try_another_outbound_peer = flag;\n> +}\n> +\n> +// Return the number of peers we have over our outbound connection limit\n> +// Exclude peers that are marked for disconnect, or are going to be\n> +// disconnected soon (eg one-shots and feelers)\n> +// Also exclude peers that haven't finished initial connection handshake yet\n> +// (so that we don't decide we're over our desired connection limit, and then\n> +// evict some peer that has finished the handshake)\n> +int CConnman::GetExtraOutboundCount()\n>\n> Any thoughts on @TheBlueMatt <https://github.com/thebluematt>'s\n> suggestion (mentioned on IRC yesterday) to just use the feeler connection\n> for the extra peer, rather than initiate a potential 10th connection?\n>\n> https://botbot.me/freenode/bitcoin-core-dev/2017-10-27/?\n> msg=92828477&page=2\n>\n> I'm leaning towards doing that, so nMaxExtraOutbound would go away. I\n> guess this function wouldn't change though.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147556553>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAZdEzhjrlXqpR_iPo_-CIcNtvbYKR8cks5sw0QdgaJpZM4QGjZX>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340215496/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340263187",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340263187",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 340263187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDI2MzE4Nw==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-29T13:41:32Z",
    "updated_at": "2017-10-29T13:41:32Z",
    "author_association": "MEMBER",
    "body": "Fixed a bug and changed the extra peer connection to be exclusive with a feeler, rather than in addition to a feeler.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340263187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340513215",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340513215",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 340513215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDUxMzIxNQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T17:04:40Z",
    "updated_at": "2017-10-30T17:05:00Z",
    "author_association": "MEMBER",
    "body": "Updated to address a nit from @jimpo, and reduce the check-for-eviction interval down to 45 seconds (as @TheBlueMatt suggested).\r\n\r\nSquashed https://github.com/sdaftuar/bitcoin/commits/11560.0 -> 8a27fdf9ae691eb32b8b5e9f531e16266f8227a8",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340513215/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340612213",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340612213",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 340612213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDYxMjIxMw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-30T23:11:16Z",
    "updated_at": "2017-10-30T23:11:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "re-utACK 8a27fdf9ae691eb32b8b5e9f531e16266f8227a8",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340612213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340622705",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340622705",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 340622705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDYyMjcwNQ==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-31T00:17:40Z",
    "updated_at": "2017-10-31T00:17:40Z",
    "author_association": "MEMBER",
    "body": "utACK 8a27fdf9ae691eb32b8b5e9f531e16266f8227a8",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340622705/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340850711",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340850711",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 340850711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDg1MDcxMQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-31T18:02:53Z",
    "updated_at": "2017-10-31T18:02:53Z",
    "author_association": "MEMBER",
    "body": "@theuni Pushed a commit that rewrites the `ForEachNode()` into a loop on `mapNodeState`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340850711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340949227",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-340949227",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 340949227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDk0OTIyNw==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T01:01:17Z",
    "updated_at": "2017-11-01T01:02:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK, I've had various versions of this running on a mainnet node for about 5 days now, but with the stall timeout cut down to a fraction of the default value so I could see it in action.  Latest versions appear to work as expected.  Including managing to keep the latest outbound when a block came over it, dropping instead a different outbound that never got a block.\r\n\r\nI'm not too worried about matt's unbalancing point: this only runs fairly rarely, it runs fairly slowly, and there are 4 protected peers that it won't unbalance even in the worst case.\r\n\r\nOne gotcha is that the Turning off message will pretty much never print and is kind of pointless and confusing.  Perhaps it should be moved to the inside of settrynewoutbound.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/340949227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341121070",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-341121070",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 341121070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTEyMTA3MA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T14:25:04Z",
    "updated_at": "2017-11-01T14:25:04Z",
    "author_association": "MEMBER",
    "body": "> I'm not too worried about matt's unbalancing point: this only runs fairly rarely, it runs fairly slowly, and there are 4 protected peers that it won't unbalance even in the worst case.\r\n\r\nActually, the protected-peers logic from the chain sync eviction algorithm wasn't being used here.  After further thought I don't actually have any good reason not to protect those peers from eviction, and I think the same reasons to protect peers apply here, so I've updated this PR accordingly.\r\n\r\nI also pushed up a commit that improves the logging.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341121070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341126607",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-341126607",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 341126607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTEyNjYwNw==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T14:43:36Z",
    "updated_at": "2017-11-01T14:43:36Z",
    "author_association": "MEMBER",
    "body": "utACK as-is, but I'd really like to re-work this in master post-merge. We can separate the net vs net_processing states so that they're not so intertwined. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341126607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341144382",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-341144382",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 341144382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTE0NDM4Mg==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T15:40:08Z",
    "updated_at": "2017-11-01T15:40:08Z",
    "author_association": "MEMBER",
    "body": "Squashed https://github.com/sdaftuar/bitcoin/commits/11560.1 -> dac71cdba95a1b004d2daae322fc026f184ea082",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341144382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341152366",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-341152366",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 341152366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTE1MjM2Ng==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T16:05:40Z",
    "updated_at": "2017-11-01T16:05:40Z",
    "author_association": "MEMBER",
    "body": "@TheBlueMatt just pointed out to me that ForNode has to walk the vector of CNode's to find the one we're looking for, so by rewriting the ForEachNode to a loop on mapNodeState (as suggested by @theuni up here: https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148040947), we're now doing n^2 work instead of n log n work...  That seems unfortunate to me -- default configurations for listening nodes have > 100 connections right?  \r\n\r\nI'd like to revert that change.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341152366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341169493",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-341169493",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 341169493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTE2OTQ5Mw==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T17:01:13Z",
    "updated_at": "2017-11-01T17:01:13Z",
    "author_association": "MEMBER",
    "body": "Pushed a commit (to be squashed) which reverts the loop back to a ForEachNode, rather than walking mapNodeState.  Also added a nullptr check on the lookup into mapNodeState, just to be safe.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341169493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341176248",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-341176248",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 341176248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTE3NjI0OA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T17:23:24Z",
    "updated_at": "2017-11-01T17:23:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "re-utACK 79f686b7344b9612123fddec8397a01ab0356713",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341176248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341187169",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-341187169",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 341187169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTE4NzE2OQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T17:56:15Z",
    "updated_at": "2017-11-01T17:56:15Z",
    "author_association": "MEMBER",
    "body": "Squashed https://github.com/sdaftuar/bitcoin/commits/11560.3 -> 7d9415396b049dd1477febb71930a70870c5a541",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341187169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341195382",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-341195382",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 341195382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTE5NTM4Mg==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T18:23:43Z",
    "updated_at": "2017-11-01T18:23:43Z",
    "author_association": "MEMBER",
    "body": "utACK 7d94153.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341195382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341222555",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-341222555",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 341222555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTIyMjU1NQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T20:00:05Z",
    "updated_at": "2017-11-01T20:00:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "re-ut part of my ACK. I'll move my tests onto this code.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341222555/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341483432",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-341483432",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 341483432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTQ4MzQzMg==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T16:42:34Z",
    "updated_at": "2017-11-02T16:42:34Z",
    "author_association": "MEMBER",
    "body": "Squashed https://github.com/sdaftuar/bitcoin/commits/11560.4 -> 626291508c433488439b662f2e88882048fb59fb\r\n\r\n```\r\n$ git diff 626291508c433488439b662f2e88882048fb59fb 7d9415396b049dd1477febb71930a70870c5a541\r\ndiff --git a/src/net_processing.h b/src/net_processing.h\r\nindex 0a49972eed..c1f1274f80 100644\r\n--- a/src/net_processing.h\r\n+++ b/src/net_processing.h\r\n@@ -37,7 +37,7 @@ static constexpr int64_t MINIMUM_CONNECT_TIME = 30;\r\n \r\n class PeerLogicValidation : public CValidationInterface, public NetEventsInterface {\r\n private:\r\n-    CConnman* const connman;\r\n+    CConnman* connman;\r\n \r\n public:\r\n     explicit PeerLogicValidation(CConnman* connman, CScheduler &scheduler);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341483432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341497985",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-341497985",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 341497985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTQ5Nzk4NQ==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T17:28:02Z",
    "updated_at": "2017-11-02T17:28:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "re-ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341497985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341522963",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-341522963",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 341522963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTUyMjk2Mw==",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T18:52:24Z",
    "updated_at": "2017-11-02T18:52:24Z",
    "author_association": "MEMBER",
    "body": "utACK 626291508c433488439b662f2e88882048fb59fb",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341522963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/368184325",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#issuecomment-368184325",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11560",
    "id": 368184325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE4NDMyNQ==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T01:20:11Z",
    "updated_at": "2018-02-24T01:20:11Z",
    "author_association": "NONE",
    "body": "I had a slow sync issue which may have been related to and/or fixed by this... See https://github.com/bitcoin/bitcoin/issues/12514\r\n\r\nI eventually did get the recompile of the GitHub code but the version # did not change.\r\n\r\nI hope my issue/resolution helps in fixing this issue or confirming it is fixed :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/368184325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146967629",
    "pull_request_review_id": 71990058,
    "id": 146967629,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Njk2NzYyOQ==",
    "diff_hunk": "@@ -2928,10 +2940,61 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::CheckForStaleTip(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+    LOCK(cs_main);\n+\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = time_in_seconds;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "a64bbc03ddaae5bd55c82f60223a6c29a08b0a20",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'd prefer to see this be a int_64 max, so I don't need to reason about how monotone our clocks aren't.",
    "created_at": "2017-10-25T19:50:08Z",
    "updated_at": "2017-11-02T16:40:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r146967629",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146967629"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r146967629"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146967629/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2958,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146969139",
    "pull_request_review_id": 71991866,
    "id": 146969139,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Njk2OTEzOQ==",
    "diff_hunk": "@@ -2928,10 +2940,61 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::CheckForStaleTip(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+    LOCK(cs_main);\n+\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = time_in_seconds;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "a64bbc03ddaae5bd55c82f60223a6c29a08b0a20",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2017-10-25T19:56:28Z",
    "updated_at": "2017-11-02T16:40:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r146969139",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146969139"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r146969139"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/146969139/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2958,
    "side": "RIGHT",
    "in_reply_to_id": 146967629
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147284900",
    "pull_request_review_id": 72360655,
    "id": 147284900,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzI4NDkwMA==",
    "diff_hunk": "@@ -251,6 +253,16 @@ class CConnman\n     void GetBanned(banmap_t &banmap);\n     void SetBanned(const banmap_t &banmap);\n \n+    // This allows temporarily exceeding nMaxOutbound, with the goal of finding\n+    // a peer that is better than all our current peers.\n+    void SetTryNewOutboundPeer(bool flag);\n+    bool GetTryNewOutboundPeer();\n+\n+    // Return the number of outbound peers we have in excess of our target (eg,\n+    // if we previously called SetTryNewOutboundPeer(true), and have since set\n+    // to false, we may have extra peers that we wish to disconnect).",
    "path": "src/net.h",
    "position": null,
    "original_position": 27,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "89412654c65a95b3da286ffce2c0b535f5b54b96",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You may want to note the (IMO) critical part of the cpp comment:\r\n\"Also exclude peers that haven't finished initial connection handshake yet\" ie \"this may return a value less than the number of outbound connections - the number of normal outbound connection slots in cases where some outbound connections are not yet fully connected\".",
    "created_at": "2017-10-26T22:30:12Z",
    "updated_at": "2017-11-02T16:40:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147284900",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147284900"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147284900"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147284900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 263,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147288662",
    "pull_request_review_id": 72360655,
    "id": 147288662,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzI4ODY2Mg==",
    "diff_hunk": "@@ -1068,7 +1068,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n     CAddress addr;\n     int nInbound = 0;\n-    int nMaxInbound = nMaxConnections - (nMaxOutbound + nMaxFeeler);\n+    int nMaxInbound = nMaxConnections - (nMaxOutbound + nMaxFeeler + nMaxExtraOutbound);",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "89412654c65a95b3da286ffce2c0b535f5b54b96",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm confused - it looks like we wont ever have both a feeler and an extra outbound open at one time, why change this?",
    "created_at": "2017-10-26T22:55:36Z",
    "updated_at": "2017-11-02T16:40:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147288662",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147288662"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147288662"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147288662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1071,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147481774",
    "pull_request_review_id": 72589243,
    "id": 147481774,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQ4MTc3NA==",
    "diff_hunk": "@@ -1781,9 +1817,14 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         //  * Only make a feeler connection once every few minutes.\n         //\n         bool fFeeler = false;\n-        if (nOutbound >= nMaxOutbound) {\n+\n+        bool extra_outbound = GetTryNewOutboundPeer();\n+\n+        int desired_outbound = nMaxOutbound + (extra_outbound ? nMaxExtraOutbound : 0);\n+\n+        if (nOutbound >= desired_outbound) {",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 76,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "89412654c65a95b3da286ffce2c0b535f5b54b96",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Care to add a comment here (or in the comment block above) noting that we will not make a new connection if we have our \"extra slot\" used by *either* a feeler or an \"extra outbound\", both are not allowed.",
    "created_at": "2017-10-27T18:17:57Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147481774",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147481774"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147481774"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147481774/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1825,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147483839",
    "pull_request_review_id": 72591502,
    "id": 147483839,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQ4MzgzOQ==",
    "diff_hunk": "@@ -413,6 +426,10 @@ class CConnman\n     std::thread threadOpenAddedConnections;\n     std::thread threadOpenConnections;\n     std::thread threadMessageHandler;\n+\n+    /** flag for stealing a feeler connection to find a new outbound peer */",
    "path": "src/net.h",
    "position": null,
    "original_position": 46,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "89412654c65a95b3da286ffce2c0b535f5b54b96",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "whoops, this comment is wrong, will fix.",
    "created_at": "2017-10-27T18:25:41Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147483839",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147483839"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147483839"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147483839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 430,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147485327",
    "pull_request_review_id": 72593303,
    "id": 147485327,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQ4NTMyNw==",
    "diff_hunk": "@@ -1068,7 +1068,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     SOCKET hSocket = accept(hListenSocket.socket, (struct sockaddr*)&sockaddr, &len);\n     CAddress addr;\n     int nInbound = 0;\n-    int nMaxInbound = nMaxConnections - (nMaxOutbound + nMaxFeeler);\n+    int nMaxInbound = nMaxConnections - (nMaxOutbound + nMaxFeeler + nMaxExtraOutbound);",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "89412654c65a95b3da286ffce2c0b535f5b54b96",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> it looks like we wont ever have both a feeler and an extra outbound at one time\r\n\r\nWe will in general have both a feeler and an extra outbound at the same time.  There was an incorrect comment (from a first iteration of this patch) describing the extra outbound peer as \"stealing\" the feeler connection, but that is not actually true.  I'll delete that comment.",
    "created_at": "2017-10-27T18:32:21Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147485327",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147485327"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147485327"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147485327/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1071,
    "side": "RIGHT",
    "in_reply_to_id": 147288662
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147486960",
    "pull_request_review_id": 72589243,
    "id": 147486960,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQ4Njk2MA==",
    "diff_hunk": "@@ -2382,6 +2399,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         // because it is set in UpdateBlockAvailability. Some nullptr checks\n         // are still present, however, as belt-and-suspenders.\n \n+        if (received_new_header && pindexLast->nChainWork > chainActive.Tip()->nChainWork) {\n+            nodestate->m_last_block_announcement = GetTime();",
    "path": "src/net_processing.cpp",
    "position": 122,
    "original_position": 64,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "b258e7cefd6b534e920e80a45eba12d200b5fdbc",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Shouldn't there be an equivalent addition for compact block announcements?",
    "created_at": "2017-10-27T18:39:11Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147486960",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147486960"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147486960"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147486960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1366,
    "original_line": 2403,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147490732",
    "pull_request_review_id": 72589243,
    "id": 147490732,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQ5MDczMg==",
    "diff_hunk": "@@ -436,6 +436,15 @@ void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman* connman) {\n }\n \n // Requires cs_main\n+bool TipMayBeStale(const Consensus::Params &consensusParams)\n+{\n+    if (g_last_tip_update == 0) {\n+        g_last_tip_update = GetTime();\n+    }\n+    return g_last_tip_update < GetTime() - consensusParams.nPowTargetSpacing * 3 && mapBlocksInFlight.empty();\n+}\n+\n+// Requires cs_main",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "c6fac39488f54671857a9c4367888586dbd5b4f4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Please no more locking documentation - use the self-documenting AssertLockHeld or GUARDED_BY.",
    "created_at": "2017-10-27T18:55:29Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147490732",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147490732"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147490732"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147490732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 447,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147493512",
    "pull_request_review_id": 72589243,
    "id": 147493512,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzQ5MzUxMg==",
    "diff_hunk": "@@ -2941,6 +2953,57 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::CheckForStaleTip(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+    LOCK(cs_main);\n+\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                if (time_in_seconds - pnode->nTimeConnected > STALE_CHECK_INTERVAL/2) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 80,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "c6fac39488f54671857a9c4367888586dbd5b4f4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Shouldnt this almost always be true (because we only call this function once every STALE_CHECK_INTERVAL)? Also, I think we can turn this down way more than 5 minutes, if we think we're behind, and we connect to someone, it shouldn't take them 5 minutes to send us a header, and if it does, we probably weren't behind and our existing peers are fine, so we should just disconnect them.",
    "created_at": "2017-10-27T19:08:16Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147493512",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147493512"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147493512"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147493512/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2986,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519600",
    "pull_request_review_id": 72633737,
    "id": 147519600,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzUxOTYwMA==",
    "diff_hunk": "@@ -2382,6 +2399,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         // because it is set in UpdateBlockAvailability. Some nullptr checks\n         // are still present, however, as belt-and-suspenders.\n \n+        if (received_new_header && pindexLast->nChainWork > chainActive.Tip()->nChainWork) {\n+            nodestate->m_last_block_announcement = GetTime();",
    "path": "src/net_processing.cpp",
    "position": 122,
    "original_position": 64,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "b258e7cefd6b534e920e80a45eba12d200b5fdbc",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "oops, yes.",
    "created_at": "2017-10-27T21:22:32Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147519600",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519600"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147519600"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1366,
    "original_line": 2403,
    "side": "RIGHT",
    "in_reply_to_id": 147486960
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519872",
    "pull_request_review_id": 72634066,
    "id": 147519872,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzUxOTg3Mg==",
    "diff_hunk": "@@ -2941,6 +2953,57 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::CheckForStaleTip(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+    LOCK(cs_main);\n+\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                if (time_in_seconds - pnode->nTimeConnected > STALE_CHECK_INTERVAL/2) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 80,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "c6fac39488f54671857a9c4367888586dbd5b4f4",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe almost always, but definitely not always -- our outbound peers can initiate disconnects, too, and it might take us a while to find one.\r\n\r\nI've pushed up changes to split the peer eviction onto a shorter timer (2.5 minutes), where we only require 30 seconds of connectivity to disconnect.",
    "created_at": "2017-10-27T21:24:21Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147519872",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519872"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147519872"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2986,
    "side": "RIGHT",
    "in_reply_to_id": 147493512
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519932",
    "pull_request_review_id": 72634135,
    "id": 147519932,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzUxOTkzMg==",
    "diff_hunk": "@@ -436,6 +436,15 @@ void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman* connman) {\n }\n \n // Requires cs_main\n+bool TipMayBeStale(const Consensus::Params &consensusParams)\n+{\n+    if (g_last_tip_update == 0) {\n+        g_last_tip_update = GetTime();\n+    }\n+    return g_last_tip_update < GetTime() - consensusParams.nPowTargetSpacing * 3 && mapBlocksInFlight.empty();\n+}\n+\n+// Requires cs_main",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "c6fac39488f54671857a9c4367888586dbd5b4f4",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sounds good",
    "created_at": "2017-10-27T21:24:43Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147519932",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519932"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147519932"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147519932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 447,
    "side": "RIGHT",
    "in_reply_to_id": 147490732
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147521702",
    "pull_request_review_id": 72636260,
    "id": 147521702,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzUyMTcwMg==",
    "diff_hunk": "@@ -1781,9 +1817,14 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         //  * Only make a feeler connection once every few minutes.\n         //\n         bool fFeeler = false;\n-        if (nOutbound >= nMaxOutbound) {\n+\n+        bool extra_outbound = GetTryNewOutboundPeer();\n+\n+        int desired_outbound = nMaxOutbound + (extra_outbound ? nMaxExtraOutbound : 0);\n+\n+        if (nOutbound >= desired_outbound) {",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 76,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "89412654c65a95b3da286ffce2c0b535f5b54b96",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not sure if this comment was made before we chatted offline, but it is possible to have both a feeler and an \"extra\" outbound peer simultaneously (just not in the same loop iteration, but that's nonsensical anyway since we only initiate a single connection in a single loop iteration, regardless).",
    "created_at": "2017-10-27T21:36:00Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147521702",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147521702"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147521702"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147521702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1825,
    "side": "RIGHT",
    "in_reply_to_id": 147481774
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147539231",
    "pull_request_review_id": 72655694,
    "id": 147539231,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzUzOTIzMQ==",
    "diff_hunk": "@@ -1693,6 +1693,38 @@ void CConnman::ProcessOneShot()\n     }\n }\n \n+bool CConnman::GetTryNewOutboundPeer()\n+{\n+    LOCK(m_cs_outbound_peer);\n+    return m_try_another_outbound_peer;\n+}\n+\n+void CConnman::SetTryNewOutboundPeer(bool flag)\n+{\n+    LOCK(m_cs_outbound_peer);\n+    m_try_another_outbound_peer = flag;\n+}\n+\n+// Return the number of peers we have over our outbound connection limit\n+// Exclude peers that are marked for disconnect, or are going to be\n+// disconnected soon (eg one-shots and feelers)\n+// Also exclude peers that haven't finished initial connection handshake yet\n+// (so that we don't decide we're over our desired connection limit, and then\n+// evict some peer that has finished the handshake)\n+int CConnman::GetExtraOutboundCount()",
    "path": "src/net.cpp",
    "position": 21,
    "original_position": 31,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "89412654c65a95b3da286ffce2c0b535f5b54b96",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this might be greatly simplified by extending CSemaphore to have an adjustable threshold.",
    "created_at": "2017-10-28T00:12:33Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147539231",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147539231"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147539231"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147539231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1713,
    "original_line": 1713,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147556553",
    "pull_request_review_id": 72673995,
    "id": 147556553,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzU1NjU1Mw==",
    "diff_hunk": "@@ -1693,6 +1693,38 @@ void CConnman::ProcessOneShot()\n     }\n }\n \n+bool CConnman::GetTryNewOutboundPeer()\n+{\n+    LOCK(m_cs_outbound_peer);\n+    return m_try_another_outbound_peer;\n+}\n+\n+void CConnman::SetTryNewOutboundPeer(bool flag)\n+{\n+    LOCK(m_cs_outbound_peer);\n+    m_try_another_outbound_peer = flag;\n+}\n+\n+// Return the number of peers we have over our outbound connection limit\n+// Exclude peers that are marked for disconnect, or are going to be\n+// disconnected soon (eg one-shots and feelers)\n+// Also exclude peers that haven't finished initial connection handshake yet\n+// (so that we don't decide we're over our desired connection limit, and then\n+// evict some peer that has finished the handshake)\n+int CConnman::GetExtraOutboundCount()",
    "path": "src/net.cpp",
    "position": 21,
    "original_position": 31,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "89412654c65a95b3da286ffce2c0b535f5b54b96",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Any thoughts on @TheBlueMatt's suggestion (mentioned on IRC yesterday) to just use the feeler connection for the extra peer, rather than initiate a potential 10th connection?\r\n\r\nhttps://botbot.me/freenode/bitcoin-core-dev/2017-10-27/?msg=92828477&page=2\r\n\r\nI'm leaning towards doing that, so nMaxExtraOutbound would go away.  I guess this function wouldn't change though.\r\n\r\n",
    "created_at": "2017-10-28T15:11:20Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147556553",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147556553"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147556553"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147556553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1713,
    "original_line": 1713,
    "side": "RIGHT",
    "in_reply_to_id": 147539231
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588350",
    "pull_request_review_id": 72704403,
    "id": 147588350,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzU4ODM1MA==",
    "diff_hunk": "@@ -3004,6 +3021,81 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                constexpr int64_t min_connect_time = EXTRA_PEER_CHECK_INTERVAL / 5;\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > min_connect_time && state.nBlocksInFlight == 0) {\n+                    LogPrint(BCLog::NET, \"disconnecting extra outbound peer=%d (last block announcement received at time %d\\n\", pnode->GetId(), oldest_block_announcement);\n+                    pnode->fDisconnect = true;\n+                    return true;\n+                } else {\n+                    LogPrint(BCLog::NET, \"keeping outbound peer=%d chosen for eviction, (connect time: %d, blocks_in_flight: %d)\\n\", pnode->GetId(), pnode->nTimeConnected, state.nBlocksInFlight);\n+                    return false;\n+                }\n+            });\n+            if (disconnected) {\n+                // If we disconnected an extra peer, that means we successfully\n+                // connected to at least one peer after the last time we\n+                // detected a stale tip. Don't try any more extra peers until\n+                // we next detect a stale tip, to limit the load we put on the\n+                // network from these extra connections.\n+                connman->SetTryNewOutboundPeer(false);\n+            }\n+        }\n+    }\n+}\n+\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+\n+    EvictExtraOutboundPeers(time_in_seconds);\n+\n+    if (time_in_seconds > m_stale_tip_check_time) {\n+        LOCK(cs_main);\n+        // Check whether our tip is stale, and if so, allow using an extra\n+        // outbound peer\n+        if (TipMayBeStale(consensusParams)) {\n+            LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\", time_in_seconds - g_last_tip_update);\n+            connman->SetTryNewOutboundPeer(true);\n+        } else {\n+            connman->SetTryNewOutboundPeer(false);\n+        }\n+        m_stale_tip_check_time += STALE_CHECK_INTERVAL;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 126,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "f07dc993e7ea888833f2147a16a43a8830aa8a92",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If this loop fails to run when it should-- e.g. host it suspended, then later when it does run it will run additional times.  I believe this should be = time_in_seconds + STALE_CHECK_INTERVAL.",
    "created_at": "2017-10-29T17:40:00Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588350",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588350"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588350"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3095,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588441",
    "pull_request_review_id": 72704486,
    "id": 147588441,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzU4ODQ0MQ==",
    "diff_hunk": "@@ -3004,6 +3021,81 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                constexpr int64_t min_connect_time = EXTRA_PEER_CHECK_INTERVAL / 5;\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > min_connect_time && state.nBlocksInFlight == 0) {\n+                    LogPrint(BCLog::NET, \"disconnecting extra outbound peer=%d (last block announcement received at time %d\\n\", pnode->GetId(), oldest_block_announcement);\n+                    pnode->fDisconnect = true;\n+                    return true;\n+                } else {\n+                    LogPrint(BCLog::NET, \"keeping outbound peer=%d chosen for eviction, (connect time: %d, blocks_in_flight: %d)\\n\", pnode->GetId(), pnode->nTimeConnected, state.nBlocksInFlight);\n+                    return false;\n+                }\n+            });\n+            if (disconnected) {\n+                // If we disconnected an extra peer, that means we successfully\n+                // connected to at least one peer after the last time we\n+                // detected a stale tip. Don't try any more extra peers until\n+                // we next detect a stale tip, to limit the load we put on the\n+                // network from these extra connections.\n+                connman->SetTryNewOutboundPeer(false);\n+            }\n+        }\n+    }\n+}\n+\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+\n+    EvictExtraOutboundPeers(time_in_seconds);\n+\n+    if (time_in_seconds > m_stale_tip_check_time) {\n+        LOCK(cs_main);\n+        // Check whether our tip is stale, and if so, allow using an extra\n+        // outbound peer\n+        if (TipMayBeStale(consensusParams)) {\n+            LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\", time_in_seconds - g_last_tip_update);\n+            connman->SetTryNewOutboundPeer(true);\n+        } else {\n+            connman->SetTryNewOutboundPeer(false);\n+        }\n+        m_stale_tip_check_time += STALE_CHECK_INTERVAL;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 126,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "f07dc993e7ea888833f2147a16a43a8830aa8a92",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Doubly so because nothing appears to initialize it to a time to begin with...",
    "created_at": "2017-10-29T17:43:13Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588441",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588441"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588441"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3095,
    "side": "RIGHT",
    "in_reply_to_id": 147588350
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588654",
    "pull_request_review_id": 72704710,
    "id": 147588654,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzU4ODY1NA==",
    "diff_hunk": "@@ -3004,6 +3021,81 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                constexpr int64_t min_connect_time = EXTRA_PEER_CHECK_INTERVAL / 5;\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > min_connect_time && state.nBlocksInFlight == 0) {\n+                    LogPrint(BCLog::NET, \"disconnecting extra outbound peer=%d (last block announcement received at time %d\\n\", pnode->GetId(), oldest_block_announcement);\n+                    pnode->fDisconnect = true;\n+                    return true;\n+                } else {\n+                    LogPrint(BCLog::NET, \"keeping outbound peer=%d chosen for eviction, (connect time: %d, blocks_in_flight: %d)\\n\", pnode->GetId(), pnode->nTimeConnected, state.nBlocksInFlight);\n+                    return false;\n+                }\n+            });\n+            if (disconnected) {\n+                // If we disconnected an extra peer, that means we successfully\n+                // connected to at least one peer after the last time we\n+                // detected a stale tip. Don't try any more extra peers until\n+                // we next detect a stale tip, to limit the load we put on the\n+                // network from these extra connections.\n+                connman->SetTryNewOutboundPeer(false);\n+            }\n+        }\n+    }\n+}\n+\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+\n+    EvictExtraOutboundPeers(time_in_seconds);\n+\n+    if (time_in_seconds > m_stale_tip_check_time) {\n+        LOCK(cs_main);\n+        // Check whether our tip is stale, and if so, allow using an extra\n+        // outbound peer\n+        if (TipMayBeStale(consensusParams)) {\n+            LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\", time_in_seconds - g_last_tip_update);\n+            connman->SetTryNewOutboundPeer(true);\n+        } else {\n+            connman->SetTryNewOutboundPeer(false);\n+        }\n+        m_stale_tip_check_time += STALE_CHECK_INTERVAL;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 126,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "f07dc993e7ea888833f2147a16a43a8830aa8a92",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for catching that; fixed.",
    "created_at": "2017-10-29T17:51:50Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588654",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588654"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588654"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3095,
    "side": "RIGHT",
    "in_reply_to_id": 147588350
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588960",
    "pull_request_review_id": 72704979,
    "id": 147588960,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzU4ODk2MA==",
    "diff_hunk": "@@ -1781,7 +1813,8 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         //  * Only make a feeler connection once every few minutes.\n         //\n         bool fFeeler = false;\n-        if (nOutbound >= nMaxOutbound) {\n+\n+        if (nOutbound >= nMaxOutbound && !GetTryNewOutboundPeer()) {",
    "path": "src/net.cpp",
    "position": 44,
    "original_position": 45,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Doesn't this lead us to make infinite outbound peers if net_processing isnt agressively marking TryNewOutboundPeer false?",
    "created_at": "2017-10-29T18:00:59Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588960",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588960"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147588960"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147588960/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1816,
    "original_line": 1816,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147592693",
    "pull_request_review_id": 72708524,
    "id": 147592693,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzU5MjY5Mw==",
    "diff_hunk": "@@ -1781,7 +1813,8 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         //  * Only make a feeler connection once every few minutes.\n         //\n         bool fFeeler = false;\n-        if (nOutbound >= nMaxOutbound) {\n+\n+        if (nOutbound >= nMaxOutbound && !GetTryNewOutboundPeer()) {",
    "path": "src/net.cpp",
    "position": 44,
    "original_position": 45,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, I think if `GetTryNewOutboundPeer` is set, then we keep trying outbound peers up to the semaphore count, at which point I believe we block.  Is that problematic for some reason?  I'm not super familiar with the design here but my understanding from reading the code was that this was how this logic was originally written (ie before feelers were introduced, with the `continue` in the `if` block to avoid consuming the last semaphore value via a non-feeler).",
    "created_at": "2017-10-29T20:03:51Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147592693",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147592693"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147592693"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147592693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1816,
    "original_line": 1816,
    "side": "RIGHT",
    "in_reply_to_id": 147588960
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147597570",
    "pull_request_review_id": 72713156,
    "id": 147597570,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzU5NzU3MA==",
    "diff_hunk": "@@ -1781,7 +1813,8 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         //  * Only make a feeler connection once every few minutes.\n         //\n         bool fFeeler = false;\n-        if (nOutbound >= nMaxOutbound) {\n+\n+        if (nOutbound >= nMaxOutbound && !GetTryNewOutboundPeer()) {",
    "path": "src/net.cpp",
    "position": 44,
    "original_position": 45,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Grrr, indeed, I suppose this is correct.",
    "created_at": "2017-10-29T22:35:58Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147597570",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147597570"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147597570"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147597570/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1816,
    "original_line": 1816,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147597971",
    "pull_request_review_id": 72713156,
    "id": 147597971,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzU5Nzk3MQ==",
    "diff_hunk": "@@ -2971,6 +3030,84 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                constexpr int64_t min_connect_time = EXTRA_PEER_CHECK_INTERVAL / 5;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 206,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why check if we need to disconnect every 2.5 minutes and only require it being online 30 seconds? Why not just make both 30 seconds (or maybe 45 and 30) so that we dont always end up holding our extra peer for 2.5 minutes?",
    "created_at": "2017-10-29T22:47:28Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147597971",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147597971"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147597971"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147597971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3063,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147599028",
    "pull_request_review_id": 72714698,
    "id": 147599028,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzU5OTAyOA==",
    "diff_hunk": "@@ -2971,6 +3030,84 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                constexpr int64_t min_connect_time = EXTRA_PEER_CHECK_INTERVAL / 5;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 206,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm just not really sure how frequent is too-frequent for scheduled callbacks; there's a tradeoff between wasting time on calls (especially in this framework, where we always have the callback fire to check for eviction, even if we've never called SetExtraOutboundPeer()) and gaining precision with how long we allow the extra peer to be connected, and it's not clear to me how to figure out the optimal point....",
    "created_at": "2017-10-29T23:19:23Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147599028",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147599028"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147599028"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147599028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3063,
    "side": "RIGHT",
    "in_reply_to_id": 147597971
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147600834",
    "pull_request_review_id": 72716662,
    "id": 147600834,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzYwMDgzNA==",
    "diff_hunk": "@@ -2971,6 +3030,84 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                constexpr int64_t min_connect_time = EXTRA_PEER_CHECK_INTERVAL / 5;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 206,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The callback in the connman->GetExtraOutboundCount() == 0 case should be almost free, no?",
    "created_at": "2017-10-30T00:12:38Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147600834",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147600834"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147600834"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147600834/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3063,
    "side": "RIGHT",
    "in_reply_to_id": 147597971
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147750053",
    "pull_request_review_id": 72889807,
    "id": 147750053,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Nzc1MDA1Mw==",
    "diff_hunk": "@@ -55,6 +60,10 @@ class PeerLogicValidation : public CValidationInterface, public NetEventsInterfa\n     bool SendMessages(CNode* pto, std::atomic<bool>& interrupt) override;\n \n     void ConsiderEviction(CNode *pto, int64_t time_in_seconds);\n+    void CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams);\n+    void EvictExtraOutboundPeers(int64_t time_in_seconds);\n+\n+    int64_t m_stale_tip_check_time;",
    "path": "src/net_processing.h",
    "position": null,
    "original_position": 34,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimpo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimpo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should this be private?",
    "created_at": "2017-10-30T16:02:45Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147750053",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147750053"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147750053"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147750053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 66,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147761294",
    "pull_request_review_id": 72902647,
    "id": 147761294,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Nzc2MTI5NA==",
    "diff_hunk": "@@ -55,6 +60,10 @@ class PeerLogicValidation : public CValidationInterface, public NetEventsInterfa\n     bool SendMessages(CNode* pto, std::atomic<bool>& interrupt) override;\n \n     void ConsiderEviction(CNode *pto, int64_t time_in_seconds);\n+    void CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams);\n+    void EvictExtraOutboundPeers(int64_t time_in_seconds);\n+\n+    int64_t m_stale_tip_check_time;",
    "path": "src/net_processing.h",
    "position": null,
    "original_position": 34,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sounds good, done.",
    "created_at": "2017-10-30T16:39:11Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147761294",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147761294"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147761294"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147761294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 66,
    "side": "RIGHT",
    "in_reply_to_id": 147750053
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147761366",
    "pull_request_review_id": 72902735,
    "id": 147761366,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Nzc2MTM2Ng==",
    "diff_hunk": "@@ -2971,6 +3030,84 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                constexpr int64_t min_connect_time = EXTRA_PEER_CHECK_INTERVAL / 5;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 206,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "ff5f5cd2b9ca9c32200ddb85a7d4510c334576b4",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Alright, changed to 45 seconds.",
    "created_at": "2017-10-30T16:39:27Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147761366",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147761366"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147761366"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147761366/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3063,
    "side": "RIGHT",
    "in_reply_to_id": 147597971
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147777589",
    "pull_request_review_id": 72921298,
    "id": 147777589,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Nzc3NzU4OQ==",
    "diff_hunk": "@@ -427,6 +435,15 @@ void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman* connman) {\n     }\n }\n \n+bool TipMayBeStale(const Consensus::Params &consensusParams)\n+{\n+    AssertLockHeld(cs_main);\n+    if (g_last_tip_update == 0) {\n+        g_last_tip_update = GetTime();\n+    }\n+    return g_last_tip_update < GetTime() - consensusParams.nPowTargetSpacing * 3 && mapBlocksInFlight.empty();",
    "path": "src/net_processing.cpp",
    "position": 46,
    "original_position": 46,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "8a27fdf9ae691eb32b8b5e9f531e16266f8227a8",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since it is not uncommon for blocks to take more than 30 minutes to be found, maybe this threshold should be higher? It also seems like every node is going to be making that outbound connection at around the same time, maybe there should be some element of randomness to that to avoid some sort of fingerprinting?",
    "created_at": "2017-10-30T17:34:38Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147777589",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147777589"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147777589"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147777589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 444,
    "original_line": 444,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147817797",
    "pull_request_review_id": 72967614,
    "id": 147817797,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzgxNzc5Nw==",
    "diff_hunk": "@@ -427,6 +435,15 @@ void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman* connman) {\n     }\n }\n \n+bool TipMayBeStale(const Consensus::Params &consensusParams)\n+{\n+    AssertLockHeld(cs_main);\n+    if (g_last_tip_update == 0) {\n+        g_last_tip_update = GetTime();\n+    }\n+    return g_last_tip_update < GetTime() - consensusParams.nPowTargetSpacing * 3 && mapBlocksInFlight.empty();",
    "path": "src/net_processing.cpp",
    "position": 46,
    "original_position": 46,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "8a27fdf9ae691eb32b8b5e9f531e16266f8227a8",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think the scheduler behavior will mean that nodes are going to spread out their extra connections over a 10 minute window.  Since we already do feeler connections on a (poisson-random) 2 minute interval, and this is taking the place of a feeler, I don't think this will introduce too much network load.\r\n\r\nIf there's a fingerprinting concern, I can try to come up with some fuzzing on when the connection is made (maybe another poisson-random fuzz?), but I'm not sure I understand the specific fingerprinting risk with this logic? ",
    "created_at": "2017-10-30T20:01:22Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147817797",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147817797"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147817797"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147817797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 444,
    "original_line": 444,
    "side": "RIGHT",
    "in_reply_to_id": 147777589
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147869028",
    "pull_request_review_id": 73025722,
    "id": 147869028,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Nzg2OTAyOA==",
    "diff_hunk": "@@ -427,6 +435,15 @@ void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman* connman) {\n     }\n }\n \n+bool TipMayBeStale(const Consensus::Params &consensusParams)\n+{\n+    AssertLockHeld(cs_main);\n+    if (g_last_tip_update == 0) {\n+        g_last_tip_update = GetTime();\n+    }\n+    return g_last_tip_update < GetTime() - consensusParams.nPowTargetSpacing * 3 && mapBlocksInFlight.empty();",
    "path": "src/net_processing.cpp",
    "position": 46,
    "original_position": 46,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "8a27fdf9ae691eb32b8b5e9f531e16266f8227a8",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> but I'm not sure I understand the specific fingerprinting risk with this logic?\r\n\r\nI don't think there is any. I had a fingerprinting concern but then realized that that concern was stupid and stopped being concerned about it.",
    "created_at": "2017-10-31T00:17:26Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147869028",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147869028"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r147869028"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/147869028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 444,
    "original_line": 444,
    "side": "RIGHT",
    "in_reply_to_id": 147777589
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148040947",
    "pull_request_review_id": 73222948,
    "id": 148040947,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODA0MDk0Nw==",
    "diff_hunk": "@@ -3004,6 +3021,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {",
    "path": "src/net_processing.cpp",
    "position": 198,
    "original_position": 69,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "21e8b03a353abd0f2f4190194f224ad92d6f5bc8",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can we loop through mapNodeState here instead? I'd really like to avoid gluing these layers back together.\r\n\r\nAlso, I believe that would mean that the ```nBlocksInFlight != 0``` check could be applied here.",
    "created_at": "2017-10-31T15:55:53Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148040947",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148040947"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148040947"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148040947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3048,
    "original_line": 3048,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148045221",
    "pull_request_review_id": 73228010,
    "id": 148045221,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODA0NTIyMQ==",
    "diff_hunk": "@@ -3004,6 +3021,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > MINIMUM_CONNECT_TIME && state.nBlocksInFlight == 0) {",
    "path": "src/net_processing.cpp",
    "position": 218,
    "original_position": 86,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "21e8b03a353abd0f2f4190194f224ad92d6f5bc8",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Doesn't this mean that if the worst peer is only slightly worse than the second-worst, and the worst has a block in flight, both would stay connected? In that case, I would expect the second-worst to be evicted.\r\n\r\nAdding to the comment above, I think that checking for nBlocksInFlight in the worst_peer calculation above avoids this?",
    "created_at": "2017-10-31T16:08:29Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148045221",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148045221"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148045221"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148045221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3068,
    "original_line": 3068,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148046180",
    "pull_request_review_id": 73229199,
    "id": 148046180,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODA0NjE4MA==",
    "diff_hunk": "@@ -3004,6 +3021,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > MINIMUM_CONNECT_TIME && state.nBlocksInFlight == 0) {\n+                    LogPrint(BCLog::NET, \"disconnecting extra outbound peer=%d (last block announcement received at time %d)\\n\", pnode->GetId(), oldest_block_announcement);\n+                    pnode->fDisconnect = true;\n+                    return true;\n+                } else {\n+                    LogPrint(BCLog::NET, \"keeping outbound peer=%d chosen for eviction, (connect time: %d, blocks_in_flight: %d)\\n\", pnode->GetId(), pnode->nTimeConnected, state.nBlocksInFlight);\n+                    return false;\n+                }\n+            });\n+            if (disconnected) {\n+                // If we disconnected an extra peer, that means we successfully\n+                // connected to at least one peer after the last time we\n+                // detected a stale tip. Don't try any more extra peers until\n+                // we next detect a stale tip, to limit the load we put on the\n+                // network from these extra connections.\n+                connman->SetTryNewOutboundPeer(false);\n+            }\n+        }\n+    }\n+}\n+\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+\n+    EvictExtraOutboundPeers(time_in_seconds);",
    "path": "src/net_processing.cpp",
    "position": 245,
    "original_position": 113,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "21e8b03a353abd0f2f4190194f224ad92d6f5bc8",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why is this done on a timer rather than making InitializeNode aware that a new node is a replacement?",
    "created_at": "2017-10-31T16:11:16Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148046180",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148046180"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148046180"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148046180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3095,
    "original_line": 3095,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148060276",
    "pull_request_review_id": 73246064,
    "id": 148060276,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODA2MDI3Ng==",
    "diff_hunk": "@@ -3004,6 +3021,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > MINIMUM_CONNECT_TIME && state.nBlocksInFlight == 0) {\n+                    LogPrint(BCLog::NET, \"disconnecting extra outbound peer=%d (last block announcement received at time %d)\\n\", pnode->GetId(), oldest_block_announcement);\n+                    pnode->fDisconnect = true;\n+                    return true;\n+                } else {\n+                    LogPrint(BCLog::NET, \"keeping outbound peer=%d chosen for eviction, (connect time: %d, blocks_in_flight: %d)\\n\", pnode->GetId(), pnode->nTimeConnected, state.nBlocksInFlight);\n+                    return false;\n+                }\n+            });\n+            if (disconnected) {\n+                // If we disconnected an extra peer, that means we successfully\n+                // connected to at least one peer after the last time we\n+                // detected a stale tip. Don't try any more extra peers until\n+                // we next detect a stale tip, to limit the load we put on the\n+                // network from these extra connections.\n+                connman->SetTryNewOutboundPeer(false);\n+            }\n+        }\n+    }\n+}\n+\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+\n+    EvictExtraOutboundPeers(time_in_seconds);",
    "path": "src/net_processing.cpp",
    "position": 245,
    "original_position": 113,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "21e8b03a353abd0f2f4190194f224ad92d6f5bc8",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it'd be difficult to try to do in InitializeNode, because you don't know who you are going to want to evict until you're ready to do the eviction.  For example, what happens if one (or all) of your first 8 peers disconnects in between the InitializeNode for your 9th peer, and eviction time? ",
    "created_at": "2017-10-31T16:57:31Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148060276",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148060276"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148060276"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148060276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3095,
    "original_line": 3095,
    "side": "RIGHT",
    "in_reply_to_id": 148046180
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148063968",
    "pull_request_review_id": 73250411,
    "id": 148063968,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODA2Mzk2OA==",
    "diff_hunk": "@@ -3004,6 +3021,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > MINIMUM_CONNECT_TIME && state.nBlocksInFlight == 0) {",
    "path": "src/net_processing.cpp",
    "position": 218,
    "original_position": 86,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "21e8b03a353abd0f2f4190194f224ad92d6f5bc8",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think it's necessary to evict in that situation, since we'll just try to evict again in 45 seconds, and I thought it was more conservative to not evict.  For instance, the block in flight might be at equal work to our tip, rather than more work, and we wouldn't want to disconnect the older peer in that situation where we're just downloading an equal-work-chain-tip.\r\n\r\nAlso if you evict the second-worst peer while a block download is in flight, then it's possible that the new peer will stall your block download, and you'll have lost one of your earlier peers unnecessarily.  \r\n\r\nAnyway I mostly just want to avoid anything that can be gamed, and postponing eviction seems like a safer option than choosing a different peer to evict, I think?",
    "created_at": "2017-10-31T17:09:43Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148063968",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148063968"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148063968"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148063968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3068,
    "original_line": 3068,
    "side": "RIGHT",
    "in_reply_to_id": 148045221
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148066805",
    "pull_request_review_id": 73253661,
    "id": 148066805,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODA2NjgwNQ==",
    "diff_hunk": "@@ -3004,6 +3021,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {",
    "path": "src/net_processing.cpp",
    "position": 198,
    "original_position": 69,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "21e8b03a353abd0f2f4190194f224ad92d6f5bc8",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I just wrote this in my other response, but I don't think the blocks in flight check is a good thing to sort on -- I think there may be edge cases where somehow your slowest peer gets protected, and you would evict someone else.\r\n\r\nI'll see what it looks like when I try to loop mapNodeState instead.  I think I'll still have to call `ForNode` inside that loop in order to get to the pnode, so I don't really see the difference in design...?  Can you explain a little more what the design goal is for stuff like this?",
    "created_at": "2017-10-31T17:18:43Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148066805",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148066805"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148066805"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148066805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3048,
    "original_line": 3048,
    "side": "RIGHT",
    "in_reply_to_id": 148040947
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148156933",
    "pull_request_review_id": 73356679,
    "id": 148156933,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODE1NjkzMw==",
    "diff_hunk": "@@ -3004,6 +3021,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState &state = *State(pnode->GetId());\n+            if (state.m_last_block_announcement < oldest_block_announcement || (state.m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state.m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > MINIMUM_CONNECT_TIME && state.nBlocksInFlight == 0) {\n+                    LogPrint(BCLog::NET, \"disconnecting extra outbound peer=%d (last block announcement received at time %d)\\n\", pnode->GetId(), oldest_block_announcement);\n+                    pnode->fDisconnect = true;\n+                    return true;\n+                } else {\n+                    LogPrint(BCLog::NET, \"keeping outbound peer=%d chosen for eviction, (connect time: %d, blocks_in_flight: %d)\\n\", pnode->GetId(), pnode->nTimeConnected, state.nBlocksInFlight);\n+                    return false;\n+                }\n+            });\n+            if (disconnected) {\n+                // If we disconnected an extra peer, that means we successfully\n+                // connected to at least one peer after the last time we\n+                // detected a stale tip. Don't try any more extra peers until\n+                // we next detect a stale tip, to limit the load we put on the\n+                // network from these extra connections.\n+                connman->SetTryNewOutboundPeer(false);\n+            }\n+        }\n+    }\n+}\n+\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;\n+\n+    int64_t time_in_seconds = GetTime();\n+\n+    EvictExtraOutboundPeers(time_in_seconds);",
    "path": "src/net_processing.cpp",
    "position": 245,
    "original_position": 113,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "21e8b03a353abd0f2f4190194f224ad92d6f5bc8",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ok, understood",
    "created_at": "2017-10-31T23:55:38Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148156933",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148156933"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148156933"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148156933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3095,
    "original_line": 3095,
    "side": "RIGHT",
    "in_reply_to_id": 148046180
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148157875",
    "pull_request_review_id": 73357690,
    "id": 148157875,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODE1Nzg3NQ==",
    "diff_hunk": "@@ -27,13 +28,19 @@ static constexpr int64_t HEADERS_DOWNLOAD_TIMEOUT_PER_HEADER = 1000; // 1ms/head\n static constexpr int32_t MAX_OUTBOUND_PEERS_TO_PROTECT_FROM_DISCONNECT = 4;\n /** Timeout for (unprotected) outbound peers to sync to our chainwork, in seconds */\n static constexpr int64_t CHAIN_SYNC_TIMEOUT = 20 * 60; // 20 minutes\n+/** How frequently to check for stale tips, in seconds */\n+static constexpr int64_t STALE_CHECK_INTERVAL = 10 * 60; // 10 minutes\n+/** How frequently to check for extra outbound peers and disconnect, in seconds */\n+static constexpr int64_t EXTRA_PEER_CHECK_INTERVAL = 45;\n+/** Minimum time an outbound-peer-eviction candidate must be connected for, in order to evict, in seconds */\n+static constexpr int64_t MINIMUM_CONNECT_TIME = 30;",
    "path": "src/net_processing.h",
    "position": 17,
    "original_position": 17,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "21e8b03a353abd0f2f4190194f224ad92d6f5bc8",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think we should probably bump this to 60sec, to match the minimum time allowed for the handshake. Or was 30sec a deliberate choice?\r\n\r\nThat would also give us the handy property that all fSuccessfullyConnected nodes can be disconnected without checking the connection duration.",
    "created_at": "2017-11-01T00:03:15Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148157875",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148157875"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148157875"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148157875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 36,
    "original_line": 36,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148163572",
    "pull_request_review_id": 73363216,
    "id": 148163572,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODE2MzU3Mg==",
    "diff_hunk": "@@ -27,13 +28,19 @@ static constexpr int64_t HEADERS_DOWNLOAD_TIMEOUT_PER_HEADER = 1000; // 1ms/head\n static constexpr int32_t MAX_OUTBOUND_PEERS_TO_PROTECT_FROM_DISCONNECT = 4;\n /** Timeout for (unprotected) outbound peers to sync to our chainwork, in seconds */\n static constexpr int64_t CHAIN_SYNC_TIMEOUT = 20 * 60; // 20 minutes\n+/** How frequently to check for stale tips, in seconds */\n+static constexpr int64_t STALE_CHECK_INTERVAL = 10 * 60; // 10 minutes\n+/** How frequently to check for extra outbound peers and disconnect, in seconds */\n+static constexpr int64_t EXTRA_PEER_CHECK_INTERVAL = 45;\n+/** Minimum time an outbound-peer-eviction candidate must be connected for, in order to evict, in seconds */\n+static constexpr int64_t MINIMUM_CONNECT_TIME = 30;",
    "path": "src/net_processing.h",
    "position": 17,
    "original_position": 17,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "21e8b03a353abd0f2f4190194f224ad92d6f5bc8",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": ">  disconnected without checking the connection duration.\r\n\r\nHuh.. then you'd disconnect someone who completed the handshake fast, without giving them more than a few seconds to transfer blocks.",
    "created_at": "2017-11-01T00:57:55Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148163572",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148163572"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148163572"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148163572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 36,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 148157875
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148164266",
    "pull_request_review_id": 73364010,
    "id": 148164266,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODE2NDI2Ng==",
    "diff_hunk": "@@ -27,13 +28,19 @@ static constexpr int64_t HEADERS_DOWNLOAD_TIMEOUT_PER_HEADER = 1000; // 1ms/head\n static constexpr int32_t MAX_OUTBOUND_PEERS_TO_PROTECT_FROM_DISCONNECT = 4;\n /** Timeout for (unprotected) outbound peers to sync to our chainwork, in seconds */\n static constexpr int64_t CHAIN_SYNC_TIMEOUT = 20 * 60; // 20 minutes\n+/** How frequently to check for stale tips, in seconds */\n+static constexpr int64_t STALE_CHECK_INTERVAL = 10 * 60; // 10 minutes\n+/** How frequently to check for extra outbound peers and disconnect, in seconds */\n+static constexpr int64_t EXTRA_PEER_CHECK_INTERVAL = 45;\n+/** Minimum time an outbound-peer-eviction candidate must be connected for, in order to evict, in seconds */\n+static constexpr int64_t MINIMUM_CONNECT_TIME = 30;",
    "path": "src/net_processing.h",
    "position": 17,
    "original_position": 17,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "21e8b03a353abd0f2f4190194f224ad92d6f5bc8",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sorry, I meant that in the context of the check here: https://github.com/bitcoin/bitcoin/pull/11560/commits/21e8b03a353abd0f2f4190194f224ad92d6f5bc8#diff-eff7adeaec73a769788bb78858815c91R3055",
    "created_at": "2017-11-01T01:06:39Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148164266",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148164266"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148164266"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148164266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 36,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 148157875
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148259135",
    "pull_request_review_id": 73472504,
    "id": 148259135,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODI1OTEzNQ==",
    "diff_hunk": "@@ -27,13 +28,19 @@ static constexpr int64_t HEADERS_DOWNLOAD_TIMEOUT_PER_HEADER = 1000; // 1ms/head\n static constexpr int32_t MAX_OUTBOUND_PEERS_TO_PROTECT_FROM_DISCONNECT = 4;\n /** Timeout for (unprotected) outbound peers to sync to our chainwork, in seconds */\n static constexpr int64_t CHAIN_SYNC_TIMEOUT = 20 * 60; // 20 minutes\n+/** How frequently to check for stale tips, in seconds */\n+static constexpr int64_t STALE_CHECK_INTERVAL = 10 * 60; // 10 minutes\n+/** How frequently to check for extra outbound peers and disconnect, in seconds */\n+static constexpr int64_t EXTRA_PEER_CHECK_INTERVAL = 45;\n+/** Minimum time an outbound-peer-eviction candidate must be connected for, in order to evict, in seconds */\n+static constexpr int64_t MINIMUM_CONNECT_TIME = 30;",
    "path": "src/net_processing.h",
    "position": 17,
    "original_position": 17,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "21e8b03a353abd0f2f4190194f224ad92d6f5bc8",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I dont really think it matters here - these are separate, we're seeking a new useful outbound peer, if it doesn't respond in 30 seconds with a headers message, it probably isnt/wont be useful. Honestly I think we should significantly decrease the headers handshake timeout, there isn't really a scenario where you should need 60 seconds for a few packets back and forth, even in super lossy environments.",
    "created_at": "2017-11-01T13:28:33Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148259135",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148259135"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148259135"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148259135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 36,
    "original_line": 36,
    "side": "RIGHT",
    "in_reply_to_id": 148157875
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148296685",
    "pull_request_review_id": 73516523,
    "id": 148296685,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODI5NjY4NQ==",
    "diff_hunk": "@@ -413,6 +426,12 @@ class CConnman\n     std::thread threadOpenAddedConnections;\n     std::thread threadOpenConnections;\n     std::thread threadMessageHandler;\n+\n+    /** flag for deciding to connect to an extra outbound peer,\n+     *  in excess of nMaxOutbound\n+     *  This takes the place of a feeler connection */\n+    CCriticalSection m_cs_outbound_peer;",
    "path": "src/net.h",
    "position": null,
    "original_position": 28,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "45326aaf7aeccc339fa70b93feee80899479f1f6",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If this CS doesn't protect more than a single boolean, it's better to instead just use an `std::atomic<bool>`.",
    "created_at": "2017-11-01T15:41:36Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148296685",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148296685"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148296685"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148296685/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 433,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148298765",
    "pull_request_review_id": 73519010,
    "id": 148298765,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODI5ODc2NQ==",
    "diff_hunk": "@@ -413,6 +426,12 @@ class CConnman\n     std::thread threadOpenAddedConnections;\n     std::thread threadOpenConnections;\n     std::thread threadMessageHandler;\n+\n+    /** flag for deciding to connect to an extra outbound peer,\n+     *  in excess of nMaxOutbound\n+     *  This takes the place of a feeler connection */\n+    CCriticalSection m_cs_outbound_peer;",
    "path": "src/net.h",
    "position": null,
    "original_position": 28,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "45326aaf7aeccc339fa70b93feee80899479f1f6",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2017-11-01T15:48:15Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148298765",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148298765"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148298765"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148298765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 433,
    "side": "RIGHT",
    "in_reply_to_id": 148296685
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148449364",
    "pull_request_review_id": 73692579,
    "id": 148449364,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODQ0OTM2NA==",
    "diff_hunk": "@@ -3004,6 +3022,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState *state = State(pnode->GetId());\n+            if (state == nullptr) return; // shouldn't be possible, but just in case\n+            // Don't evict our protected peers\n+            if (state->m_chain_sync.m_protect) return;\n+            if (state->m_last_block_announcement < oldest_block_announcement || (state->m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state->m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > MINIMUM_CONNECT_TIME && state.nBlocksInFlight == 0) {\n+                    LogPrint(BCLog::NET, \"disconnecting extra outbound peer=%d (last block announcement received at time %d)\\n\", pnode->GetId(), oldest_block_announcement);\n+                    pnode->fDisconnect = true;\n+                    return true;\n+                } else {\n+                    LogPrint(BCLog::NET, \"keeping outbound peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\", pnode->GetId(), pnode->nTimeConnected, state.nBlocksInFlight);\n+                    return false;\n+                }\n+            });\n+            if (disconnected) {\n+                // If we disconnected an extra peer, that means we successfully\n+                // connected to at least one peer after the last time we\n+                // detected a stale tip. Don't try any more extra peers until\n+                // we next detect a stale tip, to limit the load we put on the\n+                // network from these extra connections.\n+                connman->SetTryNewOutboundPeer(false);\n+            }\n+        }\n+    }\n+}\n+\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;",
    "path": "src/net_processing.cpp",
    "position": 241,
    "original_position": 120,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "cfc917ce9dba84792e083f9d74e399d12a208b3b",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: this is a slightly easier to reason about if you make the member definition for connman `CConnman* const connman;` (which compiles without other changes)",
    "created_at": "2017-11-02T06:14:39Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148449364",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148449364"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148449364"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148449364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3091,
    "original_line": 3091,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148449905",
    "pull_request_review_id": 73692579,
    "id": 148449905,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODQ0OTkwNQ==",
    "diff_hunk": "@@ -3004,6 +3022,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState *state = State(pnode->GetId());\n+            if (state == nullptr) return; // shouldn't be possible, but just in case",
    "path": "src/net_processing.cpp",
    "position": 202,
    "original_position": 81,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "cfc917ce9dba84792e083f9d74e399d12a208b3b",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Make assert?",
    "created_at": "2017-11-02T06:19:54Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148449905",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148449905"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148449905"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148449905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3052,
    "original_line": 3052,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148517580",
    "pull_request_review_id": 73770681,
    "id": 148517580,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODUxNzU4MA==",
    "diff_hunk": "@@ -3004,6 +3022,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState *state = State(pnode->GetId());\n+            if (state == nullptr) return; // shouldn't be possible, but just in case",
    "path": "src/net_processing.cpp",
    "position": 202,
    "original_position": 81,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "cfc917ce9dba84792e083f9d74e399d12a208b3b",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I thought our preference was to not assert except in situations where node shutdown is necessary to avoid eg consensus failure or lost funds or something similarly bad?  I'll add the assert if that's your preference, but I was just nervous about introducing a crash if I got some race condition wrong.\r\n\r\nI could add a LogPrinf() here instead perhaps?",
    "created_at": "2017-11-02T12:30:33Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148517580",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148517580"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148517580"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148517580/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3052,
    "original_line": 3052,
    "side": "RIGHT",
    "in_reply_to_id": 148449905
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148517746",
    "pull_request_review_id": 73770899,
    "id": 148517746,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODUxNzc0Ng==",
    "diff_hunk": "@@ -3004,6 +3022,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState *state = State(pnode->GetId());\n+            if (state == nullptr) return; // shouldn't be possible, but just in case\n+            // Don't evict our protected peers\n+            if (state->m_chain_sync.m_protect) return;\n+            if (state->m_last_block_announcement < oldest_block_announcement || (state->m_last_block_announcement == oldest_block_announcement && pnode->GetId() > worst_peer)) {\n+                worst_peer = pnode->GetId();\n+                oldest_block_announcement = state->m_last_block_announcement;\n+            }\n+        });\n+        if (worst_peer != -1) {\n+            bool disconnected = connman->ForNode(worst_peer, [&](CNode *pnode) {\n+                // Only disconnect a peer that has been connected to us for\n+                // some reasonable fraction of our check-frequency, to give\n+                // it time for new information to have arrived.\n+                // Also don't disconnect any peer we're trying to download a\n+                // block from.\n+                CNodeState &state = *State(pnode->GetId());\n+                if (time_in_seconds - pnode->nTimeConnected > MINIMUM_CONNECT_TIME && state.nBlocksInFlight == 0) {\n+                    LogPrint(BCLog::NET, \"disconnecting extra outbound peer=%d (last block announcement received at time %d)\\n\", pnode->GetId(), oldest_block_announcement);\n+                    pnode->fDisconnect = true;\n+                    return true;\n+                } else {\n+                    LogPrint(BCLog::NET, \"keeping outbound peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\", pnode->GetId(), pnode->nTimeConnected, state.nBlocksInFlight);\n+                    return false;\n+                }\n+            });\n+            if (disconnected) {\n+                // If we disconnected an extra peer, that means we successfully\n+                // connected to at least one peer after the last time we\n+                // detected a stale tip. Don't try any more extra peers until\n+                // we next detect a stale tip, to limit the load we put on the\n+                // network from these extra connections.\n+                connman->SetTryNewOutboundPeer(false);\n+            }\n+        }\n+    }\n+}\n+\n+void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params &consensusParams)\n+{\n+    if (connman == nullptr) return;",
    "path": "src/net_processing.cpp",
    "position": 241,
    "original_position": 120,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "cfc917ce9dba84792e083f9d74e399d12a208b3b",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sounds good.",
    "created_at": "2017-11-02T12:31:26Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148517746",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148517746"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148517746"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148517746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3091,
    "original_line": 3091,
    "side": "RIGHT",
    "in_reply_to_id": 148449364
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148581753",
    "pull_request_review_id": 73847277,
    "id": 148581753,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODU4MTc1Mw==",
    "diff_hunk": "@@ -3004,6 +3022,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState *state = State(pnode->GetId());\n+            if (state == nullptr) return; // shouldn't be possible, but just in case",
    "path": "src/net_processing.cpp",
    "position": 202,
    "original_position": 81,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "cfc917ce9dba84792e083f9d74e399d12a208b3b",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree with @sdaftuar, not only should we not be asserting here, but I want to move away from net_processing relying on specific order-of-operations for deletion of CNode/FinalizeNode in net.",
    "created_at": "2017-11-02T16:11:15Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148581753",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148581753"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148581753"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148581753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3052,
    "original_line": 3052,
    "side": "RIGHT",
    "in_reply_to_id": 148449905
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148583533",
    "pull_request_review_id": 73849461,
    "id": 148583533,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODU4MzUzMw==",
    "diff_hunk": "@@ -3004,6 +3022,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState *state = State(pnode->GetId());\n+            if (state == nullptr) return; // shouldn't be possible, but just in case",
    "path": "src/net_processing.cpp",
    "position": 202,
    "original_position": 81,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "cfc917ce9dba84792e083f9d74e399d12a208b3b",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@TheBlueMatt Perhaps asserting is too harsh, but silently ignoring the fact that an underlying assumption is broken seems bad too. \r\n\r\nAlso, it seems very reasonable to assume that net does not invoke any net_processing operations before initializing a node, or after finalizing it? That seems easy to guarantee, and very hard for handlers to deal with if untrue.",
    "created_at": "2017-11-02T16:17:21Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148583533",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148583533"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148583533"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148583533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3052,
    "original_line": 3052,
    "side": "RIGHT",
    "in_reply_to_id": 148449905
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148586720",
    "pull_request_review_id": 73853318,
    "id": 148586720,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODU4NjcyMA==",
    "diff_hunk": "@@ -3004,6 +3022,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState *state = State(pnode->GetId());\n+            if (state == nullptr) return; // shouldn't be possible, but just in case",
    "path": "src/net_processing.cpp",
    "position": 202,
    "original_position": 81,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "cfc917ce9dba84792e083f9d74e399d12a208b3b",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@sipa If we moved mapNodeState outside of cs_main (which we should do) plus take #10697, then this would be a legitimate race that doesn't matter - if FinalizeNode is called while this loop is running, we may hit this condition and evict our 8th peer because our 9th just disconnected, which may happen either way because the peer may disconnect a millisecond after we evict. This is a perfectly fine thing that isn't a real issue, but re-introducing the strong assumption about when things are removed from vNodes vs when FinalizeNode is called is needless and annoying.",
    "created_at": "2017-11-02T16:28:16Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148586720",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148586720"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148586720"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148586720/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3052,
    "original_line": 3052,
    "side": "RIGHT",
    "in_reply_to_id": 148449905
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148589725",
    "pull_request_review_id": 73856992,
    "id": 148589725,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODU4OTcyNQ==",
    "diff_hunk": "@@ -3004,6 +3022,83 @@ void PeerLogicValidation::ConsiderEviction(CNode *pto, int64_t time_in_seconds)\n     }\n }\n \n+void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n+{\n+    // Check whether we have too many outbound peers\n+    int extra_peers = connman->GetExtraOutboundCount();\n+    if (extra_peers > 0) {\n+        // If we have more outbound peers than we target, disconnect one.\n+        // Pick the outbound peer that least recently announced\n+        // us a new block, with ties broken by choosing the more recent\n+        // connection (higher node id)\n+        NodeId worst_peer = -1;\n+        int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n+\n+        LOCK(cs_main);\n+\n+        connman->ForEachNode([&](CNode* pnode) {\n+            // Ignore non-outbound peers, or nodes marked for disconnect already\n+            if (!IsOutboundDisconnectionCandidate(pnode) || pnode->fDisconnect) return;\n+            CNodeState *state = State(pnode->GetId());\n+            if (state == nullptr) return; // shouldn't be possible, but just in case",
    "path": "src/net_processing.cpp",
    "position": 202,
    "original_position": 81,
    "commit_id": "626291508c433488439b662f2e88882048fb59fb",
    "original_commit_id": "cfc917ce9dba84792e083f9d74e399d12a208b3b",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Got it, I withdraw my comment.",
    "created_at": "2017-11-02T16:38:41Z",
    "updated_at": "2017-11-02T16:40:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148589725",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148589725"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11560#discussion_r148589725"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11560"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/148589725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3052,
    "original_line": 3052,
    "side": "RIGHT",
    "in_reply_to_id": 148449905
  }
]