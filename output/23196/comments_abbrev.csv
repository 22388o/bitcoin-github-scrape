laanwj,2021-10-05 17:43:40,"Reported by jamesob on IRC, see https://gist.github.com/jamesob/c46513d41e355a3e6e69f4ff78167c92\n\nI'm still thinking we might want to remove the syscall name table, and replace it with instructions how to look up the number (e.g. as argued here https://github.com/bitcoin/bitcoin/pull/20487#discussion_r712430747). Having this list of syscall constants we don't actually use, besides for error re",https://github.com/bitcoin/bitcoin/pull/23196#issuecomment-934625943,934625943,
jamesob,2021-10-05 17:50:37,Concept ACK,https://github.com/bitcoin/bitcoin/pull/23196#issuecomment-934631463,934631463,
laanwj,2021-10-05 18:11:38,"What we also could do is add an autoconf test, and fail the `--with-seccomp` check below a certain lower bound kernel header version (or easier to detect, when a certain syscall is not in the header).",https://github.com/bitcoin/bitcoin/pull/23196#issuecomment-934647472,934647472,
practicalswift,2021-10-06 09:07:35,"cr ACK ac402e749c91d40ce7066993f72f426b67196bd7\n\nThanks for quickly addressing this!\n\nThis might be helpful to fellow reviewers:\n\n```\n$ grep -E 'copy_file_range$' linux/arch/x86/entry/syscalls/syscall_64.tbl\n326     common  copy_file_range         sys_copy_file_range\n```",https://github.com/bitcoin/bitcoin/pull/23196#issuecomment-935801306,935801306,
practicalswift,2021-10-06 11:43:59,"Some syscall history:\n\nThe newest syscall in the `LINUX_SYSCALLS` map is `arch_prctl` which was introduced in Linux 4.12 (2017).\n\nThese syscalls were introduced from Linux 3.17 (2014) to Linux 4.12 (2017):\n* Linux 3.17 (2014): `getrandom`, `kexec_file_load`, `membarrier`, `memfd_create, seccomp`\n* Linux 3.18 (2014): `bpf`\n* Linux 3.19 (2014): `execveat`\n* Linux 4.0 (2015): -\n* Li",https://github.com/bitcoin/bitcoin/pull/23196#issuecomment-936075485,936075485,
DrahtBot,2021-10-06 11:44:32,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23198](https://github.com/bitcoin/bitcoin/pull/23198) (build: Parse version information in msvc-autogen.py by CallMeMist",https://github.com/bitcoin/bitcoin/pull/23196#issuecomment-936076302,936076302,
DrahtBot,2021-10-07 08:24:12,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 113b863f0773999497f952daa6539a03a66a9de3<br>(master) | commit 0e33c135245b2fe5021aa1308bb4eafa449ce42e<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`cef142e76613e81b...`](https://drahtbot.space/guix/bitcoin/bitcoin/113b863f0773999497f952daa6539a03a66a9de3/SHA256SUMS.part) | [`b465bfc75b4a9995...`](https://,https://github.com/bitcoin/bitcoin/pull/23196#issuecomment-937567535,937567535,
practicalswift,2021-10-07 12:05:11,"Some additional review comments:\n\nI've done some additional digging and Linux 4.4 (2016) is the oldest kernel that is not EOL.\n\nThus it should only be the syscalls introduced _after_ Linux 4.4 that are part of the `LINUX_SYSCALLS` map that might cause compile-time errors due to `__NR_<syscall>` being undefined (on supported non-EOL systems).\n\nThis should be the complete list of such sy",https://github.com/bitcoin/bitcoin/pull/23196#issuecomment-937727694,937727694,
laanwj,2021-10-07 12:29:23,"@practicalswift Whoa, thanks for doing some software archeology there. \n\n> Thus we shouldn't see any more compile-time issues on supported non-EOL systems after the merge of this PR :)\n\nI think the main users of EOL kernels are people stuck with the vendor kernel for some embedded board. But even if ARM would be supported for sandboxing, it's always possible to disable it with configure, i",https://github.com/bitcoin/bitcoin/pull/23196#issuecomment-937745453,937745453,
