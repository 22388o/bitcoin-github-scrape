meshcollider,2017-07-12T23:46:30Z,utACK,https://github.com/bitcoin/bitcoin/pull/10808#issuecomment-314928960,314928960,
achow101,2017-07-12T23:53:01Z,utACK a8a602eeece2cfd847a361127fe7f41b26f13c26,https://github.com/bitcoin/bitcoin/pull/10808#issuecomment-314930060,314930060,
sipa,2017-07-13T00:52:21Z,utACK,https://github.com/bitcoin/bitcoin/pull/10808#issuecomment-314938411,314938411,
paveljanik,2017-07-13T08:39:15Z,"ACK\n\nPlease fix typo in the second commit message (initizlie).",https://github.com/bitcoin/bitcoin/pull/10808#issuecomment-315011813,315011813,
sipa,2017-07-14T17:17:17Z,@theuni's suggestion looks the cleanest to me. Would you mind trying that?,https://github.com/bitcoin/bitcoin/pull/10808#issuecomment-315415353,315415353,
TheBlueMatt,2017-07-14T20:31:26Z,"OK, took @theuni's version (which has no warnings for me).",https://github.com/bitcoin/bitcoin/pull/10808#issuecomment-315460267,315460267,
sipa,2017-07-15T00:53:09Z,utACK c73b8be2440e424f304fda22e43240e8b90f9b00,https://github.com/bitcoin/bitcoin/pull/10808#issuecomment-315497953,315497953,
sipa,2017-07-13T00:52:12Z,"I was vaguely concerned that this assignment violates type punning through a union, but (1) some sources say that is permitted anyway (2) the other type is char (for which exceptions to type punning exist) and (3) we'll write to the union again before ever using data in it.\n",https://github.com/bitcoin/bitcoin/pull/10808#discussion_r127106923,127106923,src/prevector.h
laanwj,2017-07-13T18:12:13Z,I though type-punning through an union was the only acceptable way to do it?,https://github.com/bitcoin/bitcoin/pull/10808#discussion_r127290839,127290839,src/prevector.h
theuni,2017-07-13T18:38:49Z,"From IRC:\n<cfields> sipa: why not use aggregate initialization: prevector() : _size(0), _union{{}}\n<cfields> or give the union a ctor?\n\nI can't reproduce the warning, so I can't be sure that it satisfies whatever compiler is complaining, but the above compiles fine for me, and I'd think that initializing via a ctor would work otherwise. ",https://github.com/bitcoin/bitcoin/pull/10808#discussion_r127297590,127297590,src/prevector.h
gmaxwell,2017-07-13T23:31:14Z,@laanwj There is a faction of language wonks/compiler folks that argues that it is never acceptable (except with char) per the language specs; -- and I believe there is nothing in any of the C++ standards that make it clear that its kosher (though sipa tells me apparently C11 has something explicit). Since having no way to do it is not a very realistic position it doesn't reflect the behavior of c,https://github.com/bitcoin/bitcoin/pull/10808#discussion_r127356415,127356415,src/prevector.h
TheBlueMatt,2017-07-14T15:13:28Z,"I'm super not convinced this is an issue. If we're really concerned, easiest fix is probably require C11 and turn prevector into C++ wrapper around C. More realistically, gcc explicitly supports this, and I believe many other compilers as well.",https://github.com/bitcoin/bitcoin/pull/10808#discussion_r127479893,127479893,src/prevector.h
