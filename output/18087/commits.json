[
  {
    "sha": "0e0fa27acb74b4f0075afcf59a0dff51a21baddb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTBmYTI3YWNiNzRiNGYwMDc1YWZjZjU5YTBkZmY1MWEyMWJhZGRi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-07T03:57:32Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-02-10T20:00:10Z"
      },
      "message": "Get rid of VARINT default argument\n\nThis removes the need for the GNU C++ extension of variadic macros.",
      "tree": {
        "sha": "5e5e97c659eb49c6578f768ed9bd347eb1d98cf5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e5e97c659eb49c6578f768ed9bd347eb1d98cf5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e0fa27acb74b4f0075afcf59a0dff51a21baddb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e0fa27acb74b4f0075afcf59a0dff51a21baddb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e0fa27acb74b4f0075afcf59a0dff51a21baddb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "646f0ada0205ae4b3952107e3b1542f06adda32b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/646f0ada0205ae4b3952107e3b1542f06adda32b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/646f0ada0205ae4b3952107e3b1542f06adda32b"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 22,
      "deletions": 21
    },
    "files": [
      {
        "sha": "64c016a1d6a1803fee7e254690d262c47b8661b2",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=0e0fa27acb74b4f0075afcf59a0dff51a21baddb",
        "patch": "@@ -333,12 +333,12 @@ class CDiskBlockIndex : public CBlockIndex\n     SERIALIZE_METHODS(CDiskBlockIndex, obj)\n     {\n         int _nVersion = s.GetVersion();\n-        if (!(s.GetType() & SER_GETHASH)) READWRITE(VARINT(_nVersion, VarIntMode::NONNEGATIVE_SIGNED));\n+        if (!(s.GetType() & SER_GETHASH)) READWRITE(VARINT_MODE(_nVersion, VarIntMode::NONNEGATIVE_SIGNED));\n \n-        READWRITE(VARINT(obj.nHeight, VarIntMode::NONNEGATIVE_SIGNED));\n+        READWRITE(VARINT_MODE(obj.nHeight, VarIntMode::NONNEGATIVE_SIGNED));\n         READWRITE(VARINT(obj.nStatus));\n         READWRITE(VARINT(obj.nTx));\n-        if (obj.nStatus & (BLOCK_HAVE_DATA | BLOCK_HAVE_UNDO)) READWRITE(VARINT(obj.nFile, VarIntMode::NONNEGATIVE_SIGNED));\n+        if (obj.nStatus & (BLOCK_HAVE_DATA | BLOCK_HAVE_UNDO)) READWRITE(VARINT_MODE(obj.nFile, VarIntMode::NONNEGATIVE_SIGNED));\n         if (obj.nStatus & BLOCK_HAVE_DATA) READWRITE(VARINT(obj.nDataPos));\n         if (obj.nStatus & BLOCK_HAVE_UNDO) READWRITE(VARINT(obj.nUndoPos));\n "
      },
      {
        "sha": "d80682d383602b477ea2789f3e1004a06f1d9cee",
        "filename": "src/flatfile.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/src/flatfile.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/src/flatfile.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/flatfile.h?ref=0e0fa27acb74b4f0075afcf59a0dff51a21baddb",
        "patch": "@@ -20,7 +20,7 @@ struct FlatFilePos\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(VARINT(nFile, VarIntMode::NONNEGATIVE_SIGNED));\n+        READWRITE(VARINT_MODE(nFile, VarIntMode::NONNEGATIVE_SIGNED));\n         READWRITE(VARINT(nPos));\n     }\n "
      },
      {
        "sha": "641b2a5d9c0fbe1fc0434cf31950ec7442e4aafc",
        "filename": "src/node/coinstats.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/src/node/coinstats.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/src/node/coinstats.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.cpp?ref=0e0fa27acb74b4f0075afcf59a0dff51a21baddb",
        "patch": "@@ -23,7 +23,7 @@ static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash,\n     for (const auto& output : outputs) {\n         ss << VARINT(output.first + 1);\n         ss << output.second.out.scriptPubKey;\n-        ss << VARINT(output.second.out.nValue, VarIntMode::NONNEGATIVE_SIGNED);\n+        ss << VARINT_MODE(output.second.out.nValue, VarIntMode::NONNEGATIVE_SIGNED);\n         stats.nTransactionOutputs++;\n         stats.nTotalAmount += output.second.out.nValue;\n         stats.nBogoSize += 32 /* txid */ + 4 /* vout index */ + 4 /* height + coinbase */ + 8 /* amount */ +"
      },
      {
        "sha": "cee7225bcb946351a0edbf7f15268d31b1a00f50",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=0e0fa27acb74b4f0075afcf59a0dff51a21baddb",
        "patch": "@@ -493,12 +493,13 @@ class Wrapper\n template<typename Formatter, typename T>\n static inline Wrapper<Formatter, T&> Using(T&& t) { return Wrapper<Formatter, T&>(t); }\n \n-#define VARINT(obj, ...) Using<VarIntFormatter<__VA_ARGS__>>(obj)\n+#define VARINT_MODE(obj, mode) Using<VarIntFormatter<mode>>(obj)\n+#define VARINT(obj) Using<VarIntFormatter<VarIntMode::DEFAULT>>(obj)\n #define COMPACTSIZE(obj) CCompactSize(REF(obj))\n #define LIMITED_STRING(obj,n) LimitedString< n >(REF(obj))\n \n /** Serialization wrapper class for integers in VarInt format. */\n-template<VarIntMode Mode=VarIntMode::DEFAULT>\n+template<VarIntMode Mode>\n struct VarIntFormatter\n {\n     template<typename Stream, typename I> void Ser(Stream &s, I v)"
      },
      {
        "sha": "ea600499ca723be38a8632bffee33a8904e53efe",
        "filename": "src/test/serialize_tests.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/src/test/serialize_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/src/test/serialize_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/serialize_tests.cpp?ref=0e0fa27acb74b4f0075afcf59a0dff51a21baddb",
        "patch": "@@ -182,8 +182,8 @@ BOOST_AUTO_TEST_CASE(varints)\n     CDataStream ss(SER_DISK, 0);\n     CDataStream::size_type size = 0;\n     for (int i = 0; i < 100000; i++) {\n-        ss << VARINT(i, VarIntMode::NONNEGATIVE_SIGNED);\n-        size += ::GetSerializeSize(VARINT(i, VarIntMode::NONNEGATIVE_SIGNED), 0);\n+        ss << VARINT_MODE(i, VarIntMode::NONNEGATIVE_SIGNED);\n+        size += ::GetSerializeSize(VARINT_MODE(i, VarIntMode::NONNEGATIVE_SIGNED), 0);\n         BOOST_CHECK(size == ss.size());\n     }\n \n@@ -196,7 +196,7 @@ BOOST_AUTO_TEST_CASE(varints)\n     // decode\n     for (int i = 0; i < 100000; i++) {\n         int j = -1;\n-        ss >> VARINT(j, VarIntMode::NONNEGATIVE_SIGNED);\n+        ss >> VARINT_MODE(j, VarIntMode::NONNEGATIVE_SIGNED);\n         BOOST_CHECK_MESSAGE(i == j, \"decoded:\" << j << \" expected:\" << i);\n     }\n \n@@ -210,21 +210,21 @@ BOOST_AUTO_TEST_CASE(varints)\n BOOST_AUTO_TEST_CASE(varints_bitpatterns)\n {\n     CDataStream ss(SER_DISK, 0);\n-    ss << VARINT(0, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"00\"); ss.clear();\n-    ss << VARINT(0x7f, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"7f\"); ss.clear();\n-    ss << VARINT((int8_t)0x7f, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"7f\"); ss.clear();\n-    ss << VARINT(0x80, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"8000\"); ss.clear();\n+    ss << VARINT_MODE(0, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"00\"); ss.clear();\n+    ss << VARINT_MODE(0x7f, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"7f\"); ss.clear();\n+    ss << VARINT_MODE((int8_t)0x7f, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"7f\"); ss.clear();\n+    ss << VARINT_MODE(0x80, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"8000\"); ss.clear();\n     ss << VARINT((uint8_t)0x80); BOOST_CHECK_EQUAL(HexStr(ss), \"8000\"); ss.clear();\n-    ss << VARINT(0x1234, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"a334\"); ss.clear();\n-    ss << VARINT((int16_t)0x1234, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"a334\"); ss.clear();\n-    ss << VARINT(0xffff, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"82fe7f\"); ss.clear();\n+    ss << VARINT_MODE(0x1234, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"a334\"); ss.clear();\n+    ss << VARINT_MODE((int16_t)0x1234, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"a334\"); ss.clear();\n+    ss << VARINT_MODE(0xffff, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"82fe7f\"); ss.clear();\n     ss << VARINT((uint16_t)0xffff); BOOST_CHECK_EQUAL(HexStr(ss), \"82fe7f\"); ss.clear();\n-    ss << VARINT(0x123456, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"c7e756\"); ss.clear();\n-    ss << VARINT((int32_t)0x123456, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"c7e756\"); ss.clear();\n+    ss << VARINT_MODE(0x123456, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"c7e756\"); ss.clear();\n+    ss << VARINT_MODE((int32_t)0x123456, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"c7e756\"); ss.clear();\n     ss << VARINT(0x80123456U); BOOST_CHECK_EQUAL(HexStr(ss), \"86ffc7e756\"); ss.clear();\n     ss << VARINT((uint32_t)0x80123456U); BOOST_CHECK_EQUAL(HexStr(ss), \"86ffc7e756\"); ss.clear();\n     ss << VARINT(0xffffffff); BOOST_CHECK_EQUAL(HexStr(ss), \"8efefefe7f\"); ss.clear();\n-    ss << VARINT(0x7fffffffffffffffLL, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"fefefefefefefefe7f\"); ss.clear();\n+    ss << VARINT_MODE(0x7fffffffffffffffLL, VarIntMode::NONNEGATIVE_SIGNED); BOOST_CHECK_EQUAL(HexStr(ss), \"fefefefefefefefe7f\"); ss.clear();\n     ss << VARINT(0xffffffffffffffffULL); BOOST_CHECK_EQUAL(HexStr(ss), \"80fefefefefefefefe7f\"); ss.clear();\n }\n "
      },
      {
        "sha": "acc47ab45ee8050d52113a8491cb916891c75894",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e0fa27acb74b4f0075afcf59a0dff51a21baddb/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=0e0fa27acb74b4f0075afcf59a0dff51a21baddb",
        "patch": "@@ -339,7 +339,7 @@ class CCoins\n                 ::Unserialize(s, Using<TxOutCompression>(vout[i]));\n         }\n         // coinbase height\n-        ::Unserialize(s, VARINT(nHeight, VarIntMode::NONNEGATIVE_SIGNED));\n+        ::Unserialize(s, VARINT_MODE(nHeight, VarIntMode::NONNEGATIVE_SIGNED));\n     }\n };\n "
      }
    ]
  }
]