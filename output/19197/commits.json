[
  {
    "sha": "83fd3a6d73eee452dc5141bdf6826da62d7b2dbd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4M2ZkM2E2ZDczZWVlNDUyZGM1MTQxYmRmNjgyNmRhNjJkN2IyZGJk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-06-06T12:23:05Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-06-12T08:02:18Z"
      },
      "message": "init: use std::thread for ThreadImport()\n\nMentioned in #19142, which removed the boost::interruption_point()\nin ThreadImport().",
      "tree": {
        "sha": "2d5598872f3ae589234329a9a75d5f0815ddc974",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d5598872f3ae589234329a9a75d5f0815ddc974"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83fd3a6d73eee452dc5141bdf6826da62d7b2dbd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl7jNooACgkQLuufXMCV\nJsHzOw//VxTGoaNgvGFAmUN7wotjdEKHistIGB4ivk8QwNteeX+jVXn+FL3HDHcx\n66UOgdSeH4XE/cZdpfTjilv+r63W/80AsMLvo/anPBOhjir8LXMAam6iBNUfV9/X\nS4ZhW3qCwwWeVLyisaTf4Sv10utyA3zOIhyfoY/wmhdstzr1xsyTpBC/ftdKqGGs\nSB/n1zXOaAW8aV3qabedNSByxivIrWZxr0Ukwa6/iTBmdFseH6vmGiXm843REwkc\n+Kykr0077AiJvUVh95amTgka/Vk/h5M82r1h7q0HYNUXWw7gjH4Sq2Cp6agI+Gwv\nDkJO9+fnPm18DtA6d5ShU4boLLlVbT4Pw3SibEl7kXKlK2MMRHT4BXXKTqcTIvus\nTwvyuGu5WAx20y+D083u/DM7reYGKsninrKW2AlyrIUz4fTscOjTwpkTD/nzA5Q/\nyDQtRGYDHDCanLG8XqdrtozZqBV2DfQf10UF9nrhYA26pe+Z0N6Z6Y9H4NdwKymy\naIITtMPVMLmPBxpeLa5kHEVvL8DAQ67u+gS5LdVadYRk9ZgFme26LjUPFlXeu7TY\nLMXmC3M+GzHr26fZN+OM/e8M9Q9C3EscGyqwxkpb2gVFkDqFQxlRAEAL7H31LkYO\nS1f8aIfv4NPJ9syc5n/Qbwt6whiVM7D03BmUQs+Hi5wn7ZZuXII=\n=bJGA\n-----END PGP SIGNATURE-----",
        "payload": "tree 2d5598872f3ae589234329a9a75d5f0815ddc974\nparent b33136b6ba9887f7db651c4c5264ca7f2f601df7\nauthor fanquake <fanquake@gmail.com> 1591446185 +0800\ncommitter fanquake <fanquake@gmail.com> 1591948938 +0800\n\ninit: use std::thread for ThreadImport()\n\nMentioned in #19142, which removed the boost::interruption_point()\nin ThreadImport().\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83fd3a6d73eee452dc5141bdf6826da62d7b2dbd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/83fd3a6d73eee452dc5141bdf6826da62d7b2dbd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83fd3a6d73eee452dc5141bdf6826da62d7b2dbd/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b33136b6ba9887f7db651c4c5264ca7f2f601df7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b33136b6ba9887f7db651c4c5264ca7f2f601df7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b33136b6ba9887f7db651c4c5264ca7f2f601df7"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8d9566edc3db4a5e050416288453758805d55904",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/83fd3a6d73eee452dc5141bdf6826da62d7b2dbd/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/83fd3a6d73eee452dc5141bdf6826da62d7b2dbd/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=83fd3a6d73eee452dc5141bdf6826da62d7b2dbd",
        "patch": "@@ -152,6 +152,8 @@ NODISCARD static bool CreatePidFile()\n \n static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n \n+static std::thread g_load_block;\n+\n static boost::thread_group threadGroup;\n \n void Interrupt(NodeContext& node)\n@@ -214,8 +216,9 @@ void Shutdown(NodeContext& node)\n     StopTorControl();\n \n     // After everything has been shut down, but before things get flushed, stop the\n-    // CScheduler/checkqueue threadGroup\n+    // CScheduler/checkqueue, threadGroup and load block thread.\n     if (node.scheduler) node.scheduler->stop();\n+    if (g_load_block.joinable()) g_load_block.join();\n     threadGroup.interrupt_all();\n     threadGroup.join_all();\n \n@@ -680,7 +683,6 @@ static void CleanupBlockRevFiles()\n static void ThreadImport(ChainstateManager& chainman, std::vector<fs::path> vImportFiles)\n {\n     const CChainParams& chainparams = Params();\n-    util::ThreadRename(\"loadblk\");\n     ScheduleBatchPriority();\n \n     {\n@@ -1842,7 +1844,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node)\n         vImportFiles.push_back(strFile);\n     }\n \n-    threadGroup.create_thread([=, &chainman] { ThreadImport(chainman, vImportFiles); });\n+    g_load_block = std::thread(&TraceThread<std::function<void()>>, \"loadblk\", [=, &chainman]{ ThreadImport(chainman, vImportFiles); });\n \n     // Wait for genesis block to be processed\n     {"
      }
    ]
  }
]