MarcoFalke,2020-05-10 14:20:32,"Requested by @instagibbs, I believe, in comment https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393727104\n\nThis work is based on the `generateblock` RPC added by @andrewtoth in #17693 \n",https://github.com/bitcoin/bitcoin/pull/18933#issuecomment-626335572,626335572,
andrewtoth,2020-05-10 16:35:37,`generatetodescriptor` will be available for at least 2 releases. Is there any concern that other users will depend on it? I suppose workarounds for it are easy enough.,https://github.com/bitcoin/bitcoin/pull/18933#issuecomment-626354510,626354510,
MarcoFalke,2020-05-10 16:47:22,"If anyone was quick enough to add `generatetodescriptor` to their test scripts, they are surely quick enough to pull it out again the next time they update their node to a new major version.",https://github.com/bitcoin/bitcoin/pull/18933#issuecomment-626356218,626356218,
MarcoFalke,2020-05-10 16:53:00,"> Does removing the generatetodescriptor RPC require a deprecation cycle?\n\nI'd say no, because it is only used for testing. See also https://github.com/bitcoin/bitcoin/pull/18933#issuecomment-626356218",https://github.com/bitcoin/bitcoin/pull/18933#issuecomment-626356957,626356957,
andrewtoth,2020-05-10 17:50:41,"I haven't used `generatetodescriptor` myself, but I would imagine a use case would be to mine transactions in the mempool with it. With `generateblock` a user has to manually add all `txid`s to get the same functionality. If we are replacing it, should we also add an option to `generateblock` to mine the mempool?",https://github.com/bitcoin/bitcoin/pull/18933#issuecomment-626364333,626364333,
MarcoFalke,2020-05-10 18:23:26,"Ok, that can be done as a follow-up. Dropped the last commit faefc219b63825b3393ccea683645ecbbac0e169 because it was too controversial.",https://github.com/bitcoin/bitcoin/pull/18933#issuecomment-626368506,626368506,
DrahtBot,2020-05-10 21:36:16,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17479 (Return BlockValidationState from ProcessNewBlock if CheckBlock/AcceptBlock fails by jnewbery)\n\nIf you consider t",https://github.com/bitcoin/bitcoin/pull/18933#issuecomment-626393401,626393401,
andrewtoth,2020-05-12 03:25:20,"The comment this is based on (https://github.com/bitcoin/bitcoin/pull/17693#discussion_r393727104) suggests to bypass validity check. However, https://github.com/bitcoin/bitcoin/pull/18933/files#diff-9651347c8e00bed3ddc7631de569406dL364 still does that. Do we want to skip that check as well?",https://github.com/bitcoin/bitcoin/pull/18933#issuecomment-627085336,627085336,
DrahtBot,2020-05-23 12:06:03,<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/18933#issuecomment-633038637,633038637,
jonatack,2020-05-10 16:46:50,s/genereratetodescriptor/generatetodescriptor/,https://github.com/bitcoin/bitcoin/pull/18933#discussion_r422669555,422669555,doc/release-notes.md
MarcoFalke,2020-05-10 16:55:38,"Thanks, fixed.",https://github.com/bitcoin/bitcoin/pull/18933#discussion_r422670647,422670647,doc/release-notes.md
instagibbs,2020-05-11 14:20:33,"Also should be added to ""src/rpc/client.cpp"" to be parsed as non-string on -cli, right?",https://github.com/bitcoin/bitcoin/pull/18933#discussion_r423074774,423074774,src/rpc/mining.cpp
MarcoFalke,2020-05-11 14:24:16,"Doh. Can't wait until RPCMan does that for me\n\n#18531 ",https://github.com/bitcoin/bitcoin/pull/18933#discussion_r423077459,423077459,src/rpc/mining.cpp
instagibbs,2020-05-11 14:25:27,"oh nice, will review",https://github.com/bitcoin/bitcoin/pull/18933#discussion_r423078336,423078336,src/rpc/mining.cpp
