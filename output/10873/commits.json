[
  {
    "sha": "f684d2548ce203709c0d809c68b672ca5e76c5ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjg0ZDI1NDhjZTIwMzcwOWMwZDgwOWM2OGI2NzJjYTVlNzZjNWVl",
    "commit": {
      "author": {
        "name": "Evan Klitzke",
        "email": "evan@eklitzke.org",
        "date": "2017-07-18T23:25:50Z"
      },
      "committer": {
        "name": "Evan Klitzke",
        "email": "evan@eklitzke.org",
        "date": "2017-07-19T06:44:26Z"
      },
      "message": "use a condition variable for shutdown notifications",
      "tree": {
        "sha": "1739806cc46d12c362f2390e5f585d7c2b7829d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1739806cc46d12c362f2390e5f585d7c2b7829d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f684d2548ce203709c0d809c68b672ca5e76c5ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f684d2548ce203709c0d809c68b672ca5e76c5ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f684d2548ce203709c0d809c68b672ca5e76c5ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f684d2548ce203709c0d809c68b672ca5e76c5ee/comments",
    "author": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "eklitzke",
      "id": 2734,
      "node_id": "MDQ6VXNlcjI3MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eklitzke",
      "html_url": "https://github.com/eklitzke",
      "followers_url": "https://api.github.com/users/eklitzke/followers",
      "following_url": "https://api.github.com/users/eklitzke/following{/other_user}",
      "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
      "organizations_url": "https://api.github.com/users/eklitzke/orgs",
      "repos_url": "https://api.github.com/users/eklitzke/repos",
      "events_url": "https://api.github.com/users/eklitzke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eklitzke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e8d6a3fb43a2433ef46aaf95511650e3888f730",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e8d6a3fb43a2433ef46aaf95511650e3888f730",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e8d6a3fb43a2433ef46aaf95511650e3888f730"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 38,
      "deletions": 21
    },
    "files": [
      {
        "sha": "ceb0d2e19e13e4566d8b54106b2599091ee1dbbf",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f684d2548ce203709c0d809c68b672ca5e76c5ee/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f684d2548ce203709c0d809c68b672ca5e76c5ee/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=f684d2548ce203709c0d809c68b672ca5e76c5ee",
        "patch": "@@ -42,13 +42,7 @@\n \n void WaitForShutdown(boost::thread_group* threadGroup)\n {\n-    bool fShutdown = ShutdownRequested();\n-    // Tell the main threads to shutdown.\n-    while (!fShutdown)\n-    {\n-        MilliSleep(200);\n-        fShutdown = ShutdownRequested();\n-    }\n+    WaitForShutdownNotify();\n     if (threadGroup)\n     {\n         Interrupt(*threadGroup);"
      },
      {
        "sha": "954ec86284e0959f400bef55400e675082974bb6",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 14,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f684d2548ce203709c0d809c68b672ca5e76c5ee/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f684d2548ce203709c0d809c68b672ca5e76c5ee/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=f684d2548ce203709c0d809c68b672ca5e76c5ee",
        "patch": "@@ -116,16 +116,38 @@ static const char* FEE_ESTIMATES_FILENAME=\"fee_estimates.dat\";\n // shutdown thing.\n //\n \n-std::atomic<bool> fRequestShutdown(false);\n-std::atomic<bool> fDumpMempoolLater(false);\n+// g_request_shutdown is true when bitcoin should be shutting down, and access\n+// is guarded by g_shutdown_mut.\n+static std::mutex g_shutdown_mut;\n+static std::condition_variable g_shutdown_cond;\n+static bool g_request_shutdown{false};\n \n-void StartShutdown()\n+static std::atomic<bool> g_dump_mempool_later(false);\n+\n+static void SetShutdown(bool value)\n {\n-    fRequestShutdown = true;\n+    {\n+        std::lock_guard<std::mutex> lk(g_shutdown_mut);\n+        g_request_shutdown = value;\n+    }\n+    g_shutdown_cond.notify_all();\n+}\n+\n+void StartShutdown() {\n+    SetShutdown(true);\n }\n+\n+// Threads can use this method to wait for a shutdown request, without polling.\n+void WaitForShutdownNotify()\n+{\n+    std::unique_lock<std::mutex> lk(g_shutdown_mut);\n+    g_shutdown_cond.wait(lk, []{ return g_request_shutdown; });\n+}\n+\n bool ShutdownRequested()\n {\n-    return fRequestShutdown;\n+    std::lock_guard<std::mutex> lk(g_shutdown_mut);\n+    return g_request_shutdown;\n }\n \n /**\n@@ -199,7 +221,7 @@ void Shutdown()\n \n     StopTorControl();\n     UnregisterNodeSignals(GetNodeSignals());\n-    if (fDumpMempoolLater && GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n+    if (g_dump_mempool_later && GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n         DumpMempool();\n     }\n \n@@ -283,7 +305,7 @@ void Shutdown()\n  */\n static void HandleSIGTERM(int)\n {\n-    fRequestShutdown = true;\n+    StartShutdown();\n }\n \n static void HandleSIGHUP(int)\n@@ -688,7 +710,7 @@ void ThreadImport(std::vector<fs::path> vImportFiles)\n     } // End scope of CImportingNow\n     if (GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n         LoadMempool();\n-        fDumpMempoolLater = !fRequestShutdown;\n+        g_dump_mempool_later = !ShutdownRequested();\n     }\n }\n \n@@ -1381,7 +1403,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     LogPrintf(\"* Using %.1fMiB for in-memory UTXO set (plus up to %.1fMiB of unused mempool space)\\n\", nCoinCacheUsage * (1.0 / 1024 / 1024), nMempoolSizeMax * (1.0 / 1024 / 1024));\n \n     bool fLoaded = false;\n-    while (!fLoaded && !fRequestShutdown) {\n+    while (!fLoaded && !ShutdownRequested()) {\n         bool fReset = fReindex;\n         std::string strLoadError;\n \n@@ -1412,7 +1434,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n                         break;\n                     }\n                 }\n-                if (fRequestShutdown) break;\n+                if (ShutdownRequested()) break;\n \n                 if (!LoadBlockIndex(chainparams)) {\n                     strLoadError = _(\"Error loading block database\");\n@@ -1490,7 +1512,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n             fLoaded = true;\n         } while(false);\n \n-        if (!fLoaded && !fRequestShutdown) {\n+        if (!fLoaded && !ShutdownRequested()) {\n             // first suggest a reindex\n             if (!fReset) {\n                 bool fRet = uiInterface.ThreadSafeQuestion(\n@@ -1499,7 +1521,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n                     \"\", CClientUIInterface::MSG_ERROR | CClientUIInterface::BTN_ABORT);\n                 if (fRet) {\n                     fReindex = true;\n-                    fRequestShutdown = false;\n+                    SetShutdown(false);\n                 } else {\n                     LogPrintf(\"Aborted block database rebuild. Exiting.\\n\");\n                     return false;\n@@ -1513,7 +1535,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // As LoadBlockIndex can take several minutes, it's possible the user\n     // requested to kill the GUI during the last operation. If so, exit.\n     // As the program has not fully started yet, Shutdown() is possibly overkill.\n-    if (fRequestShutdown)\n+    if (ShutdownRequested())\n     {\n         LogPrintf(\"Shutdown requested. Exiting.\\n\");\n         return false;\n@@ -1667,5 +1689,5 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     }\n #endif\n \n-    return !fRequestShutdown;\n+    return !ShutdownRequested();\n }"
      },
      {
        "sha": "5467f3e39adf51a5321cf123a1bafad0bf434b63",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f684d2548ce203709c0d809c68b672ca5e76c5ee/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f684d2548ce203709c0d809c68b672ca5e76c5ee/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=f684d2548ce203709c0d809c68b672ca5e76c5ee",
        "patch": "@@ -18,6 +18,7 @@ class thread_group;\n \n void StartShutdown();\n bool ShutdownRequested();\n+void WaitForShutdownNotify();\n /** Interrupt threads */\n void Interrupt(boost::thread_group& threadGroup);\n void Shutdown();"
      }
    ]
  }
]