MarcoFalke,2020-04-22 14:40:47,"I think @promag has a good point. Apart from `get*`, `list*` and `keypoolrefill` there is not really a use case for this endpoint.",https://github.com/bitcoin/bitcoin/pull/18734#issuecomment-617820950,617820950,
jonasschnelli,2020-04-22 14:46:08,"> I think @promag has a good point. Apart from get*, list* and keypoolrefill there is not really a use case for this endpoint.\n\nFair point. I think this is why I would favour this approach which can be implemented per call. I guess there are some edge cases for other calls like `set*` (like `settxfee`), `import*`. But even only supporting the list* and get* calls,... it would be around half of",https://github.com/bitcoin/bitcoin/pull/18734#issuecomment-617824346,617824346,
MarcoFalke,2020-04-22 14:51:32,"Instead of the not-quite-regex-but-still-a-pattern I'd prefer the caller to explicitly list the wallets. I think requiring that the user calls `listtransactions` once to get the wallet names is not too much to ask.\n\nAlso, the returned array could be a json dict with keys being the wallet name. That is easier to parse at the client.",https://github.com/bitcoin/bitcoin/pull/18734#issuecomment-617827656,617827656,
jonasschnelli,2020-04-22 15:21:32,"> Instead of the not-quite-regex-but-still-a-pattern I'd prefer the caller to explicitly list the wallets. I think requiring that the user calls listtransactions once to get the wallet names is not too much to ask.\n\nProbably meh to not support a pure ""`*`"" (all wallets). Maybe ""`*`"" or a cs-list of wallets?\n\n> Also, the returned array could be a json dict with keys being the wallet name. T",https://github.com/bitcoin/bitcoin/pull/18734#issuecomment-617845714,617845714,
DrahtBot,2020-04-22 19:45:10,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18946 (rpcwallet: Replace boost::optional<T>::emplace with simple assignment of T{} by MarcoFalke)\n* #18654 (rpc: separa",https://github.com/bitcoin/bitcoin/pull/18734#issuecomment-617995936,617995936,
jb55,2020-04-22 20:44:41,"@promag:\n> I still don't get what are the use cases beside the obvious `getbalances`.\n\nlisting transactions, coins. This what I currently do in scripts like [btc-coins](https://github.com/jb55/bin/blob/master/btc-coins), but the round-trips are a bit slow with many wallets\n\n> Not sure about mutation calls, like send.\n\ngood point, that seems like a footgun. seems like this is more use",https://github.com/bitcoin/bitcoin/pull/18734#issuecomment-618029944,618029944,
luke-jr,2020-04-24 21:26:06,"Any reason not to return\n```json\n{\n    ""walletname"": result,\n    ...\n}\n```?",https://github.com/bitcoin/bitcoin/pull/18734#issuecomment-619245719,619245719,
fanquake,2021-06-09 12:52:57,"Going to close this as ""Up for Grabs"" for now.",https://github.com/bitcoin/bitcoin/pull/18734#issuecomment-857668183,857668183,
promag,2020-04-22 14:14:06,Do we want to incur in double payments?,https://github.com/bitcoin/bitcoin/pull/18734#discussion_r413020063,413020063,src/wallet/rpcwallet.cpp
luke-jr,2020-04-24 21:21:38,Can we avoid adding this to every wallet function?,https://github.com/bitcoin/bitcoin/pull/18734#discussion_r414870498,414870498,src/wallet/rpcdump.cpp
luke-jr,2020-04-24 21:23:04,Something like `dumpprivkey` should probably just return the *first* result it gets (and ignore all the failures)?,https://github.com/bitcoin/bitcoin/pull/18734#discussion_r414871206,414871206,src/wallet/rpcdump.cpp
jonatack,2020-05-26 10:58:28,"Needed to appease `test/lint/lint-assertions.sh`\n```diff\n-    assert(pos != std::string::npos); // we must have checked earlier for an asterisk\n+    CHECK_NONFATAL(pos != std::string::npos); // we must have checked earlier for an asterisk\n```",https://github.com/bitcoin/bitcoin/pull/18734#discussion_r430327859,430327859,src/wallet/rpcwallet.cpp
