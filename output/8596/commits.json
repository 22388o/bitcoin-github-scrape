[
  {
    "sha": "a0a2f0816a067ca8939916ce2f2e5250d54e2f3a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMGEyZjA4MTZhMDY3Y2E4OTM5OTE2Y2UyZjJlNTI1MGQ1NGUyZjNh",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-06-17T04:10:07Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-08-26T02:23:08Z"
      },
      "message": "Improvement to Feeler code and debugging.",
      "tree": {
        "sha": "b0efd720576369a13a95888960e82d0c77a6bb63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0efd720576369a13a95888960e82d0c77a6bb63"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0a2f0816a067ca8939916ce2f2e5250d54e2f3a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0a2f0816a067ca8939916ce2f2e5250d54e2f3a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a0a2f0816a067ca8939916ce2f2e5250d54e2f3a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0a2f0816a067ca8939916ce2f2e5250d54e2f3a/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53f8f226bd1d627c4a6dec5862a1d4ea5a933e45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53f8f226bd1d627c4a6dec5862a1d4ea5a933e45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53f8f226bd1d627c4a6dec5862a1d4ea5a933e45"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 13,
      "deletions": 14
    },
    "files": [
      {
        "sha": "3e03564d4994ec78ca83f044c3c52842d305f492",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0a2f0816a067ca8939916ce2f2e5250d54e2f3a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0a2f0816a067ca8939916ce2f2e5250d54e2f3a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a0a2f0816a067ca8939916ce2f2e5250d54e2f3a",
        "patch": "@@ -4905,12 +4905,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n     if (strCommand == NetMsgType::VERSION)\n     {\n-        // Feeler connections exist only to verify if address is online.\n-        if (pfrom->fFeeler) {\n-            assert(pfrom->fInbound == false);\n-            pfrom->fDisconnect = true;\n-        }\n-\n         // Each connection can only send one version message\n         if (pfrom->nVersion != 0)\n         {\n@@ -5048,6 +5042,12 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                   pfrom->nStartingHeight, addrMe.ToString(), pfrom->id,\n                   remoteAddr);\n \n+        // Feeler connections exist only to verify if address is online.\n+        if (pfrom->fFeeler) {\n+            assert(pfrom->fInbound == false);\n+            pfrom->fDisconnect = true;\n+        }\n+\n         int64_t nTimeOffset = nTime - GetTime();\n         pfrom->nTimeOffset = nTimeOffset;\n         AddTimeData(pfrom->addr, nTimeOffset);\n@@ -6398,7 +6398,7 @@ bool SendMessages(CNode* pto)\n         if (pindexBestHeader == NULL)\n             pindexBestHeader = chainActive.Tip();\n         bool fFetch = state.fPreferredDownload || (nPreferredDownload == 0 && !pto->fClient && !pto->fOneShot); // Download if this is a nice peer, or we have no nice peers and this one might do.\n-        if (!state.fSyncStarted && !pto->fClient && !fImporting && !fReindex) {\n+        if (!state.fSyncStarted && !pto->fClient && !pto->fFeeler && !fImporting && !fReindex) {\n             // Only actively request headers from a single peer, unless we're close to today.\n             if ((nSyncStarted == 0 && fFetch) || pindexBestHeader->GetBlockTime() > GetAdjustedTime() - 24 * 60 * 60) {\n                 state.fSyncStarted = true;"
      },
      {
        "sha": "44f5c653a9acb24048f54da5fa9f534ca4953a9c",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0a2f0816a067ca8939916ce2f2e5250d54e2f3a/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0a2f0816a067ca8939916ce2f2e5250d54e2f3a/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=a0a2f0816a067ca8939916ce2f2e5250d54e2f3a",
        "patch": "@@ -45,6 +45,8 @@\n \n // We add a random period time (0 to 1 seconds) to feeler connections to prevent synchronization.\n #define FEELER_SLEEP_WINDOW 1\n+/** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n+static const int FEELER_INTERVAL = 60;\n \n #if !defined(HAVE_MSG_NOSIGNAL) && !defined(MSG_NOSIGNAL)\n #define MSG_NOSIGNAL 0\n@@ -383,7 +385,7 @@ CNode* FindNode(const NodeId nodeid)\n     return NULL;\n }\n \n-CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure)\n+CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, bool fFeeler)\n {\n     if (pszDest == NULL) {\n         if (IsLocal(addrConnect))\n@@ -399,9 +401,9 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure\n     }\n \n     /// debug print\n-    LogPrint(\"net\", \"trying connection %s lastseen=%.1fhrs\\n\",\n+    LogPrint(\"net\", \"%s connection %s lastseen=%.1fdays\\n\", fFeeler ? \"feeler\" : \"trying\",\n         pszDest ? pszDest : addrConnect.ToString(),\n-        pszDest ? 0.0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\n+        pszDest ? 0.0 : (double)(GetAdjustedTime() - addrConnect.nTime)/86400.0);\n \n     // Connect\n     SOCKET hSocket;\n@@ -1731,7 +1733,6 @@ void ThreadOpenConnections()\n                 // Add small amount of random noise before connection to avoid synchronization.\n                 int randsleep = GetRandInt(FEELER_SLEEP_WINDOW * 1000);\n                 MilliSleep(randsleep);\n-                LogPrint(\"net\", \"Making feeler connection to %s\\n\", addrConnect.ToString());\n             }\n \n             OpenNetworkConnection(addrConnect, (int)setConnected.size() >= std::min(nMaxConnections - 1, 2), &grant, NULL, false, fFeeler);\n@@ -1831,7 +1832,7 @@ bool OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSem\n     } else if (FindNode(std::string(pszDest)))\n         return false;\n \n-    CNode* pnode = ConnectNode(addrConnect, pszDest, fCountFailure);\n+    CNode* pnode = ConnectNode(addrConnect, pszDest, fCountFailure, fFeeler);\n     boost::this_thread::interruption_point();\n \n     if (!pnode)"
      },
      {
        "sha": "61e257e677e698c90a93de6b25c299cee77ef3ad",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0a2f0816a067ca8939916ce2f2e5250d54e2f3a/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0a2f0816a067ca8939916ce2f2e5250d54e2f3a/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=a0a2f0816a067ca8939916ce2f2e5250d54e2f3a",
        "patch": "@@ -41,8 +41,6 @@ namespace boost {\n static const int PING_INTERVAL = 2 * 60;\n /** Time after which to disconnect, after waiting for a ping response (or inactivity). */\n static const int TIMEOUT_INTERVAL = 20 * 60;\n-/** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n-static const int FEELER_INTERVAL = 120;\n /** The maximum number of entries in an 'inv' protocol message */\n static const unsigned int MAX_INV_SZ = 50000;\n /** The maximum number of new addresses to accumulate before announcing. */"
      }
    ]
  }
]