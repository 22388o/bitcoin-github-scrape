jrmithdobbs,2011-05-27T05:11:36Z,This works great for me as is and is a good first step to fixing this.\n,https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1247248,1247248,
shanew,2011-05-29T19:02:47Z,Can you rebase? This doesn't apply to current tree.\n,https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1257837,1257837,
jordanlewis,2011-05-30T02:57:37Z,Rebased to current tree.\n,https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1259583,1259583,
shanew,2011-06-07T18:12:57Z,"Using this patch on a heavily loaded bitcoind, I am getting quite a few:\nreservekeyfromkeypool(): read failed\nfrom send transactions.\n\nI backed out the patch and so far so good but time will tell. Are you aware of any wallet locking issues with this async code?\n",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1319552,1319552,
dlancer,2011-06-10T03:20:40Z,Can you rebase with latest version?  With transaction fee 0.0005 ?\nWhy this important pull still not merged with upstream?\n,https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1339522,1339522,
jgarzik,2011-06-14T09:10:01Z,"Any updated test results, from heavily loaded bitcoind's?\n",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1364748,1364748,
doublec,2011-06-17T04:28:44Z,"I'm running this patch on a loaded server. It works fine, but I've seen one problem. If I do ""bitcoind listtransactions"" I get a correct list of transactions. If I do ""bitcoind listtransactions """" 1000"" I get:\nerror: couldn't parse reply from server\n",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1385997,1385997,
jgarzik,2011-06-17T04:40:12Z,"Any chance you can look at wireshark output, or some other way of dumping the network traffic, and see what's going on?  Sounds like output was truncated somewhere.\n",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1386030,1386030,
doublec,2011-06-17T04:45:16Z,"Yep, I'll do that in a day or so and report back.\n",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1386043,1386043,
jrmithdobbs,2011-06-17T12:58:13Z,I don't have the dumps I made handy but I've seen this issue as well. It only seems to happen on large RPC calls like listtransactions. I actually ran across it testing out sipa's showwallet branch for privkey import/export and didn't make the correlation until seeing your comments.\n\nReverting this makes it stop happening. So there's definitely an issue here and this shouldn't be pulled until re,https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1387943,1387943,
jordanlewis,2011-06-17T15:39:35Z,Thanks for the testing guys. I'll look into this issue.\n,https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1388936,1388936,
jrmithdobbs,2011-06-18T15:25:26Z,"Some more info. It also happens on RPC requests _receiving_ a lot of data. Eg, sipa's importwallet. The ""alot"" seems to be around the 1k boundary or so from my very brief testing.\n",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1393618,1393618,
jine,2011-06-25T22:44:16Z,I'm willing to pay to get this fixed and working in production use. \nAlso looking for a keep-alive solution which would reuse connections to bitcoind.\n,https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1439471,1439471,
ius,2011-06-28T18:59:42Z,"See comment above. A possible fix: http://pastie.org/private/d04wwgdsk881yl70k1g\n\nI'm not familiar with boost though, so there might very well be a better solution.\n",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1458085,1458085,
JoelKatz,2011-07-03T01:17:02Z,"If your plan is to optimize the RPC code, you're kind of barking up the wrong tree. The socket I/O is only about 3% of the load coming from the RPC code. If you just want it to handle more than one connection at a time and keepalives, just dispatching the RPC to a thread (and fixing the protocol handler to close the socket when it's the right time) does it.\n\nThe breakdown is, roughly:\n30% Do th",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1491109,1491109,
jgarzik,2011-07-03T01:32:21Z,"@JoelKatz:  you missed the point.  This is not an optimization, but a big step towards correcting a major design flaw.  The current RPC code executes HTTP requests in order, in a FIFO queue.\n\nYou can find examples of this logic in ""My First TCP Server"" style code examples, but never in any production server.  A synchronous, FIFO approach stalls all clients except the ""current"" one.  If the curre",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1491134,1491134,
JoelKatz,2011-07-03T03:08:41Z,"As I said, that issue is more easily solved by simply dispatching the RPC to a thread and making the trivial fixes to the keepalive logic. There aren't enough RPC connections, and the operation order is always accept/read/write, so you don't get any benefit from asynchronous I/O. In contrast, in the 'net' code, you have many connections and unpredictable operation order. That code would significan",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1491258,1491258,
jgarzik,2011-07-03T03:10:17Z,"One thread per RPC connection is unscalable in many modern workloads.  That is also potentially DoS'able, if you're not careful.\n",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1491260,1491260,
JoelKatz,2011-07-03T03:35:27Z,"I don't think many people, if any, expose their bitcoin RPC connections to the world. So I don't think the DoS issue is particularly important. I guess you could argue that they don't because they can't, and if they could, they might. But I think most people run a bitcoin client on each machine that needs to issue RPC queries and should bind their RPC listening sockets to 'localhost' only.\n\nAs f",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1491291,1491291,
jgarzik,2011-07-15T03:46:06Z,Any rebase / update for current tree?\n,https://github.com/bitcoin/bitcoin/pull/214#issuecomment-1577433,1577433,
alexwaters,2011-09-30T08:06:20Z,"The pull has become unmergeable (without conflicts), and will be closed in 15 days from this message if action is not taken.\n\nTo prevent closure, kindly rebase the pull to merge cleanly with the current codebase. If a time extension is needed, please respond to this comment or contact QA@BitcoinTesting.org.\n",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-2247130,2247130,
jordanlewis,2011-09-30T13:41:33Z,"Sorry guys, I don't have the time to maintain this pull indefinitely. Anyone please feel free to rebase and maintain yourself. I think it's an important patch.\n",https://github.com/bitcoin/bitcoin/pull/214#issuecomment-2249488,2249488,
alexwaters,2011-10-20T05:39:39Z,Closed pending rebase / additional commentary. The rebase label has been applied.\n,https://github.com/bitcoin/bitcoin/pull/214#issuecomment-2464974,2464974,
ius,2011-06-28T18:56:44Z,str goes out of scope when the method returns\n,https://github.com/bitcoin/bitcoin/pull/214#discussion_r53752,53752,src/rpc.cpp
