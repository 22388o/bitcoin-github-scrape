Empact,2020-07-10 20:24:58,"Code review ACK https://github.com/bitcoin/bitcoin/pull/19486/commits/158f28d9faf8105b6ed2e3440f21691e5e9ff75b\n\nSee also #14033.",https://github.com/bitcoin/bitcoin/pull/19486#issuecomment-656874195,656874195,
jnewbery,2020-07-10 21:20:25,I think this can be taken separately from @sipa's suggested change.,https://github.com/bitcoin/bitcoin/pull/19486#issuecomment-656896353,656896353,
DrahtBot,2020-07-11 00:18:35,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19503 (Add parameter feature to serialization and use it for CAddress by sipa)\n* #19031 (Implement ADDRv2 support (part ",https://github.com/bitcoin/bitcoin/pull/19486#issuecomment-656947353,656947353,
MarcoFalke,2020-07-11 10:07:56,"ACK 7bb6f9bfdbd3b0b5594febc9a0ae2f84e6d7add1 already an improvement, but maybe getting rid of INIT_PROTO_VERSION here would be an even stronger improvement (can be done later)",https://github.com/bitcoin/bitcoin/pull/19486#issuecomment-657032601,657032601,
jnewbery,2020-07-11 11:43:47,"> getting rid of INIT_PROTO_VERSION here would be an even stronger improvement\n\nI agree that'd be good. Let's save it until after the various version fields in `CNode` are unified (#17785)",https://github.com/bitcoin/bitcoin/pull/19486#issuecomment-657051330,657051330,
practicalswift,2020-07-11 17:39:47,Concept ACK: less cruft is good,https://github.com/bitcoin/bitcoin/pull/19486#issuecomment-657101308,657101308,
jnewbery,2020-07-13 08:24:49,"I think this is ready for merge. Three ACKs on the current HEAD:\n\nvasild (https://github.com/bitcoin/bitcoin/pull/19486#pullrequestreview-447018856)\njonatack (https://github.com/bitcoin/bitcoin/pull/19486#pullrequestreview-446803209)\nMarcoFalke (https://github.com/bitcoin/bitcoin/pull/19486#issuecomment-657032601)\n\nplus one ACK on a previous HEAD:\n\nempact (https://github.com/bitcoi",https://github.com/bitcoin/bitcoin/pull/19486#issuecomment-657403738,657403738,
MarcoFalke,2020-07-10 20:12:41,"style-nit: Passing pod literals without a name makes code harder to read. My preference would be to rule out the possibility to pass without name.\n\n```suggestion\n    def serialize(self, *, with_time=True):\n```\n\nSame for unserialize, see https://github.com/bitcoin/bitcoin/pull/14033#issuecomment-416224661",https://github.com/bitcoin/bitcoin/pull/19486#discussion_r453056619,453056619,test/functional/test_framework/messages.py
MarcoFalke,2020-07-10 20:31:56,Also makes review easier because running the tests proves that no other place than msg_version sets it to false,https://github.com/bitcoin/bitcoin/pull/19486#discussion_r453063887,453063887,test/functional/test_framework/messages.py
jnewbery,2020-07-10 20:34:30,What's a pod literal?,https://github.com/bitcoin/bitcoin/pull/19486#discussion_r453064826,453064826,test/functional/test_framework/messages.py
MarcoFalke,2020-07-10 20:36:29,An integral value like `True` or `1`. Not sure what the right term for that is,https://github.com/bitcoin/bitcoin/pull/19486#discussion_r453065584,453065584,test/functional/test_framework/messages.py
MarcoFalke,2020-07-10 20:50:17,"style-nit: the python code reads much nicer, so I'd slightly prefer if the C++ code was also easy to read. Not blocking of course, but for example passing down an option `with_time` per https://github.com/bitcoin/bitcoin/issues/19477#issuecomment-656331810 would be nice.",https://github.com/bitcoin/bitcoin/pull/19486#discussion_r453070909,453070909,src/protocol.h
sipa,2020-07-10 20:58:01,"I'm working on that. In a branch I'm working on I have this patch that make another (vaguely related) readability improvement:\n\n```patch\ndiff --git a/src/protocol.h b/src/protocol.h\nindex 985f44640b..b74a24e007 100644\n--- a/src/protocol.h\n+++ b/src/protocol.h\n@@ -359,6 +359,11 @@ class CAddress : public CService\n {\n     static constexpr uint32_t TIME_INIT{100000000};\n \n+    /",https://github.com/bitcoin/bitcoin/pull/19486#discussion_r453073981,453073981,src/protocol.h
jnewbery,2020-07-10 21:18:46,I've taken your suggested change,https://github.com/bitcoin/bitcoin/pull/19486#discussion_r453081716,453081716,test/functional/test_framework/messages.py
