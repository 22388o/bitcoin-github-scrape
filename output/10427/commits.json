[
  {
    "sha": "0b3fcd42fc8c98d413d6451a6d19da282c67e707",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjNmY2Q0MmZjOGM5OGQ0MTNkNjQ1MWE2ZDE5ZGEyODJjNjdlNzA3",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-05-18T23:44:52Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2017-05-19T02:12:03Z"
      },
      "message": "Consensus: Introduce static GetScriptFlags (mostly MOVEONLY)",
      "tree": {
        "sha": "2384be5f958028e9203584f5a20b1bb19db23c9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2384be5f958028e9203584f5a20b1bb19db23c9f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b3fcd42fc8c98d413d6451a6d19da282c67e707",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJZHlR4AAoJEIhmwY6hyUSiQc0P/0qBHJMm5NkEiphdGwcPsP4X\nSq3+9z1AMWCNsAoJWqp7f8gI2DBYpymgP+LcPBXIhHW52Uaop9hOLDpnBXG19g8N\nEqbE0SdqWflAGSsAh1vrkK7/GPd7eziAcDfAoxwUBMD7BUKpRwNaEcc4F+Vl0pdB\nrh61uWTZJUKgBxJIyUJ+6OPhO9V+wWqXvcQKwtQSYaJlXdZ7gtX6v68VIfRZTOdO\nuroDMr5WWFCCtIlrWfesn/ccIXaihrE4aczL9oUh+npALihwzfSamqLsZsUx0LWh\nyBBREIHuxII4kmj9AoAhOkx0OIu4nxF8J7hAfzz33sUjOngOkWsrrT3IoIKjtbDB\n35VK3viJeimsYsp58W7yzA5S0aupniewRhwRDmSKC/rIzFDBIjjauV3vksNEY8Uo\nKszsEf26+7vlgfWzX3f/T5DUWiChDmIxLAeFYOWEVNpKCbnYt61vtHNMcmlT8d0L\nT45O+YVmFWBR5/xRfqUmQhT9uuopYw3kygby9HWeL64Io8MAc05PQdZTVhO8h1og\nEPXpoVdn2wyXAIGomG7xyN8NzCgaDctlgTAuYLUP+yOUZoaDweMAi8ewpTg5hdrL\nTq8d6xcEw7m8dTR6Wf6W8GMpDvZaIxdTP4g/Mbjw75Zbi+6OIASmzAo6jPNCXf/u\nZGCsMAQxxC3vm99vc3IW\n=Zofi\n-----END PGP SIGNATURE-----",
        "payload": "tree 2384be5f958028e9203584f5a20b1bb19db23c9f\nparent ea6fde3f1d2694176a657b69fb0eeb5426e6f309\nauthor Jorge Tim\u00f3n <jtimon@jtimon.cc> 1495151092 +0200\ncommitter Jorge Tim\u00f3n <jtimon@jtimon.cc> 1495159923 +0200\n\nConsensus: Introduce static GetScriptFlags (mostly MOVEONLY)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b3fcd42fc8c98d413d6451a6d19da282c67e707",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b3fcd42fc8c98d413d6451a6d19da282c67e707",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b3fcd42fc8c98d413d6451a6d19da282c67e707/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea6fde3f1d2694176a657b69fb0eeb5426e6f309",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea6fde3f1d2694176a657b69fb0eeb5426e6f309",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea6fde3f1d2694176a657b69fb0eeb5426e6f309"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 38,
      "deletions": 23
    },
    "files": [
      {
        "sha": "cc6469c14e773c819da71917c5450a3d7c5b2c26",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 23,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b3fcd42fc8c98d413d6451a6d19da282c67e707/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b3fcd42fc8c98d413d6451a6d19da282c67e707/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=0b3fcd42fc8c98d413d6451a6d19da282c67e707",
        "patch": "@@ -1391,6 +1391,42 @@ void ThreadScriptCheck() {\n     scriptcheckqueue.Thread();\n }\n \n+/**\n+ * Get all the current active consensus script flags for the given chain of headers.\n+ * It encapsulates activations older than versionbits and bip9.\n+ */\n+static unsigned int GetScriptFlags(const CBlockIndex* pindex, const Consensus::Params& consensusParams, VersionBitsCache& versionbitscache)\n+{\n+    // BIP16 didn't become active until Apr 1 2012\n+    int64_t nBIP16SwitchTime = 1333238400;\n+    bool fStrictPayToScriptHash = (pindex->GetBlockTime() >= nBIP16SwitchTime);\n+\n+    unsigned int flags = fStrictPayToScriptHash ? SCRIPT_VERIFY_P2SH : SCRIPT_VERIFY_NONE;\n+\n+    // Start enforcing the DERSIG (BIP66) rule\n+    if (pindex->nHeight >= consensusParams.BIP66Height) {\n+        flags |= SCRIPT_VERIFY_DERSIG;\n+    }\n+\n+    // Start enforcing CHECKLOCKTIMEVERIFY (BIP65) rule\n+    if (pindex->nHeight >= consensusParams.BIP65Height) {\n+        flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n+    }\n+\n+    // Start enforcing BIP68 (sequence locks) and BIP112 (CHECKSEQUENCEVERIFY) using versionbits logic.\n+    if (VersionBitsState(pindex->pprev, consensusParams, Consensus::DEPLOYMENT_CSV, versionbitscache) == THRESHOLD_ACTIVE) {\n+        flags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n+    }\n+\n+    // Start enforcing WITNESS rules using versionbits logic.\n+    if (VersionBitsState(pindex->pprev, consensusParams, Consensus::DEPLOYMENT_SEGWIT, versionbitscache) == THRESHOLD_ACTIVE) {\n+        flags |= SCRIPT_VERIFY_WITNESS;\n+        flags |= SCRIPT_VERIFY_NULLDUMMY;\n+    }\n+\n+    return flags;\n+}\n+\n // Protected by cs_main\n VersionBitsCache versionbitscache;\n \n@@ -1537,35 +1573,14 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n         }\n     }\n \n-    // BIP16 didn't become active until Apr 1 2012\n-    int64_t nBIP16SwitchTime = 1333238400;\n-    bool fStrictPayToScriptHash = (pindex->GetBlockTime() >= nBIP16SwitchTime);\n-\n-    unsigned int flags = fStrictPayToScriptHash ? SCRIPT_VERIFY_P2SH : SCRIPT_VERIFY_NONE;\n-\n-    // Start enforcing the DERSIG (BIP66) rule\n-    if (pindex->nHeight >= chainparams.GetConsensus().BIP66Height) {\n-        flags |= SCRIPT_VERIFY_DERSIG;\n-    }\n-\n-    // Start enforcing CHECKLOCKTIMEVERIFY (BIP65) rule\n-    if (pindex->nHeight >= chainparams.GetConsensus().BIP65Height) {\n-        flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n-    }\n+    const unsigned int flags = GetScriptFlags(pindex, chainparams.GetConsensus(), versionbitscache);\n \n     // Start enforcing BIP68 (sequence locks) and BIP112 (CHECKSEQUENCEVERIFY) using versionbits logic.\n     int nLockTimeFlags = 0;\n-    if (VersionBitsState(pindex->pprev, chainparams.GetConsensus(), Consensus::DEPLOYMENT_CSV, versionbitscache) == THRESHOLD_ACTIVE) {\n-        flags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n+    if (flags & SCRIPT_VERIFY_CHECKSEQUENCEVERIFY) {\n         nLockTimeFlags |= LOCKTIME_VERIFY_SEQUENCE;\n     }\n \n-    // Start enforcing WITNESS rules using versionbits logic.\n-    if (IsWitnessEnabled(pindex->pprev, chainparams.GetConsensus())) {\n-        flags |= SCRIPT_VERIFY_WITNESS;\n-        flags |= SCRIPT_VERIFY_NULLDUMMY;\n-    }\n-\n     int64_t nTime2 = GetTimeMicros(); nTimeForks += nTime2 - nTime1;\n     LogPrint(BCLog::BENCH, \"    - Fork checks: %.2fms [%.2fs]\\n\", 0.001 * (nTime2 - nTime1), nTimeForks * 0.000001);\n "
      }
    ]
  }
]