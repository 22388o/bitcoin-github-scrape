practicalswift,2021-03-15 16:23:31,"cr ACK 04a67aa052f45e68096075d3d8acc83bc634a9a7\n\nThanks for improving coverage!",https://github.com/bitcoin/bitcoin/pull/21438#issuecomment-799554309,799554309,
jonatack,2021-03-15 18:56:33,"Updated per feedback (thanks!)\n\n<details><summary><code>git diff 04a67aa f8b120c</code></summary><p>\n\n```diff\ndiff --git a/src/test/fuzz/parse_numbers.cpp b/src/test/fuzz/parse_numbers.cpp\nindex ddd2bcfba3..1ad5fb6a05 100644\n--- a/src/test/fuzz/parse_numbers.cpp\n+++ b/src/test/fuzz/parse_numbers.cpp\n@@ -18,6 +18,9 @@ FUZZ_TARGET(parse_numbers)\n     double d;\n     (void)ParseD",https://github.com/bitcoin/bitcoin/pull/21438#issuecomment-799671549,799671549,
jonatack,2021-03-15 22:22:46,"Updated per @MarcoFalke's suggestions (thanks!)\n\n<details><summary><code>git diff f8b120c 76782e5</code></summary><p>\n\n```diff\ndiff --git a/src/test/util_tests.cpp b/src/test/util_tests.cpp\nindex 7d4fcd98b3..b1b71ef7c9 100644\n--- a/src/test/util_tests.cpp\n+++ b/src/test/util_tests.cpp\n@@ -38,6 +38,7 @@\n #include <boost/test/unit_test.hpp>\n \n using namespace std::literals;\",https://github.com/bitcoin/bitcoin/pull/21438#issuecomment-799794511,799794511,
laanwj,2021-03-16 07:16:13,"Thanks for adding test coverage. `ParseUInt8` was introduced in 102867c587f5f7954232fb8ed8e85cda78bb4d32 without adding tests.\nCode review ACK 76782e560b87dc87296144aeb4ee85eb3763b8e9",https://github.com/bitcoin/bitcoin/pull/21438#issuecomment-800016902,800016902,
MarcoFalke,2021-03-16 07:49:31,cr ACK 76782e560b87dc87296144aeb4ee85eb3763b8e9,https://github.com/bitcoin/bitcoin/pull/21438#issuecomment-800035839,800035839,
MarcoFalke,2021-03-15 16:30:40,nit: Could use C++17 string literals,https://github.com/bitcoin/bitcoin/pull/21438#discussion_r594492662,594492662,src/test/util_tests.cpp
jonatack,2021-03-15 18:54:40,"thanks, done",https://github.com/bitcoin/bitcoin/pull/21438#discussion_r594603044,594603044,src/test/util_tests.cpp
MarcoFalke,2021-03-15 19:19:15,"`\` is greedy and will eat (up to three?) digits that follow it. You'll have to split the string.\n\n\nE.g.\n```\nsrc/test/util_tests.cpp:    BOOST_CHECK(!ParseMoney(""\0"" ""1""s, ret));\n",https://github.com/bitcoin/bitcoin/pull/21438#discussion_r594618334,594618334,src/test/util_tests.cpp
MarcoFalke,2021-03-15 19:20:39,"Maybe make it a global constant, so that it can be used in the other test cases as well?",https://github.com/bitcoin/bitcoin/pull/21438#discussion_r594619300,594619300,src/test/util_tests.cpp
jonatack,2021-03-15 22:18:52,"Good point, thanks! Done (I think).",https://github.com/bitcoin/bitcoin/pull/21438#discussion_r594721872,594721872,src/test/util_tests.cpp
