[
  {
    "sha": "24c6546946f28951aaef7631451a8490888a92b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNGM2NTQ2OTQ2ZjI4OTUxYWFlZjc2MzE0NTFhODQ5MDg4OGE5MmIy",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-03-14T12:10:25Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-03-15T19:50:20Z"
      },
      "message": "test: add ParseUInt8() unit and fuzz test coverage",
      "tree": {
        "sha": "ce2bb7883171fae91cbf54cda5630e69a9af6fd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce2bb7883171fae91cbf54cda5630e69a9af6fd0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24c6546946f28951aaef7631451a8490888a92b2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmBPuoIACgkQT1chs9Dj\nkh27JBAAr3XtWNdOU45ApWhQidMzAwymphuIS6wRNUHIqHKCthSZIkDbvAcXIxh3\nGQsKcnTycVpPUetVadXCDY3b4a1TTNX6BX3RrMUqU8VDn19iwf0LkdH1smhXqDjD\no+SWVU99jMsqSjOe8nd8Hl96Hod2ha28UXRiHTlQQ1YzgcRbYO4XfcWf/5qmrTRY\n9WB4PcUcF3tamRHrhfkcy+IXotI+1D8kFZrGeLF/AxgsBLJTFQPzohAHtdc/vXhV\nqyworoaGylQ/JFix9k9GvlQk92YbkSUk3frQhugmAc2zUXzEXWFUXaQjNwtHBac7\n+hCBY8YfVv/OOLqdTahK7HMDdOOm/RVIZwwBQ/pHV4XlahfcCrNWpGEEMe5e3eAN\nYtg3Kk10Ch1phq1uuMFnl7cYcnomArmXG8IKDbAR527VBFEsFPyf7li9SXUL/+Ug\nu8KqJf/L9y730qdDRKHSzCA/2dO/dhuM5zPWlzaRyvqsgst6QccL/7jawwo+1/5V\nSXZJrHUkkW/X9QGFLowZR06WSjy1Saxppbh1cBDPF1qei1BX3lwk+H7ouxK0Mo51\n8tgOVQjjbDQIanOwsTdczWCZ83mUrATI1Y+adG5RIJaWIaWECyPgbIctWgA8TE6u\njRjPMMBVlYURZ6IKWBX8C2yFA4xxI/4zqJFtauxYQGPG1KEd/is=\n=QCFl\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwILQtDYGyr/7dxaAwDI/H8++uCUbyEvBNCBQKuQe8olAWCP/wEGd02lyY71sx\nIPX+G6VTn8oI8QRgT7qD8AhiWHjYY4tjrgCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEMQQoF61oa7VKXusrsqO\nIvII8QRgT7qE8AiWer407K4elgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wENsz/M4P2fIDo7fDz6PGqJ4I8QRgT6yt8AjsEd7X\noIfhLwCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3\nYWxsLmNvbfAQ/R6v6504oAvpImxCQEaGRQjxBGBPuoPwCChJ9/Lawob2AIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ce2bb7883171fae91cbf54cda5630e69a9af6fd0\nparent 3c631917f3e0da84ee48295b7d2e93bc202bae0c\nauthor Jon Atack <jon@atack.com> 1615723825 +0100\ncommitter Jon Atack <jon@atack.com> 1615837820 +0100\n\ntest: add ParseUInt8() unit and fuzz test coverage\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24c6546946f28951aaef7631451a8490888a92b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/24c6546946f28951aaef7631451a8490888a92b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24c6546946f28951aaef7631451a8490888a92b2/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c631917f3e0da84ee48295b7d2e93bc202bae0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c631917f3e0da84ee48295b7d2e93bc202bae0c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c631917f3e0da84ee48295b7d2e93bc202bae0c"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 39,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1ad5fb6a05fd7cfb4ef134c4bcb1b6464d02d0a0",
        "filename": "src/test/fuzz/parse_numbers.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24c6546946f28951aaef7631451a8490888a92b2/src/test/fuzz/parse_numbers.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24c6546946f28951aaef7631451a8490888a92b2/src/test/fuzz/parse_numbers.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/parse_numbers.cpp?ref=24c6546946f28951aaef7631451a8490888a92b2",
        "patch": "@@ -18,6 +18,9 @@ FUZZ_TARGET(parse_numbers)\n     double d;\n     (void)ParseDouble(random_string, &d);\n \n+    uint8_t u8;\n+    (void)ParseUInt8(random_string, &u8);\n+\n     int32_t i32;\n     (void)ParseInt32(random_string, &i32);\n     (void)atoi(random_string);"
      },
      {
        "sha": "d6f71fb1cb54709c4e4764b4dca809d9ca1bc0bb",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24c6546946f28951aaef7631451a8490888a92b2/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24c6546946f28951aaef7631451a8490888a92b2/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=24c6546946f28951aaef7631451a8490888a92b2",
        "patch": "@@ -1490,6 +1490,42 @@ BOOST_AUTO_TEST_CASE(test_ParseInt64)\n     BOOST_CHECK(!ParseInt64(\"32482348723847471234\", nullptr));\n }\n \n+BOOST_AUTO_TEST_CASE(test_ParseUInt8)\n+{\n+    uint8_t n;\n+    // Valid values\n+    BOOST_CHECK(ParseUInt8(\"255\", nullptr));\n+    BOOST_CHECK(ParseUInt8(\"0\", &n) && n == 0);\n+    BOOST_CHECK(ParseUInt8(\"255\", &n) && n == 255);\n+    BOOST_CHECK(ParseUInt8(\"0255\", &n) && n == 255); // no octal\n+    BOOST_CHECK(ParseUInt8(\"255\", &n) && n == static_cast<uint8_t>(255));\n+    BOOST_CHECK(ParseUInt8(\"+255\", &n) && n == 255);\n+    BOOST_CHECK(ParseUInt8(\"00000000000000000012\", &n) && n == 12);\n+    BOOST_CHECK(ParseUInt8(\"00000000000000000000\", &n) && n == 0);\n+    // Invalid values\n+    BOOST_CHECK(!ParseUInt8(\"-00000000000000000000\", &n));\n+    BOOST_CHECK(!ParseUInt8(\"\", &n));\n+    BOOST_CHECK(!ParseUInt8(\" 1\", &n)); // no padding inside\n+    BOOST_CHECK(!ParseUInt8(\" -1\", &n));\n+    BOOST_CHECK(!ParseUInt8(\"++1\", &n));\n+    BOOST_CHECK(!ParseUInt8(\"+-1\", &n));\n+    BOOST_CHECK(!ParseUInt8(\"-+1\", &n));\n+    BOOST_CHECK(!ParseUInt8(\"--1\", &n));\n+    BOOST_CHECK(!ParseUInt8(\"-1\", &n));\n+    BOOST_CHECK(!ParseUInt8(\"1 \", &n));\n+    BOOST_CHECK(!ParseUInt8(\"1a\", &n));\n+    BOOST_CHECK(!ParseUInt8(\"aap\", &n));\n+    BOOST_CHECK(!ParseUInt8(\"0x1\", &n)); // no hex\n+    BOOST_CHECK(!ParseUInt8(\"0x1\", &n)); // no hex\n+    BOOST_CHECK(!ParseUInt8(\"1\"s \"\\0\" \"1\"s, &n)); // no embedded NULs\n+    // Overflow and underflow\n+    BOOST_CHECK(!ParseUInt8(\"-255\", &n));\n+    BOOST_CHECK(!ParseUInt8(\"256\", &n));\n+    BOOST_CHECK(!ParseUInt8(\"-123\", &n));\n+    BOOST_CHECK(!ParseUInt8(\"-123\", nullptr));\n+    BOOST_CHECK(!ParseUInt8(\"256\", nullptr));\n+}\n+\n BOOST_AUTO_TEST_CASE(test_ParseUInt32)\n {\n     uint32_t n;"
      }
    ]
  },
  {
    "sha": "76782e560b87dc87296144aeb4ee85eb3763b8e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Njc4MmU1NjBiODdkYzg3Mjk2MTQ0YWViNGVlODVlYjM3NjNiOGU5",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-03-15T22:12:36Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-03-15T22:13:52Z"
      },
      "message": "refactor: reuse test string with embedded null char in util_tests",
      "tree": {
        "sha": "d70f9da5b773bb624ef45c0021cc849fcae1868b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d70f9da5b773bb624ef45c0021cc849fcae1868b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76782e560b87dc87296144aeb4ee85eb3763b8e9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmBP3F0ACgkQT1chs9Dj\nkh31MxAAx27E2aS2ugI2YNvFlmDFJiYk0LMb0d6CFsoByE5C9CdLvtj1kQ+Td9Up\n/GjHMOHu8KlQ95YWiQVYalUj44YeUInSuKZC5x4qeQHJhjl+wqmQTVuZsIiuR7xK\n67K/WsQjNDeu0rAHRs2Q33dLTJISHMV06pmln1MGI+Q1V/2z1h96g3qFdKWRVi8a\nsaAlNG1ALnM8qLDV5kKbv1vxf6jJ/gPl27nAN7p8iv5R5A56OU/H1xV+dri563QY\nka/vlIqw+v3IGS8OUa7gdh3gAuNdy6V4Pa8ralqBkfCDgXXrs5xGW1DC1oCaNetk\n5SVzpXpDoWMkSlh5Xr2/Dl6sXYL0ZPhwRq4rq1KJSDVs3iavLMls/xHv3MRPDv0m\nWGpyatGWO8j4QnhprvHiu+j2ZNkqIDbN8QTTMXa5ATOFne0SCbR2Hli/6dNM4SeX\n+NuQaZairqs8WpeI/bkOwDZuVSqwczC3DgFG5OC4YLKZwuwbsjwoFZefAIORiTx4\nAVTGXetohm84dkUvE1pml2THNcCn5phxVliMMMns2MQhNpmeEQk0nuUJIZ7ZLtrA\njDdokpDjGISJWdETjNfhqLQEuQZX0omcLrLxzOhFCARsx/W1e3ndWxUb4/RuREOv\nCyFidgCoW3AXB6/yHH15Olz3Pik3h+ZuhoAof2ka+fQEkcaBh6c=\n=x1Tl\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJZ6rRBwUgDqqKg55xVEVk7UqRCDmVGmRKo+m+4jGI9kCP/wEESV9bTxjQsE\naixDyDnFU2kI8QRgT86J8Ai2KtHXkAqr2gCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEE4Hhpl+VcffOG8MwCLJ3QAI\n8QRgT9xe8Aj8qU721vXpGwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIu\nY2F0YWxsYXh5LmNvbf/wEG3B+70b7rHZGpg4UqE1Q8kI8QRgT9xe8AgD1hgc1KWW\nnwCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3Rh\nbXBzLm9yZ/AQ4dNKHhPrxbGngigZqm+3HQjxBGBP3F3wCIHsdPUVNrR6AIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree d70f9da5b773bb624ef45c0021cc849fcae1868b\nparent 24c6546946f28951aaef7631451a8490888a92b2\nauthor Jon Atack <jon@atack.com> 1615846356 +0100\ncommitter Jon Atack <jon@atack.com> 1615846432 +0100\n\nrefactor: reuse test string with embedded null char in util_tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76782e560b87dc87296144aeb4ee85eb3763b8e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/76782e560b87dc87296144aeb4ee85eb3763b8e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76782e560b87dc87296144aeb4ee85eb3763b8e9/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "24c6546946f28951aaef7631451a8490888a92b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24c6546946f28951aaef7631451a8490888a92b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/24c6546946f28951aaef7631451a8490888a92b2"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 8,
      "deletions": 17
    },
    "files": [
      {
        "sha": "b1b71ef7c990bb3bf63bba307ca37ef26d422e04",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 17,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76782e560b87dc87296144aeb4ee85eb3763b8e9/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76782e560b87dc87296144aeb4ee85eb3763b8e9/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=76782e560b87dc87296144aeb4ee85eb3763b8e9",
        "patch": "@@ -38,6 +38,7 @@\n #include <boost/test/unit_test.hpp>\n \n using namespace std::literals;\n+static const std::string STRING_WITH_EMBEDDED_NULL_CHAR{\"1\"s \"\\0\" \"1\"s};\n \n /* defined in logging.cpp */\n namespace BCLog {\n@@ -1272,7 +1273,7 @@ BOOST_AUTO_TEST_CASE(util_ParseMoney)\n \n     // Parsing strings with embedded NUL characters should fail\n     BOOST_CHECK(!ParseMoney(\"\\0-1\"s, ret));\n-    BOOST_CHECK(!ParseMoney(\"\\0\" \"1\"s, ret));\n+    BOOST_CHECK(!ParseMoney(STRING_WITH_EMBEDDED_NULL_CHAR, ret));\n     BOOST_CHECK(!ParseMoney(\"1\\0\"s, ret));\n }\n \n@@ -1450,9 +1451,7 @@ BOOST_AUTO_TEST_CASE(test_ParseInt32)\n     BOOST_CHECK(!ParseInt32(\"aap\", &n));\n     BOOST_CHECK(!ParseInt32(\"0x1\", &n)); // no hex\n     BOOST_CHECK(!ParseInt32(\"0x1\", &n)); // no hex\n-    const char test_bytes[] = {'1', 0, '1'};\n-    std::string teststr(test_bytes, sizeof(test_bytes));\n-    BOOST_CHECK(!ParseInt32(teststr, &n)); // no embedded NULs\n+    BOOST_CHECK(!ParseInt32(STRING_WITH_EMBEDDED_NULL_CHAR, &n));\n     // Overflow and underflow\n     BOOST_CHECK(!ParseInt32(\"-2147483649\", nullptr));\n     BOOST_CHECK(!ParseInt32(\"2147483648\", nullptr));\n@@ -1480,9 +1479,7 @@ BOOST_AUTO_TEST_CASE(test_ParseInt64)\n     BOOST_CHECK(!ParseInt64(\"1a\", &n));\n     BOOST_CHECK(!ParseInt64(\"aap\", &n));\n     BOOST_CHECK(!ParseInt64(\"0x1\", &n)); // no hex\n-    const char test_bytes[] = {'1', 0, '1'};\n-    std::string teststr(test_bytes, sizeof(test_bytes));\n-    BOOST_CHECK(!ParseInt64(teststr, &n)); // no embedded NULs\n+    BOOST_CHECK(!ParseInt64(STRING_WITH_EMBEDDED_NULL_CHAR, &n));\n     // Overflow and underflow\n     BOOST_CHECK(!ParseInt64(\"-9223372036854775809\", nullptr));\n     BOOST_CHECK(!ParseInt64(\"9223372036854775808\", nullptr));\n@@ -1517,7 +1514,7 @@ BOOST_AUTO_TEST_CASE(test_ParseUInt8)\n     BOOST_CHECK(!ParseUInt8(\"aap\", &n));\n     BOOST_CHECK(!ParseUInt8(\"0x1\", &n)); // no hex\n     BOOST_CHECK(!ParseUInt8(\"0x1\", &n)); // no hex\n-    BOOST_CHECK(!ParseUInt8(\"1\"s \"\\0\" \"1\"s, &n)); // no embedded NULs\n+    BOOST_CHECK(!ParseUInt8(STRING_WITH_EMBEDDED_NULL_CHAR, &n));\n     // Overflow and underflow\n     BOOST_CHECK(!ParseUInt8(\"-255\", &n));\n     BOOST_CHECK(!ParseUInt8(\"256\", &n));\n@@ -1555,9 +1552,7 @@ BOOST_AUTO_TEST_CASE(test_ParseUInt32)\n     BOOST_CHECK(!ParseUInt32(\"aap\", &n));\n     BOOST_CHECK(!ParseUInt32(\"0x1\", &n)); // no hex\n     BOOST_CHECK(!ParseUInt32(\"0x1\", &n)); // no hex\n-    const char test_bytes[] = {'1', 0, '1'};\n-    std::string teststr(test_bytes, sizeof(test_bytes));\n-    BOOST_CHECK(!ParseUInt32(teststr, &n)); // no embedded NULs\n+    BOOST_CHECK(!ParseUInt32(STRING_WITH_EMBEDDED_NULL_CHAR, &n));\n     // Overflow and underflow\n     BOOST_CHECK(!ParseUInt32(\"-2147483648\", &n));\n     BOOST_CHECK(!ParseUInt32(\"4294967296\", &n));\n@@ -1586,9 +1581,7 @@ BOOST_AUTO_TEST_CASE(test_ParseUInt64)\n     BOOST_CHECK(!ParseUInt64(\"1a\", &n));\n     BOOST_CHECK(!ParseUInt64(\"aap\", &n));\n     BOOST_CHECK(!ParseUInt64(\"0x1\", &n)); // no hex\n-    const char test_bytes[] = {'1', 0, '1'};\n-    std::string teststr(test_bytes, sizeof(test_bytes));\n-    BOOST_CHECK(!ParseUInt64(teststr, &n)); // no embedded NULs\n+    BOOST_CHECK(!ParseUInt64(STRING_WITH_EMBEDDED_NULL_CHAR, &n));\n     // Overflow and underflow\n     BOOST_CHECK(!ParseUInt64(\"-9223372036854775809\", nullptr));\n     BOOST_CHECK(!ParseUInt64(\"18446744073709551616\", nullptr));\n@@ -1618,9 +1611,7 @@ BOOST_AUTO_TEST_CASE(test_ParseDouble)\n     BOOST_CHECK(!ParseDouble(\"1a\", &n));\n     BOOST_CHECK(!ParseDouble(\"aap\", &n));\n     BOOST_CHECK(!ParseDouble(\"0x1\", &n)); // no hex\n-    const char test_bytes[] = {'1', 0, '1'};\n-    std::string teststr(test_bytes, sizeof(test_bytes));\n-    BOOST_CHECK(!ParseDouble(teststr, &n)); // no embedded NULs\n+    BOOST_CHECK(!ParseDouble(STRING_WITH_EMBEDDED_NULL_CHAR, &n));\n     // Overflow and underflow\n     BOOST_CHECK(!ParseDouble(\"-1e10000\", nullptr));\n     BOOST_CHECK(!ParseDouble(\"1e10000\", nullptr));"
      }
    ]
  }
]