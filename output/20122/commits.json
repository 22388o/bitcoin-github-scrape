[
  {
    "sha": "91bdd439987fb3f24f9b841fe88b3cf416b38f48",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MWJkZDQzOTk4N2ZiM2YyNGY5Yjg0MWZlODhiM2NmNDE2YjM4ZjQ4",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-10-11T18:17:48Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-10-11T18:17:48Z"
      },
      "message": "util: Allow Assert(...) to be used in all contexts",
      "tree": {
        "sha": "fc4e69eaa91a1460771690c51b8a40e52232aa08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc4e69eaa91a1460771690c51b8a40e52232aa08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91bdd439987fb3f24f9b841fe88b3cf416b38f48",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91bdd439987fb3f24f9b841fe88b3cf416b38f48",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/91bdd439987fb3f24f9b841fe88b3cf416b38f48",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91bdd439987fb3f24f9b841fe88b3cf416b38f48/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b2abaa666d6f3331e3246ffd64dd47946e9dcdf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b2abaa666d6f3331e3246ffd64dd47946e9dcdf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b2abaa666d6f3331e3246ffd64dd47946e9dcdf"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "aca0c3d9f91bbf76cbe33be6cdd1fc2a472e458e",
        "filename": "src/util/check.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91bdd439987fb3f24f9b841fe88b3cf416b38f48/src/util/check.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91bdd439987fb3f24f9b841fe88b3cf416b38f48/src/util/check.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/check.h?ref=91bdd439987fb3f24f9b841fe88b3cf416b38f48",
        "patch": "@@ -54,6 +54,6 @@ T get_pure_r_value(T&& val)\n }\n \n /** Identity function. Abort if the value compares equal to zero */\n-#define Assert(val) [&]() -> decltype(get_pure_r_value(val)) { auto&& check = (val); assert(#val && check); return std::forward<decltype(get_pure_r_value(val))>(check); }()\n+#define Assert(val) ([&]() -> decltype(get_pure_r_value(val)) { auto&& check = (val); assert(#val && check); return std::forward<decltype(get_pure_r_value(val))>(check); }())\n \n #endif // BITCOIN_UTIL_CHECK_H"
      }
    ]
  },
  {
    "sha": "d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjk3ZTNjNDAxNzlkZmExZmY0MWVhNzg0M2MzYWM3YmRmYjQwNzZl",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-10-11T18:20:11Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-10-11T18:27:19Z"
      },
      "message": "Use Assert(...) to make implicit assumptions explicit",
      "tree": {
        "sha": "87c55ca14930623f143eefb816972130c1e8557e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87c55ca14930623f143eefb816972130c1e8557e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "91bdd439987fb3f24f9b841fe88b3cf416b38f48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91bdd439987fb3f24f9b841fe88b3cf416b38f48",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/91bdd439987fb3f24f9b841fe88b3cf416b38f48"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d62ddf62719bce15d9c72d090709b156b56df0cc",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
        "patch": "@@ -12,6 +12,7 @@\n #include <primitives/block.h>\n #include <tinyformat.h>\n #include <uint256.h>\n+#include <util/check.h>\n \n #include <vector>\n \n@@ -400,7 +401,7 @@ class CChain {\n \n     /** Efficiently check whether a block is present in this chain. */\n     bool Contains(const CBlockIndex *pindex) const {\n-        return (*this)[pindex->nHeight] == pindex;\n+        return (*this)[Assert(pindex)->nHeight] == pindex;\n     }\n \n     /** Find the successor of a block in this chain, or nullptr if the given index is not found or is the tip. */"
      },
      {
        "sha": "6d9a8362ec4276116f92e9565df9791c96e8f048",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
        "patch": "@@ -4273,7 +4273,7 @@ bool PeerManager::SendMessages(CNode* pto)\n                     bool fGotBlockFromCache = false;\n                     {\n                         LOCK(cs_most_recent_block);\n-                        if (most_recent_block_hash == pBestIndex->GetBlockHash()) {\n+                        if (most_recent_block_hash == Assert(pBestIndex)->GetBlockHash()) {\n                             if (state.fWantsCmpctWitness || !fWitnessesPresentInMostRecentCompactBlock)\n                                 m_connman.PushMessage(pto, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, *most_recent_compact_block));\n                             else {"
      },
      {
        "sha": "20054ac52bb03cde330e4f2921004b31e7b7bc8c",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=d697e3c40179dfa1ff41ea7843c3ac7bdfb4076e",
        "patch": "@@ -4321,7 +4321,7 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n         return error(\"VerifyDB(): *** coin database inconsistencies found (last %i blocks, %i good transactions before that)\\n\", ::ChainActive().Height() - pindexFailure->nHeight + 1, nGoodTransactions);\n \n     // store block count as we move pindex at check level >= 4\n-    int block_count = ::ChainActive().Height() - pindex->nHeight;\n+    int block_count = ::ChainActive().Height() - Assert(pindex)->nHeight;\n \n     // check level 4: try reconnecting blocks\n     if (nCheckLevel >= 4) {"
      }
    ]
  }
]