Sjors,2019-06-29 16:27:44,"Concept ACK, but I get three warnings on macOS:\n\n```\ntest/script_tests.cpp:489:13: warning: unknown pragma ignored [-Wunknown-pragmas]\n#pragma GCC push_options\n            ^\ntest/script_tests.cpp:490:13: warning: unknown pragma ignored [-Wunknown-pragmas]\n#pragma GCC optimize (""O0"")\n            ^\ntest/script_tests.cpp:969:13: warning: unknown pragma ignored [-Wunknown-pragmas]\n",https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-506969777,506969777,
practicalswift,2019-06-30 07:35:49,"~@Sjors Are you sure you are testing against the latest version (e87b991b5de7f98d3b260c44b97f154bd40a386b) which has the `ifdef`? If so, what compiler are you using?~\n\n@Sjors Thanks for testing! Please try the latest version - the unknown pragma warning should be addressed :-)\n\n@fanquake The 0.5 GB part is highly relevant for reviewer interest and should be in the title, no?",https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-507015021,507015021,
practicalswift,2019-06-30 09:21:34,"@practicalswift Ideally yes, but at the cost of a +0.5 GB memory requirement? :-)",https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-507021323,507021323,
promag,2019-06-30 09:30:25,IMHO yes.,https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-507021813,507021813,
practicalswift,2019-06-30 16:07:43,"@promag Oh, that is surprising. Care to elaborate? What potentials problems do you see? I'm not sure I follow your reasoning here TBH :-)\n\n",https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-507048099,507048099,
promag,2019-06-30 16:17:51,"I'm not saying there are problems, just that it should use the same compiler flags.\n\nWould breaking the file help?\n\nBTW, is the test slower?",https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-507048806,507048806,
practicalswift,2019-06-30 19:54:16,"@promag I still don't follow. It seemed like you saw some potential problems with this PR ""because of inlined code and templates""? I fail to see those problems so that's why I need your clarification - otherwise it is very hard to address your concerns properly :-)",https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-507062695,507062695,
promag,2019-06-30 20:17:50,Generically speaking inlined code and templates will be compiled and tested differently correct?,https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-507064334,507064334,
practicalswift,2019-06-30 20:51:26,"> Would breaking the file help?\n\nUnfortunately not: max RSS when compiling only `script_build` is 1.2 GB.\n\n> BTW, is the test slower?\n\nThere is no measurable difference: the run-time of `script_tests/script_build` is ~380 ms regardless of optimisation level.",https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-507066582,507066582,
laanwj,2019-07-02 11:42:59,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-507640381,507640381,
Sjors,2019-07-02 14:51:11,"@promag afaik the compiler flags used for the test have no impact on the binary code produced for the file that's being tested. If that's the case, then there's no reason to believe that these new tests would miss any problems.\n\n@practicalswift the warnings have gone away\n\n ACK d522fdd, but that only covers not breaking macOS.",https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-507712065,507712065,
MarcoFalke,2019-07-02 14:58:19,"I am not too happy about pushing and popping compiler arguments on a per-file basis.\n\nAlso, I'd first like to understand why it is using so much memory. Clang 9.0 hast `-ftime-trace`, maybe gcc has something similar.",https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-507715059,507715059,
promag,2019-07-02 15:11:03,"@Sjors I know that, see https://stackoverflow.com/questions/6364365/can-different-optimization-levels-lead-to-functionally-different-code, and considering the test file in question why risk some weird case?\n\nAgree with @MarcoFalke regarding other approaches to reduce mem usage.",https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-507720397,507720397,
practicalswift,2019-07-03 11:24:45,@MarcoFalke The reason for the absurd memory use is `-fvar-tracking` (in combination with `-g`). See #16331 for alternative way to handle this.,https://github.com/bitcoin/bitcoin/pull/16312#issuecomment-508053251,508053251,
