[
  {
    "sha": "4bce61519f51c0e6edb18de8e06e485d550573c0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YmNlNjE1MTlmNTFjMGU2ZWRiMThkZThlMDZlNDg1ZDU1MDU3M2Mw",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-03-17T20:51:54Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-03-17T20:54:34Z"
      },
      "message": "doc: Improve translatable strings after Transifex issues",
      "tree": {
        "sha": "5eec0ce3d66490242b3a7a8f4f7a23568b26f38c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5eec0ce3d66490242b3a7a8f4f7a23568b26f38c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4bce61519f51c0e6edb18de8e06e485d550573c0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmBSbIoACgkQQQEIES5+\nqB/pnBAAshWPwOuFKCafay61J7Yn9fu7Gpy22pgzgOIUu4z/nu1UBs6h8aDrwoBB\nG7XdCL3ZH9r4Bt5TPMn4ob9yHtLD4xJwzUFuLWDqqHoL5WqdYtwkSchO7m8nMnxm\nNy79W/NOKxjJmzEI6PIU0RwHuv3RomkLKvJsv0Khponxed5SAVOx/W60rfblpxim\n2wdDIvzhPBg2gb966WKIxa8sff52tzn/zfbJ143Sa1rrcauPkLSCNhuwkrov0jN2\nBVavbTgMmL4KEmay3t3x7xUcmtTwwLSOfn4q7AQRlJ0CUl07F9Cu3cMZxsrDsQDa\ngVa3e8zq/807sq60kFCp+Z9iTQaFg+1+Rxqy3Du5zZUahFG1AXaoPoavpe47pIA3\nIsVIARtA2/wgSZeh5nHowE8NYkBj6xbL8v85WAGKl5Q4AR/ZjJzj3SQ3rQYxVYjL\nMhU3zplO0zFz6aYuCvk55m2aofDydBtZI/EihP+8TSLf8KaAHQ6Tynnsfq+w/Sru\nQNYtobbFv9HKhpe5rAFEtDGtOVOUO2hISPKYthCkIIBL8+8XzKnPDD1h4T3QY5Kn\nHM0hg5ZScAaWfgi7SjHcFdIFxb53Z/DxpkLx0NIdpMirLJAbUQvEjypBUrGAs8ML\nC9dK6OOuJsYgGeYTKFST1iqA80kWnV/S3S1IobrIvr+z6yhAsu8=\n=LSq+\n-----END PGP SIGNATURE-----",
        "payload": "tree 5eec0ce3d66490242b3a7a8f4f7a23568b26f38c\nparent a9d1b40d53ec417eefbe767aa66701ef8e1801d5\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1616014314 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1616014474 +0200\n\ndoc: Improve translatable strings after Transifex issues\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bce61519f51c0e6edb18de8e06e485d550573c0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4bce61519f51c0e6edb18de8e06e485d550573c0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bce61519f51c0e6edb18de8e06e485d550573c0/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9d1b40d53ec417eefbe767aa66701ef8e1801d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9d1b40d53ec417eefbe767aa66701ef8e1801d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9d1b40d53ec417eefbe767aa66701ef8e1801d5"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 18,
      "deletions": 18
    },
    "files": [
      {
        "sha": "5826f7fc069e8693e468637d525ff59a01ff6278",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=4bce61519f51c0e6edb18de8e06e485d550573c0",
        "patch": "@@ -364,9 +364,9 @@ void BitcoinGUI::createActions()\n     showHelpMessageAction->setMenuRole(QAction::NoRole);\n     showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Bitcoin command-line options\").arg(PACKAGE_NAME));\n \n-    m_mask_values_action = new QAction(tr(\"&Mask values\"), this);\n+    m_mask_values_action = new QAction(tr(\"&Mask amounts\"), this);\n     m_mask_values_action->setShortcut(QKeySequence(Qt::CTRL + Qt::SHIFT + Qt::Key_M));\n-    m_mask_values_action->setStatusTip(tr(\"Mask the values in the Overview tab\"));\n+    m_mask_values_action->setStatusTip(tr(\"Mask amounts in the Overview tab\"));\n     m_mask_values_action->setCheckable(true);\n \n     connect(quitAction, &QAction::triggered, qApp, QApplication::quit);"
      },
      {
        "sha": "8fd097a14a626d786a07288c1fcb70231a9c2d62",
        "filename": "src/qt/forms/receivecoinsdialog.ui",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/forms/receivecoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/forms/receivecoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receivecoinsdialog.ui?ref=4bce61519f51c0e6edb18de8e06e485d550573c0",
        "patch": "@@ -212,10 +212,10 @@\n              <enum>Qt::StrongFocus</enum>\n             </property>\n             <property name=\"toolTip\">\n-             <string>Native segwit addresses (aka Bech32 or BIP-173) reduce your transaction fees later on and offer better protection against typos, but old wallets don't support them. When unchecked, an address compatible with older wallets will be created instead.</string>\n+             <string>Native SegWit addresses (aka Bech32 or BIP-173) reduce your transaction fees later on and offer better protection against typos, but old wallets don't support them. When unchecked, an address compatible with older wallets will be created instead.</string>\n             </property>\n             <property name=\"text\">\n-             <string>Generate native segwit (Bech32) address</string>\n+             <string>Generate native SegWit (Bech32) address</string>\n             </property>\n            </widget>\n           </item>"
      },
      {
        "sha": "53b1b74d888e2a502e0783bfc711587ba754766f",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=4bce61519f51c0e6edb18de8e06e485d550573c0",
        "patch": "@@ -188,7 +188,7 @@ void OverviewPage::setPrivacy(bool privacy)\n \n     ui->listTransactions->setVisible(!m_privacy);\n \n-    const QString status_tip = m_privacy ? tr(\"Privacy mode activated for the Overview tab. To unmask the values, uncheck Settings->Mask values.\") : \"\";\n+    const QString status_tip = m_privacy ? tr(\"Privacy mode activated for the Overview tab. To unmask the amounts, uncheck Settings->Mask amounts.\") : \"\";\n     setStatusTip(status_tip);\n     QStatusTipEvent event(status_tip);\n     QApplication::sendEvent(this, &event);"
      },
      {
        "sha": "a3704006ff385b2391ba58d360569432b9edded9",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=4bce61519f51c0e6edb18de8e06e485d550573c0",
        "patch": "@@ -237,7 +237,7 @@ void PaymentServer::handleURIOrFile(const QString& s)\n                         Q_EMIT message(tr(\"URI handling\"),\n                             tr(\"Cannot process payment request because BIP70 is not supported.\")+\n                             tr(\"Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.\")+\n-                            tr(\"If you are receiving this error you should request the merchant provide a BIP21 compatible URI.\"),\n+                            tr(\"If you are receiving this error, you should request from the merchant to provide a BIP21 compatible URI.\"),\n                             CClientUIInterface::ICON_WARNING);\n                     }\n                     Q_EMIT message(tr(\"URI handling\"), tr(\"Invalid payment address %1\").arg(recipient.address),\n@@ -260,7 +260,7 @@ void PaymentServer::handleURIOrFile(const QString& s)\n         Q_EMIT message(tr(\"Payment request file handling\"),\n             tr(\"Cannot process payment request because BIP70 is not supported.\")+\n             tr(\"Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.\")+\n-            tr(\"If you are receiving this error you should request the merchant provide a BIP21 compatible URI.\"),\n+            tr(\"If you are receiving this error, you should request from the merchant to provide a BIP21 compatible URI.\"),\n             CClientUIInterface::ICON_WARNING);\n     }\n }"
      },
      {
        "sha": "944b4b776dda846b41e222c42466c2e8f72eee74",
        "filename": "src/qt/psbtoperationsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/psbtoperationsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/psbtoperationsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/psbtoperationsdialog.cpp?ref=4bce61519f51c0e6edb18de8e06e485d550573c0",
        "patch": "@@ -83,7 +83,7 @@ void PSBTOperationsDialog::signTransaction()\n         showStatus(tr(\"Signed %1 inputs, but more signatures are still required.\").arg(n_signed),\n             StatusLevel::INFO);\n     } else {\n-        showStatus(tr(\"Signed transaction successfully. Transaction is ready to broadcast.\"),\n+        showStatus(tr(\"Signed transaction successfully. Transaction is ready to be broadcast.\"),\n             StatusLevel::INFO);\n         m_ui->broadcastTransactionButton->setEnabled(true);\n     }\n@@ -141,7 +141,7 @@ void PSBTOperationsDialog::saveTransaction() {\n     filename_suggestion.append(\".psbt\");\n     QString filename = GUIUtil::getSaveFileName(this,\n         tr(\"Save Transaction Data\"), filename_suggestion,\n-        tr(\"Partially Signed Transaction (Binary)\", \"Name of binary PSBT file format\") + QLatin1String(\" (*.psbt)\"), &selected_filter);\n+        tr(\"Partially Signed Bitcoin Transaction (Binary)\", \"Name of binary PSBT file format\") + QLatin1String(\" (*.psbt)\"), &selected_filter);\n     if (filename.isEmpty()) {\n         return;\n     }"
      },
      {
        "sha": "7d67750ee6840971e4925fc6a463b2e4ff7a94de",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=4bce61519f51c0e6edb18de8e06e485d550573c0",
        "patch": "@@ -430,7 +430,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n             fileNameSuggestion.append(\".psbt\");\n             QString filename = GUIUtil::getSaveFileName(this,\n                 tr(\"Save Transaction Data\"), fileNameSuggestion,\n-                tr(\"Partially Signed Transaction (Binary)\", \"Name of binary PSBT file format\") + QLatin1String(\" (*.psbt)\"), &selectedFilter);\n+                tr(\"Partially Signed Bitcoin Transaction (Binary)\", \"Name of binary PSBT file format\") + QLatin1String(\" (*.psbt)\"), &selectedFilter);\n             if (filename.isEmpty()) {\n                 return;\n             }"
      },
      {
        "sha": "e6004e90881a3e4a8be15ba6371751686258a530",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bce61519f51c0e6edb18de8e06e485d550573c0/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=4bce61519f51c0e6edb18de8e06e485d550573c0",
        "patch": "@@ -214,13 +214,13 @@ void WalletView::gotoLoadPSBT(bool from_clipboard)\n         bool invalid;\n         data = DecodeBase64(raw, &invalid);\n         if (invalid) {\n-            Q_EMIT message(tr(\"Error\"), tr(\"Unable to decode PSBT from clipboard (invalid base64)\"), CClientUIInterface::MSG_ERROR);\n+            Q_EMIT message(tr(\"Error\"), tr(\"Unable to decode PSBT from clipboard (invalid Base64)\"), CClientUIInterface::MSG_ERROR);\n             return;\n         }\n     } else {\n         QString filename = GUIUtil::getOpenFileName(this,\n             tr(\"Load Transaction Data\"), QString(),\n-            tr(\"Partially Signed Transaction (*.psbt)\"), nullptr);\n+            tr(\"Partially Signed Bitcoin Transaction (*.psbt)\"), nullptr);\n         if (filename.isEmpty()) return;\n         if (GetFileSize(filename.toLocal8Bit().data(), MAX_FILE_SIZE_PSBT) == MAX_FILE_SIZE_PSBT) {\n             Q_EMIT message(tr(\"Error\"), tr(\"PSBT file must be smaller than 100 MiB\"), CClientUIInterface::MSG_ERROR);"
      },
      {
        "sha": "244779f52d61b91177d06bce112c07d8f614acad",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bce61519f51c0e6edb18de8e06e485d550573c0/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bce61519f51c0e6edb18de8e06e485d550573c0/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=4bce61519f51c0e6edb18de8e06e485d550573c0",
        "patch": "@@ -1403,7 +1403,7 @@ static RPCHelpMan finalizepsbt()\n static RPCHelpMan createpsbt()\n {\n     return RPCHelpMan{\"createpsbt\",\n-                \"\\nCreates a transaction in the Partially Signed Transaction format.\\n\"\n+                \"\\nCreates a transaction in the Partially Signed Bitcoin Transaction format.\\n\"\n                 \"Implements the Creator role.\\n\",\n                 {\n                     {\"inputs\", RPCArg::Type::ARR, RPCArg::Optional::NO, \"The json objects\","
      },
      {
        "sha": "2894700b71b4886e3b38cecd5c00a747960ba2f7",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bce61519f51c0e6edb18de8e06e485d550573c0/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bce61519f51c0e6edb18de8e06e485d550573c0/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=4bce61519f51c0e6edb18de8e06e485d550573c0",
        "patch": "@@ -274,7 +274,7 @@ bool BerkeleyDatabase::Verify(bilingual_str& errorStr)\n         Db db(env->dbenv.get(), 0);\n         int result = db.verify(strFile.c_str(), nullptr, nullptr, 0);\n         if (result != 0) {\n-            errorStr = strprintf(_(\"%s corrupt. Try using the wallet tool bitcoin-wallet to salvage or restoring a backup.\"), file_path);\n+            errorStr = strprintf(_(\"%s is corrupted. Try using the bitcoin-wallet tool to salvage the wallet. Otherwise restore a backup.\"), file_path);\n             return false;\n         }\n     }"
      },
      {
        "sha": "d66897e616b350a698f17d446c668686b42d4a78",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bce61519f51c0e6edb18de8e06e485d550573c0/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bce61519f51c0e6edb18de8e06e485d550573c0/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=4bce61519f51c0e6edb18de8e06e485d550573c0",
        "patch": "@@ -4336,7 +4336,7 @@ static RPCHelpMan walletprocesspsbt()\n static RPCHelpMan walletcreatefundedpsbt()\n {\n     return RPCHelpMan{\"walletcreatefundedpsbt\",\n-                \"\\nCreates and funds a transaction in the Partially Signed Transaction format.\\n\"\n+                \"\\nCreates and funds a transaction in the Partially Signed Bitcoin Transaction format.\\n\"\n                 \"Implements the Creator and Updater roles.\\n\",\n                 {\n                     {\"inputs\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"Leave empty to add inputs automatically. See add_inputs option.\","
      },
      {
        "sha": "22d7b8947e0f1d85c6737e279370179be6a125d9",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bce61519f51c0e6edb18de8e06e485d550573c0/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bce61519f51c0e6edb18de8e06e485d550573c0/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=4bce61519f51c0e6edb18de8e06e485d550573c0",
        "patch": "@@ -124,20 +124,20 @@ bool SQLiteDatabase::Verify(bilingual_str& error)\n     int ret = sqlite3_prepare_v2(m_db, \"PRAGMA application_id\", -1, &app_id_stmt, nullptr);\n     if (ret != SQLITE_OK) {\n         sqlite3_finalize(app_id_stmt);\n-        error = strprintf(_(\"SQLiteDatabase: Failed to prepare the statement to fetch the application id: %s\"), sqlite3_errstr(ret));\n+        error = strprintf(_(\"SQLiteDatabase: Failed to prepare the statement to fetch the application ID: %s\"), sqlite3_errstr(ret));\n         return false;\n     }\n     ret = sqlite3_step(app_id_stmt);\n     if (ret != SQLITE_ROW) {\n         sqlite3_finalize(app_id_stmt);\n-        error = strprintf(_(\"SQLiteDatabase: Failed to fetch the application id: %s\"), sqlite3_errstr(ret));\n+        error = strprintf(_(\"SQLiteDatabase: Failed to fetch the application ID: %s\"), sqlite3_errstr(ret));\n         return false;\n     }\n     uint32_t app_id = static_cast<uint32_t>(sqlite3_column_int(app_id_stmt, 0));\n     sqlite3_finalize(app_id_stmt);\n     uint32_t net_magic = ReadBE32(Params().MessageStart());\n     if (app_id != net_magic) {\n-        error = strprintf(_(\"SQLiteDatabase: Unexpected application id. Expected %u, got %u\"), net_magic, app_id);\n+        error = strprintf(_(\"SQLiteDatabase: Unexpected application ID. Expected %u, got %u\"), net_magic, app_id);\n         return false;\n     }\n "
      }
    ]
  },
  {
    "sha": "9030e4b5a6de54e041c59e98d91adecbebf3611a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDMwZTRiNWE2ZGU1NGUwNDFjNTllOThkOTFhZGVjYmViZjM2MTFh",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-03-17T20:54:20Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-03-17T20:54:34Z"
      },
      "message": "doc: Replace three dots with ellipsis in all of the translatable strings",
      "tree": {
        "sha": "26dfaa96d7bc22b364cbfcdd279268be4a670c3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26dfaa96d7bc22b364cbfcdd279268be4a670c3e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9030e4b5a6de54e041c59e98d91adecbebf3611a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmBSbIoACgkQQQEIES5+\nqB+dEg/+Nh9o+EL5RZ0ilEOr37hs2cxpOU5Kn6UfbjxBQjShYVQzHcSYH1gCb5AD\nv/Ad0WTOx4ar5S3dvfNp8UzLgRlH4RUN+qcd6Ih8+w8O68MlParLXh3rum+/JVH0\nDwmLPgplgC2pqz4dFVRUxEbv6JxpQlOajZ4foKko320bRm9ciZMxdNv/ZTj3Z4Y5\nv+4u2lLCSR40VPxSsT0zsJKzmIerz8nqXWutnlSgarp/Q2lyv1erkkPnk2es0pCk\nhdH6IMO82ZcegDZ3i3qhfMgZkMS4WJPT96Pf6607eElvmn030vdB67o8Q0C58Vmr\njz2bOmVI9YvS9hEJX64odkYntsu2luH2gBbgxV5G+qhGEzbqpcj5mSRRUcJcvier\nMF0Qaok/3ANVOp5wLAa5n4ip7akqkdtSu5B/ulwD7yETnLzkmM0WCpNMt8Bbo/yk\nIGPvo9RcIUBtGsiXbu0UYKX5GTqk5lWxvlLVBc7YRCln1o+03f9Fi4xx6kpVqe3k\n+Jmqo3ovs/H1040Cl3AxKclPLQ7SL9q3jmNxVVM9FSW7S422xXOGPGw51jO2m4D4\nrcYPykrUwkI48VcrTuNwzz09OUQXYoZkk5Gy8eFfd0NPgNwFrQP178QvudCt9UFc\nvvnjvj3wNZDPMRnHlz8qxhNySg77BL7TREw11tzz0wSpUjpYSP8=\n=ymR0\n-----END PGP SIGNATURE-----",
        "payload": "tree 26dfaa96d7bc22b364cbfcdd279268be4a670c3e\nparent 4bce61519f51c0e6edb18de8e06e485d550573c0\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1616014460 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1616014474 +0200\n\ndoc: Replace three dots with ellipsis in all of the translatable strings\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9030e4b5a6de54e041c59e98d91adecbebf3611a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9030e4b5a6de54e041c59e98d91adecbebf3611a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9030e4b5a6de54e041c59e98d91adecbebf3611a/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4bce61519f51c0e6edb18de8e06e485d550573c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bce61519f51c0e6edb18de8e06e485d550573c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4bce61519f51c0e6edb18de8e06e485d550573c0"
      }
    ],
    "stats": {
      "total": 114,
      "additions": 57,
      "deletions": 57
    },
    "files": [
      {
        "sha": "bb97fc480966d1e549e4257edf6e3ceadfdc7bef",
        "filename": "src/banman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -15,7 +15,7 @@\n BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time)\n     : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n {\n-    if (m_client_interface) m_client_interface->InitMessage(_(\"Loading banlist...\").translated);\n+    if (m_client_interface) m_client_interface->InitMessage(_(\"Loading banlist\u2026\").translated);\n \n     int64_t n_start = GetTimeMillis();\n     m_is_dirty = false;"
      },
      {
        "sha": "e5e17b5488e95769ee18d6b1987fe4de848b3787",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -1584,7 +1584,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n         };\n         bilingual_str strLoadError;\n \n-        uiInterface.InitMessage(_(\"Loading block index...\").translated);\n+        uiInterface.InitMessage(_(\"Loading block index\u2026\").translated);\n \n         do {\n             const int64_t load_block_index_start_time = GetTimeMillis();\n@@ -1707,7 +1707,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n                     // Note that RewindBlockIndex MUST run even if we're about to -reindex-chainstate.\n                     // It both disconnects blocks based on the chainstate, and drops block data in\n                     // BlockIndex() based on lack of available witness data.\n-                    uiInterface.InitMessage(_(\"Rewinding blocks...\").translated);\n+                    uiInterface.InitMessage(_(\"Rewinding blocks\u2026\").translated);\n                     if (!chainstate->RewindBlockIndex(chainparams)) {\n                         strLoadError = _(\n                             \"Unable to rewind the database to a pre-fork state. \"\n@@ -1729,7 +1729,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n \n                 for (CChainState* chainstate : chainman.GetAll()) {\n                     if (!is_coinsview_empty(chainstate)) {\n-                        uiInterface.InitMessage(_(\"Verifying blocks...\").translated);\n+                        uiInterface.InitMessage(_(\"Verifying blocks\u2026\").translated);\n                         if (fHavePruned && args.GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS) > MIN_BLOCKS_TO_KEEP) {\n                             LogPrintf(\"Prune: pruned datadir may not have more than %d blocks; only checking available blocks\\n\",\n                                 MIN_BLOCKS_TO_KEEP);\n@@ -1827,7 +1827,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n         if (!fReindex) {\n             LOCK(cs_main);\n             for (CChainState* chainstate : chainman.GetAll()) {\n-                uiInterface.InitMessage(_(\"Pruning blockstore...\").translated);\n+                uiInterface.InitMessage(_(\"Pruning blockstore\u2026\").translated);\n                 chainstate->PruneAndFlush();\n             }\n         }"
      },
      {
        "sha": "743c0aade100412bbda5221fbf3ee1e7b0261232",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -2436,7 +2436,7 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     }\n \n     if (clientInterface) {\n-        clientInterface->InitMessage(_(\"Loading P2P addresses...\").translated);\n+        clientInterface->InitMessage(_(\"Loading P2P addresses\u2026\").translated);\n     }\n     // Load addresses from peers.dat\n     int64_t nStart = GetTimeMillis();\n@@ -2460,7 +2460,7 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n         LogPrintf(\"%i block-relay-only anchors will be tried for connections.\\n\", m_anchors.size());\n     }\n \n-    uiInterface.InitMessage(_(\"Starting network threads...\").translated);\n+    uiInterface.InitMessage(_(\"Starting network threads\u2026\").translated);\n \n     fAddressesInitialized = true;\n "
      },
      {
        "sha": "5887b402933b047d1e6a7d767827f6f1fa0d9ec3",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -614,7 +614,7 @@ int GuiMain(int argc, char* argv[])\n         if (app.baseInitialize()) {\n             app.requestInitialize();\n #if defined(Q_OS_WIN)\n-            WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"%1 didn't yet exit safely...\").arg(PACKAGE_NAME), (HWND)app.getMainWinId());\n+            WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"%1 didn't yet exit safely\u2026\").arg(PACKAGE_NAME), (HWND)app.getMainWinId());\n #endif\n             app.exec();\n             app.requestShutdown();"
      },
      {
        "sha": "a8c34db953d6916d258a88a1f085b0bd3451d051",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -308,27 +308,27 @@ void BitcoinGUI::createActions()\n     aboutQtAction = new QAction(tr(\"About &Qt\"), this);\n     aboutQtAction->setStatusTip(tr(\"Show information about Qt\"));\n     aboutQtAction->setMenuRole(QAction::AboutQtRole);\n-    optionsAction = new QAction(tr(\"&Options...\"), this);\n+    optionsAction = new QAction(tr(\"&Options\u2026\"), this);\n     optionsAction->setStatusTip(tr(\"Modify configuration options for %1\").arg(PACKAGE_NAME));\n     optionsAction->setMenuRole(QAction::PreferencesRole);\n     optionsAction->setEnabled(false);\n     toggleHideAction = new QAction(tr(\"&Show / Hide\"), this);\n     toggleHideAction->setStatusTip(tr(\"Show or hide the main Window\"));\n \n-    encryptWalletAction = new QAction(tr(\"&Encrypt Wallet...\"), this);\n+    encryptWalletAction = new QAction(tr(\"&Encrypt Wallet\u2026\"), this);\n     encryptWalletAction->setStatusTip(tr(\"Encrypt the private keys that belong to your wallet\"));\n     encryptWalletAction->setCheckable(true);\n-    backupWalletAction = new QAction(tr(\"&Backup Wallet...\"), this);\n+    backupWalletAction = new QAction(tr(\"&Backup Wallet\u2026\"), this);\n     backupWalletAction->setStatusTip(tr(\"Backup wallet to another location\"));\n-    changePassphraseAction = new QAction(tr(\"&Change Passphrase...\"), this);\n+    changePassphraseAction = new QAction(tr(\"&Change Passphrase\u2026\"), this);\n     changePassphraseAction->setStatusTip(tr(\"Change the passphrase used for wallet encryption\"));\n-    signMessageAction = new QAction(tr(\"Sign &message...\"), this);\n+    signMessageAction = new QAction(tr(\"Sign &message\u2026\"), this);\n     signMessageAction->setStatusTip(tr(\"Sign messages with your Bitcoin addresses to prove you own them\"));\n-    verifyMessageAction = new QAction(tr(\"&Verify message...\"), this);\n+    verifyMessageAction = new QAction(tr(\"&Verify message\u2026\"), this);\n     verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified Bitcoin addresses\"));\n-    m_load_psbt_action = new QAction(tr(\"&Load PSBT from file...\"), this);\n+    m_load_psbt_action = new QAction(tr(\"&Load PSBT from file\u2026\"), this);\n     m_load_psbt_action->setStatusTip(tr(\"Load Partially Signed Bitcoin Transaction\"));\n-    m_load_psbt_clipboard_action = new QAction(tr(\"Load PSBT from clipboard...\"), this);\n+    m_load_psbt_clipboard_action = new QAction(tr(\"Load PSBT from clipboard\u2026\"), this);\n     m_load_psbt_clipboard_action->setStatusTip(tr(\"Load Partially Signed Bitcoin Transaction from clipboard\"));\n \n     openRPCConsoleAction = new QAction(tr(\"Node window\"), this);\n@@ -342,22 +342,22 @@ void BitcoinGUI::createActions()\n     usedReceivingAddressesAction = new QAction(tr(\"&Receiving addresses\"), this);\n     usedReceivingAddressesAction->setStatusTip(tr(\"Show the list of used receiving addresses and labels\"));\n \n-    openAction = new QAction(tr(\"Open &URI...\"), this);\n+    openAction = new QAction(tr(\"Open &URI\u2026\"), this);\n     openAction->setStatusTip(tr(\"Open a bitcoin: URI\"));\n \n     m_open_wallet_action = new QAction(tr(\"Open Wallet\"), this);\n     m_open_wallet_action->setEnabled(false);\n     m_open_wallet_action->setStatusTip(tr(\"Open a wallet\"));\n     m_open_wallet_menu = new QMenu(this);\n \n-    m_close_wallet_action = new QAction(tr(\"Close Wallet...\"), this);\n+    m_close_wallet_action = new QAction(tr(\"Close Wallet\u2026\"), this);\n     m_close_wallet_action->setStatusTip(tr(\"Close wallet\"));\n \n-    m_create_wallet_action = new QAction(tr(\"Create Wallet...\"), this);\n+    m_create_wallet_action = new QAction(tr(\"Create Wallet\u2026\"), this);\n     m_create_wallet_action->setEnabled(false);\n     m_create_wallet_action->setStatusTip(tr(\"Create a new wallet\"));\n \n-    m_close_all_wallets_action = new QAction(tr(\"Close All Wallets...\"), this);\n+    m_close_all_wallets_action = new QAction(tr(\"Close All Wallets\u2026\"), this);\n     m_close_all_wallets_action->setStatusTip(tr(\"Close all wallets\"));\n \n     showHelpMessageAction = new QAction(tr(\"&Command-line options\"), this);\n@@ -944,7 +944,7 @@ void BitcoinGUI::updateHeadersSyncProgressLabel()\n     int headersTipHeight = clientModel->getHeaderTipHeight();\n     int estHeadersLeft = (GetTime() - headersTipTime) / Params().GetConsensus().nPowTargetSpacing;\n     if (estHeadersLeft > HEADER_HEIGHT_DELTA_SYNC)\n-        progressBarLabel->setText(tr(\"Syncing Headers (%1%)...\").arg(QString::number(100.0 / (headersTipHeight+estHeadersLeft)*headersTipHeight, 'f', 1)));\n+        progressBarLabel->setText(tr(\"Syncing Headers (%1%)\u2026\").arg(QString::number(100.0 / (headersTipHeight+estHeadersLeft)*headersTipHeight, 'f', 1)));\n }\n \n void BitcoinGUI::openOptionsDialogWithTab(OptionsDialog::Tab tab)\n@@ -990,24 +990,24 @@ void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVer\n                 updateHeadersSyncProgressLabel();\n                 return;\n             }\n-            progressBarLabel->setText(tr(\"Synchronizing with network...\"));\n+            progressBarLabel->setText(tr(\"Synchronizing with network\u2026\"));\n             updateHeadersSyncProgressLabel();\n             break;\n         case BlockSource::DISK:\n             if (header) {\n-                progressBarLabel->setText(tr(\"Indexing blocks on disk...\"));\n+                progressBarLabel->setText(tr(\"Indexing blocks on disk\u2026\"));\n             } else {\n-                progressBarLabel->setText(tr(\"Processing blocks on disk...\"));\n+                progressBarLabel->setText(tr(\"Processing blocks on disk\u2026\"));\n             }\n             break;\n         case BlockSource::REINDEX:\n-            progressBarLabel->setText(tr(\"Reindexing blocks on disk...\"));\n+            progressBarLabel->setText(tr(\"Reindexing blocks on disk\u2026\"));\n             break;\n         case BlockSource::NONE:\n             if (header) {\n                 return;\n             }\n-            progressBarLabel->setText(tr(\"Connecting to peers...\"));\n+            progressBarLabel->setText(tr(\"Connecting to peers\u2026\"));\n             break;\n     }\n \n@@ -1044,7 +1044,7 @@ void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVer\n         progressBar->setValue(nVerificationProgress * 1000000000.0 + 0.5);\n         progressBar->setVisible(true);\n \n-        tooltip = tr(\"Catching up...\") + QString(\"<br>\") + tooltip;\n+        tooltip = tr(\"Catching up\u2026\") + QString(\"<br>\") + tooltip;\n         if(count != prevBlocks)\n         {\n             labelBlocksIcon->setPixmap(platformStyle->SingleColorIcon(QString("
      },
      {
        "sha": "530ff0b0d7b18987900e7a7965a9a8cd75ffb6ee",
        "filename": "src/qt/forms/modaloverlay.ui",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/forms/modaloverlay.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/forms/modaloverlay.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/modaloverlay.ui?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -219,7 +219,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n            <item row=\"0\" column=\"1\">\n             <widget class=\"QLabel\" name=\"numberOfBlocksLeft\">\n              <property name=\"text\">\n-              <string>Unknown...</string>\n+              <string>Unknown\u2026</string>\n              </property>\n             </widget>\n            </item>\n@@ -245,7 +245,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n               </sizepolicy>\n              </property>\n              <property name=\"text\">\n-              <string>Unknown...</string>\n+              <string>Unknown\u2026</string>\n              </property>\n             </widget>\n            </item>\n@@ -299,7 +299,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n            <item row=\"4\" column=\"1\">\n             <widget class=\"QLabel\" name=\"progressIncreasePerH\">\n              <property name=\"text\">\n-              <string>calculating...</string>\n+              <string>calculating\u2026</string>\n              </property>\n             </widget>\n            </item>\n@@ -319,7 +319,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n            <item row=\"5\" column=\"1\">\n             <widget class=\"QLabel\" name=\"expectedTimeLeft\">\n              <property name=\"text\">\n-              <string>calculating...</string>\n+              <string>calculating\u2026</string>\n              </property>\n             </widget>\n            </item>"
      },
      {
        "sha": "caae0dab2a45f1832728fdaf8352a135fd80a716",
        "filename": "src/qt/forms/psbtoperationsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/forms/psbtoperationsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/forms/psbtoperationsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/psbtoperationsdialog.ui?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -126,7 +126,7 @@\n        <item>\n         <widget class=\"QPushButton\" name=\"saveButton\">\n          <property name=\"text\">\n-          <string>Save...</string>\n+          <string>Save\u2026</string>\n          </property>\n         </widget>\n        </item>"
      },
      {
        "sha": "7d95a8bc907ccf5deb77f6f2779d0e4d23ef2167",
        "filename": "src/qt/forms/receiverequestdialog.ui",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/forms/receiverequestdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/forms/receiverequestdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receiverequestdialog.ui?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -11,7 +11,7 @@\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n-   <string>Request payment to ...</string>\n+   <string>Request payment to \u2026</string>\n   </property>\n   <layout class=\"QGridLayout\" name=\"gridLayout\" columnstretch=\"0,1\">\n    <property name=\"sizeConstraint\">\n@@ -65,7 +65,7 @@\n    <item row=\"2\" column=\"1\" alignment=\"Qt::AlignTop\">\n     <widget class=\"QLabel\" name=\"uri_content\">\n      <property name=\"text\">\n-      <string notr=\"true\">bitcoin:BC1...</string>\n+      <string notr=\"true\">bitcoin:BC1\u2026</string>\n      </property>\n      <property name=\"textFormat\">\n       <enum>Qt::RichText</enum>\n@@ -97,7 +97,7 @@\n    <item row=\"3\" column=\"1\" alignment=\"Qt::AlignTop\">\n     <widget class=\"QLabel\" name=\"address_content\">\n      <property name=\"text\">\n-      <string notr=\"true\">bc1...</string>\n+      <string notr=\"true\">bc1\u2026</string>\n      </property>\n      <property name=\"textFormat\">\n       <enum>Qt::PlainText</enum>\n@@ -257,7 +257,7 @@\n      <item>\n       <widget class=\"QPushButton\" name=\"btnSaveAs\">\n        <property name=\"text\">\n-        <string>&amp;Save Image...</string>\n+        <string>&amp;Save Image\u2026</string>\n        </property>\n        <property name=\"autoDefault\">\n         <bool>false</bool>"
      },
      {
        "sha": "1c0f91f7365b720be5d4e55a3704b70e43a82584",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -107,7 +107,7 @@\n              <string notr=\"true\"/>\n             </property>\n             <property name=\"text\">\n-             <string>Inputs...</string>\n+             <string>Inputs\u2026</string>\n             </property>\n             <property name=\"autoDefault\">\n              <bool>false</bool>\n@@ -738,7 +738,7 @@\n               <item>\n                <widget class=\"QPushButton\" name=\"buttonChooseFee\">\n                 <property name=\"text\">\n-                 <string>Choose...</string>\n+                 <string>Choose\u2026</string>\n                 </property>\n                </widget>\n               </item>\n@@ -991,7 +991,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n                  <item>\n                   <widget class=\"QLabel\" name=\"labelSmartFee2\">\n                    <property name=\"text\">\n-                    <string>(Smart fee not initialized yet. This usually takes a few blocks...)</string>\n+                    <string>(Smart fee not initialized yet. This usually takes a few blocks\u2026)</string>\n                    </property>\n                   </widget>\n                  </item>"
      },
      {
        "sha": "f5b676589c1406df4eda66e292e862f8fab7cbd1",
        "filename": "src/qt/modaloverlay.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/modaloverlay.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/modaloverlay.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -150,13 +150,13 @@ void ModalOverlay::tipUpdate(int count, const QDateTime& blockDate, double nVeri\n         ui->numberOfBlocksLeft->setText(QString::number(bestHeaderHeight - count));\n     } else {\n         UpdateHeaderSyncLabel();\n-        ui->expectedTimeLeft->setText(tr(\"Unknown...\"));\n+        ui->expectedTimeLeft->setText(tr(\"Unknown\u2026\"));\n     }\n }\n \n void ModalOverlay::UpdateHeaderSyncLabel() {\n     int est_headers_left = bestHeaderDate.secsTo(QDateTime::currentDateTime()) / Params().GetConsensus().nPowTargetSpacing;\n-    ui->numberOfBlocksLeft->setText(tr(\"Unknown. Syncing Headers (%1, %2%)...\").arg(bestHeaderHeight).arg(QString::number(100.0 / (bestHeaderHeight + est_headers_left) * bestHeaderHeight, 'f', 1)));\n+    ui->numberOfBlocksLeft->setText(tr(\"Unknown. Syncing Headers (%1, %2%)\u2026\").arg(bestHeaderHeight).arg(QString::number(100.0 / (bestHeaderHeight + est_headers_left) * bestHeaderHeight, 'f', 1)));\n }\n \n void ModalOverlay::toggleVisibility()"
      },
      {
        "sha": "60f040f6f25deb57dd679503f04fafa2f07b4981",
        "filename": "src/qt/qrimagewidget.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/qrimagewidget.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/qrimagewidget.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qrimagewidget.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -27,7 +27,7 @@ QRImageWidget::QRImageWidget(QWidget *parent):\n     QLabel(parent), contextMenu(nullptr)\n {\n     contextMenu = new QMenu(this);\n-    QAction *saveImageAction = new QAction(tr(\"&Save Image...\"), this);\n+    QAction *saveImageAction = new QAction(tr(\"&Save Image\u2026\"), this);\n     connect(saveImageAction, &QAction::triggered, this, &QRImageWidget::saveImage);\n     contextMenu->addAction(saveImageAction);\n     QAction *copyImageAction = new QAction(tr(\"&Copy Image\"), this);"
      },
      {
        "sha": "5b35644459d4f438ba645c2497e6272ad881421f",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -366,7 +366,7 @@ bool SendCoinsDialog::PrepareSendText(QString& question_string, QString& informa\n \n     if (formatted.size() > 1) {\n         question_string = question_string.arg(\"\");\n-        informative_text = tr(\"To review recipient list click \\\"Show Details...\\\"\");\n+        informative_text = tr(\"To review recipient list click \\\"Show Details\u2026\\\"\");\n         detailed_text = formatted.join(\"\\n\\n\");\n     } else {\n         question_string = question_string.arg(\"<br /><br />\" + formatted.at(0));"
      },
      {
        "sha": "6a0417f78e66fc08fca1fab9bfb0d15928fbbdf9",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -73,7 +73,7 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     dateWidget->addItem(tr(\"This month\"), ThisMonth);\n     dateWidget->addItem(tr(\"Last month\"), LastMonth);\n     dateWidget->addItem(tr(\"This year\"), ThisYear);\n-    dateWidget->addItem(tr(\"Range...\"), Range);\n+    dateWidget->addItem(tr(\"Range\u2026\"), Range);\n     hlayout->addWidget(dateWidget);\n \n     typeWidget = new QComboBox(this);"
      },
      {
        "sha": "4d246bc8dcd39c26fff54066da582981e77ff78e",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -142,7 +142,7 @@ ShutdownWindow::ShutdownWindow(QWidget *parent, Qt::WindowFlags f):\n {\n     QVBoxLayout *layout = new QVBoxLayout();\n     layout->addWidget(new QLabel(\n-        tr(\"%1 is shutting down...\").arg(PACKAGE_NAME) + \"<br /><br />\" +\n+        tr(\"%1 is shutting down\u2026\").arg(PACKAGE_NAME) + \"<br /><br />\" +\n         tr(\"Do not shut down the computer until this window disappears.\")));\n     setLayout(layout);\n "
      },
      {
        "sha": "4b545846ddbd1ee3a5309ecbfc9117a8709aa5e1",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -247,7 +247,7 @@ void CreateWalletActivity::askPassphrase()\n \n void CreateWalletActivity::createWallet()\n {\n-    showProgressDialog(tr(\"Creating Wallet <b>%1</b>...\").arg(m_create_wallet_dialog->walletName().toHtmlEscaped()));\n+    showProgressDialog(tr(\"Creating Wallet %1\u2026\").arg(\"<b>\" + m_create_wallet_dialog->walletName().toHtmlEscaped() + \"</b>\"));\n \n     std::string name = m_create_wallet_dialog->walletName().toStdString();\n     uint64_t flags = 0;\n@@ -330,7 +330,7 @@ void OpenWalletActivity::open(const std::string& path)\n {\n     QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n \n-    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+    showProgressDialog(tr(\"Opening Wallet %1\u2026\").arg(\"<b>\" + name.toHtmlEscaped() + \"</b>\"));\n \n     QTimer::singleShot(0, worker(), [this, path] {\n         std::unique_ptr<interfaces::Wallet> wallet = node().walletClient().loadWallet(path, m_error_message, m_warning_message);"
      },
      {
        "sha": "05081dcc16016aa8e8944322d16e6ac9b5fde993",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -4235,7 +4235,7 @@ bool CChainState::LoadChainTip(const CChainParams& chainparams)\n \n CVerifyDB::CVerifyDB()\n {\n-    uiInterface.ShowProgress(_(\"Verifying blocks...\").translated, 0, false);\n+    uiInterface.ShowProgress(_(\"Verifying blocks\u2026\").translated, 0, false);\n }\n \n CVerifyDB::~CVerifyDB()\n@@ -4270,7 +4270,7 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CChainState& active_ch\n             LogPrintf(\"[%d%%]...\", percentageDone); /* Continued */\n             reportDone = percentageDone/10;\n         }\n-        uiInterface.ShowProgress(_(\"Verifying blocks...\").translated, percentageDone, false);\n+        uiInterface.ShowProgress(_(\"Verifying blocks\u2026\").translated, percentageDone, false);\n         if (pindex->nHeight <= active_chainstate.m_chain.Height()-nCheckDepth)\n             break;\n         if (fPruneMode && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n@@ -4326,7 +4326,7 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CChainState& active_ch\n                 LogPrintf(\"[%d%%]...\", percentageDone); /* Continued */\n                 reportDone = percentageDone/10;\n             }\n-            uiInterface.ShowProgress(_(\"Verifying blocks...\").translated, percentageDone, false);\n+            uiInterface.ShowProgress(_(\"Verifying blocks\u2026\").translated, percentageDone, false);\n             pindex = active_chainstate.m_chain.Next(pindex);\n             CBlock block;\n             if (!ReadBlockFromDisk(block, pindex, chainparams.GetConsensus()))\n@@ -4375,7 +4375,7 @@ bool CChainState::ReplayBlocks(const CChainParams& params)\n     if (hashHeads.empty()) return true; // We're already in a consistent state.\n     if (hashHeads.size() != 2) return error(\"ReplayBlocks(): unknown inconsistent state\");\n \n-    uiInterface.ShowProgress(_(\"Replaying blocks...\").translated, 0, false);\n+    uiInterface.ShowProgress(_(\"Replaying blocks\u2026\").translated, 0, false);\n     LogPrintf(\"Replaying blocks\\n\");\n \n     const CBlockIndex* pindexOld = nullptr;  // Old tip during the interrupted flush."
      },
      {
        "sha": "6dca314966fa90180f07932c9fb52d29cc48135e",
        "filename": "src/wallet/load.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/wallet/load.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/wallet/load.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/load.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -39,7 +39,7 @@ bool VerifyWallets(interfaces::Chain& chain)\n \n     LogPrintf(\"Using wallet directory %s\\n\", GetWalletDir().string());\n \n-    chain.initMessage(_(\"Verifying wallet(s)...\").translated);\n+    chain.initMessage(_(\"Verifying wallet(s)\u2026\").translated);\n \n     // For backwards compatibility if an unnamed top level wallet exists in the\n     // wallets directory, include it in the default list of wallets to load."
      },
      {
        "sha": "7b8a33e7d05bbf2cdfa609698a7b4330256956d1",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -557,7 +557,7 @@ RPCHelpMan importwallet()\n \n         // Use uiInterface.ShowProgress instead of pwallet.ShowProgress because pwallet.ShowProgress has a cancel button tied to AbortRescan which\n         // we don't want for this progress bar showing the import progress. uiInterface.ShowProgress does not have a cancel button.\n-        pwallet->chain().showProgress(strprintf(\"%s \" + _(\"Importing...\").translated, pwallet->GetDisplayName()), 0, false); // show progress dialog in GUI\n+        pwallet->chain().showProgress(strprintf(\"%s \" + _(\"Importing\u2026\").translated, pwallet->GetDisplayName()), 0, false); // show progress dialog in GUI\n         std::vector<std::tuple<CKey, int64_t, bool, std::string>> keys;\n         std::vector<std::pair<CScript, int64_t>> scripts;\n         while (file.good()) {"
      },
      {
        "sha": "b1579823493ba6b0be96081f58427b983a86f96c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9030e4b5a6de54e041c59e98d91adecbebf3611a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=9030e4b5a6de54e041c59e98d91adecbebf3611a",
        "patch": "@@ -1784,7 +1784,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     WalletLogPrintf(\"Rescan started from block %s...\\n\", start_block.ToString());\n \n     fAbortRescan = false;\n-    ShowProgress(strprintf(\"%s \" + _(\"Rescanning...\").translated, GetDisplayName()), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n+    ShowProgress(strprintf(\"%s \" + _(\"Rescanning\u2026\").translated, GetDisplayName()), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n     uint256 tip_hash = WITH_LOCK(cs_wallet, return GetLastBlockHash());\n     uint256 end_hash = tip_hash;\n     if (max_height) chain().findAncestorByHeight(tip_hash, *max_height, FoundBlock().hash(end_hash));\n@@ -1799,7 +1799,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n             m_scanning_progress = 0;\n         }\n         if (block_height % 100 == 0 && progress_end - progress_begin > 0.0) {\n-            ShowProgress(strprintf(\"%s \" + _(\"Rescanning...\").translated, GetDisplayName()), std::max(1, std::min(99, (int)(m_scanning_progress * 100))));\n+            ShowProgress(strprintf(\"%s \" + _(\"Rescanning\u2026\").translated, GetDisplayName()), std::max(1, std::min(99, (int)(m_scanning_progress * 100))));\n         }\n         if (GetTime() >= nNow + 60) {\n             nNow = GetTime();\n@@ -3858,7 +3858,7 @@ std::shared_ptr<CWallet> CWallet::Create(interfaces::Chain& chain, const std::st\n {\n     const std::string& walletFile = database->Filename();\n \n-    chain.initMessage(_(\"Loading wallet...\").translated);\n+    chain.initMessage(_(\"Loading wallet\u2026\").translated);\n \n     int64_t nStart = GetTimeMillis();\n     bool fFirstRun = true;\n@@ -4108,7 +4108,7 @@ std::shared_ptr<CWallet> CWallet::Create(interfaces::Chain& chain, const std::st\n             }\n         }\n \n-        chain.initMessage(_(\"Rescanning...\").translated);\n+        chain.initMessage(_(\"Rescanning\u2026\").translated);\n         walletInstance->WalletLogPrintf(\"Rescanning last %i blocks (from block %i)...\\n\", *tip_height - rescan_height, rescan_height);\n \n         // No need to read and scan block if block was created before"
      }
    ]
  }
]