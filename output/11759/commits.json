[
  {
    "sha": "79a7c63c273be828d94c06326f5c469a783d7152",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OWE3YzYzYzI3M2JlODI4ZDk0YzA2MzI2ZjVjNDY5YTc4M2Q3MTUy",
    "commit": {
      "author": {
        "name": "Jan Sarenik",
        "email": "jan@tkos.co.il",
        "date": "2017-11-23T14:52:24Z"
      },
      "committer": {
        "name": "Jan Sarenik",
        "email": "jan@tkos.co.il",
        "date": "2018-01-28T16:52:24Z"
      },
      "message": "Docs: INSTALL.md: Add monospace markup to file name",
      "tree": {
        "sha": "d952a9ba63caf6a7b8ac8164813e327cbdf08761",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d952a9ba63caf6a7b8ac8164813e327cbdf08761"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79a7c63c273be828d94c06326f5c469a783d7152",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79a7c63c273be828d94c06326f5c469a783d7152",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/79a7c63c273be828d94c06326f5c469a783d7152",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79a7c63c273be828d94c06326f5c469a783d7152/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "9cf6393a4f82b9c81d3b4b468a17a89db10531a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cf6393a4f82b9c81d3b4b468a17a89db10531a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9cf6393a4f82b9c81d3b4b468a17a89db10531a2"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6d36b605b643fee261abed997dc9f42ea72eefff",
        "filename": "INSTALL.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79a7c63c273be828d94c06326f5c469a783d7152/INSTALL.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79a7c63c273be828d94c06326f5c469a783d7152/INSTALL.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md?ref=79a7c63c273be828d94c06326f5c469a783d7152",
        "patch": "@@ -1,5 +1,5 @@\n Building Bitcoin\n ================\n \n-See doc/build-*.md for instructions on building the various\n+See `doc/build-*.md` for instructions on building the various\n elements of the Bitcoin Core reference implementation of Bitcoin."
      }
    ]
  },
  {
    "sha": "1723a79fb4798e0a043fa5e435e1ad65ff87702a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzIzYTc5ZmI0Nzk4ZTBhMDQzZmE1ZTQzNWUxYWQ2NWZmODc3MDJh",
    "commit": {
      "author": {
        "name": "Jan Sarenik",
        "email": "jan@tkos.co.il",
        "date": "2017-11-23T15:02:19Z"
      },
      "committer": {
        "name": "Jan Sarenik",
        "email": "jan@tkos.co.il",
        "date": "2018-01-28T16:52:24Z"
      },
      "message": "Docs: CONTRIBUTING.md - reflow the text - no change in wording\n\nThough the plain text was pretty good (mostly 80-char lines),\nthis makes it even more readable for terminal monks. The fancy\nHTML5 markdown output on GitHub is the same (checked with rendering\noriginal and changed file with `commonmarker` and normalizing both\nwith HTML `tidy`, the only change being the simplified in-tree doc\npath for Translation Process).\n\nOne more little change is that http://chris.beams.io was changed\nto https as suggested by @fanquake.\n\n    commonmarker CONTRIBUTING.md | tidy > /tmp/aoeui.html\n    git checkout master\n    commonmarker CONTRIBUTING.md | tidy | diff -u - /tmp/aoeui.html",
      "tree": {
        "sha": "972d96d8d5c98f339f100481c11f06f064e5ffee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/972d96d8d5c98f339f100481c11f06f064e5ffee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1723a79fb4798e0a043fa5e435e1ad65ff87702a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1723a79fb4798e0a043fa5e435e1ad65ff87702a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1723a79fb4798e0a043fa5e435e1ad65ff87702a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1723a79fb4798e0a043fa5e435e1ad65ff87702a/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "79a7c63c273be828d94c06326f5c469a783d7152",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79a7c63c273be828d94c06326f5c469a783d7152",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/79a7c63c273be828d94c06326f5c469a783d7152"
      }
    ],
    "stats": {
      "total": 307,
      "additions": 171,
      "deletions": 136
    },
    "files": [
      {
        "sha": "b85541795defb9ab4e9eda50ef28755b97f24004",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 171,
        "deletions": 136,
        "changes": 307,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1723a79fb4798e0a043fa5e435e1ad65ff87702a/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1723a79fb4798e0a043fa5e435e1ad65ff87702a/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=1723a79fb4798e0a043fa5e435e1ad65ff87702a",
        "patch": "@@ -1,18 +1,19 @@\n Contributing to Bitcoin Core\n ============================\n \n-The Bitcoin Core project operates an open contributor model where anyone is\n-welcome to contribute towards development in the form of peer review, testing\n-and patches. This document explains the practical process and guidelines for\n-contributing.\n+The Bitcoin Core project operates an open contributor model where anyone\n+is welcome to contribute towards development in the form of peer review,\n+testing and patches. This document explains the practical process and\n+guidelines for contributing.\n \n Firstly in terms of structure, there is no particular concept of \"Core\n developers\" in the sense of privileged people. Open source often naturally\n-revolves around meritocracy where longer term contributors gain more trust from\n-the developer community. However, some hierarchy is necessary for practical\n-purposes. As such there are repository \"maintainers\" who are responsible for\n-merging pull requests as well as a \"lead maintainer\" who is responsible for the\n-release cycle, overall merging, moderation and appointment of maintainers.\n+revolves around meritocracy where longer term contributors gain more\n+trust from the developer community. However, some hierarchy is necessary\n+for practical purposes. As such there are repository \"maintainers\" who\n+are responsible for merging pull requests as well as a \"lead maintainer\"\n+who is responsible for the release cycle, overall merging, moderation\n+and appointment of maintainers.\n \n \n Contributor Workflow\n@@ -28,26 +29,33 @@ To contribute a patch, the workflow is as follows:\n   1. Create topic branch\n   1. Commit patches\n \n-The project coding conventions in the [developer notes](doc/developer-notes.md)\n-must be adhered to.\n+The project coding conventions in the [developer notes] must\n+be adhered to.\n \n-In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention)\n-and diffs should be easy to read. For this reason do not mix any formatting\n-fixes or code moves with actual code changes.\n+[developer notes]: doc/developer-notes.md\n+\n+In general [commits should be atomic][c] and diffs should be easy\n+to read. For this reason do not mix any formatting fixes or code moves\n+with actual code changes.\n+\n+[c]: https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention\n \n Commit messages should be verbose by default consisting of a short subject line\n (50 chars max), a blank line and detailed explanatory text as separate\n paragraph(s), unless the title alone is self-explanatory (like \"Corrected typo\n in init.cpp\") in which case a single title line is sufficient. Commit messages should be\n helpful to people reading your code in the future, so explain the reasoning for\n-your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+your decisions. Further explanation [here].\n+\n+[here]: https://chris.beams.io/posts/git-commit/\n \n If a particular commit references another issue, please add the reference. For\n example: `refs #1234` or `fixes #4321`. Using the `fixes` or `closes` keywords\n will cause the corresponding issue to be closed when the pull request is merged.\n \n-Please refer to the [Git manual](https://git-scm.com/doc) for more information\n-about Git.\n+Please refer to the [Git manual] for more information about Git.\n+\n+[Git manual]: https://git-scm.com/doc\n \n   - Push changes to your fork\n   - Create pull request\n@@ -81,28 +89,35 @@ Examples:\n     Qt: Add feed bump button\n     Trivial: Fix typo in init.cpp\n \n-Note that translations should not be submitted as pull requests, please see\n-[Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md) \n-for more information on helping with translations.\n+Note that translations should not be submitted as pull requests,\n+please see [Translation Process] for more information on helping with\n+translations.\n+\n+[Translation Process]: doc/translation_process.md\n \n If a pull request is not to be considered for merging (yet), please\n-prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n-in the body of the pull request to indicate tasks are pending.\n+prefix the title with [WIP] or use [Tasks Lists] in the body of the pull\n+request to indicate tasks are pending.\n+\n+[Tasks Lists]: https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists\n \n-The body of the pull request should contain enough description about what the\n-patch does together with any justification/reasoning. You should include\n-references to any discussions (for example other tickets or mailing list\n-discussions).\n+The body of the pull request should contain enough description about what\n+the patch does together with any justification/reasoning. You should\n+include references to any discussions (for example other tickets or\n+mailing list discussions).\n \n-At this stage one should expect comments and review from other contributors. You\n-can add more commits to your pull request by committing them locally and pushing\n-to your fork until you have satisfied all feedback.\n+At this stage one should expect comments and review from other\n+contributors. You can add more commits to your pull request by committing\n+them locally and pushing to your fork until you have satisfied all\n+feedback.\n \n Squashing Commits\n ---------------------------\n-If your pull request is accepted for merging, you may be asked by a maintainer\n-to squash and or [rebase](https://git-scm.com/docs/git-rebase) your commits\n-before it will be merged. The basic squashing workflow is shown below.\n+If your pull request is accepted for merging, you may be asked by a\n+maintainer to squash and or [rebase] your commits before it will be\n+merged. The basic squashing workflow is shown below.\n+\n+[rebase]: https://git-scm.com/docs/git-rebase\n \n     git checkout your_branch_name\n     git rebase -i HEAD~n\n@@ -112,161 +127,181 @@ before it will be merged. The basic squashing workflow is shown below.\n     # save and quit\n     git push -f # (force push to GitHub)\n \n-If you have problems with squashing (or other workflows with `git`), you can\n-alternatively enable \"Allow edits from maintainers\" in the right GitHub\n-sidebar and ask for help in the pull request.\n+If you have problems with squashing (or other workflows with `git`),\n+you can alternatively enable \"Allow edits from maintainers\" in the right\n+GitHub sidebar and ask for help in the pull request.\n \n Please refrain from creating several pull requests for the same change.\n-Use the pull request that is already open (or was created earlier) to amend\n-changes. This preserves the discussion and review that happened earlier for\n-the respective change set.\n+Use the pull request that is already open (or was created earlier) to\n+amend changes. This preserves the discussion and review that happened\n+earlier for the respective change set.\n \n-The length of time required for peer review is unpredictable and will vary from\n-pull request to pull request.\n+The length of time required for peer review is unpredictable and will\n+vary from pull request to pull request.\n \n \n Pull Request Philosophy\n -----------------------\n \n-Patchsets should always be focused. For example, a pull request could add a\n-feature, fix a bug, or refactor code; but not a mixture. Please also avoid super\n-pull requests which attempt to do too much, are overly large, or overly complex\n-as this makes review difficult.\n+Patchsets should always be focused. For example, a pull request could\n+add a feature, fix a bug, or refactor code; but not a mixture. Please\n+also avoid super pull requests which attempt to do too much, are overly\n+large, or overly complex as this makes review difficult.\n \n \n ### Features\n \n-When adding a new feature, thought must be given to the long term technical debt\n-and maintenance that feature may require after inclusion. Before proposing a new\n-feature that will require maintenance, please consider if you are willing to\n-maintain it (including bug fixing). If features get orphaned with no maintainer\n-in the future, they may be removed by the Repository Maintainer.\n+When adding a new feature, thought must be given to the long\n+term technical debt and maintenance that feature may require after\n+inclusion. Before proposing a new feature that will require maintenance,\n+please consider if you are willing to maintain it (including bug\n+fixing). If features get orphaned with no maintainer in the future,\n+they may be removed by the Repository Maintainer.\n \n \n ### Refactoring\n \n Refactoring is a necessary part of any software project's evolution. The\n following guidelines cover refactoring pull requests for the project.\n \n-There are three categories of refactoring, code only moves, code style fixes,\n-code refactoring. In general refactoring pull requests should not mix these\n-three kinds of activity in order to make refactoring pull requests easy to\n-review and uncontroversial. In all cases, refactoring PRs must not change the\n-behaviour of code within the pull request (bugs must be preserved as is).\n+There are three categories of refactoring, code only moves, code style\n+fixes, code refactoring. In general refactoring pull requests should\n+not mix these three kinds of activity in order to make refactoring pull\n+requests easy to review and uncontroversial. In all cases, refactoring\n+PRs must not change the behaviour of code within the pull request (bugs\n+must be preserved as is).\n \n-Project maintainers aim for a quick turnaround on refactoring pull requests, so\n-where possible keep them short, uncomplex and easy to verify.\n+Project maintainers aim for a quick turnaround on refactoring pull\n+requests, so where possible keep them short, uncomplex and easy to verify.\n \n-Pull requests that refactor the code should not be made by new contributors. It\n-requires a certain level of experience to know where the code belongs to and to\n-understand the full ramification (including rebase effort of open pull requests).\n+Pull requests that refactor the code should not be made by new\n+contributors. It requires a certain level of experience to know where\n+the code belongs to and to understand the full ramification (including\n+rebase effort of open pull requests).\n \n-Trivial pull requests or pull requests that refactor the code with no clear\n-benefits may be immediately closed by the maintainers to reduce unnecessary\n-workload on reviewing.\n+Trivial pull requests or pull requests that refactor the code with no\n+clear benefits may be immediately closed by the maintainers to reduce\n+unnecessary workload on reviewing.\n \n \n \"Decision Making\" Process\n -------------------------\n \n-The following applies to code changes to the Bitcoin Core project (and related\n-projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n-Network Protocol consensus changes.\n+The following applies to code changes to the Bitcoin Core project (and\n+related projects such as libsecp256k1), and is not to be confused with\n+overall Bitcoin Network Protocol consensus changes.\n \n-Whether a pull request is merged into Bitcoin Core rests with the project merge\n-maintainers and ultimately the project lead.\n+Whether a pull request is merged into Bitcoin Core rests with the project\n+merge maintainers and ultimately the project lead.\n \n-Maintainers will take into consideration if a patch is in line with the general\n-principles of the project; meets the minimum standards for inclusion; and will\n-judge the general consensus of contributors.\n+Maintainers will take into consideration if a patch is in line with\n+the general principles of the project; meets the minimum standards for\n+inclusion; and will judge the general consensus of contributors.\n \n In general, all pull requests must:\n \n-  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n-    the project (for example refactoring for modularisation);\n+  - Have a clear use case, fix a demonstrable bug or serve the greater\n+    good of the project (for example refactoring for modularisation);\n   - Be well peer reviewed;\n   - Have unit tests and functional tests where appropriate;\n-  - Follow code style guidelines ([C++](doc/developer-notes.md), [functional tests](test/functional/README.md));\n+  - Follow code style guidelines ([C++], [functional tests]);\n   - Not break the existing test suite;\n   - Where bugs are fixed, where possible, there should be unit tests\n-    demonstrating the bug and also proving the fix. This helps prevent regression.\n+    demonstrating the bug and also proving the fix. This helps prevent\n+    regression.\n+\n+[C++]: doc/developer-notes.md\n+[functional tests]: test/functional/README.md\n \n-Patches that change Bitcoin consensus rules are considerably more involved than\n-normal because they affect the entire ecosystem and so must be preceded by\n-extensive mailing list discussions and have a numbered BIP. While each case will\n-be different, one should be prepared to expend more time and effort than for\n-other kinds of patches because of increased peer review and consensus building\n-requirements.\n+Patches that change Bitcoin consensus rules are considerably more\n+involved than normal because they affect the entire ecosystem and so must\n+be preceded by extensive mailing list discussions and have a numbered\n+BIP. While each case will be different, one should be prepared to expend\n+more time and effort than for other kinds of patches because of increased\n+peer review and consensus building requirements.\n \n \n ### Peer Review\n \n-Anyone may participate in peer review which is expressed by comments in the pull\n-request. Typically reviewers will review the code for obvious errors, as well as\n-test out the patch set and opine on the technical merits of the patch. Project\n-maintainers take into account the peer review when determining if there is\n-consensus to merge a pull request (remember that discussions may have been\n-spread out over GitHub, mailing list and IRC discussions). The following\n-language is used within pull-request comments:\n+Anyone may participate in peer review which is expressed by comments\n+in the pull request. Typically reviewers will review the code for\n+obvious errors, as well as test out the patch set and opine on the\n+technical merits of the patch. Project maintainers take into account\n+the peer review when determining if there is consensus to merge a pull\n+request (remember that discussions may have been spread out over GitHub,\n+mailing list and IRC discussions). The following language is used within\n+pull-request comments:\n \n   - ACK means \"I have tested the code and I agree it should be merged\";\n-  - NACK means \"I disagree this should be merged\", and must be accompanied by\n-    sound technical justification (or in certain cases of copyright/patent/licensing\n-    issues, legal justification). NACKs without accompanying reasoning may be\n-    disregarded;\n-  - utACK means \"I have not tested the code, but I have reviewed it and it looks\n-    OK, I agree it can be merged\";\n-  - Concept ACK means \"I agree in the general principle of this pull request\";\n+  - NACK means \"I disagree this should be merged\", and must be\n+    accompanied by sound technical justification (or in certain cases\n+    of copyright/patent/licensing issues, legal justification). NACKs\n+    without accompanying reasoning may be disregarded;\n+  - utACK means \"I have not tested the code, but I have reviewed it and\n+    it looks OK, I agree it can be merged\";\n+  - Concept ACK means \"I agree in the general principle of this pull\n+    request\";\n   - Nit refers to trivial, often non-blocking issues.\n \n-Reviewers should include the commit hash which they reviewed in their comments.\n+Reviewers should include the commit hash which they reviewed in their\n+comments.\n \n-Project maintainers reserve the right to weigh the opinions of peer reviewers\n-using common sense judgement and also may weight based on meritocracy: Those\n-that have demonstrated a deeper commitment and understanding towards the project\n-(over time) or have clear domain expertise may naturally have more weight, as\n-one would expect in all walks of life.\n+Project maintainers reserve the right to weigh the opinions of peer\n+reviewers using common sense judgement and also may weight based on\n+meritocracy: Those that have demonstrated a deeper commitment and\n+understanding towards the project (over time) or have clear domain\n+expertise may naturally have more weight, as one would expect in all\n+walks of life.\n \n-Where a patch set affects consensus critical code, the bar will be set much\n-higher in terms of discussion and peer review requirements, keeping in mind that\n-mistakes could be very costly to the wider community. This includes refactoring\n-of consensus critical code.\n+Where a patch set affects consensus critical code, the bar will be set\n+much higher in terms of discussion and peer review requirements, keeping\n+in mind that mistakes could be very costly to the wider community. This\n+includes refactoring of consensus critical code.\n \n-Where a patch set proposes to change the Bitcoin consensus, it must have been\n-discussed extensively on the mailing list and IRC, be accompanied by a widely\n-discussed BIP and have a generally widely perceived technical consensus of being\n-a worthwhile change based on the judgement of the maintainers.\n+Where a patch set proposes to change the Bitcoin consensus, it must have\n+been discussed extensively on the mailing list and IRC, be accompanied by\n+a widely discussed BIP and have a generally widely perceived technical\n+consensus of being a worthwhile change based on the judgement of the\n+maintainers.\n \n ### Finding Reviewers\n \n-As most reviewers are themselves developers with their own projects, the review\n-process can be quite lengthy, and some amount of patience is required. If you find\n-that you've been waiting for a pull request to be given attention for several\n-months, there may be a number of reasons for this, some of which you can do something\n-about:\n-\n-  - It may be because of a feature freeze due to an upcoming release. During this time,\n-    only bug fixes are taken into consideration. If your pull request is a new feature,\n-    it will not be prioritized until the release is over. Wait for release.\n-  - It may be because the changes you are suggesting do not appeal to people. Rather than\n-    nits and critique, which require effort and means they care enough to spend time on your\n-    contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n-    (because people don't assume *others* won't actually like the proposal). Don't take\n-    that personally, though! Instead, take another critical look at what you are suggesting\n-    and see if it: changes too much, is too broad, doesn't adhere to the\n-    [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n-    Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n-    their opinion on the concept itself.\n-  - It may be because your code is too complex for all but a few people. And those people\n-    may not have realized your pull request even exists. A great way to find people who\n-    are qualified and care about the code you are touching is the\n-    [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n-    find the person touching the code you are touching before you and see if you can find\n-    them and give them a nudge. Don't be incessant about the nudging though.\n-  - Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n-    a look. If you think you've been waiting an unreasonably long amount of time (month+) for\n-    no particular reason (few lines changed, etc), this is totally fine. Try to return the favor\n-    when someone else is asking for feedback on their code, and universe balances out.\n+As most reviewers are themselves developers with their own projects,\n+the review process can be quite lengthy, and some amount of patience\n+is required. If you find that you've been waiting for a pull request to\n+be given attention for several months, there may be a number of reasons\n+for this, some of which you can do something about:\n+\n+  - It may be because of a feature freeze due to an upcoming\n+    release. During this time, only bug fixes are taken into\n+    consideration. If your pull request is a new feature, it will not\n+    be prioritized until the release is over. Wait for release.\n+  - It may be because the changes you are suggesting do not appeal\n+    to people. Rather than nits and critique, which require effort\n+    and means they care enough to spend time on your contribution,\n+    thundering silence is a good sign of widespread (mild) dislike of a\n+    given change (because people don't assume *others* won't actually\n+    like the proposal). Don't take that personally, though! Instead,\n+    take another critical look at what you are suggesting and see if it:\n+    changes too much, is too broad, doesn't adhere to the [developer\n+    notes](doc/developer-notes.md), is dangerous or insecure, is messily\n+    written, etc.  Identify and address any of the issues you find. Then\n+    ask e.g. on IRC if someone could give their opinion on the concept\n+    itself.\n+  - It may be because your code is too complex for all but a few\n+    people. And those people may not have realized your pull request\n+    even exists. A great way to find people who are qualified\n+    and care about the code you are touching is the [Git Blame\n+    feature](https://help.github.com/articles/tracing-changes-in-a-file/).\n+    Simply find the person touching the code you are touching before\n+    you and see if you can find them and give them a nudge. Don't be\n+    incessant about the nudging though.\n+  - Finally, if all else fails, ask on IRC or elsewhere for someone to\n+    give your pull request a look. If you think you've been waiting an\n+    unreasonably long amount of time (month+) for no particular reason\n+    (few lines changed, etc), this is totally fine. Try to return the\n+    favor when someone else is asking for feedback on their code, and\n+    universe balances out.\n \n \n Release Policy"
      }
    ]
  },
  {
    "sha": "56a2c5668a95fefb1a1e9e5b2f7641bc15ed941a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NmEyYzU2NjhhOTVmZWZiMWExZTllNWIyZjc2NDFiYzE1ZWQ5NDFh",
    "commit": {
      "author": {
        "name": "Jan Sarenik",
        "email": "jan@tkos.co.il",
        "date": "2017-11-29T19:26:46Z"
      },
      "committer": {
        "name": "Jan Sarenik",
        "email": "jan@tkos.co.il",
        "date": "2018-01-28T16:52:24Z"
      },
      "message": "Docs: contrib/qos/README.md - fmt (reflow and wrap long lines)",
      "tree": {
        "sha": "fd5d8d115c845b9419ccb1ac9f04421b2a979419",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd5d8d115c845b9419ccb1ac9f04421b2a979419"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56a2c5668a95fefb1a1e9e5b2f7641bc15ed941a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56a2c5668a95fefb1a1e9e5b2f7641bc15ed941a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56a2c5668a95fefb1a1e9e5b2f7641bc15ed941a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56a2c5668a95fefb1a1e9e5b2f7641bc15ed941a/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1723a79fb4798e0a043fa5e435e1ad65ff87702a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1723a79fb4798e0a043fa5e435e1ad65ff87702a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1723a79fb4798e0a043fa5e435e1ad65ff87702a"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "3a48092855b6f8083651991496063c1c0e9e5bd5",
        "filename": "contrib/qos/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56a2c5668a95fefb1a1e9e5b2f7641bc15ed941a/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56a2c5668a95fefb1a1e9e5b2f7641bc15ed941a/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=56a2c5668a95fefb1a1e9e5b2f7641bc15ed941a",
        "patch": "@@ -1,5 +1,10 @@\n ### QoS (Quality of service) ###\n \n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n+This is a Linux bash script that will set up tc to limit the outgoing\n+bandwidth for connections to the Bitcoin network. It limits outbound\n+TCP traffic with a source or destination port of 8333, but not if the\n+destination IP is within a LAN.\n \n-This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+This means one can have an always-on bitcoind instance running, and\n+another local bitcoind/bitcoin-qt instance which connects to this node\n+and receives blocks from it."
      }
    ]
  },
  {
    "sha": "3f77cef2edb200f87a07a45137b2624967ed2392",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjc3Y2VmMmVkYjIwMGY4N2EwN2E0NTEzN2IyNjI0OTY3ZWQyMzky",
    "commit": {
      "author": {
        "name": "Jan Sarenik",
        "email": "jan@tkos.co.il",
        "date": "2018-01-22T08:37:52Z"
      },
      "committer": {
        "name": "Jan Sarenik",
        "email": "jan@tkos.co.il",
        "date": "2018-01-28T16:52:24Z"
      },
      "message": "Doc: reflow release-notes.md",
      "tree": {
        "sha": "80db59ff71a20446ddff4a2c381d6567d4b1dba4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80db59ff71a20446ddff4a2c381d6567d4b1dba4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f77cef2edb200f87a07a45137b2624967ed2392",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f77cef2edb200f87a07a45137b2624967ed2392",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f77cef2edb200f87a07a45137b2624967ed2392",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f77cef2edb200f87a07a45137b2624967ed2392/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "56a2c5668a95fefb1a1e9e5b2f7641bc15ed941a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56a2c5668a95fefb1a1e9e5b2f7641bc15ed941a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/56a2c5668a95fefb1a1e9e5b2f7641bc15ed941a"
      }
    ],
    "stats": {
      "total": 121,
      "additions": 66,
      "deletions": 55
    },
    "files": [
      {
        "sha": "6268990207146bc2c516499f7aea553262251747",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 66,
        "deletions": 55,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f77cef2edb200f87a07a45137b2624967ed2392/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f77cef2edb200f87a07a45137b2624967ed2392/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=3f77cef2edb200f87a07a45137b2624967ed2392",
        "patch": "@@ -1,12 +1,12 @@\n-(note: this is a temporary file, to be added-to by anybody, and moved to\n-release-notes at release time)\n+(note: this is a temporary file, to be added-to by anybody, and moved\n+to release-notes at release time)\n \n Bitcoin Core version *version* is now available from:\n \n   <https://bitcoin.org/bin/bitcoin-core-*version*/>\n \n-This is a new major version release, including new features, various bugfixes\n-and performance improvements, as well as updated translations.\n+This is a new major version release, including new features, various\n+bugfixes and performance improvements, as well as updated translations.\n \n Please report bugs using the issue tracker at GitHub:\n \n@@ -19,27 +19,29 @@ To receive security and update notifications, please subscribe to:\n How to Upgrade\n ==============\n \n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n-or `bitcoind`/`bitcoin-qt` (on Linux).\n+If you are running an older version, shut it down. Wait until it\n+has completely shut down (which might take a few minutes for older\n+versions), then run the installer (on Windows) or just copy over\n+`/Applications/Bitcoin-Qt` (on Mac) or `bitcoind`/`bitcoin-qt` (on Linux).\n \n-The first time you run version 0.15.0, your chainstate database will be converted to a\n-new format, which will take anywhere from a few minutes to half an hour,\n-depending on the speed of your machine.\n+The first time you run version 0.15.0, your chainstate database will be\n+converted to a new format, which will take anywhere from a few minutes\n+to half an hour, depending on the speed of your machine.\n \n-Note that the block database format also changed in version 0.8.0 and there is no\n-automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading\n-directly from 0.7.x and earlier without redownloading the blockchain is not supported.\n-However, as usual, old wallet versions are still supported.\n+Note that the block database format also changed in version 0.8.0 and\n+there is no automatic upgrade code from before version 0.8 to version\n+0.15.0. Upgrading directly from 0.7.x and earlier without redownloading\n+the blockchain is not supported.  However, as usual, old wallet versions\n+are still supported.\n \n Downgrading warning\n -------------------\n \n-The chainstate database for this release is not compatible with previous\n-releases, so if you run 0.15 and then decide to switch back to any\n-older version, you will need to run the old release with the `-reindex-chainstate`\n-option to rebuild the chainstate data structures in the old format.\n+The chainstate database for this release is not compatible with\n+previous releases, so if you run 0.15 and then decide to switch back\n+to any older version, you will need to run the old release with the\n+`-reindex-chainstate` option to rebuild the chainstate data structures\n+in the old format.\n \n If your node has pruning enabled, this will entail re-downloading and\n processing the entire blockchain.\n@@ -48,83 +50,92 @@ Compatibility\n ==============\n \n Bitcoin Core is extensively tested on multiple operating systems using\n-the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.\n+the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP\n+is not supported.\n \n-Bitcoin Core should also work on most other Unix-like systems but is not\n-frequently tested on them.\n+Bitcoin Core should also work on most other Unix-like systems but is\n+not frequently tested on them.\n \n Notable changes\n ===============\n \n GCC 4.8.x\n --------------\n-The minimum version of GCC required to compile Bitcoin Core is now 4.8. No effort will be\n-made to support older versions of GCC. See discussion in issue #11732 for more information.\n+The minimum version of GCC required to compile Bitcoin Core is now 4.8. No\n+effort will be made to support older versions of GCC. See discussion in\n+issue #11732 for more information.\n \n HD-wallets by default\n ---------------------\n-Due to a backward-incompatible change in the wallet database, wallets created\n-with version 0.16.0 will be rejected by previous versions. Also, version 0.16.0\n-will only create hierarchical deterministic (HD) wallets.\n+Due to a backward-incompatible change in the wallet database, wallets\n+created with version 0.16.0 will be rejected by previous versions. Also,\n+version 0.16.0 will only create hierarchical deterministic (HD) wallets.\n \n Replace-By-Fee by default in GUI\n --------------------------------\n-The send screen now uses BIP-125 RBF by default, regardless of `-walletrbf`.\n-There is a checkbox to mark the transaction as final.\n+The send screen now uses BIP-125 RBF by default, regardless of\n+`-walletrbf`.  There is a checkbox to mark the transaction as final.\n \n-The RPC default remains unchanged: to use RBF, launch with `-walletrbf=1` or\n-use the `replaceable` argument for individual transactions.\n+The RPC default remains unchanged: to use RBF, launch with `-walletrbf=1`\n+or use the `replaceable` argument for individual transactions.\n \n Wallets directory configuration (`-walletdir`)\n ----------------------------------------------\n \n-Bitcoin Core now has more flexibility in where the wallets directory can be\n-located. Previously wallet database files were stored at the top level of the\n-bitcoin data directory. The behavior is now:\n+Bitcoin Core now has more flexibility in where the wallets directory\n+can be located. Previously wallet database files were stored at the top\n+level of the bitcoin data directory. The behavior is now:\n \n - For new installations (where the data directory doesn't already exist),\n-  wallets will now be stored in a new `wallets/` subdirectory inside the data\n-  directory by default.\n-- For existing nodes (where the data directory already exists), wallets will be\n-  stored in the data directory root by default. If a `wallets/` subdirectory\n-  already exists in the data directory root, then wallets will be stored in the\n-  `wallets/` subdirectory by default.\n+  wallets will now be stored in a new `wallets/` subdirectory inside\n+  the data directory by default.\n+- For existing nodes (where the data directory already exists), wallets\n+  will be stored in the data directory root by default. If a `wallets/`\n+  subdirectory already exists in the data directory root, then wallets\n+  will be stored in the `wallets/` subdirectory by default.\n - The location of the wallets directory can be overridden by specifying a\n-  `-walletdir=<path>` option where `<path>` can be an absolute path to a\n-  directory or directory symlink.\n+  `-walletdir=<path>` option where `<path>` can be an absolute path to\n+  a directory or directory symlink.\n \n-Care should be taken when choosing the wallets directory location, as if it\n-becomes unavailable during operation, funds may be lost.\n+Care should be taken when choosing the wallets directory location,\n+as if it becomes unavailable during operation, funds may be lost.\n \n Low-level RPC changes\n ----------------------\n-- The deprecated RPC `getinfo` was removed. It is recommended that the more specific RPCs are used:\n+- The deprecated RPC `getinfo` was removed. It is recommended that the\n+  more specific RPCs are used:\n   * `getblockchaininfo`\n   * `getnetworkinfo`\n   * `getwalletinfo`\n   * `getmininginfo`\n-- The wallet RPC `getreceivedbyaddress` will return an error if called with an address not in the wallet.\n-- The wallet RPC `addwitnessaddress` was deprecated and will be removed in version 0.17,\n-  set the `address_type` argument of `getnewaddress`, or option `-addresstype=[bech32|p2sh-segwit]` instead.\n+- The wallet RPC `getreceivedbyaddress` will return an error if called\n+  with an address not in the wallet.\n+- The wallet RPC `addwitnessaddress` was deprecated and will be removed\n+  in version 0.17, set the `address_type` argument of `getnewaddress`,\n+  or option `-addresstype=[bech32|p2sh-segwit]` instead.\n \n Changed command-line options\n -----------------------------\n-- `-debuglogfile=<file>` can be used to specify an alternative debug logging file.\n+- `-debuglogfile=<file>` can be used to specify an alternative debug\n+  logging file.\n \n Renamed script for creating JSON-RPC credentials\n -----------------------------\n-The `share/rpcuser/rpcuser.py` script was renamed to `share/rpcauth/rpcauth.py`. This script can be\n-used to create `rpcauth` credentials for a JSON-RPC user.\n+The `share/rpcuser/rpcuser.py` script was renamed to\n+`share/rpcauth/rpcauth.py`. This script can be used to create `rpcauth`\n+credentials for a JSON-RPC user.\n \n \n-- `dumpwallet` now includes hex-encoded scripts from the wallet in the dumpfile, and\n-  `importwallet` now imports these scripts, but corresponding addresses may not be added\n-  correctly or a manual rescan may be required to find relevant transactions.\n+- `dumpwallet` now includes hex-encoded scripts from the wallet in the\n+  dumpfile, and `importwallet` now imports these scripts, but corresponding\n+  addresses may not be added correctly or a manual rescan may be required\n+  to find relevant transactions.\n \n Credits\n =======\n \n Thanks to everyone who directly contributed to this release:\n \n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on\n+[Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      }
    ]
  }
]