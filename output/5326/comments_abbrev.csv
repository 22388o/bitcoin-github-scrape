jonasschnelli,2014-11-20T14:05:48Z,"just changed.\n- Removed binary as default format, made format option mandatory, list available formats if given format is not available (reduced need for documentation).\n- Also allow `.<format>` (along to `/<format>`) as format choosing option.\n",https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-63812192,63812192,
sipa,2014-11-20T14:09:43Z,"I'm not sure how useful .format is. .extension would be more natural. Of course, you could add dat as equivalent for binary, and .txt as equivalent for hex...\n",https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-63812740,63812740,
jtimon,2014-11-20T14:57:54Z,As said on IRC my preference would be to use ?format=hex and restore json as the default.\nBut this is probably bikeshedding and maybe too late. \n,https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-63819960,63819960,
jgarzik,2014-11-20T15:00:51Z,"No, it's not too late.  Now would be the time for wider criticism of the API, and the fixing of any API bugs.\n",https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-63820410,63820410,
sipa,2014-11-20T15:35:02Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-63826029,63826029,
laanwj,2014-11-24T11:16:51Z,"Code looks good to me, and I've done some basic testing and it works as expected.\n\nI am still in doubt whether we should expose the `.json` format at all, though.\n- Unlike the binary formats it is entirely Bitcoin Core RPC specific. If this is supposed to be a standard for REST access of blocks/transactions, every nook needs to be documented in a BIP.\n- It is not complete: for example, JSON fo",https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-64179650,64179650,
jtimon,2014-11-24T12:21:34Z,"So maybe a format arg (?format=hex) and binary as default?\nOn Nov 24, 2014 12:17 PM, ""Wladimir J. van der Laan"" <\nnotifications@github.com> wrote:\n\n> Code looks good to me, and I've done some basic testing and it works as\n> expected.\n> \n> I am still in doubt whether we should expose the .json format at all,\n> though.\n> - Unlike the binary formats it is entirely Bitcoin Core RPC specific.\",https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-64186615,64186615,
jgarzik,2014-11-24T13:50:24Z,"The JSON mirrors the RPC format output, when possible.\n\nHowever, the non-native argument is somewhat persuasive.  If you wanted to follow the ""convert client side"" logic to its conclusion, then removing JSON _and_ hex would result.  That certainly keeps in the in-bitcoind code at a minimum.\n\nHowever, two counterpoints:\n- The primary argument used on IRC seemed to be a worry about localhost XS",https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-64195797,64195797,
jgarzik,2014-11-24T13:52:03Z,"The fix + flag should be separate from the output format pull request.  We can go ahead and merge the fix and -rest flag, IMO.\n",https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-64195989,64195989,
jonasschnelli,2014-11-24T16:50:10Z,Okay. I will separate the pulls.\n,https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-64223941,64223941,
laanwj,2014-11-26T10:45:47Z,"> The primary argument used on IRC seemed to be a worry about localhost XSS, and all this objection to JSON seems like a parallel construction to achieve that.\n\nNo, that was IMO addressed by putting the functionality behind an option. Even without JSON, XSS fingerprinting may be possible by checking for absence/presence of errors. BTW I recently learnt that Tor Browser Bundle explicltly works ar",https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-64545500,64545500,
jonasschnelli,2014-11-26T13:05:59Z,"Just updated.\nFormat specific changes are removed from this pull (i'll open a new pull for this).\nNow we only deal with HTTP Response fix, `-rest` flag (default off), warmup response.\n",https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-64601303,64601303,
jonasschnelli,2014-11-27T12:23:51Z,Also see #5376 for further format-specific discussions.\nAlso referencing #5379 (unit-tests).\n,https://github.com/bitcoin/bitcoin/pull/5326#issuecomment-64784039,64784039,
sipa,2014-11-20T13:06:18Z,Remove the second '<< binaryTx'. The response is sent twice now (but the Content-Length only covers the first).\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20643544,20643544,src/rest.cpp
jonasschnelli,2014-11-20T13:14:31Z,oops. was to quick.\nNow it seams to be okay:\n\n```\ncurl -v http://localhost:18332/rest/tx/3cfe5051f7efe2702c5720b1ce6f5984181b9172a399935ff22a3e08df143c91/dat > test.bin\n```\n\n## \n\n```\n< Content-Length: 109\n```\n\n## \n\n```\nls -la test.bin\n-rw-r--r--  1 jonasschnelli  staff  109 20 Nov 14:13 test.bin\n```\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20643846,20643846,src/rest.cpp
laanwj,2014-11-20T13:24:25Z,"I think the point of using HTTPReply with headersOnly=true here was to avoid an extra string copy.\nYou could use `HTTPReplyHeader(HTTP_OK, fRun, binaryBlock.size(), ""application/octet-stream"") << binaryBlock`\n",https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20644281,20644281,src/rest.cpp
jonasschnelli,2014-11-20T13:29:51Z,Okay. That makes sense.\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20644505,20644505,src/rest.cpp
sipa,2014-11-20T14:08:01Z,Don't indent cases please.\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20646524,20646524,src/rest.cpp
sipa,2014-11-20T14:08:17Z,Spaces after ifs please.\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20646540,20646540,src/rest.cpp
Diapolo,2014-11-20T16:03:32Z,"IMHO better: `Accept public REST requests (default: 0)`\nCan you add the default for `-server`, too?\nSee e.g. `-forcednsseed` style to be able to use %d in the string.\n",https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20655683,20655683,src/init.cpp
Diapolo,2014-11-20T16:04:37Z,Can you use the correct style here?\n`if (formats.length() > 0) {` and so on.\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20655797,20655797,src/rest.cpp
Diapolo,2014-11-20T16:06:08Z,Is it true we are for sure at the loading block index stage? If no a simple loading would be better suiting.\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20655901,20655901,src/rest.cpp
laanwj,2014-11-20T16:26:23Z,It just means we're in warmup mode (during initialization). Let's just put that in the message.\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20657489,20657489,src/rest.cpp
jonasschnelli,2014-11-21T15:16:59Z,"I just thought we should answer with the same text as we answer RPC calls during ""warmup"". There we just answer with ""loading block index..."".\nShould we change it to just ""loading block index...""?\n",https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20719970,20719970,src/rest.cpp
jonasschnelli,2014-11-21T15:18:48Z,For now i think it make sense to just change the -rest command. Changing the -server command in this pull would mix things up.\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20720124,20720124,src/init.cpp
Diapolo,2014-11-21T15:39:21Z,Perhaps it makes sense to also change the string at it's original place in the code then.\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20721337,20721337,src/rest.cpp
jonasschnelli,2014-11-21T19:36:16Z,"What do you propose: ""Service currently not available (warmup mode).""?\n",https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20736568,20736568,src/rest.cpp
jgarzik,2014-11-21T19:47:14Z,Service temporarily unavailable.\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20737283,20737283,src/rest.cpp
jonasschnelli,2014-11-21T20:27:50Z,Okay. Set.\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20739612,20739612,src/rest.cpp
laanwj,2014-11-24T10:36:00Z,"Although in practice updates of booleans are likely atomic, this needs a `LOCK(cs_rpcWarmup)` for completeness' sake\n",https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20782237,20782237,src/rpcserver.cpp
laanwj,2014-11-24T10:49:39Z,Let's add the RPC warmup message here see https://github.com/laanwj/bitcoin/commit/c7e20830ddaa6a919f3f73e9d4fa30fab901561d\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20782838,20782838,src/rest.cpp
Diapolo,2014-11-26T14:27:34Z,@laanwj Here is another new translation string ;)? Still hoping you merge the others ^^.\n,https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20937241,20937241,src/init.cpp
laanwj,2014-11-26T14:33:56Z,"I know, but this one is unavoidable, and not just some cosmetic change.\n",https://github.com/bitcoin/bitcoin/pull/5326#discussion_r20937566,20937566,src/init.cpp
