promag,2021-05-26 23:28:05,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-849185851,849185851,
laanwj,2021-05-27 11:37:08,"Concept ACK, it's kind of fascinating this went without IPv6 support for so long.",https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-849560169,849560169,
theStack,2021-05-30 22:32:36,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-851071340,851071340,
theStack,2021-06-11 21:31:42,"@n-thumann: Would you mind rebasing this PR on master? Then #22103 is included, which fixed the IPv6 detection for *BSDs and macOS systems.",https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-859920910,859920910,
n-thumann,2021-06-11 22:01:45,"> @n-thumann: Would you mind rebasing this PR on master? Then #22103 is included, which fixed the IPv6 detection for *BSDs and macOS systems.\n\nDone ✌🏻 ",https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-859931166,859931166,
theStack,2021-06-11 23:41:07,"> > @n-thumann: Would you mind rebasing this PR on master? Then #22103 is included, which fixed the IPv6 detection for *BSDs and macOS systems.\n> \n> Done ✌🏻\n\nThanks!\n\nOn my system (OpenBSD 6.9), the functional test `interface_zmq.py` doesn't seem to get any notifications in the subscriber sockets in the PR branch. Only if I remove settings the sockopt `ZMQ_IPV6` from both server (bitco",https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-859958788,859958788,
n-thumann,2021-06-13 11:06:01,"> On my system (OpenBSD 6.9), the functional test `interface_zmq.py` doesn't seem to get any notifications in the subscriber sockets in the PR branch. Only if I remove settings the sockopt `ZMQ_IPV6` from both server (bitcoind, publisher) and client (zmq interface Test, subscriber) it works again :/ would be interesting to know if this behaviour also shows up on other systems (that are not covered",https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-860192603,860192603,
theStack,2021-06-13 16:31:23,"> It looks like that OpenBSD is a bit picky, when it comes to setting the `ZMQ_IPV6` option: While other OSes simply don't care (or bind dual-stacked), if the supplied address to listen on even is an IPv6 address, OpenBSD checks that. Therefore we must only set this option on OpenBSD, if it really is an IPv6 address. Same with the client side, so the functional test. If you want to have dual stack",https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-860237966,860237966,
n-thumann,2021-06-14 22:24:48,"> Looking at your fix, I'm wondering if we could simply _always_ only set `ZMQ_IPV6` if needed? That would avoid pre-processor conditionals depending on the OS (which is always kind of ugly and error-prone, considering that we check in code that is never compiled/run in the CI, in case of OpenBSD) and not cause troubles on other OSes that we didn't think of (e.g. DragonflyBSD?) but possibly have t",https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-861034084,861034084,
n-thumann,2021-06-16 21:20:54,"> I tend to agree with @luke-jr that having to analyze the address string first in order to set (or not set) a socket option is ""ugly"", but on the other hand I don't see another solution.\n\nAbsolutely! I'd be nice to have the plain address to bind, but the string entered by the user is the only thing to work with :/\n> Some suggestions: [...]\n\nApplied!\n",https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-862735101,862735101,
theStack,2021-06-18 13:50:05,"@n-thumann: looks good to me. Could you squash at least the last two commits (or probably better even the last three, in order to avoid an ""in-between"" state where the ""only set zmq_ipv6 if needed"" fix has only been applied on one side), in order to ease review?",https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-864053624,864053624,
n-thumann,2021-06-18 21:41:46,Squashed :),https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-864288324,864288324,
n-thumann,2021-06-20 14:59:24,"Done! Btw, I really do appreciate your feedback!",https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-864567355,864567355,
laanwj,2021-09-09 13:33:14,Code review ACK e6998838e5548991274ad2bf1697d862905b8837,https://github.com/bitcoin/bitcoin/pull/22079#issuecomment-916100862,916100862,
promag,2021-05-29 09:09:48,"nit , quote arg `='...'`?",https://github.com/bitcoin/bitcoin/pull/22079#discussion_r641913585,641913585,doc/zmq.md
n-thumann,2021-05-29 18:53:10,Done! (with double instead of single quotes),https://github.com/bitcoin/bitcoin/pull/22079#discussion_r641972557,641972557,doc/zmq.md
luke-jr,2021-06-15 19:41:21,This is pretty ugly. Can we just ignore errors setting `ZMQ_IPV6` if the subsequent bind succeeds?,https://github.com/bitcoin/bitcoin/pull/22079#discussion_r652098341,652098341,src/zmq/zmqpublishnotifier.cpp
n-thumann,2021-06-15 20:32:09,"I cleaned up a little bit, but I'm not sure, if ignoring an error while setting `ZMQ_IPV6` is a good idea: If it fails, the binding of an IPv6 address will also fail and and prior error could help narrowing down the issue. And if we set the option on e.g. OpenBSD without checking, the bind will always fail for IPv4.\nDid I got you right? You want to always set `ZMQ_IPV6` and see if the binding su",https://github.com/bitcoin/bitcoin/pull/22079#discussion_r652129700,652129700,src/zmq/zmqpublishnotifier.cpp
