gmaxwell,2017-07-15T04:02:06Z,@pstratem  you might have some interest in reviewing this.,https://github.com/bitcoin/bitcoin/pull/10831#issuecomment-315507700,315507700,
sipa,2017-07-15T18:06:54Z,utACK ff9a291b30d7464c1ff0990b1cab36d6119b2ae5,https://github.com/bitcoin/bitcoin/pull/10831#issuecomment-315551806,315551806,
instagibbs,2017-07-15T19:09:04Z,"tACK https://github.com/bitcoin/bitcoin/pull/10831/commits/ff9a291b30d7464c1ff0990b1cab36d6119b2ae5\n\nwith 1000 keypool size, topup went from 20 seconds to 1.6.",https://github.com/bitcoin/bitcoin/pull/10831#issuecomment-315555429,315555429,
TheBlueMatt,2017-07-15T23:41:39Z,"utACK ff9a291b30d7464c1ff0990b1cab36d6119b2ae5 (needs rebase, though). ",https://github.com/bitcoin/bitcoin/pull/10831#issuecomment-315570741,315570741,
gmaxwell,2017-07-16T00:18:24Z,"@TheBlueMatt  rebased, please re-review",https://github.com/bitcoin/bitcoin/pull/10831#issuecomment-315572295,315572295,
TheBlueMatt,2017-07-17T01:17:44Z,"@promag sadly I think it's a bit late for that for 15, it might be a decent change later, however.\n\nOn July 16, 2017 7:05:52 PM EDT, Matt Corallo <notifications@github.com> wrote:\n>TheBlueMatt commented on this pull request.\n>\n>\n>\n>>                                                  \n>secret.GetPrivKey(),\n>                                       mapKeyMetadata[pubkey.GetID()]);\n>     }\n> ",https://github.com/bitcoin/bitcoin/pull/10831#issuecomment-315652287,315652287,
promag,2017-07-17T07:45:51Z,"@TheBlueMatt another PR then.\n\nutACK 3986271.\n",https://github.com/bitcoin/bitcoin/pull/10831#issuecomment-315687135,315687135,
sipa,2017-07-17T08:03:52Z,reutACK 3986271c0accfe896c66a48d3ed884a7553b6413,https://github.com/bitcoin/bitcoin/pull/10831#issuecomment-315690170,315690170,
instagibbs,2017-07-17T13:05:21Z,reACK https://github.com/bitcoin/bitcoin/pull/10831/commits/4f811059fab9a9121befae09f66b9b12244051f0,https://github.com/bitcoin/bitcoin/pull/10831#issuecomment-315749702,315749702,
jonasschnelli,2017-07-17T13:20:25Z,"Nice!\nutACK 4f811059fab9a9121befae09f66b9b12244051f0.",https://github.com/bitcoin/bitcoin/pull/10831#issuecomment-315753323,315753323,
gmaxwell,2017-07-17T14:02:24Z,(new revisions are just due to adding a comment in the middle of the patch stack),https://github.com/bitcoin/bitcoin/pull/10831#issuecomment-315764720,315764720,
TheBlueMatt,2017-07-17T15:19:39Z,postumous utACK b0e8e2de8408cbaed9d70914c67b4c9f11397cb7 (lets clean up some of this stuff in 16).,https://github.com/bitcoin/bitcoin/pull/10831#issuecomment-315786724,315786724,
TheBlueMatt,2017-07-16T23:05:48Z,"It seems strange that we're creating a db transaction, only to throw it out in a second. I think its safe, but it might be nicer to let AddKeyPubKeyWithDB create a CWalletDB if it needs one automagically (eg by passing the walletdb in as a pointer).",https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127619405,127619405,src/wallet/wallet.cpp
promag,2017-07-17T01:03:21Z,"Another approach is to use `dbw` as the storage of the transaction. For instance, `CWalletDBWrapper` could keep a `CBD` instance, referenced counted by `CWalletDB`. This could be thread safe too.",https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127622400,127622400,src/wallet/wallet.cpp
promag,2017-07-17T01:06:20Z,I'm happy to write such alternative if there is interest.,https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127622496,127622496,src/wallet/wallet.cpp
gmaxwell,2017-07-17T02:57:03Z,"This isn't called when we don't need one; the case where we already have a dbwallet calls the WithDB version.  (and changing the prototype of the function would mean changing the function it overrides, which a db handle doesn't even make sense for, and 29 callsites) Unless I'm misunderstanding you.",https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127626915,127626915,src/wallet/wallet.cpp
gmaxwell,2017-07-17T02:58:23Z,"Seems like a reasonable thing to do, but I didn't even want to consider anything that complex-- I wanted to eliminate the complaint that having many keys is 'slow' for 0.15 because of the bad interactions with hd-wallet and rescan when the keypool isn't big.",https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127626971,127626971,src/wallet/wallet.cpp
laanwj,2017-07-17T08:04:17Z,"If we increase the default keypool size, the `LogPrintf(""keypool added key %d` message below shouldn't be logged for every key. Or at least moved to a debug category. It's ugly to log that many messages at first run, and it is performance overhead too.",https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127649698,127649698,src/wallet/wallet.cpp
promag,2017-07-17T09:16:51Z,"Unrelated, unless you want to fix all style issues?",https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127662078,127662078,src/wallet/wallet.cpp
instagibbs,2017-07-17T13:01:54Z,I don't think we should nit people doing partial style issue fixes unless it affects reviewability.,https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127700902,127700902,src/wallet/wallet.cpp
laanwj,2017-07-17T13:10:34Z,"Yes, this seems to be a ""damned if you do, damned if you don't"" thing.\n- If you deliberately make style fixes to code you touch, you get comments that it's unrelated\n- If you deliberately don't make style fixes to code you touch, you get questions why you didn't update the code for the style guidelines\n\nI think both are valid, unless it makes review-ability in which case it could still be ",https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127702860,127702860,src/wallet/wallet.cpp
laanwj,2017-07-17T13:23:28Z,"I don't understand this code.\nGiven that `pwalletdbEncryption` is not used in `CCryptoKeyStore::AddKeyPubKey`, could this code be moved before `if (!CCryptoKeyStore::AddKeyPubKey`? This would avoid some awkward duplication here.\nOr is it used indirectly? This looks really sneaky. Please add a comment if you need to keep it at least, so that no one else gets my bad idea.",https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127705930,127705930,src/wallet/wallet.cpp
gmaxwell,2017-07-17T13:36:49Z,"It's used-- alas,  the whole purpose of that pre-existing terrible variable is because CCryptoKeyStore::AddKeyPubKey  calls AddCryptedKey which on actual wallets is overridden to the function below.  CCryptoKeyStore rightfully has no concept of wallet databases, so the variable is used to tunnel through it, to get it to the AddCryptedKey override below.  This infrastructure was preexisting because",https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127709130,127709130,src/wallet/wallet.cpp
gmaxwell,2017-07-17T13:46:37Z,Added a comment,https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127711641,127711641,src/wallet/wallet.cpp
gmaxwell,2017-07-17T14:00:16Z,Aggregated to a summary line.,https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127715298,127715298,src/wallet/wallet.cpp
gmaxwell,2017-07-17T14:01:56Z,"I have been trying to limit them to things that will show up in the same patch hunks, and only changes which I'm pretty sure won't break review.   I'm happy to do what other people want, though I prefer to at least fix braces (because I dislike reviewing the risky looking unbraced code myself)-- but ultimately I just need clear guidance to avoid the damned if/don't.",https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127715733,127715733,src/wallet/wallet.cpp
TheBlueMatt,2017-07-17T15:17:18Z,"I was confused, sorry.",https://github.com/bitcoin/bitcoin/pull/10831#discussion_r127737165,127737165,src/wallet/wallet.cpp
