[
  {
    "sha": "58446094519151e2e203944267e592eec2470643",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODQ0NjA5NDUxOTE1MWUyZTIwMzk0NDI2N2U1OTJlZWMyNDcwNjQz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-01-12T21:51:26Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-02-28T13:24:16Z"
      },
      "message": "[net] Avoid initialization to a value that is never read\n\nPrior to this commit the value stored to `s` at initialization\nwas never read (in the case of STRERROR_R_CHAR_P).",
      "tree": {
        "sha": "f170cd69947777262c05683db90694723566c1c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f170cd69947777262c05683db90694723566c1c5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58446094519151e2e203944267e592eec2470643",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58446094519151e2e203944267e592eec2470643",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58446094519151e2e203944267e592eec2470643",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58446094519151e2e203944267e592eec2470643/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7e2a2212ecac41bf4a4fd9f2de6b4cd258938497",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e2a2212ecac41bf4a4fd9f2de6b4cd258938497",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e2a2212ecac41bf4a4fd9f2de6b4cd258938497"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b26f7bcc1c37b2efa4fbfd3a227ce192d5b28ac1",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58446094519151e2e203944267e592eec2470643/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58446094519151e2e203944267e592eec2470643/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=58446094519151e2e203944267e592eec2470643",
        "patch": "@@ -672,13 +672,14 @@ std::string NetworkErrorString(int err)\n std::string NetworkErrorString(int err)\n {\n     char buf[256];\n-    const char *s = buf;\n     buf[0] = 0;\n     /* Too bad there are two incompatible implementations of the\n      * thread-safe strerror. */\n+    const char *s;\n #ifdef STRERROR_R_CHAR_P /* GNU variant can return a pointer outside the passed buffer */\n     s = strerror_r(err, buf, sizeof(buf));\n #else /* POSIX variant always returns message in buffer */\n+    s = buf;\n     if (strerror_r(err, buf, sizeof(buf)))\n         buf[0] = 0;\n #endif"
      }
    ]
  }
]