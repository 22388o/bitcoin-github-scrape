DrahtBot,2018-11-08T17:08:40Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15282](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15282.html) (test: Replace hard-coded hex tx with class ",https://github.com/bitcoin/bitcoin/pull/14691#issuecomment-437079912,437079912,
fanquake,2018-11-10T02:10:28Z,"Concept ACK\n\nHaven't looked at the changes, but I'm seeing a ~1.4x speedup on my machine between `feature_pruning.py` in master (e70a19e7132dac91b7948fcbfac086f86fec3d88) and c8ef522:\n```\nfeature_pruning.py | ✓ Passed  | 819 s\nALL                | ✓ Passed  | 819 s (accumulated) \nRuntime: 819 s\n```\n\n```\nfeature_pruning.py | ✓ Passed  | 577 s\nALL                | ✓ Passed  | 5",https://github.com/bitcoin/bitcoin/pull/14691#issuecomment-437550050,437550050,
DrahtBot,2019-03-18T18:08:56Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/14691#issuecomment-474037028,474037028,
fanquake,2019-06-19T01:11:19Z,"@conscott I realise this hasn't seen much traction / concept ACKs, however are you interested in rebasing?",https://github.com/bitcoin/bitcoin/pull/14691#issuecomment-503367155,503367155,
conscott,2019-06-19T01:55:26Z,"I almost forgot this was still alive :)\n\nI will rebase when I get the chance, hopefully this week! ",https://github.com/bitcoin/bitcoin/pull/14691#issuecomment-503374981,503374981,
sipa,2019-06-19T07:09:59Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14691#issuecomment-503436567,503436567,
jamesob,2019-06-26T15:08:45Z,Concept ACK. Will review on rebase.,https://github.com/bitcoin/bitcoin/pull/14691#issuecomment-505917763,505917763,
jnewbery,2019-07-08T15:52:00Z,Is this still required after #15686?,https://github.com/bitcoin/bitcoin/pull/14691#issuecomment-509283109,509283109,
conscott,2019-07-09T11:11:57Z,"@jnewbery - Looks like you got it covered more elegantly with OP_NOPs :) It was a fun learning experience anyhow. \n\nI will go ahead and close this. \n",https://github.com/bitcoin/bitcoin/pull/14691#issuecomment-509599652,509599652,
promag,2019-06-19T09:11:32Z,"Could simplify by ditching `num` parameter? This way below could be\n```py\nreturn [create_big_transaction(node, utxo, fee, op_return_txout) for utxo in utxos]\n```",https://github.com/bitcoin/bitcoin/pull/14691#discussion_r295196946,295196946,test/functional/test_framework/util.py
