randolf,2018-02-28T16:05:54Z,"If you want to use ISO formatting though, then perhaps get rid of the dashes and the colons while you're at it so that it looks like this?\n\n``20180228T123456Z``",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-369288427,369288427,
practicalswift,2018-02-28T18:41:34Z,"@randolf The `Z` is added three lines down. Removing the dashes and colons them would reduce readability, so I'd like to keep them around.",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-369339673,369339673,
randolf,2018-02-28T21:39:36Z,"@practicalswift Ah, yes, I see it now.  Thanks.",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-369392217,369392217,
laanwj,2018-03-01T10:12:22Z,"Concept ACK.\n\nWhen changing the log timestamp format you will need to update some of the testing infrastructure, though, such as `test/functional/combine_logs.py`. This combines logs from bitcoind with logs from the test framework itself, which then should also use the new format.\n\n> Removing the dashes and colons them would reduce readability, so I'd like to keep them around.\n\nThe ISO",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-369543821,369543821,
practicalswift,2018-03-01T10:33:22Z,"@laanwj Thanks for reviewing!\n\nI'll take a look at `combine_logs.py`.\n\nYes, `2018-02-28T12:34:56Z` (with dashes and colons) is valid according to ISO 8601 :-)",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-369549596,369549596,
laanwj,2018-03-05T17:50:24Z,This needs mention in the release notes too; some people might be using scripts that parse the log output that rely on a specific format.,https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370504049,370504049,
randolf,2018-03-06T05:58:10Z,@laanwj I agree.  Perhaps a custom log formatting option is in order for the long-run?  I could probably tackle this after this PR is closed.,https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370672792,370672792,
laanwj,2018-03-06T14:15:57Z,"@randolf Could be, though personally I'd prefer to not add any more configurability to the log format (there is already `-logtimestamps`, `-logtimemicros`). This is all more option combinations that need to be maintained. \n\nIn my opinion switching to a standard format (ISO 8601) seems a valid one-time move to do in the next major release. If anything it makes parsing easier because there are e",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370794583,370794583,
practicalswift,2018-03-06T14:42:01Z,"I agree with @laanwj here. I'm not sure more configurability is better in this case.\n\n@laanwj Can I do something to make sure a note is added to the 0.17.0 release notes? Is there a file that I can edit now or what is the procedure? :-)",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370802877,370802877,
laanwj,2018-03-06T14:47:40Z,"> @laanwj Can I do something to make sure a note is added to the 0.17.0 release notes? Is there a file that I can edit now or what is the procedure? :-)\n\nSure - standard procedure is to just add an item to `doc/release-notes.md`, under notable changes.\n",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370804863,370804863,
practicalswift,2018-03-06T14:48:31Z,@laanwj Excellent! I'll do that and adjust the `TIMESTAMP_PATTERN` in `test/functional/combine_logs.py`.,https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370805153,370805153,
practicalswift,2018-03-06T15:20:04Z,Updated. Please review :-),https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370815794,370815794,
laanwj,2018-03-06T15:25:32Z,"You didn't update the log setup in `test_framework.py`:\n```\n        # Format logs the same as bitcoind's debug.log with microprecision (so log files can be concatenated and sorted)\n        formatter = logging.Formatter(fmt='%(asctime)s.%(msecs)03d000 %(name)s (%(levelname)s): %(message)s', datefmt='%Y-%m-%d %H:%M:%S')\n```",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370817816,370817816,
practicalswift,2018-03-06T15:32:15Z,"@laanwj Oh, sorry about that. Now fixed. Please re-review :-)",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370820158,370820158,
practicalswift,2018-03-06T15:56:29Z,"@laanwj Would it make sense to add the following patch to this PR in order to make the switch to ISO 8601 complete, or is that a subject for a follow-up PR?\n\n```diff\ndiff --git a/src/init.cpp b/src/init.cpp\nindex 1cc5c5f..09702cd 100644\n--- a/src/init.cpp\n+++ b/src/init.cpp\n@@ -1223,7 +1223,7 @@ bool AppInitMain()\n     }\n\n     if (!fLogTimestamps)\n-        LogPrintf(""Startup ",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370828992,370828992,
laanwj,2018-03-06T15:56:30Z,utACK https://github.com/bitcoin/bitcoin/pull/12567/commits/518820b1f8490eca2af82eebfc6e110857194229,https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370828998,370828998,
laanwj,2018-03-06T16:01:21Z,"@practicalswift sure - let's do that at once - though if we want to enforce a single format throughout the codebase, why not factor out the `DateTimeStrFormat(""%Y-%m-%dT%H:%M:%SZ"", timespec)` to a `FormatISO8601` function?\nNote that we have a function like that in `src/wallet/rpcdump.cpp`:\n```c++\nstd::string static EncodeDumpTime(int64_t nTime) {\n    return DateTimeStrFormat(""%Y-%m-%dT%H:%",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370830819,370830819,
practicalswift,2018-03-06T21:40:24Z,"Updated. Introduced `FormatISO8601{DateTime,Date,Time}(int64_t)` which is now used consistently.\n\n`DateTimeStrFormat(â€¦)` is now only used by `FormatISO8601{DateTime,Date,Time}(int64_t)` and by the tests:\n\n```\n$ git grep DateTimeStrFormat | grep -vE '^(src/test/util_tests.cpp|src/utiltime)'\n$\n```\n\nPlease re-review :-)",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370938202,370938202,
laanwj,2018-03-06T22:47:40Z,utACK ed802867d,https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-370957011,370957011,
randolf,2018-03-07T04:31:04Z,"utACK.\n\n@laanwj I agree with your recommendation to standardize on the ISO format as I feel that it's the logical choice for use in log files, plus your point about keeping code maintenance simpler provides excellent justification in this case.",https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-371019345,371019345,
practicalswift,2018-03-09T14:02:30Z,Rebased! Please re-review :-),https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-371820176,371820176,
sipa,2018-03-09T17:50:52Z,utACK a7324bd799591546c2ae069f29cb82a66d427769,https://github.com/bitcoin/bitcoin/pull/12567#issuecomment-371890610,371890610,
laanwj,2018-03-06T22:30:09Z,Do ISO 8601 dates require a timezone as well?,https://github.com/bitcoin/bitcoin/pull/12567#discussion_r172682958,172682958,src/utiltime.cpp
practicalswift,2018-03-06T22:32:50Z,Nope they don't :-),https://github.com/bitcoin/bitcoin/pull/12567#discussion_r172683579,172683579,src/utiltime.cpp
