mzumsande,2021-08-18 08:27:26,"I agree that corrupt data shouldn't assert.\n\n`Check()` used to be restricted to tests / use of the `checkaddrman` option, it was never run per default. This PR makes it run always for `Unserialize()`, so it introduces stricter rules for the level of inconsistencies we tolerate from peers.dat. \nI think this change of default behavior should be mentioned in the OP and maybe somewhere in the co",https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-900923279,900923279,
MarcoFalke,2021-08-18 08:30:03,"Thanks, renamed PR title",https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-900925089,900925089,
mzumsande,2021-08-18 08:41:22,"Thanks! I think there is a bug in the `addman_serdeser` fuzz test (see CI fail) that would need fixing, see https://github.com/mzumsande/bitcoin/commit/f4840614c0b945460a833ba8e9d0da2df3ce80c3",https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-900932484,900932484,
jnewbery,2021-08-18 09:22:20,"With this change, if we have a bug that causes us to write a peers.dat file that's corrupt in any way, then it would mostly be undetected - the addrman would be cleared and startup would continue as normal. As @mzumsande points out, if it's possible to trigger such a bug over p2p, then an adversary could cause victims to lose their entire addrman on restart.\n\nIt might be safer to do the `Force",https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-900959795,900959795,
naumenkogs,2021-08-20 18:22:23,">With this change, if we have a bug that causes us to write a peers.dat file that's corrupt in any way, then it would mostly be undetected - the addrman would be cleared and startup would continue as normal. As @mzumsande points out, if it's possible to trigger such a bug over p2p, then an adversary could cause victims to lose their entire addrman on restart.\n\n> It might be safer to do the For",https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-902874897,902874897,
DrahtBot,2021-08-21 02:22:30,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22974](https://github.com/bitcoin/bitcoin/pull/22974) (addrman: Improve performance of Good by mzumsande)\n* [#22950](ht",https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-903039535,903039535,
MarcoFalke,2021-08-21 12:45:28,I agree with @vasild that this is an unrelated bug that already exists. I've created a separate pull to fix that: #22762,https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-903111513,903111513,
MarcoFalke,2021-09-15 09:00:09,"> (the fuzzer is upset, probably needs some petting)\n\nThanks. Force pushed to pet the fuzzer and fixup the docs. (no other code changes)",https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-919833506,919833506,
MarcoFalke,2021-09-15 10:11:34,"@mzumsande @naumenkogs @jnewbery Now that #22762 is merged, I rebased this pull. This should address your concerns.",https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-919886043,919886043,
naumenkogs,2021-09-15 12:06:52,ACK fa6f5c9ea4dad2e15065001fef9ae6a9325c632b,https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-919960395,919960395,
MarcoFalke,2021-09-21 10:45:03,Rebased; Only trivial conflicts in the tests.,https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-923859769,923859769,
naumenkogs,2021-09-21 10:59:19,ACK fa3669f72f69662049b55ad1a482b4a0f9f7ae40,https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-923869883,923869883,
jnewbery,2021-09-21 15:48:03,Code review ACK fa3669f72f69662049b55ad1a482b4a0f9f7ae40,https://github.com/bitcoin/bitcoin/pull/22734#issuecomment-924118039,924118039,
vasild,2021-08-18 09:27:32,"nit: maybe mention ""addrman"" somewhere in this message. The following looks too generic:\n```\n2021-08-18T07:12:57Z ERROR: DeserializeDB: Deserialize or I/O error - Corrupt data. Consistency check failed with code -16.: iostream error\n```\n\nnit: remove the dot after %s: `with code -16.: iostream error`",https://github.com/bitcoin/bitcoin/pull/22734#discussion_r691065092,691065092,src/addrman.h
MarcoFalke,2021-09-10 11:21:20,"The new failure mentions the file name `peers.dat`. Is this enough?\n\n```\nError: Invalid or corrupt peers.dat (Corrupt data. Consistency check failed with code -16.: iostream error). If you believe this is a bug, please report it to https://github.com/bitcoin/bitcoin/issues. As a workaround, you can move the file (""/tmp/bitcoin_func_test_ybw3djdd/node0/regtest/peers.dat"") out of the way (rena",https://github.com/bitcoin/bitcoin/pull/22734#discussion_r706102358,706102358,src/addrman.h
MarcoFalke,2021-09-10 11:25:07,"Thanks, removed dot.",https://github.com/bitcoin/bitcoin/pull/22734#discussion_r706104247,706104247,src/addrman.h
vasild,2021-09-10 11:37:07,`peers.dat` looks even better than `addrman`.,https://github.com/bitcoin/bitcoin/pull/22734#discussion_r706110567,706110567,src/addrman.h
vasild,2021-09-15 08:01:30,"It would be nice if this mentions ""addrman"" or ""peers.dat"". Without it the error message looks too generic, it is unclear where the problem is and the user may freak out that the ""corrupt data"" applies to the wallet:\n\n> terminate called after throwing an instance of 'std::ios_base::failure[abi:cxx11]'\n  what():  Corrupt data. Consistency check failed with code -1: iostream error",https://github.com/bitcoin/bitcoin/pull/22734#discussion_r708938715,708938715,src/addrman.cpp
MarcoFalke,2021-09-15 08:30:55,"Can you explain what code path didn't catch the exception? Raw exceptions shouldn't be displayed to the user at all. See also https://github.com/bitcoin/bitcoin/pull/22734#issue-714811417 on steps to test this pull request.\n\n(Or see the attached test to reproduce)",https://github.com/bitcoin/bitcoin/pull/22734#discussion_r708962099,708962099,src/addrman.cpp
vasild,2021-09-15 09:01:44,"Uff, sorry, I remember this was discussed before. I was misled somehow by the fuzzer output (quoted above).",https://github.com/bitcoin/bitcoin/pull/22734#discussion_r708987746,708987746,src/addrman.cpp
MarcoFalke,2021-09-15 09:02:38,No worries. Resolving for now.,https://github.com/bitcoin/bitcoin/pull/22734#discussion_r708988496,708988496,src/addrman.cpp
