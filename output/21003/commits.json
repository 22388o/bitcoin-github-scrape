[
  {
    "sha": "fa576b4532814b4bca1936d170cabd01fbc51960",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTU3NmI0NTMyODE0YjRiY2ExOTM2ZDE3MGNhYmQwMWZiYzUxOTYw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-25T11:22:03Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-03-03T08:17:37Z"
      },
      "message": "Move MakeNoLogFileContext to common libtest_util, and use it in bench\n\nCan be reviewed with --color-moved=dimmed-zebra",
      "tree": {
        "sha": "406f945a0fa46f6750f6a563e311c88932673f97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/406f945a0fa46f6750f6a563e311c88932673f97"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa576b4532814b4bca1936d170cabd01fbc51960",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhQgQwAgPBGzP3rO8zqrS/jwYmb10W5m0RX4yYjOD7lBBCt6C7jjjGeAGPvVyZu\nCaJFRNlfApIuGaOzUAiwn8OWtKPQQkz9nltojU2TzR6fuRw+YZfmvek/pfSAybH4\n189VV/giFsjjhsX32kHJCf4njTcaXqvDbNB0TtS6dUIYnbUW09NamI6U9JOUSems\nIT3IU5faIcZ5sj+bmtrPARKBS3DitrUjX3giEmg9NTWJzAiWGvJzGK9pH0Ua5W3h\nPFp12b0e6rJcHJ+3qz+cj9aHcjLFIT9+gE4lC3SAdv4DbI6HMoGtda8OKmxhFjTC\n8DIQznLtpI/1VIamA3Xz+GlqgXZOsaW8eh66y/erux0cwZRvwc9Tz0rm2GQNj1gb\nDaHeGnjpaZII0f0CdSDB2eHDonIMXnK/e87k1PF00J8IUdTZ0IuHHvmTeA/h3TRp\nXd1ecVT8mb8OYATItnkRVH7G38SaTDYTBrO77Sci//nyESVNXFXqVY3a4e4hhWRr\nAE8PJ7GC\n=wN9p\n-----END PGP SIGNATURE-----",
        "payload": "tree 406f945a0fa46f6750f6a563e311c88932673f97\nparent cfce346508f1f7513a0cfa2cea7d7f8336d01c6b\nauthor MarcoFalke <falke.marco@gmail.com> 1611573723 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1614759457 +0100\n\nMove MakeNoLogFileContext to common libtest_util, and use it in bench\n\nCan be reviewed with --color-moved=dimmed-zebra\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa576b4532814b4bca1936d170cabd01fbc51960",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa576b4532814b4bca1936d170cabd01fbc51960",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa576b4532814b4bca1936d170cabd01fbc51960/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cfce346508f1f7513a0cfa2cea7d7f8336d01c6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfce346508f1f7513a0cfa2cea7d7f8336d01c6b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cfce346508f1f7513a0cfa2cea7d7f8336d01c6b"
      }
    ],
    "stats": {
      "total": 90,
      "additions": 38,
      "deletions": 52
    },
    "files": [
      {
        "sha": "67ab02a5b33190e239acc9c5f361ab7b19773e66",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -16,13 +16,7 @@\n \n static void AssembleBlock(benchmark::Bench& bench)\n {\n-    TestingSetup test_setup{\n-        CBaseChainParams::REGTEST,\n-        /* extra_args */ {\n-            \"-nodebuglogfile\",\n-            \"-nodebug\",\n-        },\n-    };\n+    const auto test_setup = MakeNoLogFileContext<const TestingSetup>();\n \n     const std::vector<unsigned char> op_true{OP_TRUE};\n     CScriptWitness witness;\n@@ -38,7 +32,7 @@ static void AssembleBlock(benchmark::Bench& bench)\n     std::array<CTransactionRef, NUM_BLOCKS - COINBASE_MATURITY + 1> txs;\n     for (size_t b{0}; b < NUM_BLOCKS; ++b) {\n         CMutableTransaction tx;\n-        tx.vin.push_back(MineBlock(test_setup.m_node, SCRIPT_PUB));\n+        tx.vin.push_back(MineBlock(test_setup->m_node, SCRIPT_PUB));\n         tx.vin.back().scriptWitness = witness;\n         tx.vout.emplace_back(1337, SCRIPT_PUB);\n         if (NUM_BLOCKS - b >= COINBASE_MATURITY)\n@@ -48,13 +42,13 @@ static void AssembleBlock(benchmark::Bench& bench)\n         LOCK(::cs_main); // Required for ::AcceptToMemoryPool.\n \n         for (const auto& txr : txs) {\n-            const MempoolAcceptResult res = ::AcceptToMemoryPool(::ChainstateActive(), *test_setup.m_node.mempool, txr, false /* bypass_limits */);\n+            const MempoolAcceptResult res = ::AcceptToMemoryPool(::ChainstateActive(), *test_setup->m_node.mempool, txr, false /* bypass_limits */);\n             assert(res.m_result_type == MempoolAcceptResult::ResultType::VALID);\n         }\n     }\n \n     bench.run([&] {\n-        PrepareBlock(test_setup.m_node, SCRIPT_PUB);\n+        PrepareBlock(test_setup->m_node, SCRIPT_PUB);\n     });\n }\n "
      },
      {
        "sha": "25d1a2b56c43dda7d51a2c519098b54348cd5f6b",
        "filename": "src/bench/duplicate_inputs.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/bench/duplicate_inputs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/bench/duplicate_inputs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/duplicate_inputs.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -14,13 +14,7 @@\n \n static void DuplicateInputs(benchmark::Bench& bench)\n {\n-    TestingSetup test_setup{\n-        CBaseChainParams::REGTEST,\n-        /* extra_args */ {\n-            \"-nodebuglogfile\",\n-            \"-nodebug\",\n-        },\n-    };\n+    const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n \n     const CScript SCRIPT_PUB{CScript(OP_TRUE)};\n "
      },
      {
        "sha": "4f49fba7b755b76d2983fd43e9e69e1661504f8f",
        "filename": "src/bench/mempool_eviction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/bench/mempool_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/bench/mempool_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_eviction.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -25,13 +25,7 @@ static void AddTx(const CTransactionRef& tx, const CAmount& nFee, CTxMemPool& po\n // unique transactions for a more meaningful performance measurement.\n static void MempoolEviction(benchmark::Bench& bench)\n {\n-    TestingSetup test_setup{\n-        CBaseChainParams::REGTEST,\n-        /* extra_args */ {\n-            \"-nodebuglogfile\",\n-            \"-nodebug\",\n-        },\n-    };\n+    const auto testing_setup = MakeNoLogFileContext<const TestingSetup>();\n \n     CMutableTransaction tx1 = CMutableTransaction();\n     tx1.vin.resize(1);"
      },
      {
        "sha": "f28768efc8599488d6c6d1cf19a1d08b8ff3ff99",
        "filename": "src/bench/mempool_stress.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/bench/mempool_stress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/bench/mempool_stress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_stress.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -79,7 +79,7 @@ static void ComplexMemPool(benchmark::Bench& bench)\n         ordered_coins.emplace_back(MakeTransactionRef(tx));\n         available_coins.emplace_back(ordered_coins.back(), tx_counter++);\n     }\n-    TestingSetup test_setup;\n+    const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(CBaseChainParams::MAIN);\n     CTxMemPool pool;\n     LOCK2(cs_main, pool.cs);\n     bench.run([&]() NO_THREAD_SAFETY_ANALYSIS {"
      },
      {
        "sha": "c8886a4c237ae46e2d376f4cf061612f56253693",
        "filename": "src/bench/rpc_blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/bench/rpc_blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/bench/rpc_blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rpc_blockchain.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -15,7 +15,7 @@\n namespace {\n \n struct TestBlockAndIndex {\n-    TestingSetup test_setup{};\n+    const std::unique_ptr<const TestingSetup> testing_setup{MakeNoLogFileContext<const TestingSetup>(CBaseChainParams::MAIN)};\n     CBlock block{};\n     uint256 blockHash{};\n     CBlockIndex blockindex{};"
      },
      {
        "sha": "c96ef209e363b92c35e9a76455ea7ca31fe653bb",
        "filename": "src/bench/wallet_balance.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 11,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/bench/wallet_balance.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/bench/wallet_balance.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/wallet_balance.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -14,30 +14,24 @@\n \n static void WalletBalance(benchmark::Bench& bench, const bool set_dirty, const bool add_watchonly, const bool add_mine)\n {\n-    TestingSetup test_setup{\n-        CBaseChainParams::REGTEST,\n-        /* extra_args */ {\n-            \"-nodebuglogfile\",\n-            \"-nodebug\",\n-        },\n-    };\n+    const auto test_setup = MakeNoLogFileContext<const TestingSetup>();\n \n     const auto& ADDRESS_WATCHONLY = ADDRESS_BCRT1_UNSPENDABLE;\n \n-    CWallet wallet{test_setup.m_node.chain.get(), \"\", CreateMockWalletDatabase()};\n+    CWallet wallet{test_setup->m_node.chain.get(), \"\", CreateMockWalletDatabase()};\n     {\n         wallet.SetupLegacyScriptPubKeyMan();\n         bool first_run;\n         if (wallet.LoadWallet(first_run) != DBErrors::LOAD_OK) assert(false);\n     }\n-    auto handler = test_setup.m_node.chain->handleNotifications({&wallet, [](CWallet*) {}});\n+    auto handler = test_setup->m_node.chain->handleNotifications({&wallet, [](CWallet*) {}});\n \n     const Optional<std::string> address_mine{add_mine ? Optional<std::string>{getnewaddress(wallet)} : nullopt};\n     if (add_watchonly) importaddress(wallet, ADDRESS_WATCHONLY);\n \n     for (int i = 0; i < 100; ++i) {\n-        generatetoaddress(test_setup.m_node, address_mine.value_or(ADDRESS_WATCHONLY));\n-        generatetoaddress(test_setup.m_node, ADDRESS_WATCHONLY);\n+        generatetoaddress(test_setup->m_node, address_mine.value_or(ADDRESS_WATCHONLY));\n+        generatetoaddress(test_setup->m_node, ADDRESS_WATCHONLY);\n     }\n     SyncWithValidationInterfaceQueue();\n "
      },
      {
        "sha": "8bf484722c05f78f81197c08681d4a220b778242",
        "filename": "src/test/fuzz/banman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/banman.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -8,6 +8,7 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n #include <util/system.h>\n \n #include <cstdint>"
      },
      {
        "sha": "328a31f1dcee540d936553e8f670e88fa8dcd89d",
        "filename": "src/test/fuzz/coins_view.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/coins_view.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/coins_view.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/coins_view.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -16,6 +16,7 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n #include <validation.h>\n \n #include <cstdint>"
      },
      {
        "sha": "f457201091ebb9de1193f314a03dc6c3ec4cc9e1",
        "filename": "src/test/fuzz/connman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/connman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/connman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/connman.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -10,6 +10,7 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n #include <util/translation.h>\n \n #include <cstdint>"
      },
      {
        "sha": "473caec6ffa9a085669df21f3e22aad72c614aa7",
        "filename": "src/test/fuzz/data_stream.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/data_stream.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/data_stream.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/data_stream.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -7,6 +7,7 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n \n #include <cstdint>\n #include <vector>"
      },
      {
        "sha": "116b7a71d93f7e66204e04cc6370a9abc233f7f2",
        "filename": "src/test/fuzz/policy_estimator.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/policy_estimator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/policy_estimator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/policy_estimator.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -7,6 +7,7 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n #include <txmempool.h>\n \n #include <cstdint>"
      },
      {
        "sha": "9021d95954fd7cd2324f1daead64155768536c62",
        "filename": "src/test/fuzz/policy_estimator_io.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/policy_estimator_io.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/policy_estimator_io.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/policy_estimator_io.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -6,6 +6,7 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n \n #include <cstdint>\n #include <vector>"
      },
      {
        "sha": "303dcf13e39254359e6870dd26dd40f997b7ba6d",
        "filename": "src/test/fuzz/signet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/signet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/signet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/signet.cpp?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -10,6 +10,7 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n \n #include <cstdint>\n #include <optional>"
      },
      {
        "sha": "5065cde06bc4b0b2a8f85c59074bd6ba1a500335",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -23,11 +23,9 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/util/net.h>\n-#include <test/util/setup_common.h>\n #include <txmempool.h>\n #include <uint256.h>\n #include <util/time.h>\n-#include <util/vector.h>\n #include <version.h>\n \n #include <algorithm>\n@@ -324,19 +322,6 @@ inline std::unique_ptr<CNode> ConsumeNodeAsUniquePtr(FuzzedDataProvider& fdp, co\n \n void FillNode(FuzzedDataProvider& fuzzed_data_provider, CNode& node, bool init_version) noexcept;\n \n-template <class T = const BasicTestingSetup>\n-std::unique_ptr<T> MakeNoLogFileContext(const std::string& chain_name = CBaseChainParams::REGTEST, const std::vector<const char*>& extra_args = {})\n-{\n-    // Prepend default arguments for fuzzing\n-    const std::vector<const char*> arguments = Cat(\n-        {\n-            \"-nodebuglogfile\",\n-        },\n-        extra_args);\n-\n-    return MakeUnique<T>(chain_name, arguments);\n-}\n-\n class FuzzedFileProvider\n {\n     FuzzedDataProvider& m_fuzzed_data_provider;"
      },
      {
        "sha": "7323f1f0b6ffb61e7d2ae09815520fa6db781a89",
        "filename": "src/test/util/setup_common.h",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/util/setup_common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa576b4532814b4bca1936d170cabd01fbc51960/src/test/util/setup_common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.h?ref=fa576b4532814b4bca1936d170cabd01fbc51960",
        "patch": "@@ -15,6 +15,7 @@\n #include <txmempool.h>\n #include <util/check.h>\n #include <util/string.h>\n+#include <util/vector.h>\n \n #include <type_traits>\n #include <vector>\n@@ -152,6 +153,23 @@ struct TestChain100DeterministicSetup : public TestChain100Setup {\n     TestChain100DeterministicSetup() : TestChain100Setup(true) { }\n };\n \n+/**\n+ * Make a test setup that has disk access to the debug.log file disabled. Can\n+ * be used in \"hot loops\", for example fuzzing or benchmarking.\n+ */\n+template <class T = const BasicTestingSetup>\n+std::unique_ptr<T> MakeNoLogFileContext(const std::string& chain_name = CBaseChainParams::REGTEST, const std::vector<const char*>& extra_args = {})\n+{\n+    const std::vector<const char*> arguments = Cat(\n+        {\n+            \"-nodebuglogfile\",\n+            \"-nodebug\",\n+        },\n+        extra_args);\n+\n+    return std::make_unique<T>(chain_name, arguments);\n+}\n+\n class CTxMemPoolEntry;\n \n struct TestMemPoolEntryHelper"
      }
    ]
  }
]