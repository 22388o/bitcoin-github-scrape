[
  {
    "sha": "03c2bfffd61a8584f5006e624ea9c6b38420129e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowM2MyYmZmZmQ2MWE4NTg0ZjUwMDZlNjI0ZWE5YzZiMzg0MjAxMjll",
    "commit": {
      "author": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2020-09-25T19:33:47Z"
      },
      "committer": {
        "name": "Dhruv Mehta",
        "email": "856960+dhruv@users.noreply.github.com",
        "date": "2021-03-12T16:50:08Z"
      },
      "message": "p2p: ProcessAddrFetch(-seednode) is unnecessary if -connect is specified",
      "tree": {
        "sha": "38bf7dfbff763c9f3b4d04169234dd7ed0d9485c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/38bf7dfbff763c9f3b4d04169234dd7ed0d9485c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03c2bfffd61a8584f5006e624ea9c6b38420129e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03c2bfffd61a8584f5006e624ea9c6b38420129e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/03c2bfffd61a8584f5006e624ea9c6b38420129e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03c2bfffd61a8584f5006e624ea9c6b38420129e/comments",
    "author": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e0bc27a14ceb18bfe3dd9ebdae6bef447c4ec922",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0bc27a14ceb18bfe3dd9ebdae6bef447c4ec922",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e0bc27a14ceb18bfe3dd9ebdae6bef447c4ec922"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 39,
      "deletions": 1
    },
    "files": [
      {
        "sha": "396d5b50f095eefb56fca298049f0d743696e7c7",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03c2bfffd61a8584f5006e624ea9c6b38420129e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03c2bfffd61a8584f5006e624ea9c6b38420129e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=03c2bfffd61a8584f5006e624ea9c6b38420129e",
        "patch": "@@ -1996,6 +1996,13 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n         if (connect.size() != 1 || connect[0] != \"0\") {\n             connOptions.m_specified_outgoing = connect;\n         }\n+        if (!connOptions.m_specified_outgoing.empty() && !connOptions.vSeedNodes.empty()) {\n+            LogPrintf(\"-seednode is ignored when -connect is used\\n\");\n+        }\n+\n+        if (args.IsArgSet(\"-dnsseed\") && args.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED) && args.IsArgSet(\"-proxy\")) {\n+            LogPrintf(\"-dnsseed is ignored when -connect is used and -proxy is specified\\n\");\n+        }\n     }\n \n     const std::string& i2psam_arg = args.GetArg(\"-i2psam\", \"\");"
      },
      {
        "sha": "13fab1b8a922527c5bbd8ea9fbc0497deb1b556d",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03c2bfffd61a8584f5006e624ea9c6b38420129e/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03c2bfffd61a8584f5006e624ea9c6b38420129e/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=03c2bfffd61a8584f5006e624ea9c6b38420129e",
        "patch": "@@ -1744,7 +1744,6 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n     {\n         for (int64_t nLoop = 0;; nLoop++)\n         {\n-            ProcessAddrFetch();\n             for (const std::string& strAddr : connect)\n             {\n                 CAddress addr(CService(), NODE_NONE);"
      },
      {
        "sha": "dd52e9ebb342bd24f72a53ede3efbdd4e1211ea1",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03c2bfffd61a8584f5006e624ea9c6b38420129e/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03c2bfffd61a8584f5006e624ea9c6b38420129e/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=03c2bfffd61a8584f5006e624ea9c6b38420129e",
        "patch": "@@ -213,11 +213,43 @@ def test_seed_peers(self):\n         ]):\n             self.nodes[0].setmocktime(start + 65)\n \n+    def test_connect_with_seednode(self):\n+        self.log.info('Test -connect with -seednode')\n+        seednode_ignored = ['-seednode is ignored when -connect is used\\n']\n+        dnsseed_ignored = ['-dnsseed is ignored when -connect is used and -proxy is specified\\n']\n+        addcon_thread_started = ['addcon thread start\\n']\n+        self.stop_node(0)\n+\n+        # When -connect is supplied, expanding addrman via getaddr calls to ADDR_FETCH(-seednode)\n+        # nodes is irrelevant and -seednode is ignored.\n+        with self.nodes[0].assert_debug_log(expected_msgs=seednode_ignored):\n+            self.start_node(0, extra_args=['-connect=fakeaddress1', '-seednode=fakeaddress2'])\n+\n+        # With -proxy, dns seeds are added to be used as ADDR_FETCH connections instead of resolving\n+        # to peers. ADDR_FETCH connections are not used when -connect is used.\n+        with self.nodes[0].assert_debug_log(expected_msgs=dnsseed_ignored):\n+            self.restart_node(0, extra_args=['-connect=fakeaddress1', '-dnsseed=1', '-proxy=1.2.3.4'])\n+\n+        # If the user did not disable -dnsseed, but it was soft-disabled because they provided -connect,\n+        # they shouldn't see a warning about -dnsseed being ignored.\n+        with self.nodes[0].assert_debug_log(expected_msgs=addcon_thread_started,\n+                unexpected_msgs=dnsseed_ignored):\n+            self.restart_node(0, extra_args=['-connect=fakeaddress1', '-proxy=1.2.3.4'])\n+\n+        # We have to supply expected_msgs as it's a required argument\n+        # The expected_msg must be something we are confident will be logged after the unexpected_msg\n+        # These cases test for -connect being supplied but only to disable it\n+        for connect_arg in ['-connect=0', '-noconnect']:\n+            with self.nodes[0].assert_debug_log(expected_msgs=addcon_thread_started,\n+                    unexpected_msgs=seednode_ignored):\n+                self.restart_node(0, extra_args=[connect_arg, '-seednode=fakeaddress2'])\n+\n     def run_test(self):\n         self.test_log_buffer()\n         self.test_args_log()\n         self.test_seed_peers()\n         self.test_networkactive()\n+        self.test_connect_with_seednode()\n \n         self.test_config_file_parser()\n         self.test_invalid_command_line_options()"
      }
    ]
  }
]