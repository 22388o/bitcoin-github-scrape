sipa,2020-09-26 01:15:24,"Concept ACK.\n\nPerhaps we also want a warning that -seednode will be ignored in -connect mode?",https://github.com/bitcoin/bitcoin/pull/20018#issuecomment-699259288,699259288,
dhruv,2020-09-26 03:52:06,"Thank you, @sipa. I've added a log warning as well as a test for it.",https://github.com/bitcoin/bitcoin/pull/20018#issuecomment-699335074,699335074,
DrahtBot,2020-09-26 11:28:43,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/20018#issuecomment-699483015,699483015,
dhruv,2020-09-29 20:33:59,Comments above have been addressed. This PR is ready for review.,https://github.com/bitcoin/bitcoin/pull/20018#issuecomment-700970850,700970850,
robot-dreams,2020-10-02 05:43:43,"Thanks for addressing!\n\nOne more question: if someone manually sets `-dnsseed`, so that the `SoftSetBoolArg` doesn't do anything, is it also worth printing a warning in that case?\n\nI'm asking since it looks like `ThreadDNSAddressSeed` might also append entries to `m_addr_fetches`, which is accessed in the (now removed) `ProcessAddrFetch` call.",https://github.com/bitcoin/bitcoin/pull/20018#issuecomment-702536768,702536768,
dhruv,2020-10-03 05:55:02,"Great question, @robot-dreams!\n\nWith `-connect=X -dnsseed=1`, `ThreadDNSAddressSeed` uses some domains owned by contributors (see `CMainParams`) to expand the peers in `addrman`. If `-proxy` is set, or if a seed domain does not support `x9.domain` (which tests for `NODE_NETWORK | NODE_WITNESS`), `getaddr` calls are made to the dns seed itself as a peer. i.e. `ADDR_FETCH` connections to an addr",https://github.com/bitcoin/bitcoin/pull/20018#issuecomment-703052193,703052193,
robot-dreams,2020-10-03 22:38:08,utACK a16825b42190a2780baeb7a262c9b6cda57a2755,https://github.com/bitcoin/bitcoin/pull/20018#issuecomment-703173107,703173107,
naumenkogs,2020-10-06 10:14:21,"I find it hard to navigate this PR and make sense of everything.\nCould you split it into commits with separate concerns and add meaningful commit messages? Similar to your PR original post, but with less uncertainty :)",https://github.com/bitcoin/bitcoin/pull/20018#issuecomment-704171830,704171830,
dhruv,2020-10-08 17:55:40,"> Could/should the warnings be placed in the `-connect` section of `InitParameterInteraction()` and logged at the top along with the other parameter interactions?\n\n@jonatack I'd actually have liked that too, but the place it is right now also checks for `-connect=0`. I was trying to avoid replicating that check as it is an unintuitive one.",https://github.com/bitcoin/bitcoin/pull/20018#issuecomment-705729657,705729657,
dhruv,2020-10-08 17:58:49,">  Could you split it into commits with separate concerns and add meaningful commit messages? Similar to your PR original post, but with less uncertainty :)\n\n@naumenkogs I can definitely do that if it makes sense for commit atomicity. Since the actual change is only removing the `ProcessAddrFetch` line in `ThreadOpenConnections` and every thing else (the log warnings, tests, etc.) support that",https://github.com/bitcoin/bitcoin/pull/20018#issuecomment-705731241,705731241,
dhruv,2021-02-14 06:13:27,Rebased. Ready for further review.,https://github.com/bitcoin/bitcoin/pull/20018#issuecomment-778733617,778733617,
dhruv,2021-03-12 17:05:08,Rebased. Ready for further review.,https://github.com/bitcoin/bitcoin/pull/20018#issuecomment-797626264,797626264,
robot-dreams,2020-09-26 19:23:30,"Could this warning get printed if someone manually sets `-dnsseed`, since it looks like both  `-seednode` and `-dnsseed` could result in nonempty `m_addr_fetches`?\n\nIf so, would it make sense to do one or more of the following:\n\n- Add a warning about `-dnsseed` as well\n- Move the warnings to where the args are parsed",https://github.com/bitcoin/bitcoin/pull/20018#discussion_r495487268,495487268,src/net.cpp
dhruv,2020-09-26 20:19:00,"Thanks for the review and great catch, @robot-dreams! I've moved the warning to init.cpp. It's much cleaner.",https://github.com/bitcoin/bitcoin/pull/20018#discussion_r495491783,495491783,src/net.cpp
robot-dreams,2020-10-03 06:40:37,"Mandatory nit involving constants (feel free to ignore): If you're going to add this, is it worth updating `init.cpp` where `argsman.AddArg` is called? Or is it worth not adding this constant in the first place (I'm not sure how much clarity it adds)?",https://github.com/bitcoin/bitcoin/pull/20018#discussion_r499122163,499122163,src/net.h
dhruv,2020-10-03 22:09:06,"Good call on updating `argsman.AddArg` - I've pushed that up.\n\nThe benefit to adding this constant is that it increases the likelihood that all invocations use a consistent default.",https://github.com/bitcoin/bitcoin/pull/20018#discussion_r499185858,499185858,src/net.h
jonatack,2020-10-04 11:59:38,maybe s/in -connect mode/when -connect is used/,https://github.com/bitcoin/bitcoin/pull/20018#discussion_r499238700,499238700,src/init.cpp
jonatack,2020-10-04 12:00:45,maybe s/in -connect mode when/when -connect is used and/,https://github.com/bitcoin/bitcoin/pull/20018#discussion_r499238809,499238809,src/init.cpp
jonatack,2020-10-04 12:03:56,"<details><summary>test code suggestion</summary><p>\n\n```python3\n    def test_connect_with_seednode(self):\n        self.log.info('Test -connect with -seednode')\n        seednode_ignored = ['-seednode is ignored in -connect mode\n']\n\n        # When -connect is supplied, expanding addrman via getaddr calls to ADDR_FETCH(-seednode)\n        # nodes is irrelevant and -seednode is ignored",https://github.com/bitcoin/bitcoin/pull/20018#discussion_r499239063,499239063,test/functional/feature_config_args.py
naumenkogs,2020-10-06 09:47:49,This could have gone inside the condition right above.,https://github.com/bitcoin/bitcoin/pull/20018#discussion_r500146377,500146377,src/init.cpp
naumenkogs,2020-10-06 09:53:04,"But this is true even if no -connect is configured? Then the warning is confusing...\nPerhaps move this into the block above (same suggestion there)?\n",https://github.com/bitcoin/bitcoin/pull/20018#discussion_r500149460,500149460,src/init.cpp
naumenkogs,2020-10-06 09:54:42,"Warning says `-dnsseed` is ignored. But it will be shown even if a user haven't touched `-dnsseed` at all, just when they configured a `-proxy`. Feels like bad UX.",https://github.com/bitcoin/bitcoin/pull/20018#discussion_r500150470,500150470,src/init.cpp
dhruv,2020-10-08 16:38:36,"The condition above is true when `connect.size() == 0` (happens in the `-noconnect -seednode=fakeaddress` test case) and the new condition is not.\n\nI could move the whole condition inside as-is, but wouldn't gain in clarity or brevity.",https://github.com/bitcoin/bitcoin/pull/20018#discussion_r501860109,501860109,src/init.cpp
dhruv,2020-10-08 16:41:41,Done,https://github.com/bitcoin/bitcoin/pull/20018#discussion_r501861956,501861956,src/init.cpp
dhruv,2020-10-08 17:17:31,"Reg. the first comment: If the configuration is `-dnsseed=1 -proxy=X`, `ThreadDNSAddressSeed` will queue `ADDR_FETCH` connections and they will get processed because `ThreadOpenConnections` will invoke `ProcessAddrFetch` with some frequency. (This will no longer happen when using `-connect=X -dnsseed=1 -proxy=X` after this PR is merged)\n\nReg. the second comment: You're right. If the configurat",https://github.com/bitcoin/bitcoin/pull/20018#discussion_r501883738,501883738,src/init.cpp
dhruv,2020-10-08 17:18:43,Done,https://github.com/bitcoin/bitcoin/pull/20018#discussion_r501884426,501884426,src/init.cpp
dhruv,2020-10-08 17:39:24,"@jonatack Thank you for being so thorough! I learnt a lot here.\n\nThe only thing I didn't do was \n\n> use empty array for unneeded expected messages\n\nbecause looking at [this code](https://github.com/bitcoin/bitcoin/blob/master/test/functional/test_framework/test_node.py#L388), I think that `assert_debug_log` would return too soon and not actually verify that the unexpected msgs are _not",https://github.com/bitcoin/bitcoin/pull/20018#discussion_r501897208,501897208,test/functional/feature_config_args.py
