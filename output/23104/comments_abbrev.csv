laanwj,2021-09-27 12:03:51,"Code review ACK fa00654e3783d5c2d93ddeb0b06f26fe2ef885d8\nre-ACK 2222c04e1b9960030cb590c789a0d2375add4544",https://github.com/bitcoin/bitcoin/pull/23104#issuecomment-927805867,927805867,
practicalswift,2021-09-30 07:54:16,"cr ACK 2222c04e1b9960030cb590c789a0d2375add4544\n\nThanks for removing the use of `std::string_view` ([context](https://github.com/bitcoin/bitcoin/pull/23104#discussion_r718627982)): FWIW that changed my cost-benefit analysis of this PR to transition from `benefit < cost` to `benefit > cost`  :)",https://github.com/bitcoin/bitcoin/pull/23104#issuecomment-930965346,930965346,
laanwj,2021-09-27 12:29:12,"Not introduced in this change, but this function name is wrong. Should be `KnapsackSolver()`? Or simply `__func__`.",https://github.com/bitcoin/bitcoin/pull/23104#discussion_r716642806,716642806,src/wallet/coinselection.cpp
MarcoFalke,2021-09-27 12:41:12,I'll let @achow101 decide,https://github.com/bitcoin/bitcoin/pull/23104#discussion_r716651834,716651834,src/wallet/coinselection.cpp
achow101,2021-09-27 16:12:53,`__func__`,https://github.com/bitcoin/bitcoin/pull/23104#discussion_r716843285,716843285,src/wallet/coinselection.cpp
MarcoFalke,2021-09-28 06:06:43,"On a second thought, it is already possible to log the function name with `-logsourcelocations`, so maybe just remove it?",https://github.com/bitcoin/bitcoin/pull/23104#discussion_r717250817,717250817,src/wallet/coinselection.cpp
MarcoFalke,2021-09-28 06:24:51,Resolving discussion for now. Let me know if anything needs to be changed after the latest commit fad8481,https://github.com/bitcoin/bitcoin/pull/23104#discussion_r717259544,717259544,src/wallet/coinselection.cpp
practicalswift,2021-09-29 15:18:31,"Is there any compelling reason to use the ""potentially dangerous"" `std::string_view` over `std::string` here? (Not claiming that this the use here is dangerous as currently written.)\n\nLifetime issues are scary and personally I find it _much_ easier to rule out lifetime issues when reviewing code that uses `std::string` compared to code that uses `std::string_view` :)\n\nSomewhat related: [st",https://github.com/bitcoin/bitcoin/pull/23104#discussion_r718627982,718627982,src/sync.cpp
MarcoFalke,2021-09-29 15:33:03,"string_view is no different than span, which is also in our code base. I personally prefer string_view over c-strings (raw pointers).\n\nLuckily, if review doesn't catch use-after-free, we have compilers that check the `lifetimebound` attribute (clang), as well as runtime sanitizers.",https://github.com/bitcoin/bitcoin/pull/23104#discussion_r718641985,718641985,src/sync.cpp
MarcoFalke,2021-09-29 16:06:25,"Also, this is only used in tests and the program will `std::abort` anyway right after, so I claim it wouldn't matter if a use-after-free made it in (despite all QA).",https://github.com/bitcoin/bitcoin/pull/23104#discussion_r718673095,718673095,src/sync.cpp
MarcoFalke,2021-09-29 16:50:24,Force pushed `std::string` to avoid the discussion :sweat_smile: ,https://github.com/bitcoin/bitcoin/pull/23104#discussion_r718709113,718709113,src/sync.cpp
