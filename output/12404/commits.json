[
  {
    "sha": "949cbca28e84a7fabd0b845d45f568d336cc1ad8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NDljYmNhMjhlODRhN2ZhYmQwYjg0NWQ0NWY1NjhkMzM2Y2MxYWQ4",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-04-03T09:47:48Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-05-15T11:23:59Z"
      },
      "message": "Prune more aggressively during IBD\n\nPruning forces a chainstate flush, which can defeat the dbcache and harm performance significantly.\n\nDuring IBD we now prune based on the worst case size of the remaining blocks, but no further than\nthe minimum prune size of 550 MB.",
      "tree": {
        "sha": "28b2939008bdc75ab4fe86c6b32ec6a714698e53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28b2939008bdc75ab4fe86c6b32ec6a714698e53"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/949cbca28e84a7fabd0b845d45f568d336cc1ad8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlr6w08ACgkQV/+b28ww\nEAkn8RAAqqC8WmMkmW+zzWDq6ldrKh+AASmy5nKLYExvzShMjRR8RQPdfws5Mh0Q\n5YYhZ1wKLiysFQfpNdH4V0ha86cFCxvf/BsILDg952SXjstZbQ6DpDTuBb4dUDI9\nL1CrlS89jreYhBhDogp5wMOJCJ6+vlbkiYccM4sPhOcFtHXj6givKJPHYBYhjGo5\nWwKzRWZzN3hwe5zTSPcAflJQjVwNtmM/7swJuisAGirisJ+u49MAt63mTQgZbVrb\nEypK1/jr/kDjBbsxK0vhC8yB3ezs0kSGnHYxCpfoJ5z2R7RsqEIKAKZ4GvYefVgW\nVdbnMH69SNLqMbkqV++lCgGDVTZJay/X1JGpQB6jzJrq0iDyv1d8kwfJDVBMXX3v\nGdjGCoecxiChA7rv4z3VHINpfr8vxR/Hcgt9nXr01km+3NApiZAgjEes6XyW0v0C\nBhd/PrI5+l4lk1j+gBPHhR+LfXU1nzXzAZeuyoqjw8pd1UDIFw8msKFCwyV1jE6F\nOCYCexbWkzitNppZmbAlO82KhquP35eJbX2WAgX7rTCc8y7vTHvgRCgZGPxd/pNb\nhb6FVtEeA/tU4/i7gZ8WhVqJT0mJihJTdNfJBstSRCtvjZSfKuS4v4XiQY2y2seC\n5lmDpW9eBW0SPtb0nu+rZW7lfu4PUZOqE/OYNGIcNWGXmjddBOc=\n=NUv7\n-----END PGP SIGNATURE-----",
        "payload": "tree 28b2939008bdc75ab4fe86c6b32ec6a714698e53\nparent 1d4662f5dcf64bd8cbab7386616461b570e93e67\nauthor Sjors Provoost <sjors@sprovoost.nl> 1522748868 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1526383439 +0200\n\nPrune more aggressively during IBD\n\nPruning forces a chainstate flush, which can defeat the dbcache and harm performance significantly.\n\nDuring IBD we now prune based on the worst case size of the remaining blocks, but no further than\nthe minimum prune size of 550 MB.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/949cbca28e84a7fabd0b845d45f568d336cc1ad8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/949cbca28e84a7fabd0b845d45f568d336cc1ad8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/949cbca28e84a7fabd0b845d45f568d336cc1ad8/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d4662f5dcf64bd8cbab7386616461b570e93e67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d4662f5dcf64bd8cbab7386616461b570e93e67",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d4662f5dcf64bd8cbab7386616461b570e93e67"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 32,
      "deletions": 1
    },
    "files": [
      {
        "sha": "81381b557650dfc37783ba79e003a360c1507631",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/949cbca28e84a7fabd0b845d45f568d336cc1ad8/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/949cbca28e84a7fabd0b845d45f568d336cc1ad8/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=949cbca28e84a7fabd0b845d45f568d336cc1ad8",
        "patch": "@@ -137,6 +137,17 @@ Python Support\n \n Support for Python 2 has been discontinued for all test files and tools.\n \n+Performance\n+-----------\n+\n+### More aggressive pruning during IBD\n+\n+Initial Blockchain Download (IBD) became rather slow on pruned nodes once\n+the maximum size was reached. Bitcoin Core now prunes to make enough room for\n+the worst case size of remaining blocks. This may result in fewer blocks being\n+stored immediately after the initial synchronization than permitted by `prune=`,\n+but never less than 550 MB.\n+\n Credits\n =======\n "
      },
      {
        "sha": "890f339deb6d0217faa217cee2af5f87d847a55a",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 1,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/949cbca28e84a7fabd0b845d45f568d336cc1ad8/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/949cbca28e84a7fabd0b845d45f568d336cc1ad8/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=949cbca28e84a7fabd0b845d45f568d336cc1ad8",
        "patch": "@@ -3659,6 +3659,9 @@ static void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfte\n \n     unsigned int nLastBlockWeCanPrune = chainActive.Tip()->nHeight - MIN_BLOCKS_TO_KEEP;\n     uint64_t nCurrentUsage = CalculateCurrentUsage();\n+    // Worst case remaining block space:\n+    uint64_t nRemainingBlockSpace = (pindexBestHeader->nHeight - chainActive.Tip()->nHeight) * (uint64_t)MAX_BLOCK_SERIALIZED_SIZE;\n+\n     // We don't check to prune until after we've allocated new space for files\n     // So we should leave a buffer under our target to account for another allocation\n     // before the next pruning.\n@@ -3667,13 +3670,30 @@ static void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfte\n     int count=0;\n \n     if (nCurrentUsage + nBuffer >= nPruneTarget) {\n+        if (IsInitialBlockDownload()) {\n+            LogPrintf(\"Prune: worst case remaining block space=%d MB\\n\", nRemainingBlockSpace / (uint64_t)1024 / (uint64_t)1024);\n+        }\n         for (int fileNumber = 0; fileNumber < nLastBlockFile; fileNumber++) {\n             nBytesToPrune = vinfoBlockFile[fileNumber].nSize + vinfoBlockFile[fileNumber].nUndoSize;\n \n             if (vinfoBlockFile[fileNumber].nSize == 0)\n                 continue;\n \n-            if (nCurrentUsage + nBuffer < nPruneTarget)  // are we below our target?\n+            // On a prune event, the chainstate DB is flushed. To avoid excessive\n+            // prune events negating the benefit of high dbcache values, we should\n+            // not prune too rapidly.\n+            // During IDB use the worst case size of the remaining blocks, but\n+            // prune no further than the minimum prune size of 550 MB.\n+            uint64_t nPruneAdjustedTarget = nPruneTarget;\n+            if (IsInitialBlockDownload()) {\n+                if (nRemainingBlockSpace > nPruneTarget - MIN_DISK_SPACE_FOR_BLOCK_FILES) {\n+                    nPruneAdjustedTarget = MIN_DISK_SPACE_FOR_BLOCK_FILES;\n+                } else {\n+                    nPruneAdjustedTarget = nPruneTarget - nRemainingBlockSpace;\n+                }\n+            }\n+\n+            if (nCurrentUsage + nBuffer < nPruneAdjustedTarget)  // are we below our target?\n                 break;\n \n             // don't prune files that could have a block within MIN_BLOCKS_TO_KEEP of the main chain's tip but keep scanning"
      }
    ]
  }
]