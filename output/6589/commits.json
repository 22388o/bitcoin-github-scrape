[
  {
    "sha": "ca188c629e90fd90b533f43d769348d6a42d24b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTE4OGM2MjllOTBmZDkwYjUzM2Y0M2Q3NjkzNDhkNmE0MmQyNGI5",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-08-25T14:30:31Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-12-07T12:32:59Z"
      },
      "message": "log bytes recv/sent per command",
      "tree": {
        "sha": "28f9bd8545b28b04a7ea76ae765a40b1e1e62b23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28f9bd8545b28b04a7ea76ae765a40b1e1e62b23"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca188c629e90fd90b533f43d769348d6a42d24b9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWZXx/AAoJECnUvLZBb1Ps0skP/RvZPjS9+VIvQxUsKqTdYXoC\nnOc3LlicQc3622hFTPIsftc4hkWB1HnySa3kjFJE0a3nXHPHvQUuYzSNawK3LsM5\nyCnWN19tTCe8ofssjgdLFwnX1CnQt4Tm7BEVXav2zBF1alA3Qioui7h1fw+C6mmE\nQ3njwlHgdZBJgw8DNL/5TnuGZsxJiVnGlKa0gqGp76RXw3UM5xUzc1cc6OnBA7iQ\nGbrmv9POYZMOpM/fcALscStaTS0ZCvf8uzGYeXoAHs38vU8IRqDQpNbOP2FzeTXs\nVxQ8XUytu4cXDqzvqkcCmkz6Te74FTCnT1bow8mbVhaKFbeAZ8r8qhDHp57fpHWN\nqOiTbS1LsB3X/g+P5R0r4rAs3XYTOrRLB45p8bBX6fXplF+wG+onEnxhvoqeVaAT\nlTN6vj8YrKrUAGSmCkwDsXg0NHhjeuFsInhwdvqYE+gcgU1tOusZoo8+ZU6DHNLf\nzoPA6Hjqhfsm8asMBsykLakfCg+i8/FcNpK+Exuia2vWqk6YxxhoDX7aIyHtOvkh\nwMj3GuQgbTPikQad2iQ0ZYuoPPpEi9MBdpiiDwduTAeehqqMLoGnlzZATQtNFuJL\ndAtz9yuKWMp3ShzknIxWnYlbUnoMFadTU63adE76E9+Po6W47zWF6P4bwE9jFZte\nv5yI1ck+6GgOzdYE+qmZ\n=KFZp\n-----END PGP SIGNATURE-----",
        "payload": "tree 28f9bd8545b28b04a7ea76ae765a40b1e1e62b23\nparent 6aadc7557823b7673b8f661b3d41cf867e2936a3\nauthor Jonas Schnelli <jonas.schnelli@include7.ch> 1440513031 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1449491579 +0100\n\nlog bytes recv/sent per command\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca188c629e90fd90b533f43d769348d6a42d24b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca188c629e90fd90b533f43d769348d6a42d24b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca188c629e90fd90b533f43d769348d6a42d24b9/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6aadc7557823b7673b8f661b3d41cf867e2936a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6aadc7557823b7673b8f661b3d41cf867e2936a3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6aadc7557823b7673b8f661b3d41cf867e2936a3"
      }
    ],
    "stats": {
      "total": 78,
      "additions": 66,
      "deletions": 12
    },
    "files": [
      {
        "sha": "649c6134d5da99393f7830fe158e3285fb65a9cd",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 1,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca188c629e90fd90b533f43d769348d6a42d24b9/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca188c629e90fd90b533f43d769348d6a42d24b9/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ca188c629e90fd90b533f43d769348d6a42d24b9",
        "patch": "@@ -67,6 +67,15 @@ namespace {\n     };\n }\n \n+//immutable thread safe array of allowed commands for logging inbound traffic\n+const static std::string logAllowIncomingMsgCmds[] = {\n+    \"version\", \"addr\", \"inv\", \"getdata\", \"merkleblock\",\n+    \"getblocks\", \"getheaders\", \"tx\", \"headers\", \"block\",\n+    \"getaddr\", \"mempool\", \"ping\", \"pong\", \"alert\", \"notfound\",\n+    \"filterload\", \"filteradd\", \"filterclear\", \"reject\"};\n+\n+const static std::string NET_MESSAGE_COMMAND_OTHER = \"*other*\";\n+\n //\n // Global state variables\n //\n@@ -627,7 +636,9 @@ void CNode::copyStats(CNodeStats &stats)\n     X(fInbound);\n     X(nStartingHeight);\n     X(nSendBytes);\n+    X(mapSendBytesPerMsgCmd);\n     X(nRecvBytes);\n+    X(mapRecvBytesPerMsgCmd);\n     X(fWhitelisted);\n \n     // It is common for nodes with good ping times to suddenly become lagged,\n@@ -682,6 +693,15 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes)\n         nBytes -= handled;\n \n         if (msg.complete()) {\n+\n+            //store received bytes per message command\n+            //to prevent a memory DOS, only allow valid commands\n+            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.hdr.pchCommand);\n+            if (i == mapRecvBytesPerMsgCmd.end())\n+                i = mapRecvBytesPerMsgCmd.find(NET_MESSAGE_COMMAND_OTHER);\n+            assert(i != mapRecvBytesPerMsgCmd.end());\n+            i->second += msg.hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n+\n             msg.nTime = GetTimeMicros();\n             messageHandlerCondition.notify_one();\n         }\n@@ -2378,6 +2398,9 @@ CNode::CNode(SOCKET hSocketIn, const CAddress& addrIn, const std::string& addrNa\n     nPingUsecTime = 0;\n     fPingQueued = false;\n     nMinPingUsecTime = std::numeric_limits<int64_t>::max();\n+    for (unsigned int i = 0; i < sizeof(logAllowIncomingMsgCmds)/sizeof(logAllowIncomingMsgCmds[0]); i++)\n+        mapRecvBytesPerMsgCmd[logAllowIncomingMsgCmds[i]] = 0;\n+    mapRecvBytesPerMsgCmd[NET_MESSAGE_COMMAND_OTHER] = 0;\n \n     {\n         LOCK(cs_nLastNodeId);\n@@ -2457,7 +2480,7 @@ void CNode::AbortMessage() UNLOCK_FUNCTION(cs_vSend)\n     LogPrint(\"net\", \"(aborted)\\n\");\n }\n \n-void CNode::EndMessage() UNLOCK_FUNCTION(cs_vSend)\n+void CNode::EndMessage(const char* pszCommand) UNLOCK_FUNCTION(cs_vSend)\n {\n     // The -*messagestest options are intentionally not documented in the help message,\n     // since they are only used during development to debug the networking code and are\n@@ -2480,6 +2503,9 @@ void CNode::EndMessage() UNLOCK_FUNCTION(cs_vSend)\n     unsigned int nSize = ssSend.size() - CMessageHeader::HEADER_SIZE;\n     WriteLE32((uint8_t*)&ssSend[CMessageHeader::MESSAGE_SIZE_OFFSET], nSize);\n \n+    //log total amount of bytes per command\n+    mapSendBytesPerMsgCmd[std::string(pszCommand)] += nSize + CMessageHeader::HEADER_SIZE;\n+\n     // Set the checksum\n     uint256 hash = Hash(ssSend.begin() + CMessageHeader::HEADER_SIZE, ssSend.end());\n     unsigned int nChecksum = 0;"
      },
      {
        "sha": "3ed438605e70ba8023d0b738766cb508040fd3c1",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 17,
        "deletions": 11,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca188c629e90fd90b533f43d769348d6a42d24b9/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca188c629e90fd90b533f43d769348d6a42d24b9/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ca188c629e90fd90b533f43d769348d6a42d24b9",
        "patch": "@@ -182,6 +182,7 @@ struct LocalServiceInfo {\n \n extern CCriticalSection cs_mapLocalHost;\n extern std::map<CNetAddr, LocalServiceInfo> mapLocalHost;\n+typedef std::map<std::string, uint64_t> mapMsgCmdSize; //command, total bytes\n \n class CNodeStats\n {\n@@ -199,7 +200,9 @@ class CNodeStats\n     bool fInbound;\n     int nStartingHeight;\n     uint64_t nSendBytes;\n+    mapMsgCmdSize mapSendBytesPerMsgCmd;\n     uint64_t nRecvBytes;\n+    mapMsgCmdSize mapRecvBytesPerMsgCmd;\n     bool fWhitelisted;\n     double dPingTime;\n     double dPingWait;\n@@ -373,6 +376,9 @@ class CNode\n     static std::vector<CSubNet> vWhitelistedRange;\n     static CCriticalSection cs_vWhitelistedRange;\n \n+    mapMsgCmdSize mapSendBytesPerMsgCmd;\n+    mapMsgCmdSize mapRecvBytesPerMsgCmd;\n+\n     // Basic fuzz-testing\n     void Fuzz(int nChance); // modifies ssSend\n \n@@ -525,7 +531,7 @@ class CNode\n     void AbortMessage() UNLOCK_FUNCTION(cs_vSend);\n \n     // TODO: Document the precondition of this function.  Is cs_vSend locked?\n-    void EndMessage() UNLOCK_FUNCTION(cs_vSend);\n+    void EndMessage(const char* pszCommand) UNLOCK_FUNCTION(cs_vSend);\n \n     void PushVersion();\n \n@@ -535,7 +541,7 @@ class CNode\n         try\n         {\n             BeginMessage(pszCommand);\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -551,7 +557,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -567,7 +573,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -583,7 +589,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -599,7 +605,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3 << a4;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -615,7 +621,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3 << a4 << a5;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -631,7 +637,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3 << a4 << a5 << a6;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -647,7 +653,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3 << a4 << a5 << a6 << a7;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -663,7 +669,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3 << a4 << a5 << a6 << a7 << a8;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {\n@@ -679,7 +685,7 @@ class CNode\n         {\n             BeginMessage(pszCommand);\n             ssSend << a1 << a2 << a3 << a4 << a5 << a6 << a7 << a8 << a9;\n-            EndMessage();\n+            EndMessage(pszCommand);\n         }\n         catch (...)\n         {"
      },
      {
        "sha": "0ce108b06ebb45f696871ba4140e1ec2a8c2277f",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca188c629e90fd90b533f43d769348d6a42d24b9/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca188c629e90fd90b533f43d769348d6a42d24b9/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=ca188c629e90fd90b533f43d769348d6a42d24b9",
        "patch": "@@ -111,6 +111,14 @@ UniValue getpeerinfo(const UniValue& params, bool fHelp)\n             \"       n,                        (numeric) The heights of blocks we're currently asking from this peer\\n\"\n             \"       ...\\n\"\n             \"    ]\\n\"\n+            \"    \\\"bytessent_per_msg\\\": {\\n\"\n+            \"       \\\"addr\\\": n,             (numeric) The total bytes sent aggregated by message type\\n\"\n+            \"       ...\\n\"\n+            \"    }\\n\"\n+            \"    \\\"bytesrecv_per_msg\\\": {\\n\"\n+            \"       \\\"addr\\\": n,             (numeric) The total bytes received aggregated by message type\\n\"\n+            \"       ...\\n\"\n+            \"    }\\n\"\n             \"  }\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n@@ -165,6 +173,20 @@ UniValue getpeerinfo(const UniValue& params, bool fHelp)\n         }\n         obj.push_back(Pair(\"whitelisted\", stats.fWhitelisted));\n \n+        UniValue sendPerMsgCmd(UniValue::VOBJ);\n+        BOOST_FOREACH(const mapMsgCmdSize::value_type &i, stats.mapSendBytesPerMsgCmd) {\n+            if (i.second > 0)\n+                sendPerMsgCmd.push_back(Pair(i.first, i.second));\n+        }\n+        obj.push_back(Pair(\"bytessent_per_msg\", sendPerMsgCmd));\n+\n+        UniValue recvPerMsgCmd(UniValue::VOBJ);\n+        BOOST_FOREACH(const mapMsgCmdSize::value_type &i, stats.mapRecvBytesPerMsgCmd) {\n+            if (i.second > 0)\n+                recvPerMsgCmd.push_back(Pair(i.first, i.second));\n+        }\n+        obj.push_back(Pair(\"bytesrecv_per_msg\", recvPerMsgCmd));\n+\n         ret.push_back(obj);\n     }\n "
      }
    ]
  }
]