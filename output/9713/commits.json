[
  {
    "sha": "3295cded33b4e6f8927966d9e59977c9d5cc56f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjk1Y2RlZDMzYjRlNmY4OTI3OTY2ZDllNTk5NzdjOWQ1Y2M1NmY1",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-07T17:57:37Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-10T18:32:29Z"
      },
      "message": "Fix error causes and messages in rpc/net.cpp\n\nThere are a couple of errors in `setban()` which return incorrect or\nmisleading errors. This commit fixes those and updates nodehandling.py\nto test that the correct error codes and messages are being returned.\n\nAlso add a testcase for trying to setban on an invalid subnet.",
      "tree": {
        "sha": "b4b6b341d2c54e2c87851faa8ff6dbab577c112f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4b6b341d2c54e2c87851faa8ff6dbab577c112f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3295cded33b4e6f8927966d9e59977c9d5cc56f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3295cded33b4e6f8927966d9e59977c9d5cc56f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3295cded33b4e6f8927966d9e59977c9d5cc56f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3295cded33b4e6f8927966d9e59977c9d5cc56f5/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b860915f8b0dae98e57a254d11575ea41f5c5a79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b860915f8b0dae98e57a254d11575ea41f5c5a79",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b860915f8b0dae98e57a254d11575ea41f5c5a79"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 8,
      "deletions": 10
    },
    "files": [
      {
        "sha": "634dba7c8e623155bbe252b071e9e032e30406df",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3295cded33b4e6f8927966d9e59977c9d5cc56f5/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3295cded33b4e6f8927966d9e59977c9d5cc56f5/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=3295cded33b4e6f8927966d9e59977c9d5cc56f5",
        "patch": "@@ -32,15 +32,13 @@ def run_test(self):\n         assert_equal(len(self.nodes[2].listbanned()), 0)\n         self.nodes[2].setban(\"127.0.0.0/24\", \"add\")\n         assert_equal(len(self.nodes[2].listbanned()), 1)\n-        try:\n-            self.nodes[2].setban(\"127.0.0.1\", \"add\") #throws exception because 127.0.0.1 is within range 127.0.0.0/24\n-        except:\n-            pass\n+        # This will throw an exception because 127.0.0.1 is within range 127.0.0.0/24\n+        assert_raises_jsonrpc(-23, \"IP/Subnet already banned\", self.nodes[2].setban, \"127.0.0.1\", \"add\")\n+        # This will throw an exception because 127.0.0.1/42 is not a real subnet\n+        assert_raises_jsonrpc(-30, \"Error: Invalid IP/Subnet\", self.nodes[2].setban, \"127.0.0.1/42\", \"add\")\n         assert_equal(len(self.nodes[2].listbanned()), 1) #still only one banned ip because 127.0.0.1 is within the range of 127.0.0.0/24\n-        try:\n-            self.nodes[2].setban(\"127.0.0.1\", \"remove\")\n-        except:\n-            pass\n+        # This will throw an exception because 127.0.0.1 was not added above\n+        assert_raises_jsonrpc(-30, \"Error: Unban failed\", self.nodes[2].setban, \"127.0.0.1\", \"remove\")\n         assert_equal(len(self.nodes[2].listbanned()), 1)\n         self.nodes[2].setban(\"127.0.0.0/24\", \"remove\")\n         assert_equal(len(self.nodes[2].listbanned()), 0)"
      },
      {
        "sha": "080642f4f77736f5280050cdf803262996bfa1e4",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3295cded33b4e6f8927966d9e59977c9d5cc56f5/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3295cded33b4e6f8927966d9e59977c9d5cc56f5/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=3295cded33b4e6f8927966d9e59977c9d5cc56f5",
        "patch": "@@ -506,7 +506,7 @@ UniValue setban(const JSONRPCRequest& request)\n         LookupSubNet(request.params[0].get_str().c_str(), subNet);\n \n     if (! (isSubnet ? subNet.IsValid() : netAddr.IsValid()) )\n-        throw JSONRPCError(RPC_CLIENT_NODE_ALREADY_ADDED, \"Error: Invalid IP/Subnet\");\n+        throw JSONRPCError(RPC_CLIENT_INVALID_IP_OR_SUBNET, \"Error: Invalid IP/Subnet\");\n \n     if (strCommand == \"add\")\n     {\n@@ -526,7 +526,7 @@ UniValue setban(const JSONRPCRequest& request)\n     else if(strCommand == \"remove\")\n     {\n         if (!( isSubnet ? g_connman->Unban(subNet) : g_connman->Unban(netAddr) ))\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Error: Unban failed\");\n+            throw JSONRPCError(RPC_CLIENT_INVALID_IP_OR_SUBNET, \"Error: Unban failed. Requested address/subnet was not previously banned.\");\n     }\n     return NullUniValue;\n }"
      }
    ]
  }
]