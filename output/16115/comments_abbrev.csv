DrahtBot,2019-05-29 06:20:21,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17812](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17812.html) (config, test: asmap functional tests and fe",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-496801167,496801167,
jonasschnelli,2019-05-29 06:57:51,Knowing the startup parameters for debug purposes is certainly helpful. Unsure about logging rpcpassword (maybe add a blacklist?).,https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-496810460,496810460,
laanwj,2019-05-29 08:56:42,"> Knowing the startup parameters for debug purposes is certainly helpful. Unsure about logging rpcpassword (maybe add a blacklist?).\n\nYepp. Agree this is very useful for troubleshooting, but be careful with logging sensitive information (people do post these things to the internet sometimes).  ",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-496848404,496848404,
LarryRuane,2019-05-30 15:39:06,"Thank all of you for the good comments! Force-pushed (since this PR is so small) to address all review comments. I added a blacklist, but please verify that it contains the correct items. I tested this manually, `bitcoin.conf` contains:\n```\ndebug=1\ndebug=xxx\ntorpassword=hellotor\n```\nand then I ran `bitcoind --debug=cmdline111 --rpcuser=hellouser` and the following appeared in `debug.lo",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-497375244,497375244,
promag,2019-05-30 15:45:33,Related to #15493.,https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-497377536,497377536,
kristapsk,2019-06-11 23:00:38,"Concept ACK, but found two issues.\n```\n2019-06-11T22:57:43Z config-file arg:  -regtest.rpcpassword=123456abcdef\n2019-06-11T22:57:43Z config-file arg:  -regtest.rpcuser=bitcoinrpc\n2019-06-11T22:57:43Z config-file arg:  -rpcpassword=****\n2019-06-11T22:57:43Z config-file arg:  -rpcuser=****\n2019-06-11T22:57:43Z config-file arg:  -server=1\n2019-06-11T22:57:43Z config-file arg:  -test.bin",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-501054834,501054834,
dongcarl,2019-06-12 14:53:40,"Not 100% sure if this is possible or in scope, but it'd be very useful to have the **_effective_** command line configuration at-a-glance, especially when trying to debug for others from looking at their logs.",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-501310542,501310542,
promag,2019-06-12 15:01:52,"@dongcarl that's a bigger change. Basically all default values are defined when the arg is used, so what you want would require to duplicate all of that or move the defaults to one place elsewhere. I don't think debug log should have all args but maybe we could add an option to control that.\n\nIn #15493 I propose to add a RPC to also see effective arg values.",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-501314439,501314439,
LarryRuane,2019-06-14 00:25:26,"@kristapsk, I force-pushed a fix for both of your suggestions, thanks! I decided to leave the `=` off if there are no value arguments, because I didn't want to assume that having no values would always be the same as `=1`.",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-501924710,501924710,
fjahr,2019-08-14 17:38:00,"The commit message for the test is incorrect: it is a functional test, not a unit test.",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-521345015,521345015,
jnewbery,2019-08-14 18:07:39,"I think this PR should be split in two. The two commits _on startup, write config options to debug.log_ and _re-log configuration when debug.log is reopened_ both address logging, but are essentially independent.\n\nI'm a concept ACK for the first commit (_on startup, write config options to debug.log_) and would like to see it merged, but a weak concept NACK on the second (_re-log configuration",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-521355795,521355795,
LarryRuane,2019-08-17 17:13:57,"Thanks for all the review feedback! The most recent force-push removes the second part of this PR (the extra logging that happens when the log rotates). I agree with @narula's and others' opinions that this can be handled outside of bitcoind. I will probably submit a separate PR for relogging the config information on log rotation.\n\nA good way for the log rotation tools to work is to either sa",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-522254676,522254676,
LarryRuane,2019-08-19 02:18:08,"An additional thought related to this part of my most recent comment:\n> Then remember to send that part to a developer or support person requesting `debug.log`\n\nHere's a better procedure that the log rotation tool can follow: After moving `debug.log` to a new name, it can create a new `debug.log` file and write the initial (configuration-related) messages to it. Then send the SIGHUP signal. ",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-522387018,522387018,
ysangkok,2019-11-09 19:51:11,"Should I wait for a rebase to test this, or is it better if I test it as it is? Or should I try to rebase myself?",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-552131474,552131474,
LarryRuane,2019-11-19 06:25:51,"@ysangkok, I integrated with the conflicting recent change (7f40528cd50fc43ac0bd3e785de24d661adddb7a) using a separate commit (https://github.com/bitcoin/bitcoin/pull/16115/commits/07f11f171c82bcbd9d79272c8f87002e39a7521b), force-pushed rebase. Now would be a good time to test, thanks.",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-555353899,555353899,
LarryRuane,2019-11-19 06:47:10,"To give you a little better understanding of what this PR does, here's part of the `debug.log` file after running one of the functional (python) tests with the `-nocleanup` option. After the most recent rebase, the config file *section* string gets printed out (within square brackets):\n```\n2019-11-18T22:47:48.371866Z [init] Default data directory /home/larry/.bitcoin\n2019-11-18T22:47:48.3718",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-555359721,555359721,
LarryRuane,2019-11-27 16:14:29,"Thanks, @ryanofsky, fixed variable names (in two places), rebased, force-pushed. Also, I changed the PR description as suggested, and simplified it (since it goes into the commit history), no need to show sample output there, which was out of date anyway.",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-559154037,559154037,
jnewbery,2019-12-19 21:16:17,"Definite concept ACK. This needs a rebase, but I've read the current code and it looks good. I'll re-review once this has been rebased on master.",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-567680051,567680051,
LarryRuane,2019-12-20 07:10:04,"Rebased onto master, force-pushed 3028a27",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-567817643,567817643,
jnewbery,2019-12-20 23:15:01,ACK 717099eef1cc5670180a58d0fec6d027a1e2f95d,https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-568121625,568121625,
LarryRuane,2019-12-21 15:22:30,"Rebased onto master, squashed, force-pushed.",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-568188811,568188811,
jnewbery,2019-12-24 15:04:04,"Code review ACK 4a88ddac84235398a0ea8c041baee7192a6b4d09\n\n> Rebased onto master ...\n\nI don't think this needed rebasing on master. It's better not to rebase on master unless necessary, since it generates additional work for reviewers",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-568763480,568763480,
LarryRuane,2019-12-24 19:56:15,"> I don't think this needed rebasing on master. It's better not to rebase on master unless necessary, since it generates additional work for reviewers\n\nAbsolutely right, sorry about that; I actually thought of that just after I did that. I'll avoid unnecessary rebases from now on. Thanks for the new ACK.",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-568796681,568796681,
hebasto,2019-12-25 08:58:44,Concept ACK. Will test.,https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-568869285,568869285,
jnewbery,2020-01-09 03:37:28,@ryanofsky : current branch is 4a88dda,https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-572368933,572368933,
ryanofsky,2020-01-09 17:58:52,"> @ryanofsky : current branch is [4a88dda](https://github.com/bitcoin/bitcoin/commit/4a88ddac84235398a0ea8c041baee7192a6b4d09)\n\nThanks fixed comment. That was the hash I meant",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-572679382,572679382,
jonatack,2020-01-09 19:02:45,Will re-review and test tomorrow.,https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-572706172,572706172,
LarryRuane,2020-01-11 16:39:39,"@jonatack, thanks for the suggestions, force-pushed (without rebasing onto master) both changes. I made one other change that I hope you agree is an improvement: I removed the keywords from the list of unexpected messages, for example, changed `rpcuser=satoshi` to just `satoshi`. The reason is, if there was a weird bug by which the log contained (let's say) `ruser=satoshi` or `rpcuser = satoshi` (",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-573332401,573332401,
hebasto,2020-01-11 16:44:05,"@LarryRuane \n> ... force-pushed (without rebasing onto master)...\n\nNeedless rebasing makes reviewing of consequent changes harder ;) Thank you. ",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-573332781,573332781,
LarryRuane,2020-01-13 16:07:50,"Thanks, I force-pushed the suggested changes.",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-573739291,573739291,
jonatack,2020-01-13 19:30:44,"Tested ACK 8317bb35b63062e0d54de3af19d923456e1cb467\n\n`git diff 8c09bf9..8317bb3` since last push:\n```diff\ndiff --git a/src/init.cpp b/src/init.cpp\nindex 04305c9b23..6a91c8c1ce 100644\n--- a/src/init.cpp\n+++ b/src/init.cpp\n@@ -1218,6 +1218,8 @@ bool AppInitMain(NodeContext& node)\n         // Not categorizing as ""Warning"" because it's the default behavior\n         LogPrintf(""Confi",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-573830913,573830913,
jnewbery,2020-01-13 20:00:59,ACK 8317bb35b63062e0d54de3af19d923456e1cb467,https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-573844069,573844069,
LarryRuane,2020-01-19 01:54:04,"Implemented review suggestions:\n- rename `DONT_LOG` to `SENSITIVE`\n- in the unit test, verify log file contents without opening and reading `debug.log`\n\nHere are the changes in the last force-push (I think this PR should remain a single commit), in case that's helpful to reviewers: https://github.com/LarryRuane/bitcoin/compare/8317bb35b63062e0d54de3af19d923456e1cb467..03fdf86b6d4bc036c707a",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-575957258,575957258,
jnewbery,2020-01-20 19:50:52,ACK 03fdf86b6d4bc036c707a0b0d84995f438283b11,https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-576410158,576410158,
MarcoFalke,2020-01-30 22:10:31,"ACK b951b0973cfd4e0db4607a00d434a04afb0d6199 🐪\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK b951b0973cfd4e0db4607a00d434a04afb0d6199 🐪\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgHewwAixdou/20sx/EQar5cdubgAQpvKEAXE9fZwjP6zu0ZBrabem2sc",https://github.com/bitcoin/bitcoin/pull/16115#issuecomment-580485438,580485438,
practicalswift,2019-05-30 08:47:58,"Accessing `m_config_args` requires holding `cs_args`.\n\nAlso: use const reference to avoid copying. The const reference comment applies also for the `for` loops below.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r288908573,288908573,src/util/system.cpp
practicalswift,2019-05-30 08:48:43,And accessing `m_override_args` requires holding `cs_args` :-),https://github.com/bitcoin/bitcoin/pull/16115#discussion_r288908796,288908796,src/util/system.cpp
fanquake,2019-05-30 15:51:28,@ryanofsky You might have some thoughts on this?,https://github.com/bitcoin/bitcoin/pull/16115#discussion_r289052556,289052556,src/util/system.cpp
ryanofsky,2019-07-15 20:55:35,"> @ryanofsky You might have some thoughts on this?\n\nI don't object to this change, but it does seems a little unusual to write the config file to the debug log. Especially when you have to mask passwords and such.\n\nFor debugging purposes, my preferred alternative would be to have a `-printconfig` flag (similar to existing `-help` or `-version` flags) that would print the current settings i",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r303632284,303632284,src/util/system.cpp
jkczyz,2019-08-12 18:54:23,This may inadvertently match an arg that contains a blacklisted arg name as a substring (but nonetheless should not be matched). Consider stripping any ignorable prefix from the arg and matching exactly instead. An added benefit is you can use a set for the blacklist as you had before.,https://github.com/bitcoin/bitcoin/pull/16115#discussion_r313077107,313077107,src/util/system.cpp
jkczyz,2019-08-12 21:56:26,"A couple nits:\n\n1. Drop ""During startup"" as this is referring to the call site.\n1. s/LogPrintf()/Log/ to avoid leaking implementation details in the documentation.\n\nThese will help keep the documentation in sync with the code as it changes.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r313146227,313146227,src/util/system.h
jkczyz,2019-08-12 22:44:42,Could you add any test cases for redacted args beginning with an ignorable prefix (e.g `-regtest.`)?,https://github.com/bitcoin/bitcoin/pull/16115#discussion_r313159376,313159376,test/functional/feature_config_args.py
jkczyz,2019-08-14 17:57:52,"During the PR review club session, it came up that a flag could be added for sensitive args.\n\nhttps://github.com/bitcoin/bitcoin/blob/a7aa809027633556dd3280c6e29ca98eb3235a3d/src/util/system.h#L138\nhttps://github.com/bitcoin/bitcoin/blob/a7aa809027633556dd3280c6e29ca98eb3235a3d/src/util/system.cpp#L542\n\nThen rather than maintaining a blacklist, the flag could be checked before logging.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r314007217,314007217,src/util/system.cpp
jkczyz,2019-08-14 17:59:55,"Also during the PR review club, it was suggested to update `ArgsManager`'s unit tests rather than using a functional test.\n\nhttps://github.com/bitcoin/bitcoin/blob/master/src/test/getarg_tests.cpp",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r314008059,314008059,test/functional/feature_config_args.py
narula,2019-08-14 18:05:04,200 seems arbitrary,https://github.com/bitcoin/bitcoin/pull/16115#discussion_r314010211,314010211,src/logging.cpp
jonatack,2019-08-14 18:57:04,"In addition to the other comments e.g. testing of edge cases and using unit tests where possible, tests should also cover each of the blacklisted terms and not just one of them.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r314032804,314032804,test/functional/feature_config_args.py
jonatack,2019-08-14 19:02:25,"Short of refactoring this PR to use a flag as suggested elsewhere and during the PR Review Club [(log here](https://bitcoin-core-review-club.github.io/16115.html));\n\n- a whitelist would be safer than a blacklist\n- there needs to be some mechanism - code docs and perhaps also in the developer notes docs - to help ensure this list is updated on future arg changes",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r314035090,314035090,src/util/system.cpp
LarryRuane,2019-08-16 02:58:58,"@jonatack, great suggestion, modified to use a flag in b6e55d566a92427f1af9775d676ab629eaacbe41. (I also agree that a whitelist would be better than a blacklist.) I will investigate to find a good place to document this. (I'm new here, so any suggestions would be appreciated.)",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r314568677,314568677,src/util/system.cpp
LarryRuane,2019-08-16 02:59:55,"@jkczyz, thanks, adding a flag is an excellent idea, implemented in b6e55d566a92427f1af9775d676ab629eaacbe41. Does that also address your concern about matching a substring? It seems to me it does, since we're not doing any string or pattern matching at all.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r314568802,314568802,src/util/system.cpp
LarryRuane,2019-08-16 03:00:51,"Good suggestion, implemented in latest commit, b6e55d566a92427f1af9775d676ab629eaacbe41.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r314568936,314568936,src/util/system.h
LarryRuane,2019-08-16 19:39:25,"This test was not verifying that arguments that should not be logged to `debug.log` are indeed not logged. I wanted to add test the full list of what should not be logged (torpassword, rpcauth, rpcbind, rpcpassword, rpcuser), but specifying any of those except `torpassword` on the command line causes the test framework to fail (""`Error: no RPC connection`), so I couldn't think of a way to test tha",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r314864093,314864093,test/functional/feature_config_args.py
jkczyz,2019-08-22 19:37:12,"Rather than use `continue`, it would be more natural to use an `else` clause.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r316851505,316851505,src/util/system.cpp
jkczyz,2019-08-22 19:47:38,Don't you still want to log that the arg was set only with the value redacted?,https://github.com/bitcoin/bitcoin/pull/16115#discussion_r316855271,316855271,src/util/system.cpp
LarryRuane,2019-08-23 14:59:40,"Good suggestion, thanks, fixed 7f4640338de05fce1cf59bc567b6674a94931c23.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r317172953,317172953,src/util/system.cpp
LarryRuane,2019-08-23 15:05:42,What do you think? Somehow I changed my mind and thought it might be better to not show it at all. But it is more informative to show that the argument was specified. I can easily change it back.,https://github.com/bitcoin/bitcoin/pull/16115#discussion_r317175643,317175643,src/util/system.cpp
LarryRuane,2019-08-25 13:00:28,"@jkczyz, after more thought, I agree your idea is better, 676eb23315cd23c84bbfe5bc4c41652b1f6d8bb5.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r317397291,317397291,src/util/system.cpp
LarryRuane,2019-08-26 03:21:00,"@practicalswift found this bug while reviewing #16673 but the bug originated in the current PR (which #16673 is based on). Fixed here, will rebase #16673 to pick up the fix there.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r317439214,317439214,test/functional/test_framework/test_node.py
jkczyz,2019-08-26 15:39:26,You can reduce one level of nesting by making this an else-if.,https://github.com/bitcoin/bitcoin/pull/16115#discussion_r317663526,317663526,src/util/system.cpp
ryanofsky,2019-11-25 16:50:35,"In commit ""merge with 'Deduplicate settings' commit"" (d95fdc78c965708866156898588221a8d983396f)\n\nWould suggest:\n\n```c++\nif (FlagsOfKnownArg(arg.first) & DONT_LOG) {\n    LogPrintf(""%s %s%s=****\n"", prefix, sectionStr, arg.first);\n} else {\n    LogPrintf(""%s %s%s=%s\n"", prefix, sectionStr, arg.first, value.write());\n}\n```\n\nThis is simpler than formatting code in the PR, more f",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r350302301,350302301,src/util/system.cpp
LarryRuane,2019-11-26 17:10:50,"@ryanofsky, thanks, I like that much better. I implemented your suggestion (with a small difference, only a single call to `LogPrintf()`), rebased, squashed, force-pushed (eb973ff916f88ed36b59ae6466ec16dd30811215). The formatting is slightly different now, but I like that the code is much simpler and the output is more consistent (this is from one of the functional tests):\n```\n2019-11-26T16:09",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r350873707,350873707,src/util/system.cpp
ryanofsky,2019-11-26 17:31:29,"In commit ""on startup, write config options to debug.log"" (eb973ff916f88ed36b59ae6466ec16dd30811215)\n\n`sectionStr` is an older convention for variable names. Newer code is using `section_str` https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r350884222,350884222,src/util/system.cpp
jnewbery,2019-12-20 16:38:17,nit: s/config-file/Config file/ (config file is not usually hyphenated),https://github.com/bitcoin/bitcoin/pull/16115#discussion_r360453931,360453931,src/util/system.cpp
jnewbery,2019-12-20 16:40:56,s/command-line/Command-line/ (first letter of logs are usually capitalized),https://github.com/bitcoin/bitcoin/pull/16115#discussion_r360456471,360456471,src/util/system.cpp
LarryRuane,2019-12-20 22:04:49,"Thanks, done, separate commit 717099eef1cc5670180a58d0fec6d027a1e2f95d. I'll squash after review (or, at least before merge).",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r360590582,360590582,src/util/system.cpp
hebasto,2019-12-20 22:26:22,"> I'll squash after review (or, at least before merge)\n\nIt is better to squash before review as a merge commit should contain ACKs with the latest commit hash.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r360595529,360595529,src/util/system.cpp
jonatack,2020-01-10 20:46:03,"Can simplify?\n```diff\n-    def assert_debug_log(self, expected_msgs, unexpected_msgs=None, timeout=2):\n-        if unexpected_msgs is None:\n-            unexpected_msgs = []\n+    def assert_debug_log(self, expected_msgs, unexpected_msgs=[], timeout=2):\n```\n",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r365423393,365423393,test/functional/test_framework/test_node.py
jonatack,2020-01-10 20:48:21,"Could use a docstring or logging here, e.g.\n```diff\n+        self.log.info('Test config args logging')\n```\nThat said, the whole file is lacking logging, not just this test, so feel free to ignore.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r365424192,365424192,test/functional/feature_config_args.py
jonatack,2020-01-10 21:22:53,"This test can be improved with (tested change):\n```diff\n                 expected_msgs=[\n                     'Command-line arg: addnode=""some.node""',\n+                    'Command-line arg: rpcauth=****',\n+                    'Command-line arg: rpcbind=****',\n+                    'Command-line arg: rpcpassword=****',\n+                    'Command-line arg: rpcuser=****',\n         ",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r365435504,365435504,test/functional/feature_config_args.py
jnewbery,2020-01-10 22:13:26,It's generally best to use `None` as the default argument instead of a mutable default arg: https://docs.python-guide.org/writing/gotchas/#what-you-should-do-instead,https://github.com/bitcoin/bitcoin/pull/16115#discussion_r365451326,365451326,test/functional/test_framework/test_node.py
jonatack,2020-01-10 22:34:23,"Thanks @jnewbery, TIL.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r365457385,365457385,test/functional/test_framework/test_node.py
jonatack,2020-01-12 14:49:48,"Should `#include <fs.h>` be explicitly added to this file? Other code and unit tests using `fsbridge` seem to include it, and according to developer-notes.md:\n\n```md\n- Every `.cpp` and `.h` file should `#include` every header file it directly uses classes, functions or other\n  definitions from, even if those headers are already included indirectly through other headers.\n\n  - *Rationale",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r365588110,365588110,src/test/getarg_tests.cpp
jonatack,2020-01-12 14:54:54,"Thanks @LarryRuane for taking the suggestion to cover all the `DONT_LOG` cases and your change to pass only the values to unexpected_messages makes it even better. The only thing I regret is having suggested ""satoshi"" as the `rpcuser` because it pollutes git grepping; a name that isn't already used by the codebase like ""charlie"" or ""abc123"", etc., would have been better.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r365588501,365588501,test/functional/feature_config_args.py
jonatack,2020-01-12 14:57:07,"Other than that, the new unit tests look good and provide helpful feedback when run with\n\n`src/test/test_bitcoin -t getarg_tests/logargs -l all`",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r365588628,365588628,src/test/getarg_tests.cpp
jonatack,2020-01-12 15:05:16,"nit: this is commented in the unit test but not here; perhaps add:\n```diff\n+\n+    // Log the config arguments to debug.log\n     gArgs.LogArgs();\n```",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r365589092,365589092,src/init.cpp
hebasto,2020-01-13 08:49:13,"It seems this comment does not add any value here, no?",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r365690546,365690546,src/init.cpp
jonatack,2020-01-13 11:03:24,"I think it may gain time for occasional contributors/readers, and perhaps for those who haven't reviewed this PR, by confirming what the laconic `gArgs.LogArgs();` is doing exactly (which args, logged where) without the need to git grep. At least, more help than harm.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r365746704,365746704,src/init.cpp
laanwj,2020-01-15 15:31:30,I think we could test this without reading an actual file by registering a log callback with `PushBackCallback` (and `DeleteCallback` afterwards).,https://github.com/bitcoin/bitcoin/pull/16115#discussion_r366941243,366941243,src/test/getarg_tests.cpp
MarcoFalke,2020-01-15 15:46:38,I think there is also an `ASSERT_DEBUG_LOG` which might come in handy,https://github.com/bitcoin/bitcoin/pull/16115#discussion_r366950505,366950505,src/test/getarg_tests.cpp
MarcoFalke,2020-01-15 15:49:14,"I'd prefer to call this `SENSITIVE` or `PRIVATE` or similar to avoid a negated option (which might lead to double negations), but more importantly make it agnostic of how the values are reported. If in the future someone adds a `getconfigargs` RPC, the internal wording ""log"" seems a bit off.",https://github.com/bitcoin/bitcoin/pull/16115#discussion_r366952207,366952207,src/util/system.h
