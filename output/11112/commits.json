[
  {
    "sha": "f1708ef89a38efe857daeb4252c6dfab5b7c258e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTcwOGVmODlhMzhlZmU4NTdkYWViNDI1MmM2ZGZhYjViN2MyNThl",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-08-22T20:50:03Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-08-22T20:55:19Z"
      },
      "message": "Add recommendation: By default, declare single-argument constructors `explicit`",
      "tree": {
        "sha": "154fc96a4189ef41c4fb0d508f564d8090b140a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/154fc96a4189ef41c4fb0d508f564d8090b140a6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f1708ef89a38efe857daeb4252c6dfab5b7c258e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1708ef89a38efe857daeb4252c6dfab5b7c258e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f1708ef89a38efe857daeb4252c6dfab5b7c258e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1708ef89a38efe857daeb4252c6dfab5b7c258e/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3e55f13bfc98a6b832697d1d0cfb942dbe2094db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e55f13bfc98a6b832697d1d0cfb942dbe2094db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3e55f13bfc98a6b832697d1d0cfb942dbe2094db"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2f04d6ee6cf42d903b34f2db0b5fb6ab08e56bc8",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1708ef89a38efe857daeb4252c6dfab5b7c258e/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1708ef89a38efe857daeb4252c6dfab5b7c258e/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=f1708ef89a38efe857daeb4252c6dfab5b7c258e",
        "patch": "@@ -332,6 +332,12 @@ C++ data structures\n   - *Rationale*: Ensure determinism by avoiding accidental use of uninitialized\n     values. Also, static analyzers balk about this.\n \n+- By default, declare single-argument constructors `explicit`.\n+\n+  - *Rationale*: This is a precaution to avoid unintended conversions that might\n+    arise when single-argument constructors are used as implicit conversion\n+    functions.\n+\n - Use explicitly signed or unsigned `char`s, or even better `uint8_t` and\n   `int8_t`. Do not use bare `char` unless it is to pass to a third-party API.\n   This type can be signed or unsigned depending on the architecture, which can"
      },
      {
        "sha": "7be29c6d6bacf6490f958e076a94bf5cb6870d59",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1708ef89a38efe857daeb4252c6dfab5b7c258e/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1708ef89a38efe857daeb4252c6dfab5b7c258e/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=f1708ef89a38efe857daeb4252c6dfab5b7c258e",
        "patch": "@@ -15,7 +15,7 @@ class CAddrManTest : public CAddrMan\n     uint64_t state;\n \n public:\n-    CAddrManTest(bool makeDeterministic = true)\n+    explicit CAddrManTest(bool makeDeterministic = true)\n     {\n         state = 1;\n "
      }
    ]
  }
]