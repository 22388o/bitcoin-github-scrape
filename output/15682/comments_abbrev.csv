laanwj,2019-03-28T04:07:16Z,utACK 43ae1e96ed2c2c71375f91309e789723045fcf0c,https://github.com/bitcoin/bitcoin/pull/15682#issuecomment-477439874,477439874,
achow101,2019-03-28T05:21:49Z,"utACK 43ae1e96ed2c2c71375f91309e789723045fcf0c\n\nMy Windows 10 machine had no issue with finding the path to a trusted CA. AFAICT, this should work with Windows machines that have been doing updates as the trusted root certs are updated periodically.",https://github.com/bitcoin/bitcoin/pull/15682#issuecomment-477452554,477452554,
practicalswift,2019-03-28T06:16:19Z,"My post-merge checking follows.\n\n```\n$ shasum -a 1 win-codesign.cert\n70bf0a9d33390b83a7b02eb312fb224c706c13f1  win-codesign.cert\n$ shasum -a 256 win-codesign.cert\nb3c0d3291614fb36fb5a0fd4166db425b3fc0340a2defb43e8a0aaa208f2be4f  win-codesign.cert\n$ openssl x509 -in win-codesign.cert -text\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            b5:",https://github.com/bitcoin/bitcoin/pull/15682#issuecomment-477463659,477463659,
theuni,2019-03-28T06:18:34Z,"For posterity:\n\nI confirmed that if I sign using the old key after this commit (producing a key/cert mismatch), the gitian-win-signer fails as would be desired. Meaning that these in-tree certs are indeed tested during the Gitian process.",https://github.com/bitcoin/bitcoin/pull/15682#issuecomment-477464122,477464122,
theuni,2019-03-28T06:21:26Z,@practicalswift I believe that openssl is too dense to parse the entire chain. That looks like it's just the first cert.,https://github.com/bitcoin/bitcoin/pull/15682#issuecomment-477464711,477464711,
practicalswift,2019-03-28T06:34:10Z,"@theuni Ouch! Good catch. Thanks a lot for noticing!\n\nNew try:\n\n```\n$ shasum -a 1 win-codesign.cert\n70bf0a9d33390b83a7b02eb312fb224c706c13f1  win-codesign.cert\n$ shasum -a 256 win-codesign.cert\nb3c0d3291614fb36fb5a0fd4166db425b3fc0340a2defb43e8a0aaa208f2be4f  win-codesign.cert\n$ csplit -f  win-codesign-parts win-codesign.cert '/-----BEGIN CERTIFICATE-----/' '{*}'\n$ for N in {1.",https://github.com/bitcoin/bitcoin/pull/15682#issuecomment-477467410,477467410,
cryptozeny,2019-03-28T07:16:35Z,thanks! btw how much the cost to get the cert? i am just curious about ðŸ˜… @gwillen,https://github.com/bitcoin/bitcoin/pull/15682#issuecomment-477477666,477477666,
gwillen,2019-03-28T07:52:04Z,"@cryptozeny It was under $100, could be worse.",https://github.com/bitcoin/bitcoin/pull/15682#issuecomment-477486862,477486862,
MarcoFalke,2019-03-28T13:09:24Z,"I don't understand why the backport is necessary. It is mostly up to the signature creator to check out the right branch and run the script?\n\nIf it was required, it would have to be backported to 0.17 as well?",https://github.com/bitcoin/bitcoin/pull/15682#issuecomment-477587580,477587580,
achow101,2019-03-28T14:21:56Z,@MarcoFalke Backport is needed because the gitian build target for the signed binaries checks that the signature it is attaching matches the cert in the source tree. So we need to backport the cert to the previous release branches so that new releases of those versions can be made using the new cert.,https://github.com/bitcoin/bitcoin/pull/15682#issuecomment-477615841,477615841,
theuni,2019-03-28T17:12:02Z,"@MarcoFalke Yes to 0.17 as well.\n\n@achow101 To expand on that, it's not only used for verification, the [cert chain is actually inserted into the binary during the signing process](https://github.com/bitcoin/bitcoin/blob/master/contrib/windeploy/detached-sig-create.sh#L23). The verifier then fails if it was signed with a different cert's key. This ensures that the gitian process can only compl",https://github.com/bitcoin/bitcoin/pull/15682#issuecomment-477688738,477688738,
