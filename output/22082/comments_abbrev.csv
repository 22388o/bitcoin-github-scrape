martinus,2021-05-27 05:43:55,This update should also fix #21549,https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-849339395,849339395,
sipa,2021-05-27 06:17:43,Should we consider turning the nanobench import into a git-subtree?,https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-849358592,849358592,
martinus,2021-05-27 06:57:09,"> Should we consider turning the nanobench import into a git-subtree?\n\nThis sounds like a good idea. I've never used this feature though, is this something that I can do in the PR, or is this something only a maintainer can do?",https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-849382499,849382499,
laanwj,2021-05-27 12:23:38,"Concept ACK\n\n> Should we consider turning the nanobench import into a git-subtree?\n\nNot opposed to it, but I'm not sure adding a subtree for what is one single file makes that much sense. Now at least we don't have to carry any additional files that might be in the repository. E.g. we don't subtree tinyformat either.",https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-849587455,849587455,
practicalswift,2021-05-27 21:24:21,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-849952209,849952209,
fanquake,2021-05-28 06:16:34,Concept ACK - I agree that adding a subtree for a single header seems like overkill. Updates to this file would also seem to be very infrequent.,https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-850168785,850168785,
martinus,2021-05-28 06:34:07,"> Updates to this file would also seem to be very infrequent.\n\nI mostly do minor bugfixes now and then when they arise, but I'd consider nanobench to be finished. So there won't be any major updates.",https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-850179141,850179141,
theStack,2021-05-28 11:48:16,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-850362235,850362235,
MarcoFalke,2021-05-31 12:25:38,"> Also disable UBSAN (bitcoin needed to add a suppression)\n\nDoes that mean we can remove the suppression?",https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-851456054,851456054,
martinus,2021-06-01 04:37:40,"> Does that mean we can remove the suppression?\n\nIt should work, but I didn't try it in the bitcoin repository. Also I don't have clang12 (yet). Should I add a commit to remove the suppression?",https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-851797889,851797889,
MarcoFalke,2021-06-01 05:22:17,"Yes, CI should check it",https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-851816176,851816176,
MarcoFalke,2021-06-01 06:52:52,ci didn't like that. maybe the annotation needs to be on `rotl` itself?,https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-851871804,851871804,
martinus,2021-06-01 07:01:09,"> ci didn't like that. maybe the annotation needs to be on rotl itself?\n\nyes, it needs to be there too... its the code for a fast random generator, so overflows are expected.",https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-851876909,851876909,
martinus,2021-06-01 13:39:28,"I've created a new nanobench release for the missing annotation, then rebased with this version, now it compiles with the removed suppression. Ready for review!",https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-852132823,852132823,
MarcoFalke,2021-06-02 07:18:47,review ACK 44d05d0a69c14ed295b0a7f6c8ec4379d44155e4,https://github.com/bitcoin/bitcoin/pull/22082#issuecomment-852803386,852803386,
