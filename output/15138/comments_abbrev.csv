laanwj,2019-01-10T01:11:31Z,"I like `IsReachable` better than `IsLimited` tbh, I think it's clearer, if we have to do this (I'm not convinced) I'd pefer to go for that.",https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-452932668,452932668,
DrahtBot,2019-01-10T01:48:54Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14856](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14856.html) ([WIP] net: remove more CConnman globals (th",https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-452939775,452939775,
Empact,2019-01-10T01:57:27Z,"Fair enough, I agree that's clearer.\n\n* I removed the `SetReachable` default arg because I don't think it clarifies the call sites.\n* I switched from `bool[]` to `std::vector<bool>` because it enables easy initialization.",https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-452941408,452941408,
laanwj,2019-01-10T11:58:10Z,"Thanks, concept ACK.\n\n> I switched from bool[] to std::vector<bool> because it enables easy initialization.\n\nWhat is the reasoning behind this? What what difficult about the old initialization?",https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-453071298,453071298,
Empact,2019-01-10T20:04:00Z,"@laanwj I chose to invert the underlying variable to avoid a need to convert on the way in and out. The challenge of that is that it's surprisingly difficult to directly initialize an array of unknown size to all 1s.\n\nAs of now, using `std::bitset` as @promag suggested.",https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-453234555,453234555,
promag,2019-01-10T20:49:20Z,"> As of now, using std::bitset with an integer initializer, plus a static_assert to assure the int covers all bits.\n\nWhat is the problem with initializing it with `std::bitset<NET_MAX>{}.set()`?",https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-453248218,453248218,
Empact,2019-01-10T21:34:05Z,"> What is the problem with initializing it with `std::bitset<NET_MAX>{}.set()`?\n\nSwitched to your approach after I wrote that - int + static_assert is nice because it's a compile-time operation, but decided that's a form of micro-optimization, not worth the cost in readability.",https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-453262337,453262337,
promag,2019-01-11T00:28:01Z,"Just noting that `SetReachable` now throws `std::out_of_range` (for instance `SetReachable((Network)100, true)`). It would be similar with `std::array::at` instead of `std::array::operator[]`.\n\nACK a7d6098.",https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-453317300,453317300,
Empact,2019-01-11T01:51:04Z,"FYI I double-checked that `NET_TEREDO`, which would be out of bounds, does not extend into these apis.",https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-453339942,453339942,
sipa,2019-01-11T18:22:47Z,utACK a7d6098edff439bc26b811b8f11852eb792e6082,https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-453610400,453610400,
Empact,2019-01-12T23:57:25Z,"Dropped `std::bitset` in favor of the original array, as per https://github.com/bitcoin/bitcoin/pull/15138#discussion_r247307060\n\n```\ndiff --git a/src/net.cpp b/src/net.cpp\nindex 95177fbae..40ec17d8e 100644\n--- a/src/net.cpp\n+++ b/src/net.cpp\n@@ -37,7 +37,6 @@\n #include <miniupnpc/upnperrors.h>\n #endif\n \n-#include <bitset>\n #include <unordered_map>\n \n #include <math.h>",https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-453790357,453790357,
ajtowns,2019-01-14T06:18:27Z,"utACK 04a1b53661a71c240a9244e70e5f990ae767a0bf\n\nnit: comment for `SetReachable` seems like it's a bit inverted (describes SetLimited` better)",https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-453910256,453910256,
laanwj,2019-01-14T13:25:19Z,utACK d6b076c17bc7d513243711563b262524ef0ba74c,https://github.com/bitcoin/bitcoin/pull/15138#issuecomment-454003449,454003449,
MarcoFalke,2019-01-10T14:55:57Z,nit: `std::array<...> g_nets_reachable`?,https://github.com/bitcoin/bitcoin/pull/15138#discussion_r246789735,246789735,src/net.cpp
promag,2019-01-10T15:48:50Z,"```cpp\nstatic auto g_nets_reachable GUARDED_BY(cs_mapLocalHost)(std::bitset<NET_MAX>{}.set());\n```",https://github.com/bitcoin/bitcoin/pull/15138#discussion_r246812275,246812275,src/net.cpp
promag,2019-01-11T00:35:28Z,"nit, I still have a preference for\n```cpp\nstatic auto g_nets_reachable GUARDED_BY(cs_mapLocalHost){std::bitset<NET_MAX>().set()};\n```\nsince it doesn't repeat the type — here the type is obvious.",https://github.com/bitcoin/bitcoin/pull/15138#discussion_r246971100,246971100,src/net.cpp
Empact,2019-01-11T01:45:08Z,"It's a small difference, but I included it because I think it makes the declaration more readable - after GUARDED_BY seems a bit buried if you're scanning down the page.",https://github.com/bitcoin/bitcoin/pull/15138#discussion_r246981913,246981913,src/net.cpp
laanwj,2019-01-12T08:57:14Z,"This is the first use of `std::bitset` in this project. It's a *small* set, the memory savings here are minimal compared to the extra code that is being introduced to handle it.\nI think the original code here was fine.",https://github.com/bitcoin/bitcoin/pull/15138#discussion_r247307060,247307060,src/net.cpp
Empact,2019-01-12T23:52:03Z,"Yeah - I think of `bitset` as just `vector<bool>` without the interface requirements of `vector`, thus able to be more constrained (e.g. fixed size). But I'll revert to the array to narrow the focus of this PR.",https://github.com/bitcoin/bitcoin/pull/15138#discussion_r247329663,247329663,src/net.cpp
promag,2019-01-13T00:25:01Z,Remove?,https://github.com/bitcoin/bitcoin/pull/15138#discussion_r247330167,247330167,src/net.h
Empact,2019-01-13T02:44:47Z,"Originally added because I used std::vector, but left it in because vector is used in the header irrespective of other changes / iwyu. Still remove?",https://github.com/bitcoin/bitcoin/pull/15138#discussion_r247332282,247332282,src/net.h
promag,2019-01-13T21:32:35Z,"I'd say yes, since there are no ack's yet and it's unrelated to this PR.",https://github.com/bitcoin/bitcoin/pull/15138#discussion_r247363661,247363661,src/net.h
laanwj,2019-01-14T13:22:14Z,"I think the `SetReachable` comment is ok…? (oh it was updated, good)",https://github.com/bitcoin/bitcoin/pull/15138#discussion_r247488866,247488866,src/net.h
