[
  {
    "sha": "d6b076c17bc7d513243711563b262524ef0ba74c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNmIwNzZjMTdiYzdkNTEzMjQzNzExNTYzYjI2MjUyNGVmMGJhNzRj",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-01-10T00:41:37Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-01-14T06:50:36Z"
      },
      "message": "Drop IsLimited in favor of IsReachable\n\nThese two methods have had the same meaning, but inverted, since\n110b62f06992d0fb989153afff2dc3aea62a674f. Having one name for a single\nconcept simplifies the code.",
      "tree": {
        "sha": "0313896bea97550b6afe38e35f3fd657333ff550",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0313896bea97550b6afe38e35f3fd657333ff550"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6b076c17bc7d513243711563b262524ef0ba74c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAlw8MT0ACgkQTYykuhgE\nCQYgVA//TZkMFUXklDv28YeGmWnG0RvmkAgOyF+ARzYbK4R9UxHOwwiLLQpqnCkP\nVk2t6k2keMvKCuqBAhJgR7Plkj20kuQeVsLmhsjGPyYRVpvmk3OXLPArYSbYRPle\nYGPRKGnT05eOVcvRyi41vhiGwMRQ0ASp6ddTEglsZjguj8rOi/zdSYeZW+LcDYvu\nyTPjSIOg0cmDXmvAwteZhhgfXqvyFtnQqa2Y9eNlRiWM+rq0r45CgRY9ViA/YL0Q\naqZDzBwIcnuoL/Ubs4SpjL7zxBYxOWHLJYTQIfuSx0MMKIoZt60xeFY66X/Hb+Tu\nd1tSmGHerTk8JEvcIkuMRRRQMowradYbDXmThGFFTygKE/H2AXVbIlVSwgLdvGIG\nKhCNCI4rVA3sc+gNo3ee5L+B+kW+4pKxKjd7Ht7lXSEigEztutgaHcsxQ9T75Vqo\nebkgt0xdP/OjQJ9Ww3hCRDVVsVhvkC4J/7qoZ3VHvACMjjWq5geML1PhfEseGqik\nos3OmmIsPlB/bKIkg2feBKqlFau+kSdsmM2fU1KHFWyE1bC16CUTmqB0pR+JWfNB\nH746jsOfd2sARhFyqID8qSAJhIvnr5H53Ma6/30+j3m5y265Na/6wVnAC8X8VHSh\nx124Elni8LbU0LQWofDTnDTvXY2hdVX4HjFJ19j0Zg7W4YzZdDQ=\n=7vqH\n-----END PGP SIGNATURE-----",
        "payload": "tree 0313896bea97550b6afe38e35f3fd657333ff550\nparent 0ed279cb4e4198e20a552c279c09134626bbb0bd\nauthor Ben Woosley <ben.woosley@gmail.com> 1547080897 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1547448636 -0800\n\nDrop IsLimited in favor of IsReachable\n\nThese two methods have had the same meaning, but inverted, since\n110b62f06992d0fb989153afff2dc3aea62a674f. Having one name for a single\nconcept simplifies the code.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6b076c17bc7d513243711563b262524ef0ba74c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6b076c17bc7d513243711563b262524ef0ba74c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6b076c17bc7d513243711563b262524ef0ba74c/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0ed279cb4e4198e20a552c279c09134626bbb0bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ed279cb4e4198e20a552c279c09134626bbb0bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ed279cb4e4198e20a552c279c09134626bbb0bd"
      }
    ],
    "stats": {
      "total": 109,
      "additions": 44,
      "deletions": 65
    },
    "files": [
      {
        "sha": "fa081f8ca1ec956ea78d1a20b0ac663ad9b45dff",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6b076c17bc7d513243711563b262524ef0ba74c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6b076c17bc7d513243711563b262524ef0ba74c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d6b076c17bc7d513243711563b262524ef0ba74c",
        "patch": "@@ -1321,7 +1321,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n         for (int n = 0; n < NET_MAX; n++) {\n             enum Network net = (enum Network)n;\n             if (!nets.count(net))\n-                SetLimited(net);\n+                SetReachable(net, false);\n         }\n     }\n \n@@ -1332,7 +1332,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n     // -proxy sets a proxy for all outgoing network traffic\n     // -noproxy (or -proxy=0) as well as the empty string can be used to not set a proxy, this is the default\n     std::string proxyArg = gArgs.GetArg(\"-proxy\", \"\");\n-    SetLimited(NET_ONION);\n+    SetReachable(NET_ONION, false);\n     if (proxyArg != \"\" && proxyArg != \"0\") {\n         CService proxyAddr;\n         if (!Lookup(proxyArg.c_str(), proxyAddr, 9050, fNameLookup)) {\n@@ -1347,7 +1347,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n         SetProxy(NET_IPV6, addrProxy);\n         SetProxy(NET_ONION, addrProxy);\n         SetNameProxy(addrProxy);\n-        SetLimited(NET_ONION, false); // by default, -proxy sets onion as reachable, unless -noonion later\n+        SetReachable(NET_ONION, true); // by default, -proxy sets onion as reachable, unless -noonion later\n     }\n \n     // -onion can be used to set only a proxy for .onion, or override normal proxy for .onion addresses\n@@ -1356,7 +1356,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n     std::string onionArg = gArgs.GetArg(\"-onion\", \"\");\n     if (onionArg != \"\") {\n         if (onionArg == \"0\") { // Handle -noonion/-onion=0\n-            SetLimited(NET_ONION); // set onions as unreachable\n+            SetReachable(NET_ONION, false);\n         } else {\n             CService onionProxy;\n             if (!Lookup(onionArg.c_str(), onionProxy, 9050, fNameLookup)) {\n@@ -1366,7 +1366,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n             if (!addrOnion.IsValid())\n                 return InitError(strprintf(_(\"Invalid -onion address or hostname: '%s'\"), onionArg));\n             SetProxy(NET_ONION, addrOnion);\n-            SetLimited(NET_ONION, false);\n+            SetReachable(NET_ONION, true);\n         }\n     }\n "
      },
      {
        "sha": "40ec17d8e220e30ce2fc788b357be78968cab7db",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 24,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6b076c17bc7d513243711563b262524ef0ba74c/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6b076c17bc7d513243711563b262524ef0ba74c/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=d6b076c17bc7d513243711563b262524ef0ba74c",
        "patch": "@@ -183,7 +183,7 @@ bool IsPeerAddrLocalGood(CNode *pnode)\n {\n     CService addrLocal = pnode->GetAddrLocal();\n     return fDiscover && pnode->addr.IsRoutable() && addrLocal.IsRoutable() &&\n-           !IsLimited(addrLocal.GetNetwork());\n+           IsReachable(addrLocal.GetNetwork());\n }\n \n // pushes our own address to a peer\n@@ -222,7 +222,7 @@ bool AddLocal(const CService& addr, int nScore)\n     if (!fDiscover && nScore < LOCAL_MANUAL)\n         return false;\n \n-    if (IsLimited(addr))\n+    if (!IsReachable(addr))\n         return false;\n \n     LogPrintf(\"AddLocal(%s,%i)\\n\", addr.ToString(), nScore);\n@@ -252,24 +252,23 @@ void RemoveLocal(const CService& addr)\n     mapLocalHost.erase(addr);\n }\n \n-/** Make a particular network entirely off-limits (no automatic connects to it) */\n-void SetLimited(enum Network net, bool fLimited)\n+void SetReachable(enum Network net, bool reachable)\n {\n     if (net == NET_UNROUTABLE || net == NET_INTERNAL)\n         return;\n     LOCK(cs_mapLocalHost);\n-    vfLimited[net] = fLimited;\n+    vfLimited[net] = !reachable;\n }\n \n-bool IsLimited(enum Network net)\n+bool IsReachable(enum Network net)\n {\n     LOCK(cs_mapLocalHost);\n-    return vfLimited[net];\n+    return !vfLimited[net];\n }\n \n-bool IsLimited(const CNetAddr &addr)\n+bool IsReachable(const CNetAddr &addr)\n {\n-    return IsLimited(addr.GetNetwork());\n+    return IsReachable(addr.GetNetwork());\n }\n \n /** vote for a local address */\n@@ -292,19 +291,6 @@ bool IsLocal(const CService& addr)\n     return mapLocalHost.count(addr) > 0;\n }\n \n-/** check whether a given network is one we can probably connect to */\n-bool IsReachable(enum Network net)\n-{\n-    return !IsLimited(net);\n-}\n-\n-/** check whether a given address is in a network we can probably connect to */\n-bool IsReachable(const CNetAddr& addr)\n-{\n-    return IsReachable(addr.GetNetwork());\n-}\n-\n-\n CNode* CConnman::FindNode(const CNetAddr& ip)\n {\n     LOCK(cs_vNodes);\n@@ -1965,7 +1951,7 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             if (nTries > 100)\n                 break;\n \n-            if (IsLimited(addr))\n+            if (!IsReachable(addr))\n                 continue;\n \n             // only consider very recently tried nodes after 30 failed attempts\n@@ -2327,7 +2313,7 @@ NodeId CConnman::GetNewNodeId()\n \n \n bool CConnman::Bind(const CService &addr, unsigned int flags) {\n-    if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n+    if (!(flags & BF_EXPLICIT) && !IsReachable(addr))\n         return false;\n     std::string strError;\n     if (!BindListenPort(addr, strError, (flags & BF_WHITELIST) != 0)) {"
      },
      {
        "sha": "6d1bc0f8d0af76eebcc047a3cb2f868165c61e5e",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6b076c17bc7d513243711563b262524ef0ba74c/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6b076c17bc7d513243711563b262524ef0ba74c/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=d6b076c17bc7d513243711563b262524ef0ba74c",
        "patch": "@@ -520,17 +520,23 @@ enum\n \n bool IsPeerAddrLocalGood(CNode *pnode);\n void AdvertiseLocal(CNode *pnode);\n-void SetLimited(enum Network net, bool fLimited = true);\n-bool IsLimited(enum Network net);\n-bool IsLimited(const CNetAddr& addr);\n+\n+/**\n+ * Mark a network as reachable or unreachable (no automatic connects to it)\n+ * @note Networks are reachable by default\n+ */\n+void SetReachable(enum Network net, bool reachable);\n+/** @returns true if the network is reachable, false otherwise */\n+bool IsReachable(enum Network net);\n+/** @returns true if the address is in a reachable network, false otherwise */\n+bool IsReachable(const CNetAddr& addr);\n+\n bool AddLocal(const CService& addr, int nScore = LOCAL_NONE);\n bool AddLocal(const CNetAddr& addr, int nScore = LOCAL_NONE);\n void RemoveLocal(const CService& addr);\n bool SeenLocal(const CService& addr);\n bool IsLocal(const CService& addr);\n bool GetLocal(CService &addr, const CNetAddr *paddrPeer = nullptr);\n-bool IsReachable(enum Network net);\n-bool IsReachable(const CNetAddr &addr);\n CAddress GetLocalAddress(const CNetAddr *paddrPeer, ServiceFlags nLocalServices);\n \n "
      },
      {
        "sha": "6fdf80dc5f91db356d3a319aa0554c712e7f2145",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6b076c17bc7d513243711563b262524ef0ba74c/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6b076c17bc7d513243711563b262524ef0ba74c/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=d6b076c17bc7d513243711563b262524ef0ba74c",
        "patch": "@@ -423,7 +423,7 @@ static UniValue GetNetworksInfo()\n         UniValue obj(UniValue::VOBJ);\n         GetProxy(network, proxy);\n         obj.pushKV(\"name\", GetNetworkName(network));\n-        obj.pushKV(\"limited\", IsLimited(network));\n+        obj.pushKV(\"limited\", !IsReachable(network));\n         obj.pushKV(\"reachable\", IsReachable(network));\n         obj.pushKV(\"proxy\", proxy.IsValid() ? proxy.proxy.ToStringIPPort() : std::string());\n         obj.pushKV(\"proxy_randomize_credentials\", proxy.randomize_credentials);"
      },
      {
        "sha": "b4ae8e9765801ccd4a94259b326bc23376d2ae04",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 29,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6b076c17bc7d513243711563b262524ef0ba74c/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6b076c17bc7d513243711563b262524ef0ba74c/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=d6b076c17bc7d513243711563b262524ef0ba74c",
        "patch": "@@ -230,26 +230,21 @@ BOOST_AUTO_TEST_CASE(ipv4_peer_with_ipv6_addrMe_test)\n \n BOOST_AUTO_TEST_CASE(LimitedAndReachable_Network)\n {\n-    SetLimited(NET_IPV4, true);\n-    SetLimited(NET_IPV6, true);\n-    SetLimited(NET_ONION, true);\n+    BOOST_CHECK_EQUAL(IsReachable(NET_IPV4), true);\n+    BOOST_CHECK_EQUAL(IsReachable(NET_IPV6), true);\n+    BOOST_CHECK_EQUAL(IsReachable(NET_ONION), true);\n \n-    BOOST_CHECK_EQUAL(IsLimited(NET_IPV4), true);\n-    BOOST_CHECK_EQUAL(IsLimited(NET_IPV6), true);\n-    BOOST_CHECK_EQUAL(IsLimited(NET_ONION), true);\n+    SetReachable(NET_IPV4, false);\n+    SetReachable(NET_IPV6, false);\n+    SetReachable(NET_ONION, false);\n \n     BOOST_CHECK_EQUAL(IsReachable(NET_IPV4), false);\n     BOOST_CHECK_EQUAL(IsReachable(NET_IPV6), false);\n     BOOST_CHECK_EQUAL(IsReachable(NET_ONION), false);\n \n-\n-    SetLimited(NET_IPV4, false);\n-    SetLimited(NET_IPV6, false);\n-    SetLimited(NET_ONION, false);\n-\n-    BOOST_CHECK_EQUAL(IsLimited(NET_IPV4), false);\n-    BOOST_CHECK_EQUAL(IsLimited(NET_IPV6), false);\n-    BOOST_CHECK_EQUAL(IsLimited(NET_ONION), false);\n+    SetReachable(NET_IPV4, true);\n+    SetReachable(NET_IPV6, true);\n+    SetReachable(NET_ONION, true);\n \n     BOOST_CHECK_EQUAL(IsReachable(NET_IPV4), true);\n     BOOST_CHECK_EQUAL(IsReachable(NET_IPV6), true);\n@@ -258,19 +253,13 @@ BOOST_AUTO_TEST_CASE(LimitedAndReachable_Network)\n \n BOOST_AUTO_TEST_CASE(LimitedAndReachable_NetworkCaseUnroutableAndInternal)\n {\n-    BOOST_CHECK_EQUAL(IsLimited(NET_UNROUTABLE), false);\n-    BOOST_CHECK_EQUAL(IsLimited(NET_INTERNAL), false);\n-\n     BOOST_CHECK_EQUAL(IsReachable(NET_UNROUTABLE), true);\n     BOOST_CHECK_EQUAL(IsReachable(NET_INTERNAL), true);\n \n-    SetLimited(NET_UNROUTABLE, true);\n-    SetLimited(NET_INTERNAL, true);\n+    SetReachable(NET_UNROUTABLE, false);\n+    SetReachable(NET_INTERNAL, false);\n \n-    BOOST_CHECK_EQUAL(IsLimited(NET_UNROUTABLE), false); // Ignored for both networks\n-    BOOST_CHECK_EQUAL(IsLimited(NET_INTERNAL), false);\n-\n-    BOOST_CHECK_EQUAL(IsReachable(NET_UNROUTABLE), true);\n+    BOOST_CHECK_EQUAL(IsReachable(NET_UNROUTABLE), true); // Ignored for both networks\n     BOOST_CHECK_EQUAL(IsReachable(NET_INTERNAL), true);\n }\n \n@@ -289,23 +278,21 @@ BOOST_AUTO_TEST_CASE(LimitedAndReachable_CNetAddr)\n {\n     CNetAddr addr = UtilBuildAddress(0x001, 0x001, 0x001, 0x001); // 1.1.1.1\n \n-    SetLimited(NET_IPV4, false);\n-    BOOST_CHECK_EQUAL(IsLimited(addr), false);\n+    SetReachable(NET_IPV4, true);\n     BOOST_CHECK_EQUAL(IsReachable(addr), true);\n \n-    SetLimited(NET_IPV4, true);\n-    BOOST_CHECK_EQUAL(IsLimited(addr), true);\n+    SetReachable(NET_IPV4, false);\n     BOOST_CHECK_EQUAL(IsReachable(addr), false);\n \n-    SetLimited(NET_IPV4, false); // have to reset this, because this is stateful.\n+    SetReachable(NET_IPV4, true); // have to reset this, because this is stateful.\n }\n \n \n BOOST_AUTO_TEST_CASE(LocalAddress_BasicLifecycle)\n {\n     CService addr = CService(UtilBuildAddress(0x002, 0x001, 0x001, 0x001), 1000); // 2.1.1.1:1000\n \n-    SetLimited(NET_IPV4, false);\n+    SetReachable(NET_IPV4, true);\n \n     BOOST_CHECK_EQUAL(IsLocal(addr), false);\n     BOOST_CHECK_EQUAL(AddLocal(addr, 1000), true);"
      },
      {
        "sha": "550e23b22235c7f47a90910f5f0c5997dc6edd2a",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6b076c17bc7d513243711563b262524ef0ba74c/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6b076c17bc7d513243711563b262524ef0ba74c/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=d6b076c17bc7d513243711563b262524ef0ba74c",
        "patch": "@@ -527,7 +527,7 @@ void TorController::auth_cb(TorControlConnection& _conn, const TorControlReply&\n             CService resolved(LookupNumeric(\"127.0.0.1\", 9050));\n             proxyType addrOnion = proxyType(resolved, true);\n             SetProxy(NET_ONION, addrOnion);\n-            SetLimited(NET_ONION, false);\n+            SetReachable(NET_ONION, true);\n         }\n \n         // Finally - now create the service"
      }
    ]
  }
]