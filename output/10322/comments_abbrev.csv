gmaxwell,2017-05-03T01:25:41Z,"utACK. Consider adding a unit test that calls it twice, with a sleep and makes sure the value changes?",https://github.com/bitcoin/bitcoin/pull/10322#issuecomment-298804130,298804130,
sipa,2017-05-04T08:03:47Z,"Switched to using C++11 `std::high_precision_clock` instead of `gettimeofday` (which on Linux and OSX seems to use a nanosecond precision timer, and microsecond precision in MinGW).",https://github.com/bitcoin/bitcoin/pull/10322#issuecomment-299120678,299120678,
TheBlueMatt,2017-05-04T14:54:37Z,utACK de485d50f9fc647407acd848856bacf108b87172,https://github.com/bitcoin/bitcoin/pull/10322#issuecomment-299209728,299209728,
theuni,2017-05-04T18:50:28Z,"> Consider adding a unit test that calls it twice, with a sleep and makes sure the value changes?\n\nBetter yet, make this a runtime sanity check?",https://github.com/bitcoin/bitcoin/pull/10322#issuecomment-299275843,299275843,
sipa,2017-05-04T18:52:19Z,"> Better yet, make this a runtime sanity check?\n\nThat's both more powerful and easy. However, how long do we sleep? Is a 10ms slowdown at startup acceptable?",https://github.com/bitcoin/bitcoin/pull/10322#issuecomment-299276344,299276344,
theuni,2017-05-04T18:58:34Z,How about comparing values taken from beginning/end of the sanity checks?,https://github.com/bitcoin/bitcoin/pull/10322#issuecomment-299277917,299277917,
dcousens,2017-05-05T00:13:42Z,"> Is a 10ms slowdown at startup acceptable?\n\nIf it was,  you could run this in an alternate thread?",https://github.com/bitcoin/bitcoin/pull/10322#issuecomment-299343046,299343046,
TheBlueMatt,2017-05-05T18:07:14Z,"Just sleep 1ms, if it doesnt advance (because you only have a millisecond clock on your hardware) you're probably not on a machine that will ever finish chainsync anyway.",https://github.com/bitcoin/bitcoin/pull/10322#issuecomment-299535540,299535540,
sipa,2017-05-05T18:32:38Z,"> How about comparing values taken from beginning/end of the sanity checks?\n\n> Just sleep 1ms, if it doesnt advance (because you only have a millisecond clock on your hardware) you're probably not on a machine that will ever finish chainsync anyway.\n\nDone a combination of both.",https://github.com/bitcoin/bitcoin/pull/10322#issuecomment-299541958,299541958,
TheBlueMatt,2017-05-05T19:34:25Z,utACK 2c0a6f157da3c6bb3b0a1e77f003caf0d9cb9d6c,https://github.com/bitcoin/bitcoin/pull/10322#issuecomment-299556238,299556238,
theuni,2017-05-08T19:43:49Z,Thanks. utACK 2c0a6f157da3c6bb3b0a1e77f003caf0d9cb9d6c,https://github.com/bitcoin/bitcoin/pull/10322#issuecomment-299970169,299970169,
jonasschnelli,2017-05-09T06:35:04Z,utACK 2c0a6f157da3c6bb3b0a1e77f003caf0d9cb9d6c,https://github.com/bitcoin/bitcoin/pull/10322#issuecomment-300074310,300074310,
dcousens,2017-05-03T01:43:34Z,"Maybe link to https://en.wikipedia.org/wiki/Time_Stamp_Counter for readers that don't know what this could be?\n\nAlso,  I couldn't find a description on the constraints `a` or `d`,  I assume they are just writing to the inline variables `r1` and `r2`,  but I found documentation on this to be difficult to find.\n\nAlso,  is `volatile` necessary?  It doesn't hurt I suppose?",https://github.com/bitcoin/bitcoin/pull/10322#discussion_r114461456,114461456,src/random.cpp
dcousens,2017-05-03T01:47:18Z,"If resuming from hibernation,  might this counter be,  or close to, zero?",https://github.com/bitcoin/bitcoin/pull/10322#discussion_r114461743,114461743,src/random.cpp
sipa,2017-05-03T01:59:24Z,"I added some comments, but I don't think this warrants a full explanation of extended asm syntax in comments.\n\n> Also, I couldn't find a description on the constraints a or d, I assume they are just writing to the inline variables r1 and r2, but I found documentation on this to be difficult to find.\n\nSee https://gcc.gnu.org/onlinedocs/gcc-4.9.0/gcc/Machine-Constraints.html#Machine-Constrai",https://github.com/bitcoin/bitcoin/pull/10322#discussion_r114462518,114462518,src/random.cpp
sipa,2017-05-03T02:01:28Z,"> If resuming from hibernation, might this counter be, or close to, zero?\n\nI don't think that's a concern. It's still a fine entropy source. This thing counts in clock cycles (~nanoseconds and less, usually). If an attacker knows how many nanoseconds ago your last wakeup from hibernation was, you probably have bigger problems.",https://github.com/bitcoin/bitcoin/pull/10322#discussion_r114462723,114462723,src/random.cpp
dcousens,2017-05-03T02:28:36Z,"Thanks for the explanations and links @sipa,  I had been searching for that list but couldn't find it.",https://github.com/bitcoin/bitcoin/pull/10322#discussion_r114464323,114464323,src/random.cpp
TheBlueMatt,2017-05-03T23:37:52Z,Does MSVC support ARM now?,https://github.com/bitcoin/bitcoin/pull/10322#discussion_r114677468,114677468,src/random.cpp
sipa,2017-05-04T00:03:24Z,No idea. But their documentation doesn't specify any restrictions on when __rdtsc is available.,https://github.com/bitcoin/bitcoin/pull/10322#discussion_r114680293,114680293,src/random.cpp
TheBlueMatt,2017-05-04T02:37:01Z,Looks like it may not be https://docs.microsoft.com/en-us/cpp/intrinsics/rdtsc Maybe move this inside the x86 ifdef checks as well?,https://github.com/bitcoin/bitcoin/pull/10322#discussion_r114691798,114691798,src/random.cpp
TheBlueMatt,2017-05-04T02:37:13Z,(Compare to https://msdn.microsoft.com/en-us/library/wfd9z0bb.aspx,https://github.com/bitcoin/bitcoin/pull/10322#discussion_r114691811,114691811,src/random.cpp
sipa,2017-05-04T08:02:33Z,"MSVC has different macros. I've solved it in a way that seems right, but I can't test on MSVC.",https://github.com/bitcoin/bitcoin/pull/10322#discussion_r114717339,114717339,src/random.cpp
theuni,2017-05-04T18:53:23Z,Mind initializing these? IIRC valgrind isn't always able to follow inline asm and reports uninitialized values.,https://github.com/bitcoin/bitcoin/pull/10322#discussion_r114860036,114860036,src/random.cpp
sipa,2017-05-05T18:56:38Z,Done.,https://github.com/bitcoin/bitcoin/pull/10322#discussion_r115066042,115066042,src/random.cpp
