[
  {
    "sha": "fdc329376c8a0fa4dffd0cd2599a494a64c38472",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZGMzMjkzNzZjOGEwZmE0ZGZmZDBjZDI1OTlhNDk0YTY0YzM4NDcy",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-08-28T07:24:17Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-09-06T08:45:37Z"
      },
      "message": "Document assumptions that are being made to avoid NULL pointer dereferences",
      "tree": {
        "sha": "2e2052bb1fced6b82e6eb58adb64c7c9bf23fcf8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e2052bb1fced6b82e6eb58adb64c7c9bf23fcf8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fdc329376c8a0fa4dffd0cd2599a494a64c38472",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdc329376c8a0fa4dffd0cd2599a494a64c38472",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fdc329376c8a0fa4dffd0cd2599a494a64c38472",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdc329376c8a0fa4dffd0cd2599a494a64c38472/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6866b4912b8013ed748d12250209f7079a3c92e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6866b4912b8013ed748d12250209f7079a3c92e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6866b4912b8013ed748d12250209f7079a3c92e6"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "714a59431800924102a6865e6ed83f9df12d5084",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdc329376c8a0fa4dffd0cd2599a494a64c38472/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdc329376c8a0fa4dffd0cd2599a494a64c38472/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=fdc329376c8a0fa4dffd0cd2599a494a64c38472",
        "patch": "@@ -7,6 +7,7 @@\n #include \"bitcoingui.h\"\n #include \"walletview.h\"\n \n+#include <cassert>\n #include <cstdio>\n \n #include <QHBoxLayout>\n@@ -69,6 +70,7 @@ bool WalletFrame::setCurrentWallet(const QString& name)\n \n     WalletView *walletView = mapWalletViews.value(name);\n     walletStack->setCurrentWidget(walletView);\n+    assert(walletView);\n     walletView->updateEncryptionStatus();\n     return true;\n }"
      },
      {
        "sha": "939921d677e54575960361adfc0df3b9c8510bb9",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdc329376c8a0fa4dffd0cd2599a494a64c38472/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdc329376c8a0fa4dffd0cd2599a494a64c38472/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fdc329376c8a0fa4dffd0cd2599a494a64c38472",
        "patch": "@@ -1710,6 +1710,7 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n     // before the first had been spent.  Since those coinbases are sufficiently buried its no longer possible to create further\n     // duplicate transactions descending from the known pairs either.\n     // If we're on the known chain at height greater than where BIP34 activated, we can save the db accesses needed for the BIP30 check.\n+    assert(pindex->pprev);\n     CBlockIndex *pindexBIP34height = pindex->pprev->GetAncestor(chainparams.GetConsensus().BIP34Height);\n     //Only continue to enforce if we're below BIP34 activation height or the block hash at that height doesn't correspond.\n     fEnforceBIP30 = fEnforceBIP30 && (!pindexBIP34height || !(pindexBIP34height->GetBlockHash() == chainparams.GetConsensus().BIP34Hash));\n@@ -1849,6 +1850,7 @@ static bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockInd\n         if (!pblocktree->WriteTxIndex(vPos))\n             return AbortNode(state, \"Failed to write transaction index\");\n \n+    assert(pindex->phashBlock);\n     // add this block to the view's block chain\n     view.SetBestBlock(pindex->GetBlockHash());\n "
      },
      {
        "sha": "36d6ce0007a0eba8195c5f112dc3c1369da2f1e9",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdc329376c8a0fa4dffd0cd2599a494a64c38472/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdc329376c8a0fa4dffd0cd2599a494a64c38472/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=fdc329376c8a0fa4dffd0cd2599a494a64c38472",
        "patch": "@@ -519,6 +519,7 @@ void CWallet::SyncMetaData(std::pair<TxSpends::iterator, TxSpends::iterator> ran\n         const uint256& hash = it->second;\n         CWalletTx* copyTo = &mapWallet[hash];\n         if (copyFrom == copyTo) continue;\n+        assert(copyFrom && \"Oldest wallet transaction in range assumed to have been found.\");\n         if (!copyFrom->IsEquivalentTo(*copyTo)) continue;\n         copyTo->mapValue = copyFrom->mapValue;\n         copyTo->vOrderForm = copyFrom->vOrderForm;"
      }
    ]
  }
]