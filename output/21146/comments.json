[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777219401",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#issuecomment-777219401",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21146",
    "id": 777219401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzIxOTQwMQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-11T05:56:04Z",
    "updated_at": "2021-02-24T01:50:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20833 (rpc/validation: enable packages through testmempoolaccept by glozow)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/777219401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778213317",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#issuecomment-778213317",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21146",
    "id": 778213317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODIxMzMxNw==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-12T14:02:11Z",
    "updated_at": "2021-02-12T14:02:11Z",
    "author_association": "MEMBER",
    "body": "Do you think you can take the following diff in the doc followup commit ?\r\n\r\n```\r\ndiff --git a/src/rpc/rawtransaction.cpp b/src/rpc/rawtransaction.cpp\r\nindex ac4240447..f8f4a6d94 100644\r\n--- a/src/rpc/rawtransaction.cpp\r\n+++ b/src/rpc/rawtransaction.cpp\r\n@@ -896,7 +896,7 @@ static RPCHelpMan testmempoolaccept()\r\n                         {\r\n                             {RPCResult::Type::STR_HEX, \"txid\", \"The transaction hash in hex\"},\r\n                             {RPCResult::Type::STR_HEX, \"wtxid\", \"The transaction witness hash in hex\"},\r\n-                            {RPCResult::Type::BOOL, \"allowed\", \"If the mempool allows this tx to be inserted\"},\r\n+                            {RPCResult::Type::BOOL, \"allowed\", \"If the mempool and client specified maxfeerate allows this tx to be inserted\"},\r\n                             {RPCResult::Type::NUM, \"vsize\", \"Virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted (only present when 'allowed' is true)\"},\r\n                             {RPCResult::Type::OBJ, \"fees\", \"Transaction fees (only present if 'allowed' is true)\",\r\n                             {\r\n```\r\n\r\nThat would close my [#21704](https://github.com/bitcoin/bitcoin/issues/21074) concerns for now :) ?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/778213317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/782723514",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#issuecomment-782723514",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21146",
    "id": 782723514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjcyMzUxNA==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-20T17:57:34Z",
    "updated_at": "2021-02-20T17:57:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/782723514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/783552771",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#issuecomment-783552771",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21146",
    "id": 783552771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzU1Mjc3MQ==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-22T17:49:13Z",
    "updated_at": "2021-02-22T17:49:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the review @jnewbery! Addressed your comments. Added some sentences about the uncaching behavior to https://github.com/bitcoin/bitcoin/commit/acef823e895b80fd7f4c2f5a44c3470fe46c1a6a commit log. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/783552771/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/783619963",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#issuecomment-783619963",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21146",
    "id": 783619963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzYxOTk2Mw==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-22T19:34:15Z",
    "updated_at": "2021-02-22T19:34:15Z",
    "author_association": "MEMBER",
    "body": "ACK acef823e895b80fd7f4c2f5a44c3470fe46c1a6a",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/783619963/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/786086551",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#issuecomment-786086551",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21146",
    "id": 786086551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjA4NjU1MQ==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-25T17:51:24Z",
    "updated_at": "2021-02-25T18:03:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm working on #20833 and realized I don't need to keep `m_view` and `m_viewmempool` connected for it to work \ud83d\ude1b so I took out the 3rd commit (_[validation] keep m_view->m_viewmempool connected_). @ariard you might find this PR a bit more acceptable now :). I'll try to add https://github.com/bitcoin/bitcoin/pull/21146#issuecomment-778213317 to a different PR that's more relevant to the RPC code.\r\n\r\nAlso addressed @jnewbery's comments https://github.com/bitcoin/bitcoin/pull/21146#discussion_r582119695 and https://github.com/bitcoin/bitcoin/pull/21146#discussion_r582120303.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/786086551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789116795",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#issuecomment-789116795",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21146",
    "id": 789116795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTExNjc5NQ==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-02T18:27:08Z",
    "updated_at": "2021-03-02T18:27:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I still think this would be a nice change but since I don't need this for #20833 anymore, I'm closing this to focus on that instead.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789116795/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574866661",
    "pull_request_review_id": 589036012,
    "id": 574866661,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDg2NjY2MQ==",
    "diff_hunk": "@@ -671,7 +691,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     // we have all inputs cached now, so switch back to dummy (to protect\n     // against bugs where we pull more inputs from disk that miss being added\n     // to coins_to_uncache)\n-    m_view.SetBackend(m_dummy);\n+    m_viewmempool.SetBackend(m_dummy);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 104,
    "commit_id": "aeaf5407c3870a1fd824209b0d0a2630c1fb3493",
    "original_commit_id": "14c94b30f1dba81ebb5b9af1b834db7d2a88f297",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\u261d\ufe0f this is the main change \ud83d\udc46 ",
    "created_at": "2021-02-11T22:20:07Z",
    "updated_at": "2021-02-25T17:33:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r574866661",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574866661"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r574866661"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/574866661/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 674,
    "start_side": "LEFT",
    "line": null,
    "original_line": 708,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580289237",
    "pull_request_review_id": 595400630,
    "id": 580289237,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDI4OTIzNw==",
    "diff_hunk": "@@ -671,7 +691,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     // we have all inputs cached now, so switch back to dummy (to protect\n     // against bugs where we pull more inputs from disk that miss being added\n     // to coins_to_uncache)\n-    m_view.SetBackend(m_dummy);\n+    m_viewmempool.SetBackend(m_dummy);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 104,
    "commit_id": "aeaf5407c3870a1fd824209b0d0a2630c1fb3493",
    "original_commit_id": "14c94b30f1dba81ebb5b9af1b834db7d2a88f297",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You switch `m_view.SetBackend(m_dummy)` to `m_viewmempool.SetBackend(m_dummy)` in commit _[validation] disconnect m_viewmempool from coins cache when unnecessary_.\r\n\r\nI think perhaps in that commit you should just add `m_viewmempool.SetBackend(m_dummy)`, and then in the subsequent commit (_[validation] keep m_view->m_viewmempool connected_), you should remove `m_view.SetBackend(m_dummy)`. That keeps the commits more separated (the first is adding the m_viewmempool // CoinsTip() split, and the second is removing the m_view // m_viewmempool split).",
    "created_at": "2021-02-22T14:25:51Z",
    "updated_at": "2021-02-25T17:33:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r580289237",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580289237"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r580289237"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580289237/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 674,
    "start_side": "LEFT",
    "line": null,
    "original_line": 708,
    "side": "RIGHT",
    "in_reply_to_id": 574866661
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580443711",
    "pull_request_review_id": 595602611,
    "id": 580443711,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDQ0MzcxMQ==",
    "diff_hunk": "@@ -671,7 +691,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     // we have all inputs cached now, so switch back to dummy (to protect\n     // against bugs where we pull more inputs from disk that miss being added\n     // to coins_to_uncache)\n-    m_view.SetBackend(m_dummy);\n+    m_viewmempool.SetBackend(m_dummy);",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 104,
    "commit_id": "aeaf5407c3870a1fd824209b0d0a2630c1fb3493",
    "original_commit_id": "14c94b30f1dba81ebb5b9af1b834db7d2a88f297",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point! Done in the last push",
    "created_at": "2021-02-22T17:33:22Z",
    "updated_at": "2021-02-25T17:33:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r580443711",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580443711"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r580443711"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/580443711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 674,
    "start_side": "LEFT",
    "line": null,
    "original_line": 708,
    "side": "RIGHT",
    "in_reply_to_id": 574866661
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581258456",
    "pull_request_review_id": 596623419,
    "id": 581258456,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTI1ODQ1Ng==",
    "diff_hunk": "@@ -1088,20 +1104,10 @@ static MempoolAcceptResult AcceptToMemoryPoolWithTime(const CChainParams& chainp\n                                                       bool bypass_limits, bool test_accept)\n                                                       EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n-    std::vector<COutPoint> coins_to_uncache;\n-    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, coins_to_uncache, test_accept };\n-\n+    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, test_accept };\n     assert(std::addressof(::ChainstateActive()) == std::addressof(active_chainstate));\n     const MempoolAcceptResult result = MemPoolAccept(pool, active_chainstate).AcceptSingleTransaction(tx, args);\n-    if (result.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n-        // Remove coins that were not present in the coins cache before calling ATMPW;\n-        // this is to prevent memory DoS in case we receive a large number of\n-        // invalid transactions that attempt to overrun the in-memory coins cache\n-        // (`CCoinsViewCache::cacheCoins`).\n \n-        for (const COutPoint& hashTx : coins_to_uncache)\n-            active_chainstate.CoinsTip().Uncache(hashTx);\n-    }",
    "path": "src/validation.cpp",
    "position": 143,
    "original_position": 156,
    "commit_id": "aeaf5407c3870a1fd824209b0d0a2630c1fb3493",
    "original_commit_id": "acef823e895b80fd7f4c2f5a44c3470fe46c1a6a",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I would rather keep coin cache cleanup at this location. After this change, it's spread in two locations : in case of success evaluation in `AcceptSingleTransaction`, in case of failure in `MemPoolAccept` destructor. A reviewer has to read both locations now. \r\n\r\nFurther, it's harder to qualify that cleanup is reserved for success path in `AcceptSingleTransaction`, considering that `MemPoolAcceptResult` internal state is provided by `Workspace`.\r\n\r\nAlso, I don't know about relying on RAII semantic, the destructor will be only called when object is going out of scope. In that case, does it mean we'll only cleanup when caller ends up ? For e.g, if the caller was `BroadcastTransaction`, may the coin cache cleanup on `cs_main` lock tacking before `RelayTransaction` ?",
    "created_at": "2021-02-23T17:54:46Z",
    "updated_at": "2021-02-25T17:33:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r581258456",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581258456"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r581258456"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581258456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1104,
    "original_line": 1104,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581329523",
    "pull_request_review_id": 596721571,
    "id": 581329523,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTMyOTUyMw==",
    "diff_hunk": "@@ -1088,20 +1104,10 @@ static MempoolAcceptResult AcceptToMemoryPoolWithTime(const CChainParams& chainp\n                                                       bool bypass_limits, bool test_accept)\n                                                       EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n-    std::vector<COutPoint> coins_to_uncache;\n-    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, coins_to_uncache, test_accept };\n-\n+    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, test_accept };\n     assert(std::addressof(::ChainstateActive()) == std::addressof(active_chainstate));\n     const MempoolAcceptResult result = MemPoolAccept(pool, active_chainstate).AcceptSingleTransaction(tx, args);\n-    if (result.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n-        // Remove coins that were not present in the coins cache before calling ATMPW;\n-        // this is to prevent memory DoS in case we receive a large number of\n-        // invalid transactions that attempt to overrun the in-memory coins cache\n-        // (`CCoinsViewCache::cacheCoins`).\n \n-        for (const COutPoint& hashTx : coins_to_uncache)\n-            active_chainstate.CoinsTip().Uncache(hashTx);\n-    }",
    "path": "src/validation.cpp",
    "position": 143,
    "original_position": 156,
    "commit_id": "aeaf5407c3870a1fd824209b0d0a2630c1fb3493",
    "original_commit_id": "acef823e895b80fd7f4c2f5a44c3470fe46c1a6a",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> After this change, it's spread in two locations : in case of success evaluation in AcceptSingleTransaction, in case of failure in MemPoolAccept destructor. \r\n\r\nNot really. The only location a reviewer has to check is wherever they _want_ to keep the coins in cache. Also, the change here means that if someone forgets to consider uncaching, it defaults to uncache all. This is safer.\r\n\r\n\r\n> Also, I don't know about relying on RAII semantic, the destructor will be only called when object is going out of scope. In that case, does it mean we'll only cleanup when caller ends up ? For e.g, if the caller was BroadcastTransaction, may the coin cache cleanup on cs_main lock tacking before RelayTransaction ?\r\n\r\nThe two possible callers of `MemPoolAccept` are ATMP and ProcessNewPackage They invoke it like this:\r\n\r\n```c\r\nconst MempoolAcceptResult result = MemPoolAccept(pool, active_chainstate).AcceptSingleTransaction(tx, args);\r\n```\r\n\r\nafaik it goes out of scope immediately, before the lock is released.\r\n",
    "created_at": "2021-02-23T19:31:39Z",
    "updated_at": "2021-02-25T17:33:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r581329523",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581329523"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r581329523"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581329523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1104,
    "original_line": 1104,
    "side": "LEFT",
    "in_reply_to_id": 581258456
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581948585",
    "pull_request_review_id": 597463707,
    "id": 581948585,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTk0ODU4NQ==",
    "diff_hunk": "@@ -1088,20 +1104,10 @@ static MempoolAcceptResult AcceptToMemoryPoolWithTime(const CChainParams& chainp\n                                                       bool bypass_limits, bool test_accept)\n                                                       EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n-    std::vector<COutPoint> coins_to_uncache;\n-    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, coins_to_uncache, test_accept };\n-\n+    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, test_accept };\n     assert(std::addressof(::ChainstateActive()) == std::addressof(active_chainstate));\n     const MempoolAcceptResult result = MemPoolAccept(pool, active_chainstate).AcceptSingleTransaction(tx, args);\n-    if (result.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n-        // Remove coins that were not present in the coins cache before calling ATMPW;\n-        // this is to prevent memory DoS in case we receive a large number of\n-        // invalid transactions that attempt to overrun the in-memory coins cache\n-        // (`CCoinsViewCache::cacheCoins`).\n \n-        for (const COutPoint& hashTx : coins_to_uncache)\n-            active_chainstate.CoinsTip().Uncache(hashTx);\n-    }",
    "path": "src/validation.cpp",
    "position": 143,
    "original_position": 156,
    "commit_id": "aeaf5407c3870a1fd824209b0d0a2630c1fb3493",
    "original_commit_id": "acef823e895b80fd7f4c2f5a44c3470fe46c1a6a",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Not really. The only location a reviewer has to check is wherever they want to keep the coins in cache. \r\n\r\nDepends what you're willingly to convince yourself by reviewing. Assuming uncaching  in case of failures is the correct behavior, looking at the proposed changes, you have to a) verify that uncaching code is well-implemented in `MemPoolAccept` destructor, b) identify that caching conservation is covering all success paths and thus dissociate success code path from errors one in `AcceptSingleTransaction` and c) ensure the RAAI semantic is enforced as intended. IMHO, more complex than current one-place location.\r\n\r\nThat said, I think the code is correct, and each one review process and code style flavors might turn as really abstract discussion so not going to argue further :)",
    "created_at": "2021-02-24T13:14:57Z",
    "updated_at": "2021-02-25T17:33:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r581948585",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581948585"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r581948585"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/581948585/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1104,
    "original_line": 1104,
    "side": "LEFT",
    "in_reply_to_id": 581258456
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582118131",
    "pull_request_review_id": 597689563,
    "id": 582118131,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjExODEzMQ==",
    "diff_hunk": "@@ -1088,20 +1104,10 @@ static MempoolAcceptResult AcceptToMemoryPoolWithTime(const CChainParams& chainp\n                                                       bool bypass_limits, bool test_accept)\n                                                       EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n-    std::vector<COutPoint> coins_to_uncache;\n-    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, coins_to_uncache, test_accept };\n-\n+    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, test_accept };\n     assert(std::addressof(::ChainstateActive()) == std::addressof(active_chainstate));\n     const MempoolAcceptResult result = MemPoolAccept(pool, active_chainstate).AcceptSingleTransaction(tx, args);\n-    if (result.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n-        // Remove coins that were not present in the coins cache before calling ATMPW;\n-        // this is to prevent memory DoS in case we receive a large number of\n-        // invalid transactions that attempt to overrun the in-memory coins cache\n-        // (`CCoinsViewCache::cacheCoins`).\n \n-        for (const COutPoint& hashTx : coins_to_uncache)\n-            active_chainstate.CoinsTip().Uncache(hashTx);\n-    }",
    "path": "src/validation.cpp",
    "position": 143,
    "original_position": 156,
    "commit_id": "aeaf5407c3870a1fd824209b0d0a2630c1fb3493",
    "original_commit_id": "acef823e895b80fd7f4c2f5a44c3470fe46c1a6a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> The two possible callers of MemPoolAccept are ATMP and ProcessNewPackage They invoke it like this:\r\n> \r\n> `const MempoolAcceptResult result = MemPoolAccept(pool, active_chainstate).AcceptSingleTransaction(tx, args);`\r\n> \r\n> afaik it goes out of scope immediately, before the lock is released.\r\n\r\nI believe you're right. In that expression, `MemPoolAccept()` is a temporary, and the lifetime rules for temporaries are\r\n\r\n> All temporary objects are destroyed as the last step in evaluating the full-expression that (lexically) contains the point where they were created, and if multiple temporary objects were created, they are destroyed in the order opposite to the order of creation. This is true even if that evaluation ends in throwing an exception.\r\n\r\nhttps://en.cppreference.com/w/cpp/language/lifetime#Temporary_object_lifetime\r\n\r\nNote that there are two exceptions to that rule, neither of which apply here:\r\n\r\n> - The lifetime of a temporary object may be extended by binding to a const lvalue reference or to an rvalue reference (since C++11), see reference initialization for details.\r\n> - The lifetime of a temporary object created when evaluating the default arguments of a default constructor used to initialize an element of an array ends before the next element of the array begins initialization.\r\n\r\n",
    "created_at": "2021-02-24T16:41:05Z",
    "updated_at": "2021-02-25T17:33:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r582118131",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582118131"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r582118131"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582118131/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1104,
    "original_line": 1104,
    "side": "LEFT",
    "in_reply_to_id": 581258456
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582119695",
    "pull_request_review_id": 597691635,
    "id": 582119695,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjExOTY5NQ==",
    "diff_hunk": "@@ -1088,20 +1104,10 @@ static MempoolAcceptResult AcceptToMemoryPoolWithTime(const CChainParams& chainp\n                                                       bool bypass_limits, bool test_accept)\n                                                       EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n-    std::vector<COutPoint> coins_to_uncache;\n-    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, coins_to_uncache, test_accept };\n-\n+    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, test_accept };",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 145,
    "commit_id": "aeaf5407c3870a1fd824209b0d0a2630c1fb3493",
    "original_commit_id": "acef823e895b80fd7f4c2f5a44c3470fe46c1a6a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You can const this if you want",
    "created_at": "2021-02-24T16:43:05Z",
    "updated_at": "2021-02-25T17:33:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r582119695",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582119695"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r582119695"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582119695/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1107,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582120303",
    "pull_request_review_id": 597691635,
    "id": 582120303,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjEyMDMwMw==",
    "diff_hunk": "@@ -1088,20 +1104,10 @@ static MempoolAcceptResult AcceptToMemoryPoolWithTime(const CChainParams& chainp\n                                                       bool bypass_limits, bool test_accept)\n                                                       EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n-    std::vector<COutPoint> coins_to_uncache;\n-    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, coins_to_uncache, test_accept };\n-\n+    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, test_accept };\n     assert(std::addressof(::ChainstateActive()) == std::addressof(active_chainstate));\n     const MempoolAcceptResult result = MemPoolAccept(pool, active_chainstate).AcceptSingleTransaction(tx, args);\n-    if (result.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n-        // Remove coins that were not present in the coins cache before calling ATMPW;\n-        // this is to prevent memory DoS in case we receive a large number of\n-        // invalid transactions that attempt to overrun the in-memory coins cache\n-        // (`CCoinsViewCache::cacheCoins`).\n \n-        for (const COutPoint& hashTx : coins_to_uncache)\n-            active_chainstate.CoinsTip().Uncache(hashTx);\n-    }\n     // After we've (potentially) uncached entries, ensure our coins cache is still within its size limits",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 157,
    "commit_id": "aeaf5407c3870a1fd824209b0d0a2630c1fb3493",
    "original_commit_id": "acef823e895b80fd7f4c2f5a44c3470fe46c1a6a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Consider removing \"After we've (potentially) uncached entries\". That was referring to the line above. Now that it's removed, that part of the comment is not particularly relevant here.",
    "created_at": "2021-02-24T16:43:52Z",
    "updated_at": "2021-02-25T17:33:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r582120303",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582120303"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r582120303"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/582120303/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1111,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583033965",
    "pull_request_review_id": 598832197,
    "id": 583033965,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzMzk2NQ==",
    "diff_hunk": "@@ -1088,20 +1104,10 @@ static MempoolAcceptResult AcceptToMemoryPoolWithTime(const CChainParams& chainp\n                                                       bool bypass_limits, bool test_accept)\n                                                       EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n-    std::vector<COutPoint> coins_to_uncache;\n-    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, coins_to_uncache, test_accept };\n-\n+    MemPoolAccept::ATMPArgs args { chainparams, nAcceptTime, bypass_limits, test_accept };",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 145,
    "commit_id": "aeaf5407c3870a1fd824209b0d0a2630c1fb3493",
    "original_commit_id": "acef823e895b80fd7f4c2f5a44c3470fe46c1a6a",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I always wanna const",
    "created_at": "2021-02-25T17:40:02Z",
    "updated_at": "2021-02-25T17:40:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r583033965",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583033965"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21146#discussion_r583033965"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21146"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583033965/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1107,
    "side": "RIGHT",
    "in_reply_to_id": 582119695
  }
]