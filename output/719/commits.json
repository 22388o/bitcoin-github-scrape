[
  {
    "sha": "fc99b948c441366463842fb4230b7788ba598294",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzk5Yjk0OGM0NDEzNjY0NjM4NDJmYjQyMzBiNzc4OGJhNTk4Mjk0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-05-27T04:19:01Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2012-02-17T15:08:45Z"
      },
      "message": "Execute command specified by -coinbaser when creating a new block, which can output data to control where the generation goes",
      "tree": {
        "sha": "ac503825879d6e20a179496220a6340a34102ef3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac503825879d6e20a179496220a6340a34102ef3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc99b948c441366463842fb4230b7788ba598294",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc99b948c441366463842fb4230b7788ba598294",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc99b948c441366463842fb4230b7788ba598294",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc99b948c441366463842fb4230b7788ba598294/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "39231e91052bff032525d99dbe890f742b6180fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39231e91052bff032525d99dbe890f742b6180fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/39231e91052bff032525d99dbe890f742b6180fe"
      }
    ],
    "stats": {
      "total": 79,
      "additions": 75,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2ce8b7b4f7580f319e2bb1b0721f02eabc82925b",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc99b948c441366463842fb4230b7788ba598294/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc99b948c441366463842fb4230b7788ba598294/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=fc99b948c441366463842fb4230b7788ba598294",
        "patch": "@@ -1910,7 +1910,7 @@ Value getmemorypool(const Array& params, bool fHelp)\n             // Create new block\n             if(pblock)\n                 delete pblock;\n-            pblock = CreateNewBlock(reservekey);\n+            pblock = CreateNewBlock(reservekey, false);\n             if (!pblock)\n                 throw JSONRPCError(-7, \"Out of memory\");\n         }"
      },
      {
        "sha": "2f49b45df4eb529c1fae1e7d51773e11b9655e31",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc99b948c441366463842fb4230b7788ba598294/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc99b948c441366463842fb4230b7788ba598294/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fc99b948c441366463842fb4230b7788ba598294",
        "patch": "@@ -229,6 +229,9 @@ bool AppInit2(int argc, char* argv[])\n             \"  -rpcallowip=<ip> \\t\\t  \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\" +\n             \"  -rpcconnect=<ip> \\t  \"   + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\" +\n             \"  -blocknotify=<cmd> \"     + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\" +\n+#ifndef WIN32\n+            \"  -coinbaser=<cmd> \\t  \"   + _(\"Execute <cmd> to calculate coinbase payees\") + \"\\n\" +\n+#endif\n             \"  -keypool=<n>     \\t  \"   + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\" +\n             \"  -rescan          \\t  \"   + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n "
      },
      {
        "sha": "3e0cb109cd523f732c51934b2ecfd7f983db920b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 70,
        "deletions": 2,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc99b948c441366463842fb4230b7788ba598294/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc99b948c441366463842fb4230b7788ba598294/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=fc99b948c441366463842fb4230b7788ba598294",
        "patch": "@@ -3001,10 +3001,72 @@ class COrphan\n };\n \n \n+#ifndef WIN32\n+int DoCoinbaser_I(CBlock* pblock, uint64 nTotal, FILE* file)\n+{\n+    int nCount;\n+    if (fscanf(file, \"%d\\n\", &nCount) != 1)\n+    {\n+        printf(\"DoCoinbaser(): failed to fscanf count\\n\");\n+        return -2;\n+    }\n+    pblock->vtx[0].vout.resize(nCount + 1);\n+    uint64 nDistributed = 0;\n+    for (int i = 1; i <= nCount; ++i)\n+    {\n+        uint64 nValue;\n+        if (fscanf(file, \"%\" PRI64u \"\\n\", &nValue) != 1)\n+        {\n+            printf(\"DoCoinbaser(): failed to fscanf amount for transaction #%d\\n\", i);\n+            return -(0x1000 | i);\n+        }\n+        pblock->vtx[0].vout[i].nValue = nValue;\n+        nDistributed += nValue;\n+        char strAddr[35];\n+        if (fscanf(file, \"%34s\\n\", strAddr) != 1)\n+        {\n+            printf(\"DoCoinbaser(): failed to fscanf address for transaction #%d\\n\", i);\n+            return -(0x2000 | i);\n+        }\n+        CBitcoinAddress address;\n+        if (!address.SetString(strAddr))\n+        {\n+            printf(\"DoCoinbaser(): invalid bitcoin address for transaction #%d\\n\", i);\n+            return -(0x3000 | i);\n+        }\n+        pblock->vtx[0].vout[i].scriptPubKey.SetBitcoinAddress(address);\n+    }\n+    if (nTotal < nDistributed)\n+    {\n+        printf(\"DoCoinbaser(): attempt to distribute %\" PRI64u \"/%\" PRI64u \"\\n\", nDistributed, nTotal);\n+        return -3;\n+    }\n+    uint64 nMine = nTotal - nDistributed;\n+    printf(\"DoCoinbaser(): total distributed: %\" PRI64u \"/%\" PRI64u \" = %\" PRI64u \" for me\\n\", nDistributed, nTotal, nMine);\n+    pblock->vtx[0].vout[0].nValue = nMine;\n+    return 0;\n+}\n+\n+int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n+{\n+    FILE* file = popen(mapArgs[\"-coinbaser\"].c_str(), \"r\");\n+    if (!file)\n+    {\n+        printf(\"DoCoinbaser(): failed to popen: %s\", strerror(errno));\n+        return -1;\n+    }\n+    int rv = DoCoinbaser_I(pblock, nTotal, file);\n+    pclose(file);\n+    if (rv)\n+        pblock->vtx[0].vout.resize(1);\n+    return rv;\n+}\n+#endif\n+\n uint64 nLastBlockTx = 0;\n uint64 nLastBlockSize = 0;\n \n-CBlock* CreateNewBlock(CReserveKey& reservekey)\n+CBlock* CreateNewBlock(CReserveKey& reservekey, bool fUseCoinbaser)\n {\n     CBlockIndex* pindexPrev = pindexBest;\n \n@@ -3163,7 +3225,12 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n         printf(\"CreateNewBlock(): total size %lu\\n\", nBlockSize);\n \n     }\n-    pblock->vtx[0].vout[0].nValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+    int64 nBlkValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+    pblock->vtx[0].vout[0].nValue = nBlkValue;\n+#ifndef WIN32\n+    if (fUseCoinbaser && mapArgs.count(\"-coinbaser\"))\n+        DoCoinbaser(&*pblock, nBlkValue);\n+#endif\n \n     // Fill in header\n     pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n@@ -3172,6 +3239,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n     pblock->nBits          = GetNextWorkRequired(pindexPrev, pblock.get());\n     pblock->nNonce         = 0;\n \n+    pblock->print();\n     return pblock.release();\n }\n "
      },
      {
        "sha": "f4a8664a62ded3c2f814a35d80c763c3dfb30bf4",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc99b948c441366463842fb4230b7788ba598294/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc99b948c441366463842fb4230b7788ba598294/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=fc99b948c441366463842fb4230b7788ba598294",
        "patch": "@@ -104,7 +104,7 @@ void PrintBlockTree();\n bool ProcessMessages(CNode* pfrom);\n bool SendMessages(CNode* pto, bool fSendTrickle);\n void GenerateBitcoins(bool fGenerate, CWallet* pwallet);\n-CBlock* CreateNewBlock(CReserveKey& reservekey);\n+CBlock* CreateNewBlock(CReserveKey& reservekey, bool fUseCoinbaser=true);\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\n void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1);\n bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey);"
      }
    ]
  },
  {
    "sha": "509694257caa5e5291543c1edab56daef289b40a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDk2OTQyNTdjYWE1ZTUyOTE1NDNjMWVkYWI1NmRhZWYyODliNDBh",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-05-27T04:19:42Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2012-02-17T15:08:50Z"
      },
      "message": "coinbaser: replace %d in command line with available funds",
      "tree": {
        "sha": "b8f0f10c169b17fdfa8c4b52d26dacaa1775a71b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8f0f10c169b17fdfa8c4b52d26dacaa1775a71b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/509694257caa5e5291543c1edab56daef289b40a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/509694257caa5e5291543c1edab56daef289b40a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/509694257caa5e5291543c1edab56daef289b40a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/509694257caa5e5291543c1edab56daef289b40a/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc99b948c441366463842fb4230b7788ba598294",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc99b948c441366463842fb4230b7788ba598294",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc99b948c441366463842fb4230b7788ba598294"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 20,
      "deletions": 2
    },
    "files": [
      {
        "sha": "94050130037c577b2fa6501b91a2c94055431233",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 2,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/509694257caa5e5291543c1edab56daef289b40a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/509694257caa5e5291543c1edab56daef289b40a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=509694257caa5e5291543c1edab56daef289b40a",
        "patch": "@@ -10,6 +10,7 @@\n #include <boost/algorithm/string/replace.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n+#include <boost/lexical_cast.hpp>\n \n using namespace std;\n using namespace boost;\n@@ -3049,13 +3050,30 @@ int DoCoinbaser_I(CBlock* pblock, uint64 nTotal, FILE* file)\n \n int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n {\n-    FILE* file = popen(mapArgs[\"-coinbaser\"].c_str(), \"r\");\n+    string strCmd = mapArgs[\"-coinbaser\"];\n+    try\n+    {\n+        boost::replace_all(strCmd, \"%d\", boost::lexical_cast<std::string>(nTotal));\n+    }\n+    catch (...)\n+    {\n+        return 1;\n+    }\n+    FILE* file = popen(strCmd.c_str(), \"r\");\n     if (!file)\n     {\n         printf(\"DoCoinbaser(): failed to popen: %s\", strerror(errno));\n         return -1;\n     }\n-    int rv = DoCoinbaser_I(pblock, nTotal, file);\n+    int rv;\n+    try\n+    {\n+        rv = DoCoinbaser_I(pblock, nTotal, file);\n+    }\n+    catch (...)\n+    {\n+        rv = 1;\n+    }\n     pclose(file);\n     if (rv)\n         pblock->vtx[0].vout.resize(1);"
      }
    ]
  },
  {
    "sha": "cf160d6121551188ee37ff55e3e30e8d2af2b1b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjE2MGQ2MTIxNTUxMTg4ZWUzN2ZmNTVlM2UzMGU4ZDJhZjJiMWIw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-07-05T05:17:47Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2012-02-17T15:08:54Z"
      },
      "message": "Support for TCP server coinbasers",
      "tree": {
        "sha": "9fc9982de213df3d6637f49fb69876f8972f41c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fc9982de213df3d6637f49fb69876f8972f41c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf160d6121551188ee37ff55e3e30e8d2af2b1b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf160d6121551188ee37ff55e3e30e8d2af2b1b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf160d6121551188ee37ff55e3e30e8d2af2b1b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf160d6121551188ee37ff55e3e30e8d2af2b1b0/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "509694257caa5e5291543c1edab56daef289b40a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/509694257caa5e5291543c1edab56daef289b40a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/509694257caa5e5291543c1edab56daef289b40a"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 30,
      "deletions": 6
    },
    "files": [
      {
        "sha": "359d60ca1c7a75959250e90871c14a27744dde15",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 6,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf160d6121551188ee37ff55e3e30e8d2af2b1b0/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf160d6121551188ee37ff55e3e30e8d2af2b1b0/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=cf160d6121551188ee37ff55e3e30e8d2af2b1b0",
        "patch": "@@ -3051,20 +3051,41 @@ int DoCoinbaser_I(CBlock* pblock, uint64 nTotal, FILE* file)\n int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n {\n     string strCmd = mapArgs[\"-coinbaser\"];\n-    try\n+    FILE* file = NULL;\n+    bool fIsProcess = false;\n+    if (!strCmd.compare(0, 4, \"tcp:\"))\n     {\n-        boost::replace_all(strCmd, \"%d\", boost::lexical_cast<std::string>(nTotal));\n+        CService addrCoinbaser(strCmd.substr(4), true);\n+        SOCKET hSocket;\n+        if (!ConnectSocket(addrCoinbaser, hSocket))\n+        {\n+            perror(\"DoCoinbaser(): failed to connect\");\n+            return -3;\n+        }\n+        file = fdopen(hSocket, \"r+\");\n+        if (file)\n+            fprintf(file, \"total: %\" PRI64u \"\\n\\n\", nTotal);\n     }\n-    catch (...)\n+    else\n     {\n-        return 1;\n+        try\n+        {\n+            boost::replace_all(strCmd, \"%d\", boost::lexical_cast<std::string>(nTotal));\n+        }\n+        catch (...)\n+        {\n+            return 1;\n+        }\n+        file = popen(strCmd.c_str(), \"r\");\n+        fIsProcess = true;\n     }\n-    FILE* file = popen(strCmd.c_str(), \"r\");\n+\n     if (!file)\n     {\n         printf(\"DoCoinbaser(): failed to popen: %s\", strerror(errno));\n         return -1;\n     }\n+\n     int rv;\n     try\n     {\n@@ -3074,7 +3095,10 @@ int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n     {\n         rv = 1;\n     }\n-    pclose(file);\n+    if (fIsProcess)\n+        pclose(file);\n+    else\n+        fclose(file);\n     if (rv)\n         pblock->vtx[0].vout.resize(1);\n     return rv;"
      }
    ]
  },
  {
    "sha": "6f929a8370d232bf1d9045229b3f2992d5376da9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjkyOWE4MzcwZDIzMmJmMWQ5MDQ1MjI5YjNmMjk5MmQ1Mzc2ZGE5",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-10-05T22:15:20Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2012-02-17T15:08:59Z"
      },
      "message": "Port coinbaser code to Windows",
      "tree": {
        "sha": "264aed3b47ca8869fb166beebc0f7b660950201f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/264aed3b47ca8869fb166beebc0f7b660950201f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f929a8370d232bf1d9045229b3f2992d5376da9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f929a8370d232bf1d9045229b3f2992d5376da9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f929a8370d232bf1d9045229b3f2992d5376da9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f929a8370d232bf1d9045229b3f2992d5376da9/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf160d6121551188ee37ff55e3e30e8d2af2b1b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf160d6121551188ee37ff55e3e30e8d2af2b1b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf160d6121551188ee37ff55e3e30e8d2af2b1b0"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 23,
      "deletions": 9
    },
    "files": [
      {
        "sha": "3670a7481646ea5cb525208d2a9c7d0c1c7db299",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f929a8370d232bf1d9045229b3f2992d5376da9/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f929a8370d232bf1d9045229b3f2992d5376da9/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=6f929a8370d232bf1d9045229b3f2992d5376da9",
        "patch": "@@ -229,9 +229,7 @@ bool AppInit2(int argc, char* argv[])\n             \"  -rpcallowip=<ip> \\t\\t  \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\" +\n             \"  -rpcconnect=<ip> \\t  \"   + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\" +\n             \"  -blocknotify=<cmd> \"     + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\" +\n-#ifndef WIN32\n             \"  -coinbaser=<cmd> \\t  \"   + _(\"Execute <cmd> to calculate coinbase payees\") + \"\\n\" +\n-#endif\n             \"  -keypool=<n>     \\t  \"   + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\" +\n             \"  -rescan          \\t  \"   + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n "
      },
      {
        "sha": "7c1ce19ec2e4e41a50c14ee91eaeb2de91eda84f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 7,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f929a8370d232bf1d9045229b3f2992d5376da9/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f929a8370d232bf1d9045229b3f2992d5376da9/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=6f929a8370d232bf1d9045229b3f2992d5376da9",
        "patch": "@@ -7,6 +7,11 @@\n #include \"db.h\"\n #include \"net.h\"\n #include \"init.h\"\n+\n+#ifdef WIN32\n+#include <fcntl.h>\n+#endif\n+\n #include <boost/algorithm/string/replace.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/filesystem/fstream.hpp>\n@@ -3002,7 +3007,6 @@ class COrphan\n };\n \n \n-#ifndef WIN32\n int DoCoinbaser_I(CBlock* pblock, uint64 nTotal, FILE* file)\n {\n     int nCount;\n@@ -3053,16 +3057,27 @@ int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n     string strCmd = mapArgs[\"-coinbaser\"];\n     FILE* file = NULL;\n     bool fIsProcess = false;\n+    SOCKET hSocket;\n     if (!strCmd.compare(0, 4, \"tcp:\"))\n     {\n         CService addrCoinbaser(strCmd.substr(4), true);\n-        SOCKET hSocket;\n         if (!ConnectSocket(addrCoinbaser, hSocket))\n         {\n             perror(\"DoCoinbaser(): failed to connect\");\n             return -3;\n         }\n-        file = fdopen(hSocket, \"r+\");\n+#ifdef WIN32\n+        int nSocket = _open_osfhandle((intptr_t)hSocket, _O_RDONLY | _O_TEXT);\n+        if (-1 == nSocket)\n+        {\n+            closesocket(hSocket);\n+            printf(\"DoCoinbaser(): failed to _open_osfhandle\\n\");\n+            return -4;\n+        }\n+        file = fdopen(nSocket, \"r\");\n+#else\n+        file = fdopen(hSocket, \"r\");\n+#endif\n         if (file)\n             fprintf(file, \"total: %\" PRI64u \"\\n\\n\", nTotal);\n     }\n@@ -3097,13 +3112,16 @@ int DoCoinbaser(CBlock* pblock, uint64 nTotal)\n     }\n     if (fIsProcess)\n         pclose(file);\n-    else\n+    else {\n         fclose(file);\n+#ifdef WIN32\n+        closesocket(hSocket);\n+#endif\n+    }\n     if (rv)\n         pblock->vtx[0].vout.resize(1);\n     return rv;\n }\n-#endif\n \n uint64 nLastBlockTx = 0;\n uint64 nLastBlockSize = 0;\n@@ -3269,10 +3287,8 @@ CBlock* CreateNewBlock(CReserveKey& reservekey, bool fUseCoinbaser)\n     }\n     int64 nBlkValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n     pblock->vtx[0].vout[0].nValue = nBlkValue;\n-#ifndef WIN32\n     if (fUseCoinbaser && mapArgs.count(\"-coinbaser\"))\n         DoCoinbaser(&*pblock, nBlkValue);\n-#endif\n \n     // Fill in header\n     pblock->hashPrevBlock  = pindexPrev->GetBlockHash();"
      }
    ]
  },
  {
    "sha": "663aaff48333b2c23518de391a8b73ef5c1e79fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjNhYWZmNDgzMzNiMmMyMzUxOGRlMzkxYThiNzNlZjVjMWU3OWZk",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-08-03T17:48:16Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2012-02-17T15:14:13Z"
      },
      "message": "setworkaux JSON-RPC call for arbitrary data blocks in coinbase scriptSig",
      "tree": {
        "sha": "8f3a86a517efbdd7dd2e103737480451e652849d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f3a86a517efbdd7dd2e103737480451e652849d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/663aaff48333b2c23518de391a8b73ef5c1e79fd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/663aaff48333b2c23518de391a8b73ef5c1e79fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/663aaff48333b2c23518de391a8b73ef5c1e79fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/663aaff48333b2c23518de391a8b73ef5c1e79fd/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6f929a8370d232bf1d9045229b3f2992d5376da9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f929a8370d232bf1d9045229b3f2992d5376da9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f929a8370d232bf1d9045229b3f2992d5376da9"
      }
    ],
    "stats": {
      "total": 99,
      "additions": 87,
      "deletions": 12
    },
    "files": [
      {
        "sha": "232b68c0072274bb8623038277352914b5d46578",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 2,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/663aaff48333b2c23518de391a8b73ef5c1e79fd/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/663aaff48333b2c23518de391a8b73ef5c1e79fd/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=663aaff48333b2c23518de391a8b73ef5c1e79fd",
        "patch": "@@ -1763,6 +1763,35 @@ Value validateaddress(const Array& params, bool fHelp)\n     return ret;\n }\n \n+\n+Value setworkaux(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setworkaux <id> [data]\\n\"\n+            \"If [data] is not specified, deletes aux.\\n\"\n+        );\n+\n+    std::string strId = params[0].get_str();\n+    if (params.size() > 1)\n+    {\n+        std::string strData = params[1].get_str();\n+        std::vector<unsigned char> vchData = ParseHex(strData);\n+        if (vchData.size() * 2 != strData.size())\n+            throw JSONRPCError(-8, \"Failed to parse data as hexadecimal\");\n+        CScript scriptBackup = mapAuxCoinbases[strId];\n+        mapAuxCoinbases[strId] = CScript(vchData);\n+        bool fOverflow;\n+        BuildCoinbaseScriptSig(0, std::numeric_limits<unsigned int>::max(), &fOverflow);\n+        if (fOverflow)\n+            throw JSONRPCError(-7, \"Change would overflow coinbase script\");\n+    }\n+    else\n+        mapAuxCoinbases.erase(strId);\n+\n+    return true;\n+}\n+\n Value getwork(const Array& params, bool fHelp)\n {\n     if (fHelp || params.size() > 1)\n@@ -1877,8 +1906,8 @@ Value getmemorypool(const Array& params, bool fHelp)\n             \"  \\\"version\\\" : block version\\n\"\n             \"  \\\"previousblockhash\\\" : hash of current highest block\\n\"\n             \"  \\\"transactions\\\" : contents of non-coinbase transactions that should be included in the next block\\n\"\n+            \"  \\\"coinbaseaux\\\" : data that should be included in coinbase\\n\"\n             \"  \\\"coinbasevalue\\\" : maximum allowable input to coinbase transaction, including the generation award and transaction fees\\n\"\n-            \"  \\\"coinbaseflags\\\" : data that should be included in coinbase so support for new features can be judged\\n\"\n             \"  \\\"time\\\" : timestamp appropriate for next block\\n\"\n             \"  \\\"mintime\\\" : minimum timestamp appropriate for next block\\n\"\n             \"  \\\"curtime\\\" : current timestamp\\n\"\n@@ -1930,12 +1959,20 @@ Value getmemorypool(const Array& params, bool fHelp)\n             transactions.push_back(HexStr(ssTx.begin(), ssTx.end()));\n         }\n \n+        Object aux;\n+        map<std::string, CScript>::iterator it;\n+        for (it = mapAuxCoinbases.begin() ; it != mapAuxCoinbases.end(); ++it)\n+        {\n+            std::vector<unsigned char> &vchData = (*it).second;\n+            aux.push_back(Pair((*it).first, HexStr(vchData.begin(), vchData.end())));\n+        }\n+\n         Object result;\n         result.push_back(Pair(\"version\", pblock->nVersion));\n         result.push_back(Pair(\"previousblockhash\", pblock->hashPrevBlock.GetHex()));\n         result.push_back(Pair(\"transactions\", transactions));\n+        result.push_back(Pair(\"coinbaseaux\", aux));\n         result.push_back(Pair(\"coinbasevalue\", (int64_t)pblock->vtx[0].vout[0].nValue));\n-        result.push_back(Pair(\"coinbaseflags\", HexStr(COINBASE_FLAGS.begin(), COINBASE_FLAGS.end())));\n         result.push_back(Pair(\"time\", (int64_t)pblock->nTime));\n         result.push_back(Pair(\"mintime\", (int64_t)pindexPrev->GetMedianTimePast()+1));\n         result.push_back(Pair(\"curtime\", (int64_t)GetAdjustedTime()));\n@@ -2053,6 +2090,7 @@ pair<string, rpcfn_type> pCallTable[] =\n     make_pair(\"listtransactions\",       &listtransactions),\n     make_pair(\"signmessage\",            &signmessage),\n     make_pair(\"verifymessage\",          &verifymessage),\n+    make_pair(\"setworkaux\",             &setworkaux),\n     make_pair(\"getwork\",                &getwork),\n     make_pair(\"listaccounts\",           &listaccounts),\n     make_pair(\"settxfee\",               &settxfee),"
      },
      {
        "sha": "d2afac67b29cb29380933e9178161dcb97336841",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/663aaff48333b2c23518de391a8b73ef5c1e79fd/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/663aaff48333b2c23518de391a8b73ef5c1e79fd/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=663aaff48333b2c23518de391a8b73ef5c1e79fd",
        "patch": "@@ -499,12 +499,14 @@ bool AppInit2(int argc, char* argv[])\n         // Put \"/P2SH/\" in the coinbase so everybody can tell when\n         // a majority of miners support it\n         const char* pszP2SH = \"/P2SH/\";\n-        COINBASE_FLAGS << std::vector<unsigned char>(pszP2SH, pszP2SH+strlen(pszP2SH));\n+        std::vector<unsigned char> vchData(pszP2SH, pszP2SH+strlen(pszP2SH));\n+        mapAuxCoinbases[\"P2SH\"] = CScript(vchData);\n     }\n     else\n     {\n         const char* pszP2SH = \"NOP2SH\";\n-        COINBASE_FLAGS << std::vector<unsigned char>(pszP2SH, pszP2SH+strlen(pszP2SH));\n+        std::vector<unsigned char> vchData(pszP2SH, pszP2SH+strlen(pszP2SH));\n+        mapAuxCoinbases[\"P2SH\"] = CScript(vchData);\n     }\n \n     // Command-line args override in-wallet settings:"
      },
      {
        "sha": "e2d0f466c64e285d6e666a0875f5a73f17bc6083",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 7,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/663aaff48333b2c23518de391a8b73ef5c1e79fd/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/663aaff48333b2c23518de391a8b73ef5c1e79fd/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=663aaff48333b2c23518de391a8b73ef5c1e79fd",
        "patch": "@@ -3302,19 +3302,53 @@ CBlock* CreateNewBlock(CReserveKey& reservekey, bool fUseCoinbaser)\n }\n \n \n+std::map<std::string, CScript> mapAuxCoinbases;\n+\n+CScript BuildCoinbaseScriptSig(uint64 nTime, unsigned int nExtraNonce, bool *pfOverflow)\n+{\n+    CScript scriptSig = CScript() << nTime << CBigNum(nExtraNonce);\n+\n+    map<std::string, CScript>::iterator it;\n+    for (it = mapAuxCoinbases.begin() ; it != mapAuxCoinbases.end(); ++it)\n+        scriptSig += (*it).second;\n+\n+    if (scriptSig.size() > 100)\n+    {\n+        scriptSig.resize(100);\n+        if (pfOverflow)\n+            *pfOverflow = true;\n+    }\n+    else\n+        if (pfOverflow)\n+            *pfOverflow = false;\n+\n+    return scriptSig;\n+}\n+\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce)\n {\n     // Update nExtraNonce\n-    static uint256 hashPrevBlock;\n-    if (hashPrevBlock != pblock->hashPrevBlock)\n+    static uint64 nPrevTime = 0;\n+    static bool fBackward = false;\n+    uint64 nNow = GetTime();\n+    if (nNow > nPrevTime + 1)\n     {\n         nExtraNonce = 0;\n-        hashPrevBlock = pblock->hashPrevBlock;\n+        nPrevTime = nNow;\n+        fBackward = false;\n     }\n-    ++nExtraNonce;\n-    pblock->vtx[0].vin[0].scriptSig = (CScript() << pblock->nTime << CBigNum(nExtraNonce)) + COINBASE_FLAGS;\n-    assert(pblock->vtx[0].vin[0].scriptSig.size() <= 100);\n-\n+    else\n+    {\n+        if (nNow < nPrevTime && !fBackward)\n+        {\n+            printf(\"IncrementExtraNonce: WARNING: nNow moved backward: %d -> %d\\n\", nPrevTime, nNow);\n+            fBackward = true;\n+        }\n+        if (nExtraNonce == std::numeric_limits<unsigned int>::max())\n+            printf(\"IncrementExtraNonce: WARNING: nExtraNonce overflowing!\\n\");\n+        ++nExtraNonce;\n+    }\n+    pblock->vtx[0].vin[0].scriptSig = BuildCoinbaseScriptSig(nNow, nExtraNonce);\n     pblock->hashMerkleRoot = pblock->BuildMerkleTree();\n }\n "
      },
      {
        "sha": "35e293566433be3fc1bf7e8770a59edbb40cf9ed",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/663aaff48333b2c23518de391a8b73ef5c1e79fd/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/663aaff48333b2c23518de391a8b73ef5c1e79fd/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=663aaff48333b2c23518de391a8b73ef5c1e79fd",
        "patch": "@@ -49,7 +49,6 @@ static const int fHaveUPnP = false;\n #endif\n \n \n-extern CScript COINBASE_FLAGS;\n \n \n \n@@ -105,6 +104,8 @@ bool ProcessMessages(CNode* pfrom);\n bool SendMessages(CNode* pto, bool fSendTrickle);\n void GenerateBitcoins(bool fGenerate, CWallet* pwallet);\n CBlock* CreateNewBlock(CReserveKey& reservekey, bool fUseCoinbaser=true);\n+extern std::map<std::string, CScript> mapAuxCoinbases;\n+CScript BuildCoinbaseScriptSig(uint64 nTime, unsigned int nExtraNonce, bool *pfOverflow = NULL);\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\n void FormatHashBuffers(CBlock* pblock, char* pmidstate, char* pdata, char* phash1);\n bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey);"
      }
    ]
  }
]