[
  {
    "sha": "dc67e67fd1f53c302bf83379b66b2e257e92728b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYzY3ZTY3ZmQxZjUzYzMwMmJmODMzNzliNjZiMmUyNTdlOTI3Mjhi",
    "commit": {
      "author": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2021-03-06T19:30:17Z"
      },
      "committer": {
        "name": "Prayank",
        "email": "prayank@tutanota.de",
        "date": "2021-09-05T01:24:32Z"
      },
      "message": "Introduce fee histogram in getmempoolinfo RPC command\n\nCo-authored-by: Jonas Schnelli <dev@jonasschnelli.ch>\nCo-authored-by: Jon Atack <jon@atack.com>",
      "tree": {
        "sha": "e455a50bf4c2a499ae6d42b1ceb81c2cde09e849",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e455a50bf4c2a499ae6d42b1ceb81c2cde09e849"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc67e67fd1f53c302bf83379b66b2e257e92728b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc67e67fd1f53c302bf83379b66b2e257e92728b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dc67e67fd1f53c302bf83379b66b2e257e92728b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc67e67fd1f53c302bf83379b66b2e257e92728b/comments",
    "author": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4e12fd50c23875f4b5f272c94449eb81de43d5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4e12fd50c23875f4b5f272c94449eb81de43d5d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4e12fd50c23875f4b5f272c94449eb81de43d5d"
      }
    ],
    "stats": {
      "total": 131,
      "additions": 122,
      "deletions": 9
    },
    "files": [
      {
        "sha": "aa1d69d71324d9ff182279755e66cdefc16658af",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc67e67fd1f53c302bf83379b66b2e257e92728b/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc67e67fd1f53c302bf83379b66b2e257e92728b/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=dc67e67fd1f53c302bf83379b66b2e257e92728b",
        "patch": "@@ -24,6 +24,7 @@\n #include <version.h>\n \n #include <any>\n+#include <optional>\n \n #include <boost/algorithm/string.hpp>\n \n@@ -373,7 +374,7 @@ static bool rest_mempool_info(const std::any& context, HTTPRequest* req, const s\n \n     switch (rf) {\n     case RetFormat::JSON: {\n-        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool);\n+        UniValue mempoolInfoObject = MempoolInfoToJSON(*mempool, std::nullopt);\n \n         std::string strJSON = mempoolInfoObject.write() + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"application/json\");"
      },
      {
        "sha": "54ca8db3a0796ed4b8fce4721c28adb26f03e4c0",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 115,
        "deletions": 7,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc67e67fd1f53c302bf83379b66b2e257e92728b/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc67e67fd1f53c302bf83379b66b2e257e92728b/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=dc67e67fd1f53c302bf83379b66b2e257e92728b",
        "patch": "@@ -51,6 +51,7 @@\n #include <condition_variable>\n #include <memory>\n #include <mutex>\n+#include <optional>\n \n struct CUpdatedBlock\n {\n@@ -1640,7 +1641,7 @@ static RPCHelpMan getchaintips()\n     };\n }\n \n-UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n+UniValue MempoolInfoToJSON(const CTxMemPool& pool, const std::optional<MempoolHistogramFeeRates> feeLimits)\n {\n     // Make sure this call is atomic in the pool.\n     LOCK(pool.cs);\n@@ -1655,34 +1656,141 @@ UniValue MempoolInfoToJSON(const CTxMemPool& pool)\n     ret.pushKV(\"mempoolminfee\", ValueFromAmount(std::max(pool.GetMinFee(maxmempool), ::minRelayTxFee).GetFeePerK()));\n     ret.pushKV(\"minrelaytxfee\", ValueFromAmount(::minRelayTxFee.GetFeePerK()));\n     ret.pushKV(\"unbroadcastcount\", uint64_t{pool.GetUnbroadcastTxs().size()});\n+\n+    if (feeLimits) {\n+        const MempoolHistogramFeeRates& limits{feeLimits.value()};\n+\n+        /* Keep histogram per...\n+         * ... cumulated tx sizes\n+         * ... txns (count)\n+         * ... cumulated fees */\n+        std::vector<uint64_t> sizes(limits.size(), 0);\n+        std::vector<uint64_t> count(limits.size(), 0);\n+        std::vector<CAmount> fees(limits.size(), 0);\n+\n+        for (const CTxMemPoolEntry& e : pool.mapTx) {\n+            const CAmount fee{e.GetFee()}, afees{e.GetModFeesWithAncestors()}, dfees{e.GetModFeesWithDescendants()};\n+            const uint32_t size{(uint32_t)e.GetTxSize()}, asize{(uint32_t)e.GetSizeWithAncestors()}, dsize{(uint32_t)e.GetSizeWithDescendants()};\n+\n+            const CAmount fpb{CFeeRate{fee, size}.GetFee(1)};     // Fee rate per byte\n+            const CAmount afpb{CFeeRate{afees, asize}.GetFee(1)}; // Fee rate per byte including ancestors\n+            const CAmount dfpb{CFeeRate{dfees, dsize}.GetFee(1)}; // Fee rate per byte including descendants\n+\n+            // Fee rate per byte including ancestors & descendants\n+            const CAmount tfpb{CFeeRate{afees + dfees - fee, asize + dsize - size}.GetFee(1)};\n+            const CAmount fee_rate_per_byte{std::max(std::min(dfpb, tfpb), std::min(fpb, afpb))};\n+\n+            // Distribute fee rates into fee limits\n+            for (size_t i = limits.size(); i-- > 0; ) {\n+                if (fee_rate_per_byte >= limits[i]) {\n+                    sizes[i] += size;\n+                    ++count[i];\n+                    fees[i] += fee;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        // Track total amount of available fees in fee rate groups\n+        CAmount total_fees = 0;\n+        UniValue groups(UniValue::VOBJ);\n+        for (size_t i = 0; i < limits.size(); ++i) {\n+            UniValue info_sub(UniValue::VOBJ);\n+            info_sub.pushKV(\"size\", sizes.at(i));\n+            info_sub.pushKV(\"count\", count.at(i));\n+            info_sub.pushKV(\"fees\", fees.at(i));\n+            info_sub.pushKV(\"from\", limits.at(i));\n+\n+            if (i == limits.size() - 1) {\n+                info_sub.pushKV(\"to\", NullUniValue);\n+            } else {\n+                info_sub.pushKV(\"to\", limits[i + 1] - 1);\n+            }\n+\n+            total_fees += fees.at(i);\n+            groups.pushKV(ToString(limits.at(i)), info_sub);\n+        }\n+\n+        UniValue info(UniValue::VOBJ);\n+        info.pushKV(\"fee_rate_groups\", groups);\n+        info.pushKV(\"total_fees\", total_fees);\n+        ret.pushKV(\"fee_histogram\", info);\n+    }\n+\n     return ret;\n }\n \n static RPCHelpMan getmempoolinfo()\n {\n     return RPCHelpMan{\"getmempoolinfo\",\n                 \"\\nReturns details on the active state of the TX memory pool.\\n\",\n-                {},\n+                {\n+                    {\"fee_histogram\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED_NAMED_ARG, \"Fee statistics grouped by fee rate ranges\",\n+                        {\n+                            {\"fee_rate\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"Fee rate (in \" + CURRENCY_ATOM + \"/vB) to group the fees by\"},\n+                        },\n+                    },\n+                },\n                 RPCResult{\n                     RPCResult::Type::OBJ, \"\", \"\",\n                     {\n                         {RPCResult::Type::BOOL, \"loaded\", \"True if the mempool is fully loaded\"},\n                         {RPCResult::Type::NUM, \"size\", \"Current tx count\"},\n                         {RPCResult::Type::NUM, \"bytes\", \"Sum of all virtual transaction sizes as defined in BIP 141. Differs from actual serialized size because witness data is discounted\"},\n                         {RPCResult::Type::NUM, \"usage\", \"Total memory usage for the mempool\"},\n-                        {RPCResult::Type::STR_AMOUNT, \"total_fee\", \"Total fees for the mempool in \" + CURRENCY_UNIT + \", ignoring modified fees through prioritizetransaction\"},\n+                        {RPCResult::Type::STR_AMOUNT, \"total_fee\", \"Total fees for the mempool in \" + CURRENCY_UNIT + \"/kvB, ignoring modified fees through prioritizetransaction\"},\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kvB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},\n-                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"}\n+                        {RPCResult::Type::NUM, \"unbroadcastcount\", \"Current number of transactions that haven't passed initial broadcast yet\"},\n+                        {RPCResult::Type::OBJ, \"fee_histogram\", \"\",\n+                            {\n+                                {RPCResult::Type::OBJ_DYN, \"fee_rate_groups\", \"\",\n+                                {\n+                                    {RPCResult::Type::OBJ, \"<fee_rate_group>\", \"Fee rate group named by its lower bound (in \" + CURRENCY_ATOM + \"/vB), identical to the \\\"from\\\" field below\",\n+                                    {\n+                                        {RPCResult::Type::NUM, \"size\", \"Cumulative size of all transactions in the fee rate group\"},\n+                                        {RPCResult::Type::NUM, \"count\", \"Number of transactions in the fee rate group\"},\n+                                        {RPCResult::Type::NUM, \"fees\", \"Cumulative fees of all transactions in the fee rate group (in \" + CURRENCY_ATOM + \"/vB)\"},\n+                                        {RPCResult::Type::NUM, \"from\", \"Group contains transactions with fee rates equal or greater than this value (in \" + CURRENCY_ATOM + \"/vB)\"},\n+                                        {RPCResult::Type::NUM, \"to\", \"Group contains transactions with fee rates equal or less than this value (in \" + CURRENCY_ATOM + \"/vB)\"},\n+                                    }}}},\n+                                {RPCResult::Type::NUM, \"total_fees\", \"Total available fees in mempool (in \" + CURRENCY_ATOM + \"/vB)\"},\n+                            }},\n                     }},\n                 RPCExamples{\n-                    HelpExampleCli(\"getmempoolinfo\", \"\")\n-            + HelpExampleRpc(\"getmempoolinfo\", \"\")\n+                    HelpExampleCli(\"getmempoolinfo\", \"\") +\n+                    HelpExampleCli(\"getmempoolinfo\", R\"(\"[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100, 120, 140, 170, 200]\")\") +\n+                    HelpExampleRpc(\"getmempoolinfo\", \"\") +\n+                    HelpExampleRpc(\"getmempoolinfo\", R\"([0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 17, 20, 25, 30, 40, 50, 60, 70, 80, 100, 120, 140, 170, 200])\")\n                 },\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n {\n-    return MempoolInfoToJSON(EnsureAnyMemPool(request.context));\n+    MempoolHistogramFeeRates feelimits;\n+    std::optional<MempoolHistogramFeeRates> feelimits_opt = std::nullopt;\n+\n+    if (!request.params[0].isNull()) {\n+        const UniValue feelimits_univalue = request.params[0].get_array();\n+\n+        if (feelimits_univalue.size() == 0 || feelimits_univalue.size() > 30) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid number of parameters\");\n+        }\n+\n+        for (size_t i = 0; i < feelimits_univalue.size(); ++i) {\n+            int64_t value = feelimits_univalue[i].get_int64();\n+\n+            if (value < 0) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Non-negative values are expected\");\n+            } else if (i > 0 && feelimits.back() >= value) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Strictly increasing values are expected\");\n+            }\n+\n+            feelimits.push_back(value);\n+        }\n+        feelimits_opt = std::optional<MempoolHistogramFeeRates>(feelimits);\n+    }\n+\n+    return MempoolInfoToJSON(EnsureAnyMemPool(request.context), feelimits_opt);\n },\n     };\n }"
      },
      {
        "sha": "36ef9a6060eca76ec97c1aa32ff3054d967e4b9f",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc67e67fd1f53c302bf83379b66b2e257e92728b/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc67e67fd1f53c302bf83379b66b2e257e92728b/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=dc67e67fd1f53c302bf83379b66b2e257e92728b",
        "patch": "@@ -11,6 +11,7 @@\n #include <sync.h>\n \n #include <any>\n+#include <optional>\n #include <stdint.h>\n #include <vector>\n \n@@ -41,8 +42,10 @@ void RPCNotifyBlockChange(const CBlockIndex*);\n /** Block description to JSON */\n UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIndex* blockindex, bool txDetails = false) LOCKS_EXCLUDED(cs_main);\n \n+typedef std::vector<CAmount> MempoolHistogramFeeRates;\n+\n /** Mempool information to JSON */\n-UniValue MempoolInfoToJSON(const CTxMemPool& pool);\n+UniValue MempoolInfoToJSON(const CTxMemPool& pool, const std::optional<MempoolHistogramFeeRates> feeLimits);\n \n /** Mempool to JSON */\n UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose = false, bool include_mempool_sequence = false);"
      },
      {
        "sha": "d410dedda7ec88c6da60d434e1b7cdee75d6de04",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc67e67fd1f53c302bf83379b66b2e257e92728b/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc67e67fd1f53c302bf83379b66b2e257e92728b/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=dc67e67fd1f53c302bf83379b66b2e257e92728b",
        "patch": "@@ -149,6 +149,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"getblockstats\", 1, \"stats\" },\n     { \"pruneblockchain\", 0, \"height\" },\n     { \"keypoolrefill\", 0, \"newsize\" },\n+    { \"getmempoolinfo\", 0, \"fee_histogram\" },\n     { \"getrawmempool\", 0, \"verbose\" },\n     { \"getrawmempool\", 1, \"mempool_sequence\" },\n     { \"estimatesmartfee\", 0, \"conf_target\" },"
      }
    ]
  },
  {
    "sha": "103e880ae75f58b42fc92a733433eb6ed866c17c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDNlODgwYWU3NWY1OGI0MmZjOTJhNzMzNDMzZWI2ZWQ4NjZjMTdj",
    "commit": {
      "author": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2021-03-06T21:54:05Z"
      },
      "committer": {
        "name": "Prayank",
        "email": "prayank@tutanota.de",
        "date": "2021-09-05T01:24:32Z"
      },
      "message": "test: Add mempool fee histogram test coverage\n\nOriginal commit: https://github.com/bitcoin/bitcoin/commit/0b6ba66238c377116bc6c21e19cffbf1b6dfc788\n\nCo-authored-by: Jo\u00e3o Barbosa <joao.paulo.barbosa@gmail.com>\nCo-authored-by: Jon Atack <jon@atack.com>",
      "tree": {
        "sha": "01d84b2318a0adfa8c6a148f5938c52bca1319de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01d84b2318a0adfa8c6a148f5938c52bca1319de"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/103e880ae75f58b42fc92a733433eb6ed866c17c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/103e880ae75f58b42fc92a733433eb6ed866c17c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/103e880ae75f58b42fc92a733433eb6ed866c17c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/103e880ae75f58b42fc92a733433eb6ed866c17c/comments",
    "author": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc67e67fd1f53c302bf83379b66b2e257e92728b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc67e67fd1f53c302bf83379b66b2e257e92728b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc67e67fd1f53c302bf83379b66b2e257e92728b"
      }
    ],
    "stats": {
      "total": 123,
      "additions": 123,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0a2a00cb702f5f770d18cb15de2959e2f2031358",
        "filename": "test/functional/mempool_fee_histogram.py",
        "status": "added",
        "additions": 117,
        "deletions": 0,
        "changes": 117,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/103e880ae75f58b42fc92a733433eb6ed866c17c/test/functional/mempool_fee_histogram.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/103e880ae75f58b42fc92a733433eb6ed866c17c/test/functional/mempool_fee_histogram.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_fee_histogram.py?ref=103e880ae75f58b42fc92a733433eb6ed866c17c",
        "patch": "@@ -0,0 +1,117 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool fee histogram.\"\"\"\n+\n+from decimal import Decimal\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_greater_than_or_equal,\n+    assert_no_key,\n+)\n+\n+class MempoolFeeHistogramTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        node = self.nodes[0]\n+        node.generate(102)\n+\n+        # We have two utxos and we do this:\n+        #\n+        # coinbase-tx-101 <- tx1 (5 sat/vB) <- tx2 (14 sat/vB) <----\\\n+        # coinbase-tx-102 <--------------------------------------- tx3 (6 sat/vB)\n+\n+        self.log.info(\"Test getmempoolinfo does not return fee histogram by default\")\n+        assert_no_key('fee_histogram', node.getmempoolinfo())\n+\n+        self.log.info(\"Test getmempoolinfo returns empty fee histogram when mempool is empty\")\n+        info = node.getmempoolinfo([1, 2, 3])\n+        (non_empty_groups, empty_groups, total_fees) = self.histogram_stats(info['fee_histogram'])\n+        assert_equal(0, non_empty_groups)\n+        assert_equal(3, empty_groups)\n+        assert_equal(0, total_fees)\n+\n+        self.log.info(\"Test that we have two spendable utxos and lock the second one\")\n+        utxos = node.listunspent()\n+        assert_equal(2, len(utxos))\n+        node.lockunspent(False, [{\"txid\": utxos[1][\"txid\"], \"vout\": utxos[1][\"vout\"]}])\n+\n+        self.log.info(\"Send tx1 transaction with 5 sat/vB fee rate\")\n+        node.sendtoaddress(address=node.getnewaddress(), amount=Decimal(\"50.0\"), fee_rate=5, subtractfeefromamount=True)\n+\n+        self.log.info(\"Test fee rate histogram when mempool contains 1 transaction (tx1: 5 sat/vB)\")\n+        info = node.getmempoolinfo([1, 3, 5, 10])\n+        (non_empty_groups, empty_groups, total_fees) = self.histogram_stats(info['fee_histogram'])\n+        assert_equal(1, non_empty_groups)\n+        assert_equal(3, empty_groups)\n+        assert_equal(1, info['fee_histogram']['fee_rate_groups']['5']['count'])\n+        assert_equal(total_fees, info['fee_histogram']['total_fees'])\n+\n+        self.log.info(\"Send tx2 transaction with 14 sat/vB fee rate (spends tx1 utxo)\")\n+        node.sendtoaddress(address=node.getnewaddress(), amount=Decimal(\"25.0\"), fee_rate=14)\n+\n+        self.log.info(\"Test fee rate histogram when mempool contains 2 transactions (tx1: 5 sat/vB, tx2: 14 sat/vB)\")\n+        info = node.getmempoolinfo([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])\n+\n+        # Both tx1 and tx2 are supposed to be reported in 8 sat/vB fee rate group\n+        (non_empty_groups, empty_groups, total_fees) = self.histogram_stats(info['fee_histogram'])\n+        assert_equal(1, non_empty_groups)\n+        assert_equal(14, empty_groups)\n+        assert_equal(2, info['fee_histogram']['fee_rate_groups']['8']['count'])\n+        assert_equal(total_fees, info['fee_histogram']['total_fees'])\n+\n+        # Unlock the second UTXO which we locked\n+        node.lockunspent(True, [{\"txid\": utxos[1][\"txid\"], \"vout\": utxos[1][\"vout\"]}])\n+\n+        self.log.info(\"Send tx3 transaction with 6 sat/vB fee rate (spends all available utxos)\")\n+        node.sendtoaddress(address=node.getnewaddress(), amount=Decimal(\"99.9\"), fee_rate=6)\n+\n+        self.log.info(\"Test fee rate histogram when mempool contains 3 transactions (tx1: 5 sat/vB, tx2: 14 sat/vB, tx3: 6 sat/vB)\")\n+        info = node.getmempoolinfo([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])\n+\n+        # Verify that each of 6, 7 and 8 sat/vB fee rate groups contain one transaction\n+        (non_empty_groups, empty_groups, total_fees) = self.histogram_stats(info['fee_histogram'])\n+        assert_equal(3, non_empty_groups)\n+        assert_equal(12, empty_groups)\n+        assert_equal(1, info['fee_histogram']['fee_rate_groups']['6']['count'])\n+        assert_equal(1, info['fee_histogram']['fee_rate_groups']['7']['count'])\n+        assert_equal(1, info['fee_histogram']['fee_rate_groups']['8']['count'])\n+        assert_equal(total_fees, info['fee_histogram']['total_fees'])\n+\n+\n+    def histogram_stats(self, histogram):\n+        total_fees = 0\n+        empty_count = 0\n+        non_empty_count = 0\n+\n+        for key, bin in histogram['fee_rate_groups'].items():\n+            assert_equal(int(key), bin['from'])\n+            if bin['fees'] > 0:\n+                assert_greater_than(bin['count'], 0)\n+            else:\n+                assert_equal(bin['count'], 0)\n+            assert_greater_than_or_equal(bin['fees'], 0)\n+            assert_greater_than_or_equal(bin['size'], 0)\n+            if bin['to'] is not None:\n+                assert_greater_than_or_equal(bin['to'], bin['from'])\n+            total_fees += bin['fees']\n+\n+            if bin['count'] == 0:\n+                empty_count += 1\n+            else:\n+                non_empty_count += 1\n+\n+        return (non_empty_count, empty_count, total_fees)\n+\n+if __name__ == '__main__':\n+    MempoolFeeHistogramTest().main()"
      },
      {
        "sha": "10cd05a272df834bcf739a3fadc23e3f69be88d0",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/103e880ae75f58b42fc92a733433eb6ed866c17c/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/103e880ae75f58b42fc92a733433eb6ed866c17c/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=103e880ae75f58b42fc92a733433eb6ed866c17c",
        "patch": "@@ -54,6 +54,11 @@ def assert_greater_than(thing1, thing2):\n         raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))\n \n \n+def assert_no_key(key, dictionary):\n+    if key in dictionary:\n+        raise AssertionError(f\"Key '{key}' not expected to be found in {dictionary}\")\n+\n+\n def assert_greater_than_or_equal(thing1, thing2):\n     if thing1 < thing2:\n         raise AssertionError(\"%s < %s\" % (str(thing1), str(thing2)))"
      },
      {
        "sha": "60e9aad71090d2ee6a8ea77996e33d2bbdf28e91",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/103e880ae75f58b42fc92a733433eb6ed866c17c/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/103e880ae75f58b42fc92a733433eb6ed866c17c/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=103e880ae75f58b42fc92a733433eb6ed866c17c",
        "patch": "@@ -235,6 +235,7 @@\n     'feature_nulldummy.py --descriptors',\n     'mempool_accept.py',\n     'mempool_expiry.py',\n+    'mempool_fee_histogram.py',\n     'wallet_import_rescan.py --legacy-wallet',\n     'wallet_import_with_label.py --legacy-wallet',\n     'wallet_importdescriptors.py --descriptors',"
      }
    ]
  },
  {
    "sha": "797eac624a18d58123c163bced4bad150a1ebbc0",
    "node_id": "C_kwDOABII59oAKDc5N2VhYzYyNGExOGQ1ODEyM2MxNjNiY2VkNGJhZDE1MGExZWJiYzA",
    "commit": {
      "author": {
        "name": "Prayank",
        "email": "prayank@tutanota.de",
        "date": "2021-09-05T00:32:57Z"
      },
      "committer": {
        "name": "Prayank",
        "email": "prayank@tutanota.de",
        "date": "2021-11-03T19:22:12Z"
      },
      "message": "add fee_rate_distribution in getinfo\n\n+ 4 fee rate groups: 1-9,10-99,100-199,Above 200\n+ Use dynamic increment based on size\n+ MAGENTA color for mempool section, CYAN for wallet\n+ Do not show mempool section and fee rate group if size is zero\n+ Add doxygen documentation for `GetFeerateBar`\n\nCo-authored-by: Klement Tan <klementtan@gmail.com>",
      "tree": {
        "sha": "746fa449cd63603bcdb7cd4530eea5d7dba322a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/746fa449cd63603bcdb7cd4530eea5d7dba322a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/797eac624a18d58123c163bced4bad150a1ebbc0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/797eac624a18d58123c163bced4bad150a1ebbc0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/797eac624a18d58123c163bced4bad150a1ebbc0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/797eac624a18d58123c163bced4bad150a1ebbc0/comments",
    "author": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "103e880ae75f58b42fc92a733433eb6ed866c17c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/103e880ae75f58b42fc92a733433eb6ed866c17c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/103e880ae75f58b42fc92a733433eb6ed866c17c"
      }
    ],
    "stats": {
      "total": 116,
      "additions": 113,
      "deletions": 3
    },
    "files": [
      {
        "sha": "0d6859160bfd11fcc9cfc260726361ab8d7429d3",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 113,
        "deletions": 3,
        "changes": 116,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/797eac624a18d58123c163bced4bad150a1ebbc0/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/797eac624a18d58123c163bced4bad150a1ebbc0/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=797eac624a18d58123c163bced4bad150a1ebbc0",
        "patch": "@@ -303,6 +303,7 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     const int ID_BLOCKCHAININFO = 1;\n     const int ID_WALLETINFO = 2;\n     const int ID_BALANCES = 3;\n+    const int ID_MEMPOOLINFO = 4;\n \n     /** Create a simulated `getinfo` request. */\n     UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n@@ -315,6 +316,8 @@ class GetinfoRequestHandler: public BaseRequestHandler\n         result.push_back(JSONRPCRequestObj(\"getblockchaininfo\", NullUniValue, ID_BLOCKCHAININFO));\n         result.push_back(JSONRPCRequestObj(\"getwalletinfo\", NullUniValue, ID_WALLETINFO));\n         result.push_back(JSONRPCRequestObj(\"getbalances\", NullUniValue, ID_BALANCES));\n+        UniValue params{RPCConvertValues(\"getmempoolinfo\", {\"[1,10,100,200,1000]\"})};\n+        result.push_back(JSONRPCRequestObj(\"getmempoolinfo\", params, ID_MEMPOOLINFO));\n         return result;\n     }\n \n@@ -359,6 +362,13 @@ class GetinfoRequestHandler: public BaseRequestHandler\n             result.pushKV(\"balance\", batch[ID_BALANCES][\"result\"][\"mine\"][\"trusted\"]);\n         }\n         result.pushKV(\"relayfee\", batch[ID_NETWORKINFO][\"result\"][\"relayfee\"]);\n+\n+        result.pushKV(\"feerate_dist1\", batch[ID_MEMPOOLINFO][\"result\"][\"fee_histogram\"][\"fee_rate_groups\"][\"1\"][\"size\"]);\n+        result.pushKV(\"feerate_dist2\", batch[ID_MEMPOOLINFO][\"result\"][\"fee_histogram\"][\"fee_rate_groups\"][\"10\"][\"size\"]);\n+        result.pushKV(\"feerate_dist3\", batch[ID_MEMPOOLINFO][\"result\"][\"fee_histogram\"][\"fee_rate_groups\"][\"100\"][\"size\"]);\n+        result.pushKV(\"feerate_dist4\", batch[ID_MEMPOOLINFO][\"result\"][\"fee_histogram\"][\"fee_rate_groups\"][\"200\"][\"size\"]);\n+        result.pushKV(\"mempool_bytes\", batch[ID_MEMPOOLINFO][\"result\"][\"bytes\"]);\n+\n         result.pushKV(\"warnings\", batch[ID_NETWORKINFO][\"result\"][\"warnings\"]);\n         return JSONRPCReplyObj(result, NullUniValue, 1);\n     }\n@@ -928,6 +938,46 @@ static void GetProgressBar(double progress, std::string& progress_bar)\n     }\n }\n \n+/**\n+ * GetFeerateBar constructs fee rate distribution bars using dynamic increment based on size.\n+ *\n+ * @param[in]  size      Size of fee rate group in bytes.\n+ * @param[out] size_bar  String representation of the distribution bar.\n+ * @param[in]  inc_size  Minimum size of fee rate groups in bytes.\n+ * @param[in]  max_size  Maximum size of fee rate groups in bytes.\n+ */\n+static void GetFeerateBar(double size, std::string& size_bar, double inc_size, double max_size)\n+{\n+    if (size == 0) return;\n+\n+    static double INCREMENT{inc_size};\n+    static const std::string BAR{\"\\u2591\"};\n+\n+    if (max_size < 10000){\n+        for (int i = 0; i < size / INCREMENT; ++i) {\n+            size_bar += BAR;\n+        }\n+    } else if (max_size > 10000 && max_size < 100000){\n+        for (int i = 0; i < size / (INCREMENT*10); ++i) {\n+            size_bar += BAR;\n+        }\n+    } else if (max_size > 100000 && max_size < 1000000){\n+    \tfor (int i = 0; i < size / (INCREMENT*100); ++i) {\n+            size_bar += BAR;\n+        }\n+    } else if (max_size > 1000000 && max_size < 10000000){\n+    \tfor (int i = 0; i < size / (INCREMENT*1000); ++i) {\n+            size_bar += BAR;\n+        }\n+    } else if (max_size > 10000000 && max_size < 100000000){\n+    \tfor (int i = 0; i < size / (INCREMENT*10000); ++i) {\n+            size_bar += BAR;\n+        }\n+    }\n+}\n+\n+\n+\n /**\n  * ParseGetInfoResult takes in -getinfo result in UniValue object and parses it\n  * into a user friendly UniValue string to be printed on the console.\n@@ -937,7 +987,7 @@ static void ParseGetInfoResult(UniValue& result)\n {\n     if (!find_value(result, \"error\").isNull()) return;\n \n-    std::string RESET, GREEN, BLUE, YELLOW, MAGENTA, CYAN;\n+    std::string RESET, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN;\n     bool should_colorize = false;\n \n #ifndef WIN32\n@@ -960,11 +1010,13 @@ static void ParseGetInfoResult(UniValue& result)\n \n     if (should_colorize) {\n         RESET = \"\\x1B[0m\";\n+        RED = \"\\x1B[31m\";\n         GREEN = \"\\x1B[32m\";\n-        BLUE = \"\\x1B[34m\";\n         YELLOW = \"\\x1B[33m\";\n+        BLUE = \"\\x1B[34m\";\n         MAGENTA = \"\\x1B[35m\";\n         CYAN = \"\\x1B[36m\";\n+\n     }\n \n     std::string result_string = strprintf(\"%sChain: %s%s\\n\", BLUE, result[\"chain\"].getValStr(), RESET);\n@@ -998,7 +1050,7 @@ static void ParseGetInfoResult(UniValue& result)\n \n     if (!result[\"has_wallet\"].isNull()) {\n         const std::string walletname = result[\"walletname\"].getValStr();\n-        result_string += strprintf(\"%sWallet: %s%s\\n\", MAGENTA, walletname.empty() ? \"\\\"\\\"\" : walletname, RESET);\n+        result_string += strprintf(\"%sWallet: %s%s\\n\", CYAN, walletname.empty() ? \"\\\"\\\"\" : walletname, RESET);\n \n         result_string += strprintf(\"Keypool size: %s\\n\", result[\"keypoolsize\"].getValStr());\n         if (!result[\"unlocked_until\"].isNull()) {\n@@ -1028,6 +1080,64 @@ static void ParseGetInfoResult(UniValue& result)\n         result_string += \"\\n\";\n     }\n \n+    const double mempool_bytes{result[\"mempool_bytes\"].get_real()};\n+\n+    if (mempool_bytes >0){\n+\n+    \tresult_string += strprintf(\"%sMempool:%s\\n\", MAGENTA, RESET);\n+\n+    \tstd::string fee_rate;\n+    \tstd::string size_bar;\n+    \tdouble fee_size = 0;\n+\n+    \tdouble size1 = result[\"feerate_dist1\"].get_real();\n+    \tdouble size2 = result[\"feerate_dist2\"].get_real();\n+    \tdouble size3 = result[\"feerate_dist3\"].get_real();\n+    \tdouble size4 = result[\"feerate_dist4\"].get_real();\n+\n+    \t//Removing zero from numbers used in std::min to avoid division by zero in GetFeerateBar()\n+    \tauto const ignore_zero = [](auto const& a, auto const& b) -> bool {\n+        \tif(0 == a || 0 == b)\n+        \t{\n+            \treturn false;\n+        \t}\n+        \treturn a < b;\n+    \t};\n+\n+    \tdouble max_size = std::max({size1, size2, size3, size4});\n+    \tdouble inc_size = std::min({size1, size2, size3, size4}, ignore_zero);\n+\n+    \tfor (int i = 1; i < 5; ++i) {\n+\n+        \tswitch (i)\n+    \t\t{\n+    \t\tcase 1: fee_rate = \"1-9       |\";\n+    \t\t        fee_size = size1;\n+        \t\tbreak;\n+    \t\tcase 2: fee_rate = \"10-99     |\";\n+    \t\t        fee_size = size2;\n+        \t\tbreak;\n+    \t\tcase 3: fee_rate = \"100-199   |\";\n+    \t\t        fee_size = size3;\n+        \t\tbreak;\n+        \tcase 4: fee_rate = \"Above 200 |\";\n+        \t        fee_size = size4;\n+        \t\tbreak;\n+    \t\t}\n+\n+    \t\tGetFeerateBar(fee_size, size_bar, inc_size, max_size);\n+    \t\tsize_bar += \" \";\n+\n+    \t\tif (fee_size > 0){\n+        \tresult_string += strprintf(\"%s %s %d\\n\", fee_rate, size_bar, fee_size);\n+        \tsize_bar = \"\";\n+     \t }\n+    \t}\n+\n+    result_string += strprintf(\"sat/vB\\n\\n\");\n+\n+    }\n+\n     result_string += strprintf(\"%sWarnings:%s %s\", YELLOW, RESET, result[\"warnings\"].getValStr());\n     result.setStr(result_string);\n }"
      }
    ]
  },
  {
    "sha": "fc6a7f4a9ed7fe6c62ccc8c796e6ef07cedd4f47",
    "node_id": "C_kwDOABII59oAKGZjNmE3ZjRhOWVkN2ZlNmM2MmNjYzhjNzk2ZTZlZjA3Y2VkZDRmNDc",
    "commit": {
      "author": {
        "name": "Prayank",
        "email": "prayank@tutanota.de",
        "date": "2021-11-11T00:42:45Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-11-11T00:42:45Z"
      },
      "message": "Update src/bitcoin-cli.cpp\n\nCo-authored-by: kiminuo <58662979+kiminuo@users.noreply.github.com>",
      "tree": {
        "sha": "8978b91659f88d62b15a386716eca3924517f104",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8978b91659f88d62b15a386716eca3924517f104"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc6a7f4a9ed7fe6c62ccc8c796e6ef07cedd4f47",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhjGcGCRBK7hj4Ov3rIwAADwcIAH1yjSPNIlQWxiDmLWBiSSF4\n9PbfS8x9s4Nhlz+xiLJUG2pGnYAoS0AiGYCfVqH0Fnr4+XZOlifoq0DpFfTl540w\nFHHatGaLg/k7SYpEyYIusCwouAFe0jKnIVHO9pqSQjvx9YoKRN/k49MwQ9qGeOPv\nR8icmVn5zDeB76RPb2g06mQ3jOeEGPIq/Sn9dj10rMsfDYJcoC4/7jhKQmtg+NHa\n/eUklG7F7OuxJLe8hWkA03clnP8/QRYGZU6iZzPEGj4KCgS92rDh+7B3WwvuzVc+\n71Sr4YYjTlQpd8Z7IXIIcgDQJk/WJkkUpmOd8svkIbnh8kiAeRvcD1ScXoRX6O0=\n=9WSk\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 8978b91659f88d62b15a386716eca3924517f104\nparent 797eac624a18d58123c163bced4bad150a1ebbc0\nauthor Prayank <prayank@tutanota.de> 1636591365 +0530\ncommitter GitHub <noreply@github.com> 1636591365 +0530\n\nUpdate src/bitcoin-cli.cpp\n\nCo-authored-by: kiminuo <58662979+kiminuo@users.noreply.github.com>"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc6a7f4a9ed7fe6c62ccc8c796e6ef07cedd4f47",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc6a7f4a9ed7fe6c62ccc8c796e6ef07cedd4f47",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc6a7f4a9ed7fe6c62ccc8c796e6ef07cedd4f47/comments",
    "author": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "797eac624a18d58123c163bced4bad150a1ebbc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/797eac624a18d58123c163bced4bad150a1ebbc0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/797eac624a18d58123c163bced4bad150a1ebbc0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e62a15f1ed0b38abc72ea454d4272a465525284c",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc6a7f4a9ed7fe6c62ccc8c796e6ef07cedd4f47/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc6a7f4a9ed7fe6c62ccc8c796e6ef07cedd4f47/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=fc6a7f4a9ed7fe6c62ccc8c796e6ef07cedd4f47",
        "patch": "@@ -1082,7 +1082,7 @@ static void ParseGetInfoResult(UniValue& result)\n \n     const double mempool_bytes{result[\"mempool_bytes\"].get_real()};\n \n-    if (mempool_bytes >0){\n+    if (mempool_bytes > 0) {\n \n     \tresult_string += strprintf(\"%sMempool:%s\\n\", MAGENTA, RESET);\n "
      }
    ]
  },
  {
    "sha": "ace6e82342c5b6cc1175f2ab47e4e178cde1964b",
    "node_id": "C_kwDOABII59oAKGFjZTZlODIzNDJjNWI2Y2MxMTc1ZjJhYjQ3ZTRlMTc4Y2RlMTk2NGI",
    "commit": {
      "author": {
        "name": "Prayank",
        "email": "prayank@tutanota.de",
        "date": "2021-11-11T00:44:11Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-11-11T00:44:11Z"
      },
      "message": "Update src/bitcoin-cli.cpp\n\nCo-authored-by: kiminuo <58662979+kiminuo@users.noreply.github.com>",
      "tree": {
        "sha": "4af244d751d97ef6caada69546b2dbff870169e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4af244d751d97ef6caada69546b2dbff870169e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ace6e82342c5b6cc1175f2ab47e4e178cde1964b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhjGdbCRBK7hj4Ov3rIwAAvhoIAGNBIiTrOcrDu68kJcfyabon\nB0c6Tw2WXGqUS035SJbE5bxfS2ebdC1optbhsL1DZkGRoe01+a1DoEen8xNcOgaT\nfQgZHWT2cqEaZiDTc1S1efxmj0wTQH+P0lxXy/ZnSsgkLKwXOEfsSqYvezT1mAJv\nzjgrHunZ5WudXmjrMgJu7WbjIyTtcxPEZchR86r4yiiW3vwv6MZH0/koMDzlBYjh\ngCkECo79ka9mKgISqBxuG27pXOShAuDjYvjSMfpwejIEmaEBTCWquon1Q0KK//ja\nYLQ2iNNzzjaAfAc1pFrd0wWaLE4Be+GOucWEgtrE3S6BpX25G9lum94VYuOwbow=\n=hea1\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 4af244d751d97ef6caada69546b2dbff870169e1\nparent fc6a7f4a9ed7fe6c62ccc8c796e6ef07cedd4f47\nauthor Prayank <prayank@tutanota.de> 1636591451 +0530\ncommitter GitHub <noreply@github.com> 1636591451 +0530\n\nUpdate src/bitcoin-cli.cpp\n\nCo-authored-by: kiminuo <58662979+kiminuo@users.noreply.github.com>"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ace6e82342c5b6cc1175f2ab47e4e178cde1964b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ace6e82342c5b6cc1175f2ab47e4e178cde1964b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ace6e82342c5b6cc1175f2ab47e4e178cde1964b/comments",
    "author": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc6a7f4a9ed7fe6c62ccc8c796e6ef07cedd4f47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc6a7f4a9ed7fe6c62ccc8c796e6ef07cedd4f47",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc6a7f4a9ed7fe6c62ccc8c796e6ef07cedd4f47"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "258f44e16f4a8fed75b73f6cef994c5a3c48281c",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ace6e82342c5b6cc1175f2ab47e4e178cde1964b/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ace6e82342c5b6cc1175f2ab47e4e178cde1964b/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=ace6e82342c5b6cc1175f2ab47e4e178cde1964b",
        "patch": "@@ -1095,7 +1095,7 @@ static void ParseGetInfoResult(UniValue& result)\n     \tdouble size3 = result[\"feerate_dist3\"].get_real();\n     \tdouble size4 = result[\"feerate_dist4\"].get_real();\n \n-    \t//Removing zero from numbers used in std::min to avoid division by zero in GetFeerateBar()\n+    \t// Removing zero from numbers used in std::min to avoid division by zero in GetFeeRateBar()\n     \tauto const ignore_zero = [](auto const& a, auto const& b) -> bool {\n         \tif(0 == a || 0 == b)\n         \t{"
      }
    ]
  },
  {
    "sha": "cc0a07cdf8e2c6bee18ca5c56214584b1c618ee8",
    "node_id": "C_kwDOABII59oAKGNjMGEwN2NkZjhlMmM2YmVlMThjYTVjNTYyMTQ1ODRiMWM2MThlZTg",
    "commit": {
      "author": {
        "name": "Prayank",
        "email": "prayank@tutanota.de",
        "date": "2021-11-11T00:44:26Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-11-11T00:44:26Z"
      },
      "message": "Update src/bitcoin-cli.cpp\n\nCo-authored-by: kiminuo <58662979+kiminuo@users.noreply.github.com>",
      "tree": {
        "sha": "da357377e8cf363ce28a233ea3d796812f5ea96d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da357377e8cf363ce28a233ea3d796812f5ea96d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc0a07cdf8e2c6bee18ca5c56214584b1c618ee8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhjGdqCRBK7hj4Ov3rIwAALjYIAIeqU1DGGmzh7NnqayuDvpND\n5WBg9zG1ctM0JoaJMWYtHBhWnLmzNI96hgomk7sdbaTDMo8b4yeKBz/Zr0Kii61A\nRnagjw/Ykf1+yf1ZDNI+bvs35013/eLbxQHCQfwqUHgA/7UeRTfAq73EH2P+f8Lu\nNesd5VMOfYVvSMZVd5oa6gIr6bsoOST+YX+yJ3WgcAgcrbwOuBT6GevMG8zfhEGC\nhE294WJDquLLgDiNEXrI0vkEqgVWG31hKgj48lHWgqlql6Ma10t9F7zOPWYydJJM\nDlzJH5aVWgx0/wBZ3mcfqoYIkCzTr/0Wp0Dem5WBK0yr4QJ91OKp+4jXvbIW4Ik=\n=CWSt\n-----END PGP SIGNATURE-----\n",
        "payload": "tree da357377e8cf363ce28a233ea3d796812f5ea96d\nparent ace6e82342c5b6cc1175f2ab47e4e178cde1964b\nauthor Prayank <prayank@tutanota.de> 1636591466 +0530\ncommitter GitHub <noreply@github.com> 1636591466 +0530\n\nUpdate src/bitcoin-cli.cpp\n\nCo-authored-by: kiminuo <58662979+kiminuo@users.noreply.github.com>"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc0a07cdf8e2c6bee18ca5c56214584b1c618ee8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cc0a07cdf8e2c6bee18ca5c56214584b1c618ee8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc0a07cdf8e2c6bee18ca5c56214584b1c618ee8/comments",
    "author": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ace6e82342c5b6cc1175f2ab47e4e178cde1964b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ace6e82342c5b6cc1175f2ab47e4e178cde1964b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ace6e82342c5b6cc1175f2ab47e4e178cde1964b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a70d35cb80eb6c16a5e25c53743029be310b144b",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc0a07cdf8e2c6bee18ca5c56214584b1c618ee8/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc0a07cdf8e2c6bee18ca5c56214584b1c618ee8/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=cc0a07cdf8e2c6bee18ca5c56214584b1c618ee8",
        "patch": "@@ -1128,7 +1128,7 @@ static void ParseGetInfoResult(UniValue& result)\n     \t\tGetFeerateBar(fee_size, size_bar, inc_size, max_size);\n     \t\tsize_bar += \" \";\n \n-    \t\tif (fee_size > 0){\n+    \t\tif (fee_size > 0) {\n         \tresult_string += strprintf(\"%s %s %d\\n\", fee_rate, size_bar, fee_size);\n         \tsize_bar = \"\";\n      \t }"
      }
    ]
  },
  {
    "sha": "de301efcfad05a966f3c39d2afca3459d95c19d9",
    "node_id": "C_kwDOABII59oAKGRlMzAxZWZjZmFkMDVhOTY2ZjNjMzlkMmFmY2EzNDU5ZDk1YzE5ZDk",
    "commit": {
      "author": {
        "name": "Prayank",
        "email": "prayank@tutanota.de",
        "date": "2021-11-11T00:52:59Z"
      },
      "committer": {
        "name": "Prayank",
        "email": "prayank@tutanota.de",
        "date": "2021-11-11T00:52:59Z"
      },
      "message": "reorder params in comments",
      "tree": {
        "sha": "7684daebc297403fff49a7b060dd78205a59c641",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7684daebc297403fff49a7b060dd78205a59c641"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de301efcfad05a966f3c39d2afca3459d95c19d9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de301efcfad05a966f3c39d2afca3459d95c19d9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de301efcfad05a966f3c39d2afca3459d95c19d9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de301efcfad05a966f3c39d2afca3459d95c19d9/comments",
    "author": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cc0a07cdf8e2c6bee18ca5c56214584b1c618ee8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc0a07cdf8e2c6bee18ca5c56214584b1c618ee8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cc0a07cdf8e2c6bee18ca5c56214584b1c618ee8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d1fb0592628c39f532e8cfa8ad0f6e46e4523ca4",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de301efcfad05a966f3c39d2afca3459d95c19d9/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de301efcfad05a966f3c39d2afca3459d95c19d9/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=de301efcfad05a966f3c39d2afca3459d95c19d9",
        "patch": "@@ -942,9 +942,9 @@ static void GetProgressBar(double progress, std::string& progress_bar)\n  * GetFeerateBar constructs fee rate distribution bars using dynamic increment based on size.\n  *\n  * @param[in]  size      Size of fee rate group in bytes.\n- * @param[out] size_bar  String representation of the distribution bar.\n  * @param[in]  inc_size  Minimum size of fee rate groups in bytes.\n  * @param[in]  max_size  Maximum size of fee rate groups in bytes.\n+ * @param[out] size_bar  String representation of the distribution bar.\n  */\n static void GetFeerateBar(double size, std::string& size_bar, double inc_size, double max_size)\n {"
      }
    ]
  },
  {
    "sha": "338bfbf83db82e2996a3305c330c7f2c3a912879",
    "node_id": "C_kwDOABII59oAKDMzOGJmYmY4M2RiODJlMjk5NmEzMzA1YzMzMGM3ZjJjM2E5MTI4Nzk",
    "commit": {
      "author": {
        "name": "Prayank",
        "email": "prayank@tutanota.de",
        "date": "2021-11-11T00:59:49Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-11-11T00:59:49Z"
      },
      "message": "Update src/bitcoin-cli.cpp\n\nCo-authored-by: kiminuo <58662979+kiminuo@users.noreply.github.com>",
      "tree": {
        "sha": "9d7f6dcd0076ff1c027d7ecb60f8f68ca9eecdbb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d7f6dcd0076ff1c027d7ecb60f8f68ca9eecdbb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/338bfbf83db82e2996a3305c330c7f2c3a912879",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhjGsFCRBK7hj4Ov3rIwAAfrQIADsW2f2MVykksLgdpKzbYwLw\nqlR5Qzpfaav1tETCo+pbyUj0juktlFc7q5x0kUGHFb0AByhI21LL1JI3hJhfMitE\nNNV7NjL3JyQgYr6UbVHnLp56wtHAoj1kUxOtaNuaULyoFLwZv8/VE7pmnS/4xWnU\nnFMAmM5NdjbLX5H9aJqZf5Ablm302I9luT7OLn1gT+LOUvcvbfnw51zYtS/ipcS1\nz2j+LZCT+YyrISKePy3BAX8PpluF4oUFQlMUm5zHWisP3IbXAZ4X95GtgAZIy1/t\nvU70C8yipgtcSLXZPqMDoyz4JpapfnyBdlCQKD3UjXdvUarAR5Rt9P/CwMIgaXc=\n=J06s\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 9d7f6dcd0076ff1c027d7ecb60f8f68ca9eecdbb\nparent de301efcfad05a966f3c39d2afca3459d95c19d9\nauthor Prayank <prayank@tutanota.de> 1636592389 +0530\ncommitter GitHub <noreply@github.com> 1636592389 +0530\n\nUpdate src/bitcoin-cli.cpp\n\nCo-authored-by: kiminuo <58662979+kiminuo@users.noreply.github.com>"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/338bfbf83db82e2996a3305c330c7f2c3a912879",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/338bfbf83db82e2996a3305c330c7f2c3a912879",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/338bfbf83db82e2996a3305c330c7f2c3a912879/comments",
    "author": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de301efcfad05a966f3c39d2afca3459d95c19d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de301efcfad05a966f3c39d2afca3459d95c19d9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de301efcfad05a966f3c39d2afca3459d95c19d9"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b550daf9fa54cf38b2ec6b4475678cb81ce8fb03",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/338bfbf83db82e2996a3305c330c7f2c3a912879/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/338bfbf83db82e2996a3305c330c7f2c3a912879/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=338bfbf83db82e2996a3305c330c7f2c3a912879",
        "patch": "@@ -969,7 +969,7 @@ static void GetFeerateBar(double size, std::string& size_bar, double inc_size, d\n     \tfor (int i = 0; i < size / (INCREMENT*1000); ++i) {\n             size_bar += BAR;\n         }\n-    } else if (max_size > 10000000 && max_size < 100000000){\n+    } else if (max_size > 10000000 && max_size < 100000000) {\n     \tfor (int i = 0; i < size / (INCREMENT*10000); ++i) {\n             size_bar += BAR;\n         }"
      }
    ]
  },
  {
    "sha": "fb46f43f3b29342ccd0bd6b1478e997af17d5e7f",
    "node_id": "C_kwDOABII59oAKGZiNDZmNDNmM2IyOTM0MmNjZDBiZDZiMTQ3OGU5OTdhZjE3ZDVlN2Y",
    "commit": {
      "author": {
        "name": "Prayank",
        "email": "prayank@tutanota.de",
        "date": "2021-11-11T01:07:12Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2021-11-11T01:07:12Z"
      },
      "message": "Update src/bitcoin-cli.cpp\n\nCo-authored-by: kiminuo <58662979+kiminuo@users.noreply.github.com>",
      "tree": {
        "sha": "6cfda5e5143f2536fea9072e42a6e4ed145086f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6cfda5e5143f2536fea9072e42a6e4ed145086f8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb46f43f3b29342ccd0bd6b1478e997af17d5e7f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhjGzACRBK7hj4Ov3rIwAAcYIIAD2x2Ya+rd4a8lv743M2AfSm\nHhJyBU9Jsf1vWoZq/0VRNv4Lkf4pt9BQ4OP2lPQzAhO/walSIxBO7garfWwYQmZL\njKtdTX4uAsecrKKhcVqz+t2WuaiSe/D4MWmNezHSjz4szsG84co5uIDc7x3bltxQ\n0dyjL9ce2wg9p8lTI+zPjYTDS7vI1Qd1UgvLCgfU8w/Y4ZRe+UUui5EjFWhrO4e+\npjrkrnw5q+uqYamOpazO7l0VFF+lK2meFjqI+vJwqpbPc7ERDSuXRsJ1nDo6vAmV\n+gmtgkX0F6zTnsqyZJCTC4feDJNMVXzt9EfdV/NdM7KbRU1VGdCPMRj+5pYgpT8=\n=ZIBd\n-----END PGP SIGNATURE-----\n",
        "payload": "tree 6cfda5e5143f2536fea9072e42a6e4ed145086f8\nparent 338bfbf83db82e2996a3305c330c7f2c3a912879\nauthor Prayank <prayank@tutanota.de> 1636592832 +0530\ncommitter GitHub <noreply@github.com> 1636592832 +0530\n\nUpdate src/bitcoin-cli.cpp\n\nCo-authored-by: kiminuo <58662979+kiminuo@users.noreply.github.com>"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb46f43f3b29342ccd0bd6b1478e997af17d5e7f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb46f43f3b29342ccd0bd6b1478e997af17d5e7f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb46f43f3b29342ccd0bd6b1478e997af17d5e7f/comments",
    "author": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "338bfbf83db82e2996a3305c330c7f2c3a912879",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/338bfbf83db82e2996a3305c330c7f2c3a912879",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/338bfbf83db82e2996a3305c330c7f2c3a912879"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "50fb2da8a3a945fd16d8ebd753f33e1db7e8874e",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb46f43f3b29342ccd0bd6b1478e997af17d5e7f/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb46f43f3b29342ccd0bd6b1478e997af17d5e7f/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=fb46f43f3b29342ccd0bd6b1478e997af17d5e7f",
        "patch": "@@ -1097,7 +1097,7 @@ static void ParseGetInfoResult(UniValue& result)\n \n     \t// Removing zero from numbers used in std::min to avoid division by zero in GetFeeRateBar()\n     \tauto const ignore_zero = [](auto const& a, auto const& b) -> bool {\n-        \tif(0 == a || 0 == b)\n+        \tif (0 == a || 0 == b)\n         \t{\n             \treturn false;\n         \t}"
      }
    ]
  }
]