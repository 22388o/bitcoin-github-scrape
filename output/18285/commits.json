[
  {
    "sha": "fab7d14ea5a4305317d66f35beb3225a07823d42",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWI3ZDE0ZWE1YTQzMDUzMTdkNjZmMzViZWIzMjI1YTA3ODIzZDQy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-02-29T20:56:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-03-06T21:08:12Z"
      },
      "message": "test: Check that wait_until returns if time point is in the past",
      "tree": {
        "sha": "8a4cd461857310c1b6fa5587b88336d2b55dc265",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a4cd461857310c1b6fa5587b88336d2b55dc265"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab7d14ea5a4305317d66f35beb3225a07823d42",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhW5gwAlG42dx679QDRT7eylIfmTiQ0SLRirz9T2YHhSCheLOZuaNZsSrBTFJre\nqU4sF2SgrQZXmciQWxlC4Bu1mqyppf9JfS1TY4Ye8ANae2saJRnN0FxTeambT960\ngi3W6bjYXV1tyCYqv28wMYnWW/co2AWGeXLGnRvw20TB6bZXM2j+f3U91CpdFFWv\njgkk8Ydei5DhjBfMoPXLQl2M15zr/PU8kLi6fPB7NzaJZGzP7NouTE21QrzKVxYc\nTpWj8B2W+lJ52opXNUitlbO17kXYAnH7KRGz5jjt1NxOoCnG7CR9la0FVsiXyFTj\nLjGvbK0yNB4J4SAfptbJjDxFSYzfgxJ8GUF/Q6FsRmrLyM4+CBcfCctPIwCdVfbR\nCAQaUsVpviJUlO4XDUlv3iALf7hXjb//gPGJsaV1u4lwGRj8L2FCmiaSzq4P6J/v\nAWae+m+cuvkUgrRh8taqznCKzVB0caLuGrhOB2hFEjcLA3A/FS8LynOUdoyHyFt+\n7mERCs5A\n=4tvu\n-----END PGP SIGNATURE-----",
        "payload": "tree 8a4cd461857310c1b6fa5587b88336d2b55dc265\nparent 3516a31eaa7714a815e0346625ae096f281d3d9e\nauthor MarcoFalke <falke.marco@gmail.com> 1583009782 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1583528892 -0500\n\ntest: Check that wait_until returns if time point is in the past\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab7d14ea5a4305317d66f35beb3225a07823d42",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab7d14ea5a4305317d66f35beb3225a07823d42",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab7d14ea5a4305317d66f35beb3225a07823d42/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3516a31eaa7714a815e0346625ae096f281d3d9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3516a31eaa7714a815e0346625ae096f281d3d9e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3516a31eaa7714a815e0346625ae096f281d3d9e"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "caf9be5bd6e0675cf154246888365bb6da3aec1c",
        "filename": "src/test/scheduler_tests.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab7d14ea5a4305317d66f35beb3225a07823d42/src/test/scheduler_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab7d14ea5a4305317d66f35beb3225a07823d42/src/test/scheduler_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/scheduler_tests.cpp?ref=fab7d14ea5a4305317d66f35beb3225a07823d42",
        "patch": "@@ -98,6 +98,24 @@ BOOST_AUTO_TEST_CASE(manythreads)\n     BOOST_CHECK_EQUAL(counterSum, 200);\n }\n \n+BOOST_AUTO_TEST_CASE(wait_until_past)\n+{\n+    std::condition_variable condvar;\n+    Mutex mtx;\n+    WAIT_LOCK(mtx, lock);\n+\n+    const auto no_wait= [&](const std::chrono::seconds& d) {\n+        return condvar.wait_until(lock, std::chrono::system_clock::now() - d);\n+    };\n+\n+    BOOST_CHECK(std::cv_status::timeout == no_wait(std::chrono::seconds{1}));\n+    BOOST_CHECK(std::cv_status::timeout == no_wait(std::chrono::minutes{1}));\n+    BOOST_CHECK(std::cv_status::timeout == no_wait(std::chrono::hours{1}));\n+    BOOST_CHECK(std::cv_status::timeout == no_wait(std::chrono::hours{10}));\n+    BOOST_CHECK(std::cv_status::timeout == no_wait(std::chrono::hours{100}));\n+    BOOST_CHECK(std::cv_status::timeout == no_wait(std::chrono::hours{1000}));\n+}\n+\n BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n {\n     CScheduler scheduler;"
      }
    ]
  }
]