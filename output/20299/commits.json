[
  {
    "sha": "fa2ecadd0d3283a89d27772dc0275e76277ae17e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTJlY2FkZDBkMzI4M2E4OWQyNzc3MmRjMDI3NWU3NjI3N2FlMTdl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-04T10:06:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-11-04T12:21:54Z"
      },
      "message": "test: Fix intermittent rpc_net issue",
      "tree": {
        "sha": "295f354c35e29489375ddc02068cd19f73186ad8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/295f354c35e29489375ddc02068cd19f73186ad8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2ecadd0d3283a89d27772dc0275e76277ae17e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiOfwwAtHgID9L7/RV+geas6ys+ZWMuhwth9xZ+zwPha6t81cqm93dMT56Xy7Nf\n40Sss2bPyTy+Sa9AIyOBRzbiZZ23Tmbr/I74zUYFMGf+1UT13oNgToCXhbwTrGjT\nqbNQukwSLoUu7dvcCP2/7/LrZCK5adXGRcWTL5RvHFI1ran6QR3yeBYrs9EWgitE\n9hjtvvCNfFAQkpHyjALDswmpldJZYM1thHOZt/fO8byB2vMPM/q6buC3vC/sjMvi\nPgXkRwm2UWIpTqcNxrCRtJtq11Yq5Lo0e5YbkLQHe7lsa2yFhOyvkFuwoWwTSEjH\n/aONA/unhaYiswBN2YhdpRrTdBb2/w8T4a+URKSwLY77O0cFo3N/2VvG0v99tQ4C\niA+JFSUPxT0ad26nVLluguM39vRzyzL10l6VYMFcP0BVFDu708s8zlkM4hFNeZt4\nq58QpyRV+goRm4/QB1H4bEpyAXhMTL44K/YiQPAw42jw7gcUvi2I4HKUfyQJ8k4Y\n3cFORkRy\n=smGc\n-----END PGP SIGNATURE-----",
        "payload": "tree 295f354c35e29489375ddc02068cd19f73186ad8\nparent 88776c2926061482ab551b0cf5c408fc1bc39ac3\nauthor MarcoFalke <falke.marco@gmail.com> 1604484419 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1604492514 +0100\n\ntest: Fix intermittent rpc_net issue\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2ecadd0d3283a89d27772dc0275e76277ae17e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2ecadd0d3283a89d27772dc0275e76277ae17e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2ecadd0d3283a89d27772dc0275e76277ae17e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "88776c2926061482ab551b0cf5c408fc1bc39ac3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88776c2926061482ab551b0cf5c408fc1bc39ac3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/88776c2926061482ab551b0cf5c408fc1bc39ac3"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 4,
      "deletions": 5
    },
    "files": [
      {
        "sha": "2efd090733843c704a684b1245faae4142e75807",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2ecadd0d3283a89d27772dc0275e76277ae17e/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2ecadd0d3283a89d27772dc0275e76277ae17e/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=fa2ecadd0d3283a89d27772dc0275e76277ae17e",
        "patch": "@@ -21,7 +21,6 @@\n from test_framework.util import (\n     assert_approx,\n     assert_equal,\n-    assert_greater_than_or_equal,\n     assert_greater_than,\n     assert_raises_rpc_error,\n     p2p_port,\n@@ -114,10 +113,10 @@ def test_getnettotals(self):\n         self.wait_until(lambda: (self.nodes[0].getnettotals()['totalbytessent'] >= net_totals_before['totalbytessent'] + 32 * 2), timeout=1)\n         self.wait_until(lambda: (self.nodes[0].getnettotals()['totalbytesrecv'] >= net_totals_before['totalbytesrecv'] + 32 * 2), timeout=1)\n \n-        peer_info_after = self.nodes[0].getpeerinfo()\n-        for before, after in zip(peer_info_before, peer_info_after):\n-            assert_greater_than_or_equal(after['bytesrecv_per_msg'].get('pong', 0), before['bytesrecv_per_msg'].get('pong', 0) + 32)\n-            assert_greater_than_or_equal(after['bytessent_per_msg'].get('ping', 0), before['bytessent_per_msg'].get('ping', 0) + 32)\n+        for peer_before in peer_info_before:\n+            peer_after = lambda: next(p for p in self.nodes[0].getpeerinfo() if p['id'] == peer_before['id'])\n+            self.wait_until(lambda: peer_after()['bytesrecv_per_msg'].get('pong', 0) >= peer_before['bytesrecv_per_msg'].get('pong', 0) + 32, timeout=1)\n+            self.wait_until(lambda: peer_after()['bytessent_per_msg'].get('ping', 0) >= peer_before['bytessent_per_msg'].get('ping', 0) + 32, timeout=1)\n \n     def test_getnetworkinfo(self):\n         self.log.info(\"Test getnetworkinfo\")"
      }
    ]
  }
]