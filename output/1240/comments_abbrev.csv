luke-jr,2012-05-09T13:40:59Z,"So far, I have done some minimal testing by analyzing the output of getmemorypool.\n",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-5600226,5600226,
luke-jr,2012-05-10T13:31:39Z,"Eligius has found 2 valid blocks (and none invalid) with this code (plus #1246, for safety) so far, at its default settings. I am now testing with a huge weigh toward transaction fees, to increase the likelihood of dependent transactions paying for their parents (and therefore risking any potential child-before-parent problems).\n",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-5625146,5625146,
luke-jr,2012-05-10T14:59:49Z,"Things I need to address:\n1. False ""may be used uninitialized"" warnings\n2. Config option names differ between actual code and -help\n3. Second-pass priorities should be printed with -printpriority\n4. Fee influence should be multiplied by total input value (input please: is this a good idea? should the total input be reduced by the fee amount first?)\n5. -printpriority shouldn't require fDebug (",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-5627356,5627356,
luke-jr,2012-05-11T19:15:58Z,"FWIW, 10 total valid blocks found with this (most recent is …30E6C09A4FF45348A0EF0AA1A), zero issues caught by #1246, and zero invalid blocks logged by bitcoind.\n",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-5658723,5658723,
luke-jr,2012-05-12T01:18:46Z,"Integrated my 5 ""things to address"".\n",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-5664224,5664224,
luke-jr,2012-05-19T19:19:22Z,"Eligius has been running this from block 179513 (56 blocks found) and EclipseMC from 180573 (11 blocks), totalling 67 valid blocks with no problems found.\n\n(EMC: 180788(1040); Eligius: …9DA7D49DC2539F9D299AF8E5A)\n",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-5804139,5804139,
luke-jr,2012-05-23T05:58:27Z,Also passes the unit tests I just wrote on #1246.\n,https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-5865737,5865737,
luke-jr,2012-05-30T11:56:06Z,"This seems to be be excessively slow, and possibly exploitable right now.\n",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-6007858,6007858,
sipa,2012-05-30T16:25:32Z,"Define ""this"" ?\n",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-6014397,6014397,
luke-jr,2012-05-30T17:18:50Z,"This pull request. Eligius is getting stuck in some huge dependency trees, it seems. Trying to figure it out, but don't have time just this second.\n",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-6015704,6015704,
luke-jr,2012-06-12T20:05:34Z,"Fixed the major performance hit from complex dependency trees. Still not as fast as the old algorithm, but not absurdly slow either. I'd say the ability to pay for ""parent"" transactions is worth it.\n",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-6281103,6281103,
luke-jr,2012-06-12T20:05:58Z,(Fix verified by about 10 days of testing on Eligius)\n,https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-6281116,6281116,
sipa,2012-06-14T15:33:58Z,I certainly agree to the idea of this patch. I haven't checked the source yet though.\n,https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-6332093,6332093,
gavinandresen,2012-06-19T01:39:13Z,Need to be very careful not to accidentally introduce a potential DoS attack by arranging transactions that require N^2 time or space to figure out fees/priority.\n,https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-6413992,6413992,
luke-jr,2012-06-19T01:52:35Z,@gavinandresen I think SatoshiDice tested that for me (the fix from ~16 days ago)\n,https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-6414164,6414164,
gavinandresen,2012-07-13T00:20:12Z,Could you write up a gist that explains what formula for priority you're using?  And maybe talk about how it will handle transactions from old clients (who calculate priority the old way) ?\n,https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-6951577,6951577,
luke-jr,2012-07-13T01:28:56Z,- DepthWeight = user configurable (default: 1.0)\n- FeeWeight = user configurable (default: 1.0)\n- DepthScore = sum(sum(value \* depth) for each input)\n- FeeScore = sum(value for each input) \* fee\n- WeighedScore = (DepthScore \* DepthWeight) + (FeeScore \* FeeWeight)\n- EffectiveSize = datasize + sum(datasize for each (transaction this depends on that is not yet in a block))\n- Priority = Weig,https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-6952446,6952446,
gavinandresen,2012-07-13T15:53:40Z,"NACK, the priority formula would make it easy for somebody with (say) 100,000 BTC to pay tiny fees and get priority over higher-fee-paying transactions.  That's a bad incentive, it would encourage people to do dangerous things like keep more funds in their 'hot' wallet or add extra inputs to their transactions (and just have bigger change outputs) to get higher priority.\n",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-6966899,6966899,
luke-jr,2012-07-13T15:56:00Z,"So, should I take the input value out of FeeScore?\n",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-6966967,6966967,
jgarzik,2012-08-01T15:43:32Z,"Sadly, in addition to being NAK'd this conflicts heavily with @gavinandresen 's work redoing CreateNewBlock()  You should work with @gavinandresen to coordinate changes in that area, before posting another pull request relating to CreateNewBlock() + TX selection/fees.\n",https://github.com/bitcoin/bitcoin/pull/1240#issuecomment-7430874,7430874,
