[
  {
    "sha": "d66f283ac07edce432b964f7f814631f5a5bc33b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjZmMjgzYWMwN2VkY2U0MzJiOTY0ZjdmODE0NjMxZjVhNWJjMzNi",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-05-02T18:53:36Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-05-02T19:17:16Z"
      },
      "message": "scripted-diff: Replace three dots with ellipsis in the UI strings\n\n-BEGIN VERIFY SCRIPT-\nsed -i -E -e 's/\\.\\.\\.\"\\)(\\.|,|\\)| )/\u2026\"\\)\\1/' -- $(git ls-files -- 'src' ':(exclude)src/qt/bitcoinstrings.cpp')\nsed -i -e 's/\\.\\.\\.\\\\\"/\u2026\\\\\"/' src/qt/sendcoinsdialog.cpp\nsed -i -e 's|\\.\\.\\.</string>|\u2026</string>|' src/qt/forms/*.ui\nsed -i -e 's|\\.\\.\\.)</string>|\u2026)</string>|' src/qt/forms/sendcoinsdialog.ui\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "9786e84b156283fd4fcaa5ca1df2c211e4c8ee02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9786e84b156283fd4fcaa5ca1df2c211e4c8ee02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d66f283ac07edce432b964f7f814631f5a5bc33b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmCO+rwACgkQQQEIES5+\nqB/zxRAAn6KYc7Y9zd5vEdujdIo4Mw27LB9Q+VPSs/PFWtGE64Qpjx6VSSNOb8ZX\n4rkuyLv8rFH2V9pY4V+yPfYyRpbe0hZ1A1fBJ1qi6MOqvkU9xHOjedgnj46c5EnQ\nHSzAZLsTrVKQQJJrDn6SttoEhqkFtoYUfvo4SSzwA7294S2LzwJlgBFd4ns646nL\nM6BqtuSkaneypY2jBd8tr2c7Ol31pm5G4ZCrVQDVj677tDy7otb5jwh99vEXyVDC\nmHN07Bhz0d3fzj35btQLulIiiNO7DVwN8btKHYWSNfNeiB3qqeyrlSX6ctLhDoip\ncR/qjRQ5FX0sPIU1OjqsJTMdLBtt0Zq93icJq7eZpdDTjTiotkJVUD0Kdr6nnTBa\nS3Ask/D1j+ef3WLmZWgq8ySD8/Rjs5DRVEfLrzDiTcHIPLPZPuk7fs7m80Jly//e\nX5YsQZl2LHIac3eM5Vr/IZ4LHUMKne1g3NOwjauHsfxXCQXPEtoVedHqR/CcFhEM\ntu1x4isu7OuOHJGNlbcVYgs7qqmJQ5qzZ2vPRtGX6YLU/zTU9nyE0TxQAzQMIORQ\nl7HaAKcpwfzPmSseJn43Nje3nC45hak8vcBWC6y49K0JKdJ9x3LtE90vIGHW8sPt\n60pvnOgV9PCa+7hK/GpJyD5c0ruyr0DxIERGgUfvp/6TTUFu5wk=\n=m2Hl\n-----END PGP SIGNATURE-----",
        "payload": "tree 9786e84b156283fd4fcaa5ca1df2c211e4c8ee02\nparent 2448457cca1858c2fcf3dfcb53de3f388ea72079\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1619981616 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1619983036 +0300\n\nscripted-diff: Replace three dots with ellipsis in the UI strings\n\n-BEGIN VERIFY SCRIPT-\nsed -i -E -e 's/\\.\\.\\.\"\\)(\\.|,|\\)| )/\u2026\"\\)\\1/' -- $(git ls-files -- 'src' ':(exclude)src/qt/bitcoinstrings.cpp')\nsed -i -e 's/\\.\\.\\.\\\\\"/\u2026\\\\\"/' src/qt/sendcoinsdialog.cpp\nsed -i -e 's|\\.\\.\\.</string>|\u2026</string>|' src/qt/forms/*.ui\nsed -i -e 's|\\.\\.\\.)</string>|\u2026)</string>|' src/qt/forms/sendcoinsdialog.ui\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d66f283ac07edce432b964f7f814631f5a5bc33b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d66f283ac07edce432b964f7f814631f5a5bc33b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d66f283ac07edce432b964f7f814631f5a5bc33b/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2448457cca1858c2fcf3dfcb53de3f388ea72079",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2448457cca1858c2fcf3dfcb53de3f388ea72079",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2448457cca1858c2fcf3dfcb53de3f388ea72079"
      }
    ],
    "stats": {
      "total": 116,
      "additions": 58,
      "deletions": 58
    },
    "files": [
      {
        "sha": "bb97fc480966d1e549e4257edf6e3ceadfdc7bef",
        "filename": "src/banman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/banman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/banman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/banman.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -15,7 +15,7 @@\n BanMan::BanMan(fs::path ban_file, CClientUIInterface* client_interface, int64_t default_ban_time)\n     : m_client_interface(client_interface), m_ban_db(std::move(ban_file)), m_default_ban_time(default_ban_time)\n {\n-    if (m_client_interface) m_client_interface->InitMessage(_(\"Loading banlist...\").translated);\n+    if (m_client_interface) m_client_interface->InitMessage(_(\"Loading banlist\u2026\").translated);\n \n     int64_t n_start = GetTimeMillis();\n     m_is_dirty = false;"
      },
      {
        "sha": "faab8dc3730da2cad69aec6b680459597451c903",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -1387,7 +1387,7 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         };\n         bilingual_str strLoadError;\n \n-        uiInterface.InitMessage(_(\"Loading block index...\").translated);\n+        uiInterface.InitMessage(_(\"Loading block index\u2026\").translated);\n \n         do {\n             const int64_t load_block_index_start_time = GetTimeMillis();\n@@ -1520,7 +1520,7 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n                 for (CChainState* chainstate : chainman.GetAll()) {\n                     if (!is_coinsview_empty(chainstate)) {\n-                        uiInterface.InitMessage(_(\"Verifying blocks...\").translated);\n+                        uiInterface.InitMessage(_(\"Verifying blocks\u2026\").translated);\n                         if (fHavePruned && args.GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS) > MIN_BLOCKS_TO_KEEP) {\n                             LogPrintf(\"Prune: pruned datadir may not have more than %d blocks; only checking available blocks\\n\",\n                                 MIN_BLOCKS_TO_KEEP);\n@@ -1620,7 +1620,7 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         if (!fReindex) {\n             LOCK(cs_main);\n             for (CChainState* chainstate : chainman.GetAll()) {\n-                uiInterface.InitMessage(_(\"Pruning blockstore...\").translated);\n+                uiInterface.InitMessage(_(\"Pruning blockstore\u2026\").translated);\n                 chainstate->PruneAndFlush();\n             }\n         }"
      },
      {
        "sha": "64a755b982442a168f3e7813ebb903557280939e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -2476,7 +2476,7 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     }\n \n     if (clientInterface) {\n-        clientInterface->InitMessage(_(\"Loading P2P addresses...\").translated);\n+        clientInterface->InitMessage(_(\"Loading P2P addresses\u2026\").translated);\n     }\n     // Load addresses from peers.dat\n     int64_t nStart = GetTimeMillis();\n@@ -2500,7 +2500,7 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n         LogPrintf(\"%i block-relay-only anchors will be tried for connections.\\n\", m_anchors.size());\n     }\n \n-    uiInterface.InitMessage(_(\"Starting network threads...\").translated);\n+    uiInterface.InitMessage(_(\"Starting network threads\u2026\").translated);\n \n     fAddressesInitialized = true;\n "
      },
      {
        "sha": "686772e6bbebe4932f3aa4afd94ece3cc1771824",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -633,7 +633,7 @@ int GuiMain(int argc, char* argv[])\n         if (app.baseInitialize()) {\n             app.requestInitialize();\n #if defined(Q_OS_WIN)\n-            WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"%1 didn't yet exit safely...\").arg(PACKAGE_NAME), (HWND)app.getMainWinId());\n+            WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"%1 didn't yet exit safely\u2026\").arg(PACKAGE_NAME), (HWND)app.getMainWinId());\n #endif\n             app.exec();\n             app.requestShutdown();"
      },
      {
        "sha": "4ce09325a34e6c8bfc55ded62c430aecc5302ad3",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -308,27 +308,27 @@ void BitcoinGUI::createActions()\n     aboutQtAction = new QAction(tr(\"About &Qt\"), this);\n     aboutQtAction->setStatusTip(tr(\"Show information about Qt\"));\n     aboutQtAction->setMenuRole(QAction::AboutQtRole);\n-    optionsAction = new QAction(tr(\"&Options...\"), this);\n+    optionsAction = new QAction(tr(\"&Options\u2026\"), this);\n     optionsAction->setStatusTip(tr(\"Modify configuration options for %1\").arg(PACKAGE_NAME));\n     optionsAction->setMenuRole(QAction::PreferencesRole);\n     optionsAction->setEnabled(false);\n     toggleHideAction = new QAction(tr(\"&Show / Hide\"), this);\n     toggleHideAction->setStatusTip(tr(\"Show or hide the main Window\"));\n \n-    encryptWalletAction = new QAction(tr(\"&Encrypt Wallet...\"), this);\n+    encryptWalletAction = new QAction(tr(\"&Encrypt Wallet\u2026\"), this);\n     encryptWalletAction->setStatusTip(tr(\"Encrypt the private keys that belong to your wallet\"));\n     encryptWalletAction->setCheckable(true);\n-    backupWalletAction = new QAction(tr(\"&Backup Wallet...\"), this);\n+    backupWalletAction = new QAction(tr(\"&Backup Wallet\u2026\"), this);\n     backupWalletAction->setStatusTip(tr(\"Backup wallet to another location\"));\n-    changePassphraseAction = new QAction(tr(\"&Change Passphrase...\"), this);\n+    changePassphraseAction = new QAction(tr(\"&Change Passphrase\u2026\"), this);\n     changePassphraseAction->setStatusTip(tr(\"Change the passphrase used for wallet encryption\"));\n-    signMessageAction = new QAction(tr(\"Sign &message...\"), this);\n+    signMessageAction = new QAction(tr(\"Sign &message\u2026\"), this);\n     signMessageAction->setStatusTip(tr(\"Sign messages with your Bitcoin addresses to prove you own them\"));\n-    verifyMessageAction = new QAction(tr(\"&Verify message...\"), this);\n+    verifyMessageAction = new QAction(tr(\"&Verify message\u2026\"), this);\n     verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified Bitcoin addresses\"));\n-    m_load_psbt_action = new QAction(tr(\"&Load PSBT from file...\"), this);\n+    m_load_psbt_action = new QAction(tr(\"&Load PSBT from file\u2026\"), this);\n     m_load_psbt_action->setStatusTip(tr(\"Load Partially Signed Bitcoin Transaction\"));\n-    m_load_psbt_clipboard_action = new QAction(tr(\"Load PSBT from clipboard...\"), this);\n+    m_load_psbt_clipboard_action = new QAction(tr(\"Load PSBT from clipboard\u2026\"), this);\n     m_load_psbt_clipboard_action->setStatusTip(tr(\"Load Partially Signed Bitcoin Transaction from clipboard\"));\n \n     openRPCConsoleAction = new QAction(tr(\"Node window\"), this);\n@@ -342,22 +342,22 @@ void BitcoinGUI::createActions()\n     usedReceivingAddressesAction = new QAction(tr(\"&Receiving addresses\"), this);\n     usedReceivingAddressesAction->setStatusTip(tr(\"Show the list of used receiving addresses and labels\"));\n \n-    openAction = new QAction(tr(\"Open &URI...\"), this);\n+    openAction = new QAction(tr(\"Open &URI\u2026\"), this);\n     openAction->setStatusTip(tr(\"Open a bitcoin: URI\"));\n \n     m_open_wallet_action = new QAction(tr(\"Open Wallet\"), this);\n     m_open_wallet_action->setEnabled(false);\n     m_open_wallet_action->setStatusTip(tr(\"Open a wallet\"));\n     m_open_wallet_menu = new QMenu(this);\n \n-    m_close_wallet_action = new QAction(tr(\"Close Wallet...\"), this);\n+    m_close_wallet_action = new QAction(tr(\"Close Wallet\u2026\"), this);\n     m_close_wallet_action->setStatusTip(tr(\"Close wallet\"));\n \n-    m_create_wallet_action = new QAction(tr(\"Create Wallet...\"), this);\n+    m_create_wallet_action = new QAction(tr(\"Create Wallet\u2026\"), this);\n     m_create_wallet_action->setEnabled(false);\n     m_create_wallet_action->setStatusTip(tr(\"Create a new wallet\"));\n \n-    m_close_all_wallets_action = new QAction(tr(\"Close All Wallets...\"), this);\n+    m_close_all_wallets_action = new QAction(tr(\"Close All Wallets\u2026\"), this);\n     m_close_all_wallets_action->setStatusTip(tr(\"Close all wallets\"));\n \n     showHelpMessageAction = new QAction(tr(\"&Command-line options\"), this);\n@@ -944,7 +944,7 @@ void BitcoinGUI::updateHeadersSyncProgressLabel()\n     int headersTipHeight = clientModel->getHeaderTipHeight();\n     int estHeadersLeft = (GetTime() - headersTipTime) / Params().GetConsensus().nPowTargetSpacing;\n     if (estHeadersLeft > HEADER_HEIGHT_DELTA_SYNC)\n-        progressBarLabel->setText(tr(\"Syncing Headers (%1%)...\").arg(QString::number(100.0 / (headersTipHeight+estHeadersLeft)*headersTipHeight, 'f', 1)));\n+        progressBarLabel->setText(tr(\"Syncing Headers (%1%)\u2026\").arg(QString::number(100.0 / (headersTipHeight+estHeadersLeft)*headersTipHeight, 'f', 1)));\n }\n \n void BitcoinGUI::openOptionsDialogWithTab(OptionsDialog::Tab tab)\n@@ -990,24 +990,24 @@ void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVer\n                 updateHeadersSyncProgressLabel();\n                 return;\n             }\n-            progressBarLabel->setText(tr(\"Synchronizing with network...\"));\n+            progressBarLabel->setText(tr(\"Synchronizing with network\u2026\"));\n             updateHeadersSyncProgressLabel();\n             break;\n         case BlockSource::DISK:\n             if (header) {\n-                progressBarLabel->setText(tr(\"Indexing blocks on disk...\"));\n+                progressBarLabel->setText(tr(\"Indexing blocks on disk\u2026\"));\n             } else {\n-                progressBarLabel->setText(tr(\"Processing blocks on disk...\"));\n+                progressBarLabel->setText(tr(\"Processing blocks on disk\u2026\"));\n             }\n             break;\n         case BlockSource::REINDEX:\n-            progressBarLabel->setText(tr(\"Reindexing blocks on disk...\"));\n+            progressBarLabel->setText(tr(\"Reindexing blocks on disk\u2026\"));\n             break;\n         case BlockSource::NONE:\n             if (header) {\n                 return;\n             }\n-            progressBarLabel->setText(tr(\"Connecting to peers...\"));\n+            progressBarLabel->setText(tr(\"Connecting to peers\u2026\"));\n             break;\n     }\n \n@@ -1044,7 +1044,7 @@ void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVer\n         progressBar->setValue(nVerificationProgress * 1000000000.0 + 0.5);\n         progressBar->setVisible(true);\n \n-        tooltip = tr(\"Catching up...\") + QString(\"<br>\") + tooltip;\n+        tooltip = tr(\"Catching up\u2026\") + QString(\"<br>\") + tooltip;\n         if(count != prevBlocks)\n         {\n             labelBlocksIcon->setPixmap(platformStyle->SingleColorIcon(QString("
      },
      {
        "sha": "dbdeadfc00c35a7cc6d831158d2ffca5ce094243",
        "filename": "src/qt/forms/modaloverlay.ui",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/forms/modaloverlay.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/forms/modaloverlay.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/modaloverlay.ui?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -219,7 +219,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n            <item row=\"0\" column=\"1\">\n             <widget class=\"QLabel\" name=\"numberOfBlocksLeft\">\n              <property name=\"text\">\n-              <string>Unknown...</string>\n+              <string>Unknown\u2026</string>\n              </property>\n             </widget>\n            </item>\n@@ -245,7 +245,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n               </sizepolicy>\n              </property>\n              <property name=\"text\">\n-              <string>Unknown...</string>\n+              <string>Unknown\u2026</string>\n              </property>\n             </widget>\n            </item>\n@@ -289,7 +289,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n            <item row=\"4\" column=\"1\">\n             <widget class=\"QLabel\" name=\"progressIncreasePerH\">\n              <property name=\"text\">\n-              <string>calculating...</string>\n+              <string>calculating\u2026</string>\n              </property>\n             </widget>\n            </item>\n@@ -309,7 +309,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n            <item row=\"5\" column=\"1\">\n             <widget class=\"QLabel\" name=\"expectedTimeLeft\">\n              <property name=\"text\">\n-              <string>calculating...</string>\n+              <string>calculating\u2026</string>\n              </property>\n             </widget>\n            </item>"
      },
      {
        "sha": "caae0dab2a45f1832728fdaf8352a135fd80a716",
        "filename": "src/qt/forms/psbtoperationsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/forms/psbtoperationsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/forms/psbtoperationsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/psbtoperationsdialog.ui?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -126,7 +126,7 @@\n        <item>\n         <widget class=\"QPushButton\" name=\"saveButton\">\n          <property name=\"text\">\n-          <string>Save...</string>\n+          <string>Save\u2026</string>\n          </property>\n         </widget>\n        </item>"
      },
      {
        "sha": "7d95a8bc907ccf5deb77f6f2779d0e4d23ef2167",
        "filename": "src/qt/forms/receiverequestdialog.ui",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/forms/receiverequestdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/forms/receiverequestdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receiverequestdialog.ui?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -11,7 +11,7 @@\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n-   <string>Request payment to ...</string>\n+   <string>Request payment to \u2026</string>\n   </property>\n   <layout class=\"QGridLayout\" name=\"gridLayout\" columnstretch=\"0,1\">\n    <property name=\"sizeConstraint\">\n@@ -65,7 +65,7 @@\n    <item row=\"2\" column=\"1\" alignment=\"Qt::AlignTop\">\n     <widget class=\"QLabel\" name=\"uri_content\">\n      <property name=\"text\">\n-      <string notr=\"true\">bitcoin:BC1...</string>\n+      <string notr=\"true\">bitcoin:BC1\u2026</string>\n      </property>\n      <property name=\"textFormat\">\n       <enum>Qt::RichText</enum>\n@@ -97,7 +97,7 @@\n    <item row=\"3\" column=\"1\" alignment=\"Qt::AlignTop\">\n     <widget class=\"QLabel\" name=\"address_content\">\n      <property name=\"text\">\n-      <string notr=\"true\">bc1...</string>\n+      <string notr=\"true\">bc1\u2026</string>\n      </property>\n      <property name=\"textFormat\">\n       <enum>Qt::PlainText</enum>\n@@ -257,7 +257,7 @@\n      <item>\n       <widget class=\"QPushButton\" name=\"btnSaveAs\">\n        <property name=\"text\">\n-        <string>&amp;Save Image...</string>\n+        <string>&amp;Save Image\u2026</string>\n        </property>\n        <property name=\"autoDefault\">\n         <bool>false</bool>"
      },
      {
        "sha": "1c0f91f7365b720be5d4e55a3704b70e43a82584",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -107,7 +107,7 @@\n              <string notr=\"true\"/>\n             </property>\n             <property name=\"text\">\n-             <string>Inputs...</string>\n+             <string>Inputs\u2026</string>\n             </property>\n             <property name=\"autoDefault\">\n              <bool>false</bool>\n@@ -738,7 +738,7 @@\n               <item>\n                <widget class=\"QPushButton\" name=\"buttonChooseFee\">\n                 <property name=\"text\">\n-                 <string>Choose...</string>\n+                 <string>Choose\u2026</string>\n                 </property>\n                </widget>\n               </item>\n@@ -991,7 +991,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n                  <item>\n                   <widget class=\"QLabel\" name=\"labelSmartFee2\">\n                    <property name=\"text\">\n-                    <string>(Smart fee not initialized yet. This usually takes a few blocks...)</string>\n+                    <string>(Smart fee not initialized yet. This usually takes a few blocks\u2026)</string>\n                    </property>\n                   </widget>\n                  </item>"
      },
      {
        "sha": "ae27cad477eda69510a4267843c4c8359dd61a93",
        "filename": "src/qt/modaloverlay.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/modaloverlay.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/modaloverlay.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -149,13 +149,13 @@ void ModalOverlay::tipUpdate(int count, const QDateTime& blockDate, double nVeri\n         ui->numberOfBlocksLeft->setText(QString::number(bestHeaderHeight - count));\n     } else {\n         UpdateHeaderSyncLabel();\n-        ui->expectedTimeLeft->setText(tr(\"Unknown...\"));\n+        ui->expectedTimeLeft->setText(tr(\"Unknown\u2026\"));\n     }\n }\n \n void ModalOverlay::UpdateHeaderSyncLabel() {\n     int est_headers_left = bestHeaderDate.secsTo(QDateTime::currentDateTime()) / Params().GetConsensus().nPowTargetSpacing;\n-    ui->numberOfBlocksLeft->setText(tr(\"Unknown. Syncing Headers (%1, %2%)...\").arg(bestHeaderHeight).arg(QString::number(100.0 / (bestHeaderHeight + est_headers_left) * bestHeaderHeight, 'f', 1)));\n+    ui->numberOfBlocksLeft->setText(tr(\"Unknown. Syncing Headers (%1, %2%)\u2026\").arg(bestHeaderHeight).arg(QString::number(100.0 / (bestHeaderHeight + est_headers_left) * bestHeaderHeight, 'f', 1)));\n }\n \n void ModalOverlay::toggleVisibility()"
      },
      {
        "sha": "3e1964915dee3396ca31a158832f7592b472cb38",
        "filename": "src/qt/qrimagewidget.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/qrimagewidget.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/qrimagewidget.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/qrimagewidget.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -27,7 +27,7 @@ QRImageWidget::QRImageWidget(QWidget *parent):\n     QLabel(parent), contextMenu(nullptr)\n {\n     contextMenu = new QMenu(this);\n-    contextMenu->addAction(tr(\"Save Image...\"), this, &QRImageWidget::saveImage);\n+    contextMenu->addAction(tr(\"Save Image\u2026\"), this, &QRImageWidget::saveImage);\n     contextMenu->addAction(tr(\"Copy Image\"), this, &QRImageWidget::copyImage);\n }\n "
      },
      {
        "sha": "569a36048e62b660391efbbe8033feadfc233824",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -368,7 +368,7 @@ bool SendCoinsDialog::PrepareSendText(QString& question_string, QString& informa\n \n     if (formatted.size() > 1) {\n         question_string = question_string.arg(\"\");\n-        informative_text = tr(\"To review recipient list click \\\"Show Details...\\\"\");\n+        informative_text = tr(\"To review recipient list click \\\"Show Details\u2026\\\"\");\n         detailed_text = formatted.join(\"\\n\\n\");\n     } else {\n         question_string = question_string.arg(\"<br /><br />\" + formatted.at(0));"
      },
      {
        "sha": "2df45b80819dfb19114ceef51f1281bd07309abb",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -73,7 +73,7 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     dateWidget->addItem(tr(\"This month\"), ThisMonth);\n     dateWidget->addItem(tr(\"Last month\"), LastMonth);\n     dateWidget->addItem(tr(\"This year\"), ThisYear);\n-    dateWidget->addItem(tr(\"Range...\"), Range);\n+    dateWidget->addItem(tr(\"Range\u2026\"), Range);\n     hlayout->addWidget(dateWidget);\n \n     typeWidget = new QComboBox(this);"
      },
      {
        "sha": "4d246bc8dcd39c26fff54066da582981e77ff78e",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -142,7 +142,7 @@ ShutdownWindow::ShutdownWindow(QWidget *parent, Qt::WindowFlags f):\n {\n     QVBoxLayout *layout = new QVBoxLayout();\n     layout->addWidget(new QLabel(\n-        tr(\"%1 is shutting down...\").arg(PACKAGE_NAME) + \"<br /><br />\" +\n+        tr(\"%1 is shutting down\u2026\").arg(PACKAGE_NAME) + \"<br /><br />\" +\n         tr(\"Do not shut down the computer until this window disappears.\")));\n     setLayout(layout);\n "
      },
      {
        "sha": "c152689f0bedb7c8fc5f5d7a6bcc883b96659e30",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -247,7 +247,7 @@ void CreateWalletActivity::askPassphrase()\n \n void CreateWalletActivity::createWallet()\n {\n-    showProgressDialog(tr(\"Creating Wallet <b>%1</b>...\").arg(m_create_wallet_dialog->walletName().toHtmlEscaped()));\n+    showProgressDialog(tr(\"Creating Wallet <b>%1</b>\u2026\").arg(m_create_wallet_dialog->walletName().toHtmlEscaped()));\n \n     std::string name = m_create_wallet_dialog->walletName().toStdString();\n     uint64_t flags = 0;\n@@ -330,7 +330,7 @@ void OpenWalletActivity::open(const std::string& path)\n {\n     QString name = path.empty() ? QString(\"[\"+tr(\"default wallet\")+\"]\") : QString::fromStdString(path);\n \n-    showProgressDialog(tr(\"Opening Wallet <b>%1</b>...\").arg(name.toHtmlEscaped()));\n+    showProgressDialog(tr(\"Opening Wallet <b>%1</b>\u2026\").arg(name.toHtmlEscaped()));\n \n     QTimer::singleShot(0, worker(), [this, path] {\n         std::unique_ptr<interfaces::Wallet> wallet = node().walletClient().loadWallet(path, m_error_message, m_warning_message);"
      },
      {
        "sha": "b795e8301290790a10f79e51a949340c2979df80",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -4093,7 +4093,7 @@ bool CChainState::LoadChainTip(const CChainParams& chainparams)\n \n CVerifyDB::CVerifyDB()\n {\n-    uiInterface.ShowProgress(_(\"Verifying blocks...\").translated, 0, false);\n+    uiInterface.ShowProgress(_(\"Verifying blocks\u2026\").translated, 0, false);\n }\n \n CVerifyDB::~CVerifyDB()\n@@ -4135,7 +4135,7 @@ bool CVerifyDB::VerifyDB(\n             LogPrintf(\"[%d%%]...\", percentageDone); /* Continued */\n             reportDone = percentageDone/10;\n         }\n-        uiInterface.ShowProgress(_(\"Verifying blocks...\").translated, percentageDone, false);\n+        uiInterface.ShowProgress(_(\"Verifying blocks\u2026\").translated, percentageDone, false);\n         if (pindex->nHeight <= chainstate.m_chain.Height()-nCheckDepth)\n             break;\n         if ((fPruneMode || is_snapshot_cs) && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n@@ -4194,7 +4194,7 @@ bool CVerifyDB::VerifyDB(\n                 LogPrintf(\"[%d%%]...\", percentageDone); /* Continued */\n                 reportDone = percentageDone/10;\n             }\n-            uiInterface.ShowProgress(_(\"Verifying blocks...\").translated, percentageDone, false);\n+            uiInterface.ShowProgress(_(\"Verifying blocks\u2026\").translated, percentageDone, false);\n             pindex = chainstate.m_chain.Next(pindex);\n             CBlock block;\n             if (!ReadBlockFromDisk(block, pindex, chainparams.GetConsensus()))\n@@ -4243,7 +4243,7 @@ bool CChainState::ReplayBlocks(const CChainParams& params)\n     if (hashHeads.empty()) return true; // We're already in a consistent state.\n     if (hashHeads.size() != 2) return error(\"ReplayBlocks(): unknown inconsistent state\");\n \n-    uiInterface.ShowProgress(_(\"Replaying blocks...\").translated, 0, false);\n+    uiInterface.ShowProgress(_(\"Replaying blocks\u2026\").translated, 0, false);\n     LogPrintf(\"Replaying blocks\\n\");\n \n     const CBlockIndex* pindexOld = nullptr;  // Old tip during the interrupted flush.\n@@ -4289,7 +4289,7 @@ bool CChainState::ReplayBlocks(const CChainParams& params)\n     for (int nHeight = nForkHeight + 1; nHeight <= pindexNew->nHeight; ++nHeight) {\n         const CBlockIndex* pindex = pindexNew->GetAncestor(nHeight);\n         LogPrintf(\"Rolling forward %s (%i)\\n\", pindex->GetBlockHash().ToString(), nHeight);\n-        uiInterface.ShowProgress(_(\"Replaying blocks...\").translated, (int) ((nHeight - nForkHeight) * 100.0 / (pindexNew->nHeight - nForkHeight)) , false);\n+        uiInterface.ShowProgress(_(\"Replaying blocks\u2026\").translated, (int) ((nHeight - nForkHeight) * 100.0 / (pindexNew->nHeight - nForkHeight)) , false);\n         if (!RollforwardBlock(pindex, cache, params)) return false;\n     }\n "
      },
      {
        "sha": "342a165f39680bfc003a55b15fa275b3f461c75a",
        "filename": "src/wallet/load.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/wallet/load.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/wallet/load.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/load.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -39,7 +39,7 @@ bool VerifyWallets(interfaces::Chain& chain)\n \n     LogPrintf(\"Using wallet directory %s\\n\", GetWalletDir().string());\n \n-    chain.initMessage(_(\"Verifying wallet(s)...\").translated);\n+    chain.initMessage(_(\"Verifying wallet(s)\u2026\").translated);\n \n     // For backwards compatibility if an unnamed top level wallet exists in the\n     // wallets directory, include it in the default list of wallets to load."
      },
      {
        "sha": "81321510c03d54aa9557f34c170691f7a1a0ae6a",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -557,7 +557,7 @@ RPCHelpMan importwallet()\n \n         // Use uiInterface.ShowProgress instead of pwallet.ShowProgress because pwallet.ShowProgress has a cancel button tied to AbortRescan which\n         // we don't want for this progress bar showing the import progress. uiInterface.ShowProgress does not have a cancel button.\n-        pwallet->chain().showProgress(strprintf(\"%s \" + _(\"Importing...\").translated, pwallet->GetDisplayName()), 0, false); // show progress dialog in GUI\n+        pwallet->chain().showProgress(strprintf(\"%s \" + _(\"Importing\u2026\").translated, pwallet->GetDisplayName()), 0, false); // show progress dialog in GUI\n         std::vector<std::tuple<CKey, int64_t, bool, std::string>> keys;\n         std::vector<std::pair<CScript, int64_t>> scripts;\n         while (file.good()) {"
      },
      {
        "sha": "e006ff65d70462825a4239ce3de8f5b6d940661e",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d66f283ac07edce432b964f7f814631f5a5bc33b/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d66f283ac07edce432b964f7f814631f5a5bc33b/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d66f283ac07edce432b964f7f814631f5a5bc33b",
        "patch": "@@ -1784,7 +1784,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     WalletLogPrintf(\"Rescan started from block %s...\\n\", start_block.ToString());\n \n     fAbortRescan = false;\n-    ShowProgress(strprintf(\"%s \" + _(\"Rescanning...\").translated, GetDisplayName()), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n+    ShowProgress(strprintf(\"%s \" + _(\"Rescanning\u2026\").translated, GetDisplayName()), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n     uint256 tip_hash = WITH_LOCK(cs_wallet, return GetLastBlockHash());\n     uint256 end_hash = tip_hash;\n     if (max_height) chain().findAncestorByHeight(tip_hash, *max_height, FoundBlock().hash(end_hash));\n@@ -1799,7 +1799,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n             m_scanning_progress = 0;\n         }\n         if (block_height % 100 == 0 && progress_end - progress_begin > 0.0) {\n-            ShowProgress(strprintf(\"%s \" + _(\"Rescanning...\").translated, GetDisplayName()), std::max(1, std::min(99, (int)(m_scanning_progress * 100))));\n+            ShowProgress(strprintf(\"%s \" + _(\"Rescanning\u2026\").translated, GetDisplayName()), std::max(1, std::min(99, (int)(m_scanning_progress * 100))));\n         }\n         if (GetTime() >= nNow + 60) {\n             nNow = GetTime();\n@@ -1861,7 +1861,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n             }\n         }\n     }\n-    ShowProgress(strprintf(\"%s \" + _(\"Rescanning...\").translated, GetDisplayName()), 100); // hide progress dialog in GUI\n+    ShowProgress(strprintf(\"%s \" + _(\"Rescanning\u2026\").translated, GetDisplayName()), 100); // hide progress dialog in GUI\n     if (block_height && fAbortRescan) {\n         WalletLogPrintf(\"Rescan aborted at block %d. Progress=%f\\n\", block_height, progress_current);\n         result.status = ScanResult::USER_ABORT;\n@@ -3882,7 +3882,7 @@ std::shared_ptr<CWallet> CWallet::Create(interfaces::Chain& chain, const std::st\n {\n     const std::string& walletFile = database->Filename();\n \n-    chain.initMessage(_(\"Loading wallet...\").translated);\n+    chain.initMessage(_(\"Loading wallet\u2026\").translated);\n \n     int64_t nStart = GetTimeMillis();\n     bool fFirstRun = true;\n@@ -4132,7 +4132,7 @@ std::shared_ptr<CWallet> CWallet::Create(interfaces::Chain& chain, const std::st\n             }\n         }\n \n-        chain.initMessage(_(\"Rescanning...\").translated);\n+        chain.initMessage(_(\"Rescanning\u2026\").translated);\n         walletInstance->WalletLogPrintf(\"Rescanning last %i blocks (from block %i)...\\n\", *tip_height - rescan_height, rescan_height);\n \n         // No need to read and scan block if block was created before"
      }
    ]
  }
]