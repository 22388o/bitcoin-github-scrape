[
  {
    "sha": "48a45119d871e19a4ee24bb17e0bd32d7f30e8f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OGE0NTExOWQ4NzFlMTlhNGVlMjRiYjE3ZTBiZDMyZDdmMzBlOGY5",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-12-02T22:27:41Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-12-04T18:51:39Z"
      },
      "message": "net: Limit # of IPs learned from a DNS seed by family\n\nBoth A and AAAA responses can fit 16 addresses if domain name\ncompression is properly used.",
      "tree": {
        "sha": "8c52978ed5865ddec2ca9f141f9ee9207c37e64c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c52978ed5865ddec2ca9f141f9ee9207c37e64c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48a45119d871e19a4ee24bb17e0bd32d7f30e8f9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl3oADsACgkQDMUhUxl5\nkaWMbg//TyGYLMSK+hGjeuyCdnvb5lGSjsC6EJmgbhb7qTjaipDfaHctu9H6gdnl\nPzKCQm8q1zjKOpeWJaXMOA/52el5icaXipvIyj/VlGHMvZYREjob2Cb212T9a0Bo\nduCY48bsdfUwdp4VmVe1kplxM6hvj+FWoC+KTRJluRJrlfKwrEc7OVJ9FLOCP7bB\naEmso1ISh79T15LAGbgKUES30JIxgRAC9CIVkZOVmqeclYUgH3bvRcNPkPPVAeEz\n8EoETQE71FtfVSQFaLKHUytKWImVthpqLL5pSchgI1h5RF3VFB/hUbgsSLUad08M\nK7gKmpF2ORqY6b03+eZ7+knw0qAkPNOEcfLyr+XL1/UfSWtwrDMBQQzj82zLZHlp\nPka5UAXqK8vImes5ahDl45pqiI5jMx1Qlvw03QxLL7h/0O52lAAbXgIWL5iY5PQO\n8UFIOJd9gObG+EeALEpvRZrqzhPsqC+zJgSxm+6hWPN6BLhC72heUraAhbC2JZiv\n0Dd8Wy9MHDC4DhkoBYRcb4o6ESvKmDebSHpomFTdfsY1rFjr9ok3zTDvul0nITZT\ndt+v+0TGoEg91fB4SL/xkAlBoMX3a3fm69R5bfaX6BOKnxHZiIqGrk9Cm0UxMJA3\nSeqTLtwpS0INj92ji97G0kgZ4eGLF0vlh2X7/2T8I+5bAsExjE0=\n=6yIe\n-----END PGP SIGNATURE-----",
        "payload": "tree 8c52978ed5865ddec2ca9f141f9ee9207c37e64c\nparent fee01bb053639f9e066ffb7ca72d7a5cb005d4b3\nauthor Carl Dong <contact@carldong.me> 1575325661 -0500\ncommitter Carl Dong <contact@carldong.me> 1575485499 -0500\n\nnet: Limit # of IPs learned from a DNS seed by family\n\nBoth A and AAAA responses can fit 16 addresses if domain name\ncompression is properly used.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48a45119d871e19a4ee24bb17e0bd32d7f30e8f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48a45119d871e19a4ee24bb17e0bd32d7f30e8f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48a45119d871e19a4ee24bb17e0bd32d7f30e8f9/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 20,
      "deletions": 15
    },
    "files": [
      {
        "sha": "2a51232732af1ac97164a0ec8322a2a50562d705",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 10,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48a45119d871e19a4ee24bb17e0bd32d7f30e8f9/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48a45119d871e19a4ee24bb17e0bd32d7f30e8f9/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=48a45119d871e19a4ee24bb17e0bd32d7f30e8f9",
        "patch": "@@ -44,6 +44,7 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n #include <unordered_map>\n \n #include <math.h>\n+#include <sys/socket.h>\n \n // Dump addresses to peers.dat every 15 minutes (900s)\n static constexpr int DUMP_PEERS_INTERVAL = 15 * 60;\n@@ -1608,17 +1609,20 @@ void CConnman::ThreadDNSAddressSeed()\n             if (!resolveSource.SetInternal(host)) {\n                 continue;\n             }\n-            unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n-            if (LookupHost(host.c_str(), vIPs, nMaxIPs, true)) {\n-                for (const CNetAddr& ip : vIPs) {\n-                    int nOneDay = 24*3600;\n-                    CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n-                    vAdd.push_back(addr);\n-                    found++;\n+            const unsigned int max_ips_per_family = 16; // Limits number of IPs learned per family from a DNS seed\n+            for (int addrinfo_family : {AF_INET, AF_INET6}) {\n+                if (LookupHost(host.c_str(), vIPs, max_ips_per_family, true, addrinfo_family)) {\n+                    for (const CNetAddr& ip : vIPs) {\n+                        int nOneDay = 24*3600;\n+                        CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n+                        addr.nTime = GetTime() - 3*nOneDay - rng.randrange(4*nOneDay); // use a random age between 3 and 7 days old\n+                        vAdd.push_back(addr);\n+                        found++;\n+                    }\n+                    addrman.Add(vAdd, resolveSource);\n                 }\n-                addrman.Add(vAdd, resolveSource);\n-            } else {\n+            }\n+            if (vAdd.empty()) {\n                 // We now avoid directly using results from DNS Seeds which do not support service bit filtering,\n                 // instead using them as a oneshot to get nodes with our desired service bits.\n                 AddOneShot(seed);"
      },
      {
        "sha": "921bb659f72c972b8596a21bd41b7587bd444458",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48a45119d871e19a4ee24bb17e0bd32d7f30e8f9/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48a45119d871e19a4ee24bb17e0bd32d7f30e8f9/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=48a45119d871e19a4ee24bb17e0bd32d7f30e8f9",
        "patch": "@@ -59,7 +59,7 @@ std::string GetNetworkName(enum Network net) {\n     }\n }\n \n-bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup)\n+bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup, int addrinfo_family = AF_UNSPEC)\n {\n     vIP.clear();\n \n@@ -84,7 +84,7 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n     aiHint.ai_socktype = SOCK_STREAM;\n     aiHint.ai_protocol = IPPROTO_TCP;\n     // We don't care which address family (IPv4 or IPv6) is returned\n-    aiHint.ai_family = AF_UNSPEC;\n+    aiHint.ai_family = addrinfo_family;\n     // If we allow lookups of hostnames, use the AI_ADDRCONFIG flag to only\n     // return addresses whose family we have an address configured for.\n     //\n@@ -102,6 +102,7 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n     struct addrinfo *aiTrav = aiRes;\n     while (aiTrav != nullptr && (nMaxSolutions == 0 || vIP.size() < nMaxSolutions))\n     {\n+        assert(addrinfo_family == AF_UNSPEC ||  addrinfo_family == aiTrav->ai_family);\n         CNetAddr resolved;\n         if (aiTrav->ai_family == AF_INET)\n         {\n@@ -143,7 +144,7 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n  * @see Lookup(const char *, std::vector<CService>&, int, bool, unsigned int)\n  *      for additional parameter descriptions.\n  */\n-bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup)\n+bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup, int addrinfo_family)\n {\n     std::string strHost(pszName);\n     if (strHost.empty())\n@@ -152,7 +153,7 @@ bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nM\n         strHost = strHost.substr(1, strHost.size() - 2);\n     }\n \n-    return LookupIntern(strHost.c_str(), vIP, nMaxSolutions, fAllowLookup);\n+    return LookupIntern(strHost.c_str(), vIP, nMaxSolutions, fAllowLookup, addrinfo_family);\n }\n \n  /**"
      },
      {
        "sha": "d097d9f2366826c5ebabd6eb832a92f3ad920849",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48a45119d871e19a4ee24bb17e0bd32d7f30e8f9/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48a45119d871e19a4ee24bb17e0bd32d7f30e8f9/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=48a45119d871e19a4ee24bb17e0bd32d7f30e8f9",
        "patch": "@@ -45,7 +45,7 @@ bool IsProxy(const CNetAddr &addr);\n bool SetNameProxy(const proxyType &addrProxy);\n bool HaveNameProxy();\n bool GetNameProxy(proxyType &nameProxyOut);\n-bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup);\n+bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup, int addrinfo_family = AF_UNSPEC);\n bool LookupHost(const char *pszName, CNetAddr& addr, bool fAllowLookup);\n bool Lookup(const char *pszName, CService& addr, int portDefault, bool fAllowLookup);\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault, bool fAllowLookup, unsigned int nMaxSolutions);"
      }
    ]
  }
]