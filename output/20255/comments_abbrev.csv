laanwj,2020-10-27 19:09:10,"Concept ACK. It's mildly interesting that we're sort of reinventing the original `assert()` here, which gets disabled on `NDEBUG`, which we had to always force on, but I think it's fine to reinvent the wheel here instead of assuming any specific compiler semantics.",https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-717473509,717473509,
MarcoFalke,2020-10-27 19:14:12,"Indeed, this `Assume` is like the traditional `assert`.",https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-717476134,717476134,
jnewbery,2020-10-27 19:29:47,"Concept ACK. If you're willing to entertain paint color requests, I prefer the name `Check()`, as was originally proposed in #16136.",https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-717484476,717484476,
MarcoFalke,2020-10-27 19:36:10,"I think @ryanofsky also likes `check`, so I might change to that",https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-717487758,717487758,
jnewbery,2020-10-27 19:40:55,"I think Russ doesn't care about the name, but would prefer a pair of check/dcheck macros: https://github.com/bitcoin/bitcoin/pull/16136#issuecomment-545993867",https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-717490159,717490159,
sipa,2020-10-27 19:43:34,"FWIW, libsecp256k1 has CHECK() (always enabled) and VERIFY_CHECK() functions (enabled with -DVERIFY, used in test builds).",https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-717491541,717491541,
practicalswift,2020-10-27 21:41:32,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-717557135,717557135,
MarcoFalke,2020-10-28 08:16:23,"> FWIW, libsecp256k1 has CHECK() (always enabled) and VERIFY_CHECK() functions (enabled with -DVERIFY, used in test builds).\n\nThat is good to know, because that means we can't use that name due to name-clashing.",https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-717773019,717773019,
practicalswift,2020-10-29 06:37:54,ACK fa9672603560320bc9f1017a7de5e85de10d9561: patch looks correct,https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-718394571,718394571,
MarcoFalke,2020-11-24 09:13:52,"> Are there any cases when assert is preferable to Assert\n\nNo\n\n> If ""no"", why do we mention assert in the docs?\n\nIt documents how the `assert` is used in existing code",https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-732763103,732763103,
practicalswift,2020-11-24 09:25:55,cr ACK faa05854f832405231c9198787a4eafe2cd4c5f0,https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-732769878,732769878,
jnewbery,2020-11-24 09:35:02,utACK faa05854f832405231c9198787a4eafe2cd4c5f0,https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-732775083,732775083,
MarcoFalke,2020-11-25 12:54:39,Will leave style nits alone to preserve ACKs,https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-733689319,733689319,
MarcoFalke,2020-12-04 08:10:00,"I think this is ready, but I am waiting on one more (re?)ACK before merge",https://github.com/bitcoin/bitcoin/pull/20255#issuecomment-738633893,738633893,
ajtowns,2020-10-28 06:08:40,Might be worth clarifying that the expression is still evaluated in production builds?,https://github.com/bitcoin/bitcoin/pull/20255#discussion_r513200660,513200660,doc/developer-notes.md
ajtowns,2020-10-28 07:01:59,"Maybe rephrase it as a directive: ""Assert() should be used to document assumptions when any violation would mean that it is not safe to continue program execution; Assume() should be used to document assumptions when program execution can safely continue even if the assumption is violated."" ?\n\nIf we're going to stick with ""always evaluate assertions"" and not support NDEBUG-like optimisation ev",https://github.com/bitcoin/bitcoin/pull/20255#discussion_r513217881,513217881,doc/developer-notes.md
MarcoFalke,2020-11-24 09:12:12,"thx, done",https://github.com/bitcoin/bitcoin/pull/20255#discussion_r529323719,529323719,doc/developer-notes.md
MarcoFalke,2020-11-24 09:12:51,"> Maybe rephrase it as a directive\n\nthx, done\n\n> maybe we should deprecate assert()\n\nI'll leave that for a follow-up",https://github.com/bitcoin/bitcoin/pull/20255#discussion_r529324531,529324531,doc/developer-notes.md
jonatack,2020-11-24 09:42:44,s/can not/cannot/,https://github.com/bitcoin/bitcoin/pull/20255#discussion_r529362144,529362144,doc/developer-notes.md
jonatack,2020-11-24 09:43:21,"s/For example it can/For example, it may/",https://github.com/bitcoin/bitcoin/pull/20255#discussion_r529362898,529362898,doc/developer-notes.md
