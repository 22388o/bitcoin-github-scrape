[
  {
    "sha": "96b733e99694e74dcd38b16112655f7e1ea2d43b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NmI3MzNlOTk2OTRlNzRkY2QzOGIxNjExMjY1NWY3ZTFlYTJkNDNi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-06-03T14:12:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-06-11T12:22:50Z"
      },
      "message": "Add `-version` option to get just the version\n\nAdds a `-version` or `--version` option to print just the version\nof the program for bitcoind, bitcoin-cli and bitcoin-qt.\n\nAlso make it that `-help` can be used to display the help (as well as\nexisting `--help`). Up to now, `-help` was the only option that didn't\nwork with either one or two dashes.",
      "tree": {
        "sha": "348d0303f312fd56ef39b413d3849ea6ae7ed122",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/348d0303f312fd56ef39b413d3849ea6ae7ed122"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96b733e99694e74dcd38b16112655f7e1ea2d43b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96b733e99694e74dcd38b16112655f7e1ea2d43b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/96b733e99694e74dcd38b16112655f7e1ea2d43b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96b733e99694e74dcd38b16112655f7e1ea2d43b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c8d2f6df0d748152d858cfea09e4463758c8df6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c8d2f6df0d748152d858cfea09e4463758c8df6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c8d2f6df0d748152d858cfea09e4463758c8df6"
      }
    ],
    "stats": {
      "total": 75,
      "additions": 39,
      "deletions": 36
    },
    "files": [
      {
        "sha": "0bb71329f5fea78e0abffac768d97232f9070c05",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96b733e99694e74dcd38b16112655f7e1ea2d43b/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96b733e99694e74dcd38b16112655f7e1ea2d43b/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=96b733e99694e74dcd38b16112655f7e1ea2d43b",
        "patch": "@@ -39,16 +39,18 @@ static bool AppInitRPC(int argc, char* argv[])\n         return false;\n     }\n \n-    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n+    if (argc<2 || mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n     {\n-        // First part of help message is specific to RPC client\n-        std::string strUsage = _(\"Bitcoin Core RPC client version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n-            _(\"Usage:\") + \"\\n\" +\n-              \"  bitcoin-cli [options] <command> [params]  \" + _(\"Send command to Bitcoin Core\") + \"\\n\" +\n-              \"  bitcoin-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n-              \"  bitcoin-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n+        std::string strUsage = _(\"Bitcoin Core RPC client version\") + \" \" + FormatFullVersion() + \"\\n\";\n+        if (!mapArgs.count(\"-version\"))\n+        {\n+            strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n+                  \"  bitcoin-cli [options] <command> [params]  \" + _(\"Send command to Bitcoin Core\") + \"\\n\" +\n+                  \"  bitcoin-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n+                  \"  bitcoin-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n \n-        strUsage += \"\\n\" + HelpMessageCli(true);\n+            strUsage += \"\\n\" + HelpMessageCli(true);\n+        }\n \n         fprintf(stdout, \"%s\", strUsage.c_str());\n         return false;"
      },
      {
        "sha": "99dc9d726dfea5cec738abb26b736a1992929818",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 12,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96b733e99694e74dcd38b16112655f7e1ea2d43b/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96b733e99694e74dcd38b16112655f7e1ea2d43b/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=96b733e99694e74dcd38b16112655f7e1ea2d43b",
        "patch": "@@ -83,19 +83,22 @@ bool AppInit(int argc, char* argv[])\n             return false;\n         }\n \n-        if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n+        if (mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n         {\n-            // First part of help message is specific to bitcoind / RPC client\n-            std::string strUsage = _(\"Bitcoin Core Daemon\") + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n-                _(\"Usage:\") + \"\\n\" +\n-                  \"  bitcoind [options]                     \" + _(\"Start Bitcoin Core Daemon\") + \"\\n\" +\n-                _(\"Usage (deprecated, use bitcoin-cli):\") + \"\\n\" +\n-                  \"  bitcoind [options] <command> [params]  \" + _(\"Send command to Bitcoin Core\") + \"\\n\" +\n-                  \"  bitcoind [options] help                \" + _(\"List commands\") + \"\\n\" +\n-                  \"  bitcoind [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n-\n-            strUsage += \"\\n\" + HelpMessage(HMM_BITCOIND);\n-            strUsage += \"\\n\" + HelpMessageCli(false);\n+            std::string strUsage = _(\"Bitcoin Core Daemon\") + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\";\n+\n+            if (!mapArgs.count(\"-version\"))\n+            {\n+                strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n+                      \"  bitcoind [options]                     \" + _(\"Start Bitcoin Core Daemon\") + \"\\n\" +\n+                    _(\"Usage (deprecated, use bitcoin-cli):\") + \"\\n\" +\n+                      \"  bitcoind [options] <command> [params]  \" + _(\"Send command to Bitcoin Core\") + \"\\n\" +\n+                      \"  bitcoind [options] help                \" + _(\"List commands\") + \"\\n\" +\n+                      \"  bitcoind [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n+\n+                strUsage += \"\\n\" + HelpMessage(HMM_BITCOIND);\n+                strUsage += \"\\n\" + HelpMessageCli(false);\n+            }\n \n             fprintf(stdout, \"%s\", strUsage.c_str());\n             return false;"
      },
      {
        "sha": "387f6ede4be85e7cedbb3b87aa577d348ec37ca7",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96b733e99694e74dcd38b16112655f7e1ea2d43b/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96b733e99694e74dcd38b16112655f7e1ea2d43b/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=96b733e99694e74dcd38b16112655f7e1ea2d43b",
        "patch": "@@ -503,9 +503,9 @@ int main(int argc, char *argv[])\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen.\n-    if (mapArgs.count(\"-?\") || mapArgs.count(\"--help\"))\n+    if (mapArgs.count(\"-?\") || mapArgs.count(\"-help\") || mapArgs.count(\"-version\"))\n     {\n-        HelpMessageDialog help(NULL);\n+        HelpMessageDialog help(NULL, mapArgs.count(\"-version\"));\n         help.showOrPrint();\n         return 1;\n     }"
      },
      {
        "sha": "847a3ab8f1033d35fa2274331cb426ea2afc1277",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96b733e99694e74dcd38b16112655f7e1ea2d43b/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96b733e99694e74dcd38b16112655f7e1ea2d43b/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=96b733e99694e74dcd38b16112655f7e1ea2d43b",
        "patch": "@@ -556,7 +556,7 @@ void BitcoinGUI::aboutClicked()\n \n void BitcoinGUI::showHelpMessageClicked()\n {\n-    HelpMessageDialog *help = new HelpMessageDialog(this);\n+    HelpMessageDialog *help = new HelpMessageDialog(this, false);\n     help->setAttribute(Qt::WA_DeleteOnClose);\n     help->show();\n }"
      },
      {
        "sha": "435c6a43685ed8944132b12031088c810489f23c",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96b733e99694e74dcd38b16112655f7e1ea2d43b/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96b733e99694e74dcd38b16112655f7e1ea2d43b/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=96b733e99694e74dcd38b16112655f7e1ea2d43b",
        "patch": "@@ -57,21 +57,20 @@ void AboutDialog::on_buttonBox_accepted()\n }\n \n /** \"Help message\" dialog box */\n-HelpMessageDialog::HelpMessageDialog(QWidget *parent) :\n+HelpMessageDialog::HelpMessageDialog(QWidget *parent, bool versionOnly) :\n     QDialog(parent),\n     ui(new Ui::HelpMessageDialog)\n {\n     ui->setupUi(this);\n     GUIUtil::restoreWindowGeometry(\"nHelpMessageDialogWindow\", this->size(), this);\n \n-    header = tr(\"Bitcoin Core\") + \" \" + tr(\"version\") + \" \" +\n-        QString::fromStdString(FormatFullVersion()) + \"\\n\\n\" +\n-        tr(\"Usage:\") + \"\\n\" +\n+    QString version = tr(\"Bitcoin Core\") + \" \" + tr(\"version\") + \" \" + QString::fromStdString(FormatFullVersion());\n+    QString header = tr(\"Usage:\") + \"\\n\" +\n         \"  bitcoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n \n-    coreOptions = QString::fromStdString(HelpMessage(HMM_BITCOIN_QT));\n+    QString coreOptions = QString::fromStdString(HelpMessage(HMM_BITCOIN_QT));\n \n-    uiOptions = tr(\"UI options\") + \":\\n\" +\n+    QString uiOptions = tr(\"UI options\") + \":\\n\" +\n         \"  -choosedatadir            \" + tr(\"Choose data directory on startup (default: 0)\") + \"\\n\" +\n         \"  -lang=<lang>              \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n         \"  -min                      \" + tr(\"Start minimized\") + \"\\n\" +\n@@ -81,7 +80,10 @@ HelpMessageDialog::HelpMessageDialog(QWidget *parent) :\n     ui->helpMessageLabel->setFont(GUIUtil::bitcoinAddressFont());\n \n     // Set help message text\n-    ui->helpMessageLabel->setText(header + \"\\n\" + coreOptions + \"\\n\" + uiOptions);\n+    if(versionOnly)\n+        ui->helpMessageLabel->setText(version);\n+    else\n+        ui->helpMessageLabel->setText(version + \"\\n\" + header + \"\\n\" + coreOptions + \"\\n\" + uiOptions);\n }\n \n HelpMessageDialog::~HelpMessageDialog()\n@@ -93,8 +95,7 @@ HelpMessageDialog::~HelpMessageDialog()\n void HelpMessageDialog::printToConsole()\n {\n     // On other operating systems, the expected action is to print the message to the console.\n-    QString strUsage = header + \"\\n\" + coreOptions + \"\\n\" + uiOptions + \"\\n\";\n-    fprintf(stdout, \"%s\", strUsage.toStdString().c_str());\n+    fprintf(stdout, \"%s\\n\", qPrintable(ui->helpMessageLabel->text()));\n }\n \n void HelpMessageDialog::showOrPrint()"
      },
      {
        "sha": "cc23420169259eefb7c89e4a7200994de33af492",
        "filename": "src/qt/utilitydialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/96b733e99694e74dcd38b16112655f7e1ea2d43b/src/qt/utilitydialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/96b733e99694e74dcd38b16112655f7e1ea2d43b/src/qt/utilitydialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.h?ref=96b733e99694e74dcd38b16112655f7e1ea2d43b",
        "patch": "@@ -40,17 +40,14 @@ class HelpMessageDialog : public QDialog\n     Q_OBJECT\n \n public:\n-    explicit HelpMessageDialog(QWidget *parent);\n+    explicit HelpMessageDialog(QWidget *parent, bool versionOnly);\n     ~HelpMessageDialog();\n \n     void printToConsole();\n     void showOrPrint();\n \n private:\n     Ui::HelpMessageDialog *ui;\n-    QString header;\n-    QString coreOptions;\n-    QString uiOptions;\n \n private slots:\n     void on_okButton_accepted();"
      }
    ]
  },
  {
    "sha": "97789d374c40f4f7fc8feb19c1235ca09ad2e06e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Nzc4OWQzNzRjNDBmNGY3ZmM4ZmViMTljMTIzNWNhMDlhZDJlMDZl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-06-10T14:02:29Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-06-11T12:27:09Z"
      },
      "message": "util: Add function FormatParagraph to format paragraph to fixed-width\n\nThis is to be used for the `-version` and `-help` messages.",
      "tree": {
        "sha": "38373d43cf0f5c36321fe46a1d38c7992acd3887",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/38373d43cf0f5c36321fe46a1d38c7992acd3887"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97789d374c40f4f7fc8feb19c1235ca09ad2e06e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97789d374c40f4f7fc8feb19c1235ca09ad2e06e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/97789d374c40f4f7fc8feb19c1235ca09ad2e06e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97789d374c40f4f7fc8feb19c1235ca09ad2e06e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "96b733e99694e74dcd38b16112655f7e1ea2d43b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96b733e99694e74dcd38b16112655f7e1ea2d43b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96b733e99694e74dcd38b16112655f7e1ea2d43b"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 51,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0b071361d81935fa3ea53da9105902e005b22c8b",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97789d374c40f4f7fc8feb19c1235ca09ad2e06e/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97789d374c40f4f7fc8feb19c1235ca09ad2e06e/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=97789d374c40f4f7fc8feb19c1235ca09ad2e06e",
        "patch": "@@ -351,4 +351,15 @@ BOOST_AUTO_TEST_CASE(test_ParseInt32)\n     BOOST_CHECK(!ParseInt32(\"32482348723847471234\", NULL));\n }\n \n+BOOST_AUTO_TEST_CASE(test_FormatParagraph)\n+{\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"\", 79, 0), \"\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"test\", 79, 0), \"test\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\" test\", 79, 0), \"test\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"test test\", 79, 0), \"test test\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"test test\", 4, 0), \"test\\ntest\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"testerde test \", 4, 0), \"testerde\\ntest\");\n+    BOOST_CHECK_EQUAL(FormatParagraph(\"test test\", 4, 4), \"test\\n    test\");\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "3e3dabb678acbc5043401979c7127a03a4b4a415",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97789d374c40f4f7fc8feb19c1235ca09ad2e06e/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97789d374c40f4f7fc8feb19c1235ca09ad2e06e/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=97789d374c40f4f7fc8feb19c1235ca09ad2e06e",
        "patch": "@@ -1407,3 +1407,38 @@ std::string DateTimeStrFormat(const char* pszFormat, int64_t nTime)\n     ss << boost::posix_time::from_time_t(nTime);\n     return ss.str();\n }\n+\n+std::string FormatParagraph(const std::string in, size_t width, size_t indent)\n+{\n+    std::stringstream out;\n+    size_t col = 0;\n+    size_t ptr = 0;\n+    while(ptr < in.size())\n+    {\n+        // Find beginning of next word\n+        ptr = in.find_first_not_of(' ', ptr);\n+        if (ptr == std::string::npos)\n+            break;\n+        // Find end of next word\n+        size_t endword = in.find_first_of(' ', ptr);\n+        if (endword == std::string::npos)\n+            endword = in.size();\n+        // Add newline and indentation if this wraps over the allowed width\n+        if (col > 0)\n+        {\n+            if ((col + endword - ptr) > width)\n+            {\n+                out << '\\n';\n+                for(size_t i=0; i<indent; ++i)\n+                    out << ' ';\n+                col = 0;\n+            } else\n+                out << ' ';\n+        }\n+        // Append word\n+        out << in.substr(ptr, endword - ptr);\n+        col += endword - ptr;\n+        ptr = endword;\n+    }\n+    return out.str();\n+}"
      },
      {
        "sha": "da1810a3d35c145b276fa899f30c91f153a01aa4",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97789d374c40f4f7fc8feb19c1235ca09ad2e06e/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97789d374c40f4f7fc8feb19c1235ca09ad2e06e/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=97789d374c40f4f7fc8feb19c1235ca09ad2e06e",
        "patch": "@@ -286,6 +286,11 @@ inline std::string HexStr(const T& vch, bool fSpaces=false)\n     return HexStr(vch.begin(), vch.end(), fSpaces);\n }\n \n+/** Format a paragraph of text to a fixed width, adding spaces for\n+ * indentation to any added line.\n+ */\n+std::string FormatParagraph(const std::string in, size_t width=79, size_t indent=0);\n+\n inline int64_t GetPerformanceCounter()\n {\n     int64_t nCounter = 0;"
      }
    ]
  },
  {
    "sha": "45615af26fe374fa996c116984a05f0a632a0e79",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTYxNWFmMjZmZTM3NGZhOTk2YzExNjk4NGEwNWYwYTYzMmEwZTc5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-06-10T14:02:46Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-06-12T14:11:56Z"
      },
      "message": "Add 'about' information to `-version` output\n\nAdds a copyright and attribution message to the `-version` output\n(the same as shown in the About dialog in the GUI).\n\nMove the message to a function LicenseInfo in init.cpp.",
      "tree": {
        "sha": "8d291f3ddb4b0781e47bdf63e145640bad3b5592",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d291f3ddb4b0781e47bdf63e145640bad3b5592"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/45615af26fe374fa996c116984a05f0a632a0e79",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45615af26fe374fa996c116984a05f0a632a0e79",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/45615af26fe374fa996c116984a05f0a632a0e79",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45615af26fe374fa996c116984a05f0a632a0e79/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97789d374c40f4f7fc8feb19c1235ca09ad2e06e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97789d374c40f4f7fc8feb19c1235ca09ad2e06e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97789d374c40f4f7fc8feb19c1235ca09ad2e06e"
      }
    ],
    "stats": {
      "total": 112,
      "additions": 38,
      "deletions": 74
    },
    "files": [
      {
        "sha": "b7d8ee7f9013d92ead499f0c028dad133b5eb748",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45615af26fe374fa996c116984a05f0a632a0e79/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45615af26fe374fa996c116984a05f0a632a0e79/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=45615af26fe374fa996c116984a05f0a632a0e79",
        "patch": "@@ -87,7 +87,11 @@ bool AppInit(int argc, char* argv[])\n         {\n             std::string strUsage = _(\"Bitcoin Core Daemon\") + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\";\n \n-            if (!mapArgs.count(\"-version\"))\n+            if (mapArgs.count(\"-version\"))\n+            {\n+                strUsage += LicenseInfo();\n+            }\n+            else\n             {\n                 strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n                       \"  bitcoind [options]                     \" + _(\"Start Bitcoin Core Daemon\") + \"\\n\" +"
      },
      {
        "sha": "39453da9c8d34553a0abea4b0d2e32b4044671c4",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 1,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45615af26fe374fa996c116984a05f0a632a0e79/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45615af26fe374fa996c116984a05f0a632a0e79/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=45615af26fe374fa996c116984a05f0a632a0e79",
        "patch": "@@ -195,7 +195,6 @@ bool static Bind(const CService &addr, unsigned int flags) {\n     return true;\n }\n \n-// Core-specific options shared between UI, daemon and RPC client\n std::string HelpMessage(HelpMessageMode hmm)\n {\n     string strUsage = _(\"Options:\") + \"\\n\";\n@@ -330,6 +329,18 @@ std::string HelpMessage(HelpMessageMode hmm)\n     return strUsage;\n }\n \n+std::string LicenseInfo()\n+{\n+    return FormatParagraph(strprintf(_(\"Copyright (C) 2009-%i The Bitcoin Core Developers\"), COPYRIGHT_YEAR)) + \"\\n\" +\n+           \"\\n\" +\n+           FormatParagraph(_(\"This is experimental software.\")) + \"\\n\" +\n+           \"\\n\" +\n+           FormatParagraph(_(\"Distributed under the MIT/X11 software license, see the accompanying file COPYING or <http://www.opensource.org/licenses/mit-license.php>.\")) + \"\\n\" +\n+           \"\\n\" +\n+           FormatParagraph(_(\"This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.\")) +\n+           \"\\n\";\n+}\n+\n struct CImportingNow\n {\n     CImportingNow() {"
      },
      {
        "sha": "52daa47616007f76cd81a476e85b2edca43b6d0e",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45615af26fe374fa996c116984a05f0a632a0e79/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45615af26fe374fa996c116984a05f0a632a0e79/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=45615af26fe374fa996c116984a05f0a632a0e79",
        "patch": "@@ -28,6 +28,9 @@ enum HelpMessageMode\n     HMM_BITCOIN_QT\n };\n \n+/** Help for options shared between UI and daemon (for -help) */\n std::string HelpMessage(HelpMessageMode mode);\n+/** Returns licensing information (for -version) */\n+std::string LicenseInfo();\n \n #endif"
      },
      {
        "sha": "51dabf2c3076cb6ee0ec0898e5b4ba2d8a0b8607",
        "filename": "src/qt/forms/aboutdialog.ui",
        "status": "modified",
        "additions": 4,
        "deletions": 66,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45615af26fe374fa996c116984a05f0a632a0e79/src/qt/forms/aboutdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45615af26fe374fa996c116984a05f0a632a0e79/src/qt/forms/aboutdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/aboutdialog.ui?ref=45615af26fe374fa996c116984a05f0a632a0e79",
        "patch": "@@ -43,76 +43,14 @@\n       </spacer>\n      </item>\n      <item>\n-      <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n-       <item>\n-        <widget class=\"QLabel\" name=\"label\">\n-         <property name=\"cursor\">\n-          <cursorShape>IBeamCursor</cursorShape>\n-         </property>\n-         <property name=\"text\">\n-          <string>&lt;b&gt;Bitcoin Core&lt;/b&gt; version</string>\n-         </property>\n-         <property name=\"textInteractionFlags\">\n-          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-         </property>\n-        </widget>\n-       </item>\n-       <item>\n-        <widget class=\"QLabel\" name=\"versionLabel\">\n-         <property name=\"cursor\">\n-          <cursorShape>IBeamCursor</cursorShape>\n-         </property>\n-         <property name=\"text\">\n-          <string notr=\"true\">0.3.666-beta</string>\n-         </property>\n-         <property name=\"textInteractionFlags\">\n-          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-         </property>\n-        </widget>\n-       </item>\n-       <item>\n-        <spacer name=\"horizontalSpacer\">\n-         <property name=\"orientation\">\n-          <enum>Qt::Horizontal</enum>\n-         </property>\n-         <property name=\"sizeHint\" stdset=\"0\">\n-          <size>\n-           <width>40</width>\n-           <height>20</height>\n-          </size>\n-         </property>\n-        </spacer>\n-       </item>\n-      </layout>\n-     </item>\n-     <item>\n-      <widget class=\"QLabel\" name=\"copyrightLabel\">\n-       <property name=\"cursor\">\n-        <cursorShape>IBeamCursor</cursorShape>\n-       </property>\n-       <property name=\"text\">\n-        <string notr=\"true\">Copyright &amp;copy; 2009-YYYY The Bitcoin Core developers</string>\n-       </property>\n-       <property name=\"textFormat\">\n-        <enum>Qt::RichText</enum>\n-       </property>\n-       <property name=\"textInteractionFlags\">\n-        <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-       </property>\n-      </widget>\n-     </item>\n-     <item>\n-      <widget class=\"QLabel\" name=\"label_2\">\n+      <widget class=\"QLabel\" name=\"versionLabel\">\n        <property name=\"cursor\">\n         <cursorShape>IBeamCursor</cursorShape>\n        </property>\n        <property name=\"text\">\n-        <string>\n-This is experimental software.\n-\n-Distributed under the MIT/X11 software license, see the accompanying file COPYING or &lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;http://www.opensource.org/licenses/mit-license.php&lt;/a&gt;.\n-\n-This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit (&lt;a href=&quot;https://www.openssl.org/&quot;&gt;https://www.openssl.org/&lt;/a&gt;) and cryptographic software written by Eric Young (&lt;a href=&quot;mailto:eay@cryptsoft.com&quot;&gt;eay@cryptsoft.com&lt;/a&gt;) and UPnP software written by Thomas Bernard.</string>\n+        <string notr=\"true\">\n+(placeholder for version message)\n+        </string>\n        </property>\n        <property name=\"textFormat\">\n         <enum>Qt::RichText</enum>"
      },
      {
        "sha": "a34ebd3a3772678f38c1add7f9c1a9d72f59c62a",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 6,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45615af26fe374fa996c116984a05f0a632a0e79/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45615af26fe374fa996c116984a05f0a632a0e79/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=45615af26fe374fa996c116984a05f0a632a0e79",
        "patch": "@@ -16,6 +16,7 @@\n #include \"util.h\"\n \n #include <QLabel>\n+#include <QRegExp>\n #include <QVBoxLayout>\n \n /** \"About\" dialog box */\n@@ -24,16 +25,13 @@ AboutDialog::AboutDialog(QWidget *parent) :\n     ui(new Ui::AboutDialog)\n {\n     ui->setupUi(this);\n-\n-    // Set current copyright year\n-    ui->copyrightLabel->setText(tr(\"Copyright\") + QString(\" &copy; 2009-%1 \").arg(COPYRIGHT_YEAR) + tr(\"The Bitcoin Core developers\"));\n }\n \n void AboutDialog::setModel(ClientModel *model)\n {\n     if(model)\n     {\n-        QString version = model->formatFullVersion();\n+        QString version = tr(\"Bitcoin Core\") + \" \" + tr(\"version\") + \" \" + model->formatFullVersion();\n         /* On x86 add a bit specifier to the version so that users can distinguish between\n          * 32 and 64 bit builds. On other architectures, 32/64 bit may be more ambigious.\n          */\n@@ -42,7 +40,17 @@ void AboutDialog::setModel(ClientModel *model)\n #elif defined(__i386__ )\n         version += \" \" + tr(\"(%1-bit)\").arg(32);\n #endif\n-        ui->versionLabel->setText(version);\n+\n+        /// HTML-format the license message from the core\n+        QString licenseInfo = QString::fromStdString(LicenseInfo());\n+        // Make URLs clickable\n+        QRegExp uri(\"<(.*)>\", Qt::CaseSensitive, QRegExp::RegExp2);\n+        uri.setMinimal(true); // use non-greedy matching\n+        licenseInfo = licenseInfo.replace(uri, \"<a href=\\\"\\\\1\\\">\\\\1</a>\");\n+        // Replace newlines with HTML breaks\n+        licenseInfo = licenseInfo.replace(\"\\n\\n\", \"<br><br>\");\n+\n+        ui->versionLabel->setText(version + \"<br><br>\" + licenseInfo);\n     }\n }\n \n@@ -81,7 +89,7 @@ HelpMessageDialog::HelpMessageDialog(QWidget *parent, bool versionOnly) :\n \n     // Set help message text\n     if(versionOnly)\n-        ui->helpMessageLabel->setText(version);\n+        ui->helpMessageLabel->setText(version + \"\\n\" + QString::fromStdString(LicenseInfo()));\n     else\n         ui->helpMessageLabel->setText(version + \"\\n\" + header + \"\\n\" + coreOptions + \"\\n\" + uiOptions);\n }"
      }
    ]
  },
  {
    "sha": "5c97aae6da813ce4873651b31f75b26ea6f1352f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Yzk3YWFlNmRhODEzY2U0ODczNjUxYjMxZjc1YjI2ZWE2ZjEzNTJm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-06-11T19:44:47Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-06-12T14:11:56Z"
      },
      "message": "qt: Unify AboutDialog and HelpMessageDialog\n\nThey share so much code and functionality that they may as well\nbe one class.",
      "tree": {
        "sha": "49a097ba2ee9219b1b1ae5b0bfb8f48897a4dbfe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49a097ba2ee9219b1b1ae5b0bfb8f48897a4dbfe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5c97aae6da813ce4873651b31f75b26ea6f1352f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c97aae6da813ce4873651b31f75b26ea6f1352f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5c97aae6da813ce4873651b31f75b26ea6f1352f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c97aae6da813ce4873651b31f75b26ea6f1352f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "45615af26fe374fa996c116984a05f0a632a0e79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45615af26fe374fa996c116984a05f0a632a0e79",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/45615af26fe374fa996c116984a05f0a632a0e79"
      }
    ],
    "stats": {
      "total": 272,
      "additions": 49,
      "deletions": 223
    },
    "files": [
      {
        "sha": "647434e1efc7cfe73fdf3e737a67578fa0f70313",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c97aae6da813ce4873651b31f75b26ea6f1352f/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c97aae6da813ce4873651b31f75b26ea6f1352f/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=5c97aae6da813ce4873651b31f75b26ea6f1352f",
        "patch": "@@ -76,7 +76,6 @@ QT_TS = \\\n   qt/locale/bitcoin_zh_TW.ts\n \n QT_FORMS_UI = \\\n-  qt/forms/aboutdialog.ui \\\n   qt/forms/addressbookpage.ui \\\n   qt/forms/askpassphrasedialog.ui \\\n   qt/forms/coincontroldialog.ui \\"
      },
      {
        "sha": "30f5ec8939b5dfd09b1d81e4848161ba06462e61",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c97aae6da813ce4873651b31f75b26ea6f1352f/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c97aae6da813ce4873651b31f75b26ea6f1352f/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=5c97aae6da813ce4873651b31f75b26ea6f1352f",
        "patch": "@@ -549,8 +549,7 @@ void BitcoinGUI::aboutClicked()\n     if(!clientModel)\n         return;\n \n-    AboutDialog dlg(this);\n-    dlg.setModel(clientModel);\n+    HelpMessageDialog dlg(this, true);\n     dlg.exec();\n }\n "
      },
      {
        "sha": "51dabf2c3076cb6ee0ec0898e5b4ba2d8a0b8607",
        "filename": "src/qt/forms/aboutdialog.ui",
        "status": "removed",
        "additions": 0,
        "deletions": 130,
        "changes": 130,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/45615af26fe374fa996c116984a05f0a632a0e79/src/qt/forms/aboutdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/45615af26fe374fa996c116984a05f0a632a0e79/src/qt/forms/aboutdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/aboutdialog.ui?ref=45615af26fe374fa996c116984a05f0a632a0e79",
        "patch": "@@ -1,130 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<ui version=\"4.0\">\n- <class>AboutDialog</class>\n- <widget class=\"QDialog\" name=\"AboutDialog\">\n-  <property name=\"geometry\">\n-   <rect>\n-    <x>0</x>\n-    <y>0</y>\n-    <width>593</width>\n-    <height>319</height>\n-   </rect>\n-  </property>\n-  <property name=\"windowTitle\">\n-   <string>About Bitcoin Core</string>\n-  </property>\n-  <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n-   <item>\n-    <widget class=\"QLabel\" name=\"label_4\">\n-     <property name=\"sizePolicy\">\n-      <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Ignored\">\n-       <horstretch>0</horstretch>\n-       <verstretch>0</verstretch>\n-      </sizepolicy>\n-     </property>\n-     <property name=\"pixmap\">\n-      <pixmap resource=\"../bitcoin.qrc\">:/images/about</pixmap>\n-     </property>\n-    </widget>\n-   </item>\n-   <item>\n-    <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n-     <item>\n-      <spacer name=\"verticalSpacer_2\">\n-       <property name=\"orientation\">\n-        <enum>Qt::Vertical</enum>\n-       </property>\n-       <property name=\"sizeHint\" stdset=\"0\">\n-        <size>\n-         <width>20</width>\n-         <height>40</height>\n-        </size>\n-       </property>\n-      </spacer>\n-     </item>\n-     <item>\n-      <widget class=\"QLabel\" name=\"versionLabel\">\n-       <property name=\"cursor\">\n-        <cursorShape>IBeamCursor</cursorShape>\n-       </property>\n-       <property name=\"text\">\n-        <string notr=\"true\">\n-(placeholder for version message)\n-        </string>\n-       </property>\n-       <property name=\"textFormat\">\n-        <enum>Qt::RichText</enum>\n-       </property>\n-       <property name=\"wordWrap\">\n-        <bool>true</bool>\n-       </property>\n-       <property name=\"textInteractionFlags\">\n-        <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n-       </property>\n-      </widget>\n-     </item>\n-     <item>\n-      <spacer name=\"verticalSpacer\">\n-       <property name=\"orientation\">\n-        <enum>Qt::Vertical</enum>\n-       </property>\n-       <property name=\"sizeHint\" stdset=\"0\">\n-        <size>\n-         <width>20</width>\n-         <height>40</height>\n-        </size>\n-       </property>\n-      </spacer>\n-     </item>\n-     <item>\n-      <widget class=\"QDialogButtonBox\" name=\"buttonBox\">\n-       <property name=\"orientation\">\n-        <enum>Qt::Horizontal</enum>\n-       </property>\n-       <property name=\"standardButtons\">\n-        <set>QDialogButtonBox::Ok</set>\n-       </property>\n-      </widget>\n-     </item>\n-    </layout>\n-   </item>\n-  </layout>\n- </widget>\n- <resources>\n-  <include location=\"../bitcoin.qrc\"/>\n- </resources>\n- <connections>\n-  <connection>\n-   <sender>buttonBox</sender>\n-   <signal>accepted()</signal>\n-   <receiver>AboutDialog</receiver>\n-   <slot>accept()</slot>\n-   <hints>\n-    <hint type=\"sourcelabel\">\n-     <x>20</x>\n-     <y>20</y>\n-    </hint>\n-    <hint type=\"destinationlabel\">\n-     <x>20</x>\n-     <y>20</y>\n-    </hint>\n-   </hints>\n-  </connection>\n-  <connection>\n-   <sender>buttonBox</sender>\n-   <signal>rejected()</signal>\n-   <receiver>AboutDialog</receiver>\n-   <slot>reject()</slot>\n-   <hints>\n-    <hint type=\"sourcelabel\">\n-     <x>20</x>\n-     <y>20</y>\n-    </hint>\n-    <hint type=\"destinationlabel\">\n-     <x>20</x>\n-     <y>20</y>\n-    </hint>\n-   </hints>\n-  </connection>\n- </connections>\n-</ui>"
      },
      {
        "sha": "d8ab27c238b1db73baa63d1c326306a97c87c93a",
        "filename": "src/qt/forms/helpmessagedialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c97aae6da813ce4873651b31f75b26ea6f1352f/src/qt/forms/helpmessagedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c97aae6da813ce4873651b31f75b26ea6f1352f/src/qt/forms/helpmessagedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/helpmessagedialog.ui?ref=5c97aae6da813ce4873651b31f75b26ea6f1352f",
        "patch": "@@ -16,7 +16,7 @@\n    </font>\n   </property>\n   <property name=\"windowTitle\">\n-   <string>Bitcoin Core - Command-line options</string>\n+   <string notr=\"true\">Bitcoin Core - Command-line options</string>\n   </property>\n   <layout class=\"QHBoxLayout\" name=\"horizontalLayout_2\">\n    <item>\n@@ -54,11 +54,6 @@\n         <layout class=\"QVBoxLayout\" name=\"verticalLayout_2\">\n          <item>\n           <widget class=\"QLabel\" name=\"helpMessageLabel\">\n-           <property name=\"font\">\n-            <font>\n-             <family>Terminal</family>\n-            </font>\n-           </property>\n            <property name=\"cursor\">\n             <cursorShape>IBeamCursor</cursorShape>\n            </property>"
      },
      {
        "sha": "eb647d017080aefd29a8e6309cb4da26d0d5c8de",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 64,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c97aae6da813ce4873651b31f75b26ea6f1352f/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c97aae6da813ce4873651b31f75b26ea6f1352f/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=5c97aae6da813ce4873651b31f75b26ea6f1352f",
        "patch": "@@ -4,7 +4,6 @@\n \n #include \"utilitydialog.h\"\n \n-#include \"ui_aboutdialog.h\"\n #include \"ui_helpmessagedialog.h\"\n \n #include \"bitcoingui.h\"\n@@ -19,81 +18,63 @@\n #include <QRegExp>\n #include <QVBoxLayout>\n \n-/** \"About\" dialog box */\n-AboutDialog::AboutDialog(QWidget *parent) :\n+/** \"Help message\" or \"About\" dialog box */\n+HelpMessageDialog::HelpMessageDialog(QWidget *parent, bool about) :\n     QDialog(parent),\n-    ui(new Ui::AboutDialog)\n+    ui(new Ui::HelpMessageDialog)\n {\n     ui->setupUi(this);\n-}\n+    GUIUtil::restoreWindowGeometry(\"nHelpMessageDialogWindow\", this->size(), this);\n \n-void AboutDialog::setModel(ClientModel *model)\n-{\n-    if(model)\n-    {\n-        QString version = tr(\"Bitcoin Core\") + \" \" + tr(\"version\") + \" \" + model->formatFullVersion();\n-        /* On x86 add a bit specifier to the version so that users can distinguish between\n-         * 32 and 64 bit builds. On other architectures, 32/64 bit may be more ambigious.\n-         */\n+    QString version = tr(\"Bitcoin Core\") + \" \" + tr(\"version\") + \" \" + QString::fromStdString(FormatFullVersion());\n+    /* On x86 add a bit specifier to the version so that users can distinguish between\n+     * 32 and 64 bit builds. On other architectures, 32/64 bit may be more ambigious.\n+     */\n #if defined(__x86_64__)\n-        version += \" \" + tr(\"(%1-bit)\").arg(64);\n+    version += \" \" + tr(\"(%1-bit)\").arg(64);\n #elif defined(__i386__ )\n-        version += \" \" + tr(\"(%1-bit)\").arg(32);\n+    version += \" \" + tr(\"(%1-bit)\").arg(32);\n #endif\n \n+    if (about)\n+    {\n+        setWindowTitle(tr(\"About Bitcoin Core\"));\n+\n         /// HTML-format the license message from the core\n         QString licenseInfo = QString::fromStdString(LicenseInfo());\n+        QString licenseInfoHTML = licenseInfo;\n         // Make URLs clickable\n         QRegExp uri(\"<(.*)>\", Qt::CaseSensitive, QRegExp::RegExp2);\n         uri.setMinimal(true); // use non-greedy matching\n-        licenseInfo = licenseInfo.replace(uri, \"<a href=\\\"\\\\1\\\">\\\\1</a>\");\n+        licenseInfoHTML.replace(uri, \"<a href=\\\"\\\\1\\\">\\\\1</a>\");\n         // Replace newlines with HTML breaks\n-        licenseInfo = licenseInfo.replace(\"\\n\\n\", \"<br><br>\");\n-\n-        ui->versionLabel->setText(version + \"<br><br>\" + licenseInfo);\n+        licenseInfoHTML.replace(\"\\n\\n\", \"<br><br>\");\n+\n+        ui->helpMessageLabel->setTextFormat(Qt::RichText);\n+        ui->scrollArea->setVerticalScrollBarPolicy(Qt::ScrollBarAsNeeded);\n+        text = version + \"\\n\" + licenseInfo;\n+        ui->helpMessageLabel->setText(version + \"<br><br>\" + licenseInfoHTML);\n+        ui->helpMessageLabel->setWordWrap(true);\n+    } else {\n+        setWindowTitle(tr(\"Command-line options\"));\n+        QString header = tr(\"Usage:\") + \"\\n\" +\n+            \"  bitcoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n+\n+        QString coreOptions = QString::fromStdString(HelpMessage(HMM_BITCOIN_QT));\n+\n+        QString uiOptions = tr(\"UI options\") + \":\\n\" +\n+            \"  -choosedatadir            \" + tr(\"Choose data directory on startup (default: 0)\") + \"\\n\" +\n+            \"  -lang=<lang>              \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n+            \"  -min                      \" + tr(\"Start minimized\") + \"\\n\" +\n+            \"  -rootcertificates=<file>  \" + tr(\"Set SSL root certificates for payment request (default: -system-)\") + \"\\n\" +\n+            \"  -splash                   \" + tr(\"Show splash screen on startup (default: 1)\");\n+\n+        ui->helpMessageLabel->setFont(GUIUtil::bitcoinAddressFont());\n+        text = version + \"\\n\" + header + \"\\n\" + coreOptions + \"\\n\" + uiOptions;\n+        ui->helpMessageLabel->setText(text);\n     }\n }\n \n-AboutDialog::~AboutDialog()\n-{\n-    delete ui;\n-}\n-\n-void AboutDialog::on_buttonBox_accepted()\n-{\n-    close();\n-}\n-\n-/** \"Help message\" dialog box */\n-HelpMessageDialog::HelpMessageDialog(QWidget *parent, bool versionOnly) :\n-    QDialog(parent),\n-    ui(new Ui::HelpMessageDialog)\n-{\n-    ui->setupUi(this);\n-    GUIUtil::restoreWindowGeometry(\"nHelpMessageDialogWindow\", this->size(), this);\n-\n-    QString version = tr(\"Bitcoin Core\") + \" \" + tr(\"version\") + \" \" + QString::fromStdString(FormatFullVersion());\n-    QString header = tr(\"Usage:\") + \"\\n\" +\n-        \"  bitcoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n-\n-    QString coreOptions = QString::fromStdString(HelpMessage(HMM_BITCOIN_QT));\n-\n-    QString uiOptions = tr(\"UI options\") + \":\\n\" +\n-        \"  -choosedatadir            \" + tr(\"Choose data directory on startup (default: 0)\") + \"\\n\" +\n-        \"  -lang=<lang>              \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n-        \"  -min                      \" + tr(\"Start minimized\") + \"\\n\" +\n-        \"  -rootcertificates=<file>  \" + tr(\"Set SSL root certificates for payment request (default: -system-)\") + \"\\n\" +\n-        \"  -splash                   \" + tr(\"Show splash screen on startup (default: 1)\");\n-\n-    ui->helpMessageLabel->setFont(GUIUtil::bitcoinAddressFont());\n-\n-    // Set help message text\n-    if(versionOnly)\n-        ui->helpMessageLabel->setText(version + \"\\n\" + QString::fromStdString(LicenseInfo()));\n-    else\n-        ui->helpMessageLabel->setText(version + \"\\n\" + header + \"\\n\" + coreOptions + \"\\n\" + uiOptions);\n-}\n-\n HelpMessageDialog::~HelpMessageDialog()\n {\n     GUIUtil::saveWindowGeometry(\"nHelpMessageDialogWindow\", this);\n@@ -103,17 +84,17 @@ HelpMessageDialog::~HelpMessageDialog()\n void HelpMessageDialog::printToConsole()\n {\n     // On other operating systems, the expected action is to print the message to the console.\n-    fprintf(stdout, \"%s\\n\", qPrintable(ui->helpMessageLabel->text()));\n+    fprintf(stdout, \"%s\\n\", qPrintable(text));\n }\n \n void HelpMessageDialog::showOrPrint()\n {\n #if defined(WIN32)\n-        // On Windows, show a message box, as there is no stderr/stdout in windowed applications\n-        exec();\n+    // On Windows, show a message box, as there is no stderr/stdout in windowed applications\n+    exec();\n #else\n-        // On other operating systems, print help text to console\n-        printToConsole();\n+    // On other operating systems, print help text to console\n+    printToConsole();\n #endif\n }\n "
      },
      {
        "sha": "154bb70b8bb60b328a277d64931c17a346707db2",
        "filename": "src/qt/utilitydialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 20,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5c97aae6da813ce4873651b31f75b26ea6f1352f/src/qt/utilitydialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5c97aae6da813ce4873651b31f75b26ea6f1352f/src/qt/utilitydialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.h?ref=5c97aae6da813ce4873651b31f75b26ea6f1352f",
        "patch": "@@ -12,42 +12,24 @@ class BitcoinGUI;\n class ClientModel;\n \n namespace Ui {\n-    class AboutDialog;\n     class HelpMessageDialog;\n }\n \n-/** \"About\" dialog box */\n-class AboutDialog : public QDialog\n-{\n-    Q_OBJECT\n-\n-public:\n-    explicit AboutDialog(QWidget *parent);\n-    ~AboutDialog();\n-\n-    void setModel(ClientModel *model);\n-\n-private:\n-    Ui::AboutDialog *ui;\n-\n-private slots:\n-    void on_buttonBox_accepted();\n-};\n-\n /** \"Help message\" dialog box */\n class HelpMessageDialog : public QDialog\n {\n     Q_OBJECT\n \n public:\n-    explicit HelpMessageDialog(QWidget *parent, bool versionOnly);\n+    explicit HelpMessageDialog(QWidget *parent, bool about);\n     ~HelpMessageDialog();\n \n     void printToConsole();\n     void showOrPrint();\n \n private:\n     Ui::HelpMessageDialog *ui;\n+    QString text;\n \n private slots:\n     void on_okButton_accepted();"
      }
    ]
  }
]