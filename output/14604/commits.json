[
  {
    "sha": "511a5af4622915c236cfb11df5234232c2983e45",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MTFhNWFmNDYyMjkxNWMyMzZjZmIxMWRmNTIzNDIzMmMyOTgzZTQ1",
    "commit": {
      "author": {
        "name": "sanket1729",
        "email": "sanket1729@gmail.com",
        "date": "2020-06-16T16:15:36Z"
      },
      "committer": {
        "name": "sanket1729",
        "email": "sanket1729@gmail.com",
        "date": "2021-06-16T23:43:20Z"
      },
      "message": "Fixed inconsistencies between code and comments\n\n1) Makes the code for block 44 consistent with  the expected figure in\nthe comment above it by adding a transaction to the block\n2) Fixed comment describing sign_tx() function",
      "tree": {
        "sha": "249cd76f27aa8c304cd8534b41aa6211880c816f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/249cd76f27aa8c304cd8534b41aa6211880c816f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/511a5af4622915c236cfb11df5234232c2983e45",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/511a5af4622915c236cfb11df5234232c2983e45",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/511a5af4622915c236cfb11df5234232c2983e45",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/511a5af4622915c236cfb11df5234232c2983e45/comments",
    "author": {
      "login": "sanket1729",
      "id": 6881849,
      "node_id": "MDQ6VXNlcjY4ODE4NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sanket1729",
      "html_url": "https://github.com/sanket1729",
      "followers_url": "https://api.github.com/users/sanket1729/followers",
      "following_url": "https://api.github.com/users/sanket1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/sanket1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
      "organizations_url": "https://api.github.com/users/sanket1729/orgs",
      "repos_url": "https://api.github.com/users/sanket1729/repos",
      "events_url": "https://api.github.com/users/sanket1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sanket1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sanket1729",
      "id": 6881849,
      "node_id": "MDQ6VXNlcjY4ODE4NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sanket1729",
      "html_url": "https://github.com/sanket1729",
      "followers_url": "https://api.github.com/users/sanket1729/followers",
      "following_url": "https://api.github.com/users/sanket1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/sanket1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
      "organizations_url": "https://api.github.com/users/sanket1729/orgs",
      "repos_url": "https://api.github.com/users/sanket1729/repos",
      "events_url": "https://api.github.com/users/sanket1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sanket1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6bc1eca01b2f88e081e71b783b3d45287700f8a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6bc1eca01b2f88e081e71b783b3d45287700f8a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6bc1eca01b2f88e081e71b783b3d45287700f8a5"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "fe94d4383f570dc6e286c0d29db812f717db8f8a",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/511a5af4622915c236cfb11df5234232c2983e45/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/511a5af4622915c236cfb11df5234232c2983e45/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=511a5af4622915c236cfb11df5234232c2983e45",
        "patch": "@@ -591,6 +591,8 @@ def run_test(self):\n         b44.hashPrevBlock = self.tip.sha256\n         b44.nBits = 0x207fffff\n         b44.vtx.append(coinbase)\n+        tx = self.create_and_sign_transaction(out[14], 1)\n+        b44.vtx.append(tx)\n         b44.hashMerkleRoot = b44.calc_merkle_root()\n         b44.solve()\n         self.tip = b44\n@@ -678,7 +680,7 @@ def run_test(self):\n         # Test block timestamps\n         #  -> b31 (8) -> b33 (9) -> b35 (10) -> b39 (11) -> b42 (12) -> b43 (13) -> b53 (14) -> b55 (15)\n         #                                                                                   \\-> b54 (15)\n-        #\n+        #                                                                        -> b44 (14)\\-> b48 ()\n         self.move_tip(43)\n         b53 = self.next_block(53, spend=out[14])\n         self.send_blocks([b53], False)\n@@ -1308,7 +1310,7 @@ def create_tx(self, spend_tx, n, value, script=CScript([OP_TRUE, OP_DROP] * 15 +\n         return create_tx_with_script(spend_tx, n, amount=value, script_pub_key=script)\n \n     # sign a transaction, using the key we know about\n-    # this signs input 0 in tx, which is assumed to be spending output n in spend_tx\n+    # this signs input 0 in tx, which is assumed to be spending output 0 in spend_tx\n     def sign_tx(self, tx, spend_tx):\n         scriptPubKey = bytearray(spend_tx.vout[0].scriptPubKey)\n         if (scriptPubKey[0] == OP_TRUE):  # an anyone-can-spend"
      }
    ]
  },
  {
    "sha": "55311197c483477b79883da5da09f2bc71acc7cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NTMxMTE5N2M0ODM0NzdiNzk4ODNkYTVkYTA5ZjJiYzcxYWNjN2Nm",
    "commit": {
      "author": {
        "name": "sanket1729",
        "email": "sanket1729@gmail.com",
        "date": "2020-06-16T16:16:14Z"
      },
      "committer": {
        "name": "sanket1729",
        "email": "sanket1729@gmail.com",
        "date": "2021-06-16T23:43:20Z"
      },
      "message": "Added new test for future blocks reacceptance\n\nAdds a test case for checking reacceptance a previously rejected block\nthat was too far in the future.",
      "tree": {
        "sha": "5e3748052f50a674131e50b3ac58fc70d6f2e708",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e3748052f50a674131e50b3ac58fc70d6f2e708"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55311197c483477b79883da5da09f2bc71acc7cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55311197c483477b79883da5da09f2bc71acc7cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/55311197c483477b79883da5da09f2bc71acc7cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55311197c483477b79883da5da09f2bc71acc7cf/comments",
    "author": {
      "login": "sanket1729",
      "id": 6881849,
      "node_id": "MDQ6VXNlcjY4ODE4NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sanket1729",
      "html_url": "https://github.com/sanket1729",
      "followers_url": "https://api.github.com/users/sanket1729/followers",
      "following_url": "https://api.github.com/users/sanket1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/sanket1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
      "organizations_url": "https://api.github.com/users/sanket1729/orgs",
      "repos_url": "https://api.github.com/users/sanket1729/repos",
      "events_url": "https://api.github.com/users/sanket1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sanket1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sanket1729",
      "id": 6881849,
      "node_id": "MDQ6VXNlcjY4ODE4NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sanket1729",
      "html_url": "https://github.com/sanket1729",
      "followers_url": "https://api.github.com/users/sanket1729/followers",
      "following_url": "https://api.github.com/users/sanket1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/sanket1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
      "organizations_url": "https://api.github.com/users/sanket1729/orgs",
      "repos_url": "https://api.github.com/users/sanket1729/repos",
      "events_url": "https://api.github.com/users/sanket1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sanket1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "511a5af4622915c236cfb11df5234232c2983e45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/511a5af4622915c236cfb11df5234232c2983e45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/511a5af4622915c236cfb11df5234232c2983e45"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 15,
      "deletions": 0
    },
    "files": [
      {
        "sha": "389db73bc99232269826e0c67b11fc8bd8008971",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55311197c483477b79883da5da09f2bc71acc7cf/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55311197c483477b79883da5da09f2bc71acc7cf/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=55311197c483477b79883da5da09f2bc71acc7cf",
        "patch": "@@ -700,6 +700,21 @@ def run_test(self):\n         self.send_blocks([b55], True)\n         self.save_spendable_output()\n \n+        # The block which was previously rejected because of being \"too far(3 hours)\" must be accepted 2 hours later.\n+        # The new block is only 1 hour into future now and we must reorg onto to the new longer chain.\n+        # The new bestblock b48p is invalidated manually.\n+        #  -> b31 (8) -> b33 (9) -> b35 (10) -> b39 (11) -> b42 (12) -> b43 (13) -> b53 (14) -> b55 (15)\n+        #                                                                                   \\-> b54 (15)\n+        #                                                                        -> b44 (14)\\-> b48 () -> b48p ()\n+        self.log.info(\"Accept a previously rejected future block at a later time\")\n+        node.setmocktime(int(time.time()) + 2*60*60)\n+        self.move_tip(48)\n+        self.block_heights[b48.sha256] = self.block_heights[b44.sha256] + 1 # b48 is a parent of b44\n+        b48p = self.next_block(\"48p\")\n+        self.send_blocks([b48, b48p], success=True) # Reorg to the longer chain\n+        node.invalidateblock(b48p.hash) # mark b48p as invalid\n+        node.setmocktime(0)\n+\n         # Test Merkle tree malleability\n         #\n         # -> b42 (12) -> b43 (13) -> b53 (14) -> b55 (15) -> b57p2 (16)"
      }
    ]
  }
]