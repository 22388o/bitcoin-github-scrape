[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809111171",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21540#issuecomment-809111171",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21540",
    "id": 809111171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTExMTE3MQ==",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-29T06:36:43Z",
    "updated_at": "2021-03-29T06:36:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Code review ACK 966089a",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809111171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809910431",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21540#issuecomment-809910431",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21540",
    "id": 809910431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTkxMDQzMQ==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-30T05:03:26Z",
    "updated_at": "2021-03-30T05:03:26Z",
    "author_association": "MEMBER",
    "body": "Concept ACK - the resulting code is significantly more readable IMO and this makes the consistent treatment obvious and enforced.\r\n\r\nLogically, the underlying values in `statements` are not associated as in a map (i.e. the indexing linking the values is not relevant - one is not logically a key and the other a value). A `std::array<std::tuple>` would seem to be more logically consistent.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809910431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/810157083",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21540#issuecomment-810157083",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21540",
    "id": 810157083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDE1NzA4Mw==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-30T11:50:08Z",
    "updated_at": "2021-03-30T11:50:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for reviewing!\r\n\r\n> Logically, the underlying values in `statements` are not associated as in a map (i.e. the indexing linking the values is not relevant - one is not logically a key and the other a value). A `std::array<std::tuple>` would seem to be more logically consistent.\r\n\r\nAgreed, using std::map here is like using a sledgehammer to crack a nut \ud83d\ude04 I changed the code to use `std::array<std::pair<...,...>, N>` now -- fortunately the loop code doesn't need to be changed at all. The only drawback is that we need to specify the size N of the array as second template parameter ([`std::make_array`](https://en.cppreference.com/w/cpp/experimental/make_array) would help here, but that is not in the standard yet as far as I know), but I think we can live with that.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/810157083/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/810827698",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21540#issuecomment-810827698",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21540",
    "id": 810827698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDgyNzY5OA==",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-31T07:04:31Z",
    "updated_at": "2021-03-31T07:04:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "reACK 0df8012. The only change is replacing map with array",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/810827698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812542724",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21540#issuecomment-812542724",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21540",
    "id": 812542724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjU0MjcyNA==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-02T13:59:15Z",
    "updated_at": "2021-04-02T13:59:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Took in the suggestions by MarcoFalke (https://github.com/bitcoin/bitcoin/pull/21540#pullrequestreview-626939176): applied `clang-format`, changed table type from `std::array` to `std::vector` to avoid typing the size and add another commit to also deduplicate the deletion of statements (`sqlite3_finalize(...)`). Thanks for reviewing!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812542724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812591067",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21540#issuecomment-812591067",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21540",
    "id": 812591067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjU5MTA2Nw==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-02T15:59:08Z",
    "updated_at": "2021-04-02T15:59:08Z",
    "author_association": "MEMBER",
    "body": "ACK ea19cc844e780b29825b26aee321204be981a3ae",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/812591067/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/814634566",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21540#issuecomment-814634566",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21540",
    "id": 814634566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDYzNDU2Ng==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-07T06:17:14Z",
    "updated_at": "2021-04-07T06:17:14Z",
    "author_association": "MEMBER",
    "body": "It was while testing this I noticed #21628. However the issue is also present in master.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/814634566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606201102",
    "pull_request_review_id": 626939176,
    "id": 606201102,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjIwMTEwMg==",
    "diff_hunk": "@@ -69,30 +72,21 @@ SQLiteDatabase::SQLiteDatabase(const fs::path& dir_path, const fs::path& file_pa\n \n void SQLiteBatch::SetupSQLStatements()\n {\n-    int res;\n-    if (!m_read_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"SELECT value FROM main WHERE key = ?\", -1, &m_read_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_insert_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"INSERT INTO main VALUES(?, ?)\", -1, &m_insert_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_overwrite_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"INSERT or REPLACE into main values(?, ?)\", -1, &m_overwrite_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_delete_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"DELETE FROM main WHERE key = ?\", -1, &m_delete_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_cursor_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"SELECT key, value FROM main\", -1, &m_cursor_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements : %s\\n\", sqlite3_errstr(res)));\n+    const std::array<std::pair<sqlite3_stmt**, const char*>, 5> statements {{\n+        { &m_read_stmt,      \"SELECT value FROM main WHERE key = ?\" },\n+        { &m_insert_stmt,    \"INSERT INTO main VALUES(?, ?)\" },\n+        { &m_overwrite_stmt, \"INSERT or REPLACE into main values(?, ?)\" },\n+        { &m_delete_stmt,    \"DELETE FROM main WHERE key = ?\" },\n+        { &m_cursor_stmt,    \"SELECT key, value FROM main\" }",
    "path": "src/wallet/sqlite.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "ea19cc844e780b29825b26aee321204be981a3ae",
    "original_commit_id": "0df8012217415b7dfbca342072adda801d96aa98",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        { &m_cursor_stmt,    \"SELECT key, value FROM main\" },\r\n```\r\n\r\nalso could `clang-format`",
    "created_at": "2021-04-02T11:45:21Z",
    "updated_at": "2021-04-02T13:57:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21540#discussion_r606201102",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21540",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606201102"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21540#discussion_r606201102"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21540"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606201102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 80,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606201301",
    "pull_request_review_id": 626939176,
    "id": 606201301,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjIwMTMwMQ==",
    "diff_hunk": "@@ -69,30 +72,21 @@ SQLiteDatabase::SQLiteDatabase(const fs::path& dir_path, const fs::path& file_pa\n \n void SQLiteBatch::SetupSQLStatements()\n {\n-    int res;\n-    if (!m_read_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"SELECT value FROM main WHERE key = ?\", -1, &m_read_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_insert_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"INSERT INTO main VALUES(?, ?)\", -1, &m_insert_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_overwrite_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"INSERT or REPLACE into main values(?, ?)\", -1, &m_overwrite_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_delete_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"DELETE FROM main WHERE key = ?\", -1, &m_delete_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_cursor_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"SELECT key, value FROM main\", -1, &m_cursor_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements : %s\\n\", sqlite3_errstr(res)));\n+    const std::array<std::pair<sqlite3_stmt**, const char*>, 5> statements {{",
    "path": "src/wallet/sqlite.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "ea19cc844e780b29825b26aee321204be981a3ae",
    "original_commit_id": "0df8012217415b7dfbca342072adda801d96aa98",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    const std::vector<std::pair<sqlite3_stmt**, const char*>> statements {{\r\n```\r\n\r\nYou can use vector to avoid having to type the size",
    "created_at": "2021-04-02T11:45:52Z",
    "updated_at": "2021-04-02T13:57:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21540#discussion_r606201301",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21540",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606201301"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21540#discussion_r606201301"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21540"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606201301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606249609",
    "pull_request_review_id": 626998436,
    "id": 606249609,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjI0OTYwOQ==",
    "diff_hunk": "@@ -69,30 +72,21 @@ SQLiteDatabase::SQLiteDatabase(const fs::path& dir_path, const fs::path& file_pa\n \n void SQLiteBatch::SetupSQLStatements()\n {\n-    int res;\n-    if (!m_read_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"SELECT value FROM main WHERE key = ?\", -1, &m_read_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_insert_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"INSERT INTO main VALUES(?, ?)\", -1, &m_insert_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_overwrite_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"INSERT or REPLACE into main values(?, ?)\", -1, &m_overwrite_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_delete_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"DELETE FROM main WHERE key = ?\", -1, &m_delete_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_cursor_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"SELECT key, value FROM main\", -1, &m_cursor_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements : %s\\n\", sqlite3_errstr(res)));\n+    const std::array<std::pair<sqlite3_stmt**, const char*>, 5> statements {{\n+        { &m_read_stmt,      \"SELECT value FROM main WHERE key = ?\" },\n+        { &m_insert_stmt,    \"INSERT INTO main VALUES(?, ?)\" },\n+        { &m_overwrite_stmt, \"INSERT or REPLACE into main values(?, ?)\" },\n+        { &m_delete_stmt,    \"DELETE FROM main WHERE key = ?\" },\n+        { &m_cursor_stmt,    \"SELECT key, value FROM main\" }",
    "path": "src/wallet/sqlite.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "ea19cc844e780b29825b26aee321204be981a3ae",
    "original_commit_id": "0df8012217415b7dfbca342072adda801d96aa98",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, done.",
    "created_at": "2021-04-02T13:58:45Z",
    "updated_at": "2021-04-02T13:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21540#discussion_r606249609",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21540",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606249609"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21540#discussion_r606249609"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21540"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606249609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 80,
    "side": "RIGHT",
    "in_reply_to_id": 606201102
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606249658",
    "pull_request_review_id": 626998521,
    "id": 606249658,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjI0OTY1OA==",
    "diff_hunk": "@@ -69,30 +72,21 @@ SQLiteDatabase::SQLiteDatabase(const fs::path& dir_path, const fs::path& file_pa\n \n void SQLiteBatch::SetupSQLStatements()\n {\n-    int res;\n-    if (!m_read_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"SELECT value FROM main WHERE key = ?\", -1, &m_read_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_insert_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"INSERT INTO main VALUES(?, ?)\", -1, &m_insert_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_overwrite_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"INSERT or REPLACE into main values(?, ?)\", -1, &m_overwrite_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_delete_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"DELETE FROM main WHERE key = ?\", -1, &m_delete_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements: %s\\n\", sqlite3_errstr(res)));\n-        }\n-    }\n-    if (!m_cursor_stmt) {\n-        if ((res = sqlite3_prepare_v2(m_database.m_db, \"SELECT key, value FROM main\", -1, &m_cursor_stmt, nullptr)) != SQLITE_OK) {\n-            throw std::runtime_error(strprintf(\"SQLiteDatabase: Failed to setup SQL statements : %s\\n\", sqlite3_errstr(res)));\n+    const std::array<std::pair<sqlite3_stmt**, const char*>, 5> statements {{",
    "path": "src/wallet/sqlite.cpp",
    "position": null,
    "original_position": 38,
    "commit_id": "ea19cc844e780b29825b26aee321204be981a3ae",
    "original_commit_id": "0df8012217415b7dfbca342072adda801d96aa98",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-04-02T13:58:52Z",
    "updated_at": "2021-04-02T13:58:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21540#discussion_r606249658",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21540",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606249658"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21540#discussion_r606249658"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21540"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/606249658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 606201301
  }
]