laanwj,2020-08-15 11:07:27,"ACK on the C++ code change\n\nI'll leave it up to @MarcoFalke to review the test, it might be a time dependency like this without using mocking makes the test too brittle / time dependent.",https://github.com/bitcoin/bitcoin/pull/19731#issuecomment-674383459,674383459,
jonatack,2020-08-15 11:12:49,"> ACK on the C++ code change\n> \n> I'll leave it up to @MarcoFalke to review the test, it might be a time dependency like this without using mocking makes the test too brittle / time dependent.\n\nAgree, I'm not sure here either. Edit: loosened the tests to not be time-dependent.",https://github.com/bitcoin/bitcoin/pull/19731#issuecomment-674383924,674383924,
jonatack,2020-08-15 13:30:55,Updated with @jnewbery feedback (thanks!),https://github.com/bitcoin/bitcoin/pull/19731#issuecomment-674396728,674396728,
jnewbery,2020-08-17 09:58:43,Code review ACK 5da96210fc2fda9fbd79531f42f91262fd7a9257,https://github.com/bitcoin/bitcoin/pull/19731#issuecomment-674785606,674785606,
DrahtBot,2020-08-20 20:19:36,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19499 (p2p: Make timeout mockable and type safe, speed up test by MarcoFalke)\n* #19405 (rpc, cli: add network in/out con",https://github.com/bitcoin/bitcoin/pull/19731#issuecomment-677882715,677882715,
jonatack,2020-08-24 08:40:17,"> Just out of curiosity, any reason why you changed the execution order of the tests?\n\nGood question. It mattered for an earlier version of the test and no longer matters now, and I forgot to revert to the previous order. I don't think there was anything critical or sacred about the previous order, but I don't mind reverting that if someone thinks it's better to do so.\n",https://github.com/bitcoin/bitcoin/pull/19731#issuecomment-678992164,678992164,
jonatack,2020-08-15 10:29:15,"Note, the `assert_approx` assertions pass locally for me with vspan values < 5 (seconds). Made them 60 to leave a wide margin for avoiding data races. There shouldn't be any cost to doing so; the values under test should either be 0 or the current unix time. ",https://github.com/bitcoin/bitcoin/pull/19731#discussion_r470963461,470963461,test/functional/rpc_net.py
jnewbery,2020-08-15 11:45:50,Consider using [itertools.product()](https://docs.python.org/2/library/itertools.html#itertools.product) rather than a triple-nested for loop here. It'd also be helpful if there were more meaningful variable names than `x` and `y`.,https://github.com/bitcoin/bitcoin/pull/19731#discussion_r470969194,470969194,test/functional/rpc_net.py
jnewbery,2020-08-15 11:53:33,"I don't think 'accepted and relayed by' is quite right:\n\nFor `last_transaction`, it's the time of the last transaction that we received and accepted into our mempool. I think `the time of the last valid transaction received from this peer` is accurate.\nFor `last_block`, it's the time of the last block that we received and saved to disk (even if we don't connect the block or it eventually fai",https://github.com/bitcoin/bitcoin/pull/19731#discussion_r470969733,470969733,src/rpc/net.cpp
jonatack,2020-08-15 12:05:14,Thanks @jnewbery! I was just reconsidering those as well. Updating.,https://github.com/bitcoin/bitcoin/pull/19731#discussion_r470970656,470970656,src/rpc/net.cpp
jonatack,2020-08-15 13:28:12,Good idea -- done. It's much nicer now.,https://github.com/bitcoin/bitcoin/pull/19731#discussion_r470979310,470979310,test/functional/rpc_net.py
promag,2020-08-16 22:58:29,"nit, last valid block too.",https://github.com/bitcoin/bitcoin/pull/19731#discussion_r471169546,471169546,doc/release-notes-19731.md
promag,2020-08-16 23:00:49,"nit, I don't have an alternative but `last_transaction` suggests it returns the actual transaction, not a timestamp.",https://github.com/bitcoin/bitcoin/pull/19731#discussion_r471169796,471169796,src/rpc/net.cpp
jnewbery,2020-08-17 09:54:56,No. `nLastBlockTime` is updated even if connecting the block fails.,https://github.com/bitcoin/bitcoin/pull/19731#discussion_r471369537,471369537,doc/release-notes-19731.md
jonatack,2020-08-17 10:00:46,"> nit, I don't have an alternative but `last_transaction` suggests it returns the actual transaction, not a timestamp.\n\nI considered adding `_time` to the names, but we already have timestamp fields both with and without ""time"" (`conntime`, `lastsend`, `lastrecv`), so I went for the shorter variants unless everyone prefers `last_transaction_time` and `last_block_time` instead.",https://github.com/bitcoin/bitcoin/pull/19731#discussion_r471372578,471372578,src/rpc/net.cpp
jnewbery,2020-08-17 10:04:16,"I'm fine with either, although I think `last_block_time` could still be confusing, since one interpretation could be the timestamp in the block. ",https://github.com/bitcoin/bitcoin/pull/19731#discussion_r471374270,471374270,src/rpc/net.cpp
jonatack,2020-08-17 10:09:39,"Thanks @jnewbery. I found figuring out their exact definition to be the most interesting part of this PR. More precise code documentation than\n\n- `net.h` *Block and TXN accept times*\n- `net.cpp::AttemptToEvictConnection` *recently sent us transactions/recently sent us blocks*\n\nmight be worth adding/updating.",https://github.com/bitcoin/bitcoin/pull/19731#discussion_r471377177,471377177,doc/release-notes-19731.md
jnewbery,2020-08-17 10:15:27,"> More code documentation ... might be worth adding/updating.\n\nCertainly! Although it doesn't have to be in this PR.",https://github.com/bitcoin/bitcoin/pull/19731#discussion_r471380150,471380150,doc/release-notes-19731.md
jonatack,2020-08-17 10:17:03,"> > More code documentation ... might be worth adding/updating.\n> \n> Certainly! Although it doesn't have to be in this PR.\n\nAgreed!",https://github.com/bitcoin/bitcoin/pull/19731#discussion_r471380927,471380927,doc/release-notes-19731.md
jonatack,2020-08-17 10:22:30,Unresolving to make the head comment visible for reviewers and future code doc writers.,https://github.com/bitcoin/bitcoin/pull/19731#discussion_r471383767,471383767,src/rpc/net.cpp
promag,2020-08-20 23:57:08,"Right, got confused by fNewBlock.",https://github.com/bitcoin/bitcoin/pull/19731#discussion_r474333916,474333916,doc/release-notes-19731.md
jonatack,2020-09-01 16:01:19,Improved the documentation in #19857.,https://github.com/bitcoin/bitcoin/pull/19731#discussion_r481255049,481255049,doc/release-notes-19731.md
