[
  {
    "sha": "0202177f27130ba486e1e386089551172d23fdd0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjAyMTc3ZjI3MTMwYmE0ODZlMWUzODYwODk1NTExNzJkMjNmZGQw",
    "commit": {
      "author": {
        "name": "Lucas Ontivero",
        "email": "lucasontivero@gmail.com",
        "date": "2020-12-15T17:29:47Z"
      },
      "committer": {
        "name": "Lucas Ontivero",
        "email": "lucasontivero@gmail.com",
        "date": "2020-12-16T00:18:31Z"
      },
      "message": "Allow setting I2P addresses",
      "tree": {
        "sha": "c5a201157bc18dc7d6fd0d6408e84dbbb9c87bc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c5a201157bc18dc7d6fd0d6408e84dbbb9c87bc2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0202177f27130ba486e1e386089551172d23fdd0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0202177f27130ba486e1e386089551172d23fdd0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0202177f27130ba486e1e386089551172d23fdd0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0202177f27130ba486e1e386089551172d23fdd0/comments",
    "author": {
      "login": "lontivero",
      "id": 127973,
      "node_id": "MDQ6VXNlcjEyNzk3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127973?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lontivero",
      "html_url": "https://github.com/lontivero",
      "followers_url": "https://api.github.com/users/lontivero/followers",
      "following_url": "https://api.github.com/users/lontivero/following{/other_user}",
      "gists_url": "https://api.github.com/users/lontivero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lontivero/subscriptions",
      "organizations_url": "https://api.github.com/users/lontivero/orgs",
      "repos_url": "https://api.github.com/users/lontivero/repos",
      "events_url": "https://api.github.com/users/lontivero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lontivero/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "lontivero",
      "id": 127973,
      "node_id": "MDQ6VXNlcjEyNzk3Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127973?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lontivero",
      "html_url": "https://github.com/lontivero",
      "followers_url": "https://api.github.com/users/lontivero/followers",
      "following_url": "https://api.github.com/users/lontivero/following{/other_user}",
      "gists_url": "https://api.github.com/users/lontivero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lontivero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lontivero/subscriptions",
      "organizations_url": "https://api.github.com/users/lontivero/orgs",
      "repos_url": "https://api.github.com/users/lontivero/repos",
      "events_url": "https://api.github.com/users/lontivero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lontivero/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f1f2418433c918b27786e1d951c9ef2c2d2ec754",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1f2418433c918b27786e1d951c9ef2c2d2ec754",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f1f2418433c918b27786e1d951c9ef2c2d2ec754"
      }
    ],
    "stats": {
      "total": 87,
      "additions": 81,
      "deletions": 6
    },
    "files": [
      {
        "sha": "c39c0b9dbe82afd5ed3c434957bff14a4d7210ae",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 4,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0202177f27130ba486e1e386089551172d23fdd0/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0202177f27130ba486e1e386089551172d23fdd0/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=0202177f27130ba486e1e386089551172d23fdd0",
        "patch": "@@ -222,18 +222,54 @@ static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKS\n }; // namespace torv3\n \n /**\n- * Parse a TOR address and set this object to it.\n+ * Parse a non-IP address (Tor and I2P) set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n- *\n- * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string& str)\n+{\n+    if (!ValidAsCString(str))\n+    {\n+        return false;\n+    }\n+    return SetTor(str) || SetI2P(str);\n+}\n+\n+bool CNetAddr::SetI2P(const std::string& str)\n+{\n+    // Only base 32 addresses are supported (.b32.i2p)\n+    static const char* suffix{\".b32.i2p\"};\n+    static constexpr size_t suffix_len{8};\n+\n+    if (str.size() <= suffix_len ||\n+        str.substr(str.size() - suffix_len) != suffix) {\n+        return false;\n+    }\n+\n+    // base32-encoded public key hash (SHA256) length (without padding)\n+    if ((str.size() - suffix_len) != 52)\n+    {\n+        return false;\n+    }\n+\n+    bool invalid;\n+    const auto& input = DecodeBase32(str.substr(0, str.size() - suffix_len).append(\"====\").c_str(), &invalid);\n+\n+    if (invalid || input.size() != ADDR_I2P_SIZE) {\n+        return false;\n+    }\n+\n+    m_net = NET_I2P;\n+    m_addr.assign(input.begin(), input.end());\n+    return true;\n+}\n+\n+bool CNetAddr::SetTor(const std::string& str)\n {\n     static const char* suffix{\".onion\"};\n     static constexpr size_t suffix_len{6};\n \n-    if (!ValidAsCString(str) || str.size() <= suffix_len ||\n+    if (str.size() <= suffix_len ||\n         str.substr(str.size() - suffix_len) != suffix) {\n         return false;\n     }"
      },
      {
        "sha": "d8fa6f6c757d47f103b8f61a867d87ff7e551aa7",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 20,
        "deletions": 2,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0202177f27130ba486e1e386089551172d23fdd0/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0202177f27130ba486e1e386089551172d23fdd0/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=0202177f27130ba486e1e386089551172d23fdd0",
        "patch": "@@ -150,8 +150,7 @@ class CNetAddr\n         void SetLegacyIPv6(Span<const uint8_t> ipv6);\n \n         bool SetInternal(const std::string& name);\n-\n-        bool SetSpecial(const std::string &strName); // for Tor addresses\n+        bool SetSpecial(const std::string &strName); // for addresses that doesn't fit in IPv6 addresses\n         bool IsBindAny() const; // INADDR_ANY equivalent\n         bool IsIPv4() const;    // IPv4 mapped address (::FFFF:0:0/96, 0.0.0.0/0)\n         bool IsIPv6() const;    // IPv6 address (not mapped IPv4, not Tor)\n@@ -288,6 +287,25 @@ class CNetAddr\n          */\n         bool SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size);\n \n+        /**\n+         * Parse a TOR address and set this object to it.\n+         *\n+         * @returns Whether or not the operation was successful.\n+         *\n+         * @see CNetAddr::IsTor()\n+         */\n+        bool SetTor(const std::string &strName); // for Tor addresses\n+\n+        /**\n+         * Parse a I2P address and set this object to it.\n+         *\n+         * @returns Whether or not the operation was successful.\n+         *\n+         * @see CNetAddr::IsI2P()\n+         */\n+        bool SetI2P(const std::string &strName); // for I2P addresses\n+\n+\n         /**\n          * Serialize in pre-ADDRv2/BIP155 format to an array.\n          */"
      },
      {
        "sha": "0eeff112dfd3317dfd26958cf2bedaae0889b8c3",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0202177f27130ba486e1e386089551172d23fdd0/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0202177f27130ba486e1e386089551172d23fdd0/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=0202177f27130ba486e1e386089551172d23fdd0",
        "patch": "@@ -346,6 +346,27 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     // TOR, invalid base32\n     BOOST_CHECK(!addr.SetSpecial(std::string{\"mf*g zak.onion\"}));\n \n+    // I2P\n+    const char* i2p_addr = \"udhdrtrcetjm5sxzskjyr5ztpeszydbh4dpl3pl4utgqqw2v4jna.b32.i2p\";\n+    BOOST_REQUIRE(addr.SetSpecial(i2p_addr));\n+    BOOST_REQUIRE(addr.IsValid());\n+    BOOST_REQUIRE(addr.IsI2P());\n+\n+    BOOST_CHECK(!addr.IsBindAny());\n+    BOOST_CHECK(!addr.IsAddrV1Compatible());\n+    BOOST_CHECK_EQUAL(addr.ToString(), i2p_addr);\n+\n+    // I2P, malicious\n+    BOOST_CHECK(!addr.SetSpecial(std::string{\n+        \"udhdrtrcetjm5sxzskjyr5ztpeszydbh4dpl3pl4utgqqw2v4jna\\0wtf.b32.i2p\", 64}));\n+\n+    // I2P, valid but unsupported\n+    BOOST_CHECK(!addr.SetSpecial(std::string{\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscsad.b32.i2p\"}));\n+\n+    // I2P, invalid base32\n+    BOOST_CHECK(!addr.SetSpecial(std::string{\"tp*szydbh4dp.b32.i2p\"}));\n+\n+\n     // Internal\n     addr.SetInternal(\"esffpp\");\n     BOOST_REQUIRE(!addr.IsValid()); // \"internal\" is considered invalid"
      }
    ]
  }
]