[
  {
    "sha": "fa8dff79caaa23bee8d2e029a25c07868c5ef2f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYThkZmY3OWNhYWEyM2JlZThkMmUwMjlhMjVjMDc4NjhjNWVmMmY0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-07-15T12:54:26Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-07-15T12:49:35Z"
      },
      "message": "refactor: Remove unused disconnectpool is nullptr feature\n\nThe last use was removed in commit d831e711cab83c70bf2ded62fe33f484844e73dd",
      "tree": {
        "sha": "2d074dc87d5c4828bc6199a0041d099f4c8cb215",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d074dc87d5c4828bc6199a0041d099f4c8cb215"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8dff79caaa23bee8d2e029a25c07868c5ef2f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhzeQwAuOXLG/OZHHjF4grW8NPJH1dFuh+gJKt++bQlttSxQi8nscySF9habuSF\nSi4rv+uyCYVMCyr8ECvPLv6YEe+lQF4IEsg8xOGm5zHdPnQvgulXNZZJR4Bh1odQ\nQ86VVUuLzGVyPi5a2YT/3wB8j2BNPCkHQhS8yl4ascV3xizYkNo96bLfu1ohpHhv\nNm8twXgdaDYmh0yQEfDUOn2JDNoGw7iPFmBktwdHp/AI9F8plV6uR1pKECudYpSB\no9kLbmgETSExTg7URbL1xJ+cxHUbFS0d7eCXdBHQPPJWUPA3t+AYwNFR+exSj5H+\nz+7XTkiOyFi3QE7h8za1Dex52s/gNYTZuqR/1UBcfeirPJfMhEda319rMXgtlt+W\nyCdG9phRVojTlqSGJOat2LuJ3DAx6OkFtoWCgbIw/vx/rFXQa/Dib1z1AreKiPP0\nN7CN2Y22YuG6KOazaClfP8VUHepzDt2L9WaewPf5P4HlhBdyrEYQE5gfkrlcn1Yo\n6gB94gnf\n=9wDe\n-----END PGP SIGNATURE-----",
        "payload": "tree 2d074dc87d5c4828bc6199a0041d099f4c8cb215\nparent c0224bc96287b04c9ac4d2ae93621c72be5c2baf\nauthor MarcoFalke <falke.marco@gmail.com> 1626353666 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1626353375 +0200\n\nrefactor: Remove unused disconnectpool is nullptr feature\n\nThe last use was removed in commit d831e711cab83c70bf2ded62fe33f484844e73dd\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8dff79caaa23bee8d2e029a25c07868c5ef2f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8dff79caaa23bee8d2e029a25c07868c5ef2f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8dff79caaa23bee8d2e029a25c07868c5ef2f4/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c0224bc96287b04c9ac4d2ae93621c72be5c2baf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0224bc96287b04c9ac4d2ae93621c72be5c2baf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c0224bc96287b04c9ac4d2ae93621c72be5c2baf"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 10,
      "deletions": 14
    },
    "files": [
      {
        "sha": "fef906fb4f6f62170dfbc659ffbd743cb921aa09",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 12,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8dff79caaa23bee8d2e029a25c07868c5ef2f4/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8dff79caaa23bee8d2e029a25c07868c5ef2f4/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fa8dff79caaa23bee8d2e029a25c07868c5ef2f4",
        "patch": "@@ -2245,12 +2245,8 @@ void CChainState::UpdateTip(const CBlockIndex* pindexNew)\n   * transactions from disconnected blocks being added to disconnectpool.  You\n   * should make the mempool consistent again by calling MaybeUpdateMempoolForReorg.\n   * with cs_main held.\n-  *\n-  * If disconnectpool is nullptr, then no disconnected transactions are added to\n-  * disconnectpool (note that the caller is responsible for mempool consistency\n-  * in any case).\n   */\n-bool CChainState::DisconnectTip(BlockValidationState& state, DisconnectedBlockTransactions* disconnectpool)\n+bool CChainState::DisconnectTip(BlockValidationState& state, DisconnectedBlockTransactions& disconnectpool)\n {\n     AssertLockHeld(cs_main);\n     if (m_mempool) AssertLockHeld(m_mempool->cs);\n@@ -2279,16 +2275,16 @@ bool CChainState::DisconnectTip(BlockValidationState& state, DisconnectedBlockTr\n         return false;\n     }\n \n-    if (disconnectpool && m_mempool) {\n+    if (m_mempool) {\n         // Save transactions to re-add to mempool at end of reorg\n         for (auto it = block.vtx.rbegin(); it != block.vtx.rend(); ++it) {\n-            disconnectpool->addTransaction(*it);\n+            disconnectpool.addTransaction(*it);\n         }\n-        while (disconnectpool->DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {\n+        while (disconnectpool.DynamicMemoryUsage() > MAX_DISCONNECTED_TX_POOL_SIZE * 1000) {\n             // Drop the earliest entry, and remove its children from the mempool.\n-            auto it = disconnectpool->queuedTx.get<insertion_order>().begin();\n+            auto it = disconnectpool.queuedTx.get<insertion_order>().begin();\n             m_mempool->removeRecursive(**it, MemPoolRemovalReason::REORG);\n-            disconnectpool->removeEntry(it);\n+            disconnectpool.removeEntry(it);\n         }\n     }\n \n@@ -2505,7 +2501,7 @@ bool CChainState::ActivateBestChainStep(BlockValidationState& state, CBlockIndex\n     bool fBlocksDisconnected = false;\n     DisconnectedBlockTransactions disconnectpool;\n     while (m_chain.Tip() && m_chain.Tip() != pindexFork) {\n-        if (!DisconnectTip(state, &disconnectpool)) {\n+        if (!DisconnectTip(state, disconnectpool)) {\n             // This is likely a fatal error, but keep the mempool consistent,\n             // just in case. Only remove from the mempool in this case.\n             MaybeUpdateMempoolForReorg(disconnectpool, false);\n@@ -2804,7 +2800,7 @@ bool CChainState::InvalidateBlock(BlockValidationState& state, CBlockIndex* pind\n         // ActivateBestChain considers blocks already in m_chain\n         // unconditionally valid already, so force disconnect away from it.\n         DisconnectedBlockTransactions disconnectpool;\n-        bool ret = DisconnectTip(state, &disconnectpool);\n+        bool ret = DisconnectTip(state, disconnectpool);\n         // DisconnectTip will add transactions to disconnectpool.\n         // Adjust the mempool to be consistent with the new tip, adding\n         // transactions back to the mempool if disconnecting was successful,"
      },
      {
        "sha": "d5c3d9647b7018acdd2e4160254208b0816316a0",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8dff79caaa23bee8d2e029a25c07868c5ef2f4/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8dff79caaa23bee8d2e029a25c07868c5ef2f4/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fa8dff79caaa23bee8d2e029a25c07868c5ef2f4",
        "patch": "@@ -732,8 +732,8 @@ class CChainState\n     bool ConnectBlock(const CBlock& block, BlockValidationState& state, CBlockIndex* pindex,\n                       CCoinsViewCache& view, bool fJustCheck = false) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    // Apply the effects of a block disconnection on the UTXO set.\n-    bool DisconnectTip(BlockValidationState& state, DisconnectedBlockTransactions* disconnectpool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_mempool->cs);\n+    /** Apply the effects of a block disconnection on the UTXO set. */\n+    bool DisconnectTip(BlockValidationState& state, DisconnectedBlockTransactions& disconnectpool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_mempool->cs);\n \n     // Manual block validity manipulation:\n     /** Mark a block as precious and reorganize."
      }
    ]
  }
]