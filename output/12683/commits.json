[
  {
    "sha": "2761bca99753951e1ad8bf51e3fce8fd309b4612",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzYxYmNhOTk3NTM5NTFlMWFkOGJmNTFlM2ZjZThmZDMwOWI0NjEy",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-03-13T23:35:01Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-03-14T00:04:28Z"
      },
      "message": "Merge READWRITEMANY into READWRITE",
      "tree": {
        "sha": "18cca7342fffb4576087794fba105c2f76d7ed5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18cca7342fffb4576087794fba105c2f76d7ed5f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2761bca99753951e1ad8bf51e3fce8fd309b4612",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2761bca99753951e1ad8bf51e3fce8fd309b4612",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2761bca99753951e1ad8bf51e3fce8fd309b4612",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2761bca99753951e1ad8bf51e3fce8fd309b4612/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0630974647dacaf25e7fcb7f9cbb785bb078ede6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0630974647dacaf25e7fcb7f9cbb785bb078ede6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0630974647dacaf25e7fcb7f9cbb785bb078ede6"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 2,
      "deletions": 28
    },
    "files": [
      {
        "sha": "862fe39e457593f45b957f1223e5ad125446b119",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 1,
        "deletions": 27,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2761bca99753951e1ad8bf51e3fce8fd309b4612/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2761bca99753951e1ad8bf51e3fce8fd309b4612/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=2761bca99753951e1ad8bf51e3fce8fd309b4612",
        "patch": "@@ -148,8 +148,7 @@ enum\n     SER_GETHASH         = (1 << 2),\n };\n \n-#define READWRITE(obj)      (::SerReadWrite(s, (obj), ser_action))\n-#define READWRITEMANY(...)      (::SerReadWriteMany(s, ser_action, __VA_ARGS__))\n+#define READWRITE(...)      (::SerReadWriteMany(s, ser_action, __VA_ARGS__))\n \n /** \n  * Implement three methods for serializable objects. These are actually wrappers over\n@@ -825,19 +824,6 @@ struct CSerActionUnserialize\n     constexpr bool ForRead() const { return true; }\n };\n \n-template<typename Stream, typename T>\n-inline void SerReadWrite(Stream& s, const T& obj, CSerActionSerialize ser_action)\n-{\n-    ::Serialize(s, obj);\n-}\n-\n-template<typename Stream, typename T>\n-inline void SerReadWrite(Stream& s, T& obj, CSerActionUnserialize ser_action)\n-{\n-    ::Unserialize(s, obj);\n-}\n-\n-\n \n \n \n@@ -897,12 +883,6 @@ void SerializeMany(Stream& s)\n {\n }\n \n-template<typename Stream, typename Arg>\n-void SerializeMany(Stream& s, Arg&& arg)\n-{\n-    ::Serialize(s, std::forward<Arg>(arg));\n-}\n-\n template<typename Stream, typename Arg, typename... Args>\n void SerializeMany(Stream& s, Arg&& arg, Args&&... args)\n {\n@@ -915,12 +895,6 @@ inline void UnserializeMany(Stream& s)\n {\n }\n \n-template<typename Stream, typename Arg>\n-inline void UnserializeMany(Stream& s, Arg& arg)\n-{\n-    ::Unserialize(s, arg);\n-}\n-\n template<typename Stream, typename Arg, typename... Args>\n inline void UnserializeMany(Stream& s, Arg& arg, Args&... args)\n {"
      },
      {
        "sha": "42fd59380a7092994843f8a7a636ce43a2828645",
        "filename": "src/test/serialize_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2761bca99753951e1ad8bf51e3fce8fd309b4612/src/test/serialize_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2761bca99753951e1ad8bf51e3fce8fd309b4612/src/test/serialize_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/serialize_tests.cpp?ref=2761bca99753951e1ad8bf51e3fce8fd309b4612",
        "patch": "@@ -53,7 +53,7 @@ class CSerializeMethodsTestMany : public CSerializeMethodsTestSingle\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITEMANY(intval, boolval, stringval, FLATDATA(charstrval), txval);\n+        READWRITE(intval, boolval, stringval, FLATDATA(charstrval), txval);\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "172f5fa738d419efda99542e2ad2a0f4db5be580",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzJmNWZhNzM4ZDQxOWVmZGE5OTU0MmUyYWQyYTBmNGRiNWJlNTgw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-07-08T02:09:55Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-03-14T00:04:31Z"
      },
      "message": "Support deserializing into temporaries\n\nCurrently, the READWRITE macro cannot be passed any non-const temporaries, as\nthe SerReadWrite function only accepts lvalue references.\n\nDeserializing into a temporary is very common, however. See for example\nthings like 's >> VARINT(n)'. The VARINT macro produces a temporary wrapper\nthat holds a reference to n.\n\nFix this by accepting non-const rvalue references instead of lvalue references.\nWe don't propagate the rvalue-ness down, as there are no useful optimizations\nthat only apply to temporaries.\n\nThen use this new functionality to get rid of many (but not all) uses of the\n'REF' macro (which casts away constness).",
      "tree": {
        "sha": "49cf2358dac3b441f03f39fd7329c796ebfe474c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49cf2358dac3b441f03f39fd7329c796ebfe474c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/172f5fa738d419efda99542e2ad2a0f4db5be580",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/172f5fa738d419efda99542e2ad2a0f4db5be580",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/172f5fa738d419efda99542e2ad2a0f4db5be580",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/172f5fa738d419efda99542e2ad2a0f4db5be580/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2761bca99753951e1ad8bf51e3fce8fd309b4612",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2761bca99753951e1ad8bf51e3fce8fd309b4612",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2761bca99753951e1ad8bf51e3fce8fd309b4612"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 28,
      "deletions": 28
    },
    "files": [
      {
        "sha": "f80821aa65be1772c70f3e9cd5801b5aea0ac056",
        "filename": "src/blockencodings.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/172f5fa738d419efda99542e2ad2a0f4db5be580/src/blockencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/172f5fa738d419efda99542e2ad2a0f4db5be580/src/blockencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.h?ref=172f5fa738d419efda99542e2ad2a0f4db5be580",
        "patch": "@@ -90,11 +90,11 @@ class BlockTransactions {\n             while (txn.size() < txn_size) {\n                 txn.resize(std::min((uint64_t)(1000 + txn.size()), txn_size));\n                 for (; i < txn.size(); i++)\n-                    READWRITE(REF(TransactionCompressor(txn[i])));\n+                    READWRITE(TransactionCompressor(txn[i]));\n             }\n         } else {\n             for (size_t i = 0; i < txn.size(); i++)\n-                READWRITE(REF(TransactionCompressor(txn[i])));\n+                READWRITE(TransactionCompressor(txn[i]));\n         }\n     }\n };\n@@ -115,7 +115,7 @@ struct PrefilledTransaction {\n         if (idx > std::numeric_limits<uint16_t>::max())\n             throw std::ios_base::failure(\"index overflowed 16-bits\");\n         index = idx;\n-        READWRITE(REF(TransactionCompressor(tx)));\n+        READWRITE(TransactionCompressor(tx));\n     }\n };\n "
      },
      {
        "sha": "a73f016a3112727723ff3650fb9ef5c458d24ce3",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/172f5fa738d419efda99542e2ad2a0f4db5be580/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/172f5fa738d419efda99542e2ad2a0f4db5be580/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=172f5fa738d419efda99542e2ad2a0f4db5be580",
        "patch": "@@ -69,7 +69,7 @@ class Coin\n         ::Unserialize(s, VARINT(code));\n         nHeight = code >> 1;\n         fCoinBase = code & 1;\n-        ::Unserialize(s, REF(CTxOutCompressor(out)));\n+        ::Unserialize(s, CTxOutCompressor(out));\n     }\n \n     bool IsSpent() const {"
      },
      {
        "sha": "6fcecd27e9150d64855b7539ed87de6afb6a4415",
        "filename": "src/compressor.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/172f5fa738d419efda99542e2ad2a0f4db5be580/src/compressor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/172f5fa738d419efda99542e2ad2a0f4db5be580/src/compressor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.h?ref=172f5fa738d419efda99542e2ad2a0f4db5be580",
        "patch": "@@ -73,7 +73,7 @@ class CScriptCompressor\n         s >> VARINT(nSize);\n         if (nSize < nSpecialScripts) {\n             std::vector<unsigned char> vch(GetSpecialSize(nSize), 0x00);\n-            s >> REF(CFlatData(vch));\n+            s >> CFlatData(vch);\n             Decompress(nSize, vch);\n             return;\n         }\n@@ -84,7 +84,7 @@ class CScriptCompressor\n             s.ignore(nSize);\n         } else {\n             script.resize(nSize);\n-            s >> REF(CFlatData(script));\n+            s >> CFlatData(script);\n         }\n     }\n };"
      },
      {
        "sha": "75353e0c0f265d30459c8c823f2757c00a541fde",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/172f5fa738d419efda99542e2ad2a0f4db5be580/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/172f5fa738d419efda99542e2ad2a0f4db5be580/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=172f5fa738d419efda99542e2ad2a0f4db5be580",
        "patch": "@@ -173,7 +173,7 @@ class CHashVerifier : public CHashWriter\n     }\n \n     template<typename T>\n-    CHashVerifier<Source>& operator>>(T& obj)\n+    CHashVerifier<Source>& operator>>(T&& obj)\n     {\n         // Unserialize from this stream\n         ::Unserialize(*this, obj);"
      },
      {
        "sha": "8cc44b675ffe0271e9e908da0d4d16e3cca83bab",
        "filename": "src/script/bitcoinconsensus.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/172f5fa738d419efda99542e2ad2a0f4db5be580/src/script/bitcoinconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/172f5fa738d419efda99542e2ad2a0f4db5be580/src/script/bitcoinconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.cpp?ref=172f5fa738d419efda99542e2ad2a0f4db5be580",
        "patch": "@@ -40,7 +40,7 @@ class TxInputStream\n     }\n \n     template<typename T>\n-    TxInputStream& operator>>(T& obj)\n+    TxInputStream& operator>>(T&& obj)\n     {\n         ::Unserialize(*this, obj);\n         return *this;"
      },
      {
        "sha": "c454ba16b7556c27c677775fbf4b79b03f0db015",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/172f5fa738d419efda99542e2ad2a0f4db5be580/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/172f5fa738d419efda99542e2ad2a0f4db5be580/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=172f5fa738d419efda99542e2ad2a0f4db5be580",
        "patch": "@@ -350,10 +350,10 @@ I ReadVarInt(Stream& is)\n     }\n }\n \n-#define FLATDATA(obj) REF(CFlatData((char*)&(obj), (char*)&(obj) + sizeof(obj)))\n-#define VARINT(obj) REF(WrapVarInt(REF(obj)))\n-#define COMPACTSIZE(obj) REF(CCompactSize(REF(obj)))\n-#define LIMITED_STRING(obj,n) REF(LimitedString< n >(REF(obj)))\n+#define FLATDATA(obj) CFlatData((char*)&(obj), (char*)&(obj) + sizeof(obj))\n+#define VARINT(obj) WrapVarInt(REF(obj))\n+#define COMPACTSIZE(obj) CCompactSize(REF(obj))\n+#define LIMITED_STRING(obj,n) LimitedString< n >(REF(obj))\n \n /** \n  * Wrapper for serializing arrays and POD.\n@@ -538,7 +538,7 @@ inline void Serialize(Stream& os, const T& a)\n }\n \n template<typename Stream, typename T>\n-inline void Unserialize(Stream& is, T& a)\n+inline void Unserialize(Stream& is, T&& a)\n {\n     a.Unserialize(is);\n }\n@@ -884,10 +884,10 @@ void SerializeMany(Stream& s)\n }\n \n template<typename Stream, typename Arg, typename... Args>\n-void SerializeMany(Stream& s, Arg&& arg, Args&&... args)\n+void SerializeMany(Stream& s, const Arg& arg, const Args&... args)\n {\n-    ::Serialize(s, std::forward<Arg>(arg));\n-    ::SerializeMany(s, std::forward<Args>(args)...);\n+    ::Serialize(s, arg);\n+    ::SerializeMany(s, args...);\n }\n \n template<typename Stream>\n@@ -896,20 +896,20 @@ inline void UnserializeMany(Stream& s)\n }\n \n template<typename Stream, typename Arg, typename... Args>\n-inline void UnserializeMany(Stream& s, Arg& arg, Args&... args)\n+inline void UnserializeMany(Stream& s, Arg&& arg, Args&&... args)\n {\n     ::Unserialize(s, arg);\n     ::UnserializeMany(s, args...);\n }\n \n template<typename Stream, typename... Args>\n-inline void SerReadWriteMany(Stream& s, CSerActionSerialize ser_action, Args&&... args)\n+inline void SerReadWriteMany(Stream& s, CSerActionSerialize ser_action, const Args&... args)\n {\n-    ::SerializeMany(s, std::forward<Args>(args)...);\n+    ::SerializeMany(s, args...);\n }\n \n template<typename Stream, typename... Args>\n-inline void SerReadWriteMany(Stream& s, CSerActionUnserialize ser_action, Args&... args)\n+inline void SerReadWriteMany(Stream& s, CSerActionUnserialize ser_action, Args&&... args)\n {\n     ::UnserializeMany(s, args...);\n }"
      },
      {
        "sha": "6ba4f103daa7a5cf96b4c47b5fc442e11ef808e4",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/172f5fa738d419efda99542e2ad2a0f4db5be580/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/172f5fa738d419efda99542e2ad2a0f4db5be580/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=172f5fa738d419efda99542e2ad2a0f4db5be580",
        "patch": "@@ -42,7 +42,7 @@ class OverrideStream\n     }\n \n     template<typename T>\n-    OverrideStream<Stream>& operator>>(T& obj)\n+    OverrideStream<Stream>& operator>>(T&& obj)\n     {\n         // Unserialize from this stream\n         ::Unserialize(*this, obj);\n@@ -399,7 +399,7 @@ class CDataStream\n     }\n \n     template<typename T>\n-    CDataStream& operator>>(T& obj)\n+    CDataStream& operator>>(T&& obj)\n     {\n         // Unserialize from this stream\n         ::Unserialize(*this, obj);\n@@ -543,7 +543,7 @@ class CAutoFile\n     }\n \n     template<typename T>\n-    CAutoFile& operator>>(T& obj)\n+    CAutoFile& operator>>(T&& obj)\n     {\n         // Unserialize from this stream\n         if (!file)\n@@ -686,7 +686,7 @@ class CBufferedFile\n     }\n \n     template<typename T>\n-    CBufferedFile& operator>>(T& obj) {\n+    CBufferedFile& operator>>(T&& obj) {\n         // Unserialize from this stream\n         ::Unserialize(*this, obj);\n         return (*this);"
      },
      {
        "sha": "7a1d920117a58c0ef305f89351253c0e9b537be4",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/172f5fa738d419efda99542e2ad2a0f4db5be580/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/172f5fa738d419efda99542e2ad2a0f4db5be580/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=172f5fa738d419efda99542e2ad2a0f4db5be580",
        "patch": "@@ -348,7 +348,7 @@ class CCoins\n         vout.assign(vAvail.size(), CTxOut());\n         for (unsigned int i = 0; i < vAvail.size(); i++) {\n             if (vAvail[i])\n-                ::Unserialize(s, REF(CTxOutCompressor(vout[i])));\n+                ::Unserialize(s, CTxOutCompressor(vout[i]));\n         }\n         // coinbase height\n         ::Unserialize(s, VARINT(nHeight));"
      },
      {
        "sha": "7aae034de26a75eb469799d5ac8f80340fdb22d2",
        "filename": "src/undo.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/172f5fa738d419efda99542e2ad2a0f4db5be580/src/undo.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/172f5fa738d419efda99542e2ad2a0f4db5be580/src/undo.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/undo.h?ref=172f5fa738d419efda99542e2ad2a0f4db5be580",
        "patch": "@@ -54,7 +54,7 @@ class TxInUndoDeserializer\n             int nVersionDummy;\n             ::Unserialize(s, VARINT(nVersionDummy));\n         }\n-        ::Unserialize(s, REF(CTxOutCompressor(REF(txout->out))));\n+        ::Unserialize(s, CTxOutCompressor(REF(txout->out)));\n     }\n \n     explicit TxInUndoDeserializer(Coin* coin) : txout(coin) {}\n@@ -76,7 +76,7 @@ class CTxUndo\n         uint64_t count = vprevout.size();\n         ::Serialize(s, COMPACTSIZE(REF(count)));\n         for (const auto& prevout : vprevout) {\n-            ::Serialize(s, REF(TxInUndoSerializer(&prevout)));\n+            ::Serialize(s, TxInUndoSerializer(&prevout));\n         }\n     }\n \n@@ -90,7 +90,7 @@ class CTxUndo\n         }\n         vprevout.resize(count);\n         for (auto& prevout : vprevout) {\n-            ::Unserialize(s, REF(TxInUndoDeserializer(&prevout)));\n+            ::Unserialize(s, TxInUndoDeserializer(&prevout));\n         }\n     }\n };"
      }
    ]
  }
]