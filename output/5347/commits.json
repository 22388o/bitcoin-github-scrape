[
  {
    "sha": "93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5M2M3YzNhYmEzNTY2Y2M3ZmQ1YmQ3ZjhlOTk3OWU1ZDBlOWM1ZjEy",
    "commit": {
      "author": {
        "name": "Andrew Poelstra",
        "email": "apoelstra@wpsoftware.net",
        "date": "2014-11-04T17:30:31Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-11-05T19:48:02Z"
      },
      "message": "CCoinsViewMemPool cleanup\n\nMove the mempool lock into CCoinsViewMemPool, since the existing code\nalways manually locks the mempool (with the lock having same lifetime\nas the view!).\n\nMove a call to CMempool::pruneSpent into CCoinsViewMemPool::GetCoins,\nsince CCoinsViewMemPool::GetCoins is called only once in the codebase,\nfollowed by a call to pruneSpent with a `TODO` suggesting it be moved.",
      "tree": {
        "sha": "07f56e9276ad5ec19918c7e1ab493e3e14e42f42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/07f56e9276ad5ec19918c7e1ab493e3e14e42f42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12/comments",
    "author": {
      "login": "apoelstra",
      "id": 1351933,
      "node_id": "MDQ6VXNlcjEzNTE5MzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/apoelstra",
      "html_url": "https://github.com/apoelstra",
      "followers_url": "https://api.github.com/users/apoelstra/followers",
      "following_url": "https://api.github.com/users/apoelstra/following{/other_user}",
      "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
      "organizations_url": "https://api.github.com/users/apoelstra/orgs",
      "repos_url": "https://api.github.com/users/apoelstra/repos",
      "events_url": "https://api.github.com/users/apoelstra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/apoelstra/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6e80e401716b0ac15b2bf3c53fd07571de2b3d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6e80e401716b0ac15b2bf3c53fd07571de2b3d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6e80e401716b0ac15b2bf3c53fd07571de2b3d7"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "3c197baaca1befd5c2d4841d3c01499ed7a967bf",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12",
        "patch": "@@ -850,7 +850,6 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         CAmount nValueIn = 0;\n         {\n-        LOCK(pool.cs);\n         CCoinsViewMemPool viewMemPool(pcoinsTip, pool);\n         view.SetBackend(viewMemPool);\n "
      },
      {
        "sha": "f2d86c9b003227d684aa08882a3f93a99bf35bae",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12",
        "patch": "@@ -508,11 +508,9 @@ UniValue gettxout(const UniValue& params, bool fHelp)\n \n     CCoins coins;\n     if (fMempool) {\n-        LOCK(mempool.cs);\n         CCoinsViewMemPool view(pcoinsTip, mempool);\n         if (!view.GetCoins(hash, coins))\n             return NullUniValue;\n-        mempool.pruneSpent(hash, coins); // TODO: this should be done by the CCoinsViewMemPool\n     } else {\n         if (!pcoinsTip->GetCoins(hash, coins))\n             return NullUniValue;"
      },
      {
        "sha": "1d0d002fd5d73527c216fcccd3bf0c518338866f",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12",
        "patch": "@@ -627,7 +627,6 @@ UniValue signrawtransaction(const UniValue& params, bool fHelp)\n     CCoinsView viewDummy;\n     CCoinsViewCache view(&viewDummy);\n     {\n-        LOCK(mempool.cs);\n         CCoinsViewCache &viewChain = *pcoinsTip;\n         CCoinsViewMemPool viewMempool(&viewChain, mempool);\n         view.SetBackend(viewMempool); // temporarily switch cache backend to db+mempool view"
      },
      {
        "sha": "5ac43ea7fd599d4631c368416c6be05f8ba7ca38",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12",
        "patch": "@@ -778,7 +778,10 @@ bool CTxMemPool::HasNoInputsOf(const CTransaction &tx) const\n     return true;\n }\n \n-CCoinsViewMemPool::CCoinsViewMemPool(CCoinsView *baseIn, CTxMemPool &mempoolIn) : CCoinsViewBacked(baseIn), mempool(mempoolIn) { }\n+CCoinsViewMemPool::CCoinsViewMemPool(CCoinsView *baseIn, CTxMemPool &mempoolIn)\n+    : CCoinsViewBacked(baseIn),\n+      criticalBlock(mempoolIn.cs, \"CCoinsViewMemPool_lock\", __FILE__, __LINE__),\n+      mempool(mempoolIn) {}\n \n bool CCoinsViewMemPool::GetCoins(const uint256 &txid, CCoins &coins) const {\n     // If an entry in the mempool exists, always return that one, as it's guaranteed to never\n@@ -787,6 +790,7 @@ bool CCoinsViewMemPool::GetCoins(const uint256 &txid, CCoins &coins) const {\n     CTransaction tx;\n     if (mempool.lookup(txid, tx)) {\n         coins = CCoins(tx, MEMPOOL_HEIGHT);\n+        mempool.pruneSpent(txid, coins);\n         return true;\n     }\n     return (base->GetCoins(txid, coins) && !coins.IsPruned());"
      },
      {
        "sha": "42fa0e7f1c414f2c80a809781d99a0c618f894eb",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12",
        "patch": "@@ -516,6 +516,7 @@ class CTxMemPool\n class CCoinsViewMemPool : public CCoinsViewBacked\n {\n protected:\n+    CCriticalBlock criticalBlock;\n     CTxMemPool &mempool;\n \n public:"
      }
    ]
  },
  {
    "sha": "4c904bf722d0a2f2c92f46e6d313ce314bec45f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YzkwNGJmNzIyZDBhMmYyYzkyZjQ2ZTZkMzEzY2UzMTRiZWM0NWYw",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2014-12-21T02:10:08Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-11-05T19:48:06Z"
      },
      "message": "Move pruneSpent call to apply to non-mempool coins as well",
      "tree": {
        "sha": "f38aa0ad3fc50779a167c078ae67e61b4ffdcc19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f38aa0ad3fc50779a167c078ae67e61b4ffdcc19"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c904bf722d0a2f2c92f46e6d313ce314bec45f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c904bf722d0a2f2c92f46e6d313ce314bec45f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4c904bf722d0a2f2c92f46e6d313ce314bec45f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c904bf722d0a2f2c92f46e6d313ce314bec45f0/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93c7c3aba3566cc7fd5bd7f8e9979e5d0e9c5f12"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "7eb06bc41c018c3d08a20078c7e9657985ced1bf",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c904bf722d0a2f2c92f46e6d313ce314bec45f0/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c904bf722d0a2f2c92f46e6d313ce314bec45f0/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=4c904bf722d0a2f2c92f46e6d313ce314bec45f0",
        "patch": "@@ -788,12 +788,12 @@ bool CCoinsViewMemPool::GetCoins(const uint256 &txid, CCoins &coins) const {\n     // conflict with the underlying cache, and it cannot have pruned entries (as it contains full)\n     // transactions. First checking the underlying cache risks returning a pruned entry instead.\n     CTransaction tx;\n-    if (mempool.lookup(txid, tx)) {\n+    if (mempool.lookup(txid, tx))\n         coins = CCoins(tx, MEMPOOL_HEIGHT);\n-        mempool.pruneSpent(txid, coins);\n-        return true;\n-    }\n-    return (base->GetCoins(txid, coins) && !coins.IsPruned());\n+    else if (!base->GetCoins(txid, coins) || coins.IsPruned())\n+        return false;\n+    mempool.pruneSpent(txid, coins);\n+    return true;\n }\n \n bool CCoinsViewMemPool::HaveCoins(const uint256 &txid) const {"
      }
    ]
  },
  {
    "sha": "d3cc9f8314e553b0e37cc2c71f649dcbd6304163",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkM2NjOWY4MzE0ZTU1M2IwZTM3Y2MyYzcxZjY0OWRjYmQ2MzA0MTYz",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2014-11-21T21:50:56Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-11-05T19:54:17Z"
      },
      "message": "Remove a dup check from AcceptToMemoryPool, make mapNextTx private",
      "tree": {
        "sha": "cd627f135eb73507d53391f43a8b7227eefa3727",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd627f135eb73507d53391f43a8b7227eefa3727"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3cc9f8314e553b0e37cc2c71f649dcbd6304163",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3cc9f8314e553b0e37cc2c71f649dcbd6304163",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3cc9f8314e553b0e37cc2c71f649dcbd6304163",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3cc9f8314e553b0e37cc2c71f649dcbd6304163/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4c904bf722d0a2f2c92f46e6d313ce314bec45f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c904bf722d0a2f2c92f46e6d313ce314bec45f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4c904bf722d0a2f2c92f46e6d313ce314bec45f0"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 1,
      "deletions": 15
    },
    "files": [
      {
        "sha": "632a18ef1294df0fdd282c83ff2e4d4065f9e978",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3cc9f8314e553b0e37cc2c71f649dcbd6304163/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3cc9f8314e553b0e37cc2c71f649dcbd6304163/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d3cc9f8314e553b0e37cc2c71f649dcbd6304163",
        "patch": "@@ -830,20 +830,6 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n     if (pool.exists(hash))\n         return state.Invalid(false, REJECT_ALREADY_KNOWN, \"txn-already-in-mempool\");\n \n-    // Check for conflicts with in-memory transactions\n-    {\n-    LOCK(pool.cs); // protect pool.mapNextTx\n-    for (unsigned int i = 0; i < tx.vin.size(); i++)\n-    {\n-        COutPoint outpoint = tx.vin[i].prevout;\n-        if (pool.mapNextTx.count(outpoint))\n-        {\n-            // Disable replacement feature for now\n-            return state.Invalid(false, REJECT_CONFLICT, \"txn-mempool-conflict\");\n-        }\n-    }\n-    }\n-\n     {\n         CCoinsView dummy;\n         CCoinsViewCache view(&dummy);"
      },
      {
        "sha": "5028bfc42b2dd5d36283bd24fae73b4fd89a2052",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3cc9f8314e553b0e37cc2c71f649dcbd6304163/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3cc9f8314e553b0e37cc2c71f649dcbd6304163/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=d3cc9f8314e553b0e37cc2c71f649dcbd6304163",
        "patch": "@@ -327,6 +327,7 @@ class CTxMemPool\n \n private:\n     typedef std::map<txiter, setEntries, CompareIteratorByHash> cacheMap;\n+    std::map<COutPoint, CInPoint> mapNextTx;\n \n     struct TxLinks {\n         setEntries parents;\n@@ -342,7 +343,6 @@ class CTxMemPool\n     void UpdateChild(txiter entry, txiter child, bool add);\n \n public:\n-    std::map<COutPoint, CInPoint> mapNextTx;\n     std::map<uint256, std::pair<double, CAmount> > mapDeltas;\n \n     /** Create a new CTxMemPool."
      }
    ]
  },
  {
    "sha": "27662b4f1beaba6798d3ac3e16e49af22393f866",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzY2MmI0ZjFiZWFiYTY3OThkM2FjM2UxNmU0OWFmMjIzOTNmODY2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2014-12-21T02:33:23Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-11-05T19:54:18Z"
      },
      "message": "Add basic mempool-reject-doublespend test",
      "tree": {
        "sha": "8a8d44c56570b75873e3aa6a56c2ce57fe1ad75f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a8d44c56570b75873e3aa6a56c2ce57fe1ad75f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27662b4f1beaba6798d3ac3e16e49af22393f866",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27662b4f1beaba6798d3ac3e16e49af22393f866",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27662b4f1beaba6798d3ac3e16e49af22393f866",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27662b4f1beaba6798d3ac3e16e49af22393f866/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d3cc9f8314e553b0e37cc2c71f649dcbd6304163",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3cc9f8314e553b0e37cc2c71f649dcbd6304163",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3cc9f8314e553b0e37cc2c71f649dcbd6304163"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 63,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e34b9eca71426cf1056faa11025ae7cdaecdd966",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27662b4f1beaba6798d3ac3e16e49af22393f866/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27662b4f1beaba6798d3ac3e16e49af22393f866/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=27662b4f1beaba6798d3ac3e16e49af22393f866",
        "patch": "@@ -56,6 +56,7 @@\n     'rest.py',\n     'mempool_spendcoinbase.py',\n     'mempool_coinbase_spends.py',\n+    'mempool_reject_doublespend.py',\n     'httpbasics.py',\n     'zapwallettxes.py',\n     'proxy_test.py',"
      },
      {
        "sha": "199d35a4e552e8b0de3961174d4701152425090b",
        "filename": "qa/rpc-tests/mempool_reject_doublespend.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27662b4f1beaba6798d3ac3e16e49af22393f866/qa/rpc-tests/mempool_reject_doublespend.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27662b4f1beaba6798d3ac3e16e49af22393f866/qa/rpc-tests/mempool_reject_doublespend.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_reject_doublespend.py?ref=27662b4f1beaba6798d3ac3e16e49af22393f866",
        "patch": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test rejection of double-spends in mempool\n+# Brought on by bugs in the original #5347\n+#\n+\n+from test_framework import BitcoinTestFramework\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+import os\n+import shutil\n+\n+# Create one-input, one-output, no-fee transaction:\n+class MempoolSpendCoinbaseTest(BitcoinTestFramework):\n+\n+    def setup_network(self):\n+        # Just need one node for this test\n+        args = [\"-checkmempool\", \"-debug=mempool\", \"-relaypriority=0\"]\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir, args))\n+        self.is_network_split = False\n+\n+    def create_tx(self, from_txid, to_address, amount):\n+        inputs = [{ \"txid\" : from_txid, \"vout\" : 0}]\n+        outputs = { to_address : amount }\n+        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        signresult = self.nodes[0].signrawtransaction(rawtx)\n+        assert_equal(signresult[\"complete\"], True)\n+        return signresult[\"hex\"]\n+\n+    def run_test(self):\n+        chain_height = self.nodes[0].getblockcount()\n+        assert_equal(chain_height, 200)\n+\n+        coinbase_txid = self.nodes[0].getblock(self.nodes[0].getblockhash(101))['tx'][0]\n+        tx1 = self.create_tx(coinbase_txid, self.nodes[0].getnewaddress(), 50)\n+        tx2 = self.create_tx(coinbase_txid, self.nodes[0].getnewaddress(), 50)\n+\n+        spend_id = self.nodes[0].sendrawtransaction(tx1)\n+        assert_raises(JSONRPCException, self.nodes[0].sendrawtransaction, tx2)\n+\n+        # mempool should have just spend_101:\n+        assert_equal(self.nodes[0].getrawmempool(), [ spend_id ])\n+\n+        tx3 = self.create_tx(spend_id, self.nodes[0].getnewaddress(), 50)\n+        tx4 = self.create_tx(spend_id, self.nodes[0].getnewaddress(), 50)\n+\n+        spend2_id = self.nodes[0].sendrawtransaction(tx3)\n+        assert_raises(JSONRPCException, self.nodes[0].sendrawtransaction, tx4)\n+\n+        assert_equal(sorted(self.nodes[0].getrawmempool()), sorted([ spend_id, spend2_id ]))\n+\n+        # mine a block, spend_101 should get confirmed\n+        self.nodes[0].setgenerate(True, 1)\n+        assert_equal(set(self.nodes[0].getrawmempool()), set())\n+\n+if __name__ == '__main__':\n+    MempoolSpendCoinbaseTest().main()"
      }
    ]
  }
]