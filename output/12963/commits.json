[
  {
    "sha": "fd447a6efea84d7215ab471bf04284f060e9e3c3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDQ0N2E2ZWZlYTg0ZDcyMTVhYjQ3MWJmMDQyODRmMDYwZTllM2Mz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-04-12T06:25:45Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-04-12T12:37:53Z"
      },
      "message": "Fix dead stores. Values were stored but never read. Limit scope.",
      "tree": {
        "sha": "f58cca37a6ab5e6a8ed228fa1370eaeba2d72aa4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f58cca37a6ab5e6a8ed228fa1370eaeba2d72aa4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd447a6efea84d7215ab471bf04284f060e9e3c3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd447a6efea84d7215ab471bf04284f060e9e3c3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd447a6efea84d7215ab471bf04284f060e9e3c3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd447a6efea84d7215ab471bf04284f060e9e3c3/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "39439e5ab4195bb1abebd2c8b1ac702bc33c2e60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39439e5ab4195bb1abebd2c8b1ac702bc33c2e60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/39439e5ab4195bb1abebd2c8b1ac702bc33c2e60"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 5,
      "deletions": 11
    },
    "files": [
      {
        "sha": "b082f0f2abd40b4752ebc8c6c0c8339443c58427",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd447a6efea84d7215ab471bf04284f060e9e3c3/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd447a6efea84d7215ab471bf04284f060e9e3c3/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=fd447a6efea84d7215ab471bf04284f060e9e3c3",
        "patch": "@@ -950,6 +950,7 @@ static void TestOtherProcess(fs::path dirname, std::string lockname, int fd)\n             ReleaseDirectoryLocks();\n             ch = true; // Always succeeds\n             rv = write(fd, &ch, 1);\n+            assert(rv == 1);\n             break;\n         case ExitCommand:\n             close(fd);"
      },
      {
        "sha": "e90370cf068b0ce63194928df695482dea4bdb08",
        "filename": "src/wallet/test/coinselector_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 11,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd447a6efea84d7215ab471bf04284f060e9e3c3/src/wallet/test/coinselector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd447a6efea84d7215ab471bf04284f060e9e3c3/src/wallet/test/coinselector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/coinselector_tests.cpp?ref=fd447a6efea84d7215ab471bf04284f060e9e3c3",
        "patch": "@@ -536,19 +536,9 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n     std::exponential_distribution<double> distribution (100);\n     FastRandomContext rand;\n \n-    // Output stuff\n-    CAmount out_value = 0;\n-    CoinSet out_set;\n-    CAmount target = 0;\n-    bool bnb_used;\n-\n     // Run this test 100 times\n     for (int i = 0; i < 100; ++i)\n     {\n-        // Reset\n-        out_value = 0;\n-        target = 0;\n-        out_set.clear();\n         empty_wallet();\n \n         // Make a wallet with 1000 exponentially distributed random inputs\n@@ -561,11 +551,14 @@ BOOST_AUTO_TEST_CASE(SelectCoins_test)\n         CFeeRate rate(rand.randrange(300) + 100);\n \n         // Generate a random target value between 1000 and wallet balance\n-        target = rand.randrange(balance - 1000) + 1000;\n+        CAmount target = rand.randrange(balance - 1000) + 1000;\n \n         // Perform selection\n         CoinSelectionParams coin_selection_params_knapsack(false, 34, 148, CFeeRate(0), 0);\n         CoinSelectionParams coin_selection_params_bnb(true, 34, 148, CFeeRate(0), 0);\n+        CoinSet out_set;\n+        CAmount out_value = 0;\n+        bool bnb_used = false;\n         BOOST_CHECK(testWallet.SelectCoinsMinConf(target, filter_standard, vCoins, out_set, out_value, coin_selection_params_bnb, bnb_used) ||\n                     testWallet.SelectCoinsMinConf(target, filter_standard, vCoins, out_set, out_value, coin_selection_params_knapsack, bnb_used));\n         BOOST_CHECK_GE(out_value, target);"
      }
    ]
  },
  {
    "sha": "159c32d1f111e6bad490bd23ae215462e8ba4374",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTljMzJkMWYxMTFlNmJhZDQ5MGJkMjNhZTIxNTQ2MmU4YmE0Mzc0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-04-12T06:26:56Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-04-12T12:37:53Z"
      },
      "message": "Add assertion to guide static analyzers. Clang Static Analyzer needs this guidance.",
      "tree": {
        "sha": "8992ae634d7e8aa4a336a5652cc8165302c6f284",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8992ae634d7e8aa4a336a5652cc8165302c6f284"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/159c32d1f111e6bad490bd23ae215462e8ba4374",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/159c32d1f111e6bad490bd23ae215462e8ba4374",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/159c32d1f111e6bad490bd23ae215462e8ba4374",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/159c32d1f111e6bad490bd23ae215462e8ba4374/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd447a6efea84d7215ab471bf04284f060e9e3c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd447a6efea84d7215ab471bf04284f060e9e3c3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd447a6efea84d7215ab471bf04284f060e9e3c3"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "313f3310e246b19998838393eab1ca4623d2f8c2",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/159c32d1f111e6bad490bd23ae215462e8ba4374/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/159c32d1f111e6bad490bd23ae215462e8ba4374/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=159c32d1f111e6bad490bd23ae215462e8ba4374",
        "patch": "@@ -525,6 +525,7 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n         // Need to update only after we know CreateNewBlock succeeded\n         pindexPrev = pindexPrevNew;\n     }\n+    assert(pindexPrev);\n     CBlock* pblock = &pblocktemplate->block; // pointer for convenience\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n "
      }
    ]
  }
]