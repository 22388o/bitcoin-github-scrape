[
  {
    "sha": "fa098713201a6999ec4c12d0a8bde0adcf47b095",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTA5ODcxMzIwMWE2OTk5ZWM0YzEyZDBhOGJkZTBhZGNmNDdiMDk1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-29T06:50:06Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-29T09:38:18Z"
      },
      "message": "refactor: Avoid sign-compare compiler warning in util/asmap\n\nThis reverts commit eac6a3080d38cfd4eb7204ecd327df213958e51a (\"refactor:\nRework asmap Interpret to avoid ptrdiff_t\"), because it is UB to form a\npast-the-end iterator, even if it is never dereferenced.\n\nThen fix the compiler warning in a different way:\nInstead of comparing an uint32_t against a signed ptrdiff_t, just\npromote both to a type that can represent both types.\n\nEven though in this case the ptrdiff_t should never hold a negative\nvalue, the overhead from promotion should be negligible.",
      "tree": {
        "sha": "e51748dbf633ef088405fea20c9100a8d67adc27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e51748dbf633ef088405fea20c9100a8d67adc27"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa098713201a6999ec4c12d0a8bde0adcf47b095",
      "comment_count": 3,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgohgv+NezOIWMd0iW1c1cdDpVZ9eZYQtX652YekSDLJW65gO6tIi9hPMh1Mq7H\naJ3Y2hNJVRnUE+CX+iulCVmmTdpk2ZwOqwqXLU6w71arJXAf5jXJUXZJQ1h9Cgs9\ncmF2G09pvIXngenKUta1LXkh62RyQN8qH7AgXGuvvmNW88AWz2ha+bSkmzSAPns1\nwyd25pLbw/ZMUk4vaVQoCzUqZbzLO8qzcadnnR/1LsMbgSv0REbOOU9qAjLSccB4\nuud+d7J/W9FzqoEvh3BY3EQV1iQum/rwXSCtgOpABTsRaaltinBCl7KrDQmQ1bZf\nl3O5r7XiAvZXw4p/TWj9+HUQXAZUJow0FYfG+XQKN28IgxL7FCasUUaw20vhNp7P\nXhwqbUg1QslKg6+/pSxdbHRcyJX7I5sE0S0qLkxQ0eDSVPKRYFxhdsSBJ4OwIOhS\nCpIWOBkQsiZyBRFEXDuhah28fy/fOHFte+l68wW8RxwdjEPltNANX6vr45PSz+6S\npim0ERnP\n=mCLi\n-----END PGP SIGNATURE-----",
        "payload": "tree e51748dbf633ef088405fea20c9100a8d67adc27\nparent fb66dbe786ff3028d8f2b0be503ddd3b36541798\nauthor MarcoFalke <falke.marco@gmail.com> 1619679006 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1619689098 +0200\n\nrefactor: Avoid sign-compare compiler warning in util/asmap\n\nThis reverts commit eac6a3080d38cfd4eb7204ecd327df213958e51a (\"refactor:\nRework asmap Interpret to avoid ptrdiff_t\"), because it is UB to form a\npast-the-end iterator, even if it is never dereferenced.\n\nThen fix the compiler warning in a different way:\nInstead of comparing an uint32_t against a signed ptrdiff_t, just\npromote both to a type that can represent both types.\n\nEven though in this case the ptrdiff_t should never hold a negative\nvalue, the overhead from promotion should be negligible.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa098713201a6999ec4c12d0a8bde0adcf47b095",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa098713201a6999ec4c12d0a8bde0adcf47b095",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa098713201a6999ec4c12d0a8bde0adcf47b095/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb66dbe786ff3028d8f2b0be503ddd3b36541798",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb66dbe786ff3028d8f2b0be503ddd3b36541798",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb66dbe786ff3028d8f2b0be503ddd3b36541798"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 2,
      "deletions": 4
    },
    "files": [
      {
        "sha": "bacc3690a20060cf2e25c4534b3d0d37fc4bcbe8",
        "filename": "src/util/asmap.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa098713201a6999ec4c12d0a8bde0adcf47b095/src/util/asmap.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa098713201a6999ec4c12d0a8bde0adcf47b095/src/util/asmap.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/asmap.cpp?ref=fa098713201a6999ec4c12d0a8bde0adcf47b095",
        "patch": "@@ -93,8 +93,7 @@ uint32_t Interpret(const std::vector<bool> &asmap, const std::vector<bool> &ip)\n             jump = DecodeJump(pos, endpos);\n             if (jump == INVALID) break; // Jump offset straddles EOF\n             if (bits == 0) break; // No input bits left\n-            if (pos + jump < pos) break; // overflow\n-            if (pos + jump >= endpos) break; // Jumping past EOF\n+            if (int64_t{jump} >= int64_t{endpos - pos}) break; // Jumping past EOF\n             if (ip[ip.size() - bits]) {\n                 pos += jump;\n             }\n@@ -156,8 +155,7 @@ bool SanityCheckASMap(const std::vector<bool>& asmap, int bits)\n         } else if (opcode == Instruction::JUMP) {\n             uint32_t jump = DecodeJump(pos, endpos);\n             if (jump == INVALID) return false; // Jump offset straddles EOF\n-            if (pos + jump < pos) return false; // overflow\n-            if (pos + jump > endpos) return false; // Jump out of range\n+            if (int64_t{jump} > int64_t{endpos - pos}) return false; // Jump out of range\n             if (bits == 0) return false; // Consuming bits past the end of the input\n             --bits;\n             uint32_t jump_offset = pos - begin + jump;"
      }
    ]
  }
]