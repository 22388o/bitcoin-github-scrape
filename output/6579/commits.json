[
  {
    "sha": "afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZmIwY2NhZjljOWU0ZThmYWM3ZGIzNTY0YzRlMTljOTIxOGM2YjAz",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-08-21T04:15:27Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2015-09-06T06:29:13Z"
      },
      "message": "Add NODE_BLOOM service bit and bump protocol version\n\nLets nodes advertise that they offer bloom filter support explicitly.\nThe protocol version bump allows SPV nodes to assume that NODE_BLOOM is\nset if NODE_NETWORK is set for pre-70011 nodes.\n\nAlso adds an option to turn bloom filter support off for nodes which\nadvertise a version number >= 70011. Nodes attempting to use bloom\nfilters on such protocol versions are banned, and a later upgade\nshould drop nodes of an older version which attempt to use bloom\nfilters.\n\nMuch code stolen from Peter Todd.\n\nImplements BIP 111",
      "tree": {
        "sha": "14e3b07e6ed8886d97624d73767445b69f6dcb4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/14e3b07e6ed8886d97624d73767445b69f6dcb4b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 26,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0f409098a7bbab055b1f11c58fded04dc8009125",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
        "patch": "@@ -918,6 +918,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // Option to startup with mocktime set (used for regression testing):\n     SetMockTime(GetArg(\"-mocktime\", 0)); // SetMockTime(0) is a no-op\n \n+    if (GetBoolArg(\"-peerbloomfilters\", true))\n+        nLocalServices |= NODE_BLOOM;\n+\n     // ********************************************************* Step 4: application initialization: dir lock, daemonize, pidfile, debug log\n \n     // Initialize elliptic curve code"
      },
      {
        "sha": "a880533e65010b05c1ac46d0a7d9bfa3bcbd2a98",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
        "patch": "@@ -4591,6 +4591,21 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n     }\n \n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+              (strCommand == \"filterload\" ||\n+               strCommand == \"filteradd\" ||\n+               strCommand == \"filterclear\") &&\n+              //TODO: Remove this line after reasonable network upgrade\n+              pfrom->nVersion >= NO_BLOOM_VERSION)\n+    {\n+        if (pfrom->nVersion >= NO_BLOOM_VERSION)\n+            Misbehaving(pfrom->GetId(), 100);\n+        //TODO: Enable this after reasonable network upgrade\n+        //else\n+        //    pfrom->fDisconnect = true;\n+    }\n+\n+\n     else if (strCommand == \"filterload\")\n     {\n         CBloomFilter filter;"
      },
      {
        "sha": "50aeaf44bab191b93d8a3eecdb00506ea8b0d7e7",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
        "patch": "@@ -75,6 +75,10 @@ enum {\n     // Bitcoin Core does not support this but a patch set called Bitcoin XT does.\n     // See BIP 64 for details on how this is implemented.\n     NODE_GETUTXO = (1 << 1),\n+    // NODE_BLOOM means the node is capable and willing to handle bloom-filtered connections.\n+    // Bitcoin Core nodes used to support this by default, without advertising this bit,\n+    // but no longer do as of protocol version 70011 (= NO_BLOOM_VERSION)\n+    NODE_BLOOM = (1 << 2),\n \n     // Bits 24-31 are reserved for temporary experiments. Just pick a bit that\n     // isn't getting used, or one not being used much, and notify the"
      },
      {
        "sha": "6cdddf92554d62e7085bf0169c69fccc8cfe4461",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=afb0ccaf9c9e4e8fac7db3564c4e19c9218c6b03",
        "patch": "@@ -9,7 +9,7 @@\n  * network protocol versioning\n  */\n \n-static const int PROTOCOL_VERSION = 70002;\n+static const int PROTOCOL_VERSION = 70011;\n \n //! initial proto version, to be increased after version/verack negotiation\n static const int INIT_PROTO_VERSION = 209;\n@@ -34,4 +34,7 @@ static const int BIP0031_VERSION = 60000;\n //! \"mempool\" command, enhanced \"getdata\" behavior starts with this version\n static const int MEMPOOL_GD_VERSION = 60002;\n \n+//! \"filter*\" commands are disabled without NODE_BLOOM after and including this version\n+static const int NO_BLOOM_VERSION = 70011;\n+\n #endif // BITCOIN_VERSION_H"
      }
    ]
  }
]