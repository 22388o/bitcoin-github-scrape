[
  {
    "sha": "a31e8bad53e44629b26e7f36e0431b9fa01c1ed6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzFlOGJhZDUzZTQ0NjI5YjI2ZTdmMzZlMDQzMWI5ZmEwMWMxZWQ2",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2014-10-24T14:13:41Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2014-10-24T14:13:41Z"
      },
      "message": "Make CBlockIndex* returned by GetDepthInMainChain const.\n\nMake the CBlockIndex* (optionally) returned by GetDepthInMainChain\nconst.  This prevents accidental modification.  The result is for\nreading its properties rather than modifying it.",
      "tree": {
        "sha": "ba360bbcb5471fbc049dc1e0abe225e683baa6f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba360bbcb5471fbc049dc1e0abe225e683baa6f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a31e8bad53e44629b26e7f36e0431b9fa01c1ed6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a31e8bad53e44629b26e7f36e0431b9fa01c1ed6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a31e8bad53e44629b26e7f36e0431b9fa01c1ed6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a31e8bad53e44629b26e7f36e0431b9fa01c1ed6/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3552d4b859d56726cd25baa6f1e5988050bdad33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3552d4b859d56726cd25baa6f1e5988050bdad33",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3552d4b859d56726cd25baa6f1e5988050bdad33"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "3812c22fe28e39506f0441906a41b2f40aa796dd",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a31e8bad53e44629b26e7f36e0431b9fa01c1ed6/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a31e8bad53e44629b26e7f36e0431b9fa01c1ed6/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=a31e8bad53e44629b26e7f36e0431b9fa01c1ed6",
        "patch": "@@ -2298,7 +2298,7 @@ int CMerkleTx::SetMerkleBranch(const CBlock& block)\n     return chainActive.Height() - pindex->nHeight + 1;\n }\n \n-int CMerkleTx::GetDepthInMainChainINTERNAL(CBlockIndex* &pindexRet) const\n+int CMerkleTx::GetDepthInMainChainINTERNAL(const CBlockIndex* &pindexRet) const\n {\n     if (hashBlock == 0 || nIndex == -1)\n         return 0;\n@@ -2324,7 +2324,7 @@ int CMerkleTx::GetDepthInMainChainINTERNAL(CBlockIndex* &pindexRet) const\n     return chainActive.Height() - pindex->nHeight + 1;\n }\n \n-int CMerkleTx::GetDepthInMainChain(CBlockIndex* &pindexRet) const\n+int CMerkleTx::GetDepthInMainChain(const CBlockIndex* &pindexRet) const\n {\n     AssertLockHeld(cs_main);\n     int nResult = GetDepthInMainChainINTERNAL(pindexRet);"
      },
      {
        "sha": "9b6895090c964353cf8ba1a40e984127140afd9b",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a31e8bad53e44629b26e7f36e0431b9fa01c1ed6/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a31e8bad53e44629b26e7f36e0431b9fa01c1ed6/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=a31e8bad53e44629b26e7f36e0431b9fa01c1ed6",
        "patch": "@@ -474,7 +474,7 @@ struct COutputEntry\n class CMerkleTx : public CTransaction\n {\n private:\n-    int GetDepthInMainChainINTERNAL(CBlockIndex* &pindexRet) const;\n+    int GetDepthInMainChainINTERNAL(const CBlockIndex* &pindexRet) const;\n \n public:\n     uint256 hashBlock;\n@@ -519,9 +519,9 @@ class CMerkleTx : public CTransaction\n     // -1  : not in blockchain, and not in memory pool (conflicted transaction)\n     //  0  : in memory pool, waiting to be included in a block\n     // >=1 : this many blocks deep in the main chain\n-    int GetDepthInMainChain(CBlockIndex* &pindexRet) const;\n-    int GetDepthInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n-    bool IsInMainChain() const { CBlockIndex *pindexRet; return GetDepthInMainChainINTERNAL(pindexRet) > 0; }\n+    int GetDepthInMainChain(const CBlockIndex* &pindexRet) const;\n+    int GetDepthInMainChain() const { const CBlockIndex *pindexRet; return GetDepthInMainChain(pindexRet); }\n+    bool IsInMainChain() const { const CBlockIndex *pindexRet; return GetDepthInMainChainINTERNAL(pindexRet) > 0; }\n     int GetBlocksToMaturity() const;\n     bool AcceptToMemoryPool(bool fLimitFree=true, bool fRejectInsaneFee=true);\n };"
      }
    ]
  }
]