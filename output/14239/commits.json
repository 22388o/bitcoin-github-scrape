[
  {
    "sha": "e559c73483c500467c0a55de7afccf879246fe91",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTU5YzczNDgzYzUwMDQ2N2MwYTU1ZGU3YWZjY2Y4NzkyNDZmZTkx",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-09-17T13:10:23Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-02-08T12:31:18Z"
      },
      "message": "Avoid dividing by zero",
      "tree": {
        "sha": "b37b4d5db4a653e4dd2f1ba20a74ca64c6245bfc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b37b4d5db4a653e4dd2f1ba20a74ca64c6245bfc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e559c73483c500467c0a55de7afccf879246fe91",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e559c73483c500467c0a55de7afccf879246fe91",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e559c73483c500467c0a55de7afccf879246fe91",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e559c73483c500467c0a55de7afccf879246fe91/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6fc656a410b6fa469be258414f1e26cd4b6025af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fc656a410b6fa469be258414f1e26cd4b6025af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fc656a410b6fa469be258414f1e26cd4b6025af"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 16,
      "deletions": 11
    },
    "files": [
      {
        "sha": "91bd2d9cb97542bd9636d84ef22008f7002655f0",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e559c73483c500467c0a55de7afccf879246fe91/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e559c73483c500467c0a55de7afccf879246fe91/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=e559c73483c500467c0a55de7afccf879246fe91",
        "patch": "@@ -374,14 +374,18 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n         failBucket.leftMempool = failNum;\n     }\n \n-    LogPrint(BCLog::ESTIMATEFEE, \"FeeEst: %d %s%.0f%% decay %.5f: feerate: %g from (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n+    double pass_bucket_sum = passBucket.totalConfirmed + passBucket.inMempool + passBucket.leftMempool;\n+    double fail_bucket_sum = failBucket.totalConfirmed + failBucket.inMempool + failBucket.leftMempool;\n+    if (pass_bucket_sum > 0 && fail_bucket_sum > 0) {\n+        LogPrint(BCLog::ESTIMATEFEE, \"FeeEst: %d %s%.0f%% decay %.5f: feerate: %g from (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n              confTarget, requireGreater ? \">\" : \"<\", 100.0 * successBreakPoint, decay,\n              median, passBucket.start, passBucket.end,\n-             100 * passBucket.withinTarget / (passBucket.totalConfirmed + passBucket.inMempool + passBucket.leftMempool),\n+             100 * passBucket.withinTarget / pass_bucket_sum,\n              passBucket.withinTarget, passBucket.totalConfirmed, passBucket.inMempool, passBucket.leftMempool,\n              failBucket.start, failBucket.end,\n-             100 * failBucket.withinTarget / (failBucket.totalConfirmed + failBucket.inMempool + failBucket.leftMempool),\n+             100 * failBucket.withinTarget / fail_bucket_sum,\n              failBucket.withinTarget, failBucket.totalConfirmed, failBucket.inMempool, failBucket.leftMempool);\n+    }\n \n \n     if (result) {"
      },
      {
        "sha": "6b87bbb1fef9db7c91842f98328a54eabc97d1c5",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e559c73483c500467c0a55de7afccf879246fe91/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e559c73483c500467c0a55de7afccf879246fe91/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=e559c73483c500467c0a55de7afccf879246fe91",
        "patch": "@@ -1825,6 +1825,8 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n     uint256 hashPrevBlock = pindex->pprev == nullptr ? uint256() : pindex->pprev->GetBlockHash();\n     assert(hashPrevBlock == view.GetBestBlock());\n \n+    nBlocksTotal++;\n+\n     // Special case for the genesis block, skipping connection of its transactions\n     // (its coinbase is unspendable)\n     if (block.GetHash() == chainparams.GetConsensus().hashGenesisBlock) {\n@@ -1833,8 +1835,6 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n         return true;\n     }\n \n-    nBlocksTotal++;\n-\n     bool fScriptChecks = true;\n     if (!hashAssumeValid.IsNull()) {\n         // We've been configured with the hash of a block which has been externally verified to have a valid history."
      },
      {
        "sha": "1d50ae6ac122d9338285c28d040b8a4685e9c096",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e559c73483c500467c0a55de7afccf879246fe91/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e559c73483c500467c0a55de7afccf879246fe91/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=e559c73483c500467c0a55de7afccf879246fe91",
        "patch": "@@ -3018,14 +3018,18 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n         }\n     }\n \n-    WalletLogPrintf(\"Fee Calculation: Fee:%d Bytes:%u Needed:%d Tgt:%d (requested %d) Reason:\\\"%s\\\" Decay %.5f: Estimation: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n+    double pass_bucket_sum = feeCalc.est.pass.totalConfirmed + feeCalc.est.pass.inMempool + feeCalc.est.pass.leftMempool;\n+    double fail_bucket_sum = feeCalc.est.fail.totalConfirmed + feeCalc.est.fail.inMempool + feeCalc.est.fail.leftMempool;\n+    if (pass_bucket_sum > 0 && fail_bucket_sum > 0) {\n+        WalletLogPrintf(\"Fee Calculation: Fee:%d Bytes:%u Needed:%d Tgt:%d (requested %d) Reason:\\\"%s\\\" Decay %.5f: Estimation: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n               nFeeRet, nBytes, nFeeNeeded, feeCalc.returnedTarget, feeCalc.desiredTarget, StringForFeeReason(feeCalc.reason), feeCalc.est.decay,\n               feeCalc.est.pass.start, feeCalc.est.pass.end,\n-              100 * feeCalc.est.pass.withinTarget / (feeCalc.est.pass.totalConfirmed + feeCalc.est.pass.inMempool + feeCalc.est.pass.leftMempool),\n+              100 * feeCalc.est.pass.withinTarget / pass_bucket_sum,\n               feeCalc.est.pass.withinTarget, feeCalc.est.pass.totalConfirmed, feeCalc.est.pass.inMempool, feeCalc.est.pass.leftMempool,\n               feeCalc.est.fail.start, feeCalc.est.fail.end,\n-              100 * feeCalc.est.fail.withinTarget / (feeCalc.est.fail.totalConfirmed + feeCalc.est.fail.inMempool + feeCalc.est.fail.leftMempool),\n+              100 * feeCalc.est.fail.withinTarget / fail_bucket_sum,\n               feeCalc.est.fail.withinTarget, feeCalc.est.fail.totalConfirmed, feeCalc.est.fail.inMempool, feeCalc.est.fail.leftMempool);\n+    }\n     return true;\n }\n "
      },
      {
        "sha": "0b7e075db52a02c97e3d18ac81b1b5200df6243c",
        "filename": "test/sanitizer_suppressions/ubsan",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e559c73483c500467c0a55de7afccf879246fe91/test/sanitizer_suppressions/ubsan",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e559c73483c500467c0a55de7afccf879246fe91/test/sanitizer_suppressions/ubsan",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/sanitizer_suppressions/ubsan?ref=e559c73483c500467c0a55de7afccf879246fe91",
        "patch": "@@ -1,9 +1,6 @@\n alignment:move.h\n alignment:prevector.h\n bool:wallet/wallet.cpp\n-float-divide-by-zero:policy/fees.cpp\n-float-divide-by-zero:validation.cpp\n-float-divide-by-zero:wallet/wallet.cpp\n unsigned-integer-overflow:arith_uint256.h\n unsigned-integer-overflow:basic_string.h\n unsigned-integer-overflow:bench/bench.h"
      }
    ]
  }
]