[
  {
    "sha": "c893b5501b90a45d154b9e9a14f25ec0223dfa7a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjODkzYjU1MDFiOTBhNDVkMTU0YjllOWExNGYyNWVjMDIyM2RmYTdh",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-08-12T00:25:35Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-08-12T16:40:08Z"
      },
      "message": "When parsing base58 data, accept [0O] as o, and [l|!] as 1",
      "tree": {
        "sha": "2a2cbdadb88db7375256e8bf47bba353a7623909",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a2cbdadb88db7375256e8bf47bba353a7623909"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c893b5501b90a45d154b9e9a14f25ec0223dfa7a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c893b5501b90a45d154b9e9a14f25ec0223dfa7a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c893b5501b90a45d154b9e9a14f25ec0223dfa7a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c893b5501b90a45d154b9e9a14f25ec0223dfa7a/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "498a2c9b162dd5e7281e80e364eb82f3e2b333cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/498a2c9b162dd5e7281e80e364eb82f3e2b333cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/498a2c9b162dd5e7281e80e364eb82f3e2b333cb"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 22,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3283034f74da13d2460f29366921ef6757fc4916",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 22,
        "deletions": 3,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c893b5501b90a45d154b9e9a14f25ec0223dfa7a/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c893b5501b90a45d154b9e9a14f25ec0223dfa7a/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=c893b5501b90a45d154b9e9a14f25ec0223dfa7a",
        "patch": "@@ -21,6 +21,25 @@\n \n static const char* pszBase58 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n \n+static const signed char pnDecode58[] =\n+{\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ 46,  0,  1,  2,  3,  4,  5,  6,  7,  8, -1, -1, -1, -1, -1, -1,\n+ -1,  9, 10, 11, 12, 13, 14, 15, 16,  0, 17, 18, 19, 20, 21, 46,\n+ 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, -1, -1, -1, -1, -1,\n+ -1, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,  0, 44, 45, 46,\n+ 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, -1,  0, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+};\n \n inline std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend)\n {\n@@ -80,16 +99,16 @@ inline bool DecodeBase58(const char* psz, std::vector<unsigned char>& vchRet)\n     // Convert big endian string to bignum\n     for (const char* p = psz; *p; p++)\n     {\n-        const char* p1 = strchr(pszBase58, *p);\n-        if (p1 == NULL)\n+        signed char p1 = pnDecode58[*p];\n+        if (p1 == -1)\n         {\n             while (isspace(*p))\n                 p++;\n             if (*p != '\\0')\n                 return false;\n             break;\n         }\n-        bnChar.setulong(p1 - pszBase58);\n+        bnChar.setulong(p1);\n         if (!BN_mul(&bn, &bn, &bn58, pctx))\n             throw bignum_error(\"DecodeBase58 : BN_mul failed\");\n         bn += bnChar;"
      }
    ]
  }
]