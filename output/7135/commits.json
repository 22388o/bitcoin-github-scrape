[
  {
    "sha": "fa3a38a7f269f7a33c6176975f171b93025f05d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTNhMzhhN2YyNjlmN2EzM2M2MTc2OTc1ZjE3MWI5MzAyNWYwNWQ3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-30T13:53:07Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-11-30T15:01:57Z"
      },
      "message": "[qa] pull-tester: Cleanup (run keypool, tidy stdout)\n\n* Run keypool (takes 6 seconds)\n* Print duration of each rpc test\n* Structure output (bold, new lines)",
      "tree": {
        "sha": "cb97d69acff6556c0cd9c7e7c746fdd6411b2b4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb97d69acff6556c0cd9c7e7c746fdd6411b2b4a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3a38a7f269f7a33c6176975f171b93025f05d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3a38a7f269f7a33c6176975f171b93025f05d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3a38a7f269f7a33c6176975f171b93025f05d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3a38a7f269f7a33c6176975f171b93025f05d7/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7751824ce8a7e1cc5511794516fe674bc3eaa3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7751824ce8a7e1cc5511794516fe674bc3eaa3c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7751824ce8a7e1cc5511794516fe674bc3eaa3c"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 14,
      "deletions": 5
    },
    "files": [
      {
        "sha": "7ac89e9bc130c4ed8367d1acad570fd34d6b5fe1",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3a38a7f269f7a33c6176975f171b93025f05d7/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3a38a7f269f7a33c6176975f171b93025f05d7/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=fa3a38a7f269f7a33c6176975f171b93025f05d7",
        "patch": "@@ -22,6 +22,7 @@\n \"\"\"\n \n import os\n+import time\n import shutil\n import sys\n import subprocess\n@@ -47,6 +48,10 @@\n passOn = \"\"\n p = re.compile(\"^--\")\n \n+bold = (\"\",\"\")\n+if (os.name == 'posix'):\n+    bold = ('\\033[0m', '\\033[1m')\n+\n for arg in sys.argv[1:]:\n     if arg == '--coverage':\n         ENABLE_COVERAGE = 1\n@@ -92,6 +97,7 @@\n     'blockchain.py',\n     'disablewallet.py',\n     'sendheaders.py',\n+    'keypool.py',\n ]\n testScriptsExt = [\n     'bip65-cltv.py',\n@@ -105,7 +111,6 @@\n     'pruning.py',\n     'forknotify.py',\n     'invalidateblock.py',\n-    'keypool.py',\n #    'rpcbind_test.py', #temporary, bug in libevent, see #6655\n     'smartfees.py',\n     'maxblocksinflight.py',\n@@ -126,7 +131,7 @@ def runtests():\n \n     if ENABLE_COVERAGE:\n         coverage = RPCCoverage()\n-        print(\"Initializing coverage directory at %s\" % coverage.dir)\n+        print(\"Initializing coverage directory at %s\\n\" % coverage.dir)\n \n     if(ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_BITCOIND == 1):\n         rpcTestDir = buildDir + '/qa/rpc-tests/'\n@@ -141,10 +146,12 @@ def runtests():\n                     or run_extended\n                     or testScripts[i] in opts\n                     or re.sub(\".py$\", \"\", testScripts[i]) in opts ):\n-                print(\"Running testscript \" + testScripts[i] + \"...\")\n \n+                print(\"Running testscript %s%s%s ...\" % (bold[1], testScripts[i], bold[0]))\n+                time0 = time.time()\n                 subprocess.check_call(\n                     rpcTestDir + testScripts[i] + flags, shell=True)\n+                print(\"Duration: %s s\\n\" % (int(time.time() - time0)))\n \n                 # exit if help is called so we print just one set of\n                 # instructions\n@@ -156,12 +163,14 @@ def runtests():\n         for i in range(len(testScriptsExt)):\n             if (run_extended or testScriptsExt[i] in opts\n                     or re.sub(\".py$\", \"\", testScriptsExt[i]) in opts):\n+\n                 print(\n                     \"Running 2nd level testscript \"\n-                    + testScriptsExt[i] + \"...\")\n-\n+                    + \"%s%s%s ...\" % (bold[1], testScriptsExt[i], bold[0]))\n+                time0 = time.time()\n                 subprocess.check_call(\n                     rpcTestDir + testScriptsExt[i] + flags, shell=True)\n+                print(\"Duration: %s s\\n\" % (int(time.time() - time0)))\n \n         if coverage:\n             coverage.report_rpc_coverage()"
      }
    ]
  }
]