practicalswift,2019-11-13 22:17:52,"@theStack \n\nI'm all for removing redundancies in the general case, but in this specific case the redundancy is intentional:\n\nNote that the inclusion of `assumptions.h` could be removed accidentally from `net_processing.cpp` and `validation.cpp` without breaking the build.\n\nThus we cannot assume that `assumptions.h` will always be included :)\n\nI think of it this way:\n* Enforcement",https://github.com/bitcoin/bitcoin/pull/17459#issuecomment-553630409,553630409,
theStack,2019-11-14 00:02:40,"@practicalswift: Thanks for clarifying!\nMy strong assumption was that in _any_ possible build, one of the dozens `.cpp` files which currently include the `compat/assumptions.h` header (which after all says ""compile-time verification"", implying more than merely documentation) would also do so in the future, triggering the error in case `NDEBUG` is set.\nAlso it seemed quite fishy to me that the ",https://github.com/bitcoin/bitcoin/pull/17459#issuecomment-553661581,553661581,
laanwj,2019-11-15 11:46:14,"Tend toward NACK.\nThis code can go when the run-time critical assumptions stop using assertions. Then it is fully safe to define NDEBUG. Until then, belts and suspenders.\n(@MarcoFalke is working on this)",https://github.com/bitcoin/bitcoin/pull/17459#issuecomment-554329620,554329620,
MarcoFalke,2019-11-15 17:23:18,"Yeah, if the goal is to make sure the assert can never be disabled by accident, but also avoid these preprocessor checks, you could cherry-pick something like fa1564326499f69eeb5427262ff0f26070f86146, replace the `std::abort();` with `assert(false)`, and add the preprocessor check to `./src/util/check.h` (a single place).",https://github.com/bitcoin/bitcoin/pull/17459#issuecomment-554450685,554450685,
laanwj,2019-11-18 12:30:14,"Though, I'd say it's not much of a goal in itself. Wouldn't be surprised if the preprocessor is the least CPU intensive part of the C++ compilation process.",https://github.com/bitcoin/bitcoin/pull/17459#issuecomment-554995600,554995600,
fanquake,2020-01-04 08:57:39,Closing as something that we can potentially revisit in the future.,https://github.com/bitcoin/bitcoin/pull/17459#issuecomment-570768764,570768764,
