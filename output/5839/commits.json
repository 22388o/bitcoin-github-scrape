[
  {
    "sha": "16a58a86442ad587449f321c0dbab08cc028c2bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmE1OGE4NjQ0MmFkNTg3NDQ5ZjMyMWMwZGJhYjA4Y2MwMjhjMmJk",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-02-27T21:44:26Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-03-02T16:31:43Z"
      },
      "message": "keys: remove libsecp256k1 verification until it's actually supported\n\nThis was added a while ago for testing purposes, but was never intended to be\nused. Remove it until upstream libsecp256k1 decides that verification is\nstable/ready.",
      "tree": {
        "sha": "4af84d5dfdc2e272d007b7fe33e281a7abcbfbaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4af84d5dfdc2e272d007b7fe33e281a7abcbfbaf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16a58a86442ad587449f321c0dbab08cc028c2bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16a58a86442ad587449f321c0dbab08cc028c2bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16a58a86442ad587449f321c0dbab08cc028c2bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16a58a86442ad587449f321c0dbab08cc028c2bd/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b298ca7d7540acc19d1df79a5c2af7b5aca8cbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b298ca7d7540acc19d1df79a5c2af7b5aca8cbe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b298ca7d7540acc19d1df79a5c2af7b5aca8cbe"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 0,
      "deletions": 39
    },
    "files": [
      {
        "sha": "185f7e2918b12880b684661c0f799f1a55fc9bbc",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16a58a86442ad587449f321c0dbab08cc028c2bd/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16a58a86442ad587449f321c0dbab08cc028c2bd/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=16a58a86442ad587449f321c0dbab08cc028c2bd",
        "patch": "@@ -849,7 +849,6 @@ AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\n AM_CONDITIONAL([USE_COMPARISON_TOOL_REORG_TESTS],[test x$use_comparison_tool_reorg_test != xno])\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n-AM_CONDITIONAL([USE_LIBSECP256K1],[test x$use_libsecp256k1 = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])"
      },
      {
        "sha": "4587727cca59bd61337acbd8387235e8e45cdec7",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16a58a86442ad587449f321c0dbab08cc028c2bd/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16a58a86442ad587449f321c0dbab08cc028c2bd/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=16a58a86442ad587449f321c0dbab08cc028c2bd",
        "patch": "@@ -379,9 +379,6 @@ libbitcoinconsensus_la_LDFLAGS = -no-undefined $(RELDFLAGS)\n libbitcoinconsensus_la_LIBADD = $(CRYPTO_LIBS)\n libbitcoinconsensus_la_CPPFLAGS = $(CRYPTO_CFLAGS) -I$(builddir)/obj -DBUILD_BITCOIN_INTERNAL\n \n-if USE_LIBSECP256K1\n-libbitcoinconsensus_la_LIBADD += secp256k1/libsecp256k1.la\n-endif\n endif\n #\n "
      },
      {
        "sha": "64c9bc71190cc65968f4db81c8e2f56e93abc50d",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16a58a86442ad587449f321c0dbab08cc028c2bd/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16a58a86442ad587449f321c0dbab08cc028c2bd/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=16a58a86442ad587449f321c0dbab08cc028c2bd",
        "patch": "@@ -208,11 +208,9 @@ void CExtKey::Decode(const unsigned char code[74]) {\n }\n \n bool ECC_InitSanityCheck() {\n-#if !defined(USE_SECP256K1)\n     if (!CECKey::SanityCheck()) {\n         return false;\n     }\n-#endif\n     CKey key;\n     key.MakeNewKey(true);\n     CPubKey pubkey = key.GetPubKey();"
      },
      {
        "sha": "a4c046bff53806f05e5d81b8be78731dda0d90cc",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16a58a86442ad587449f321c0dbab08cc028c2bd/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16a58a86442ad587449f321c0dbab08cc028c2bd/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=16a58a86442ad587449f321c0dbab08cc028c2bd",
        "patch": "@@ -6,25 +6,16 @@\n \n #include \"eccryptoverify.h\"\n \n-#ifdef USE_SECP256K1\n-#include <secp256k1.h>\n-#else\n #include \"ecwrapper.h\"\n-#endif\n \n bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchSig) const {\n     if (!IsValid())\n         return false;\n-#ifdef USE_SECP256K1\n-    if (secp256k1_ecdsa_verify((const unsigned char*)&hash, &vchSig[0], vchSig.size(), begin(), size()) != 1)\n-        return false;\n-#else\n     CECKey key;\n     if (!key.SetPubKey(begin(), size()))\n         return false;\n     if (!key.Verify(hash, vchSig))\n         return false;\n-#endif\n     return true;\n }\n \n@@ -33,52 +24,33 @@ bool CPubKey::RecoverCompact(const uint256 &hash, const std::vector<unsigned cha\n         return false;\n     int recid = (vchSig[0] - 27) & 3;\n     bool fComp = ((vchSig[0] - 27) & 4) != 0;\n-#ifdef USE_SECP256K1\n-    int pubkeylen = 65;\n-    if (!secp256k1_ecdsa_recover_compact((const unsigned char*)&hash, &vchSig[1], (unsigned char*)begin(), &pubkeylen, fComp, recid))\n-        return false;\n-    assert((int)size() == pubkeylen);\n-#else\n     CECKey key;\n     if (!key.Recover(hash, &vchSig[1], recid))\n         return false;\n     std::vector<unsigned char> pubkey;\n     key.GetPubKey(pubkey, fComp);\n     Set(pubkey.begin(), pubkey.end());\n-#endif\n     return true;\n }\n \n bool CPubKey::IsFullyValid() const {\n     if (!IsValid())\n         return false;\n-#ifdef USE_SECP256K1\n-    if (!secp256k1_ecdsa_pubkey_verify(begin(), size()))\n-        return false;\n-#else\n     CECKey key;\n     if (!key.SetPubKey(begin(), size()))\n         return false;\n-#endif\n     return true;\n }\n \n bool CPubKey::Decompress() {\n     if (!IsValid())\n         return false;\n-#ifdef USE_SECP256K1\n-    int clen = size();\n-    int ret = secp256k1_ecdsa_pubkey_decompress((unsigned char*)begin(), &clen);\n-    assert(ret);\n-    assert(clen == (int)size());\n-#else\n     CECKey key;\n     if (!key.SetPubKey(begin(), size()))\n         return false;\n     std::vector<unsigned char> pubkey;\n     key.GetPubKey(pubkey, false);\n     Set(pubkey.begin(), pubkey.end());\n-#endif\n     return true;\n }\n \n@@ -89,17 +61,12 @@ bool CPubKey::Derive(CPubKey& pubkeyChild, unsigned char ccChild[32], unsigned i\n     unsigned char out[64];\n     BIP32Hash(cc, nChild, *begin(), begin()+1, out);\n     memcpy(ccChild, out+32, 32);\n-#ifdef USE_SECP256K1\n-    pubkeyChild = *this;\n-    bool ret = secp256k1_ecdsa_pubkey_tweak_add((unsigned char*)pubkeyChild.begin(), pubkeyChild.size(), out);\n-#else\n     CECKey key;\n     bool ret = key.SetPubKey(begin(), size());\n     ret &= key.TweakPublic(out);\n     std::vector<unsigned char> pubkey;\n     key.GetPubKey(pubkey, true);\n     pubkeyChild.Set(pubkey.begin(), pubkey.end());\n-#endif\n     return ret;\n }\n "
      }
    ]
  }
]