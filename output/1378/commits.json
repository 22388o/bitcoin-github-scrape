[
  {
    "sha": "ea591ead85bee7322f4c86f36c24a695e1ac167b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTU5MWVhZDg1YmVlNzMyMmY0Yzg2ZjM2YzI0YTY5NWUxYWMxNjdi",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2012-05-22T11:06:08Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2012-05-22T11:06:08Z"
      },
      "message": "Correct debug.log output to show correct function the debug is coming from.",
      "tree": {
        "sha": "415e1b2e53d65e48969217c29d94d18d1ddc7ebf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/415e1b2e53d65e48969217c29d94d18d1ddc7ebf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea591ead85bee7322f4c86f36c24a695e1ac167b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea591ead85bee7322f4c86f36c24a695e1ac167b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea591ead85bee7322f4c86f36c24a695e1ac167b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea591ead85bee7322f4c86f36c24a695e1ac167b/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "46784d0826df00d218d25a1e3df419bef36d70ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46784d0826df00d218d25a1e3df419bef36d70ce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/46784d0826df00d218d25a1e3df419bef36d70ce"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "6d2362b5940c11c0721cf672aad9dd4eade3918b",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea591ead85bee7322f4c86f36c24a695e1ac167b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea591ead85bee7322f4c86f36c24a695e1ac167b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ea591ead85bee7322f4c86f36c24a695e1ac167b",
        "patch": "@@ -2913,7 +2913,7 @@ bool ProcessMessages(CNode* pfrom)\n         unsigned int nMessageSize = hdr.nMessageSize;\n         if (nMessageSize > MAX_SIZE)\n         {\n-            printf(\"ProcessMessage(%s, %u bytes) : nMessageSize > MAX_SIZE\\n\", strCommand.c_str(), nMessageSize);\n+            printf(\"ProcessMessages(%s, %u bytes) : nMessageSize > MAX_SIZE\\n\", strCommand.c_str(), nMessageSize);\n             continue;\n         }\n         if (nMessageSize > vRecv.size())\n@@ -2929,7 +2929,7 @@ bool ProcessMessages(CNode* pfrom)\n         memcpy(&nChecksum, &hash, sizeof(nChecksum));\n         if (nChecksum != hdr.nChecksum)\n         {\n-            printf(\"ProcessMessage(%s, %u bytes) : CHECKSUM ERROR nChecksum=%08x hdr.nChecksum=%08x\\n\",\n+            printf(\"ProcessMessages(%s, %u bytes) : CHECKSUM ERROR nChecksum=%08x hdr.nChecksum=%08x\\n\",\n                strCommand.c_str(), nMessageSize, nChecksum, hdr.nChecksum);\n             continue;\n         }\n@@ -2954,22 +2954,22 @@ bool ProcessMessages(CNode* pfrom)\n             if (strstr(e.what(), \"end of data\"))\n             {\n                 // Allow exceptions from underlength message on vRecv\n-                printf(\"ProcessMessage(%s, %u bytes) : Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", strCommand.c_str(), nMessageSize, e.what());\n+                printf(\"ProcessMessages(%s, %u bytes) : Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", strCommand.c_str(), nMessageSize, e.what());\n             }\n             else if (strstr(e.what(), \"size too large\"))\n             {\n                 // Allow exceptions from overlong size\n-                printf(\"ProcessMessage(%s, %u bytes) : Exception '%s' caught\\n\", strCommand.c_str(), nMessageSize, e.what());\n+                printf(\"ProcessMessages(%s, %u bytes) : Exception '%s' caught\\n\", strCommand.c_str(), nMessageSize, e.what());\n             }\n             else\n             {\n-                PrintExceptionContinue(&e, \"ProcessMessage()\");\n+                PrintExceptionContinue(&e, \"ProcessMessages()\");\n             }\n         }\n         catch (std::exception& e) {\n-            PrintExceptionContinue(&e, \"ProcessMessage()\");\n+            PrintExceptionContinue(&e, \"ProcessMessages()\");\n         } catch (...) {\n-            PrintExceptionContinue(NULL, \"ProcessMessage()\");\n+            PrintExceptionContinue(NULL, \"ProcessMessages()\");\n         }\n \n         if (!fRet)"
      }
    ]
  }
]