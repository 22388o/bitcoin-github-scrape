fanquake,2019-05-29 14:09:23,"Concept ACK. \n\nThis fixes the crashing case in #16087, however I think we could make a more extensive change, as even with this fix it's still possible to cause a crash via the other menus. \n\ni.e: if you open Window -> Console and try and execute any command (can be garbage) `bitcoin-qt` will crash:\n```bash\nOn branch pull/16118/local-merge\n\nProcess 89287 launched: '/Users/michael/g",https://github.com/bitcoin/bitcoin/pull/16118#issuecomment-496952931,496952931,
fanquake,2019-05-31 13:32:08,"tACK https://github.com/bitcoin/bitcoin/pull/16122/commits/2d8ad2f99710a8981e33fe2d6ce834b0076c4e80 on macOS\n\nUsing master (https://github.com/bitcoin/bitcoin/commit/c7cfd20a77ce57d200b3b9e5e0dfb0d63818abdc) you can trigger a crash by mousing over the `File` -> `Open Wallet` menu during startup:\n```bash\n./autogen.sh && ./configure && make check -j6 && make deploy\nlldb Bitcoin-Qt.app\n(l",https://github.com/bitcoin/bitcoin/pull/16118#issuecomment-497709833,497709833,
jonasschnelli,2019-06-12 08:33:18,utACK 75485ef0962a53946f17b761c4445627b07e6eff,https://github.com/bitcoin/bitcoin/pull/16118#issuecomment-501174858,501174858,
ryanofsky,2019-06-18 14:19:26,"@promag, you mentioned that this change caused a bug listing wallets in #16230 (fixed in #16231), that you, me, jonas, and fanquake all didn't notice during review.\n\nCould you explain how this PR caused the bug? Also, it'd be good to know if you have any suggestions for things we should look for during reviews, or better ways to structure code to prevent initialization bugs in the future.",https://github.com/bitcoin/bitcoin/pull/16118#issuecomment-503156728,503156728,
promag,2019-06-18 14:40:45,"Like you said [above](https://github.com/bitcoin/bitcoin/pull/16118#pullrequestreview-248851975), and considering this was already a fix to another problem, at the time I didn't pay attention to remaining functionality. I guess other reviewers made the same mistake. Ideally we should have tests to prevent regressions like you say in #16075.\n\nWith this change the following\nhttps://github.com/",https://github.com/bitcoin/bitcoin/pull/16118#issuecomment-503166407,503166407,
ryanofsky,2019-06-18 14:59:34,"Thanks for the explanation, that makes a lot of sense. I agree it's is odd that Qt doesn't complain about trying to connect to a signal from a null object. In retrospect, I guess if we see a change delaying initialization like this (delaying `m_open_wallet_action->setMenu()`), a good thing to do would be to scroll down and make sure the uninitialized object (`m_open_wallet_action->menu()`) is not ",https://github.com/bitcoin/bitcoin/pull/16118#issuecomment-503175115,503175115,
promag,2019-06-18 15:17:01,"@ryanofsky actually running with `-debug` it shows a warning:\n```\n2019-06-18T15:16:13Z GUI: QObject::connect(QMenu, Unknown): invalid null parameter\n```",https://github.com/bitcoin/bitcoin/pull/16118#issuecomment-503182614,503182614,
promag,2019-06-18 15:22:08,"@ryanofsky So after some googling a suggestion is to run like:\n```\nQT_FATAL_WARNINGS=1 lldb src/qt/bitcoin-qt -- --regtest -debug\n...\nbt\n...\n* thread #1, name = 'bitcoin-main', queue = 'com.apple.main-thread', stop reason = signal SIGABRT\n  * frame #0: 0x00007fff653d823e libsystem_kernel.dylib`__pthread_kill + 10\n    frame #1: 0x00007fff6548ec1c libsystem_pthread.dylib`pthread_kill",https://github.com/bitcoin/bitcoin/pull/16118#issuecomment-503184695,503184695,
hebasto,2021-02-25 14:42:06,"> Going to add this to doc/productivity.md.\n\nAdded to [Developer Notes for Qt Code](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Developer-Notes-for-Qt-Code#debugging-tips) :)",https://github.com/bitcoin/bitcoin/pull/16118#issuecomment-785944423,785944423,
promag,2021-02-25 16:03:15,@hebasto nice!,https://github.com/bitcoin/bitcoin/pull/16118#issuecomment-786011416,786011416,
