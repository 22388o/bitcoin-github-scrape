practicalswift,2018-04-13T05:42:10Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/12973#issuecomment-381029842,381029842,
laanwj,2018-04-13T06:27:41Z,"A potential problem is that `strftime` depends on the locale, just like many other C string formatting functions, which has made us avoid them in general. From the developer notes:\n> - Use `std::string`, avoid C string manipulation functions\n>  - *Rationale*: C++ string handling is marginally safer, less scope for buffer overflows and surprises with `\0` characters. Also some C string manipula",https://github.com/bitcoin/bitcoin/pull/12973#issuecomment-381036919,381036919,
laanwj,2018-04-13T06:30:33Z,"FWIW it doesn't need full `strftime` support. The only datetime formats left in non-test code are ISO8601:\n```c++\nsrc/utiltime.cpp:    return DateTimeStrFormat(""%Y-%m-%dT%H:%M:%SZ"", nTime);\nsrc/utiltime.cpp:    return DateTimeStrFormat(""%Y-%m-%d"", nTime);\nsrc/utiltime.cpp:    return DateTimeStrFormat(""%H:%M:%SZ"", nTime);\n```\nAnother potential simplification could be around that they al",https://github.com/bitcoin/bitcoin/pull/12973#issuecomment-381037446,381037446,
laanwj,2018-04-13T06:37:07Z,"> The imbue stuff forces using the 'C' locale, I'm afraid if we want to use C functions we'd need a C equivalent of that and that's probably just as bad.\n\nA reminder that this is where we're coming from: 3e8ac6af9a993e262d1160fb2e6e1e1f1d5d19f2\n\nEdit: Thinking about it further - it becomes less clear to me whether the slowness is due to our own code, or due to formatting, or something else",https://github.com/bitcoin/bitcoin/pull/12973#issuecomment-381038600,381038600,
sipa,2018-04-13T08:37:14Z,"@laanwj Thanks, you're right that this approach ignores the reasons why the old code existed in the first place. I've replaced it with just hardcoded ISO8601 format strings... please let me know if you think this is too NIH.\n\nPerhaps this is overkill as it may not help for performance. I remember we've had multiple horror stories in the past with this code though; I'd prefer to get rid of it.",https://github.com/bitcoin/bitcoin/pull/12973#issuecomment-381066033,381066033,
laanwj,2018-04-13T12:20:31Z,">  I've replaced it with just hardcoded ISO8601 format strings... please let me know if you think this is too NIH.\n\nNo I think this is great :+1: It's very straightforward.\n\ntACK 152701568159915828613fa131e94e21337c0c2d",https://github.com/bitcoin/bitcoin/pull/12973#issuecomment-381118117,381118117,
practicalswift,2018-04-13T12:29:28Z,utACK 152701568159915828613fa131e94e21337c0c2d,https://github.com/bitcoin/bitcoin/pull/12973#issuecomment-381120201,381120201,
jonasschnelli,2018-04-13T18:36:22Z,utACK 152701568159915828613fa131e94e21337c0c2d,https://github.com/bitcoin/bitcoin/pull/12973#issuecomment-381224896,381224896,
sipsorcery,2018-04-15T01:22:59Z,"As an fyi Windows doesn't come with gmtime_r so this PR broke the msvc build.\n\nI'd say there's an easy enough workaround and will look into it.",https://github.com/bitcoin/bitcoin/pull/12973#issuecomment-381373082,381373082,
theuni,2018-04-13T05:40:12Z,Is this portable? Afiak all of the madness is usually an abstraction of these variants.,https://github.com/bitcoin/bitcoin/pull/12973#discussion_r181289765,181289765,src/utiltime.cpp
sipa,2018-04-13T06:24:36Z,Well at least this code doesn't need any allocations.,https://github.com/bitcoin/bitcoin/pull/12973#discussion_r181295061,181295061,src/utiltime.cpp
ken2812221,2018-04-13T07:58:10Z,Why don't just use `gmtime`? It's more portable.,https://github.com/bitcoin/bitcoin/pull/12973#discussion_r181311420,181311420,src/utiltime.cpp
sipa,2018-04-13T08:51:17Z,"@ken2812221 `gmtime` is not thread safe. We either user `gmtime_r`, or introduce a lock around the call.",https://github.com/bitcoin/bitcoin/pull/12973#discussion_r181324043,181324043,src/utiltime.cpp
laanwj,2018-04-13T12:51:07Z,I'm happy that this works on windows as-is as well!,https://github.com/bitcoin/bitcoin/pull/12973#discussion_r181377401,181377401,src/utiltime.cpp
