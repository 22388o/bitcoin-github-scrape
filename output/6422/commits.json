[
  {
    "sha": "c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzNhOGVhMjcxOGI1OTdkZmJiODk0OGRlYjhkMTRhMGQ3NGM0ZDhm",
    "commit": {
      "author": {
        "name": "Midnight Magic",
        "email": "midnightmagic@users.noreply.github.com",
        "date": "2015-09-17T21:17:26Z"
      },
      "committer": {
        "name": "Midnight Magic",
        "email": "midnightmagic@users.noreply.github.com",
        "date": "2015-09-17T21:25:41Z"
      },
      "message": "Clarifying offline build process using gbuild --url and noting it is not\ndone automatically.\n\nAt some point along the line, fully offline builds were no longer happening\nwhen strictly following the release-process.md instructions.\n\nWe should ensure that users who might want to torify or build offline need\nto take extra steps to remain offline.\n\nAlso, corrections to build process: including gverify examples for new builders.",
      "tree": {
        "sha": "24fbdaef3201722e3854c621a3ac0a0361267324",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/24fbdaef3201722e3854c621a3ac0a0361267324"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "bad_email",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQQcBAABAgAGBQJV+y/WAAoJECjfJyTyQdju2ysgAIkYYb0NKGeuebxWsGxTGPDj\nLxw45dXcDZ7TUTiBv1OxyTGbl6HJQhjLyg+ESUBTF4j9tTlh5CykfvzyrW6f0Edn\nnryqk6Vd6TSFCw/P6m1ll4KNii0JeXTcNczSXzP2KNBEaPOizjqGSDWCpb7Goe7/\nkwBkXpdBm4onu4fino1L4yCj79TcOglrNW/zBwmnPQwNEBNQmABsDUMbqqn+0vLp\njbSYdqbrmhnSRUFcSIqVxU5GvHUQz9Gj340TTOFjeMySJrTV+ueXf+IABgiNNzXz\nLxPeN3Dg0rIqlOB5FCqUr0TtqhLqdvwWBHzTPmibeopeQuE7aHZG0va3XE5N58sG\n8stuDE0+V39Hptj6ObGfYNrjopiiue/VkTXeRLkyJelBQGgWPwyuebx+BR3n143R\nTBBsonjUm939DcY3avixn/zcv0TvJACLh//w0aHrNfpk1cgxO4jz/0EAF/yGF/9T\nb1O7oMs4Seg5KN6zfV3aydYZz53XxDeUUSORG7Q/En0wKh9v2YdjTHJedmzudwX5\nWFr15YQgR9P1/uI6TmgXci7dbj/VbqbrXlyycoGFzAOv9vbpVIgj1d1sNPF5wCQR\nVXdao3g2StwMjeqteCTFD0WkRQX//GKnwf42apCFJ/8G7I9vRFmBtnrXrjVgLkyL\nXNVJYxQujLjX1gryaMWlew2bWLJYVqAyiaF5/+A9i4oQXLlS2e5cC53OaaevwmOz\nylbRf5TAEijyzInAc/a4VQ/1pp3QF67whL7+nJJBD1nowTn8Rma0RhSlM0P0Eax2\nj2PD4mZJpAZPk2kbgiO/km9sw/b4+xPtimIluchlnNWpWbXOh4/+rGPVGPAiNCMM\nvaprbBiAbwri3yqP22LGhEDKXQLwShYwjRFj6ciaYKnQ3IuGJhP2HX98TTvQ/NP1\nxdAlIhZDAVhHSEv6l3SEwvc1wx7lJlXq1/iAN64oIVBMxSFocM4En2TUMPcCzcso\n4pEAPdm29hHn+nVf91hJBMsXXcrlv6uvy22ofLxYUjZHWq0LWDxCX78pjN+yxCDR\nH+o5nmHjc7ZXrMndvbxBhxH5sJlLkwo4VsSVD59AElhJx/2osVSuDqXTjVz1WaMR\n5K5N12+/bjH8u7wxrXwS9Se4HrOS7vdLKQE9Ty1t8abbQJLs0LHG1s770FbNxbWq\nvW7D2GHHORfeAnvi/ShUewDUswCRxoWYEAmuyRvraecEnkejeiSzO6LwhdH8B93I\nwU0wIefn/CQRcSZwglx2L8nLorba1z8zqIzzwuXi8040HDzrjf7yhNBmQssd3TTH\n6W9B3oXQd2LFhc+KUHh3yO/pZezF9Snd1aXQKwq/O4Vl8EVJPuhUrsGPJMJHVDU=\n=6SZm\n-----END PGP SIGNATURE-----",
        "payload": "tree 24fbdaef3201722e3854c621a3ac0a0361267324\nparent 83f0e2249765520b9f974c45811b53c90b0d0ede\nauthor Midnight Magic <midnightmagic@users.noreply.github.com> 1442524646 -0700\ncommitter Midnight Magic <midnightmagic@users.noreply.github.com> 1442525141 -0700\n\nClarifying offline build process using gbuild --url and noting it is not\ndone automatically.\n\nAt some point along the line, fully offline builds were no longer happening\nwhen strictly following the release-process.md instructions.\n\nWe should ensure that users who might want to torify or build offline need\nto take extra steps to remain offline.\n\nAlso, corrections to build process: including gverify examples for new builders.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f/comments",
    "author": {
      "login": "midnightmagic",
      "id": 607777,
      "node_id": "MDQ6VXNlcjYwNzc3Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/607777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/midnightmagic",
      "html_url": "https://github.com/midnightmagic",
      "followers_url": "https://api.github.com/users/midnightmagic/followers",
      "following_url": "https://api.github.com/users/midnightmagic/following{/other_user}",
      "gists_url": "https://api.github.com/users/midnightmagic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/midnightmagic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/midnightmagic/subscriptions",
      "organizations_url": "https://api.github.com/users/midnightmagic/orgs",
      "repos_url": "https://api.github.com/users/midnightmagic/repos",
      "events_url": "https://api.github.com/users/midnightmagic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/midnightmagic/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "midnightmagic",
      "id": 607777,
      "node_id": "MDQ6VXNlcjYwNzc3Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/607777?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/midnightmagic",
      "html_url": "https://github.com/midnightmagic",
      "followers_url": "https://api.github.com/users/midnightmagic/followers",
      "following_url": "https://api.github.com/users/midnightmagic/following{/other_user}",
      "gists_url": "https://api.github.com/users/midnightmagic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/midnightmagic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/midnightmagic/subscriptions",
      "organizations_url": "https://api.github.com/users/midnightmagic/orgs",
      "repos_url": "https://api.github.com/users/midnightmagic/repos",
      "events_url": "https://api.github.com/users/midnightmagic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/midnightmagic/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "83f0e2249765520b9f974c45811b53c90b0d0ede",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83f0e2249765520b9f974c45811b53c90b0d0ede",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/83f0e2249765520b9f974c45811b53c90b0d0ede"
      }
    ],
    "stats": {
      "total": 127,
      "additions": 106,
      "deletions": 21
    },
    "files": [
      {
        "sha": "b434ae8a5b2e2d2eefde84629573433e286d1511",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 56,
        "deletions": 4,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
        "patch": "@@ -330,10 +330,11 @@ There will be a lot of warnings printed during the build of the image. These can\n Getting and building the inputs\n --------------------------------\n \n-Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change) \n-in the bitcoin repository to install sources which require manual intervention. Also follow\n-the next step: 'Seed the Gitian sources cache', which will fetch all the necessary source \n-files to allow gitian to work offline.\n+Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-build-inputs-first-time-or-when-dependency-versions-change)\n+in the bitcoin repository under 'Fetch and build inputs' to install sources which require\n+manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n+and offline git repositories' which will fetch the remaining files required for building \n+offline.\n \n Building Bitcoin\n ----------------\n@@ -391,6 +392,57 @@ COMMIT=2014_03_windows_unicode_path\n ./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n ```\n \n+Building fully offline\n+-----------------------\n+\n+For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository \n+and the bitcoin git repository with the desired tag must both be available locally, and then gbuild must be\n+told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or \n+manually disabling gitian-builder's use of apt-get to update the VM build environment.\n+\n+To configure apt-cacher-ng as an offline cacher, you will need to first populate its cache with the relevant\n+files. You must additionally patch target-bin/bootstrap-fixup to set its apt sources to something other than\n+plain archive.ubuntu.com: us.archive.ubuntu.com works.\n+\n+So, if you use LXC:\n+\n+```bash\n+export PATH=\"$PATH\":/path/to/gitian-builder/libexec\n+export USE_LXC=1\n+cd /path/to/gitian-builder\n+./libexec/make-clean-vm --suite precise --arch amd64\n+\n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root apt-get update\n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root \\\n+  -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n+  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../bitcoin/contrib/gitian-descriptors/*|sort|uniq )\n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root apt-get -q -y purge grub\n+LXC_ARCH=amd64 LXC_SUITE=precise on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade \n+```\n+\n+And then set offline mode for apt-cacher-ng:\n+\n+```\n+/etc/apt-cacher-ng/acng.conf\n+[...]\n+Offlinemode: 1\n+[...]\n+\n+service apt-cacher-ng restart\n+```\n+\n+Then when building, override the remote URLs that gbuild would otherwise pull from the gitian descriptors::\n+```bash\n+\n+cd /some/root/path/\n+git clone https://github.com/bitcoin/bitcoin-detached-sigs.git\n+\n+BTCPATH=/some/root/path/bitcoin.git\n+SIGPATH=/some/root/path/bitcoin-detached-sigs.git\n+\n+./bin/gbuild --url bitcoin=${BTCPATH},signature=${SIGPATH} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+```\n+\n Signing externally\n -------------------\n "
      },
      {
        "sha": "1bfdb8fabded31e8fe19d9a56e3f3f9f1e9a1814",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 50,
        "deletions": 17,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=c73a8ea2718b597dfbb8948deb8d14a0d74c4d8f",
        "patch": "@@ -6,39 +6,54 @@ Release Process\n \n * * *\n \n-###update (commit) version in sources\n+###first time only or for new builders, check out the source in the following directory hierarchy\n \n+\tcd /path/to/your/toplevel/build\n+\tgit clone https://github.com/bitcoin/gitian.sigs.git\n+\tgit clone https://github.com/devrandom/gitian-builder.git\n+\tgit clone https://github.com/bitcoin/bitcoin.git\n+\n+###for bitcoin maintainers/release engineers, update (commit) version in sources\n+\n+\tpushd ./bitcoin\n \tcontrib/verifysfbinaries/verify.sh\n \tdoc/README*\n \tshare/setup.nsi\n \tsrc/clientversion.h (change CLIENT_VERSION_IS_RELEASE to true)\n \n-###tag version in git\n+###for bitcoin maintainers/release engineers, tag version in git\n \n \tgit tag -s v(new version, e.g. 0.8.0)\n \n-###write release notes. git shortlog helps a lot, for example:\n+###for bitcoin maintainers/release engineers, write release notes. git shortlog helps a lot, for example:\n \n \tgit shortlog --no-merges v(current version, e.g. 0.7.2)..v(new version, e.g. 0.8.0)\n+\tpopd\n \n * * *\n \n-###update gitian\n-\n- In order to take advantage of the new caching features in gitian, be sure to update to a recent version (`e9741525c` or later is recommended)\n+###update gitian, gitian.sigs, checkout bitcoin version, and perform gitian builds\n \n-###perform gitian builds\n-\n- From a directory containing the bitcoin source, gitian-builder and gitian.sigs\n+ To ensure your gitian descriptors are accurate for direct reference for gbuild, below, run the following from a directory containing the bitcoin source:\n   \n+\tpushd ./bitcoin\n \texport SIGNER=(your gitian key, ie bluematt, sipa, etc)\n \texport VERSION=(new version, e.g. 0.8.0)\n-\tpushd ./bitcoin\n \tgit checkout v${VERSION}\n \tpopd\n+\n+  Ensure your gitian.sigs are up-to-date if you wish to gverify your builds against other gitian signatures:\n+\n+\tpushd ./gitian.sigs\n+\tgit pull\n+\tpopd\n+\n+  Ensure your gitian-builder sources are up-to-date to take advantage of the new caching features of gitian (`e9741525c` or later is recommended)\n+\n \tpushd ./gitian-builder\n+\tgit pull\n \n-###fetch and build inputs: (first time, or when dependency versions change)\n+###fetch and create inputs: (first time, or when dependency versions change)\n  \n \tmkdir -p inputs\n \twget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n@@ -52,28 +67,44 @@ Release Process\n  \n \ttar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.9.sdk.tar.gz MacOSX10.9.sdk\n \n-###Optional: Seed the Gitian sources cache\n+###Optional: Seed the Gitian sources cache and offline git repositories\n \n-  By default, gitian will fetch source files as needed. For offline builds, they can be fetched ahead of time:\n+By default, gitian will fetch source files as needed. To cache them ahead of time:\n \n \tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n \n-  Only missing files will be fetched, so this is safe to re-run for each build.\n+Only missing files will be fetched, so this is safe to re-run for each build.\n+\n+Clone the detached-sigs repository:\n+\n+\tpopd\n+\tgit clone https://github.com/bitcoin/bitcoin-detached-sigs.git\n+\tpushd ./bitcoin-builder\n+\n+NOTE: Offline builds must use the --url flag to ensure gitian fetches only from local URLs.\n+For example: ./bin/bguild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n+The following gbuild invocations DO NOT DO THIS by default.\n \n-###Build Bitcoin Core for Linux, Windows, and OS X:\n+###Build (and optionally verify) Bitcoin Core for Linux, Windows, and OS X:\n   \n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n \tmv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../\n+\n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n \tmv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n \tmv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../\n+\n \t./bin/gbuild --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n \tmv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n \tmv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../\n \tpopd\n+\n   Build output expected:\n \n   1. source tarball (bitcoin-${VERSION}.tar.gz)\n@@ -98,19 +129,21 @@ Commit your signature to gitian.sigs:\n \tOnce the Windows/OSX builds each have 3 matching signatures, they will be signed with their respective release keys.\n \tDetached signatures will then be committed to the bitcoin-detached-sigs repository, which can be combined with the unsigned apps to create signed binaries.\n \n-  Create the signed OSX binary:\n+  Create (and optionally verify) the signed OSX binary:\n \n \tpushd ./gitian-builder\n \t./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n \tmv build/out/bitcoin-osx-signed.dmg ../bitcoin-${VERSION}-osx.dmg\n \tpopd\n \n-  Create the signed Windows binaries:\n+  Create (and optionally verify) the signed Windows binaries:\n \n \tpushd ./gitian-builder\n \t./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n \t./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n \tmv build/out/bitcoin-*win64-setup.exe ../bitcoin-${VERSION}-win64-setup.exe\n \tmv build/out/bitcoin-*win32-setup.exe ../bitcoin-${VERSION}-win32-setup.exe\n \tpopd"
      }
    ]
  }
]