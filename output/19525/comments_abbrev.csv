laanwj,2020-07-15 11:17:43,"Sounds good to me. I'm surprised that this wasn't already the case. Read-only code and data was already kept apart from writable data. I guess mixing read-only code and read-only data has a smaller security impact. But this is better.\nACK d9315eae407e3180580befda17c0005347d82900",https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-658709604,658709604,
practicalswift,2020-07-15 11:21:36,"ACK d9315eae407e3180580befda17c0005347d82900 -- explicit is better than implicit, and hardened is better than non-hardened.\n\n@fanquake Would it make sense to test for this in `contrib/devtools/security-check.py`?",https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-658711278,658711278,
laanwj,2020-07-15 11:34:02,"> @fanquake Would it make sense to test for this in contrib/devtools/security-check.py?\n\nI think this is a good idea, but how would you go about this? It is not entirely trivial. I think you'd have to correlate sections with LOAD headers and check that data sections are in a separate LOAD command than text ones? Or maybe it's easier.\n\nWithout the option there is no `LOAD` with `r--` flags:",https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-658716154,658716154,
DrahtBot,2020-07-16 14:17:27,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 3864219d4074d289799634378d85cccbcc2e6e56<br>(master) | commit 0e7157657d806aed71747451438203f994894189<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`234341edaaa03287...`](https://drahtbot.space/gitian/bitcoin/bitcoin/3864219d4074d289799634378d85cccbcc2e6e56/bitcoin-3864219d4074-aarch64-l,https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-659442494,659442494,
DrahtBot,2020-07-17 15:31:41,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit c57dc566b06034ce7bdb29da0db4d65e0accb382<br>(master) | commit f79f65f82d58d5756d85919e1cb796bb97c4be57<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`566af411261e2aa0...`](https://drahtbot.space/guix/bitcoin/bitcoin/c57dc566b06034ce7bdb29da0db4d65e0accb382/bitcoin-c57dc566b060-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-660172338,660172338,
laanwj,2020-07-22 14:06:28,"I've implemented a security check here: https://github.com/laanwj/bitcoin/tree/2020_07_separate_code_security_check\n\nI think it's correct, though it might be too strict, it might be enough to spot-check only a few sections like `.text` and `.data` and `.rodata`. Then again, sometimes it's better to be strict to catch future problems. Haven't tested it for all platforms so we might still get so",https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-662473872,662473872,
fanquake,2020-07-23 07:00:22,"> I've implemented a security check here\n\n@laanwj I've pulled in that commit, and queued up some builds. We'll see how it goes. ",https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-662849694,662849694,
DrahtBot,2020-07-23 20:27:16,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 9d4b3d86b694ac6e56495e1955f6bf5ff584cbb9<br>(master) | commit 709190ff3f91a4d956dcf83b82a893591132f909<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`ee5c5e4217fbfed2...`](https://drahtbot.space/guix/bitcoin/bitcoin/9d4b3d86b694ac6e56495e1955f6bf5ff584cbb9/bitcoin-9d4b3d86b694-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-663215641,663215641,
MarcoFalke,2020-07-24 07:02:01,"```\nmake[1]: Leaving directory '/bitcoin/distsrc-x86_64-linux-gnu'\n+ make -C src --jobs=1 check-security V=1\nmake: Entering directory '/bitcoin/distsrc-x86_64-linux-gnu/src'\nChecking binary security...\nREADELF=/gnu/store/pzq9s5ldl90h72p26jkdakyccdg9ib3k-profile/bin/x86_64-linux-gnu-readelf OBJDUMP=x86_64-linux-gnu-objdump OTOOL= /gnu/store/pzq9s5ldl90h72p26jkdakyccdg9ib3k-profile/bin/pyt",https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-663376787,663376787,
laanwj,2020-07-26 15:22:59,"That's strange. It works locally  for x86_64. This temporary patch might help figure out, it prints the mismatching sections and complete `elfread` output in case of failure:\n```patch\ndiff --git a/contrib/devtools/security-check.py b/contrib/devtools/security-check.py\nindex 4f315e10d1d69157f93dfc47e1be8f3deb07a11a..dd16c132dfdf275b3767e8e230988f6d1343a14f 100755\n--- a/contrib/devtools/secu",https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-664001562,664001562,
DrahtBot,2020-07-27 06:04:02,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 31d2b4098a9e4ee9a694ba1ad42829637cbcf3c6<br>(master) | commit 1b844560f37400126146f39fc4fbc56cfe67d2b3<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`986650d9f9356510...`](https://drahtbot.space/gitian/bitcoin/bitcoin/31d2b4098a9e4ee9a694ba1ad42829637cbcf3c6/bitcoin-31d2b4098a9e-aarch64-l,https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-664138816,664138816,
MarcoFalke,2020-07-27 06:34:20,"guix error also on gitian:\n\n```\nmake[1]: Leaving directory '/home/ubuntu/build/bitcoin/distsrc-x86_64-linux-gnu'\n+ make -j1 -C src check-security\nmake: Entering directory '/home/ubuntu/build/bitcoin/distsrc-x86_64-linux-gnu/src'\nChecking binary security...\ntest/test_bitcoin: failed separate_code\nqt/bitcoin-qt: failed separate_code\nMakefile:18662: recipe for target 'check-security",https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-664148481,664148481,
fanquake,2020-07-27 06:43:04,"> That's strange. It works locally for x86_64. This temporary patch might help figure out, it prints the mismatching sections and complete elfread output in case of failure:\n\n> guix error also on gitian:\n\nThanks. I can recreate some issues locally, have been taking a look today.",https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-664151564,664151564,
laanwj,2020-07-27 09:20:27,"> edit: the load offset for the writable data is curious: 0x00000000008f7920 is not page aligned, and right after the read-only data, does this mean read-only and read-write data are stilll allowed to share a page?\n\nI'm still spooked by this, by the way. Not sure if it is an (upstream) bug or expected behavior. I thought about adding a check that LOAD ranges with different permissions don't ov",https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-664232569,664232569,
fanquake,2020-07-28 05:11:18,"I've pushed up a modified version of @laanwj's test that works for me across all binaries, and I think is a bit more robust. One of the issues with the previous test was that when the binaries were large (i.e `bitcoin-qt` and `test_bitcoin`) the output in the readelf table would spill into adjacent columns, and you'd end up testing something like `9 R` against `R E` etc. I've also added some addit",https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-664780613,664780613,
DrahtBot,2020-07-28 19:16:54,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit b62fbf9e1c193464bca443076906b7ea47d56532<br>(master) | commit c15df1c4f5789dbf28188ed13ee8157bd7ca36b9<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`25331867e75dd6c6...`](https://drahtbot.space/guix/bitcoin/bitcoin/b62fbf9e1c193464bca443076906b7ea47d56532/bitcoin-b62fbf9e1c19-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-665226867,665226867,
laanwj,2020-07-29 12:04:08,"ACK 65d0f1a53354fb25c8152ee5b430cf57e6508594\nThanks for fixing the test. I think further improving the check can be left for another PR.\n",https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-665623894,665623894,
DrahtBot,2020-07-29 17:58:32,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit a41ae68053387567414021228995a485e29ad611<br>(master) | commit bb347b9068f86113b975ff79b22372f990042ccb<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`2c5d1671feadd5e0...`](https://drahtbot.space/gitian/bitcoin/bitcoin/a41ae68053387567414021228995a485e29ad611/bitcoin-a41ae6805338-aarch64-l,https://github.com/bitcoin/bitcoin/pull/19525#issuecomment-665812399,665812399,
fanquake,2020-07-27 06:45:58,There are some additional sections we can add here. Such as `.qtmetadata` and `.gcc_except_table`.,https://github.com/bitcoin/bitcoin/pull/19525#discussion_r460678439,460678439,contrib/devtools/security-check.py
laanwj,2020-07-27 09:18:20,"Agreed, but let's get it to pass first !",https://github.com/bitcoin/bitcoin/pull/19525#discussion_r460757283,460757283,contrib/devtools/security-check.py
