[
  {
    "sha": "10f42bab4fd80773fb179a5720282a4c82b44de0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGY0MmJhYjRmZDgwNzczZmIxNzlhNTcyMDI4MmE0YzgyYjQ0ZGUw",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2017-02-28T05:26:34Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2017-02-28T05:30:50Z"
      },
      "message": "In feerate ties, prefer larger packages first.\n\nAs a block fills it may not be possible to include\n both a transaction and its successor. In these\n cases the successor will be skipped for a lower\n ranked transaction which may have a lower feerate.\n Because of this it is preferable to choose the\n larger package first.",
      "tree": {
        "sha": "d7cee39c91ab4e39177476d99f3939c3371d18f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d7cee39c91ab4e39177476d99f3939c3371d18f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10f42bab4fd80773fb179a5720282a4c82b44de0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10f42bab4fd80773fb179a5720282a4c82b44de0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10f42bab4fd80773fb179a5720282a4c82b44de0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10f42bab4fd80773fb179a5720282a4c82b44de0/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "88c2ae3ed2bb5d367dd408c9255cd8f1e7a36c7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88c2ae3ed2bb5d367dd408c9255cd8f1e7a36c7d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/88c2ae3ed2bb5d367dd408c9255cd8f1e7a36c7d"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 16,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9b04eea8b754559222e26ceff069430a81fbb0f3",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 16,
        "deletions": 4,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10f42bab4fd80773fb179a5720282a4c82b44de0/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10f42bab4fd80773fb179a5720282a4c82b44de0/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=10f42bab4fd80773fb179a5720282a4c82b44de0",
        "patch": "@@ -244,8 +244,12 @@ class CompareTxMemPoolEntryByDescendantScore\n         double f1 = aModFee * bSize;\n         double f2 = aSize * bModFee;\n \n+        // Given a feerate tie, prefer a larger package.\n         if (f1 == f2) {\n-            return a.GetTime() >= b.GetTime();\n+            if (aSize == bSize) {\n+                return a.GetTime() >= b.GetTime();\n+            }\n+            return aSize < bSize;\n         }\n         return f1 < f2;\n     }\n@@ -255,7 +259,7 @@ class CompareTxMemPoolEntryByDescendantScore\n     {\n         double f1 = (double)a.GetModifiedFee() * a.GetSizeWithDescendants();\n         double f2 = (double)a.GetModFeesWithDescendants() * a.GetTxSize();\n-        return f2 > f1;\n+        return f2 >= f1;\n     }\n };\n \n@@ -270,8 +274,12 @@ class CompareTxMemPoolEntryByScore\n     {\n         double f1 = (double)a.GetModifiedFee() * b.GetTxSize();\n         double f2 = (double)b.GetModifiedFee() * a.GetTxSize();\n+        // Given a feerate tie, prefer a larger package.\n         if (f1 == f2) {\n-            return b.GetTx().GetHash() < a.GetTx().GetHash();\n+            if (a.GetTxSize() == b.GetTxSize()) {\n+                return b.GetTx().GetHash() < a.GetTx().GetHash();\n+            }\n+            return a.GetTxSize() > b.GetTxSize();\n         }\n         return f1 > f2;\n     }\n@@ -301,8 +309,12 @@ class CompareTxMemPoolEntryByAncestorFee\n         double f1 = aFees * bSize;\n         double f2 = aSize * bFees;\n \n+        // Given a feerate tie, prefer a larger package.\n         if (f1 == f2) {\n-            return a.GetTx().GetHash() < b.GetTx().GetHash();\n+            if (aSize == bSize) {\n+                return a.GetTx().GetHash() < b.GetTx().GetHash();\n+            }\n+            return aSize > bSize;\n         }\n \n         return f1 > f2;"
      }
    ]
  }
]