[
  {
    "sha": "44bc988e7becb492a78ed92ea1052f4789012534",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NGJjOTg4ZTdiZWNiNDkyYTc4ZWQ5MmVhMTA1MmY0Nzg5MDEyNTM0",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-08-31T03:55:27Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-10-03T03:11:27Z"
      },
      "message": "[Wallet] Do not flush the wallet in AddToWalletIfInvolvingMe(..)",
      "tree": {
        "sha": "e7ce5489c4f331b71bc55c24cfcd89393097f069",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7ce5489c4f331b71bc55c24cfcd89393097f069"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/44bc988e7becb492a78ed92ea1052f4789012534",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44bc988e7becb492a78ed92ea1052f4789012534",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/44bc988e7becb492a78ed92ea1052f4789012534",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44bc988e7becb492a78ed92ea1052f4789012534/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29f96e8bc652cb14c6fdefe5279ee983054faa2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29f96e8bc652cb14c6fdefe5279ee983054faa2a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29f96e8bc652cb14c6fdefe5279ee983054faa2a"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 30,
      "deletions": 19
    },
    "files": [
      {
        "sha": "a9fd8e95170a5cc0bfe498faf9b579196fd52997",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44bc988e7becb492a78ed92ea1052f4789012534/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44bc988e7becb492a78ed92ea1052f4789012534/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=44bc988e7becb492a78ed92ea1052f4789012534",
        "patch": "@@ -218,10 +218,11 @@ void CDBEnv::CheckpointLSN(const std::string& strFile)\n }\n \n \n-CDB::CDB(const std::string& strFilename, const char* pszMode) : pdb(NULL), activeTxn(NULL)\n+CDB::CDB(const std::string& strFilename, const char* pszMode, bool fFlushOnCloseIn) : pdb(NULL), activeTxn(NULL)\n {\n     int ret;\n     fReadOnly = (!strchr(pszMode, '+') && !strchr(pszMode, 'w'));\n+    fFlushOnClose = fFlushOnCloseIn;\n     if (strFilename.empty())\n         return;\n \n@@ -298,7 +299,8 @@ void CDB::Close()\n     activeTxn = NULL;\n     pdb = NULL;\n \n-    Flush();\n+    if (fFlushOnClose)\n+        Flush();\n \n     {\n         LOCK(bitdb.cs_db);"
      },
      {
        "sha": "271ecfecec5d736d6f1b8ab9f846644f2774910e",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44bc988e7becb492a78ed92ea1052f4789012534/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44bc988e7becb492a78ed92ea1052f4789012534/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=44bc988e7becb492a78ed92ea1052f4789012534",
        "patch": "@@ -97,8 +97,9 @@ class CDB\n     std::string strFile;\n     DbTxn* activeTxn;\n     bool fReadOnly;\n+    bool fFlushOnClose;\n \n-    explicit CDB(const std::string& strFilename, const char* pszMode = \"r+\");\n+    explicit CDB(const std::string& strFilename, const char* pszMode = \"r+\", bool fFlushOnCloseIn=true);\n     ~CDB() { Close(); }\n \n public:"
      },
      {
        "sha": "b943b8662be70dc9eaa66d2cc7631bbb569b6ef8",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44bc988e7becb492a78ed92ea1052f4789012534/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44bc988e7becb492a78ed92ea1052f4789012534/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=44bc988e7becb492a78ed92ea1052f4789012534",
        "patch": "@@ -1177,6 +1177,8 @@ bool AppInit2(boost::thread_group& threadGroup)\n             // Restore wallet transaction metadata after -zapwallettxes=1\n             if (GetBoolArg(\"-zapwallettxes\", false) && GetArg(\"-zapwallettxes\", \"1\") != \"2\")\n             {\n+                CWalletDB walletdb(strWalletFile);\n+\n                 BOOST_FOREACH(const CWalletTx& wtxOld, vWtx)\n                 {\n                     uint256 hash = wtxOld.GetHash();\n@@ -1192,7 +1194,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n                         copyTo->fFromMe = copyFrom->fFromMe;\n                         copyTo->strFromAccount = copyFrom->strFromAccount;\n                         copyTo->nOrderPos = copyFrom->nOrderPos;\n-                        copyTo->WriteToDisk();\n+                        copyTo->WriteToDisk(&walletdb);\n                     }\n                 }\n             }"
      },
      {
        "sha": "c35f96495c27f51775f75c37e3d96019221c8803",
        "filename": "src/test/accounting_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44bc988e7becb492a78ed92ea1052f4789012534/src/test/accounting_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44bc988e7becb492a78ed92ea1052f4789012534/src/test/accounting_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/accounting_tests.cpp?ref=44bc988e7becb492a78ed92ea1052f4789012534",
        "patch": "@@ -46,7 +46,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n     walletdb.WriteAccountingEntry(ae);\n \n     wtx.mapValue[\"comment\"] = \"z\";\n-    pwalletMain->AddToWallet(wtx);\n+    pwalletMain->AddToWallet(wtx, false, &walletdb);\n     vpwtx.push_back(&pwalletMain->mapWallet[wtx.GetHash()]);\n     vpwtx[0]->nTimeReceived = (unsigned int)1333333335;\n     vpwtx[0]->nOrderPos = -1;\n@@ -88,7 +88,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n         --tx.nLockTime;  // Just to change the hash :)\n         *static_cast<CTransaction*>(&wtx) = CTransaction(tx);\n     }\n-    pwalletMain->AddToWallet(wtx);\n+    pwalletMain->AddToWallet(wtx, false, &walletdb);\n     vpwtx.push_back(&pwalletMain->mapWallet[wtx.GetHash()]);\n     vpwtx[1]->nTimeReceived = (unsigned int)1333333336;\n \n@@ -98,7 +98,7 @@ BOOST_AUTO_TEST_CASE(acc_orderupgrade)\n         --tx.nLockTime;  // Just to change the hash :)\n         *static_cast<CTransaction*>(&wtx) = CTransaction(tx);\n     }\n-    pwalletMain->AddToWallet(wtx);\n+    pwalletMain->AddToWallet(wtx, false, &walletdb);\n     vpwtx.push_back(&pwalletMain->mapWallet[wtx.GetHash()]);\n     vpwtx[2]->nTimeReceived = (unsigned int)1333333329;\n     vpwtx[2]->nOrderPos = -1;"
      },
      {
        "sha": "caf1f67f519746c2fa2afe8f8e51882c77955d84",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 8,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44bc988e7becb492a78ed92ea1052f4789012534/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44bc988e7becb492a78ed92ea1052f4789012534/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=44bc988e7becb492a78ed92ea1052f4789012534",
        "patch": "@@ -512,7 +512,7 @@ void CWallet::MarkDirty()\n     }\n }\n \n-bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet)\n+bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletDB* pwalletdb)\n {\n     uint256 hash = wtxIn.GetHash();\n \n@@ -533,7 +533,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet)\n         if (fInsertedNew)\n         {\n             wtx.nTimeReceived = GetAdjustedTime();\n-            wtx.nOrderPos = IncOrderPosNext();\n+            wtx.nOrderPos = IncOrderPosNext(pwalletdb);\n \n             wtx.nTimeSmart = wtx.nTimeReceived;\n             if (wtxIn.hashBlock != 0)\n@@ -610,7 +610,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet)\n \n         // Write to disk\n         if (fInsertedNew || fUpdated)\n-            if (!wtx.WriteToDisk())\n+            if (!wtx.WriteToDisk(pwalletdb))\n                 return false;\n \n         // Break debit/credit balance caches:\n@@ -644,10 +644,16 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pbl\n         if (fExisted || IsMine(tx) || IsFromMe(tx))\n         {\n             CWalletTx wtx(this,tx);\n+\n             // Get merkle branch if transaction was found in a block\n             if (pblock)\n                 wtx.SetMerkleBranch(*pblock);\n-            return AddToWallet(wtx);\n+\n+            // Do not flush the wallet here for performance reasons\n+            // this is safe, as in case of a crash, we rescan the necessary blocks on startup through our SetBestChain-mechanism\n+            CWalletDB walletdb(strWalletFile, \"r+\", false);\n+\n+            return AddToWallet(wtx, false, &walletdb);\n         }\n     }\n     return false;\n@@ -871,9 +877,9 @@ void CWalletTx::GetAccountAmounts(const string& strAccount, CAmount& nReceived,\n }\n \n \n-bool CWalletTx::WriteToDisk()\n+bool CWalletTx::WriteToDisk(CWalletDB *pwalletdb)\n {\n-    return CWalletDB(pwallet->strWalletFile).WriteTx(GetHash(), *this);\n+    return pwalletdb->WriteTx(GetHash(), *this);\n }\n \n // Scan the block chain (starting in pindexStart) for transactions\n@@ -1499,14 +1505,14 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n             // This is only to keep the database open to defeat the auto-flush for the\n             // duration of this scope.  This is the only place where this optimization\n             // maybe makes sense; please don't do it anywhere else.\n-            CWalletDB* pwalletdb = fFileBacked ? new CWalletDB(strWalletFile,\"r\") : NULL;\n+            CWalletDB* pwalletdb = fFileBacked ? new CWalletDB(strWalletFile,\"r+\") : NULL;\n \n             // Take key pair from key pool so it won't be used again\n             reservekey.KeepKey();\n \n             // Add tx to wallet, because if it has change it's also ours,\n             // otherwise just for transaction history.\n-            AddToWallet(wtxNew);\n+            AddToWallet(wtxNew, false, pwalletdb);\n \n             // Notify that old coins are spent\n             set<CWalletTx*> setCoins;"
      },
      {
        "sha": "cd1a09035fa0d6caa7e1d914efa4aef796f8e9e4",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44bc988e7becb492a78ed92ea1052f4789012534/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44bc988e7becb492a78ed92ea1052f4789012534/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=44bc988e7becb492a78ed92ea1052f4789012534",
        "patch": "@@ -246,7 +246,7 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n     TxItems OrderedTxItems(std::list<CAccountingEntry>& acentries, std::string strAccount = \"\");\n \n     void MarkDirty();\n-    bool AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet=false);\n+    bool AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletDB* pwalletdb);\n     void SyncTransaction(const CTransaction& tx, const CBlock* pblock);\n     bool AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate);\n     void EraseFromWallet(const uint256 &hash);\n@@ -849,7 +849,7 @@ class CWalletTx : public CMerkleTx\n         return true;\n     }\n \n-    bool WriteToDisk();\n+    bool WriteToDisk(CWalletDB *pwalletdb);\n \n     int64_t GetTxTime() const;\n     int GetRequestCount() const;"
      },
      {
        "sha": "8831ad1575904d46f0240cda2d3e177401c1644e",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44bc988e7becb492a78ed92ea1052f4789012534/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44bc988e7becb492a78ed92ea1052f4789012534/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=44bc988e7becb492a78ed92ea1052f4789012534",
        "patch": "@@ -390,7 +390,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             if (wtx.nOrderPos == -1)\n                 wss.fAnyUnordered = true;\n \n-            pwallet->AddToWallet(wtx, true);\n+            pwallet->AddToWallet(wtx, true, NULL);\n         }\n         else if (strType == \"acentry\")\n         {"
      },
      {
        "sha": "590d63e333eac439fffe9313629dc5e7c2d421ed",
        "filename": "src/walletdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44bc988e7becb492a78ed92ea1052f4789012534/src/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44bc988e7becb492a78ed92ea1052f4789012534/src/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.h?ref=44bc988e7becb492a78ed92ea1052f4789012534",
        "patch": "@@ -76,7 +76,7 @@ class CKeyMetadata\n class CWalletDB : public CDB\n {\n public:\n-    CWalletDB(const std::string& strFilename, const char* pszMode = \"r+\") : CDB(strFilename, pszMode)\n+    CWalletDB(const std::string& strFilename, const char* pszMode = \"r+\", bool fFlushOnClose = true) : CDB(strFilename, pszMode, fFlushOnClose)\n     {\n     }\n "
      }
    ]
  }
]