BitcoinPullTester,2012-08-14T15:25:14Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/021d2759489b14c09a98ad4f807ac22540e8fe93 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7729383,7729383,
Diapolo,2012-08-14T19:34:58Z,"I tried the version from @BitcoinPullTester and it starts just fine, but Process Explorer shows ASLR as Disabled, which it does not for my local build with the linker flags from this patch.\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7737505,7737505,
laanwj,2012-08-16T06:56:15Z,Maybe the cross-compiler ignores the arguments?\n,https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7778072,7778072,
Diapolo,2012-08-16T07:48:09Z,"Does @BitcoinPullTester use an official Gitian build setup? I observed, that it seems to use Qt 4.8.2 (which is nice), but I'm not sure what causes ASLR not to work or how this can be fixed.\n\nI used the qmake `*=` operator, which only adds the options, if they are not present, perhaps I should try with default `+=`?\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7778851,7778851,
sipa,2012-08-17T12:34:26Z,"using += won't hurt, but *= should work fine as well.\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7816608,7816608,
sipa,2012-08-17T12:37:10Z,"By the way, I'm not sure whether the ""win32:"" qualifier means ""building for win32"" or ""building on win32"", the latter not being true for the jenkins build.\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7816668,7816668,
Diapolo,2012-08-17T12:50:38Z,"@sipa The official qmake docs only mention win32:, while we seem to use windows: quite a lot in the project-file, but that is not what you observed, it looks like you could be right, see this.\n\n<pre>\n win32 {\n     SOURCES += paintwidget_win.cpp\n }\n\nThe above code will add the paintwidget_win.cpp file to the sources listed in the generated Makefile if qmake is used on a Windows platform. If ",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7816931,7816931,
laanwj,2012-08-17T12:57:15Z,"Could be that we explicitly need to tell qmake that we're cross building\nfor windows.\n\nI think it would be pretty incredible though, if it had ignored the windows\nspecific options all this time in gitian and we wouldn't have noticed it.\nWhat about the exceptions+threading fix, for example?\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7817082,7817082,
sipa,2012-08-17T13:01:39Z,I just checked; all windows-specific stuff enabled in bitcoin-qt.pro ends up being passed as command-line options in jenkin's build log. @Diapolo Can you try changing the win32: qualifier to windows: ?\n,https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7817179,7817179,
Diapolo,2012-08-17T13:05:54Z,@sipa Updated to `windows:` I'll also check my makefiles and will try `windows:` and `win32:`.\n,https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7817268,7817268,
Diapolo,2012-08-17T13:08:03Z,"On Windows it doesn't matter, if I use `win32:` or `windows:`, all expected arguments are in the makefile after running qmake.\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7817309,7817309,
Diapolo,2012-08-17T13:34:44Z,"I also checked http://jenkins.bluematt.me/pull-tester/021d2759489b14c09a98ad4f807ac22540e8fe93/test.log and did not find `-Wl,--dynamicbase -Wl,--nxcompat`.\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7817926,7817926,
TheBlueMatt,2012-08-17T16:50:12Z,"@Diapolo I thought I grabbed the same versions of deps that the gitian file uses, but I might have just grabbed the latest Qt...However, I did use exactly the gitian script (minus a few faketimes, etc things that are only there to make it deterministic), so if you find the version it uses, running the same gitian scripts with that version should work fine.\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7828349,7828349,
Diapolo,2012-08-17T16:53:50Z,"@TheBlueMatt Thanks for that information, btw. I think we should use latest Qt for official builds, but that's not the matter here :). How does @BitcoinPullTester check if a pull changed or how long does it take after a new build is started after a rebase. Just asking, as I want to get this issue sorted out (missing linker-flags).\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7828460,7828460,
TheBlueMatt,2012-08-17T16:57:40Z,"It just constantly loops and checks if the tip commit on a pull is in its list of already-checked commits.  If you push an update (wait a few minutes, and its not already busy on another pull), you can see the test.log before the build is done by going to http://jenkins.bluematt.me/pull-tester/ and finding your new commit.  \n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7828575,7828575,
BitcoinPullTester,2012-08-17T21:45:33Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f5ab15b1bf82210c4d71e517730bc6806cbcfd48 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7836036,7836036,
Diapolo,2012-08-17T22:37:33Z,"The useage of `windows:` doesn't change anything, still `-Wl,--dynamicbase -Wl,--nxcompat` is missing from Makefile.Release and the test.log. I'll now try with += instead of *= ... any other ideas are welcome. I just saw that the cross-compilation seems unsupported / unofficial, could this be the reason?\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7837097,7837097,
Diapolo,2012-08-17T22:49:57Z,"@TheBlueMatt It seems to me that `RELEASE=1` is missing in the test.log's qmake-calls, could this be true?\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7837306,7837306,
Diapolo,2012-08-17T23:10:33Z,"Latest rebase moves the linker-flags out of the RELEASE=1 scope (for testing only, so DON'T MERGE THIS YET). If the flags then occur in the makefile or test.log we know the missing `RELEASE=1` qmake-flag is the cause.\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7837817,7837817,
TheBlueMatt,2012-08-18T00:07:39Z,"No, RELEASE=1 is not in the qmake spec that pull-tester calls...why do we need to only apply ASLR and DEP to RELEASE=1 binaries?  Also, afaik, the only two options are RELEASE=1 or DEBUG=1, and RELEASE is the default (though not set if you check for it as a var) maybe there is a different way to check if you are doing a RELEASE build? (because it generally creates two makefiles, a Makefile.Release",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7839902,7839902,
BitcoinPullTester,2012-08-18T02:31:49Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/683860efbff033d63a52cf6dbf8322450fd49711 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7841046,7841046,
laanwj,2012-08-18T05:51:37Z,"I think it's fine to enable the flags for both release and debug builds. Good to keep debug and release as close as possible to prevent surprises.\n\nUnlike some kinds of optimizations, debuggers don't choke on DEP and ASLR do they?\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7842062,7842062,
BitcoinPullTester,2012-08-18T07:35:47Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/bcfdeb63b74bb899c6b78add6e47a5eb4c33bc02 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7842611,7842611,
laanwj,2012-08-18T07:41:14Z,bitcoin-qt.exe:\n    DllCharacteristics      00000140\n\nIt worked!\n,https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7842648,7842648,
Diapolo,2012-08-18T08:58:38Z,"Verified to be active now, as the flags occur in the test.log and the running exe shows ASLR as Enabled now.\n\n![ASLR working](http://i45.tinypic.com/23w08ko.png)\n\nThe last rebase just removed the indention and updated the commit message and comment.\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7842981,7842981,
Diapolo,2012-08-18T09:48:12Z,"@sipa If we want this for bitcoind.exe on Windows, where do we need to add the linker flags?\n",https://github.com/bitcoin/bitcoin/pull/1673#issuecomment-7843262,7843262,
