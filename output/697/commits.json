[
  {
    "sha": "43421af2e4714f8d1fee711d16a07a9c1eea8c75",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MzQyMWFmMmU0NzE0ZjhkMWZlZTcxMWQxNmEwN2E5YzFlZWE4Yzc1",
    "commit": {
      "author": {
        "name": "Nils Schneider",
        "email": "nils.schneider@gmail.com",
        "date": "2011-12-13T05:46:37Z"
      },
      "committer": {
        "name": "Nils Schneider",
        "email": "nils.schneider@gmail.com",
        "date": "2011-12-13T05:46:37Z"
      },
      "message": "move \\\\n outside _() in --help",
      "tree": {
        "sha": "7f1e7c4ec9737eb5a8e882db5e398df75629afc7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f1e7c4ec9737eb5a8e882db5e398df75629afc7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43421af2e4714f8d1fee711d16a07a9c1eea8c75",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43421af2e4714f8d1fee711d16a07a9c1eea8c75",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43421af2e4714f8d1fee711d16a07a9c1eea8c75",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43421af2e4714f8d1fee711d16a07a9c1eea8c75/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1d8b4cd544018814a064730ca62e9169f8456ccd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d8b4cd544018814a064730ca62e9169f8456ccd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d8b4cd544018814a064730ca62e9169f8456ccd"
      }
    ],
    "stats": {
      "total": 92,
      "additions": 46,
      "deletions": 46
    },
    "files": [
      {
        "sha": "471757a73fd310cc6c1e1598bc275c7d387f8779",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 46,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43421af2e4714f8d1fee711d16a07a9c1eea8c75/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43421af2e4714f8d1fee711d16a07a9c1eea8c75/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=43421af2e4714f8d1fee711d16a07a9c1eea8c75",
        "patch": "@@ -173,69 +173,69 @@ bool AppInit2(int argc, char* argv[])\n           _(\"Bitcoin version\") + \" \" + FormatFullVersion() + \"\\n\\n\" +\n           _(\"Usage:\") + \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\" +\n             \"  bitcoind [options]                   \\t  \" + \"\\n\" +\n-            \"  bitcoind [options] <command> [params]\\t  \" + _(\"Send command to -server or bitcoind\\n\") +\n-            \"  bitcoind [options] help              \\t\\t  \" + _(\"List commands\\n\") +\n-            \"  bitcoind [options] help <command>    \\t\\t  \" + _(\"Get help for a command\\n\") +\n-          _(\"Options:\\n\") +\n-            \"  -conf=<file>     \\t\\t  \" + _(\"Specify configuration file (default: bitcoin.conf)\\n\") +\n-            \"  -pid=<file>      \\t\\t  \" + _(\"Specify pid file (default: bitcoind.pid)\\n\") +\n-            \"  -gen             \\t\\t  \" + _(\"Generate coins\\n\") +\n-            \"  -gen=0           \\t\\t  \" + _(\"Don't generate coins\\n\") +\n-            \"  -min             \\t\\t  \" + _(\"Start minimized\\n\") +\n-            \"  -datadir=<dir>   \\t\\t  \" + _(\"Specify data directory\\n\") +\n-            \"  -timeout=<n>     \\t  \"   + _(\"Specify connection timeout (in milliseconds)\\n\") +\n-            \"  -proxy=<ip:port> \\t  \"   + _(\"Connect through socks4 proxy\\n\") +\n-            \"  -dns             \\t  \"   + _(\"Allow DNS lookups for addnode and connect\\n\") +\n-            \"  -port=<port>     \\t\\t  \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\\n\") +\n-            \"  -maxconnections=<n>\\t  \" + _(\"Maintain at most <n> connections to peers (default: 125)\\n\") +\n-            \"  -addnode=<ip>    \\t  \"   + _(\"Add a node to connect to\\n\") +\n-            \"  -connect=<ip>    \\t\\t  \" + _(\"Connect only to the specified node\\n\") +\n-            \"  -nolisten        \\t  \"   + _(\"Don't accept connections from outside\\n\") +\n-            \"  -nodnsseed       \\t  \"   + _(\"Don't bootstrap list of peers using DNS\\n\") +\n-            \"  -banscore=<n>    \\t  \"   + _(\"Threshold for disconnecting misbehaving peers (default: 100)\\n\") +\n-            \"  -bantime=<n>     \\t  \"   + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\\n\") +\n-            \"  -maxreceivebuffer=<n>\\t  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 10000)\\n\") +\n-            \"  -maxsendbuffer=<n>\\t  \"   + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 10000)\\n\") +\n+            \"  bitcoind [options] <command> [params]\\t  \" + _(\"Send command to -server or bitcoind\") + \"\\n\" +\n+            \"  bitcoind [options] help              \\t\\t  \" + _(\"List commands\") + \"\\n\" +\n+            \"  bitcoind [options] help <command>    \\t\\t  \" + _(\"Get help for a command\") + \"\\n\" +\n+          _(\"Options:\") + \"\\n\" +\n+            \"  -conf=<file>     \\t\\t  \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\" +\n+            \"  -pid=<file>      \\t\\t  \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\" +\n+            \"  -gen             \\t\\t  \" + _(\"Generate coins\") + \"\\n\" +\n+            \"  -gen=0           \\t\\t  \" + _(\"Don't generate coins\") + \"\\n\" +\n+            \"  -min             \\t\\t  \" + _(\"Start minimized\") + \"\\n\" +\n+            \"  -datadir=<dir>   \\t\\t  \" + _(\"Specify data directory\") + \"\\n\" +\n+            \"  -timeout=<n>     \\t  \"   + _(\"Specify connection timeout (in milliseconds)\") + \"\\n\" +\n+            \"  -proxy=<ip:port> \\t  \"   + _(\"Connect through socks4 proxy\") + \"\\n\" +\n+            \"  -dns             \\t  \"   + _(\"Allow DNS lookups for addnode and connect\") + \"\\n\" +\n+            \"  -port=<port>     \\t\\t  \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\" +\n+            \"  -maxconnections=<n>\\t  \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\" +\n+            \"  -addnode=<ip>    \\t  \"   + _(\"Add a node to connect to\") + \"\\n\" +\n+            \"  -connect=<ip>    \\t\\t  \" + _(\"Connect only to the specified node\") + \"\\n\" +\n+            \"  -nolisten        \\t  \"   + _(\"Don't accept connections from outside\") + \"\\n\" +\n+            \"  -nodnsseed       \\t  \"   + _(\"Don't bootstrap list of peers using DNS\") + \"\\n\" +\n+            \"  -banscore=<n>    \\t  \"   + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\" +\n+            \"  -bantime=<n>     \\t  \"   + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\" +\n+            \"  -maxreceivebuffer=<n>\\t  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 10000)\") + \"\\n\" +\n+            \"  -maxsendbuffer=<n>\\t  \"   + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 10000)\") + \"\\n\" +\n #ifdef USE_UPNP\n #if USE_UPNP\n-            \"  -noupnp          \\t  \"   + _(\"Don't attempt to use UPnP to map the listening port\\n\") +\n+            \"  -noupnp          \\t  \"   + _(\"Don't attempt to use UPnP to map the listening port\") + \"\\n\" +\n #else\n-            \"  -upnp            \\t  \"   + _(\"Attempt to use UPnP to map the listening port\\n\") +\n+            \"  -upnp            \\t  \"   + _(\"Attempt to use UPnP to map the listening port\") + \"\\n\" +\n #endif\n #endif\n-            \"  -paytxfee=<amt>  \\t  \"   + _(\"Fee per KB to add to transactions you send\\n\") +\n+            \"  -paytxfee=<amt>  \\t  \"   + _(\"Fee per KB to add to transactions you send\") + \"\\n\" +\n #ifdef GUI\n-            \"  -server          \\t\\t  \" + _(\"Accept command line and JSON-RPC commands\\n\") +\n+            \"  -server          \\t\\t  \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\" +\n #endif\n #ifndef WIN32\n-            \"  -daemon          \\t\\t  \" + _(\"Run in the background as a daemon and accept commands\\n\") +\n+            \"  -daemon          \\t\\t  \" + _(\"Run in the background as a daemon and accept commands\") + \"\\n\" +\n #endif\n-            \"  -testnet         \\t\\t  \" + _(\"Use the test network\\n\") +\n-            \"  -debug           \\t\\t  \" + _(\"Output extra debugging information\\n\") +\n-            \"  -logtimestamps   \\t  \"   + _(\"Prepend debug output with timestamp\\n\") +\n-            \"  -printtoconsole  \\t  \"   + _(\"Send trace/debug info to console instead of debug.log file\\n\") +\n+            \"  -testnet         \\t\\t  \" + _(\"Use the test network\") + \"\\n\" +\n+            \"  -debug           \\t\\t  \" + _(\"Output extra debugging information\") + \"\\n\" +\n+            \"  -logtimestamps   \\t  \"   + _(\"Prepend debug output with timestamp\") + \"\\n\" +\n+            \"  -printtoconsole  \\t  \"   + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\" +\n #ifdef WIN32\n-            \"  -printtodebugger \\t  \"   + _(\"Send trace/debug info to debugger\\n\") +\n+            \"  -printtodebugger \\t  \"   + _(\"Send trace/debug info to debugger\") + \"\\n\" +\n #endif\n-            \"  -rpcuser=<user>  \\t  \"   + _(\"Username for JSON-RPC connections\\n\") +\n-            \"  -rpcpassword=<pw>\\t  \"   + _(\"Password for JSON-RPC connections\\n\") +\n-            \"  -rpcport=<port>  \\t\\t  \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332)\\n\") +\n-            \"  -rpcallowip=<ip> \\t\\t  \" + _(\"Allow JSON-RPC connections from specified IP address\\n\") +\n-            \"  -rpcconnect=<ip> \\t  \"   + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\\n\") +\n-            \"  -keypool=<n>     \\t  \"   + _(\"Set key pool size to <n> (default: 100)\\n\") +\n-            \"  -rescan          \\t  \"   + _(\"Rescan the block chain for missing wallet transactions\\n\");\n+            \"  -rpcuser=<user>  \\t  \"   + _(\"Username for JSON-RPC connections\") + \"\\n\" +\n+            \"  -rpcpassword=<pw>\\t  \"   + _(\"Password for JSON-RPC connections\") + \"\\n\" +\n+            \"  -rpcport=<port>  \\t\\t  \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332)\") + \"\\n\" +\n+            \"  -rpcallowip=<ip> \\t\\t  \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\" +\n+            \"  -rpcconnect=<ip> \\t  \"   + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\" +\n+            \"  -keypool=<n>     \\t  \"   + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\" +\n+            \"  -rescan          \\t  \"   + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n \n #ifdef USE_SSL\n         strUsage += string() +\n-            _(\"\\nSSL options: (see the Bitcoin Wiki for SSL setup instructions)\\n\") +\n-            \"  -rpcssl                                \\t  \" + _(\"Use OpenSSL (https) for JSON-RPC connections\\n\") +\n-            \"  -rpcsslcertificatechainfile=<file.cert>\\t  \" + _(\"Server certificate file (default: server.cert)\\n\") +\n-            \"  -rpcsslprivatekeyfile=<file.pem>       \\t  \" + _(\"Server private key (default: server.pem)\\n\") +\n-            \"  -rpcsslciphers=<ciphers>               \\t  \" + _(\"Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\\n\");\n+            _(\"\\nSSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\" +\n+            \"  -rpcssl                                \\t  \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\" +\n+            \"  -rpcsslcertificatechainfile=<file.cert>\\t  \" + _(\"Server certificate file (default: server.cert)\") + \"\\n\" +\n+            \"  -rpcsslprivatekeyfile=<file.pem>       \\t  \" + _(\"Server private key (default: server.pem)\") + \"\\n\" +\n+            \"  -rpcsslciphers=<ciphers>               \\t  \" + _(\"Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\") + \"\\n\";\n #endif\n \n         strUsage += string() +\n-            \"  -?               \\t\\t  \" + _(\"This help message\\n\");\n+            \"  -?               \\t\\t  \" + _(\"This help message\") + \"\\n\";\n \n         // Remove tabs\n         strUsage.erase(std::remove(strUsage.begin(), strUsage.end(), '\\t'), strUsage.end());"
      }
    ]
  }
]