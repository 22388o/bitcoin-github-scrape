[
  {
    "sha": "fa86edf66d4d4ed04758333da45ed1b3b5892602",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTg2ZWRmNjZkNGQ0ZWQwNDc1ODMzM2RhNDVlZDFiM2I1ODkyNjAy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-03T17:32:39Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-03T17:32:17Z"
      },
      "message": "fuzz: Extend script fuzz test",
      "tree": {
        "sha": "b8b6ceb56d8ca2377725847a809636b3d3aba313",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8b6ceb56d8ca2377725847a809636b3d3aba313"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa86edf66d4d4ed04758333da45ed1b3b5892602",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgOEwv+Pt+ktBVLUfBOBnwyYg0ZI2HX66d+U8cYJ4Ef8AVwb/AHzD4lg62qtc9R\nroIMW4a4WWAAELvJ0IU0bvm6nuw36tk3/tkRqQO8LsPGbZQgGQdzYBU6gPd9rJzw\nMuq65jJt6Vyq104F6KGYUhggNnOEsL6mUhGnlHb3Mc42pVEsB2ilbZgenmMEMFkE\ngQF/UlU4Wx7doF7Q4fg3Vp7fxcVeSa+BukXCJZ/pnwL2JJTFpM465FhjoFrZEpAU\nygiDT+FpIt6qLyR7eQTCCRBYUxWp4/ze4CHbumfi4Ce4lriLkjbxXRpC8XiavhKR\nN4ENJunITR+PX4HRwnRZjMc7K1/9FvvEibsPG0SBPLAVaaE2Ph6Q88UPxADhteQ7\nZQJKNHIHybjN9cdlxVlx3WLz9KBKdoTPjOFL5cu/tkpPGUnudXY3t2DDff5KIA4Y\nu4pkz6piUND1SS+EEafgPdZOqLwOSyQGeZRnJgcaibx3LtKseugCZ8TOFGpH/wn6\nGxmVayru\n=MTtg\n-----END PGP SIGNATURE-----",
        "payload": "tree b8b6ceb56d8ca2377725847a809636b3d3aba313\nparent f0d6487e290761a4fb03798240a351b5fddfdb38\nauthor MarcoFalke <falke.marco@gmail.com> 1585935159 +0800\ncommitter MarcoFalke <falke.marco@gmail.com> 1585935137 +0800\n\nfuzz: Extend script fuzz test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa86edf66d4d4ed04758333da45ed1b3b5892602",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa86edf66d4d4ed04758333da45ed1b3b5892602",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa86edf66d4d4ed04758333da45ed1b3b5892602/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f0d6487e290761a4fb03798240a351b5fddfdb38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0d6487e290761a4fb03798240a351b5fddfdb38",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f0d6487e290761a4fb03798240a351b5fddfdb38"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 26,
      "deletions": 4
    },
    "files": [
      {
        "sha": "80e2f234d74246d0bfccefd2de8f067eebd4ddd6",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 4,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa86edf66d4d4ed04758333da45ed1b3b5892602/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa86edf66d4d4ed04758333da45ed1b3b5892602/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=fa86edf66d4d4ed04758333da45ed1b3b5892602",
        "patch": "@@ -9,6 +9,7 @@\n #include <policy/policy.h>\n #include <pubkey.h>\n #include <script/descriptor.h>\n+#include <script/interpreter.h>\n #include <script/script.h>\n #include <script/sign.h>\n #include <script/signingprovider.h>\n@@ -30,7 +31,10 @@ void initialize()\n \n void test_one_input(const std::vector<uint8_t>& buffer)\n {\n-    const CScript script(buffer.begin(), buffer.end());\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    const Optional<CScript> script_opt = ConsumeDeserializable<CScript>(fuzzed_data_provider);\n+    if (!script_opt) return;\n+    const CScript script{*script_opt};\n \n     std::vector<unsigned char> compressed;\n     if (CompressScript(script, compressed)) {\n@@ -89,12 +93,30 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     ScriptToUniv(script, o4, false);\n \n     {\n-        FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n         const std::vector<uint8_t> bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n-        // DecompressScript(..., ..., bytes) is not guaranteed to be defined if bytes.size() <= 23.\n-        if (bytes.size() >= 24) {\n+        // DecompressScript(..., ..., bytes) is not guaranteed to be defined if the bytes vector is too short\n+        if (bytes.size() >= 32) {\n             CScript decompressed_script;\n             DecompressScript(decompressed_script, fuzzed_data_provider.ConsumeIntegral<unsigned int>(), bytes);\n         }\n     }\n+\n+    const Optional<CScript> other_script = ConsumeDeserializable<CScript>(fuzzed_data_provider);\n+    if (other_script) {\n+        {\n+            CScript script_mut{script};\n+            (void)FindAndDelete(script_mut, *other_script);\n+        }\n+        const std::vector<std::string> random_string_vector = ConsumeRandomLengthStringVector(fuzzed_data_provider);\n+        const uint32_t u32{fuzzed_data_provider.ConsumeIntegral<uint32_t>()};\n+        const uint32_t flags{u32 | SCRIPT_VERIFY_P2SH};\n+        {\n+            CScriptWitness wit;\n+            for (const auto& s : random_string_vector) {\n+                wit.stack.emplace_back(s.begin(), s.end());\n+            }\n+            (void)CountWitnessSigOps(script, *other_script, &wit, flags);\n+            wit.SetNull();\n+        }\n+    }\n }"
      }
    ]
  }
]