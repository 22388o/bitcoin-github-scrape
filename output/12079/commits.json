[
  {
    "sha": "7f67dd0aa67ec030d5793dcc69594173d5b69fcc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjY3ZGQwYWE2N2VjMDMwZDU3OTNkY2M2OTU5NDE3M2Q1YjY5ZmNj",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-01-03T01:48:20Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-01-05T15:34:43Z"
      },
      "message": "[qa] Improve prioritisetransaction functional test",
      "tree": {
        "sha": "f814300ec7126901e8f5a58c48813bd1bb8d7313",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f814300ec7126901e8f5a58c48813bd1bb8d7313"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f67dd0aa67ec030d5793dcc69594173d5b69fcc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f67dd0aa67ec030d5793dcc69594173d5b69fcc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f67dd0aa67ec030d5793dcc69594173d5b69fcc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f67dd0aa67ec030d5793dcc69594173d5b69fcc/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "63a4dc10876bfc61c2e87d35dcf17da2f0f8c316",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63a4dc10876bfc61c2e87d35dcf17da2f0f8c316",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/63a4dc10876bfc61c2e87d35dcf17da2f0f8c316"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b90cd6c9619fbda7041ad2ee94948885a9d1ec1e",
        "filename": "test/functional/prioritise_transaction.py",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f67dd0aa67ec030d5793dcc69594173d5b69fcc/test/functional/prioritise_transaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f67dd0aa67ec030d5793dcc69594173d5b69fcc/test/functional/prioritise_transaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/prioritise_transaction.py?ref=7f67dd0aa67ec030d5793dcc69594173d5b69fcc",
        "patch": "@@ -15,6 +15,25 @@ def set_test_params(self):\n         self.extra_args = [[\"-printpriority=1\"], [\"-printpriority=1\"]]\n \n     def run_test(self):\n+        # Test `prioritisetransaction` required parameters\n+        assert_raises_rpc_error(-1, \"prioritisetransaction\", self.nodes[0].prioritisetransaction)\n+        assert_raises_rpc_error(-1, \"prioritisetransaction\", self.nodes[0].prioritisetransaction, '')\n+        assert_raises_rpc_error(-1, \"prioritisetransaction\", self.nodes[0].prioritisetransaction, '', 0)\n+\n+        # Test `prioritisetransaction` invalid extra parameters\n+        assert_raises_rpc_error(-1, \"prioritisetransaction\", self.nodes[0].prioritisetransaction, '', 0, 0, 0)\n+\n+        # Test `prioritisetransaction` invalid `txid`\n+        assert_raises_rpc_error(-1, \"txid must be hexadecimal string\", self.nodes[0].prioritisetransaction, txid='foo', fee_delta=0)\n+\n+        # Test `prioritisetransaction` invalid `dummy`\n+        txid = '1d1d4e24ed99057e84c3f80fd8fbec79ed9e1acee37da269356ecea000000000'\n+        assert_raises_rpc_error(-1, \"JSON value is not a number as expected\", self.nodes[0].prioritisetransaction, txid, 'foo', 0)\n+        assert_raises_rpc_error(-8, \"Priority is no longer supported, dummy argument to prioritisetransaction must be 0.\", self.nodes[0].prioritisetransaction, txid, 1, 0)\n+\n+        # Test `prioritisetransaction` invalid `fee_delta`\n+        assert_raises_rpc_error(-1, \"JSON value is not an integer as expected\", self.nodes[0].prioritisetransaction, txid=txid, fee_delta='foo')\n+\n         self.txouts = gen_return_txouts()\n         self.relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n "
      }
    ]
  }
]