promag,2018-08-17T14:01:15Z,"Output example when using `bitcoin-cli`:\n```\n2018-08-17T14:00:38Z Received a POST request for / from 127.0.0.1:61509\n2018-08-17T14:00:38Z Request headers:\n2018-08-17T14:00:38Z   Authorization: Basic X19jb29raWVfXzo3OGYxMzkzMzVmNmZkNjBhZjA5ZjY3MDcyNmM0ZDE0MDRiOGI2MTlmYjYwNDc3NjExYzZmYTQ1Y2E2ZjAxODZh\n2018-08-17T14:00:38Z   Connection: close\n2018-08-17T14:00:38Z   Content-Length: 37\n201",https://github.com/bitcoin/bitcoin/pull/13992#issuecomment-413875435,413875435,
practicalswift,2018-08-17T14:04:53Z,"Concept ACK\n\nPerhaps some sanitization or escaping is needed on the adversary controlled input before printing/logging to make sure weâ€™re not opening up to log injection, etc?",https://github.com/bitcoin/bitcoin/pull/13992#issuecomment-413876602,413876602,
promag,2018-08-17T14:29:35Z,@practicalswift Added a commit that only dumps headers if the request is valid (authorized and method is known).,https://github.com/bitcoin/bitcoin/pull/13992#issuecomment-413884086,413884086,
laanwj,2018-08-17T14:33:21Z,"~~Concept ACK, this could be useful (though is also very verbose)~~\n\nagree that string sanitizing is very important to prevent manipulation with escape codes etc.\n\n**EDIT** dumping the `Authorization` header as-is is also not a good idea, it leaks the cleartext username/password !",https://github.com/bitcoin/bitcoin/pull/13992#issuecomment-413885246,413885246,
promag,2018-08-17T14:44:02Z,"@laanwj right, I asked it above https://github.com/bitcoin/bitcoin/pull/13992#discussion_r210918337.",https://github.com/bitcoin/bitcoin/pull/13992#issuecomment-413888452,413888452,
laanwj,2018-08-17T15:04:42Z,"Thinking of it, I'm not sure this is worth the added code and complexity.\nIt's so easy to make `tcpdump` or `wireshark` dump this information if you really need it, say for debugging your HTTP implementation.",https://github.com/bitcoin/bitcoin/pull/13992#issuecomment-413894864,413894864,
promag,2018-08-17T15:28:30Z,"Updated to redact authorization header (added `EqualHeaders`).\n\nAgree with @laanwj and I'm going to close this unless there is a strong reason to keep it.",https://github.com/bitcoin/bitcoin/pull/13992#issuecomment-413901894,413901894,
DrahtBot,2018-08-17T20:43:54Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #12274 (http: avoid fd exhaustion by theuni)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",https://github.com/bitcoin/bitcoin/pull/13992#issuecomment-413983120,413983120,
l2a5b1,2018-08-19T10:12:28Z,"Hey @promag I was looking at this PR when you closed it. \n\nI agree with @laanwj and you that a web debugging proxy is the right tool for inspecting HTTP requests.\n\nIf the PR was still open and you where leaning towards implementing it, I would have suggested to extract the dump headers implementation and make it a freestanding utility function.\n\nBut more importantly, IMO the changes wh",https://github.com/bitcoin/bitcoin/pull/13992#issuecomment-414117434,414117434,
promag,2018-08-19T10:45:43Z,"Yeah I was going to cherry pick that.\n\nThanks for reviewing.",https://github.com/bitcoin/bitcoin/pull/13992#issuecomment-414119062,414119062,
promag,2018-08-20T00:39:23Z,"> But more importantly, IMO the changes where non-const member functions have been changed to `const` member function are useful.\n\n@251Labs see #14006.",https://github.com/bitcoin/bitcoin/pull/13992#issuecomment-414167833,414167833,
promag,2018-08-17T13:59:53Z,Should redact authorization header?,https://github.com/bitcoin/bitcoin/pull/13992#discussion_r210918337,210918337,src/httpserver.cpp
laanwj,2018-08-17T14:32:58Z,"it should avoid doing this if `!LogAcceptCategory(BCLog::HTTP)`, no need for the overhead to copy the headers when the result is ignored",https://github.com/bitcoin/bitcoin/pull/13992#discussion_r210928826,210928826,src/httpserver.cpp
practicalswift,2018-08-17T15:36:53Z,Is there a reason for relying on `libevent` in this function? If not I suggest doing this without relying on third-party code by introducing the required locale independent string helper functions in-tree. That would perhaps also allow us to reduce the number of know locale dependence problems listed here: https://github.com/bitcoin/bitcoin/blob/master/test/lint/lint-locale-dependence.sh#L4,https://github.com/bitcoin/bitcoin/pull/13992#discussion_r210949621,210949621,src/httpserver.cpp
