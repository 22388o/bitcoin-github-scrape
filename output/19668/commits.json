[
  {
    "sha": "af9ea55a72c94678b343f5dd98dc78f3a3ac58cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZjllYTU1YTcyYzk0Njc4YjM0M2Y1ZGQ5OGRjNzhmM2EzYWM1OGNi",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-05T10:10:11Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-29T17:43:23Z"
      },
      "message": "Use LockAssertion utility class instead of AssertLockHeld()\n\nThis change prepares for upcoming commit \"Do not hide compile-time\nthread safety warnings\" by replacing AssertLockHeld() with\nLockAssertion() where needed.",
      "tree": {
        "sha": "c29709fecde66d77505df7286742027a3b5f608f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c29709fecde66d77505df7286742027a3b5f608f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af9ea55a72c94678b343f5dd98dc78f3a3ac58cb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9Kk7sACgkQQQEIES5+\nqB9TJw//aX9gw7X7x16wDKKItZExYyAde8TkOigwf7AJ4a/ySUOsLjBjQDePs5xJ\nBM7sVgXp7SfF4RKcgmFUuwyifvR5u3hvDFxXhagulKT7O8Vn+pdNajJuwjjje0xM\nVSulvT34kZ7BMCRycIn54MTuOVOILE5rs/slQ9W2whTfTqQMQhQtHvQgKuoOnLuO\nZbPl9yT4gauw46rrpbacE/JrpN19Y0k8OYsjqQsdp1BP1GN/F2B/NHKZV7l/Y+Hn\nNUkuude+Vspu+qZma6chh530sucMoRBETeViyleOdFNpMzPp0PnDxZkgeSkLSll+\nCq3B83LBtAjiI17GGJUdaZuPwBdaW9C7yaMZ2JLn6FgU8G24AslAeNMCNMvGb+Gx\nUXjDuVH7kP2J+2boDouqgje228VyZd99nZ3UXQ/pJ5WsN6X7XWMi/d7xvir9C2VE\nFpDKG/+VWEJ37E+POTdoRLRtRS6V5lg3cf9RHRQOoqqiYG++7TrxpAhYPJoeSdVj\nDrHmFncwN1UdwVKoIbN1umDbYUETw47Iw4zXhAtfawc1irBaVohAcVT3vrfSmngb\nw3UeNMxaLs5qjqZICx7eKGrg5dKOgvMTAEQDb2TdnVbwd+7/V+9WA+FcvYXTXKSH\nCCTAE7o9GGevzfDnIVIU43F4okfo5g3RUGAxrO52ioR0/wVXxxY=\n=es/h\n-----END PGP SIGNATURE-----",
        "payload": "tree c29709fecde66d77505df7286742027a3b5f608f\nparent 7f609f68d835bece8b01da1b09b127c67769ae7d\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596622211 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1598723003 +0300\n\nUse LockAssertion utility class instead of AssertLockHeld()\n\nThis change prepares for upcoming commit \"Do not hide compile-time\nthread safety warnings\" by replacing AssertLockHeld() with\nLockAssertion() where needed.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af9ea55a72c94678b343f5dd98dc78f3a3ac58cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/af9ea55a72c94678b343f5dd98dc78f3a3ac58cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af9ea55a72c94678b343f5dd98dc78f3a3ac58cb/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f609f68d835bece8b01da1b09b127c67769ae7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f609f68d835bece8b01da1b09b127c67769ae7d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f609f68d835bece8b01da1b09b127c67769ae7d"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "cd1e672c2fee5789d834aeeaccd6ac037b56b984",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af9ea55a72c94678b343f5dd98dc78f3a3ac58cb/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af9ea55a72c94678b343f5dd98dc78f3a3ac58cb/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=af9ea55a72c94678b343f5dd98dc78f3a3ac58cb",
        "patch": "@@ -628,13 +628,12 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n             }\n         }\n         connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);\n             uint64_t nCMPCTBLOCKVersion = (pfrom->GetLocalServices() & NODE_WITNESS) ? 2 : 1;\n             if (lNodesAnnouncingHeaderAndIDs.size() >= 3) {\n                 // As per BIP152, we only get 3 of our peers to announce\n                 // blocks using compact encodings.\n                 connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman, nCMPCTBLOCKVersion](CNode* pnodeStop){\n-                    AssertLockHeld(cs_main);\n                     connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetSendVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/false, nCMPCTBLOCKVersion));\n                     return true;\n                 });\n@@ -1327,7 +1326,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n     }\n \n     m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);\n \n         // TODO: Avoid the repeated-serialization here\n         if (pnode->nVersion < INVALID_CB_NO_BAN_VERSION || pnode->fDisconnect)\n@@ -1469,7 +1468,8 @@ void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman&\n {\n     connman.ForEachNode([&txid, &wtxid](CNode* pnode)\n     {\n-        AssertLockHeld(cs_main);\n+        LockAssertion lock(::cs_main);\n+\n         CNodeState &state = *State(pnode->GetId());\n         if (state.m_wtxid_relay) {\n             pnode->PushTxInventory(wtxid);\n@@ -3957,7 +3957,7 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n         int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n \n         m_connman.ForEachNode([&](CNode* pnode) {\n-            AssertLockHeld(cs_main);\n+            LockAssertion lock(::cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already\n             if (!pnode->IsOutboundOrBlockRelayConn() || pnode->fDisconnect) return;\n@@ -3974,7 +3974,7 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n         });\n         if (worst_peer != -1) {\n             bool disconnected = m_connman.ForNode(worst_peer, [&](CNode *pnode) {\n-                AssertLockHeld(cs_main);\n+                LockAssertion lock(::cs_main);\n \n                 // Only disconnect a peer that has been connected to us for\n                 // some reasonable fraction of our check-frequency, to give"
      }
    ]
  },
  {
    "sha": "3ddc150857178bfb1c854c05bf9b526777876f56",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZGRjMTUwODU3MTc4YmZiMWM4NTRjMDViZjliNTI2Nzc3ODc2ZjU2",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-05T12:00:50Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-29T17:46:23Z"
      },
      "message": "Add missed thread safety annotations\n\nThis is needed for upcoming commit \"sync.h: Make runtime lock checks\nrequire compile-time lock checks\" to pass.",
      "tree": {
        "sha": "72d8a2b27b90e191c81ea9b60718b65910434bb8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72d8a2b27b90e191c81ea9b60718b65910434bb8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ddc150857178bfb1c854c05bf9b526777876f56",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9KlG8ACgkQQQEIES5+\nqB86zg/+PO3zImNVEOBL2/GSPJXk57u98flDrJUEQ+5DbmxzBeYM3dUP65nlnfWq\n74b9rl2F6/VT7Qo4NekAUXp3uzm4mMUP/2mWX67H4P4ScM0D1oVLfoTLEs/n0Qu4\nvmaDdsZg3AJ/hLzMKKIsECmboTU7ZDZJPsQKuTXUoMIui1D0K3zpKhN9PnTHZUy7\n204CtmxrWFbLXn8V/hhztKuRHLJ3NRMcbirjUAQ8it/e9nWEyjxmZ7xHqzahEWWE\niglAxx79kcLAtbsnvuQWlijSoBKOg7ogBq1hA49D6NDAeBFnTzgi/9vFtkTQnDZz\nysZUi9USbQ3bPDY+uQWneHyiVPrKtzzrtHUzKAAr6CGzy3rKWo/Xbai2c2FZk9Zz\nFYmy9uuBXzxScxVCtapdHGhNgK/dVu27Kro/EEzd2SSW0BWEPt77TUFF76vZMK5d\nQfFZ2AEWHf8rJoB88ayjaikOmXtf18les6259PZKktwpZHbfBZ8Dfv6WZTXWiAp+\nc6PTKFLHXBAYd4qV8yGkPtzStA9EaO4vfAk4TiWzeFNp+2ZxlztGjxCJk9zU6AG+\n9gpzFmYbSgWJ3EsyF7aclAbUtAlTm8detoVM5AT7WSAb+tYQFD0m6qpWcivMQ410\ndsMjeVP6m7E7CMiPWWBR4ThgNXsQcraGSJWYgR0e7dQQ6aoIz7A=\n=iLo+\n-----END PGP SIGNATURE-----",
        "payload": "tree 72d8a2b27b90e191c81ea9b60718b65910434bb8\nparent af9ea55a72c94678b343f5dd98dc78f3a3ac58cb\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596628850 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1598723183 +0300\n\nAdd missed thread safety annotations\n\nThis is needed for upcoming commit \"sync.h: Make runtime lock checks\nrequire compile-time lock checks\" to pass.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ddc150857178bfb1c854c05bf9b526777876f56",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ddc150857178bfb1c854c05bf9b526777876f56",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ddc150857178bfb1c854c05bf9b526777876f56/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af9ea55a72c94678b343f5dd98dc78f3a3ac58cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af9ea55a72c94678b343f5dd98dc78f3a3ac58cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af9ea55a72c94678b343f5dd98dc78f3a3ac58cb"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "14fb1fa89f9b09ad245d077ae8f2919b26b325f8",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ddc150857178bfb1c854c05bf9b526777876f56/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ddc150857178bfb1c854c05bf9b526777876f56/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=3ddc150857178bfb1c854c05bf9b526777876f56",
        "patch": "@@ -535,7 +535,7 @@ class DescriptorScriptPubKeyMan : public ScriptPubKeyMan\n     //! keeps track of whether Unlock has run a thorough check before\n     bool m_decryption_thoroughly_checked = false;\n \n-    bool AddDescriptorKeyWithDB(WalletBatch& batch, const CKey& key, const CPubKey &pubkey);\n+    bool AddDescriptorKeyWithDB(WalletBatch& batch, const CKey& key, const CPubKey &pubkey) EXCLUSIVE_LOCKS_REQUIRED(cs_desc_man);\n \n     KeyMap GetKeys() const EXCLUSIVE_LOCKS_REQUIRED(cs_desc_man);\n "
      },
      {
        "sha": "06e4e7c3a3a75813684984a823afee32f193610f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ddc150857178bfb1c854c05bf9b526777876f56/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ddc150857178bfb1c854c05bf9b526777876f56/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=3ddc150857178bfb1c854c05bf9b526777876f56",
        "patch": "@@ -1285,7 +1285,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     void LoadActiveScriptPubKeyMan(uint256 id, OutputType type, bool internal);\n \n     //! Create new DescriptorScriptPubKeyMans and add them to the wallet\n-    void SetupDescriptorScriptPubKeyMans();\n+    void SetupDescriptorScriptPubKeyMans() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     //! Return the DescriptorScriptPubKeyMan for a WalletDescriptor if it is already in the wallet\n     DescriptorScriptPubKeyMan* GetDescriptorScriptPubKeyMan(const WalletDescriptor& desc) const;"
      }
    ]
  },
  {
    "sha": "23d71d171e6e22ba5e4a909d597a54595b2a2c1f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyM2Q3MWQxNzFlNmUyMmJhNWU0YTkwOWQ1OTdhNTQ1OTViMmEyYzFm",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-05T11:56:20Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-29T17:46:23Z"
      },
      "message": "Do not hide compile-time thread safety warnings",
      "tree": {
        "sha": "e69fa9955c211d355a947cea93a5b0020217a836",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e69fa9955c211d355a947cea93a5b0020217a836"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23d71d171e6e22ba5e4a909d597a54595b2a2c1f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9KlG8ACgkQQQEIES5+\nqB+cERAAlACkkMx/eX8seZ7cnrsChvwES8z9kqP1UCSgd/bzM++wqgEpuHwbg6l/\ny9XwgacIvJSsfNGSv4bq2AMT+fwLgqjHS+oO/b+7612pMf9tUjaIDTLO4K2vwYs4\ndxRc4S09l2BV6v/TsBx4Q3gxDcJz/3GYcpbHp0dCAILwjHR9fZYdp1nktGDII1Mr\ndypNccicZKL59+lvsgfJPpYpnuR2Rnz+bzXU7AMhKqCOrsAe1vgHJVRelvBgWL+C\nfrD0rFLzadY5DRJPpMI/xga1sGftd0gVn7HRPJ9uQ/GbtZ2NcOkJKWTTs5R8qkUt\nqvYT9KlSCqtOjacK3pE5fccJWKbpTEbrG9DCQhZCUTJj1bKiPreglOCCp6gWOm/+\nbJNt/lx+5GLVwkzXTRehQ426E+XfVzQNwwEk3/2vCoebg1sEmKlNLaroIV93if6L\nFoZ8gjS/2QG9LIf5Pa9MpuuJrIHXoth6vaRN+Mi/46sOIdGxarNhOk8/x48/qvIF\ndUw0x0RcehsPy4ptSfbrqEVb+0oxV1e9l0hrTdG6YltneV2K5+jzV6fvfRS//B9s\nnuGVTiZHVPgvVgVgTQGI2Tgy9RMKUcw9iKI5C5K6hO5UOHc6hOiHodQd0e67zGVs\nlRcccEi8JVj2iMGF00lbPbFjA2d2eXBNCk+Pbew03lz1AccPFCw=\n=gePp\n-----END PGP SIGNATURE-----",
        "payload": "tree e69fa9955c211d355a947cea93a5b0020217a836\nparent 3ddc150857178bfb1c854c05bf9b526777876f56\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596628580 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1598723183 +0300\n\nDo not hide compile-time thread safety warnings\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23d71d171e6e22ba5e4a909d597a54595b2a2c1f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23d71d171e6e22ba5e4a909d597a54595b2a2c1f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23d71d171e6e22ba5e4a909d597a54595b2a2c1f/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ddc150857178bfb1c854c05bf9b526777876f56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ddc150857178bfb1c854c05bf9b526777876f56",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ddc150857178bfb1c854c05bf9b526777876f56"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c5f689337426a43dcfa658179c3c467826a78b91",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23d71d171e6e22ba5e4a909d597a54595b2a2c1f/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23d71d171e6e22ba5e4a909d597a54595b2a2c1f/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=23d71d171e6e22ba5e4a909d597a54595b2a2c1f",
        "patch": "@@ -53,7 +53,7 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs);\n void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n void DeleteLock(void* cs);\n bool LockStackEmpty();\n@@ -69,7 +69,7 @@ inline void EnterCritical(const char* pszName, const char* pszFile, int nLine, v\n inline void LeaveCritical() {}\n inline void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line) {}\n template <typename MutexType>\n-inline void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs) {}\n+inline void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) {}\n inline void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) {}\n inline void DeleteLock(void* cs) {}\n inline bool LockStackEmpty() { return true; }"
      }
    ]
  },
  {
    "sha": "2ee7743fe723227f2ea1b031eddb14fc6863f4c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWU3NzQzZmU3MjMyMjdmMmVhMWIwMzFlZGRiMTRmYzY4NjNmNGM4",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-08-05T16:55:31Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-29T17:46:47Z"
      },
      "message": "sync.h: Make runtime lock checks require compile-time lock checks",
      "tree": {
        "sha": "65bce22427bcb9addb344982545af9abfe75ada5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/65bce22427bcb9addb344982545af9abfe75ada5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ee7743fe723227f2ea1b031eddb14fc6863f4c8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9KlIcACgkQQQEIES5+\nqB8hQw//W0iuv6P8J7MDkjuFP+SyAcuzTgQ7TsrFcn1E7NAHk2Gc3jRHW2SRQg+i\ngoBJ6AVn0TFj1l295KtE8QUwIpXnf/Pb0GP4tgbVr+7SufaeeT2XdKYzOO1wv5H5\n55SYp1iQOImSvPLVsjepu8X3QvC51Tr0tM+X6OHDDCCnybK4Km7lRkF5wRmUnJqO\nCWYkhF5DBZL5DGSoWN9oS90SK0PnFMljYG9ODBrJL7Y5xda8V7UIz0FTovxCmfyz\nxCzd9aMG64uV6OR2YtbEzAPVOMMwqk6WpD1AVYvVO/Tyw0gjxc/ngajRxee1EuSY\nGUmWy8mez2FPEm+nzAsNDypb1BxzCFXbPZZvB8RDb3og+V30Iff78KZiGvaX4j8L\n287n+Z2ufYBbKtuZdmHxA6xXTIec1rSkhBM0fRXc8VO8D5Xh8DNtTb/ScYojjlUJ\nW1tCdoxmHuHzSVwySTfCIOEVsHg2k0Wz3zdOzlo22T8K8jf5uOWxm158btTJlEtG\njtrGVJyM/g0Fc0edlnU1dDAoTezHBkRH0MYOQwJ1XGT+isZIbkjD54iFRjMu5QQS\nav1SAfSJd/fdWZhMTV2xp4aUwXImfoNQdW+AU+OtWfL9e3dp/RPIM0/nAJDeCj15\noAgxOUQZhiooMXAmlA+SU9vCh/GPjx2n13oFBLoRMotUKnSNqac=\n=ZBbu\n-----END PGP SIGNATURE-----",
        "payload": "tree 65bce22427bcb9addb344982545af9abfe75ada5\nparent 23d71d171e6e22ba5e4a909d597a54595b2a2c1f\nauthor Anthony Towns <aj@erisian.com.au> 1596646531 +1000\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1598723207 +0300\n\nsync.h: Make runtime lock checks require compile-time lock checks\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ee7743fe723227f2ea1b031eddb14fc6863f4c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ee7743fe723227f2ea1b031eddb14fc6863f4c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ee7743fe723227f2ea1b031eddb14fc6863f4c8/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "23d71d171e6e22ba5e4a909d597a54595b2a2c1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23d71d171e6e22ba5e4a909d597a54595b2a2c1f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/23d71d171e6e22ba5e4a909d597a54595b2a2c1f"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 12,
      "deletions": 7
    },
    "files": [
      {
        "sha": "322198a852e5544f2902f13d6431e80353f56a24",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ee7743fe723227f2ea1b031eddb14fc6863f4c8/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ee7743fe723227f2ea1b031eddb14fc6863f4c8/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=2ee7743fe723227f2ea1b031eddb14fc6863f4c8",
        "patch": "@@ -238,12 +238,15 @@ void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine,\n template void AssertLockHeldInternal(const char*, const char*, int, Mutex*);\n template void AssertLockHeldInternal(const char*, const char*, int, RecursiveMutex*);\n \n-void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n+template <typename MutexType>\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs)\n {\n     if (!LockHeld(cs)) return;\n     tfm::format(std::cerr, \"Assertion failed: lock %s held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\n     abort();\n }\n+template void AssertLockNotHeldInternal(const char*, const char*, int, Mutex*);\n+template void AssertLockNotHeldInternal(const char*, const char*, int, RecursiveMutex*);\n \n void DeleteLock(void* cs)\n {"
      },
      {
        "sha": "7b397a80039a6c47f6384ca3fdfa74796b6591c4",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ee7743fe723227f2ea1b031eddb14fc6863f4c8/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ee7743fe723227f2ea1b031eddb14fc6863f4c8/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=2ee7743fe723227f2ea1b031eddb14fc6863f4c8",
        "patch": "@@ -53,8 +53,9 @@ void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n template <typename MutexType>\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs);\n-void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+template <typename MutexType>\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(!cs);\n void DeleteLock(void* cs);\n bool LockStackEmpty();\n \n@@ -69,8 +70,9 @@ inline void EnterCritical(const char* pszName, const char* pszFile, int nLine, v\n inline void LeaveCritical() {}\n inline void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line) {}\n template <typename MutexType>\n-inline void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) {}\n-inline void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) {}\n+inline void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(cs) {}\n+template <typename MutexType>\n+void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) EXCLUSIVE_LOCKS_REQUIRED(!cs) {}\n inline void DeleteLock(void* cs) {}\n inline bool LockStackEmpty() { return true; }\n #endif"
      },
      {
        "sha": "b5bf3e41a33893b08f0899f2c4fb70a68aabd8c2",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ee7743fe723227f2ea1b031eddb14fc6863f4c8/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ee7743fe723227f2ea1b031eddb14fc6863f4c8/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=2ee7743fe723227f2ea1b031eddb14fc6863f4c8",
        "patch": "@@ -245,7 +245,7 @@ bool TestLockPointValidity(const LockPoints* lp) EXCLUSIVE_LOCKS_REQUIRED(cs_mai\n  *\n  * See consensus/consensus.h for flag definitions.\n  */\n-bool CheckSequenceLocks(const CTxMemPool& pool, const CTransaction& tx, int flags, LockPoints* lp = nullptr, bool useExistingLockPoints = false) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+bool CheckSequenceLocks(const CTxMemPool& pool, const CTransaction& tx, int flags, LockPoints* lp = nullptr, bool useExistingLockPoints = false) EXCLUSIVE_LOCKS_REQUIRED(::cs_main, pool.cs);\n \n /**\n  * Closure representing one script verification"
      },
      {
        "sha": "a62e7b18bed7934459cf51dc1cfca10d5dca011a",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ee7743fe723227f2ea1b031eddb14fc6863f4c8/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ee7743fe723227f2ea1b031eddb14fc6863f4c8/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=2ee7743fe723227f2ea1b031eddb14fc6863f4c8",
        "patch": "@@ -1179,7 +1179,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n      * Obviously holding cs_main/cs_wallet when going into this call may cause\n      * deadlock\n      */\n-    void BlockUntilSyncedToCurrentChain() const LOCKS_EXCLUDED(cs_main, cs_wallet);\n+    void BlockUntilSyncedToCurrentChain() const EXCLUSIVE_LOCKS_REQUIRED(!::cs_main, !cs_wallet);\n \n     /** set a single wallet flag */\n     void SetWalletFlag(uint64_t flags);"
      }
    ]
  },
  {
    "sha": "ea74e10acf17903e44c85e3678853414653dd4e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTc0ZTEwYWNmMTc5MDNlNDRjODVlMzY3ODg1MzQxNDY1M2RkNGUx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-08T09:56:28Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-08-29T17:46:47Z"
      },
      "message": "doc: Add best practice for annotating/asserting locks",
      "tree": {
        "sha": "464bc6f9a473e999aaf6381c8d46a32b57fd503b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/464bc6f9a473e999aaf6381c8d46a32b57fd503b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea74e10acf17903e44c85e3678853414653dd4e1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9KlIgACgkQQQEIES5+\nqB84AA/+IHAMlpRV4QGtbqqRDdOEuyWTInBdtdnaRazjOlhaTkY8wDevoqd5Al06\nPl4HgBCYuutL8i7InoiTAmkn6r7VrsOxlkVfEoC3Eo9HWWwGgb4FYUVZIHRhhdA+\nbo7AEi0SqtJAebWvwXt43FclRK0EvelDXwq0jkjbJ3vhlxnpqzo1HBL+WXmxjNhJ\nrhgdH/1Nf035bbLgZhwYcBCx3G1bVGN4JhVtW7/eRY9LM3/fINAW96ZKKiJH/dnc\n/6xvGntCTMcgP6ismcOtOZoffAdT2XiKv9/3S2T62zZiyNIegvpfvdA31KwJ8GH9\noqoMCYF2WH+i5o41mhV32rvfCaknHMEaqJPLWNYdxhsiHJHK8KtAuJC1bjYIYySF\ntxfVOb6+JUPsnbsrHfNmuiwBCdsmfa+H1Jk8csExXcES2yXDitHTkQ+Lz40CBXCe\nKatd6wGIQD1s2AZGtQ37jBi6GPhRpPynOVEOtOnJxZMoStISwUZWXyIZhzYi3Kwf\n7Qrv98VYzszpCfb+wHfTg4kslLq4I7yQ9D3Kc9Pi2LZy4Cx+wEGynT1MU+jGdbFK\nuNO2ce+6QtYELFc8R4tsLSQocDZXGrbJ8RH06/bjbhhjyJskmGwKwbYBCnvv1MFg\nHR7sKPNGk5wPVAT7McIlUdBfoLd4D99p4FUfSu92zd00u054u2s=\n=AYJY\n-----END PGP SIGNATURE-----",
        "payload": "tree 464bc6f9a473e999aaf6381c8d46a32b57fd503b\nparent 2ee7743fe723227f2ea1b031eddb14fc6863f4c8\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1596880588 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1598723207 +0300\n\ndoc: Add best practice for annotating/asserting locks\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea74e10acf17903e44c85e3678853414653dd4e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea74e10acf17903e44c85e3678853414653dd4e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea74e10acf17903e44c85e3678853414653dd4e1/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ee7743fe723227f2ea1b031eddb14fc6863f4c8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ee7743fe723227f2ea1b031eddb14fc6863f4c8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ee7743fe723227f2ea1b031eddb14fc6863f4c8"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 66,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ef9ecbb08579d9e1ab0226107c817294e6ae68b9",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea74e10acf17903e44c85e3678853414653dd4e1/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea74e10acf17903e44c85e3678853414653dd4e1/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=ea74e10acf17903e44c85e3678853414653dd4e1",
        "patch": "@@ -746,6 +746,72 @@ the upper cycle, etc.\n Threads and synchronization\n ----------------------------\n \n+- Prefer `Mutex` type to `RecursiveMutex` one\n+\n+- Consistently use [Clang Thread Safety Analysis](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html) annotations to\n+  get compile-time warnings about potential race conditions in code. Combine annotations in function declarations with\n+  run-time asserts in function definitions:\n+\n+```C++\n+// txmempool.h\n+class CTxMemPool\n+{\n+public:\n+    ...\n+    mutable RecursiveMutex cs;\n+    ...\n+    void UpdateTransactionsFromBlock(...) EXCLUSIVE_LOCKS_REQUIRED(::cs_main, cs);\n+    ...\n+}\n+\n+// txmempool.cpp\n+void CTxMemPool::UpdateTransactionsFromBlock(...)\n+{\n+    AssertLockHeld(::cs_main);\n+    AssertLockHeld(cs);\n+    ...\n+}\n+```\n+\n+```C++\n+// validation.h\n+class ChainstateManager\n+{\n+public:\n+    ...\n+    bool ProcessNewBlock(...) EXCLUSIVE_LOCKS_REQUIRED(!::cs_main);\n+    ...\n+}\n+\n+// validation.cpp\n+bool ChainstateManager::ProcessNewBlock(...)\n+{\n+    AssertLockNotHeld(::cs_main);\n+    ...\n+    LOCK(::cs_main);\n+    ...\n+}\n+```\n+\n+- When Clang Thread Safety Analysis is unable to determine if a mutex is locked, use `LockAssertion` class instances:\n+\n+```C++\n+// net_processing.h\n+void RelayTransaction(...) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+// net_processing.cpp\n+void RelayTransaction(...)\n+{\n+    AssertLockHeld(::cs_main);\n+\n+    connman.ForEachNode([&txid, &wtxid](CNode* pnode) {\n+        LockAssertion lock(::cs_main);\n+        ...\n+    });\n+}\n+\n+```\n+\n - Build and run tests with `-DDEBUG_LOCKORDER` to verify that no potential\n   deadlocks are introduced. As of 0.12, this is defined by default when\n   configuring with `--enable-debug`."
      }
    ]
  }
]