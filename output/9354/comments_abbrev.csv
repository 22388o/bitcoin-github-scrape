laanwj,2016-12-15T18:51:02Z,utACK https://github.com/bitcoin/bitcoin/pull/9354/commits/5dd626a6d34331d1712f49ed164b7aa47a2d7ea7,https://github.com/bitcoin/bitcoin/pull/9354#issuecomment-267408931,267408931,
paveljanik,2016-12-15T19:41:04Z,"Huh, sorry, I do not understand it 8)\n\nWhat is the diff supposed to do? If it catches exception, 0 is returned. If it is OK, 0 is returned at the end. So what are we testing at all? Isn't this optimised out completely anyway?\n",https://github.com/bitcoin/bitcoin/pull/9354#issuecomment-267423411,267423411,
gmaxwell,2016-12-15T20:35:42Z,"@paveljanik  It catches crashes and asserts and has, in the past, found actual bugs;  our deseralizers are already (hopefully!) all used in contexts where the surrounding code is catching their exceptions.\n\nIt isn't optimized out either because the compiler doesn't know about side effects of the functions (or their ability to hit asserts!) but it might be prudent to harden a little more agains",https://github.com/bitcoin/bitcoin/pull/9354#issuecomment-267436923,267436923,
laanwj,2016-12-16T09:44:50Z,"> What is the diff supposed to do? If it catches exception, 0 is returned. If it is OK, 0 is returned at the end. So what are we testing at all? \n\nIt may make sense to return 1 in case of fail and 0 in case of success. That would make it possible for tools to distinguish between successful and failed parses, which is useful to automatically find examples of ""accepted"" data to compare against a",https://github.com/bitcoin/bitcoin/pull/9354#issuecomment-267555769,267555769,
