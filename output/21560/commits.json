[
  {
    "sha": "06030f7a42dea33c5120504dcd99d1714883f271",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjAzMGY3YTQyZGVhMzNjNTEyMDUwNGRjZDk5ZDE3MTQ4ODNmMjcx",
    "commit": {
      "author": {
        "name": "W. J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-03-31T11:29:21Z"
      },
      "committer": {
        "name": "W. J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-04-05T11:59:40Z"
      },
      "message": "contrib: generate-seeds.py generates output in BIP155 format",
      "tree": {
        "sha": "06b969f0698f538ae994bd4e6376d0b15bc644c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06b969f0698f538ae994bd4e6376d0b15bc644c4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06030f7a42dea33c5120504dcd99d1714883f271",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06030f7a42dea33c5120504dcd99d1714883f271",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06030f7a42dea33c5120504dcd99d1714883f271",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06030f7a42dea33c5120504dcd99d1714883f271/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f9e86d89660002d3dd17211d8b030a47b95d2fa2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f9e86d89660002d3dd17211d8b030a47b95d2fa2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f9e86d89660002d3dd17211d8b030a47b95d2fa2"
      }
    ],
    "stats": {
      "total": 103,
      "additions": 62,
      "deletions": 41
    },
    "files": [
      {
        "sha": "d95069277df622da03c382e0058bc5adb93c1f15",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 62,
        "deletions": 41,
        "changes": 103,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06030f7a42dea33c5120504dcd99d1714883f271/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06030f7a42dea33c5120504dcd99d1714883f271/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=06030f7a42dea33c5120504dcd99d1714883f271",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2017 Wladimir J. van der Laan\n+# Copyright (c) 2014-2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -13,44 +13,47 @@\n \n These files must consist of lines in the format\n \n-    <ip>\n     <ip>:<port>\n-    [<ipv6>]\n     [<ipv6>]:<port>\n-    <onion>.onion\n-    0xDDBBCCAA (IPv4 little-endian old pnSeeds format)\n+    <onion>.onion:<port>\n \n The output will be two data structures with the peers in binary format:\n \n-   static SeedSpec6 pnSeed6_main[]={\n-   ...\n-   }\n-   static SeedSpec6 pnSeed6_test[]={\n+   static const uint8_t chainparams_seed_{main,test}[]={\n    ...\n    }\n \n These should be pasted into `src/chainparamsseeds.h`.\n '''\n \n from base64 import b32decode\n-from binascii import a2b_hex\n+from enum import Enum\n+import struct\n import sys\n import os\n import re\n \n-# ipv4 in ipv6 prefix\n-pchIPv4 = bytearray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff])\n-# tor-specific ipv6 prefix\n-pchOnionCat = bytearray([0xFD,0x87,0xD8,0x7E,0xEB,0x43])\n-\n-def name_to_ipv6(addr):\n-    if len(addr)>6 and addr.endswith('.onion'):\n+class BIP155Network(Enum):\n+    IPV4 = 1\n+    IPV6 = 2\n+    TORV2 = 3\n+    TORV3 = 4\n+    I2P = 5\n+    CJDNS = 6\n+\n+def name_to_bip155(addr):\n+    '''Convert address string to BIP155 (networkID, addr) tuple.'''\n+    if addr.endswith('.onion'):\n         vchAddr = b32decode(addr[0:-6], True)\n-        if len(vchAddr) != 16-len(pchOnionCat):\n+        if len(vchAddr) == 10:\n+            return (BIP155Network.TORV2, vchAddr)\n+        elif len(vchAddr) == 35:\n+            assert(vchAddr[34] == 3)\n+            return (BIP155Network.TORV3, vchAddr[:32])\n+        else:\n             raise ValueError('Invalid onion %s' % vchAddr)\n-        return pchOnionCat + vchAddr\n     elif '.' in addr: # IPv4\n-        return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n+        return (BIP155Network.IPV4, bytes((int(x) for x in addr.split('.'))))\n     elif ':' in addr: # IPv6\n         sub = [[], []] # prefix, suffix\n         x = 0\n@@ -67,13 +70,12 @@ def name_to_ipv6(addr):\n                 sub[x].append(val & 0xff)\n         nullbytes = 16 - len(sub[0]) - len(sub[1])\n         assert((x == 0 and nullbytes == 0) or (x == 1 and nullbytes > 0))\n-        return bytearray(sub[0] + ([0] * nullbytes) + sub[1])\n-    elif addr.startswith('0x'): # IPv4-in-little-endian\n-        return pchIPv4 + bytearray(reversed(a2b_hex(addr[2:])))\n+        return (BIP155Network.IPV6, bytes(sub[0] + ([0] * nullbytes) + sub[1]))\n     else:\n         raise ValueError('Could not parse address %s' % addr)\n \n-def parse_spec(s, defaultport):\n+def parse_spec(s):\n+    '''Convert endpoint string to BIP155 (networkID, addr, port) tuple.'''\n     match = re.match(r'\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n     if match: # ipv6\n         host = match.group(1)\n@@ -85,32 +87,52 @@ def parse_spec(s, defaultport):\n         (host,_,port) = s.partition(':')\n \n     if not port:\n-        port = defaultport\n+        port = 0\n     else:\n         port = int(port)\n \n-    host = name_to_ipv6(host)\n+    host = name_to_bip155(host)\n \n-    return (host,port)\n+    return host + (port, )\n \n-def process_nodes(g, f, structname, defaultport):\n-    g.write('static SeedSpec6 %s[] = {\\n' % structname)\n-    first = True\n+def ser_compact_size(l):\n+    r = b\"\"\n+    if l < 253:\n+        r = struct.pack(\"B\", l)\n+    elif l < 0x10000:\n+        r = struct.pack(\"<BH\", 253, l)\n+    elif l < 0x100000000:\n+        r = struct.pack(\"<BI\", 254, l)\n+    else:\n+        r = struct.pack(\"<BQ\", 255, l)\n+    return r\n+\n+def bip155_serialize(spec):\n+    '''\n+    Serialize (networkID, addr, port) tuple to BIP155 binary format.\n+    '''\n+    r = b\"\"\n+    r += struct.pack('B', spec[0].value)\n+    r += ser_compact_size(len(spec[1]))\n+    r += spec[1]\n+    r += struct.pack('>H', spec[2])\n+    return r\n+\n+def process_nodes(g, f, structname):\n+    g.write('static const uint8_t %s[] = {\\n' % structname)\n     for line in f:\n         comment = line.find('#')\n         if comment != -1:\n             line = line[0:comment]\n         line = line.strip()\n         if not line:\n             continue\n-        if not first:\n-            g.write(',\\n')\n-        first = False\n \n-        (host,port) = parse_spec(line, defaultport)\n-        hoststr = ','.join(('0x%02x' % b) for b in host)\n-        g.write('    {{%s}, %i}' % (hoststr, port))\n-    g.write('\\n};\\n')\n+        spec = parse_spec(line)\n+        blob = bip155_serialize(spec)\n+        hoststr = ','.join(('0x%02x' % b) for b in blob)\n+        g.write(f'    {hoststr},\\n')\n+    g.write('};\\n')\n \n def main():\n     if len(sys.argv)<2:\n@@ -124,14 +146,13 @@ def main():\n     g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n     g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n     g.write(' *\\n')\n-    g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n-    g.write(' * IPv4 as well as onion addresses are wrapped inside an IPv6 address accordingly.\\n')\n+    g.write(' * Each line contains a BIP155 serialized (networkID, addr, port) tuple.\\n')\n     g.write(' */\\n')\n     with open(os.path.join(indir,'nodes_main.txt'), 'r', encoding=\"utf8\") as f:\n-        process_nodes(g, f, 'pnSeed6_main', 8333)\n+        process_nodes(g, f, 'chainparams_seed_main')\n     g.write('\\n')\n     with open(os.path.join(indir,'nodes_test.txt'), 'r', encoding=\"utf8\") as f:\n-        process_nodes(g, f, 'pnSeed6_test', 18333)\n+        process_nodes(g, f, 'chainparams_seed_test')\n     g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n \n if __name__ == '__main__':"
      }
    ]
  },
  {
    "sha": "2a257de113fd31539b68c28c47ef94f257b6e427",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTI1N2RlMTEzZmQzMTUzOWI2OGMyOGM0N2VmOTRmMjU3YjZlNDI3",
    "commit": {
      "author": {
        "name": "W. J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-03-31T11:29:14Z"
      },
      "committer": {
        "name": "W. J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-04-05T12:00:48Z"
      },
      "message": "contrib: Add a few TorV3 seed nodes",
      "tree": {
        "sha": "2afc4a7e25c7a636970b7f20ce4d839176373c66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2afc4a7e25c7a636970b7f20ce4d839176373c66"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a257de113fd31539b68c28c47ef94f257b6e427",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a257de113fd31539b68c28c47ef94f257b6e427",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2a257de113fd31539b68c28c47ef94f257b6e427",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a257de113fd31539b68c28c47ef94f257b6e427/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06030f7a42dea33c5120504dcd99d1714883f271",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06030f7a42dea33c5120504dcd99d1714883f271",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06030f7a42dea33c5120504dcd99d1714883f271"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 26,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c43caa73eb83b521903abea9850135273b4e45c1",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a257de113fd31539b68c28c47ef94f257b6e427/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a257de113fd31539b68c28c47ef94f257b6e427/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=2a257de113fd31539b68c28c47ef94f257b6e427",
        "patch": "@@ -1162,3 +1162,29 @@ zuytrfevzjcpizli.onion:8333\n zvq6dpt3i2ofdp3g.onion:8333\n zwwm6ga7u2hqe2sd.onion:8333\n zyqb4lenfspntj5m.onion:8333\n+\n+# manually added 2021-03 for minimal torv3 bootstrap support\n+2g5qfdkn2vvcbqhzcyvyiitg4ceukybxklraxjnu7atlhd22gdwywaid.onion:8333\n+2jmtxvyup3ijr7u6uvu7ijtnojx4g5wodvaedivbv74w4vzntxbrhvad.onion:8333\n+37m62wn7dz3uqpathpc4qfmgrbupachj52nt3jbtbjugpbu54kbud7yd.onion:8333\n+5g72ppm3krkorsfopcm2bi7wlv4ohhs4u4mlseymasn7g7zhdcyjpfid.onion:8333\n+7cgwjuwi5ehvcay4tazy7ya6463bndjk6xzrttw5t3xbpq4p22q6fyid.onion:8333\n+7pyrpvqdhmayxggpcyqn5l3m5vqkw3qubnmgwlpya2mdo6x7pih7r7id.onion:8333\n+b64xcbleqmwgq2u46bh4hegnlrzzvxntyzbmucn3zt7cssm7y4ubv3id.onion:8333\n+ejxefzf5fpst4mg2rib7grksvscl7p6fvjp6agzgfc2yglxnjtxc3aid.onion:8333\n+fjdyxicpm4o42xmedlwl3uvk5gmqdfs5j37wir52327vncjzvtpfv7yd.onion:8333\n+fpz6r5ppsakkwypjcglz6gcnwt7ytfhxskkfhzu62tnylcknh3eq6pad.onion:8333\n+fzhn4uoxfbfss7h7d6ffbn266ca432ekbbzvqtsdd55ylgxn4jucm5qd.onion:8333\n+gxo5anvfnffnftfy5frkgvplq3rpga2ie3tcblo2vl754fvnhgorn5yd.onion:8333\n+ifdu5qvbofrt4ekui2iyb3kbcyzcsglazhx2hn4wfskkrx2v24qxriid.onion:8333\n+itz3oxsihs62muvknc237xabl5f6w6rfznfhbpayrslv2j2ubels47yd.onion:8333\n+lrjh6fywjqttmlifuemq3puhvmshxzzyhoqx7uoufali57eypuenzzid.onion:8333\n+m7cbpjolo662uel7rpaid46as2otcj44vvwg3gccodnvaeuwbm3anbyd.onion:8333\n+opnyfyeiibe5qo5a3wbxzbb4xdiagc32bbce46owmertdknta5mi7uyd.onion:8333\n+owjsdxmzla6d7lrwkbmetywqym5cyswpihciesfl5qdv2vrmwsgy4uqd.onion:8333\n+q7kgmd7n7h27ds4fg7wocgniuqb3oe2zxp4nfe4skd5da6wyipibqzqd.onion:8333\n+rp7k2go3s5lyj3fnj6zn62ktarlrsft2ohlsxkyd7v3e3idqyptvread.onion:8333\n+sys54sv4xv3hn3sdiv3oadmzqpgyhd4u4xphv4xqk64ckvaxzm57a7yd.onion:8333\n+tddeij4qigtjr6jfnrmq6btnirmq5msgwcsdpcdjr7atftm7cxlqztid.onion:8333\n+vi5bnbxkleeqi6hfccjochnn65lcxlfqs4uwgmhudph554zibiusqnad.onion:8333\n+xqt25cobm5zqucac3634zfght72he6u3eagfyej5ellbhcdgos7t2had.onion:8333"
      }
    ]
  },
  {
    "sha": "9b29d5df7fc555eaea42029f334f2995c6ccde3d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjI5ZDVkZjdmYzU1NWVhZWE0MjAyOWYzMzRmMjk5NWM2Y2NkZTNk",
    "commit": {
      "author": {
        "name": "W. J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-03-31T17:37:39Z"
      },
      "committer": {
        "name": "W. J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-04-05T12:00:48Z"
      },
      "message": "contrib: Add explicit port numbers for testnet seeds\n\nThis is necessary now due to parsing change.",
      "tree": {
        "sha": "ce3d63bb326189034e61fd258dd1599d8c45f1ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce3d63bb326189034e61fd258dd1599d8c45f1ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b29d5df7fc555eaea42029f334f2995c6ccde3d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b29d5df7fc555eaea42029f334f2995c6ccde3d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9b29d5df7fc555eaea42029f334f2995c6ccde3d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b29d5df7fc555eaea42029f334f2995c6ccde3d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2a257de113fd31539b68c28c47ef94f257b6e427",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a257de113fd31539b68c28c47ef94f257b6e427",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2a257de113fd31539b68c28c47ef94f257b6e427"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "0af88d1bde45aa6f0903f402df4fa0810e6511af",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b29d5df7fc555eaea42029f334f2995c6ccde3d/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b29d5df7fc555eaea42029f334f2995c6ccde3d/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=9b29d5df7fc555eaea42029f334f2995c6ccde3d",
        "patch": "@@ -1,11 +1,11 @@\n # List of fixed seed nodes for testnet\n \n # Onion nodes\n-thfsmmn2jbitcoin.onion\n-it2pj4f7657g3rhi.onion\n-nkf5e6b7pl4jfd4a.onion\n-4zhkir2ofl7orfom.onion\n-t6xj6wilh4ytvcs7.onion\n-i6y6ivorwakd7nw3.onion\n-ubqj4rsu3nqtxmtp.onion\n+thfsmmn2jbitcoin.onion:18333\n+it2pj4f7657g3rhi.onion:18333\n+nkf5e6b7pl4jfd4a.onion:18333\n+4zhkir2ofl7orfom.onion:18333\n+t6xj6wilh4ytvcs7.onion:18333\n+i6y6ivorwakd7nw3.onion:18333\n+ubqj4rsu3nqtxmtp.onion:18333\n "
      }
    ]
  },
  {
    "sha": "b2ee8b207de78f03356905bd60b7b00b6f49c252",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMmVlOGIyMDdkZTc4ZjAzMzU2OTA1YmQ2MGI3YjAwYjZmNDljMjUy",
    "commit": {
      "author": {
        "name": "W. J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-03-31T11:29:24Z"
      },
      "committer": {
        "name": "W. J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-04-05T12:00:48Z"
      },
      "message": "net: Deserialize hardcoded seeds from BIP155 blob\n\nSwitch from IPv6 slot-based format to more compact and flexible BIP155\nformat.",
      "tree": {
        "sha": "2ec9d6324bcb8ebf0f67f8440f0c911bb44c7641",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ec9d6324bcb8ebf0f67f8440f0c911bb44c7641"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2ee8b207de78f03356905bd60b7b00b6f49c252",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2ee8b207de78f03356905bd60b7b00b6f49c252",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2ee8b207de78f03356905bd60b7b00b6f49c252",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2ee8b207de78f03356905bd60b7b00b6f49c252/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9b29d5df7fc555eaea42029f334f2995c6ccde3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b29d5df7fc555eaea42029f334f2995c6ccde3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9b29d5df7fc555eaea42029f334f2995c6ccde3d"
      }
    ],
    "stats": {
      "total": 2403,
      "additions": 1211,
      "deletions": 1192
    },
    "files": [
      {
        "sha": "1bfd059c549836e2cfb16163461cd8be594b2ca0",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ee8b207de78f03356905bd60b7b00b6f49c252/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ee8b207de78f03356905bd60b7b00b6f49c252/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=b2ee8b207de78f03356905bd60b7b00b6f49c252",
        "patch": "@@ -134,7 +134,7 @@ class CMainParams : public CChainParams {\n \n         bech32_hrp = \"bc\";\n \n-        vFixedSeeds = std::vector<SeedSpec6>(std::begin(pnSeed6_main), std::end(pnSeed6_main));\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_main), std::end(chainparams_seed_main));\n \n         fDefaultConsistencyChecks = false;\n         fRequireStandard = true;\n@@ -239,7 +239,7 @@ class CTestNetParams : public CChainParams {\n \n         bech32_hrp = \"tb\";\n \n-        vFixedSeeds = std::vector<SeedSpec6>(std::begin(pnSeed6_test), std::end(pnSeed6_test));\n+        vFixedSeeds = std::vector<uint8_t>(std::begin(chainparams_seed_test), std::end(chainparams_seed_test));\n \n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;"
      },
      {
        "sha": "32b208e9f3abdfc0780e84faeebfebc99d23616e",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ee8b207de78f03356905bd60b7b00b6f49c252/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ee8b207de78f03356905bd60b7b00b6f49c252/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=b2ee8b207de78f03356905bd60b7b00b6f49c252",
        "patch": "@@ -14,11 +14,6 @@\n #include <memory>\n #include <vector>\n \n-struct SeedSpec6 {\n-    uint8_t addr[16];\n-    uint16_t port;\n-};\n-\n typedef std::map<int, uint256> MapCheckpoints;\n \n struct CCheckpointData {\n@@ -108,7 +103,7 @@ class CChainParams\n     const std::vector<std::string>& DNSSeeds() const { return vSeeds; }\n     const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n     const std::string& Bech32HRP() const { return bech32_hrp; }\n-    const std::vector<SeedSpec6>& FixedSeeds() const { return vFixedSeeds; }\n+    const std::vector<uint8_t>& FixedSeeds() const { return vFixedSeeds; }\n     const CCheckpointData& Checkpoints() const { return checkpointData; }\n \n     //! Get allowed assumeutxo configuration.\n@@ -130,7 +125,7 @@ class CChainParams\n     std::string bech32_hrp;\n     std::string strNetworkID;\n     CBlock genesis;\n-    std::vector<SeedSpec6> vFixedSeeds;\n+    std::vector<uint8_t> vFixedSeeds;\n     bool fDefaultConsistencyChecks;\n     bool fRequireStandard;\n     bool m_is_test_chain;"
      },
      {
        "sha": "cd7b806621dfe60852c00dffd84426d36203c5f2",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 1198,
        "deletions": 1175,
        "changes": 2373,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ee8b207de78f03356905bd60b7b00b6f49c252/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ee8b207de78f03356905bd60b7b00b6f49c252/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=b2ee8b207de78f03356905bd60b7b00b6f49c252"
      },
      {
        "sha": "e9170d06cd947a3b0dc258dd74f79f5ee98b3861",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2ee8b207de78f03356905bd60b7b00b6f49c252/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2ee8b207de78f03356905bd60b7b00b6f49c252/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b2ee8b207de78f03356905bd60b7b00b6f49c252",
        "patch": "@@ -141,22 +141,23 @@ bool GetLocal(CService& addr, const CNetAddr *paddrPeer)\n     return nBestScore >= 0;\n }\n \n-//! Convert the pnSeed6 array into usable address objects.\n-static std::vector<CAddress> convertSeed6(const std::vector<SeedSpec6> &vSeedsIn)\n+//! Convert the serialized seeds into usable address objects.\n+static std::vector<CAddress> ConvertSeeds(const std::vector<uint8_t> &vSeedsIn)\n {\n     // It'll only connect to one or two seed nodes because once it connects,\n     // it'll get a pile of addresses with newer timestamps.\n     // Seed nodes are given a random 'last seen time' of between one and two\n     // weeks ago.\n     const int64_t nOneWeek = 7*24*60*60;\n     std::vector<CAddress> vSeedsOut;\n-    vSeedsOut.reserve(vSeedsIn.size());\n     FastRandomContext rng;\n-    for (const auto& seed_in : vSeedsIn) {\n-        struct in6_addr ip;\n-        memcpy(&ip, seed_in.addr, sizeof(ip));\n-        CAddress addr(CService(ip, seed_in.port), GetDesirableServiceFlags(NODE_NONE));\n+    CDataStream s(vSeedsIn, SER_NETWORK, PROTOCOL_VERSION | ADDRV2_FORMAT);\n+    while (!s.eof()) {\n+        CService endpoint;\n+        s >> endpoint;\n+        CAddress addr{endpoint, GetDesirableServiceFlags(NODE_NONE)};\n         addr.nTime = GetTime() - rng.randrange(nOneWeek) - nOneWeek;\n+        LogPrint(BCLog::NET, \"Added hardcoded seed: %s\\n\", addr.ToString());\n         vSeedsOut.push_back(addr);\n     }\n     return vSeedsOut;\n@@ -1840,7 +1841,7 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n             if (add_fixed_seeds_now) {\n                 CNetAddr local;\n                 local.SetInternal(\"fixedseeds\");\n-                addrman.Add(convertSeed6(Params().FixedSeeds()), local);\n+                addrman.Add(ConvertSeeds(Params().FixedSeeds()), local);\n                 add_fixed_seeds = false;\n             }\n         }"
      }
    ]
  }
]