jonatack,2021-03-31 11:58:01,"Concept ACK, will review ",https://github.com/bitcoin/bitcoin/pull/21560#issuecomment-811007463,811007463,
DrahtBot,2021-03-31 18:07:36,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/21560#issuecomment-811298193,811298193,
laanwj,2021-04-01 07:14:48,"> I'm ok with squashing.\n\nRight i'll squash the `squashme:` commits into the appropriate top-level commits once it seems the (first round of) review is over. I think this is somewhat friendlier on reviewers in progress than squashing all the time.",https://github.com/bitcoin/bitcoin/pull/21560#issuecomment-811700335,811700335,
jonatack,2021-04-03 10:18:40,"> I'm running the gist (had to update the file perms for it to run) and it's taking a while as I have many (nearly 1835 and increasing) tor v3 addresses\n\nThe gist script finished. It checked 1836 v3 addresses and returned 1523 of them, sorted. I saved it in a text file if useful.",https://github.com/bitcoin/bitcoin/pull/21560#issuecomment-812845248,812845248,
jonatack,2021-04-04 11:04:43,"Update:\n```json\n$ ./src/bitcoin-cli -addressinfo\n{\n  ""addresses known"": {\n    ""ipv4"": 185,\n    ""ipv6"": 0,\n    ""torv2"": 5597,\n    ""torv3"": 2220,\n    ""i2p"": 7,\n    ""total"": 8009\n  }\n}\n```\n",https://github.com/bitcoin/bitcoin/pull/21560#issuecomment-813014057,813014057,
MarcoFalke,2021-04-04 12:08:13,Concept ACK. I'll pick up #20648 again after this is merged.,https://github.com/bitcoin/bitcoin/pull/21560#issuecomment-813022184,813022184,
laanwj,2021-04-05 11:50:54,"> The gist script finished. It checked 1836 v3 addresses and returned 1523 of them, sorted. I saved it in a text file if useful.\n\nMaybe! The scope of this PR is just to get things started in that regard, not to add as many nodes as possible.  We'd have to decide on how many, and which ones to use; as a guide `makeseeds.py` limits to 512 seeds per net, but how do we want to divide this over Tor",https://github.com/bitcoin/bitcoin/pull/21560#issuecomment-813356162,813356162,
laanwj,2021-04-05 12:08:30,"Squashed all the squashme's into the appropriate commits [a9ee5683ce4013904f6e53f29e37632969926b0d..b2ee8b207de78f03356905bd60b7b00b6f49c252](https://github.com/bitcoin/bitcoin/compare/a9ee5683ce4013904f6e53f29e37632969926b0d..b2ee8b207de78f03356905bd60b7b00b6f49c252)\n\nThe only overall differences are @jonatack's latest comments.",https://github.com/bitcoin/bitcoin/pull/21560#issuecomment-813362000,813362000,
jonatack,2021-04-05 17:52:10,"ACK b2ee8b207de78f03356905bd60b7b00b6f49c252 \n\nTested hitting `ConvertSeeds()` on mainnet and testnet.\n",https://github.com/bitcoin/bitcoin/pull/21560#issuecomment-813535327,813535327,
vasild,2021-03-31 13:19:42,"I ran https://gist.github.com/laanwj/b3d7b01ef61ce07c2eff0a72a6b90183 on my node:\n\n* Extra addresses I have that are not on this list:\n```\n2g5qfdkn2vvcbqhzcyvyiitg4ceukybxklraxjnu7atlhd22gdwywaid.onion:8333\n2jmtxvyup3ijr7u6uvu7ijtnojx4g5wodvaedivbv74w4vzntxbrhvad.onion:8333\n37m62wn7dz3uqpathpc4qfmgrbupachj52nt3jbtbjugpbu54kbud7yd.onion:8333\n7cgwjuwi5ehvcay4tazy7ya6463bndjk6xzrttw5t3x",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r604889799,604889799,contrib/seeds/nodes_main.txt
laanwj,2021-03-31 15:06:59,Thank you. I pushed a squashme commit to add your nodes and sort the list. I have also adapted the script to print a sorted list.,https://github.com/bitcoin/bitcoin/pull/21560#discussion_r604981372,604981372,contrib/seeds/nodes_main.txt
vasild,2021-03-31 17:04:45,nit: I guess `len(addr)>6 and ` can be removed - python's `endswith()` will return false if the string is too short.,https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605071657,605071657,contrib/seeds/generate-seeds.py
vasild,2021-03-31 17:07:15,This will brick with `foo.b32.i2p`. I guess out of the scope of this PR.,https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605073289,605073289,contrib/seeds/generate-seeds.py
vasild,2021-03-31 17:15:24,Can this reuse `ser_compact_size()` from `test/functional/test_framework/messages.py`? Or move it to another place so that both can use it?,https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605078670,605078670,contrib/seeds/generate-seeds.py
vasild,2021-03-31 17:20:14,note: very similar to `CAddress::serialize_v2()` from `test/functional/test_framework/messages.py`.,https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605082017,605082017,contrib/seeds/generate-seeds.py
vasild,2021-03-31 17:26:13,After these changes `contrib/seeds/nodes_test.txt` needs to have `:8333` appended to its addresses.,https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605086076,605086076,contrib/seeds/generate-seeds.py
laanwj,2021-03-31 17:32:50,I would like to keep this script self-contained. It is simple enough logic.,https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605090859,605090859,contrib/seeds/generate-seeds.py
laanwj,2021-03-31 17:33:32,Same comment as above. Jumping though hoops to share code between this script and the tests is not worth it for such trivial functionality imo.,https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605091270,605091270,contrib/seeds/generate-seeds.py
laanwj,2021-03-31 17:34:47,Good catch! s/8333/18333/ofc ,https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605092122,605092122,contrib/seeds/generate-seeds.py
laanwj,2021-03-31 17:35:29,"Yes, adding I2P hardcoded seeds can be done in a follow-up PR.",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605092577,605092577,contrib/seeds/generate-seeds.py
laanwj,2021-03-31 17:36:33,"Yes, that could be removed (done in squashme pr).",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605093305,605093305,contrib/seeds/generate-seeds.py
sipa,2021-03-31 22:42:04,With a `VectorReader` here you'd avoid copying the encoded bytes.,https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605265988,605265988,src/net.cpp
laanwj,2021-04-01 07:12:54,"Yeaâ€”a lot of optimizations could be made here; it's a byte array in rodata, we could return it as `span<uint8_t>`, and deserialize directly from there, making it zero-copy. That said, this happens once in the lifetime of a node (ideally) and it's not that much data, so i'm not sure.\nBut if it's just a matter of swapping the type used i'm in :smile: ",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605425973,605425973,src/net.cpp
laanwj,2021-04-01 07:29:04,"I think I'm not sure how to use it. At least the obvious change gives a lot of compiler errors:\n```diff\ndiff --git a/src/net.cpp b/src/net.cpp\nindex 52e35b56077bf6562202461f73a93e03097c91f9..507d61df0cd541e0696ead1c22cc582380bb1521 100644\n--- a/src/net.cpp\n+++ b/src/net.cpp\n@@ -151,8 +151,8 @@ static std::vector<CAddress> convertSeeds(const std::vector<uint8_t> &vSeedsIn)\n     const ",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605434972,605434972,src/net.cpp
sipa,2021-04-01 07:37:05,"Ok, never mind then. We can figure out how to make this work in a follow-up (there are probably several other cases in the codebase where this is done).",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605439255,605439255,src/net.cpp
vasild,2021-04-01 11:01:42,This printed 1188 lines to the log. I think it is ok.,https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605566426,605566426,src/net.cpp
vasild,2021-04-01 11:11:52,"nit: the corresponding line in the test framework uses `B` instead of `>B`:\n\nhttps://github.com/bitcoin/bitcoin/blob/80a699fda9ff1129546cabbf17e955680a1cc705/test/functional/test_framework/messages.py#L273\n\nsince this is duplicated code, I think it is good to keep it ""the same"" and since byte order is irrelevant for one-byte fields, maybe remove the `>` from here.",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605571516,605571516,contrib/seeds/generate-seeds.py
laanwj,2021-04-01 11:36:14,"AHHH good catch, this is just to debug / test, it's convenient to be able to check if it matches the generated data. I'm not sure there is any point to it for end users :smile: But if you think it's ok we can leave it in.",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605584917,605584917,src/net.cpp
laanwj,2021-04-01 11:37:44,"Sure, will remove it. Myself I tend to use "">"" symbolically in any kind of big-endian structure just in case I don't forget it when adding fields later (but there is not really any risk of that here).\n\nEdit: done in a9ee5683ce4013904f6e53f29e37632969926b0d",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605585662,605585662,contrib/seeds/generate-seeds.py
vasild,2021-04-01 13:42:07,There are also a lot of `IP ... mapped to AS0 belongs to new bucket ...` messages printed by `-debug=net`. ~0 on this new printout.,https://github.com/bitcoin/bitcoin/pull/21560#discussion_r605667769,605667769,src/net.cpp
jonatack,2021-04-02 19:16:59,"1007a73 naming nit, this function only has one caller so could be easily updated to the current style\n```suggestion\nstatic std::vector<CAddress> ConvertSeeds(const std::vector<uint8_t> &vSeedsIn)\n```",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r606381505,606381505,src/net.cpp
jonatack,2021-04-02 19:17:44,"1007a73 could use braced initialization\n```suggestion\n        CAddress addr{endpoint, GetDesirableServiceFlags(NODE_NONE)};\n```",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r606381809,606381809,src/net.cpp
laanwj,2021-04-05 12:03:40,"Thanks, done",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r607054074,607054074,src/net.cpp
laanwj,2021-04-05 12:03:48,"Thanks, done",https://github.com/bitcoin/bitcoin/pull/21560#discussion_r607054108,607054108,src/net.cpp
