[
  {
    "sha": "f7f3a96b74bb795d6e184a628adce21c744d234f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmN2YzYTk2Yjc0YmI3OTVkNmUxODRhNjI4YWRjZTIxYzc0NGQyMzRm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-02-16T16:58:45Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-02-17T22:25:42Z"
      },
      "message": "Improve block database load error reporting",
      "tree": {
        "sha": "79999de8be9721005662fc0dcc51cc4a030a1256",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/79999de8be9721005662fc0dcc51cc4a030a1256"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7f3a96b74bb795d6e184a628adce21c744d234f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7f3a96b74bb795d6e184a628adce21c744d234f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f7f3a96b74bb795d6e184a628adce21c744d234f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7f3a96b74bb795d6e184a628adce21c744d234f/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2f0fa79db290d5139c27409055b2035099afa6fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f0fa79db290d5139c27409055b2035099afa6fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2f0fa79db290d5139c27409055b2035099afa6fd"
      }
    ],
    "stats": {
      "total": 120,
      "additions": 94,
      "deletions": 26
    },
    "files": [
      {
        "sha": "12dde36fe780d7e5fabdef54c49426844fe6002b",
        "filename": "src/checkqueue.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7f3a96b74bb795d6e184a628adce21c744d234f/src/checkqueue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7f3a96b74bb795d6e184a628adce21c744d234f/src/checkqueue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkqueue.h?ref=f7f3a96b74bb795d6e184a628adce21c744d234f",
        "patch": "@@ -163,6 +163,10 @@ template<typename T> class CCheckQueue {\n             condQuit.wait(lock);\n     }\n \n+    ~CCheckQueue() {\n+        Quit();\n+    }\n+\n     friend class CCheckQueueControl<T>;\n };\n "
      },
      {
        "sha": "99e89d9edc59f55045bf49b84376582d4ace6a8b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 61,
        "deletions": 18,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7f3a96b74bb795d6e184a628adce21c744d234f/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7f3a96b74bb795d6e184a628adce21c744d234f/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=f7f3a96b74bb795d6e184a628adce21c744d234f",
        "patch": "@@ -82,6 +82,7 @@ void Shutdown(void* parg)\n     if (fFirstThread)\n     {\n         fShutdown = true;\n+        fRequestShutdown = true;\n         nTransactionsUpdated++;\n         bitdb.Flush(false);\n         {\n@@ -791,27 +792,69 @@ bool AppInit2()\n     nTotalCache -= nCoinDBCache;\n     nCoinCacheSize = nTotalCache / 300; // coins in memory require around 300 bytes\n \n-    uiInterface.InitMessage(_(\"Loading block index...\"));\n+    bool fLoaded = false;\n+    while (!fLoaded) {\n+        bool fReset = fReindex;\n+        std::string strLoadError;\n \n-    nStart = GetTimeMillis();\n-    pblocktree = new CBlockTreeDB(nBlockTreeDBCache, false, fReindex);\n-    pcoinsdbview = new CCoinsViewDB(nCoinDBCache, false, fReindex);\n-    pcoinsTip = new CCoinsViewCache(*pcoinsdbview);\n-\n-    if (fReindex)\n-        pblocktree->WriteReindexing(true);\n-\n-    if (!LoadBlockIndex())\n-        return InitError(_(\"Error loading block database\"));\n+        uiInterface.InitMessage(_(\"Loading block index...\"));\n \n-    // Initialize the block index (no-op if non-empty database was already loaded)\n-    if (!InitBlockIndex())\n-        return InitError(_(\"Error initializing block database\"));\n-\n-    uiInterface.InitMessage(_(\"Verifying block database integrity...\"));\n+        nStart = GetTimeMillis();\n+        do {\n+            try {\n+                UnloadBlockIndex();\n+                delete pcoinsTip;\n+                delete pcoinsdbview;\n+                delete pblocktree;\n+\n+                pblocktree = new CBlockTreeDB(nBlockTreeDBCache, false, fReindex);\n+                pcoinsdbview = new CCoinsViewDB(nCoinDBCache, false, fReindex);\n+                pcoinsTip = new CCoinsViewCache(*pcoinsdbview);\n+\n+                if (fReindex)\n+                    pblocktree->WriteReindexing(true);\n+\n+                if (!LoadBlockIndex()) {\n+                    strLoadError = _(\"Error loading block database\");\n+                    break;\n+                }\n+\n+                // Initialize the block index (no-op if non-empty database was already loaded)\n+                if (!InitBlockIndex()) {\n+                    strLoadError = _(\"Error initializing block database\");\n+                    break;\n+                }\n+\n+                uiInterface.InitMessage(_(\"Verifying block database integrity...\"));\n+                if (!VerifyDB()) {\n+                    strLoadError = _(\"Corrupted block database detected\");\n+                    break;\n+                }\n+            } catch(std::exception &e) {\n+                strLoadError = _(\"Error opening block database\");\n+                break;\n+            }\n \n-    if (!VerifyDB())\n-        return InitError(_(\"Corrupted block database detected. Please restart the client with -reindex.\"));\n+            fLoaded = true;\n+        } while(false);\n+\n+        if (!fLoaded) {\n+            // first suggest a reindex\n+            if (!fReset) {\n+                bool fRet = uiInterface.ThreadSafeMessageBox(\n+                    strLoadError + \".\\n\" + _(\"Do you want to rebuild the block database now?\"),\n+                    \"\", CClientUIInterface::MSG_ERROR | CClientUIInterface::BTN_ABORT);\n+                if (fRet) {\n+                    fReindex = true;\n+                    fRequestShutdown = false;\n+                } else {\n+                    return false;\n+                }\n+            } else {\n+                return InitError(strLoadError);\n+            }\n+        }\n+    }\n \n     if (mapArgs.count(\"-txindex\") && fTxIndex != GetBoolArg(\"-txindex\", false))\n         return InitError(_(\"You need to rebuild the databases using -reindex to change -txindex\"));"
      },
      {
        "sha": "3151a806dcb23fe9fbc1f22e801a61530b4b238c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7f3a96b74bb795d6e184a628adce21c744d234f/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7f3a96b74bb795d6e184a628adce21c744d234f/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f7f3a96b74bb795d6e184a628adce21c744d234f",
        "patch": "@@ -2653,6 +2653,18 @@ bool VerifyDB() {\n     return true;\n }\n \n+void UnloadBlockIndex()\n+{\n+    mapBlockIndex.clear();\n+    setBlockIndexValid.clear();\n+    pindexGenesisBlock = NULL;\n+    nBestHeight = 0;\n+    bnBestChainWork = 0;\n+    bnBestInvalidWork = 0;\n+    hashBestChain = 0;\n+    pindexBest = NULL;\n+}\n+\n bool LoadBlockIndex()\n {\n     if (fTestNet)"
      },
      {
        "sha": "4a217d174605c56041dcbfcc4f4f69bcb81ddec7",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7f3a96b74bb795d6e184a628adce21c744d234f/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7f3a96b74bb795d6e184a628adce21c744d234f/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=f7f3a96b74bb795d6e184a628adce21c744d234f",
        "patch": "@@ -139,6 +139,8 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp = NULL);\n bool InitBlockIndex();\n /** Load the block tree and coins database from disk */\n bool LoadBlockIndex();\n+/** Unload database information */\n+void UnloadBlockIndex();\n /** Verify consistency of the block and coin databases */\n bool VerifyDB();\n /** Print the loaded block tree */"
      },
      {
        "sha": "c0e00c471553f062a5ae2ae202b300a0115a677e",
        "filename": "src/noui.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7f3a96b74bb795d6e184a628adce21c744d234f/src/noui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7f3a96b74bb795d6e184a628adce21c744d234f/src/noui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.cpp?ref=f7f3a96b74bb795d6e184a628adce21c744d234f",
        "patch": "@@ -9,7 +9,7 @@\n \n #include <string>\n \n-static int noui_ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style)\n+static bool noui_ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style)\n {\n     std::string strCaption;\n     // Check for usage of predefined caption\n@@ -29,7 +29,7 @@ static int noui_ThreadSafeMessageBox(const std::string& message, const std::stri\n \n     printf(\"%s: %s\\n\", strCaption.c_str(), message.c_str());\n     fprintf(stderr, \"%s: %s\\n\", strCaption.c_str(), message.c_str());\n-    return 4;\n+    return false;\n }\n \n static bool noui_ThreadSafeAskFee(int64 /*nFeeRequired*/)"
      },
      {
        "sha": "afd8d71a0eca095b0b52649d31ef015b2bc36bae",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7f3a96b74bb795d6e184a628adce21c744d234f/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7f3a96b74bb795d6e184a628adce21c744d234f/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=f7f3a96b74bb795d6e184a628adce21c744d234f",
        "patch": "@@ -34,23 +34,27 @@ Q_IMPORT_PLUGIN(qtaccessiblewidgets)\n static BitcoinGUI *guiref;\n static QSplashScreen *splashref;\n \n-static void ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style)\n+static bool ThreadSafeMessageBox(const std::string& message, const std::string& caption, unsigned int style)\n {\n     // Message from network thread\n     if(guiref)\n     {\n         bool modal = (style & CClientUIInterface::MODAL);\n+        bool ret = false;\n         // In case of modal message, use blocking connection to wait for user to click a button\n         QMetaObject::invokeMethod(guiref, \"message\",\n                                    modal ? GUIUtil::blockingGUIThreadConnection() : Qt::QueuedConnection,\n                                    Q_ARG(QString, QString::fromStdString(caption)),\n                                    Q_ARG(QString, QString::fromStdString(message)),\n-                                   Q_ARG(unsigned int, style));\n+                                   Q_ARG(unsigned int, style),\n+                                   Q_ARG(bool*, &ret));\n+        return ret;\n     }\n     else\n     {\n         printf(\"%s: %s\\n\", caption.c_str(), message.c_str());\n         fprintf(stderr, \"%s: %s\\n\", caption.c_str(), message.c_str());\n+        return false;\n     }\n }\n "
      },
      {
        "sha": "d88470188381a5edf12a7a6a67ce35f6a0ecddbf",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7f3a96b74bb795d6e184a628adce21c744d234f/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7f3a96b74bb795d6e184a628adce21c744d234f/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=f7f3a96b74bb795d6e184a628adce21c744d234f",
        "patch": "@@ -606,7 +606,7 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n     progressBar->setToolTip(tooltip);\n }\n \n-void BitcoinGUI::message(const QString &title, const QString &message, unsigned int style)\n+void BitcoinGUI::message(const QString &title, const QString &message, unsigned int style, bool *ret)\n {\n     QString strTitle = tr(\"Bitcoin\") + \" - \";\n     // Default to information icon\n@@ -646,7 +646,9 @@ void BitcoinGUI::message(const QString &title, const QString &message, unsigned\n             buttons = QMessageBox::Ok;\n \n         QMessageBox mBox((QMessageBox::Icon)nMBoxIcon, strTitle, message, buttons);\n-        mBox.exec();\n+        int r = mBox.exec();\n+        if (ret != NULL)\n+            *ret = r == QMessageBox::Ok;\n     }\n     else\n         notificator->notify((Notificator::Class)nNotifyIcon, strTitle, message);"
      },
      {
        "sha": "c684fcf249537987fa8f1e0683508eeb5f63d3df",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7f3a96b74bb795d6e184a628adce21c744d234f/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7f3a96b74bb795d6e184a628adce21c744d234f/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=f7f3a96b74bb795d6e184a628adce21c744d234f",
        "patch": "@@ -126,8 +126,9 @@ public slots:\n        @param[in] message   the displayed text\n        @param[in] style     modality and style definitions (icon and used buttons - buttons only for message boxes)\n                             @see CClientUIInterface::MessageBoxFlags\n+       @param[in] ret       pointer to a bool that will be modified to whether Ok was clicked (modal only)\n     */\n-    void message(const QString &title, const QString &message, unsigned int style);\n+    void message(const QString &title, const QString &message, unsigned int style, bool *ret = NULL);\n     /** Asks the user whether to pay the transaction fee or to cancel the transaction.\n        It is currently not possible to pass a return value to another thread through\n        BlockingQueuedConnection, so an indirected pointer is used."
      },
      {
        "sha": "f7dbe208944e51d0242a493cc07c1af9ac76faf2",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7f3a96b74bb795d6e184a628adce21c744d234f/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7f3a96b74bb795d6e184a628adce21c744d234f/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=f7f3a96b74bb795d6e184a628adce21c744d234f",
        "patch": "@@ -68,7 +68,7 @@ class CClientUIInterface\n     };\n \n     /** Show message box. */\n-    boost::signals2::signal<void (const std::string& message, const std::string& caption, unsigned int style)> ThreadSafeMessageBox;\n+    boost::signals2::signal<bool (const std::string& message, const std::string& caption, unsigned int style), boost::signals2::last_value<bool> > ThreadSafeMessageBox;\n \n     /** Ask the user whether they want to pay a fee or not. */\n     boost::signals2::signal<bool (int64 nFeeRequired), boost::signals2::last_value<bool> > ThreadSafeAskFee;"
      }
    ]
  }
]