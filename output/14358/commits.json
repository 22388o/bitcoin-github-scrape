[
  {
    "sha": "036d36fd73d3aa5a5dd8a3ef6da805dd76503371",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMzZkMzZmZDczZDNhYTVhNWRkOGEzZWY2ZGE4MDVkZDc2NTAzMzcx",
    "commit": {
      "author": {
        "name": "Roman Zeyde",
        "email": "me@romanzey.de",
        "date": "2018-09-30T15:02:21Z"
      },
      "committer": {
        "name": "Roman Zeyde",
        "email": "me@romanzey.de",
        "date": "2018-11-10T19:47:51Z"
      },
      "message": "[logs] Fix a few log messages related to duration measurement\n\nAlso, remove fixed-width formatting for the duration value ('%15d' -> '%d')",
      "tree": {
        "sha": "a7e97ab2da6d49aba4961100b522978ab874fb31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a7e97ab2da6d49aba4961100b522978ab874fb31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/036d36fd73d3aa5a5dd8a3ef6da805dd76503371",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niIUEABMKAC0WIQQVyMNXSuTx4l8/NcWHyuX6RpF8uwUCW+c15w8cbWVAcm9tYW56\nZXkuZGUACgkQh8rl+kaRfLuIrAEA5BESCUnKnn3YdEuhH/qFDUXfERtD27+TSshh\nRlqDlmAA/0CB/0pNiWfVXNiW6qcSWcf9GoevDjUO9ohj3BoFuMRS\n=Cu0b\n-----END PGP SIGNATURE-----",
        "payload": "tree a7e97ab2da6d49aba4961100b522978ab874fb31\nparent edc715240cb6738262ae96dea476544052eb5351\nauthor Roman Zeyde <me@romanzey.de> 1538319741 +0300\ncommitter Roman Zeyde <me@romanzey.de> 1541879271 +0200\n\n[logs] Fix a few log messages related to duration measurement\n\nAlso, remove fixed-width formatting for the duration value ('%15d' -> '%d')\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/036d36fd73d3aa5a5dd8a3ef6da805dd76503371",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/036d36fd73d3aa5a5dd8a3ef6da805dd76503371",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/036d36fd73d3aa5a5dd8a3ef6da805dd76503371/comments",
    "author": {
      "login": "romanz",
      "id": 9900,
      "node_id": "MDQ6VXNlcjk5MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/romanz",
      "html_url": "https://github.com/romanz",
      "followers_url": "https://api.github.com/users/romanz/followers",
      "following_url": "https://api.github.com/users/romanz/following{/other_user}",
      "gists_url": "https://api.github.com/users/romanz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/romanz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
      "organizations_url": "https://api.github.com/users/romanz/orgs",
      "repos_url": "https://api.github.com/users/romanz/repos",
      "events_url": "https://api.github.com/users/romanz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/romanz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "romanz",
      "id": 9900,
      "node_id": "MDQ6VXNlcjk5MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/romanz",
      "html_url": "https://github.com/romanz",
      "followers_url": "https://api.github.com/users/romanz/followers",
      "following_url": "https://api.github.com/users/romanz/following{/other_user}",
      "gists_url": "https://api.github.com/users/romanz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/romanz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
      "organizations_url": "https://api.github.com/users/romanz/orgs",
      "repos_url": "https://api.github.com/users/romanz/repos",
      "events_url": "https://api.github.com/users/romanz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/romanz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "edc715240cb6738262ae96dea476544052eb5351",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edc715240cb6738262ae96dea476544052eb5351",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/edc715240cb6738262ae96dea476544052eb5351"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "32cb1e8cb83250c894f7c94af7033e7aee56cdab",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/036d36fd73d3aa5a5dd8a3ef6da805dd76503371/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/036d36fd73d3aa5a5dd8a3ef6da805dd76503371/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=036d36fd73d3aa5a5dd8a3ef6da805dd76503371",
        "patch": "@@ -1536,7 +1536,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n             }\n \n             fLoaded = true;\n-            LogPrintf(\" block index %15dms\\n\", GetTimeMillis() - load_block_index_start_time);\n+            LogPrintf(\"- Loaded block index: %dms\\n\", GetTimeMillis() - load_block_index_start_time);\n         } while(false);\n \n         if (!fLoaded && !ShutdownRequested()) {"
      },
      {
        "sha": "0cc30965a8369a3f43f6b220678437b1d0804d40",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/036d36fd73d3aa5a5dd8a3ef6da805dd76503371/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/036d36fd73d3aa5a5dd8a3ef6da805dd76503371/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=036d36fd73d3aa5a5dd8a3ef6da805dd76503371",
        "patch": "@@ -479,7 +479,7 @@ void CConnman::DumpBanlist()\n         SetBannedSetDirty(false);\n     }\n \n-    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+    LogPrint(BCLog::NET, \"- Flushed %d banned node ips/subnets to banlist.dat: %dms\\n\",\n         banmap.size(), GetTimeMillis() - nStart);\n }\n \n@@ -1696,7 +1696,7 @@ void CConnman::DumpAddresses()\n     CAddrDB adb;\n     adb.Write(addrman);\n \n-    LogPrint(BCLog::NET, \"Flushed %d addresses to peers.dat  %dms\\n\",\n+    LogPrint(BCLog::NET, \"- Flushed %d addresses to peers.dat: %dms\\n\",\n            addrman.size(), GetTimeMillis() - nStart);\n }\n \n@@ -2312,7 +2312,7 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n     {\n         CAddrDB adb;\n         if (adb.Read(addrman))\n-            LogPrintf(\"Loaded %i addresses from peers.dat  %dms\\n\", addrman.size(), GetTimeMillis() - nStart);\n+            LogPrintf(\"- Loaded %i addresses from peers.dat: %dms\\n\", addrman.size(), GetTimeMillis() - nStart);\n         else {\n             addrman.Clear(); // Addrman can be in an inconsistent state after failure, reset it\n             LogPrintf(\"Invalid or missing peers.dat; recreating\\n\");\n@@ -2330,7 +2330,7 @@ bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n         SetBannedSetDirty(false); // no need to write down, just read data\n         SweepBanned(); // sweep out unused entries\n \n-        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+        LogPrint(BCLog::NET, \"- Loaded %d banned node ips/subnets from banlist.dat: %dms\\n\",\n             banmap.size(), GetTimeMillis() - nStart);\n     } else {\n         LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");"
      },
      {
        "sha": "ac47ade00a3d60b5f31ae94d9b87d0082f978595",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/036d36fd73d3aa5a5dd8a3ef6da805dd76503371/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/036d36fd73d3aa5a5dd8a3ef6da805dd76503371/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=036d36fd73d3aa5a5dd8a3ef6da805dd76503371",
        "patch": "@@ -715,7 +715,7 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n             } else\n                 mi++;\n         }\n-        LogPrint(BCLog::DB, \"BerkeleyEnvironment::Flush: Flush(%s)%s took %15dms\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" database not started\", GetTimeMillis() - nStart);\n+        LogPrint(BCLog::DB, \"- BerkeleyEnvironment::Flush: Flush(%s)%s: %dms\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" database not started\", GetTimeMillis() - nStart);\n         if (fShutdown) {\n             char** listp;\n             if (mapFileUseCount.empty()) {\n@@ -763,7 +763,7 @@ bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n                 env->CheckpointLSN(strFile);\n \n                 env->mapFileUseCount.erase(mi++);\n-                LogPrint(BCLog::DB, \"Flushed %s %dms\\n\", strFile, GetTimeMillis() - nStart);\n+                LogPrint(BCLog::DB, \"- Flushed %s: %dms\\n\", strFile, GetTimeMillis() - nStart);\n                 ret = true;\n             }\n         }"
      },
      {
        "sha": "b3db97a920ad28316fe6a699e232131c81ff5891",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/036d36fd73d3aa5a5dd8a3ef6da805dd76503371/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/036d36fd73d3aa5a5dd8a3ef6da805dd76503371/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=036d36fd73d3aa5a5dd8a3ef6da805dd76503371",
        "patch": "@@ -4117,7 +4117,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     walletInstance->m_spend_zero_conf_change = gArgs.GetBoolArg(\"-spendzeroconfchange\", DEFAULT_SPEND_ZEROCONF_CHANGE);\n     walletInstance->m_signal_rbf = gArgs.GetBoolArg(\"-walletrbf\", DEFAULT_WALLET_RBF);\n \n-    walletInstance->WalletLogPrintf(\"Wallet completed loading in %15dms\\n\", GetTimeMillis() - nStart);\n+    walletInstance->WalletLogPrintf(\"Wallet completed loading in %dms\\n\", GetTimeMillis() - nStart);\n \n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n@@ -4172,7 +4172,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n             }\n             walletInstance->ScanForWalletTransactions(pindexRescan, nullptr, reserver, true);\n         }\n-        walletInstance->WalletLogPrintf(\"Rescan completed in %15dms\\n\", GetTimeMillis() - nStart);\n+        walletInstance->WalletLogPrintf(\"Rescan completed in %dms\\n\", GetTimeMillis() - nStart);\n         walletInstance->ChainStateFlushed(chainActive.GetLocator());\n         walletInstance->database->IncrementUpdateCounter();\n "
      }
    ]
  }
]