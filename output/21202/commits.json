[
  {
    "sha": "ad5f01b96045f304b6cf9100879592b835c49c40",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDVmMDFiOTYwNDVmMzA0YjZjZjkxMDA4Nzk1OTJiODM1YzQ5YzQw",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-02-16T19:32:49Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-02-17T23:45:11Z"
      },
      "message": "[validation] Move the lock annotation from function definition to declaration\n\nWhen the annotation is on the definition, it does not check call sites between\nthe declaration and the definition.",
      "tree": {
        "sha": "f5abe56a02f146c99dc6e31f230519dbaf4d89e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5abe56a02f146c99dc6e31f230519dbaf4d89e5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad5f01b96045f304b6cf9100879592b835c49c40",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad5f01b96045f304b6cf9100879592b835c49c40",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad5f01b96045f304b6cf9100879592b835c49c40",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad5f01b96045f304b6cf9100879592b835c49c40/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "92fee79dab384acea47bf20741a9847a58253330",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92fee79dab384acea47bf20741a9847a58253330",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/92fee79dab384acea47bf20741a9847a58253330"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "18c1c674503ab9a09e418238ddfdbfeedd8b7e21",
        "filename": "src/test/txvalidationcache_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad5f01b96045f304b6cf9100879592b835c49c40/src/test/txvalidationcache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad5f01b96045f304b6cf9100879592b835c49c40/src/test/txvalidationcache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidationcache_tests.cpp?ref=ad5f01b96045f304b6cf9100879592b835c49c40",
        "patch": "@@ -13,7 +13,7 @@\n \n #include <boost/test/unit_test.hpp>\n \n-bool CheckInputScripts(const CTransaction& tx, TxValidationState &state, const CCoinsViewCache &inputs, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks);\n+bool CheckInputScripts(const CTransaction& tx, TxValidationState& state, const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck>* pvChecks) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n BOOST_AUTO_TEST_SUITE(txvalidationcache_tests)\n "
      },
      {
        "sha": "7f5b3e0b22ca7a6273a32526d1f8dfa6fbc36dde",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad5f01b96045f304b6cf9100879592b835c49c40/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad5f01b96045f304b6cf9100879592b835c49c40/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ad5f01b96045f304b6cf9100879592b835c49c40",
        "patch": "@@ -198,7 +198,7 @@ CBlockIndex* BlockManager::FindForkInGlobalIndex(const CChain& chain, const CBlo\n \n std::unique_ptr<CBlockTreeDB> pblocktree;\n \n-bool CheckInputScripts(const CTransaction& tx, TxValidationState &state, const CCoinsViewCache &inputs, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks = nullptr);\n+bool CheckInputScripts(const CTransaction& tx, TxValidationState& state, const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck>* pvChecks = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n static FILE* OpenUndoFile(const FlatFilePos &pos, bool fReadOnly = false);\n static FlatFileSeq BlockFileSeq();\n static FlatFileSeq UndoFileSeq();\n@@ -1450,7 +1450,7 @@ void InitScriptExecutionCache() {\n  *\n  * Non-static (and re-declared) in src/test/txvalidationcache_tests.cpp\n  */\n-bool CheckInputScripts(const CTransaction& tx, TxValidationState &state, const CCoinsViewCache &inputs, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+bool CheckInputScripts(const CTransaction& tx, TxValidationState& state, const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck>* pvChecks)\n {\n     if (tx.IsCoinBase()) return true;\n "
      }
    ]
  },
  {
    "sha": "25c57d640992255ed67964a44b17afbfd4bed0cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNWM1N2Q2NDA5OTIyNTVlZDY3OTY0YTQ0YjE3YWZiZmQ0YmVkMGNm",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-02-16T19:41:41Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2021-02-17T23:58:23Z"
      },
      "message": "[doc] Add a note about where lock annotations should go.",
      "tree": {
        "sha": "b7433842064b77f76bd643febf832bb84826ce94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b7433842064b77f76bd643febf832bb84826ce94"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25c57d640992255ed67964a44b17afbfd4bed0cf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25c57d640992255ed67964a44b17afbfd4bed0cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/25c57d640992255ed67964a44b17afbfd4bed0cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25c57d640992255ed67964a44b17afbfd4bed0cf/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad5f01b96045f304b6cf9100879592b835c49c40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad5f01b96045f304b6cf9100879592b835c49c40",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad5f01b96045f304b6cf9100879592b835c49c40"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 18,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8f2d7af089987431bcb641834dea05280e870bed",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25c57d640992255ed67964a44b17afbfd4bed0cf/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25c57d640992255ed67964a44b17afbfd4bed0cf/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=25c57d640992255ed67964a44b17afbfd4bed0cf",
        "patch": "@@ -785,6 +785,11 @@ Threads and synchronization\n   get compile-time warnings about potential race conditions in code. Combine annotations in function declarations with\n   run-time asserts in function definitions:\n \n+  - In functions that are declared separately from where they are defined, the\n+    thread safety annotations should be added exclusively to the function\n+    declaration. Annotations on the definition could lead to false positives\n+    (lack of compile failure) at call sites between the two.\n+\n ```C++\n // txmempool.h\n class CTxMemPool"
      },
      {
        "sha": "f9d93942b91167857a58f96833b806702c9de294",
        "filename": "src/test/txvalidationcache_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25c57d640992255ed67964a44b17afbfd4bed0cf/src/test/txvalidationcache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25c57d640992255ed67964a44b17afbfd4bed0cf/src/test/txvalidationcache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidationcache_tests.cpp?ref=25c57d640992255ed67964a44b17afbfd4bed0cf",
        "patch": "@@ -13,7 +13,10 @@\n \n #include <boost/test/unit_test.hpp>\n \n-bool CheckInputScripts(const CTransaction& tx, TxValidationState& state, const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck>* pvChecks) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+bool CheckInputScripts(const CTransaction& tx, TxValidationState& state,\n+                       const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore,\n+                       bool cacheFullScriptStore, PrecomputedTransactionData& txdata,\n+                       std::vector<CScriptCheck>* pvChecks) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n BOOST_AUTO_TEST_SUITE(txvalidationcache_tests)\n "
      },
      {
        "sha": "4c33342c448da167039334442887b16e7482a4bd",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25c57d640992255ed67964a44b17afbfd4bed0cf/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25c57d640992255ed67964a44b17afbfd4bed0cf/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=25c57d640992255ed67964a44b17afbfd4bed0cf",
        "patch": "@@ -198,7 +198,11 @@ CBlockIndex* BlockManager::FindForkInGlobalIndex(const CChain& chain, const CBlo\n \n std::unique_ptr<CBlockTreeDB> pblocktree;\n \n-bool CheckInputScripts(const CTransaction& tx, TxValidationState& state, const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck>* pvChecks = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+bool CheckInputScripts(const CTransaction& tx, TxValidationState& state,\n+                       const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore,\n+                       bool cacheFullScriptStore, PrecomputedTransactionData& txdata,\n+                       std::vector<CScriptCheck>* pvChecks = nullptr)\n+                       EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n static FILE* OpenUndoFile(const FlatFilePos &pos, bool fReadOnly = false);\n static FlatFileSeq BlockFileSeq();\n static FlatFileSeq UndoFileSeq();\n@@ -1450,7 +1454,10 @@ void InitScriptExecutionCache() {\n  *\n  * Non-static (and re-declared) in src/test/txvalidationcache_tests.cpp\n  */\n-bool CheckInputScripts(const CTransaction& tx, TxValidationState& state, const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck>* pvChecks)\n+bool CheckInputScripts(const CTransaction& tx, TxValidationState& state,\n+                       const CCoinsViewCache& inputs, unsigned int flags, bool cacheSigStore,\n+                       bool cacheFullScriptStore, PrecomputedTransactionData& txdata,\n+                       std::vector<CScriptCheck>* pvChecks)\n {\n     if (tx.IsCoinBase()) return true;\n "
      }
    ]
  }
]