DrahtBot,2021-07-02 15:44:01,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23212](https://github.com/bitcoin/bitcoin/pull/23212) (lint: enable mypy import checking by fanquake)\n* [#23148](https:",https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-873091435,873091435,
practicalswift,2021-07-24 20:09:12,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-886105724,886105724,
tryphe,2021-08-01 03:55:52,"Apologies if this information is elsewhere, but could you summarize the advantages, and disadvantages if any, of using LIEF over Wladimir's script?\n\nDoes this add a required dependency to the build?\n\nThank you.",https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-890443667,890443667,
fanquake,2021-08-02 05:28:46,"> but could you summarize the advantages,\n\nBitcoin Core really shouldn't be maintaining it's own ELF parser. This has already proved somewhat problematic, i.e: #21454.\n\n> Does this add a required dependency to the build?\n\nNo. It's already needed for release builds, and used for the macOS and Windows binaries.",https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-890727922,890727922,
tryphe,2021-08-02 05:36:02,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-890730521,890730521,
laanwj,2021-08-18 15:00:23,"Concept ACK.\n\n> Does this add a required dependency to the build?\n\nNot adding a dependency was my reason for writing my own, at the time. But as now we already rely on LIEF for windows PE and OSX, using it for ELF too seems fair, it's better than relying on a hodge-podge of text output of various tools, and I'm definitely not planning to write PE and OSX binary parsers.\n\n(I wish I had ",https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-901188330,901188330,
fanquake,2021-10-11 06:39:10,Rebased and un-drafted. Fixed up some outstanding issues in the security checks. This should be ready for review. Now also includes some of the changes from #23148.,https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-939728032,939728032,
fanquake,2021-10-11 07:20:22,"Guix build:\n```bash\nbash-5.1# find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n6c81cb5c88643da842fecd1466ab0112877f91ef5ca558fa11663c546c571a72  guix-build-63b63720bd05/output/aarch64-linux-gnu/SHA256SUMS.part\na1a96d8f4555a87e66b5806f43239f380f49d8107b5479265f7412ff303e5c4b  guix-build-63b63720bd05/output/aarch64-linux-gn",https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-939757229,939757229,
hebasto,2021-10-11 10:22:23,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n6c81cb5c88643da842fecd1466ab0112877f91ef5ca558fa11663c546c571a72  guix-build-63b63720bd05/output/aarch64-linux-gnu/SHA256SUMS.part\na1a96d8f4555a87e66b5806f43239f380f49d8107b5479265f7412ff303e5c4b  guix-build-63b63720bd05/output/aarch64-linux-gnu/bitc",https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-939894639,939894639,
fanquake,2021-10-12 03:45:24,"Guix build:\n```bash\nbash-5.1# find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n78269d3163b9898f1853887e2303ad3987c3c6720c53919f3c5ad51350e1d89e  guix-build-ce69e18947dd/output/aarch64-linux-gnu/SHA256SUMS.part\n7a1b261af19acc88ae15899ddc5e31a0f555c79306d0fe91573af38dc02e15d5  guix-build-ce69e18947dd/output/aarch64-linux-gn",https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-940628943,940628943,
dongcarl,2021-10-12 14:04:04,Code Review ACK ce69e18947dd917d54eb036e732ac7f7bceede76,https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-941044255,941044255,
laanwj,2021-10-13 11:28:28,Code review ACK ce69e18947dd917d54eb036e732ac7f7bceede76,https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-942203990,942203990,
laanwj,2021-10-13 11:54:18,*waves goodbye to pixie* :cry: ,https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-942223654,942223654,
DrahtBot,2021-10-15 00:50:41,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 5b7210c8745d9572fe94620f848d4ee1304c91a7<br>(master) | commit 69a2b863e2702f267fa8fbe7fe697e12014eddc6<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`c79a21dc3da6e71b...`](https://drahtbot.space/guix/bitcoin/bitcoin/5b7210c8745d9572fe94620f848d4ee1304c91a7/SHA256SUMS.part) | [`b4c07f5c2bb1306f...`](https://,https://github.com/bitcoin/bitcoin/pull/22392#issuecomment-943872847,943872847,
laanwj,2021-10-11 20:09:22,Nice that this drops the dependency on `c++filt` to be installed (assuming LIEF doesn't use it internally).,https://github.com/bitcoin/bitcoin/pull/22392#discussion_r726540182,726540182,contrib/devtools/symbol-check.py
laanwj,2021-10-11 20:18:10,"Instead of defining this function, I'd prefer to define a constant at the top once e.g.\n```python3\n# temporary constant, to be replaced with lief.ELF.ARCH.RISCV\n# https://github.com/lief-project/LIEF/pull/562\nLIEF_ELF_ARCH_RISCV = lief.ELF.ARCH(243)\n```\nThen use this both in `MAX_VERSIONS` and `binary.header.machine_type == LIEF_ELF_ARCH_RISCV` below in `check_exported_symbols`. This m",https://github.com/bitcoin/bitcoin/pull/22392#discussion_r726544249,726544249,contrib/devtools/symbol-check.py
fanquake,2021-10-12 00:43:36,Thanks for the reminder. I've dropped passing in `CPPFILT` and the check from configure.,https://github.com/bitcoin/bitcoin/pull/22392#discussion_r726679229,726679229,contrib/devtools/symbol-check.py
fanquake,2021-10-12 00:44:07,I've updated this to use your suggested approach.,https://github.com/bitcoin/bitcoin/pull/22392#discussion_r726679359,726679359,contrib/devtools/symbol-check.py
