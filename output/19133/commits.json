[
  {
    "sha": "cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjAwNTEwZGJhYzk5YjQ0ZjNmMmNmNmU1OGJiMmU0NDAxYzVlZjI4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-05-31T12:11:21Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-01T13:08:36Z"
      },
      "message": "rpc: create rpc/mining.h, hoist default max tries values to constant",
      "tree": {
        "sha": "468a63e35829f1ee4499edb2cf25c64eaa1c9495",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/468a63e35829f1ee4499edb2cf25c64eaa1c9495"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7U/hAACgkQT1chs9Dj\nkh2TDw//XMNgbBgnl2g3v2n8MIejXh4Jm2hr8NsipfV8lC/l/Mi07XQI/W92PeBP\npQ4j8WXV/QEFpylrv9CSS/cHVVV7U698DCYWKh6wZPZ0JxUmQ1ouCDeve4yLi1t+\ntaJz5J3gyJ+16B2W8xRMP/oToQaDwruRrSk6Bzw5kSt8yRn9p77WT0G+vYbzcNeX\nP2W+TDtNecRMFRWJjlBUeKPOcSOwQL+fYlSf1HMrDVPk8Wy2Z4O6XWLpf+C2tRSb\nYOvbYPDgkwfSrlPlfbe/KQPVdvBXeAv2Mil98BnFbjjqEJHP5mHLI+T+PMuOh2w9\nanCVFg7x4fHbx/T/4MNauJcG5SdW5M7gqKTxlQA0FItcVO5C1MQlqO6m60/DvKci\nAlQrQHD23dCU7Cm2gnss7nR0H7viRCI5gpJuY03pl2AxcTVyjhS8Ojhj1JujGqm+\n+4N5CdtpBswm/WRbVx9vl3+SLBJGmkLklItBEjXXvJ/HknmQdfSX2YHr6I2pcNTF\ndh3es+bc514oMl9AO7N7AM7zHapU/aSLyg2nrXximwrG+eix3EHMXk5+kcgQwyx8\nkuEVcF1CVdffg3HYrQTTczeIJy56I2mVTto1lPnuJCCUA2AQ0oyILlaNksuZf2Fa\nUy5w6mAroS4GoR9I7nrVYM6Scv6YmBVAbJKkhkoEnRqLCXJP5Bk=\n=664H\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEMNgIk6onUlcMjoHSogGmIh6GxJqlyhoCr3k6sJ6z7DCP/wEFnd0hzvpRiE\n7G6nTnItCd0I8CCeV8C5NGWVQyKJ80jK6aBn46/8eMYhaBDdUgFWtKcg3wjxBF7U\n/hPwCPAXkIbwnMD9AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQkImpbdZicu1RogOt/afRxQjwICjLhM/yFPX8P6BX\nkR5tUU+MC7SWv0FX9KLCEJ1pMZ3eCPEEXtT+EvAI5jSnj+llb0MAg9/jDS75DI4j\nImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5jb23/8BC+H59CBKcL5dPT\n7etTVdO0CPEgRQM2XKwu5cROVkHwJ296CYZzWe2kVq7TAwjuhWAwX0wI8QRe1P4S\n8Ajk8lXcCCnupwCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ/AQzDldJn/Ym40JxxxPfwfZJQjxICdYBSOLvLRswfYX\nmeIh7CGPkrbRVNgczD7VaJbmZpc7CPEEXtT+EvAIHW4aAd1RTWYAg9/jDS75DI4u\nLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 468a63e35829f1ee4499edb2cf25c64eaa1c9495\nparent 9bc7751cadbd038faf8ac1d62cda23fcf00d4cc2\nauthor Jon Atack <jon@atack.com> 1590927081 +0200\ncommitter Jon Atack <jon@atack.com> 1591016916 +0200\n\nrpc: create rpc/mining.h, hoist default max tries values to constant\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9bc7751cadbd038faf8ac1d62cda23fcf00d4cc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9bc7751cadbd038faf8ac1d62cda23fcf00d4cc2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9bc7751cadbd038faf8ac1d62cda23fcf00d4cc2"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 18,
      "deletions": 5
    },
    "files": [
      {
        "sha": "2d6b2b1a5db1f512273cc514ef2ea9ace1457a23",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28",
        "patch": "@@ -184,6 +184,7 @@ BITCOIN_CORE_H = \\\n   reverse_iterator.h \\\n   rpc/blockchain.h \\\n   rpc/client.h \\\n+  rpc/mining.h \\\n   rpc/protocol.h \\\n   rpc/rawtransaction_util.h \\\n   rpc/register.h \\"
      },
      {
        "sha": "52b5f648510b84b13ed0f91cf9d2c4cd205571f7",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28",
        "patch": "@@ -17,6 +17,7 @@\n #include <policy/fees.h>\n #include <pow.h>\n #include <rpc/blockchain.h>\n+#include <rpc/mining.h>\n #include <rpc/server.h>\n #include <rpc/util.h>\n #include <script/descriptor.h>\n@@ -206,7 +207,7 @@ static UniValue generatetodescriptor(const JSONRPCRequest& request)\n         {\n             {\"num_blocks\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"How many blocks are generated immediately.\"},\n             {\"descriptor\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The descriptor to send the newly generated bitcoin to.\"},\n-            {\"maxtries\", RPCArg::Type::NUM, /* default */ \"1000000\", \"How many iterations to try.\"},\n+            {\"maxtries\", RPCArg::Type::NUM, /* default */ ToString(DEFAULT_MAX_TRIES), \"How many iterations to try.\"},\n         },\n         RPCResult{\n             RPCResult::Type::ARR, \"\", \"hashes of blocks generated\",\n@@ -220,7 +221,7 @@ static UniValue generatetodescriptor(const JSONRPCRequest& request)\n         .Check(request);\n \n     const int num_blocks{request.params[0].get_int()};\n-    const int64_t max_tries{request.params[2].isNull() ? 1000000 : request.params[2].get_int()};\n+    const uint64_t max_tries{request.params[2].isNull() ? DEFAULT_MAX_TRIES : request.params[2].get_int()};\n \n     CScript coinbase_script;\n     std::string error;\n@@ -241,7 +242,7 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n                 {\n                     {\"nblocks\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"How many blocks are generated immediately.\"},\n                     {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The address to send the newly generated bitcoin to.\"},\n-                    {\"maxtries\", RPCArg::Type::NUM, /* default */ \"1000000\", \"How many iterations to try.\"},\n+                    {\"maxtries\", RPCArg::Type::NUM, /* default */ ToString(DEFAULT_MAX_TRIES), \"How many iterations to try.\"},\n                 },\n                 RPCResult{\n                     RPCResult::Type::ARR, \"\", \"hashes of blocks generated\",\n@@ -257,7 +258,7 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n             }.Check(request);\n \n     int nGenerate = request.params[0].get_int();\n-    uint64_t nMaxTries = 1000000;\n+    uint64_t nMaxTries{DEFAULT_MAX_TRIES};\n     if (!request.params[2].isNull()) {\n         nMaxTries = request.params[2].get_int();\n     }\n@@ -370,7 +371,7 @@ static UniValue generateblock(const JSONRPCRequest& request)\n     }\n \n     uint256 block_hash;\n-    uint64_t max_tries{1000000};\n+    uint64_t max_tries{DEFAULT_MAX_TRIES};\n     unsigned int extra_nonce{0};\n \n     if (!GenerateBlock(EnsureChainman(request.context), block, max_tries, extra_nonce, block_hash) || block_hash.IsNull()) {"
      },
      {
        "sha": "acc74e1dcc8346aa836e34958323e24d11a17c3a",
        "filename": "src/rpc/mining.h",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28/src/rpc/mining.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28/src/rpc/mining.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.h?ref=cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28",
        "patch": "@@ -0,0 +1,11 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_RPC_MINING_H\n+#define BITCOIN_RPC_MINING_H\n+\n+/** Default max iterations to try in RPC generatetodescriptor, generatetoaddress, and generateblock. */\n+static const uint64_t DEFAULT_MAX_TRIES{1000000};\n+\n+#endif // BITCOIN_RPC_MINING_H"
      }
    ]
  },
  {
    "sha": "9be7fd35c5d631c2cc34d3b4fa63ae0a9d5a68ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YmU3ZmQzNWM1ZDYzMWMyY2MzNGQzYjRmYTYzYWUwYTlkNWE2OGVm",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-05-31T12:15:12Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-02T06:23:34Z"
      },
      "message": "rpc: make generatetoaddress locals const\n\nand named the same as in generatetodescriptor just above.",
      "tree": {
        "sha": "c567eb03c86a7965eb6e44a20c6fe7704244cdc7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c567eb03c86a7965eb6e44a20c6fe7704244cdc7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9be7fd35c5d631c2cc34d3b4fa63ae0a9d5a68ef",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7V8JsACgkQT1chs9Dj\nkh3BAw//dJ4YedwVKJvJRjEJ/Bl8h/Wat7DGA47NowFBoI3xpWRbxq8Jex7jk764\nm7bubbcBCrNiYrdAHXJaijjw6NBp+aJh0Nfrn4J61pOytgvPZ3ZOZzfdvBQaSzjZ\nn7IiKzLy4xasVwdX/EFKNAUVvKbUDSsFhf8qYAiWxYGZsmRL10kD0rKaDuvb6vQC\ncQbXQRtTGDh/oYUmSm3yk7rSDo5gbVtaIfOUyYrAFpSGifKYRfEKssUifOg4Gj75\nowQc0GI4MKz90owooM7YjPhQ0tftmuC9+sQHTnpQQtDo+0/YSSH3QTwt2GAJTPH2\n/xIgqcRlYiRObi88s4ZMCnUXqhqttpE3Ol62LKZoYePv6FOqjYYTGDfXaMa2dF5e\neew/UNT6+zQJp6s1ZWDRTWmD2geESAxcpi98Vl1KxJWQ8/8qva8Snih/NF84vE+h\n0zP49Zag1f0HN+2ysaVcVG+MSHlrFcIAl0kkn9y9P5YO8FARZaIEMwWs3nurWtE2\npbBa9CRmTuYDww7foGVM2SYhA00RFYz2WBwLIs0g2/VvC4JqdgLSPv5k10d4cMdb\nBQIfyZe0EJ6Jn5RG6aOS/phJyjj7Z3XBvJDIyTs4gdTtE7gHF5kkc44hkH7ho4uh\nnYGMbckkGS+Eh+uVcfYqmqTc7FD3aFRlWC9Bk9U5dg1nuHIEaII=\n=vwFP\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIOMSpXAjO7KSn5JAHZ5s94y+AZQm+/9HbbJF7fSP3pEpCP/wEC9RF2ZCsE1R\niRotCAn6Mp0I8QRe1fCc8AicwJ5ItiFrfQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEFCNPlgIACk77dNKwDppdlkI8QRe1fCc\n8AjFpqrYMDXHjwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQ5Ku18B2jZx7x2NTfXl2hOQjxBF7V8JzwCEdV\nk2MWwCPuAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t8BDucd7IWb2mNLONpVNF9rzSCPAg02KNu3Wfv69VRin3XwrL3hqY\n8J10OFnHekr6Jo6H10wI8QRe1fCd8Ag+Qvypfz7vawCD3+MNLvkMjiwraHR0cHM6\nLy9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree c567eb03c86a7965eb6e44a20c6fe7704244cdc7\nparent cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28\nauthor Jon Atack <jon@atack.com> 1590927312 +0200\ncommitter Jon Atack <jon@atack.com> 1591079014 +0200\n\nrpc: make generatetoaddress locals const\n\nand named the same as in generatetodescriptor just above.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9be7fd35c5d631c2cc34d3b4fa63ae0a9d5a68ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9be7fd35c5d631c2cc34d3b4fa63ae0a9d5a68ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9be7fd35c5d631c2cc34d3b4fa63ae0a9d5a68ef/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb00510dbac99b44f3f2cf6e58bb2e4401c5ef28"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 3,
      "deletions": 6
    },
    "files": [
      {
        "sha": "b6133a111e4f77a2ecef91e82046723f60137fcd",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9be7fd35c5d631c2cc34d3b4fa63ae0a9d5a68ef/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9be7fd35c5d631c2cc34d3b4fa63ae0a9d5a68ef/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=9be7fd35c5d631c2cc34d3b4fa63ae0a9d5a68ef",
        "patch": "@@ -257,11 +257,8 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    int nGenerate = request.params[0].get_int();\n-    uint64_t nMaxTries{DEFAULT_MAX_TRIES};\n-    if (!request.params[2].isNull()) {\n-        nMaxTries = request.params[2].get_int();\n-    }\n+    const int num_blocks{request.params[0].get_int()};\n+    const uint64_t max_tries{request.params[2].isNull() ? DEFAULT_MAX_TRIES : request.params[2].get_int()};\n \n     CTxDestination destination = DecodeDestination(request.params[1].get_str());\n     if (!IsValidDestination(destination)) {\n@@ -273,7 +270,7 @@ static UniValue generatetoaddress(const JSONRPCRequest& request)\n \n     CScript coinbase_script = GetScriptForDestination(destination);\n \n-    return generateBlocks(chainman, mempool, coinbase_script, nGenerate, nMaxTries);\n+    return generateBlocks(chainman, mempool, coinbase_script, num_blocks, max_tries);\n }\n \n static UniValue generateblock(const JSONRPCRequest& request)"
      }
    ]
  },
  {
    "sha": "f7c65a33508c4bb8e9ed896e150a4fa529a243e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmN2M2NWEzMzUwOGM0YmI4ZTllZDg5NmUxNTBhNGZhNTI5YTI0M2U1",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-01T09:57:12Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-02T06:24:29Z"
      },
      "message": "cli: create GetNewAddress()",
      "tree": {
        "sha": "40307d4d9a788a04f60c3dd23f33c38b11670819",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40307d4d9a788a04f60c3dd23f33c38b11670819"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7c65a33508c4bb8e9ed896e150a4fa529a243e5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7V8J4ACgkQT1chs9Dj\nkh162BAAvxwavGBjqzEGWSJF+mkYgZFlfuMpO/tKPFJtiKAo0HG0opKQfuQOAkn8\nrOWvJeqp0CzJsqFBcahxGklkiTLxJy6hvugoErxd8jzNonBF361p0Td57LK9RS5a\n2Z408ELORJA7K86/AqSx8rAof+nlSfjVgC13gIA2kKnviYnOC+kV+w7aiW+o0pVG\nJVwnxSqzcBNjppZ0S+pWMDqH+zP3MUUr59DErhKgxs9JY623ar4I+UeDw9wMvNMa\n6nqVHawN2FYNYzn2qZwDiIOPptQoaX4qjIxLBNdcUFl0dAFVxqo5mgNfBNDo6Iax\nqJrYl2EdKGoKYpCUAhjxKwE2/920daVbGNAuQkgOhbo1H3VZRYveYKY3DFwNXQ6O\nv0i+AERdq9q3C9ba7RxQLhH24BHbDqhJzhDb2UiDmyW0Encwz/dvSXmdAOKbqN8u\nT2YN983SOg5O3JCtLCvaCLm8O7yzWPTLepC9tIvV4AZs9PdeEmE4iqv9k+xqYeKV\ndYv+UR/YJhCki3HfAQfar0Vw3/5TQGE95tfNkLt3tfxVFgpPqHVPnLhkuUerxJlC\nIGZrlvBofQrU0dPeKP4HexkRAUswrHqTR/WsEicG0u/x6yaRHMPR3X/NgwPO6uaC\nqp5micT/049UURaXfSPD65Uh8ueRN88JToo/WcmwhASV87Df1hw=\n=9UeT\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIGFRmfJiOS6oEW0wnrBr80cwfNGxjO2cxID/tC8RgrzFCP/wEA0hR40Cwe1V\ncnByPy++vmQI8QRe1fCf8Aic2NtnBsyPVQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wECVmmLqAVRjp6rMGjiS2SAII8QRe1fCg\n8AhmoykuYvosFwCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ//wEMleh+bErIfzeKw1xMbsxW8I8QRe1fCf8Ag0nvck\nWZ7qZwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BDnwDJg2G62sHaGiEP834B0CPEEXtXwn/AIQ+JP83nLm20A\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 40307d4d9a788a04f60c3dd23f33c38b11670819\nparent 9be7fd35c5d631c2cc34d3b4fa63ae0a9d5a68ef\nauthor Jon Atack <jon@atack.com> 1591005432 +0200\ncommitter Jon Atack <jon@atack.com> 1591079069 +0200\n\ncli: create GetNewAddress()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7c65a33508c4bb8e9ed896e150a4fa529a243e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f7c65a33508c4bb8e9ed896e150a4fa529a243e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7c65a33508c4bb8e9ed896e150a4fa529a243e5/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9be7fd35c5d631c2cc34d3b4fa63ae0a9d5a68ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9be7fd35c5d631c2cc34d3b4fa63ae0a9d5a68ef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9be7fd35c5d631c2cc34d3b4fa63ae0a9d5a68ef"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e959c4496fde87db434d24638e44ed57c6b16d67",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7c65a33508c4bb8e9ed896e150a4fa529a243e5/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7c65a33508c4bb8e9ed896e150a4fa529a243e5/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=f7c65a33508c4bb8e9ed896e150a4fa529a243e5",
        "patch": "@@ -477,6 +477,16 @@ static void GetWalletBalances(UniValue& result)\n     result.pushKV(\"balances\", balances);\n }\n \n+/**\n+ * Call RPC getnewaddress.\n+ * @returns getnewaddress response as a UniValue object.\n+ */\n+static UniValue GetNewAddress()\n+{\n+    std::unique_ptr<BaseRequestHandler> rh{MakeUnique<DefaultRequestHandler>()};\n+    return ConnectAndCallRPC(rh.get(), \"getnewaddress\", /* args=*/{});\n+}\n+\n static int CommandLineRPC(int argc, char *argv[])\n {\n     std::string strPrint;"
      }
    ]
  },
  {
    "sha": "f4185b26d9b2ff2e86c99cdfe3ad9be62bb6299a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDE4NWIyNmQ5YjJmZjJlODZjOTljZGZlM2FkOWJlNjJiYjYyOTlh",
    "commit": {
      "author": {
        "name": "Harris",
        "email": "brakmic@gmail.com",
        "date": "2019-12-09T18:52:12Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-02T06:50:36Z"
      },
      "message": "cli: create GenerateToAddressRequestHandler class",
      "tree": {
        "sha": "85912ffe022bbd5fdac43e5d933388f2372e6024",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85912ffe022bbd5fdac43e5d933388f2372e6024"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4185b26d9b2ff2e86c99cdfe3ad9be62bb6299a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7V9rwACgkQT1chs9Dj\nkh1wWA//R0axsfPOreHgv3XC+wxKmLXjiBjwXv3n7hQbTCUh9tGRQt/5bkMrFrNE\nhCi/wzA9zHL6EP9ROe0YpDyfjrBEk9nzR5rW6kRf7vJmb0O4yKX4hn0OylvzOXht\n1fdgl7jX07aJ5AJDZszVA76ToVX6ZvrQWoVHPoWicubgohH/eFQvnn2REgF1/0pM\nrfq8DXCnuttPoX4DCr6hK/8epCWtAMc1szrr+UAbBMY7QEi3DlttfdMUq2gqwoWe\nJZxTXjqiG58LndY/pSGKMv5gbjIFe8Sbi3t36vLyFFLuL+JQ12pLV/az5+vvYL58\nY4wAgrOaMSZBy95OsFT1a/l9gVX2M/R0qjZ0UDBEbV5zAZ5Qg2LkwePX9GKF/0zC\nrTkeHeaA7D8c0xJTL1sOONkEnzUICwZOcQ4sV04PETGfm7RbkirHvzPzo6VVREO2\n9saIxejPSIfWO3k91FIvnfWq4P2/8ueMpXGgEU30Z+HEOCXLHm8KKmSmToOZjga7\ns8/pn2oKv0HdABcmdOSGAe8KqrHGUyAdj01y1RHa+OqWFXLOK+59UghAtOAYKxLy\ntGhTXUG0uPbcx0SkY2YbvtzLgaUaXG5FUn6mshrxh6+e97c3W+zOktDzcVR+4FGo\nJD3LHOR52EZEhb8GmAJobFYU5Q8I4QFYyZ7WncKG3UNWJR5QyR0=\n=C3bi\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwINXu4JL6BbCr810DtLA1seRTh7PciI8bdAXVOXSMqNIYCP/wEC2Jbx92L3nK\nEPHS3+bafEsI8QRe1fa+8AgkhnstDxkgUwCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQM7ssgsqUcW+1VFTU\nzTYfLAjxBF7V9r7wCF+YBc0oOIu4AIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxl\nbmRhci5jYXRhbGxheHkuY29t//AQfGhuOzwW558z/CM9P5nzaQjxBF7V9r7wCIRf\nYfM+15MXAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t8BCva8l7NDl2u2mq14j4RZazCPEEXtX2vvAI3+t+ZJpQQ4IAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 85912ffe022bbd5fdac43e5d933388f2372e6024\nparent f7c65a33508c4bb8e9ed896e150a4fa529a243e5\nauthor Harris <brakmic@gmail.com> 1575917532 +0100\ncommitter Jon Atack <jon@atack.com> 1591080636 +0200\n\ncli: create GenerateToAddressRequestHandler class\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4185b26d9b2ff2e86c99cdfe3ad9be62bb6299a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4185b26d9b2ff2e86c99cdfe3ad9be62bb6299a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4185b26d9b2ff2e86c99cdfe3ad9be62bb6299a/comments",
    "author": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f7c65a33508c4bb8e9ed896e150a4fa529a243e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7c65a33508c4bb8e9ed896e150a4fa529a243e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f7c65a33508c4bb8e9ed896e150a4fa529a243e5"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4bcae4d68fee66a04a125ba184d9a507db16a8a1",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4185b26d9b2ff2e86c99cdfe3ad9be62bb6299a/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4185b26d9b2ff2e86c99cdfe3ad9be62bb6299a/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=f4185b26d9b2ff2e86c99cdfe3ad9be62bb6299a",
        "patch": "@@ -286,6 +286,28 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process RPC generatetoaddress request. */\n+class GenerateToAddressRequestHandler : public BaseRequestHandler\n+{\n+public:\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        address_str = args.at(1);\n+        UniValue params{RPCConvertValues(\"generatetoaddress\", args)};\n+        return JSONRPCRequestObj(\"generatetoaddress\", params, 1);\n+    }\n+\n+    UniValue ProcessReply(const UniValue &reply) override\n+    {\n+        UniValue result(UniValue::VOBJ);\n+        result.pushKV(\"address\", address_str);\n+        result.pushKV(\"blocks\", reply.get_obj()[\"result\"]);\n+        return JSONRPCReplyObj(result, NullUniValue, 1);\n+    }\n+protected:\n+    std::string address_str;\n+};\n+\n /** Process default single requests */\n class DefaultRequestHandler: public BaseRequestHandler {\n public:"
      }
    ]
  },
  {
    "sha": "ff41a3690066081772b172f3c31a63f5fe6ea7ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjQxYTM2OTAwNjYwODE3NzJiMTcyZjNjMzFhNjNmNWZlNmVhN2Vk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-05-31T09:44:51Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-02T06:50:41Z"
      },
      "message": "cli: extract ParseResult() and ParseError()\n\nand make callable higher up with (nRet == 0) check.",
      "tree": {
        "sha": "0a5c806ca1677b33eeb6425f79a8180a872f3751",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a5c806ca1677b33eeb6425f79a8180a872f3751"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff41a3690066081772b172f3c31a63f5fe6ea7ed",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7V9sIACgkQT1chs9Dj\nkh2gqw//dNoFUqzd0BGstFf+4Nv7JQ2Keu5Dz3EJeZRk1O2jCUInWWNkeiMojtRh\nbbkXu18eIH7OzUpTgdz+61hDE/7+aKhGlPlueJrhYfTLfOyUyIqZluiMBDezdB94\nCTWX4iIxiYykU5FV3oLxZMmgAS9KdSuB1oJ0cqL6FPMdgU2kYE4sL28jAXkxYU+j\nYcg13V28rlImur0l7We86m8d7A3zaO5GOnNQbGTR+2HGy7LVJaI4VU320/Wjs8+S\n/ybQRvwenAivnLTOaTUy1jMOYLLc37wgHPAk1HfdQ/ogauEbQ2w6Q2K2atSuPYoO\nwCbmQusEXCRKAhozmTAVxhzMpD3zkAu1Bj++XIWu3cyuXgKlK0T4o57pMwgj4D01\na8ewxJ3XsKSdDVMSdHRSudTsZng5bSniJ7tObklXcV+Mw+QwZNIPbHTKBRrwPV0Z\nnlTjkqtojFs2opiK/yuKhTikzyKKQk3R0HYWOpGBBvS41Ui1pxVj+mv0Ax6GbbWi\ntXc6+6F/PNPT7gbAfXthBdQPX2MEcZv4DSj+5JqpgpycW+FTPWiWRIGhEcECMExQ\nDZhQW2sVWE4fyge0tXVmA30VBK7wDUWQXL86ACKleOzfta+VIwuZcy50ZDppEgSJ\ngL2M7W6w9+RVdIc/GjEDBG5vR3gaVIeRBim+F+Pv+Y8ftiZJUJ0=\n=RLf0\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIG09I8Jt3sbZoNGljRvfhTpD2/BWFzJrgc+nujNR9yvACP/wECQkiFvn7fYa\n8YQgy8An7SAI8QRe1fbF8AhBdSGxVZbC6ACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEEKzb0h7OyTT655Ocdropy8I8QRe1fbE\n8AjLacb/9v1WcQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ//wEEZsFCICkxR1m28OWVPqPo0I8QRe1fbE8Ag12sWg\nhltPjgCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3\nYWxsLmNvbfAQY2rGoJxY5yR6KdMsLG6krAjxBF7V9sTwCI9/obVOFtk0AIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 0a5c806ca1677b33eeb6425f79a8180a872f3751\nparent f4185b26d9b2ff2e86c99cdfe3ad9be62bb6299a\nauthor Jon Atack <jon@atack.com> 1590918291 +0200\ncommitter Jon Atack <jon@atack.com> 1591080641 +0200\n\ncli: extract ParseResult() and ParseError()\n\nand make callable higher up with (nRet == 0) check.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff41a3690066081772b172f3c31a63f5fe6ea7ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff41a3690066081772b172f3c31a63f5fe6ea7ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff41a3690066081772b172f3c31a63f5fe6ea7ed/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4185b26d9b2ff2e86c99cdfe3ad9be62bb6299a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4185b26d9b2ff2e86c99cdfe3ad9be62bb6299a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4185b26d9b2ff2e86c99cdfe3ad9be62bb6299a"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 42,
      "deletions": 32
    },
    "files": [
      {
        "sha": "f09eb9d56518f6d79211b7397e306527dd74c272",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 42,
        "deletions": 32,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff41a3690066081772b172f3c31a63f5fe6ea7ed/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff41a3690066081772b172f3c31a63f5fe6ea7ed/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=ff41a3690066081772b172f3c31a63f5fe6ea7ed",
        "patch": "@@ -475,6 +475,34 @@ static UniValue ConnectAndCallRPC(BaseRequestHandler* rh, const std::string& str\n     return response;\n }\n \n+/** Parse UniValue result to update the message to print to std::cout. */\n+static void ParseResult(const UniValue& result, std::string& strPrint)\n+{\n+    if (result.isNull()) return;\n+    strPrint = result.isStr() ? result.get_str() : result.write(2);\n+}\n+\n+/** Parse UniValue error to update the message to print to std::cerr and the code to return. */\n+static void ParseError(const UniValue& error, std::string& strPrint, int& nRet)\n+{\n+    if (error.isObject()) {\n+        const UniValue& err_code = find_value(error, \"code\");\n+        const UniValue& err_msg = find_value(error, \"message\");\n+        if (!err_code.isNull()) {\n+            strPrint = \"error code: \" + err_code.getValStr() + \"\\n\";\n+        }\n+        if (err_msg.isStr()) {\n+            strPrint += (\"error message:\\n\" + err_msg.get_str());\n+        }\n+        if (err_code.isNum() && err_code.get_int() == RPC_WALLET_NOT_SPECIFIED) {\n+            strPrint += \"\\nTry adding \\\"-rpcwallet=<filename>\\\" option to bitcoin-cli command line.\";\n+        }\n+    } else {\n+        strPrint = \"error: \" + error.write();\n+    }\n+    nRet = abs(error[\"code\"].get_int());\n+}\n+\n /**\n  * GetWalletBalances calls listwallets; if more than one wallet is loaded, it then\n  * fetches mine.trusted balances for each loaded wallet and pushes them to `result`.\n@@ -575,40 +603,22 @@ static int CommandLineRPC(int argc, char *argv[])\n             method = args[0];\n             args.erase(args.begin()); // Remove trailing method name from arguments vector\n         }\n-        Optional<std::string> wallet_name{};\n-        if (gArgs.IsArgSet(\"-rpcwallet\")) wallet_name = gArgs.GetArg(\"-rpcwallet\", \"\");\n-        const UniValue reply = ConnectAndCallRPC(rh.get(), method, args, wallet_name);\n-\n-        // Parse reply\n-        UniValue result = find_value(reply, \"result\");\n-        const UniValue& error = find_value(reply, \"error\");\n-        if (!error.isNull()) {\n-            // Error\n-            strPrint = \"error: \" + error.write();\n-            nRet = abs(error[\"code\"].get_int());\n-            if (error.isObject()) {\n-                const UniValue& errCode = find_value(error, \"code\");\n-                const UniValue& errMsg = find_value(error, \"message\");\n-                strPrint = errCode.isNull() ? \"\" : (\"error code: \" + errCode.getValStr() + \"\\n\");\n-\n-                if (errMsg.isStr()) {\n-                    strPrint += (\"error message:\\n\" + errMsg.get_str());\n-                }\n-                if (errCode.isNum() && errCode.get_int() == RPC_WALLET_NOT_SPECIFIED) {\n-                    strPrint += \"\\nTry adding \\\"-rpcwallet=<filename>\\\" option to bitcoin-cli command line.\";\n+        if (nRet == 0) {\n+            // Perform RPC call\n+            Optional<std::string> wallet_name{};\n+            if (gArgs.IsArgSet(\"-rpcwallet\")) wallet_name = gArgs.GetArg(\"-rpcwallet\", \"\");\n+            const UniValue reply = ConnectAndCallRPC(rh.get(), method, args, wallet_name);\n+\n+            // Parse reply\n+            UniValue result = find_value(reply, \"result\");\n+            const UniValue& error = find_value(reply, \"error\");\n+            if (error.isNull()) {\n+                if (gArgs.IsArgSet(\"-getinfo\") && !gArgs.IsArgSet(\"-rpcwallet\")) {\n+                    GetWalletBalances(result); // fetch multiwallet balances and append to result\n                 }\n-            }\n-        } else {\n-            if (gArgs.IsArgSet(\"-getinfo\") && !gArgs.IsArgSet(\"-rpcwallet\")) {\n-                GetWalletBalances(result); // fetch multiwallet balances and append to result\n-            }\n-            // Result\n-            if (result.isNull()) {\n-                strPrint = \"\";\n-            } else if (result.isStr()) {\n-                strPrint = result.get_str();\n+                ParseResult(result, strPrint);\n             } else {\n-                strPrint = result.write(2);\n+                ParseError(error, strPrint, nRet);\n             }\n         }\n     } catch (const std::exception& e) {"
      }
    ]
  },
  {
    "sha": "4818124137732540383a29835afa2be41aa55ca8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ODE4MTI0MTM3NzMyNTQwMzgzYTI5ODM1YWZhMmJlNDFhYTU1Y2E4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-05-31T13:41:08Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-02T06:50:45Z"
      },
      "message": "cli: create bitcoin-cli -generate command",
      "tree": {
        "sha": "f3e1867655e98cee003b80b37b3f521373a2b6a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3e1867655e98cee003b80b37b3f521373a2b6a6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4818124137732540383a29835afa2be41aa55ca8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7V9sYACgkQT1chs9Dj\nkh1ochAApwHHKawjQ8H5jjOs/ik2NvzXlrEsInaJQ4STh8v6gwy4KCCLzdDArVvO\nr6sBuzKOlYxHZESaPodiiGYbWRJ2unA5am3tXvydXLuGDi044zYetAMGpPojoVu7\nUgiAnhgfKlDOnjy+ZZw1AKDeO3lMe0VeTwrxZr8CM8iXqdVKgwbZlvdZ84yoQvsA\nQth2Y/jnUrXVizyJLgOG9fHibjypNWpKbcN/u+f2bcl9JuUnNpugc8aD63s/99Ia\nnr4wEP8JE3/ZQEMe61Q/5x7Z0W7Ij+8DuGWkUYu3Rft1PvXNSVqaomxItdrr19Dc\nL8jFPBLPe3tQ4cldTW10h6mYl6MGJ1eiRdq3k0OMcp/OFS1UYSKCq4AYe6pJza82\nK96kuGEE40Yr7CKT1G4UTrJkoXJBReXGf506HXVsTrOWNPo5CzAqor1JPBsMk2FW\n4Yy9WcJOzaCCBgWaHfrCFuPV1d3cGj3JzxhrxZTmHhq8afUTV/Vy+W16eq7xt4WQ\nejT51fAlzr0Yyt6M93e/RzemGvtOMbZ0iB6e0df9eUK0IqHbjdr+ydmH62ihWRB1\nhMljzKdpaRRSnGpn2w50tr0JAjv5zlU3IFSF0xa00dGV4xiHsU0cyXBnPoACKHw2\nkKpb3Ak88/RhXjjgMuicS+ho+qUTwfaPuzEo5AE+7Kk8RUWuWV0=\n=3FX3\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPcR4ruWyH5hdLbqQTJCtlpvvMS8lT+CkVokuE/2QyolCP/wEC0Sq6Whm7ry\nS7MwFQrghIsI8QRe1fbH8AgKIBCe7x1fugCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEDgybA+70qzRxPpNN2r3\nBdoI8QRe1fbH8AjORcRj27QkWQCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEENCsMfKUgdkg5mM6QhxlFYI8QRe1fbH\n8AgmZnZOpVbHJwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQi8JRxhQBAPUnZX0mHjPA6gjxBF7V9sfwCJIPHWnzcCIdAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree f3e1867655e98cee003b80b37b3f521373a2b6a6\nparent ff41a3690066081772b172f3c31a63f5fe6ea7ed\nauthor Jon Atack <jon@atack.com> 1590932468 +0200\ncommitter Jon Atack <jon@atack.com> 1591080645 +0200\n\ncli: create bitcoin-cli -generate command\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4818124137732540383a29835afa2be41aa55ca8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4818124137732540383a29835afa2be41aa55ca8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4818124137732540383a29835afa2be41aa55ca8/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff41a3690066081772b172f3c31a63f5fe6ea7ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff41a3690066081772b172f3c31a63f5fe6ea7ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff41a3690066081772b172f3c31a63f5fe6ea7ed"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 30,
      "deletions": 0
    },
    "files": [
      {
        "sha": "09a436e11676c78faffc538cf03ef42d34d7158f",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4818124137732540383a29835afa2be41aa55ca8/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4818124137732540383a29835afa2be41aa55ca8/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=4818124137732540383a29835afa2be41aa55ca8",
        "patch": "@@ -11,6 +11,7 @@\n #include <clientversion.h>\n #include <optional.h>\n #include <rpc/client.h>\n+#include <rpc/mining.h>\n #include <rpc/protocol.h>\n #include <rpc/request.h>\n #include <util/strencodings.h>\n@@ -39,6 +40,9 @@ static const int DEFAULT_HTTP_CLIENT_TIMEOUT=900;\n static const bool DEFAULT_NAMED=false;\n static const int CONTINUE_EXECUTION=-1;\n \n+/** Default number of blocks to generate for RPC generatetoaddress. */\n+static const std::string DEFAULT_NBLOCKS = \"1\";\n+\n static void SetupCliArgs()\n {\n     SetupHelpOptions(gArgs);\n@@ -50,6 +54,7 @@ static void SetupCliArgs()\n     gArgs.AddArg(\"-version\", \"Print version and exit\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-generate\", strprintf(\"Generate blocks immediately, equivalent to RPC generatenewaddress followed by RPC generatetoaddress. Optional positional integer arguments are number of blocks to generate (default: %s) and maximum iterations to try (default: %s), equivalent to RPC generatetoaddress nblocks and maxtries arguments. Example: bitcoin-cli -generate 4 1000\", DEFAULT_NBLOCKS, DEFAULT_MAX_TRIES), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-getinfo\", \"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     SetupChainParamsBaseOptions();\n     gArgs.AddArg(\"-named\", strprintf(\"Pass named instead of positional arguments (default: %s)\", DEFAULT_NAMED), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -537,6 +542,22 @@ static UniValue GetNewAddress()\n     return ConnectAndCallRPC(rh.get(), \"getnewaddress\", /* args=*/{});\n }\n \n+/**\n+ * Check bounds and set up args for RPC generatetoaddress params: nblocks, address, maxtries.\n+ * @param[in] address  Reference to const string address to insert into the args.\n+ * @param     args     Reference to vector of string args to modify.\n+ */\n+static void SetGenerateToAddressArgs(const std::string& address, std::vector<std::string>& args)\n+{\n+    if (args.size() > 2) throw std::runtime_error(\"too many arguments (maximum 2 for nblocks and maxtries)\");\n+    if (args.size() == 0) {\n+        args.emplace_back(DEFAULT_NBLOCKS);\n+    } else if (args.at(0) == \"0\") {\n+        throw std::runtime_error(\"the first argument (number of blocks to generate, default: \" + DEFAULT_NBLOCKS + \") must be an integer value greater than zero\");\n+    }\n+    args.emplace(args.begin() + 1, address);\n+}\n+\n static int CommandLineRPC(int argc, char *argv[])\n {\n     std::string strPrint;\n@@ -595,6 +616,15 @@ static int CommandLineRPC(int argc, char *argv[])\n         std::string method;\n         if (gArgs.IsArgSet(\"-getinfo\")) {\n             rh.reset(new GetinfoRequestHandler());\n+        } else if (gArgs.GetBoolArg(\"-generate\", false)) {\n+            const UniValue getnewaddress{GetNewAddress()};\n+            const UniValue& error{find_value(getnewaddress, \"error\")};\n+            if (error.isNull()) {\n+                SetGenerateToAddressArgs(find_value(getnewaddress, \"result\").get_str(), args);\n+                rh.reset(new GenerateToAddressRequestHandler());\n+            } else {\n+                ParseError(error, strPrint, nRet);\n+            }\n         } else {\n             rh.reset(new DefaultRequestHandler());\n             if (args.size() < 1) {"
      }
    ]
  },
  {
    "sha": "18f93545a12db00180cea369a4b5cce7f10cd362",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOGY5MzU0NWExMmRiMDAxODBjZWEzNjlhNGI1Y2NlN2YxMGNkMzYy",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-05-31T16:02:35Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-02T06:50:48Z"
      },
      "message": "test: add tests for bitcoin-cli -generate",
      "tree": {
        "sha": "2034a98c83ba0c01c5ab4a8f8065b2216c27629c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2034a98c83ba0c01c5ab4a8f8065b2216c27629c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18f93545a12db00180cea369a4b5cce7f10cd362",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7V9sgACgkQT1chs9Dj\nkh2NJg/+P6S3Ob2aZa5NbfVuj1+UyE342M4YkrLHjcp2O7xpNR8wRq12v0xHZX3n\nn8mcFRGAkMJq0LyS4s+HIzFA21nuHnwYRAQcQNNRlGRMMKbD+ZJuCe6AqpTnLgJG\nXnrxXpMNFCloHECBif860LFj9ySX9pSP+ejdqyAUTuCx8KvdPCl8IbNJfk0IQmo5\nOckO4v3iQmhfrmhogcNYeSxHkiwHxfINna5fYUVUr1BtmGNMH3wYtWE1vOkdkrTS\n5i3/iMj91jrXsjpy23nUuYFoZ3ndPagKzUyNwIZhYT+I3YK9qAqRtnqTMyBbABqB\nddKFtOo6ACwGB6mkBAnH7scxaZRliwzZZJ/S/dvoJJL+GCbd5ytqok6wkK8YZioF\nXtGDyOTdXotMtw0YIDfP47XgOeBDOWOlsVnA7W4m9GIGVwWMDDAidWXZ4JSVO2tB\n8RwXoEdByoI+unmCr9QiMoFatIOvHkWRE7ublz9suUfV/qNYv3ienyOP3Z9XTTW1\njNSc2NgYR8p1B13cCGSxpmH0smF2d+k50rDGhp1pdiuFj+PhhV/pm3e6UN2G8PkM\nTR2urH0+ESwwYLVHph2rq+O1N6icxA+z3C51Spa4qmGc46oS1yNJPTnFPE5JIIAl\nT+bFudxdOu+VjjqZlSxYLI+p+YrUN1xaYWeQ8oFb5wiL7npU0N4=\n=DcbO\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHTyX2G0Voe9wRzO5GagJUNvwdThkmCXCy8tQY7QPuedCP/wEAtuiKr92pZa\n5LFuwwNUaiYI8QRe1fbK8AixFEpyhvoFTQCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEAwn+ovIfHLJZyT32Cu/\noNoI8QRe1fbK8AhqOlL0enaWMgCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQMVKXrFjT/+bJGEZKZFp1Twjx\nBF7V9srwCEUKceSpw+E1AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRh\nci5ldGVybml0eXdhbGwuY29t8BC0Q80OdRdRyImb60HEMdYhCPEEXtX2yvAIfikp\nrzqwXigAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 2034a98c83ba0c01c5ab4a8f8065b2216c27629c\nparent 4818124137732540383a29835afa2be41aa55ca8\nauthor Jon Atack <jon@atack.com> 1590940955 +0200\ncommitter Jon Atack <jon@atack.com> 1591080648 +0200\n\ntest: add tests for bitcoin-cli -generate\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18f93545a12db00180cea369a4b5cce7f10cd362",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/18f93545a12db00180cea369a4b5cce7f10cd362",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18f93545a12db00180cea369a4b5cce7f10cd362/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4818124137732540383a29835afa2be41aa55ca8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4818124137732540383a29835afa2be41aa55ca8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4818124137732540383a29835afa2be41aa55ca8"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 37,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b79bc5aa40312637ad17e9bc29f59637c879554e",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 37,
        "deletions": 3,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18f93545a12db00180cea369a4b5cce7f10cd362/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18f93545a12db00180cea369a4b5cce7f10cd362/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=18f93545a12db00180cea369a4b5cce7f10cd362",
        "patch": "@@ -3,6 +3,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test bitcoin-cli\"\"\"\n+\n from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_process_error, get_auth_cookie\n@@ -13,6 +14,10 @@\n BLOCKS = 101\n BALANCE = (BLOCKS - 100) * 50\n \n+JSON_PARSING_ERROR = 'error: Error parsing JSON:foo'\n+BLOCKS_VALUE_OF_ZERO = 'error: the first argument (number of blocks to generate, default: 1) must be an integer value greater than zero'\n+TOO_MANY_ARGS = 'error: too many arguments (maximum 2 for nblocks and maxtries)'\n+\n class TestBitcoinCli(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n@@ -75,7 +80,7 @@ def run_test(self):\n             assert_equal(cli_get_info['relayfee'], network_info['relayfee'])\n             assert_equal(self.nodes[0].cli.getwalletinfo(), wallet_info)\n \n-            # Setup to test -getinfo and -rpcwallet= with multiple wallets.\n+            # Setup to test -getinfo, -generate, and -rpcwallet= with multiple wallets.\n             wallets = ['', 'Encrypted', 'secret']\n             amounts = [BALANCE + Decimal('9.999928'), Decimal(9), Decimal(31)]\n             self.nodes[0].createwallet(wallet_name=wallets[1])\n@@ -131,9 +136,38 @@ def run_test(self):\n             cli_get_info = self.nodes[0].cli('-getinfo', '-rpcwallet={}'.format(wallets[2])).send_cli()\n             assert 'balance' not in cli_get_info_keys\n             assert 'balances' not in cli_get_info_keys\n+\n+            # Test bitcoin-cli -generate.\n+            n1 = 3\n+            n2 = 5\n+            w2.walletpassphrase(password, self.rpc_timeout)\n+            blocks = self.nodes[0].getblockcount()\n+\n+            self.log.info('Test -generate with no args')\n+            generate = self.nodes[0].cli('-generate').send_cli()\n+            assert_equal(set(generate.keys()), {'address', 'blocks'})\n+            assert_equal(len(generate[\"blocks\"]), 1)\n+            assert_equal(self.nodes[0].getblockcount(), blocks + 1)\n+\n+            self.log.info('Test -generate with bad args')\n+            assert_raises_process_error(1, JSON_PARSING_ERROR, self.nodes[0].cli('-generate', 'foo').echo)\n+            assert_raises_process_error(1, BLOCKS_VALUE_OF_ZERO, self.nodes[0].cli('-generate', 0).echo)\n+            assert_raises_process_error(1, TOO_MANY_ARGS, self.nodes[0].cli('-generate', 1, 2, 3).echo)\n+\n+            self.log.info('Test -generate with nblocks')\n+            generate = self.nodes[0].cli('-generate', n1).send_cli()\n+            assert_equal(set(generate.keys()), {'address', 'blocks'})\n+            assert_equal(len(generate[\"blocks\"]), n1)\n+            assert_equal(self.nodes[0].getblockcount(), blocks + 1 + n1)\n+\n+            self.log.info('Test -generate with nblocks and maxtries')\n+            generate = self.nodes[0].cli('-generate', n2, 1000000).send_cli()\n+            assert_equal(set(generate.keys()), {'address', 'blocks'})\n+            assert_equal(len(generate[\"blocks\"]), n2)\n+            assert_equal(self.nodes[0].getblockcount(), blocks + 1 + n1 + n2)\n         else:\n             self.log.info(\"*** Wallet not compiled; cli getwalletinfo and -getinfo wallet tests skipped\")\n-            self.nodes[0].generate(1)  # maintain block parity with the wallet_compiled conditional branch\n+            self.nodes[0].generate(10)  # maintain block parity with the wallet_compiled conditional branch\n \n         self.log.info(\"Test -version with node stopped\")\n         self.stop_node(0)\n@@ -145,7 +179,7 @@ def run_test(self):\n         self.nodes[0].wait_for_cookie_credentials()  # ensure cookie file is available to avoid race condition\n         blocks = self.nodes[0].cli('-rpcwait').send_cli('getblockcount')\n         self.nodes[0].wait_for_rpc_connection()\n-        assert_equal(blocks, BLOCKS + 1)\n+        assert_equal(blocks, BLOCKS + 10)\n \n \n if __name__ == '__main__':"
      }
    ]
  },
  {
    "sha": "4b859cfff9965eb07044f4d104398cb0e7ab127e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0Yjg1OWNmZmY5OTY1ZWIwNzA0NGY0ZDEwNDM5OGNiMGU3YWIxMjdl",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-05-31T16:03:47Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-02T06:50:51Z"
      },
      "message": "cli: add multiwallet capability to GetNewAddress and -generate",
      "tree": {
        "sha": "9f2643678a86338065928255f719be8fbe519f52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f2643678a86338065928255f719be8fbe519f52"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4b859cfff9965eb07044f4d104398cb0e7ab127e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7V9ssACgkQT1chs9Dj\nkh3R9Q//ZVdTiyrXkBPxYCrDyknD4zt/U2Xdzjs8ex521vv5PR2lVHSWqgUvj5em\naM2rxtUnHLXoz6jAqebPlyuLo/UbhDVy9now8cD/sVG49tDYoi/t7PqeNSVpgASX\ncbwNB/y8rx5k1wf3ccZs8TKhY6rtN1liL1XRaTIVS0bE3zuy1c/G1+ztPp6XVYjQ\ndtp/1yMvb3g+NTb44myGImKQnbxIywlvIn4TXMN5qB0EeFRBNEIjqsN0TCPdV2WQ\nZNB2GKO7UJWaDJwgU5QBrQEEYLLUpNKsGP5oDANOPr3ph5UgHj38e2PrpjCHOEAD\nwh41DaZhaCTznch9Zdxy3sMqm2aHtjdG9/VZ87WQn8pNmhDR5o9vrkENILXBtQGR\naKpcpN7XOS33NoqEW1735WoDy7hIXx2UNRvkUP8APtMZxkbAt4TyLgq80mme97oB\n4rpAkzNdFynRDayNTHEvpTETrnRYrJOO8gi8W/KhbrDbD0HVpD/wiaX0nIVC0xKj\nzZmI+sUIsF4Jo+fO0dfQFEGLYuU2lQ5HI4/co294IO5lEnEi0KSp26tK2icpOHER\nHQctbtM6QMs8hFLmbA4mVYVok8tlf/HgRglKEQZ4rV9vT9KuqfFt+Vz0GK6Gfydz\ncDAJ3VgpoAxQGTQwm+4AHP2jSFdicUUJi8fS3/B0V/Dw3OmPkkw=\n=CQR1\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwICBTZ6UWJG97kseam2ItByf32cbkUIUeuyVOit2RAzySCP/wEGfLArW0kNi9\n4BqC6z/YM9gI8QRe1fbM8AhoFTSj+ibZxACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEHQNQM/2gozzSymxtrqW\nf98I8QRe1fbN8AhwjV55yju1QgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wEHSF3Y/A2cdcUL/YXol9U38I8CAlmsef0EeUEzxA\nCYsi/ByNiprWiI1s9IApJtka3SJCIwjxBF7V9s3wCCDqHbeAX29kAIPf4w0u+QyO\nLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmfw\nEPvFY0IJ67yzpWt5P0Vp/sgI8QRe1fbM8Ag42CC0AIEIxgCD3+MNLvkMjikoaHR0\ncHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 9f2643678a86338065928255f719be8fbe519f52\nparent 18f93545a12db00180cea369a4b5cce7f10cd362\nauthor Jon Atack <jon@atack.com> 1590941027 +0200\ncommitter Jon Atack <jon@atack.com> 1591080651 +0200\n\ncli: add multiwallet capability to GetNewAddress and -generate\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b859cfff9965eb07044f4d104398cb0e7ab127e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4b859cfff9965eb07044f4d104398cb0e7ab127e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b859cfff9965eb07044f4d104398cb0e7ab127e/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "18f93545a12db00180cea369a4b5cce7f10cd362",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18f93545a12db00180cea369a4b5cce7f10cd362",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/18f93545a12db00180cea369a4b5cce7f10cd362"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f5125f22db6615bcea70287511b4931c8813fc22",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b859cfff9965eb07044f4d104398cb0e7ab127e/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b859cfff9965eb07044f4d104398cb0e7ab127e/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=4b859cfff9965eb07044f4d104398cb0e7ab127e",
        "patch": "@@ -538,8 +538,10 @@ static void GetWalletBalances(UniValue& result)\n  */\n static UniValue GetNewAddress()\n {\n+    Optional<std::string> wallet_name{};\n+    if (gArgs.IsArgSet(\"-rpcwallet\")) wallet_name = gArgs.GetArg(\"-rpcwallet\", \"\");\n     std::unique_ptr<BaseRequestHandler> rh{MakeUnique<DefaultRequestHandler>()};\n-    return ConnectAndCallRPC(rh.get(), \"getnewaddress\", /* args=*/{});\n+    return ConnectAndCallRPC(rh.get(), \"getnewaddress\", /* args=*/{}, wallet_name);\n }\n \n /**"
      }
    ]
  },
  {
    "sha": "bf53ebef061a563cfc4c5857f5d6bc93fb136282",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjUzZWJlZjA2MWE1NjNjZmM0YzU4NTdmNWQ2YmM5M2ZiMTM2Mjgy",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-05-31T16:05:07Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-02T06:50:54Z"
      },
      "message": "test: add multiwallet tests for bitcoin-cli -generate",
      "tree": {
        "sha": "2e704baec8b96b088c6171c202e63434ba1b56a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e704baec8b96b088c6171c202e63434ba1b56a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf53ebef061a563cfc4c5857f5d6bc93fb136282",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7V9s8ACgkQT1chs9Dj\nkh2FkxAAmsFkq89Itnaj/S5wwUVXyuNPz3wuw6Tf8PYPh2e1xZqRdd7i1kkHQxgg\n1XiU4etqlmOT1klbIcoJzJ/6ZZwPxn/CrsO4K19YdwOxEO9CfugkaQDU6w7Le7wG\neZiV7RPPohf/tVSFbX5mMh5KU0DLJ4MlBlGbMn49eu36TeOrCFs6qpsJnOECxewL\n2L4bCB73h1rdXPfFi6OAXRhjhrNHZv+DRk1x288WdEME84V5Lv6VqOtljbNmqpWV\n40QM6KJ6ZuKKevzpSZVA4/daiLFpFyhG/4AQiRGrgixHHLC7EPR+7Nec1VivGB7r\nZUwpcNlW508dQfSZ2xR9JsgwYlFRJJOu0q4EA9yzkk52/xL/9kNR5bnAny46Jl46\nCW6RHnySb35FdEAEV4D2BkAHbzncW1Ba6vrDEqOhp6uCGrDOVzEhFdcivB8YeHaO\nMVUmgEwzO6tpffZRAN6yLM1aX52NLdE+XeWsxGHteNrKrNLTrF+uWogZD3FJLV1T\nY/iD/yay4FCAZF3/9pBZDxeQsJK9i6D5dNNOoMzhIHnJaChbGiU25Ut8gauJWR+j\nhlHdjWFYwIHam/NGV5fMBCGaaf1k95wGAwwI02+rXn8+7nBJOsXYrPHub7pXuZAo\neAc27jiS0s1RwNNYQoLOTmr5pqTLTvp8WkR8wE3IjyY52L8Ww5Q=\n=2v0K\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEN9hGVXzLfiZPOOlpXI/Mgz5vhmErgI/1bAeOFcOndFCP/wEAMOIp6wI7WT\n7QRIHd4HG7EI8SBB1kJhIZF2eKQfPFCSxks633v8T7dvyaomsnVVE6d53QjwII9U\nqb8K8VyHLUMtOJjbY9dCWAL4JfoVC4LBlyiCXu00CPEEXtX20PAIoNKN3hgOStYA\ng9/jDS75DI4uLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3Rh\nbXBzLm9yZ//wEBadOnACrj4q+9wN2bbC114I8CDDCCdMvL4s5AHBndSQNd7BIh+4\n0h0HwQyNmuYvE3swWwjwIH1iSql0FZ9lVp08PaTFjLuYR1MP/2S5N5rSudDvm6Xr\nCPEEXtX20PAIKlBdWaF3GWQAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVu\nZGFyLmV0ZXJuaXR5d2FsbC5jb23/8BCZNd0fsy3AyCj1BVzmTzdJCPEEXtX20PAI\nGo0bB/z5EmkAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4\neS5jb23wENX3CduRSgx80YLFlmuzZR0I8CAK0UZk7XjMzXv5FGvFTxtFxwifsMaL\nbXKCZU/lGk8LsQjwIJPVSY/5IJG4rcMm36xfeypb2LCzhYwoCkSRTCjogvENCPEE\nXtX20PAIKOPlI7imzYEAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 2e704baec8b96b088c6171c202e63434ba1b56a1\nparent 4b859cfff9965eb07044f4d104398cb0e7ab127e\nauthor Jon Atack <jon@atack.com> 1590941107 +0200\ncommitter Jon Atack <jon@atack.com> 1591080654 +0200\n\ntest: add multiwallet tests for bitcoin-cli -generate\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf53ebef061a563cfc4c5857f5d6bc93fb136282",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf53ebef061a563cfc4c5857f5d6bc93fb136282",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf53ebef061a563cfc4c5857f5d6bc93fb136282/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b859cfff9965eb07044f4d104398cb0e7ab127e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b859cfff9965eb07044f4d104398cb0e7ab127e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b859cfff9965eb07044f4d104398cb0e7ab127e"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 62,
      "deletions": 6
    },
    "files": [
      {
        "sha": "a7b54ba7156e87dcc0303c1b808e305356bd79f7",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 62,
        "deletions": 6,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf53ebef061a563cfc4c5857f5d6bc93fb136282/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf53ebef061a563cfc4c5857f5d6bc93fb136282/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=bf53ebef061a563cfc4c5857f5d6bc93fb136282",
        "patch": "@@ -6,7 +6,12 @@\n \n from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_process_error, get_auth_cookie\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_process_error,\n+    assert_raises_rpc_error,\n+    get_auth_cookie,\n+)\n \n # The block reward of coinbaseoutput.nValue (50) BTC/block matures after\n # COINBASE_MATURITY (100) blocks. Therefore, after mining 101 blocks we expect\n@@ -17,6 +22,8 @@\n JSON_PARSING_ERROR = 'error: Error parsing JSON:foo'\n BLOCKS_VALUE_OF_ZERO = 'error: the first argument (number of blocks to generate, default: 1) must be an integer value greater than zero'\n TOO_MANY_ARGS = 'error: too many arguments (maximum 2 for nblocks and maxtries)'\n+WALLET_NOT_LOADED = 'Requested wallet does not exist or is not loaded'\n+WALLET_NOT_SPECIFIED = 'Wallet file not specified'\n \n class TestBitcoinCli(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -88,6 +95,8 @@ def run_test(self):\n             w1 = self.nodes[0].get_wallet_rpc(wallets[0])\n             w2 = self.nodes[0].get_wallet_rpc(wallets[1])\n             w3 = self.nodes[0].get_wallet_rpc(wallets[2])\n+            rpcwallet2 = '-rpcwallet={}'.format(wallets[1])\n+            rpcwallet3 = '-rpcwallet={}'.format(wallets[2])\n             w1.walletpassphrase(password, self.rpc_timeout)\n             w2.encryptwallet(password)\n             w1.sendtoaddress(w2.getnewaddress(), amounts[1])\n@@ -128,18 +137,18 @@ def run_test(self):\n             assert_equal(cli_get_info['balance'], amounts[1])\n \n             self.log.info(\"Test -getinfo with -rpcwallet=remaining-non-default-wallet returns only its balance\")\n-            cli_get_info = self.nodes[0].cli('-getinfo', '-rpcwallet={}'.format(wallets[1])).send_cli()\n+            cli_get_info = self.nodes[0].cli('-getinfo', rpcwallet2).send_cli()\n             assert 'balances' not in cli_get_info.keys()\n             assert_equal(cli_get_info['balance'], amounts[1])\n \n             self.log.info(\"Test -getinfo with -rpcwallet=unloaded wallet returns no balances\")\n-            cli_get_info = self.nodes[0].cli('-getinfo', '-rpcwallet={}'.format(wallets[2])).send_cli()\n+            cli_get_info = self.nodes[0].cli('-getinfo', rpcwallet3).send_cli()\n             assert 'balance' not in cli_get_info_keys\n             assert 'balances' not in cli_get_info_keys\n \n             # Test bitcoin-cli -generate.\n             n1 = 3\n-            n2 = 5\n+            n2 = 4\n             w2.walletpassphrase(password, self.rpc_timeout)\n             blocks = self.nodes[0].getblockcount()\n \n@@ -165,9 +174,56 @@ def run_test(self):\n             assert_equal(set(generate.keys()), {'address', 'blocks'})\n             assert_equal(len(generate[\"blocks\"]), n2)\n             assert_equal(self.nodes[0].getblockcount(), blocks + 1 + n1 + n2)\n+\n+            self.log.info('Test -generate -rpcwallet in single-wallet mode')\n+            generate = self.nodes[0].cli(rpcwallet2, '-generate').send_cli()\n+            assert_equal(set(generate.keys()), {'address', 'blocks'})\n+            assert_equal(len(generate[\"blocks\"]), 1)\n+            assert_equal(self.nodes[0].getblockcount(), blocks + 2 + n1 + n2)\n+\n+            self.log.info('Test -generate -rpcwallet=unloaded wallet raises RPC error')\n+            assert_raises_rpc_error(-18, WALLET_NOT_LOADED, self.nodes[0].cli(rpcwallet3, '-generate').echo)\n+            assert_raises_rpc_error(-18, WALLET_NOT_LOADED, self.nodes[0].cli(rpcwallet3, '-generate', 'foo').echo)\n+            assert_raises_rpc_error(-18, WALLET_NOT_LOADED, self.nodes[0].cli(rpcwallet3, '-generate', 0).echo)\n+            assert_raises_rpc_error(-18, WALLET_NOT_LOADED, self.nodes[0].cli(rpcwallet3, '-generate', 1, 2, 3).echo)\n+\n+            # Test bitcoin-cli -generate with -rpcwallet in multiwallet mode.\n+            self.nodes[0].loadwallet(wallets[2])\n+            n3 = 4\n+            n4 = 10\n+            blocks = self.nodes[0].getblockcount()\n+\n+            self.log.info('Test -generate -rpcwallet with no args')\n+            generate = self.nodes[0].cli(rpcwallet2, '-generate').send_cli()\n+            assert_equal(set(generate.keys()), {'address', 'blocks'})\n+            assert_equal(len(generate[\"blocks\"]), 1)\n+            assert_equal(self.nodes[0].getblockcount(), blocks + 1)\n+\n+            self.log.info('Test -generate -rpcwallet with bad args')\n+            assert_raises_process_error(1, JSON_PARSING_ERROR, self.nodes[0].cli(rpcwallet2, '-generate', 'foo').echo)\n+            assert_raises_process_error(1, BLOCKS_VALUE_OF_ZERO, self.nodes[0].cli(rpcwallet2, '-generate', 0).echo)\n+            assert_raises_process_error(1, TOO_MANY_ARGS, self.nodes[0].cli(rpcwallet2, '-generate', 1, 2, 3).echo)\n+\n+            self.log.info('Test -generate -rpcwallet with nblocks')\n+            generate = self.nodes[0].cli(rpcwallet2, '-generate', n3).send_cli()\n+            assert_equal(set(generate.keys()), {'address', 'blocks'})\n+            assert_equal(len(generate[\"blocks\"]), n3)\n+            assert_equal(self.nodes[0].getblockcount(), blocks + 1 + n3)\n+\n+            self.log.info('Test -generate -rpcwallet with nblocks and maxtries')\n+            generate = self.nodes[0].cli(rpcwallet2, '-generate', n4, 1000000).send_cli()\n+            assert_equal(set(generate.keys()), {'address', 'blocks'})\n+            assert_equal(len(generate[\"blocks\"]), n4)\n+            assert_equal(self.nodes[0].getblockcount(), blocks + 1 + n3 + n4)\n+\n+            self.log.info('Test -generate without -rpcwallet in multiwallet mode raises RPC error')\n+            assert_raises_rpc_error(-19, WALLET_NOT_SPECIFIED, self.nodes[0].cli('-generate').echo)\n+            assert_raises_rpc_error(-19, WALLET_NOT_SPECIFIED, self.nodes[0].cli('-generate', 'foo').echo)\n+            assert_raises_rpc_error(-19, WALLET_NOT_SPECIFIED, self.nodes[0].cli('-generate', 0).echo)\n+            assert_raises_rpc_error(-19, WALLET_NOT_SPECIFIED, self.nodes[0].cli('-generate', 1, 2, 3).echo)\n         else:\n             self.log.info(\"*** Wallet not compiled; cli getwalletinfo and -getinfo wallet tests skipped\")\n-            self.nodes[0].generate(10)  # maintain block parity with the wallet_compiled conditional branch\n+            self.nodes[0].generate(25)  # maintain block parity with the wallet_compiled conditional branch\n \n         self.log.info(\"Test -version with node stopped\")\n         self.stop_node(0)\n@@ -179,7 +235,7 @@ def run_test(self):\n         self.nodes[0].wait_for_cookie_credentials()  # ensure cookie file is available to avoid race condition\n         blocks = self.nodes[0].cli('-rpcwait').send_cli('getblockcount')\n         self.nodes[0].wait_for_rpc_connection()\n-        assert_equal(blocks, BLOCKS + 10)\n+        assert_equal(blocks, BLOCKS + 25)\n \n \n if __name__ == '__main__':"
      }
    ]
  },
  {
    "sha": "22cb303cf099b430d602384bc92706ce01b4f98d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMmNiMzAzY2YwOTliNDMwZDYwMjM4NGJjOTI3MDZjZTAxYjRmOThk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-01T08:35:07Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-02T06:50:57Z"
      },
      "message": "rpc: add missing space in JSON parsing error message, update test",
      "tree": {
        "sha": "33b99a95803fc11cfd652f24bcd85136b8bc169f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33b99a95803fc11cfd652f24bcd85136b8bc169f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22cb303cf099b430d602384bc92706ce01b4f98d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7V9tEACgkQT1chs9Dj\nkh3C4BAAwpnvFQdwKS+q1WcSUiyNOipH8pafwtHveHRlQSW41BOLoTLLX2dui4MQ\nc1JwK4vXvcJC4OUm0Pf+sbOl7NwkdYoT6+9hBjJHftewVS9AsQjB7M7idjNDyE4r\nFSGQwGAK4pOBBQI+MhGJe5O9BpFCGCJDA/AYqtt5ulMDdAEI1m603hQG18+26exK\nN/r8G2ZPvGFPKsVFv0ibWxo+fxLDq+tpBPowcVaSI/oW2xrB1pPJghot7m+4Sfso\nC5+eFrliPziYqSjxDU9u5gs5ETjY4Tqxp9+WB+V7ZAfoMc7Hgud3JLR3zaagFkiZ\neahIwZSQ2g+o0PSwcd3QFe2qiMEZtM2ePI7SnLeziRRGOQedgxpRzWawXhBqnO1e\n7KgYAZg4ejOqhD8ixbj8ZjWCh4S2TEQYxRHZWEi3KZNV6U5q7D0bjb2zVMJkjTo5\nBbDqgdScj2y6bAjMX6CoyUcycShaw7vunvRMz8KHtJur35gk0xH8TX+e0EvwI/n2\n0eLqVaDVP58b1LjzuoU7c6cifZM409G98i0xDadZ93zokiFsGnKeSJlezfA3Gubz\nBhcoyZhTBZGor2017Vu27Sz1Yd8yx1iGkp9ytyjj3dfS9MtYBOKUIVa8mi3BKNMQ\nwbWfy/O/nFSUWCJwwVHumm1Sj2BQ91WyR6Zp7SAtEpsTtJdxlJ8=\n=stux\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIGHU31KDzV/moemm/C4NVnZKTJyk8ISjROCsWDmnDpQwCP/wECuFBsXZ4bv9\n9j37Rjzbc9wI8QRe1fbS8AgMuU8oEGnJ5QCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEIpnpjW/P8xnyitq6B4YqPkI\n8QRe1fbT8AijS8IuP/p2cACD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIu\nY2F0YWxsYXh5LmNvbf/wEKO2XCM3Y/ZaZL7igWwGUjgI8QRe1fbS8AiygnLOCwjw\nIACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BCvqbjx8JAmGqVPhEffYWkICPEEXtX20vAIJN00dCTHwG0Ag9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 33b99a95803fc11cfd652f24bcd85136b8bc169f\nparent bf53ebef061a563cfc4c5857f5d6bc93fb136282\nauthor Jon Atack <jon@atack.com> 1591000507 +0200\ncommitter Jon Atack <jon@atack.com> 1591080657 +0200\n\nrpc: add missing space in JSON parsing error message, update test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22cb303cf099b430d602384bc92706ce01b4f98d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/22cb303cf099b430d602384bc92706ce01b4f98d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22cb303cf099b430d602384bc92706ce01b4f98d/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf53ebef061a563cfc4c5857f5d6bc93fb136282",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf53ebef061a563cfc4c5857f5d6bc93fb136282",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf53ebef061a563cfc4c5857f5d6bc93fb136282"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "66ace7263a7424234e6d4413639cfab131abf290",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22cb303cf099b430d602384bc92706ce01b4f98d/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22cb303cf099b430d602384bc92706ce01b4f98d/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=22cb303cf099b430d602384bc92706ce01b4f98d",
        "patch": "@@ -217,7 +217,7 @@ UniValue ParseNonRFCJSONValue(const std::string& strVal)\n     UniValue jVal;\n     if (!jVal.read(std::string(\"[\")+strVal+std::string(\"]\")) ||\n         !jVal.isArray() || jVal.size()!=1)\n-        throw std::runtime_error(std::string(\"Error parsing JSON:\")+strVal);\n+        throw std::runtime_error(std::string(\"Error parsing JSON: \") + strVal);\n     return jVal[0];\n }\n "
      },
      {
        "sha": "80003aca0d11fc28beecf56a6b66887d8ace5647",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22cb303cf099b430d602384bc92706ce01b4f98d/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22cb303cf099b430d602384bc92706ce01b4f98d/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=22cb303cf099b430d602384bc92706ce01b4f98d",
        "patch": "@@ -19,7 +19,7 @@\n BLOCKS = 101\n BALANCE = (BLOCKS - 100) * 50\n \n-JSON_PARSING_ERROR = 'error: Error parsing JSON:foo'\n+JSON_PARSING_ERROR = 'error: Error parsing JSON: foo'\n BLOCKS_VALUE_OF_ZERO = 'error: the first argument (number of blocks to generate, default: 1) must be an integer value greater than zero'\n TOO_MANY_ARGS = 'error: too many arguments (maximum 2 for nblocks and maxtries)'\n WALLET_NOT_LOADED = 'Requested wallet does not exist or is not loaded'"
      }
    ]
  }
]