achow101,2021-10-05 23:03:29,`rpc_psbt.py` has a similar potential issue.,https://github.com/bitcoin/bitcoin/pull/23200#issuecomment-935002126,935002126,
meshcollider,2021-10-05 23:08:50,Added `rpc_psbt.py` and addressed @jonatack's suggestion,https://github.com/bitcoin/bitcoin/pull/23200#issuecomment-935016256,935016256,
achow101,2021-10-05 23:18:04,"ACK 6b1b7157c15620f560ac237cbef08cdb13fc346e\n\nThe lack of `sync_all` has bitten us in the past in similar situations, so it's likely to be the problem here.",https://github.com/bitcoin/bitcoin/pull/23200#issuecomment-935040048,935040048,
meshcollider,2021-10-05 23:20:26,"Sorry to invalidate your ACK immediately @achow101, just included the two other instances of node.generate that @jonatack pointed out so they're all gone.",https://github.com/bitcoin/bitcoin/pull/23200#issuecomment-935045520,935045520,
achow101,2021-10-05 23:25:06,ACK 75a9305d455e234c6b63635d80b0f2aef902342e,https://github.com/bitcoin/bitcoin/pull/23200#issuecomment-935056407,935056407,
instagibbs,2021-10-05 23:37:01,"the idea being block processing hasn't finished before the wallet calls are used, even though it's on the same node?\n",https://github.com/bitcoin/bitcoin/pull/23200#issuecomment-935080654,935080654,
meshcollider,2021-10-05 23:52:27,"> the idea being block processing hasn't finished before the wallet calls are used, even though it's on the same node?\n\nIt is for the benefit of the other node, using the input externally. For example, in `rpc_fundrawtransaction.py`, the node called `wallet` is the one calling `fundrawtransaction`, after `nodes[0]` generates the transaction and blocks. Similarly, in `wallet_send.py`, `ext_wall",https://github.com/bitcoin/bitcoin/pull/23200#issuecomment-935098821,935098821,
instagibbs,2021-10-06 01:49:15,"Got it.\n\nOn Wed, Oct 6, 2021, 9:34 AM Samuel Dobson ***@***.***> wrote:\n\n> ***@***.**** commented on this pull request.\n> ------------------------------\n>\n> In test/functional/rpc_fundrawtransaction.py\n> <https://github.com/bitcoin/bitcoin/pull/23200#discussion_r722821159>:\n>\n> > @@ -1010,7 +1010,8 @@ def test_external_inputs(self):\n>\n>          self.nodes[0].sendtoaddress(addr, 10)\n>",https://github.com/bitcoin/bitcoin/pull/23200#issuecomment-935238225,935238225,
DrahtBot,2021-10-06 11:27:46,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23202](https://github.com/bitcoin/bitcoin/pull/23202) (wallet: allow psbtbumpfee to work with txs with external inputs b",https://github.com/bitcoin/bitcoin/pull/23200#issuecomment-936047874,936047874,
jonatack,2021-10-05 22:58:56,"ISTM both of these lines should be this instead (see #22788 and #22567):\n```suggestion\n        self.generate(self.nodes[0], 6)\n```",https://github.com/bitcoin/bitcoin/pull/23200#discussion_r722765823,722765823,test/functional/rpc_fundrawtransaction.py
jonatack,2021-10-05 23:10:25,"```\n$ git grep ""].generate""\ntest/functional/interface_zmq.py:586:        self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\ntest/functional/p2p_compactblocks_blocksonly.py:36:        blockhash = self.nodes[2].generate(1)[0]\ntest/functional/rpc_fundrawtransaction.py:1013:        self.nodes[0].generate(6)\ntest/functional/rpc_psbt.py:630:        self.nodes[0].generate(6)\ntest/f",https://github.com/bitcoin/bitcoin/pull/23200#discussion_r722770546,722770546,test/functional/rpc_fundrawtransaction.py
instagibbs,2021-10-06 00:40:33,slight preference for syncing *right before* the other wallet call rather than sandwiched between nodes[0] calls. This makes spotting gaps easier in the future.,https://github.com/bitcoin/bitcoin/pull/23200#discussion_r722803851,722803851,test/functional/rpc_fundrawtransaction.py
meshcollider,2021-10-06 01:34:25,"@instagibbs  #22567 will merge these `sync_all` into the `generate` calls, so it makes sense to put them together for clarity at the moment IMO",https://github.com/bitcoin/bitcoin/pull/23200#discussion_r722821159,722821159,test/functional/rpc_fundrawtransaction.py
lsilva01,2021-10-06 02:00:26,@instagibbs  PR https://github.com/bitcoin/bitcoin/pull/22741 has more information about the `generate*` calls,https://github.com/bitcoin/bitcoin/pull/23200#discussion_r722829428,722829428,test/functional/rpc_fundrawtransaction.py
