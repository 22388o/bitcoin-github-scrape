practicalswift,2018-10-02T20:48:43Z,`src/leveldb/` should not be edited locally â€“ the leveldb changes should probably be submitted upstream instead :-),https://github.com/bitcoin/bitcoin/pull/14372#issuecomment-426424772,426424772,
DrahtBot,2018-10-02T21:40:59Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/14372#issuecomment-426440288,426440288,
ras0219-msft,2018-10-02T21:42:03Z,"If you want to maintain forks of leveldb/secp256k1 locally then it probably makes more sense to do this than install them via vcpkg.\n\nHowever, if the intent is to treat them as third party libraries, you might be happier with instead replacing the vcpkg portfiles to point at the modified versions before running `install` (`C:\tools\vcpkg\ports\leveldb\`). We always use the local catalog to do ",https://github.com/bitcoin/bitcoin/pull/14372#issuecomment-426440558,426440558,
MarcoFalke,2018-10-03T04:15:40Z,"Concept ACK on using the subtree when compiling with msvc. Though, could the subtree bump be done in a separate pull request?",https://github.com/bitcoin/bitcoin/pull/14372#issuecomment-426506437,426506437,
sipsorcery,2018-10-03T08:28:04Z,"Some of the leveldb changes proposed in this PR are already in PR's on the leveldb repo, specifically https://github.com/bitcoin-core/leveldb/pull/14 and https://github.com/bitcoin-core/leveldb/pull/7 (as an aside the changes in https://github.com/bitcoin-core/leveldb/pull/14 were the ones I included in the leveldb vcpkg portfiles). \n\nFor what it's worth I'd agree with @practicalswift that cha",https://github.com/bitcoin/bitcoin/pull/14372#issuecomment-426553320,426553320,
ken2812221,2018-10-03T08:54:42Z,"@sipsorcery  Sorry. I'm not aware that you already submmitted a PR for that. I'll revert the duplicate thing in bitcoin-core/leveldb#18\n\n@practicalswift @sipsorcery I know that they should be done upstream, but they are not done yet. I could show the result before then and make CI happy. Anyway, this PR shouldn't be merged before upstream one merged.",https://github.com/bitcoin/bitcoin/pull/14372#issuecomment-426560607,426560607,
laanwj,2019-01-16T16:28:06Z,"Concept ACK, makes sense if MSVC follows the autoconf-based build system in this regard.",https://github.com/bitcoin/bitcoin/pull/14372#issuecomment-454844208,454844208,
MarcoFalke,2019-01-31T15:10:17Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/14372#issuecomment-459379252,459379252,
MarcoFalke,2019-01-31T16:05:15Z,@sipsorcery @NicolasDorier Is this good to merge?,https://github.com/bitcoin/bitcoin/pull/14372#issuecomment-459400538,459400538,
sipsorcery,2019-01-31T19:48:42Z,"tACK 52091066be15a86a38c4db182338808f9316c35a.\n\nBuilds correctly on VS2017, VS2019 and AppVeyor.\n\n(One note is that Pieter Wuille did comment somewhere that the libsecp256k1 config options set here meant that Windows ecdsa operations were up to 4 times slower than on Linux. I had a quick look but because msvc doesn't support asm on 64 bit builds didn't find any way to improve it)",https://github.com/bitcoin/bitcoin/pull/14372#issuecomment-459481129,459481129,
NicolasDorier,2019-02-01T07:28:13Z,post merge tACK.,https://github.com/bitcoin/bitcoin/pull/14372#issuecomment-459632037,459632037,
