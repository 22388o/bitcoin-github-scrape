hebasto,2020-10-30 21:34:18,"Concept ACK.\n\nIn 606622195fdf6a1fb6adc41d1091ce2ae7501125 commit message:\n> ""Remove circular dependencies between wallet translation units""\n\nWhat are those dependencies?",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-719810438,719810438,
ryanofsky,2020-10-30 21:47:46,"> What are those dependencies?\n\nOh, I think I need to drop that comment. The dependency I was thinking of was `walletutil.cpp` depending on `bdb.cpp` for `ExistsBerkeleyDatabase`, and `bdb.cpp` depending on `walletutil.cpp` for `SplitWalletPath`. And I thought there were others. But actually `SplitWalletPath` is in `db.cpp` not `walletutil.cpp`, and now I don't think there are other dependenci",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-719815071,719815071,
DrahtBot,2020-10-30 23:58:41,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20206 (wallet, refactor: Include headers instead of function declarations by hebasto)\n* #19245 ([WIP DONOTMERGE] Replace",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-719849943,719849943,
ryanofsky,2020-11-01 22:46:17,"@mjdietzx your questions about the IsBDBFile are good but I think not directly relevant to this PR, which is just moving the IsBDBFile function from one file to another, not changing it at all.\n\nViewing individual commits https://github.com/bitcoin/bitcoin/pull/20275/commits/ may be clearer than viewing the consolidated diff. Any case, I'll try follow up with answers soon.",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-720163756,720163756,
jonatack,2020-11-01 22:56:01,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-720164864,720164864,
achow101,2020-11-02 16:59:34,ACK e21dc6c05c02a0da18b9af2c0eb1d7996c378541,https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-720598128,720598128,
promag,2020-11-02 18:23:31,"Tested ACK e21dc6c05c02a0da18b9af2c0eb1d7996c378541. Tested `listwalletdir` and `loadwallet` with a wallet in `walletdir` and with an external wallet.\n\nStartup fails if any wallets `-wallet` or settings.json is sqlite.",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-720644915,720644915,
MarcoFalke,2020-11-04 15:05:06,Is this for 0.21?,https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-721785786,721785786,
ryanofsky,2020-11-04 17:01:06,"> Is this for 0.21?\n\nI'm not requesting it. I see this mostly as a code cleanup. For users, the only ones who would be affected would be those compiling from scratch and disabling sqlite, or maybe those using gentoo or nixos type packages with build customizations. The effect for these users at worst would be some confusion seeing incomplete wallet listings, or seeing scarier ""Data is not in r",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-721853805,721853805,
promag,2020-11-04 22:54:02,"> or seeing scarier ""Data is not in recognized format""\n\nThe same error would also happen if the the user attempts to open sqlite wallet with previous versions.",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-722018320,722018320,
MarcoFalke,2020-11-05 06:59:54,"Also, it would be hard to create a sqlite wallet with a non-sqlite build. Assigning 22.0 milestone",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-722184477,722184477,
ryanofsky,2020-11-13 15:33:25,"Rebased e21dc6c05c02a0da18b9af2c0eb1d7996c378541 -> 417e95a97b4e00a9add97d94ce3b9c38904a354b ([`pr/exist.1`](https://github.com/ryanofsky/bitcoin/commits/pr/exist.1) -> [`pr/exist.2`](https://github.com/ryanofsky/bitcoin/commits/pr/exist.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/exist.1-rebase..pr/exist.2)) due to conflict with #19502\nRebased 417e95a97b4e00a9add97d94ce3b9c389",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-726830756,726830756,
ryanofsky,2020-12-04 21:13:42,"Rebased 727e0aad58b41facf55bbedfc5de45b2c41a98ae -> f3d870fc2271bf45e0269e5ae135bced1a26f620 ([`pr/exist.3`](https://github.com/ryanofsky/bitcoin/commits/pr/exist.3) -> [`pr/exist.4`](https://github.com/ryanofsky/bitcoin/commits/pr/exist.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/exist.3-rebase..pr/exist.4)) due to conflict with #20202. #20202 added some new code that was origin",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-739023926,739023926,
jonasschnelli,2020-12-07 08:29:33,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-739760389,739760389,
ryanofsky,2020-12-11 15:36:51,@achow101 @promag you ACKed this previously and might be interested to reACK. There haven't been any changes except rebasing on top of #20202 making this PR a little smaller (new `MakeDatabase` code originally added here got added in #20202 instead),https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743265207,743265207,
achow101,2020-12-11 17:50:52,ACK f3d870fc2271bf45e0269e5ae135bced1a26f620,https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743335864,743335864,
promag,2020-12-11 23:19:17,"Tested ACK f3d870fc2271bf45e0269e5ae135bced1a26f620. Tested a --without-sqlite build with sqlite wallets.\n\n > Startup fails if any wallets `-wallet` or settings.json is sqlite.\n\nThis still happens - specifying sqlite wallet on a --without-sqlite build at command line (or settings.json) leads to startup failure. Not sure if this is expected or if it should just ignore it. Note that startup ",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743475959,743475959,
ryanofsky,2020-12-12 00:24:08,"> This still happens - specifying sqlite wallet on a --without-sqlite build at command line (or settings.json) leads to startup failure. Not sure if this is expected or if it should just ignore it. Note that startup succeeds if you specify a wallet that doesn't exists.\n\nDoes the PR cause this somehow? Or is this a preexisting bug not related to the PR?",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743501540,743501540,
promag,2020-12-12 00:28:23,Existing behavior is to fail startup if -wallet points to a unknown file format. In this case it's a known but unsupported file format. I'm fine with both outcomes.,https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743507573,743507573,
ryanofsky,2020-12-12 00:44:34,"I don't understand what's being reported still. AFAIK, before this PR this case failed at startup, and after this PR it still fails at startup. But before this PR the error message was misleading, and after this PR the error message is more accurate.\n\nIf the only thing that's changing is the error message, that's good to know and thanks for testing it. But if something else is changing here be",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743530336,743530336,
promag,2020-12-12 00:50:03,"That's my question - If it should remain a startup error of if it should be ignored since now it's a known wallet format wallet. If the user loads a sqlite wallet, it's saved on settings, then restart with a --without-sqlite build will always fail.",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743538042,743538042,
ryanofsky,2020-12-12 01:10:38,"> That's my question - If it should remain a startup error of if it should be ignored since now it's a known wallet format wallet. If the user loads a sqlite wallet, it's saved on settings, then restart with a --without-sqlite build will always fail.\n\nThese are different questions. I'm asking what *does* happen, and you are asking what *should* happen. It sounds like in the last sentence you a",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743567195,743567195,
promag,2020-12-12 01:35:17,"> you are confirming that the PR description here is accurate, and the PR is behaving as expected\n\nYes, that's what I ACK'ed above.\n\nAh I keep forgetting bitcoin-core/gui#95 :weary: thanks for pointing it.",https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743602790,743602790,
ryanofsky,2020-12-12 01:39:13,Thanks for testing and clarifying! Sorry I didn't understand right away.,https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743608597,743608597,
promag,2020-11-01 16:23:34,"9d1fd52952cb6a944e7de4dd7fca241e3341894b\n\nAs a next step it would be nice to refactor this and `MakeWalletDatabase` to avoid duplicate code. Something like:\n```cpp\nDatabaseStatus CheckWalletDatabase(const fs::path& path);\nDatabaseStatus CheckWalletDatabase(const std::string& name)\n{\n    return CheckWalletDatabase(fs::absolute(name, GetWalletDir()));\n}\n```\nWhich would be called ",https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515641690,515641690,src/wallet/db.cpp
mjdietzx,2020-11-01 21:13:44,Is it worth breaking this into a function so `IsSQLiteFile` can re-use this as well? With `minSize` is as parameter,https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515672776,515672776,src/wallet/db.cpp
mjdietzx,2020-11-01 21:17:40,Is this check necessary?,https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673173,515673173,src/wallet/db.cpp
mjdietzx,2020-11-01 21:18:49,Do you need to close the file?,https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673267,515673267,src/wallet/db.cpp
ryanofsky,2020-11-04 14:26:55,"re: https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515641690\n\n> [9d1fd52](https://github.com/bitcoin/bitcoin/commit/9d1fd52952cb6a944e7de4dd7fca241e3341894b)\n> \n> As a next step it would be nice to refactor this and `MakeWalletDatabase` to avoid duplicate code.\n\nDefinitely could be a next step. I'd be a little skeptical of adding another similar sounding function when it's n",https://github.com/bitcoin/bitcoin/pull/20275#discussion_r517382090,517382090,src/wallet/db.cpp
ryanofsky,2020-11-04 14:34:47,"re: https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673173\n\n> Is this check necessary?\n\nThis is preexisting code in a move-only function. If you wanted to drop this line you would need to add an error_code check below to avoid logging an error if the path is not found. That's probably the way I would do it, but I don't think the difference is significant.",https://github.com/bitcoin/bitcoin/pull/20275#discussion_r517387788,517387788,src/wallet/db.cpp
ryanofsky,2020-11-04 14:35:17,"re: https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515672776\n\n> Is it worth breaking this into a function so `IsSQLiteFile` can re-use this as well? With `minSize` is as parameter\n\nThis is preexisting code in a move-only function, but it seems like a reasonable thing to do. Not sure if you think this would be clearer or just minimize code or have another benefit.",https://github.com/bitcoin/bitcoin/pull/20275#discussion_r517388156,517388156,src/wallet/db.cpp
ryanofsky,2020-11-04 14:36:13,"re: https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673267\n\n> Do you need to close the file?\n\nNo need, it should be closed in the destructor. (Also this is more preexisting code in the move-only function)",https://github.com/bitcoin/bitcoin/pull/20275#discussion_r517388847,517388847,src/wallet/db.cpp
luke-jr,2020-11-13 16:47:27,Prefer to keep unreachable code under an `#else` here,https://github.com/bitcoin/bitcoin/pull/20275#discussion_r523073986,523073986,src/wallet/walletdb.cpp
ryanofsky,2020-11-13 17:09:42,"> Prefer to keep unreachable code under an `#else` here\n\nPrefer not to so there is less unnecessary variation between build configurations, and so code is checked by the compiler.",https://github.com/bitcoin/bitcoin/pull/20275#discussion_r523093981,523093981,src/wallet/walletdb.cpp
