[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719810438",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-719810438",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 719810438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTgxMDQzOA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T21:34:18Z",
    "updated_at": "2020-10-30T21:34:18Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.\r\n\r\nIn 606622195fdf6a1fb6adc41d1091ce2ae7501125 commit message:\r\n> \"Remove circular dependencies between wallet translation units\"\r\n\r\nWhat are those dependencies?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719810438/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719815071",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-719815071",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 719815071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTgxNTA3MQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T21:47:46Z",
    "updated_at": "2020-10-30T21:47:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> What are those dependencies?\r\n\r\nOh, I think I need to drop that comment. The dependency I was thinking of was `walletutil.cpp` depending on `bdb.cpp` for `ExistsBerkeleyDatabase`, and `bdb.cpp` depending on `walletutil.cpp` for `SplitWalletPath`. And I thought there were others. But actually `SplitWalletPath` is in `db.cpp` not `walletutil.cpp`, and now I don't think there are other dependencies.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719815071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719849943",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-719849943",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 719849943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTg0OTk0Mw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-30T23:58:41Z",
    "updated_at": "2020-12-05T00:18:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20206 (wallet, refactor: Include headers instead of function declarations by hebasto)\n* #19245 ([WIP DONOTMERGE] Replace boost::filesystem with std::filesystem (in c++17) by kiminuo)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719849943/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720163756",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-720163756",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 720163756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDE2Mzc1Ng==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-01T22:46:17Z",
    "updated_at": "2020-11-01T22:46:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mjdietzx your questions about the IsBDBFile are good but I think not directly relevant to this PR, which is just moving the IsBDBFile function from one file to another, not changing it at all.\r\n\r\nViewing individual commits https://github.com/bitcoin/bitcoin/pull/20275/commits/ may be clearer than viewing the consolidated diff. Any case, I'll try follow up with answers soon.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720163756/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720164864",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-720164864",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 720164864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDE2NDg2NA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-01T22:56:01Z",
    "updated_at": "2020-11-01T22:56:01Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720164864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720598128",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-720598128",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 720598128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDU5ODEyOA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-02T16:59:34Z",
    "updated_at": "2020-11-02T16:59:34Z",
    "author_association": "MEMBER",
    "body": "ACK e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720598128/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720644915",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-720644915",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 720644915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDY0NDkxNQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-02T18:23:31Z",
    "updated_at": "2020-11-02T18:23:31Z",
    "author_association": "MEMBER",
    "body": "Tested ACK e21dc6c05c02a0da18b9af2c0eb1d7996c378541. Tested `listwalletdir` and `loadwallet` with a wallet in `walletdir` and with an external wallet.\r\n\r\nStartup fails if any wallets `-wallet` or settings.json is sqlite.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/720644915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721785786",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-721785786",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 721785786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTc4NTc4Ng==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T15:05:06Z",
    "updated_at": "2020-11-04T15:05:06Z",
    "author_association": "MEMBER",
    "body": "Is this for 0.21?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721785786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721853805",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-721853805",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 721853805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTg1MzgwNQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T17:01:06Z",
    "updated_at": "2020-11-04T17:01:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Is this for 0.21?\r\n\r\nI'm not requesting it. I see this mostly as a code cleanup. For users, the only ones who would be affected would be those compiling from scratch and disabling sqlite, or maybe those using gentoo or nixos type packages with build customizations. The effect for these users at worst would be some confusion seeing incomplete wallet listings, or seeing scarier \"Data is not in recognized format\" error in place of \"Build does not support SQLite database format\"",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/721853805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722018320",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-722018320",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 722018320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjAxODMyMA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T22:54:02Z",
    "updated_at": "2020-11-04T22:54:02Z",
    "author_association": "MEMBER",
    "body": "> or seeing scarier \"Data is not in recognized format\"\r\n\r\nThe same error would also happen if the the user attempts to open sqlite wallet with previous versions.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722018320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722184477",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-722184477",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 722184477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjE4NDQ3Nw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-05T06:59:54Z",
    "updated_at": "2020-11-05T06:59:54Z",
    "author_association": "MEMBER",
    "body": "Also, it would be hard to create a sqlite wallet with a non-sqlite build. Assigning 22.0 milestone",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722184477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726830756",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-726830756",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 726830756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjgzMDc1Ng==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-13T15:33:25Z",
    "updated_at": "2020-11-16T12:49:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased e21dc6c05c02a0da18b9af2c0eb1d7996c378541 -> 417e95a97b4e00a9add97d94ce3b9c38904a354b ([`pr/exist.1`](https://github.com/ryanofsky/bitcoin/commits/pr/exist.1) -> [`pr/exist.2`](https://github.com/ryanofsky/bitcoin/commits/pr/exist.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/exist.1-rebase..pr/exist.2)) due to conflict with #19502\r\nRebased 417e95a97b4e00a9add97d94ce3b9c38904a354b -> 727e0aad58b41facf55bbedfc5de45b2c41a98ae ([`pr/exist.2`](https://github.com/ryanofsky/bitcoin/commits/pr/exist.2) -> [`pr/exist.3`](https://github.com/ryanofsky/bitcoin/commits/pr/exist.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/exist.2-rebase..pr/exist.3)) due to conflict with #18836",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726830756/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739023926",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-739023926",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 739023926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTAyMzkyNg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-04T21:13:42Z",
    "updated_at": "2020-12-04T21:13:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased 727e0aad58b41facf55bbedfc5de45b2c41a98ae -> f3d870fc2271bf45e0269e5ae135bced1a26f620 ([`pr/exist.3`](https://github.com/ryanofsky/bitcoin/commits/pr/exist.3) -> [`pr/exist.4`](https://github.com/ryanofsky/bitcoin/commits/pr/exist.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/exist.3-rebase..pr/exist.4)) due to conflict with #20202. #20202 added some new code that was originally part of this PR so this PR is a little simpler now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739023926/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739760389",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-739760389",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 739760389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczOTc2MDM4OQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-07T08:29:33Z",
    "updated_at": "2020-12-07T08:29:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739760389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743265207",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743265207",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 743265207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzI2NTIwNw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-11T15:36:51Z",
    "updated_at": "2020-12-11T15:36:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@achow101 @promag you ACKed this previously and might be interested to reACK. There haven't been any changes except rebasing on top of #20202 making this PR a little smaller (new `MakeDatabase` code originally added here got added in #20202 instead)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743265207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743335864",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743335864",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 743335864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzMzNTg2NA==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-11T17:50:52Z",
    "updated_at": "2020-12-11T17:50:52Z",
    "author_association": "MEMBER",
    "body": "ACK f3d870fc2271bf45e0269e5ae135bced1a26f620",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743335864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743475959",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743475959",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 743475959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzQ3NTk1OQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-11T23:19:17Z",
    "updated_at": "2020-12-11T23:19:17Z",
    "author_association": "MEMBER",
    "body": "Tested ACK f3d870fc2271bf45e0269e5ae135bced1a26f620. Tested a --without-sqlite build with sqlite wallets.\r\n\r\n > Startup fails if any wallets `-wallet` or settings.json is sqlite.\r\n\r\nThis still happens - specifying sqlite wallet on a --without-sqlite build at command line (or settings.json) leads to startup failure. Not sure if this is expected or if it should just ignore it. Note that startup succeeds if you specify a wallet that doesn't exists.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743475959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743501540",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743501540",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 743501540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzUwMTU0MA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-12T00:24:08Z",
    "updated_at": "2020-12-12T00:24:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> This still happens - specifying sqlite wallet on a --without-sqlite build at command line (or settings.json) leads to startup failure. Not sure if this is expected or if it should just ignore it. Note that startup succeeds if you specify a wallet that doesn't exists.\r\n\r\nDoes the PR cause this somehow? Or is this a preexisting bug not related to the PR?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743501540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743507573",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743507573",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 743507573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzUwNzU3Mw==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-12T00:28:23Z",
    "updated_at": "2020-12-12T00:28:23Z",
    "author_association": "MEMBER",
    "body": "Existing behavior is to fail startup if -wallet points to a unknown file format. In this case it's a known but unsupported file format. I'm fine with both outcomes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743507573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743530336",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743530336",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 743530336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzUzMDMzNg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-12T00:44:34Z",
    "updated_at": "2020-12-12T00:44:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't understand what's being reported still. AFAIK, before this PR this case failed at startup, and after this PR it still fails at startup. But before this PR the error message was misleading, and after this PR the error message is more accurate.\r\n\r\nIf the only thing that's changing is the error message, that's good to know and thanks for testing it. But if something else is changing here besides the message, that's not intended, and is probably something that should be fixed here or at least noted in the PR description.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743530336/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743538042",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743538042",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 743538042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzUzODA0Mg==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-12T00:50:03Z",
    "updated_at": "2020-12-12T00:54:13Z",
    "author_association": "MEMBER",
    "body": "That's my question - If it should remain a startup error of if it should be ignored since now it's a known wallet format wallet. If the user loads a sqlite wallet, it's saved on settings, then restart with a --without-sqlite build will always fail.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743538042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743567195",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743567195",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 743567195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzU2NzE5NQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-12T01:10:38Z",
    "updated_at": "2020-12-12T01:15:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "> That's my question - If it should remain a startup error of if it should be ignored since now it's a known wallet format wallet. If the user loads a sqlite wallet, it's saved on settings, then restart with a --without-sqlite build will always fail.\r\n\r\nThese are different questions. I'm asking what *does* happen, and you are asking what *should* happen. It sounds like in the last sentence you are confirming that the PR description here is accurate, and the PR is behaving as expected, and that only change before this PR and after this PR is that some error text is slightly improved.\r\n\r\nIf this is correct, then the answer to your question about what should happen is a matter of opinion. My opinion is that any of the 4 alternatives in https://github.com/bitcoin-core/gui/issues/95#issuecomment-694236940 would be a good solution. I like alternative 4 in that list the best, but there a lot of good options. But this issue seems only vaguely related to this PR if the only effect of this PR is tweaking and improving the error text, so it probably should be discussed separately.\r\n\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743567195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743602790",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743602790",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 743602790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzYwMjc5MA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-12T01:35:17Z",
    "updated_at": "2020-12-12T01:35:17Z",
    "author_association": "MEMBER",
    "body": "> you are confirming that the PR description here is accurate, and the PR is behaving as expected\r\n\r\nYes, that's what I ACK'ed above.\r\n\r\nAh I keep forgetting bitcoin-core/gui#95 :weary: thanks for pointing it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743602790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743608597",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#issuecomment-743608597",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20275",
    "id": 743608597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzYwODU5Nw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-12T01:39:13Z",
    "updated_at": "2020-12-12T01:39:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for testing and clarifying! Sorry I didn't understand right away.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/743608597/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515641690",
    "pull_request_review_id": 521239205,
    "id": 515641690,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0MTY5MA==",
    "diff_hunk": "@@ -34,10 +27,10 @@ std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n         const fs::path path = it->path().string().substr(offset);\n \n         if (it->status().type() == fs::directory_file &&\n-            (ExistsBerkeleyDatabase(it->path()) || ExistsSQLiteDatabase(it->path()))) {\n+            (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {",
    "path": "src/wallet/db.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "f3d870fc2271bf45e0269e5ae135bced1a26f620",
    "original_commit_id": "9d1fd52952cb6a944e7de4dd7fca241e3341894b",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "9d1fd52952cb6a944e7de4dd7fca241e3341894b\r\n\r\nAs a next step it would be nice to refactor this and `MakeWalletDatabase` to avoid duplicate code. Something like:\r\n```cpp\r\nDatabaseStatus CheckWalletDatabase(const fs::path& path);\r\nDatabaseStatus CheckWalletDatabase(const std::string& name)\r\n{\r\n    return CheckWalletDatabase(fs::absolute(name, GetWalletDir()));\r\n}\r\n```\r\nWhich would be called in both places.",
    "created_at": "2020-11-01T16:23:34Z",
    "updated_at": "2020-12-04T21:06:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515641690",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515641690"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515641690"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515641690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 30,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515672776",
    "pull_request_review_id": 521261730,
    "id": 515672776,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3Mjc3Ng==",
    "diff_hunk": "@@ -3,23 +3,125 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <chainparams.h>\n #include <fs.h>\n+#include <logging.h>\n #include <wallet/db.h>\n \n #include <string>\n \n-void SplitWalletPath(const fs::path& wallet_path, fs::path& env_directory, std::string& database_filename)\n+std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n {\n-    if (fs::is_regular_file(wallet_path)) {\n+    const size_t offset = wallet_dir.string().size() + 1;\n+    std::vector<fs::path> paths;\n+    boost::system::error_code ec;\n+\n+    for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n+        if (ec) {\n+            LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n+            continue;\n+        }\n+\n+        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+        const fs::path path = it->path().string().substr(offset);\n+\n+        if (it->status().type() == fs::directory_file &&\n+            (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {\n+            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+            paths.emplace_back(path);\n+        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBDBFile(it->path())) {\n+            if (it->path().filename() == \"wallet.dat\") {\n+                // Found top-level wallet.dat btree file, add top level directory \"\"\n+                // as a wallet.\n+                paths.emplace_back();\n+            } else {\n+                // Found top-level btree file not called wallet.dat. Current bitcoin\n+                // software will never create these files but will allow them to be\n+                // opened in a shared database environment for backwards compatibility.\n+                // Add it to the list of available wallets.\n+                paths.emplace_back(path);\n+            }\n+        }\n+    }\n+\n+    return paths;\n+}\n+\n+fs::path BDBDataFile(const fs::path& path)\n+{\n+    if (fs::is_regular_file(path)) {\n         // Special case for backwards compatibility: if wallet path points to an\n         // existing file, treat it as the path to a BDB data file in a parent\n         // directory that also contains BDB log files.\n-        env_directory = wallet_path.parent_path();\n-        database_filename = wallet_path.filename().string();\n+        return path;\n     } else {\n         // Normal case: Interpret wallet path as a directory path containing\n         // data and log files.\n-        env_directory = wallet_path;\n-        database_filename = \"wallet.dat\";\n+        return path / \"wallet.dat\";\n     }\n }\n+\n+fs::path SQLiteDataFile(const fs::path& path)\n+{\n+    return path / \"wallet.dat\";\n+}\n+\n+bool IsBDBFile(const fs::path& path)\n+{\n+    if (!fs::exists(path)) return false;\n+\n+    // A Berkeley DB Btree file has at least 4K.\n+    // This check also prevents opening lock files.\n+    boost::system::error_code ec;\n+    auto size = fs::file_size(path, ec);\n+    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), path.string());\n+    if (size < 4096) return false;\n+\n+    fsbridge::ifstream file(path, std::ios::binary);\n+    if (!file.is_open()) return false;",
    "path": "src/wallet/db.cpp",
    "position": 90,
    "original_position": 86,
    "commit_id": "f3d870fc2271bf45e0269e5ae135bced1a26f620",
    "original_commit_id": "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is it worth breaking this into a function so `IsSQLiteFile` can re-use this as well? With `minSize` is as parameter",
    "created_at": "2020-11-01T21:13:44Z",
    "updated_at": "2020-12-04T21:06:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515672776",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515672776"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515672776"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515672776/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 77,
    "original_start_line": 72,
    "start_side": "RIGHT",
    "line": 87,
    "original_line": 87,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515673173",
    "pull_request_review_id": 521262102,
    "id": 515673173,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3MzE3Mw==",
    "diff_hunk": "@@ -3,23 +3,125 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <chainparams.h>\n #include <fs.h>\n+#include <logging.h>\n #include <wallet/db.h>\n \n #include <string>\n \n-void SplitWalletPath(const fs::path& wallet_path, fs::path& env_directory, std::string& database_filename)\n+std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n {\n-    if (fs::is_regular_file(wallet_path)) {\n+    const size_t offset = wallet_dir.string().size() + 1;\n+    std::vector<fs::path> paths;\n+    boost::system::error_code ec;\n+\n+    for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n+        if (ec) {\n+            LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n+            continue;\n+        }\n+\n+        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+        const fs::path path = it->path().string().substr(offset);\n+\n+        if (it->status().type() == fs::directory_file &&\n+            (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {\n+            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+            paths.emplace_back(path);\n+        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBDBFile(it->path())) {\n+            if (it->path().filename() == \"wallet.dat\") {\n+                // Found top-level wallet.dat btree file, add top level directory \"\"\n+                // as a wallet.\n+                paths.emplace_back();\n+            } else {\n+                // Found top-level btree file not called wallet.dat. Current bitcoin\n+                // software will never create these files but will allow them to be\n+                // opened in a shared database environment for backwards compatibility.\n+                // Add it to the list of available wallets.\n+                paths.emplace_back(path);\n+            }\n+        }\n+    }\n+\n+    return paths;\n+}\n+\n+fs::path BDBDataFile(const fs::path& path)\n+{\n+    if (fs::is_regular_file(path)) {\n         // Special case for backwards compatibility: if wallet path points to an\n         // existing file, treat it as the path to a BDB data file in a parent\n         // directory that also contains BDB log files.\n-        env_directory = wallet_path.parent_path();\n-        database_filename = wallet_path.filename().string();\n+        return path;\n     } else {\n         // Normal case: Interpret wallet path as a directory path containing\n         // data and log files.\n-        env_directory = wallet_path;\n-        database_filename = \"wallet.dat\";\n+        return path / \"wallet.dat\";\n     }\n }\n+\n+fs::path SQLiteDataFile(const fs::path& path)\n+{\n+    return path / \"wallet.dat\";\n+}\n+\n+bool IsBDBFile(const fs::path& path)\n+{\n+    if (!fs::exists(path)) return false;",
    "path": "src/wallet/db.cpp",
    "position": 80,
    "original_position": 76,
    "commit_id": "f3d870fc2271bf45e0269e5ae135bced1a26f620",
    "original_commit_id": "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is this check necessary?",
    "created_at": "2020-11-01T21:17:40Z",
    "updated_at": "2020-12-04T21:06:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673173",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515673173"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673173"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515673173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 77,
    "original_line": 77,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515673267",
    "pull_request_review_id": 521262207,
    "id": 515673267,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY3MzI2Nw==",
    "diff_hunk": "@@ -3,23 +3,125 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <chainparams.h>\n #include <fs.h>\n+#include <logging.h>\n #include <wallet/db.h>\n \n #include <string>\n \n-void SplitWalletPath(const fs::path& wallet_path, fs::path& env_directory, std::string& database_filename)\n+std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n {\n-    if (fs::is_regular_file(wallet_path)) {\n+    const size_t offset = wallet_dir.string().size() + 1;\n+    std::vector<fs::path> paths;\n+    boost::system::error_code ec;\n+\n+    for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n+        if (ec) {\n+            LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n+            continue;\n+        }\n+\n+        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+        const fs::path path = it->path().string().substr(offset);\n+\n+        if (it->status().type() == fs::directory_file &&\n+            (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {\n+            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+            paths.emplace_back(path);\n+        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBDBFile(it->path())) {\n+            if (it->path().filename() == \"wallet.dat\") {\n+                // Found top-level wallet.dat btree file, add top level directory \"\"\n+                // as a wallet.\n+                paths.emplace_back();\n+            } else {\n+                // Found top-level btree file not called wallet.dat. Current bitcoin\n+                // software will never create these files but will allow them to be\n+                // opened in a shared database environment for backwards compatibility.\n+                // Add it to the list of available wallets.\n+                paths.emplace_back(path);\n+            }\n+        }\n+    }\n+\n+    return paths;\n+}\n+\n+fs::path BDBDataFile(const fs::path& path)\n+{\n+    if (fs::is_regular_file(path)) {\n         // Special case for backwards compatibility: if wallet path points to an\n         // existing file, treat it as the path to a BDB data file in a parent\n         // directory that also contains BDB log files.\n-        env_directory = wallet_path.parent_path();\n-        database_filename = wallet_path.filename().string();\n+        return path;\n     } else {\n         // Normal case: Interpret wallet path as a directory path containing\n         // data and log files.\n-        env_directory = wallet_path;\n-        database_filename = \"wallet.dat\";\n+        return path / \"wallet.dat\";\n     }\n }\n+\n+fs::path SQLiteDataFile(const fs::path& path)\n+{\n+    return path / \"wallet.dat\";\n+}\n+\n+bool IsBDBFile(const fs::path& path)\n+{\n+    if (!fs::exists(path)) return false;\n+\n+    // A Berkeley DB Btree file has at least 4K.\n+    // This check also prevents opening lock files.\n+    boost::system::error_code ec;\n+    auto size = fs::file_size(path, ec);\n+    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), path.string());\n+    if (size < 4096) return false;\n+\n+    fsbridge::ifstream file(path, std::ios::binary);\n+    if (!file.is_open()) return false;\n+\n+    file.seekg(12, std::ios::beg); // Magic bytes start at offset 12\n+    uint32_t data = 0;\n+    file.read((char*) &data, sizeof(data)); // Read 4 bytes of file to compare against magic",
    "path": "src/wallet/db.cpp",
    "position": 94,
    "original_position": 90,
    "commit_id": "f3d870fc2271bf45e0269e5ae135bced1a26f620",
    "original_commit_id": "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Do you need to close the file?",
    "created_at": "2020-11-01T21:18:49Z",
    "updated_at": "2020-12-04T21:06:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673267",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515673267"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673267"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515673267/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 91,
    "original_line": 91,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517382090",
    "pull_request_review_id": 523411141,
    "id": 517382090,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM4MjA5MA==",
    "diff_hunk": "@@ -34,10 +27,10 @@ std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n         const fs::path path = it->path().string().substr(offset);\n \n         if (it->status().type() == fs::directory_file &&\n-            (ExistsBerkeleyDatabase(it->path()) || ExistsSQLiteDatabase(it->path()))) {\n+            (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {",
    "path": "src/wallet/db.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "f3d870fc2271bf45e0269e5ae135bced1a26f620",
    "original_commit_id": "9d1fd52952cb6a944e7de4dd7fca241e3341894b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515641690\r\n\r\n> [9d1fd52](https://github.com/bitcoin/bitcoin/commit/9d1fd52952cb6a944e7de4dd7fca241e3341894b)\r\n> \r\n> As a next step it would be nice to refactor this and `MakeWalletDatabase` to avoid duplicate code.\r\n\r\nDefinitely could be a next step. I'd be a little skeptical of adding another similar sounding function when it's nice to have fewer distinct functions, but would have to see what this simplifies",
    "created_at": "2020-11-04T14:26:55Z",
    "updated_at": "2020-12-04T21:06:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r517382090",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517382090"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r517382090"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517382090/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 30,
    "side": "RIGHT",
    "in_reply_to_id": 515641690
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517387788",
    "pull_request_review_id": 523411141,
    "id": 517387788,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM4Nzc4OA==",
    "diff_hunk": "@@ -3,23 +3,125 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <chainparams.h>\n #include <fs.h>\n+#include <logging.h>\n #include <wallet/db.h>\n \n #include <string>\n \n-void SplitWalletPath(const fs::path& wallet_path, fs::path& env_directory, std::string& database_filename)\n+std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n {\n-    if (fs::is_regular_file(wallet_path)) {\n+    const size_t offset = wallet_dir.string().size() + 1;\n+    std::vector<fs::path> paths;\n+    boost::system::error_code ec;\n+\n+    for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n+        if (ec) {\n+            LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n+            continue;\n+        }\n+\n+        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+        const fs::path path = it->path().string().substr(offset);\n+\n+        if (it->status().type() == fs::directory_file &&\n+            (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {\n+            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+            paths.emplace_back(path);\n+        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBDBFile(it->path())) {\n+            if (it->path().filename() == \"wallet.dat\") {\n+                // Found top-level wallet.dat btree file, add top level directory \"\"\n+                // as a wallet.\n+                paths.emplace_back();\n+            } else {\n+                // Found top-level btree file not called wallet.dat. Current bitcoin\n+                // software will never create these files but will allow them to be\n+                // opened in a shared database environment for backwards compatibility.\n+                // Add it to the list of available wallets.\n+                paths.emplace_back(path);\n+            }\n+        }\n+    }\n+\n+    return paths;\n+}\n+\n+fs::path BDBDataFile(const fs::path& path)\n+{\n+    if (fs::is_regular_file(path)) {\n         // Special case for backwards compatibility: if wallet path points to an\n         // existing file, treat it as the path to a BDB data file in a parent\n         // directory that also contains BDB log files.\n-        env_directory = wallet_path.parent_path();\n-        database_filename = wallet_path.filename().string();\n+        return path;\n     } else {\n         // Normal case: Interpret wallet path as a directory path containing\n         // data and log files.\n-        env_directory = wallet_path;\n-        database_filename = \"wallet.dat\";\n+        return path / \"wallet.dat\";\n     }\n }\n+\n+fs::path SQLiteDataFile(const fs::path& path)\n+{\n+    return path / \"wallet.dat\";\n+}\n+\n+bool IsBDBFile(const fs::path& path)\n+{\n+    if (!fs::exists(path)) return false;",
    "path": "src/wallet/db.cpp",
    "position": 80,
    "original_position": 76,
    "commit_id": "f3d870fc2271bf45e0269e5ae135bced1a26f620",
    "original_commit_id": "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673173\r\n\r\n> Is this check necessary?\r\n\r\nThis is preexisting code in a move-only function. If you wanted to drop this line you would need to add an error_code check below to avoid logging an error if the path is not found. That's probably the way I would do it, but I don't think the difference is significant.",
    "created_at": "2020-11-04T14:34:47Z",
    "updated_at": "2020-12-04T21:06:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r517387788",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517387788"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r517387788"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517387788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 77,
    "original_line": 77,
    "side": "RIGHT",
    "in_reply_to_id": 515673173
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517388156",
    "pull_request_review_id": 523411141,
    "id": 517388156,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM4ODE1Ng==",
    "diff_hunk": "@@ -3,23 +3,125 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <chainparams.h>\n #include <fs.h>\n+#include <logging.h>\n #include <wallet/db.h>\n \n #include <string>\n \n-void SplitWalletPath(const fs::path& wallet_path, fs::path& env_directory, std::string& database_filename)\n+std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n {\n-    if (fs::is_regular_file(wallet_path)) {\n+    const size_t offset = wallet_dir.string().size() + 1;\n+    std::vector<fs::path> paths;\n+    boost::system::error_code ec;\n+\n+    for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n+        if (ec) {\n+            LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n+            continue;\n+        }\n+\n+        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+        const fs::path path = it->path().string().substr(offset);\n+\n+        if (it->status().type() == fs::directory_file &&\n+            (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {\n+            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+            paths.emplace_back(path);\n+        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBDBFile(it->path())) {\n+            if (it->path().filename() == \"wallet.dat\") {\n+                // Found top-level wallet.dat btree file, add top level directory \"\"\n+                // as a wallet.\n+                paths.emplace_back();\n+            } else {\n+                // Found top-level btree file not called wallet.dat. Current bitcoin\n+                // software will never create these files but will allow them to be\n+                // opened in a shared database environment for backwards compatibility.\n+                // Add it to the list of available wallets.\n+                paths.emplace_back(path);\n+            }\n+        }\n+    }\n+\n+    return paths;\n+}\n+\n+fs::path BDBDataFile(const fs::path& path)\n+{\n+    if (fs::is_regular_file(path)) {\n         // Special case for backwards compatibility: if wallet path points to an\n         // existing file, treat it as the path to a BDB data file in a parent\n         // directory that also contains BDB log files.\n-        env_directory = wallet_path.parent_path();\n-        database_filename = wallet_path.filename().string();\n+        return path;\n     } else {\n         // Normal case: Interpret wallet path as a directory path containing\n         // data and log files.\n-        env_directory = wallet_path;\n-        database_filename = \"wallet.dat\";\n+        return path / \"wallet.dat\";\n     }\n }\n+\n+fs::path SQLiteDataFile(const fs::path& path)\n+{\n+    return path / \"wallet.dat\";\n+}\n+\n+bool IsBDBFile(const fs::path& path)\n+{\n+    if (!fs::exists(path)) return false;\n+\n+    // A Berkeley DB Btree file has at least 4K.\n+    // This check also prevents opening lock files.\n+    boost::system::error_code ec;\n+    auto size = fs::file_size(path, ec);\n+    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), path.string());\n+    if (size < 4096) return false;\n+\n+    fsbridge::ifstream file(path, std::ios::binary);\n+    if (!file.is_open()) return false;",
    "path": "src/wallet/db.cpp",
    "position": 90,
    "original_position": 86,
    "commit_id": "f3d870fc2271bf45e0269e5ae135bced1a26f620",
    "original_commit_id": "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515672776\r\n\r\n> Is it worth breaking this into a function so `IsSQLiteFile` can re-use this as well? With `minSize` is as parameter\r\n\r\nThis is preexisting code in a move-only function, but it seems like a reasonable thing to do. Not sure if you think this would be clearer or just minimize code or have another benefit.",
    "created_at": "2020-11-04T14:35:17Z",
    "updated_at": "2020-12-04T21:06:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r517388156",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517388156"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r517388156"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517388156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 77,
    "original_start_line": 72,
    "start_side": "RIGHT",
    "line": 87,
    "original_line": 87,
    "side": "RIGHT",
    "in_reply_to_id": 515672776
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517388847",
    "pull_request_review_id": 523411141,
    "id": 517388847,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM4ODg0Nw==",
    "diff_hunk": "@@ -3,23 +3,125 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <chainparams.h>\n #include <fs.h>\n+#include <logging.h>\n #include <wallet/db.h>\n \n #include <string>\n \n-void SplitWalletPath(const fs::path& wallet_path, fs::path& env_directory, std::string& database_filename)\n+std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n {\n-    if (fs::is_regular_file(wallet_path)) {\n+    const size_t offset = wallet_dir.string().size() + 1;\n+    std::vector<fs::path> paths;\n+    boost::system::error_code ec;\n+\n+    for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n+        if (ec) {\n+            LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n+            continue;\n+        }\n+\n+        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+        const fs::path path = it->path().string().substr(offset);\n+\n+        if (it->status().type() == fs::directory_file &&\n+            (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {\n+            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n+            paths.emplace_back(path);\n+        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBDBFile(it->path())) {\n+            if (it->path().filename() == \"wallet.dat\") {\n+                // Found top-level wallet.dat btree file, add top level directory \"\"\n+                // as a wallet.\n+                paths.emplace_back();\n+            } else {\n+                // Found top-level btree file not called wallet.dat. Current bitcoin\n+                // software will never create these files but will allow them to be\n+                // opened in a shared database environment for backwards compatibility.\n+                // Add it to the list of available wallets.\n+                paths.emplace_back(path);\n+            }\n+        }\n+    }\n+\n+    return paths;\n+}\n+\n+fs::path BDBDataFile(const fs::path& path)\n+{\n+    if (fs::is_regular_file(path)) {\n         // Special case for backwards compatibility: if wallet path points to an\n         // existing file, treat it as the path to a BDB data file in a parent\n         // directory that also contains BDB log files.\n-        env_directory = wallet_path.parent_path();\n-        database_filename = wallet_path.filename().string();\n+        return path;\n     } else {\n         // Normal case: Interpret wallet path as a directory path containing\n         // data and log files.\n-        env_directory = wallet_path;\n-        database_filename = \"wallet.dat\";\n+        return path / \"wallet.dat\";\n     }\n }\n+\n+fs::path SQLiteDataFile(const fs::path& path)\n+{\n+    return path / \"wallet.dat\";\n+}\n+\n+bool IsBDBFile(const fs::path& path)\n+{\n+    if (!fs::exists(path)) return false;\n+\n+    // A Berkeley DB Btree file has at least 4K.\n+    // This check also prevents opening lock files.\n+    boost::system::error_code ec;\n+    auto size = fs::file_size(path, ec);\n+    if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), path.string());\n+    if (size < 4096) return false;\n+\n+    fsbridge::ifstream file(path, std::ios::binary);\n+    if (!file.is_open()) return false;\n+\n+    file.seekg(12, std::ios::beg); // Magic bytes start at offset 12\n+    uint32_t data = 0;\n+    file.read((char*) &data, sizeof(data)); // Read 4 bytes of file to compare against magic",
    "path": "src/wallet/db.cpp",
    "position": 94,
    "original_position": 90,
    "commit_id": "f3d870fc2271bf45e0269e5ae135bced1a26f620",
    "original_commit_id": "e21dc6c05c02a0da18b9af2c0eb1d7996c378541",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/20275#discussion_r515673267\r\n\r\n> Do you need to close the file?\r\n\r\nNo need, it should be closed in the destructor. (Also this is more preexisting code in the move-only function)",
    "created_at": "2020-11-04T14:36:13Z",
    "updated_at": "2020-12-04T21:06:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r517388847",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517388847"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r517388847"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517388847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 91,
    "original_line": 91,
    "side": "RIGHT",
    "in_reply_to_id": 515673267
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523073986",
    "pull_request_review_id": 530223782,
    "id": 523073986,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3Mzk4Ng==",
    "diff_hunk": "@@ -1050,13 +1050,14 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n     // Format is not set when a db doesn't already exist, so use the format specified by the options if it is set.\n     if (!format && options.require_format) format = options.require_format;\n \n-#ifdef USE_SQLITE\n     if (format && format == DatabaseFormat::SQLITE) {\n+#ifdef USE_SQLITE\n         return MakeSQLiteDatabase(path, options, status, error);\n-    }\n-#else\n-    assert(format != DatabaseFormat::SQLITE);\n #endif\n+        error = Untranslated(strprintf(\"Failed to load database path '%s'. Build does not support SQLite database format.\", path.string()));\n+        status = DatabaseStatus::FAILED_BAD_FORMAT;\n+        return nullptr;",
    "path": "src/wallet/walletdb.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "f3d870fc2271bf45e0269e5ae135bced1a26f620",
    "original_commit_id": "417e95a97b4e00a9add97d94ce3b9c38904a354b",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Prefer to keep unreachable code under an `#else` here",
    "created_at": "2020-11-13T16:47:27Z",
    "updated_at": "2020-12-04T21:06:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r523073986",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523073986"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r523073986"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523073986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1057,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1071,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523093981",
    "pull_request_review_id": 530246886,
    "id": 523093981,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA5Mzk4MQ==",
    "diff_hunk": "@@ -1050,13 +1050,14 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n     // Format is not set when a db doesn't already exist, so use the format specified by the options if it is set.\n     if (!format && options.require_format) format = options.require_format;\n \n-#ifdef USE_SQLITE\n     if (format && format == DatabaseFormat::SQLITE) {\n+#ifdef USE_SQLITE\n         return MakeSQLiteDatabase(path, options, status, error);\n-    }\n-#else\n-    assert(format != DatabaseFormat::SQLITE);\n #endif\n+        error = Untranslated(strprintf(\"Failed to load database path '%s'. Build does not support SQLite database format.\", path.string()));\n+        status = DatabaseStatus::FAILED_BAD_FORMAT;\n+        return nullptr;",
    "path": "src/wallet/walletdb.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "f3d870fc2271bf45e0269e5ae135bced1a26f620",
    "original_commit_id": "417e95a97b4e00a9add97d94ce3b9c38904a354b",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Prefer to keep unreachable code under an `#else` here\r\n\r\nPrefer not to so there is less unnecessary variation between build configurations, and so code is checked by the compiler.",
    "created_at": "2020-11-13T17:09:42Z",
    "updated_at": "2020-12-04T21:06:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r523093981",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523093981"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20275#discussion_r523093981"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20275"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523093981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1057,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1071,
    "side": "RIGHT",
    "in_reply_to_id": 523073986
  }
]