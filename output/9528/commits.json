[
  {
    "sha": "988d3009320f5363438af9070aaea7879efffb40",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODhkMzAwOTMyMGY1MzYzNDM4YWY5MDcwYWFlYTc4NzllZmZmYjQw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-01-12T15:47:51Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-01-13T17:58:15Z"
      },
      "message": "[qt] Rename formateNiceTimeOffset(qint64) to formatNiceTimeOffset(qint64)",
      "tree": {
        "sha": "c81eac7c746900803fae365bb2a0094433155e04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c81eac7c746900803fae365bb2a0094433155e04"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/988d3009320f5363438af9070aaea7879efffb40",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/988d3009320f5363438af9070aaea7879efffb40",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/988d3009320f5363438af9070aaea7879efffb40",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/988d3009320f5363438af9070aaea7879efffb40/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5754e0341b7c033d4caf99534aca47e9981bd7ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5754e0341b7c033d4caf99534aca47e9981bd7ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5754e0341b7c033d4caf99534aca47e9981bd7ed"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a3cb376bcf593289335bce0abbe0f8393c41aa97",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/988d3009320f5363438af9070aaea7879efffb40/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/988d3009320f5363438af9070aaea7879efffb40/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=988d3009320f5363438af9070aaea7879efffb40",
        "patch": "@@ -817,7 +817,7 @@ void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVer\n     }\n     else\n     {\n-        QString timeBehindText = GUIUtil::formateNiceTimeOffset(secs);\n+        QString timeBehindText = GUIUtil::formatNiceTimeOffset(secs);\n \n         progressBarLabel->setVisible(true);\n         progressBar->setFormat(tr(\"%1 behind\").arg(timeBehindText));"
      },
      {
        "sha": "bc865c992af9d961632d912e4535eee173a5bc58",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/988d3009320f5363438af9070aaea7879efffb40/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/988d3009320f5363438af9070aaea7879efffb40/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=988d3009320f5363438af9070aaea7879efffb40",
        "patch": "@@ -951,7 +951,7 @@ QString formatTimeOffset(int64_t nTimeOffset)\n   return QString(QObject::tr(\"%1 s\")).arg(QString::number((int)nTimeOffset, 10));\n }\n \n-QString formateNiceTimeOffset(qint64 secs)\n+QString formatNiceTimeOffset(qint64 secs)\n {\n     // Represent time from last generated block in human readable text\n     QString timeBehindText;"
      },
      {
        "sha": "5765b2ec4af0ca817cbca61d5a798a03cc1da664",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/988d3009320f5363438af9070aaea7879efffb40/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/988d3009320f5363438af9070aaea7879efffb40/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=988d3009320f5363438af9070aaea7879efffb40",
        "patch": "@@ -200,7 +200,7 @@ namespace GUIUtil\n     /* Format a CNodeCombinedStats.nTimeOffset into a user-readable string. */\n     QString formatTimeOffset(int64_t nTimeOffset);\n \n-    QString formateNiceTimeOffset(qint64 secs);\n+    QString formatNiceTimeOffset(qint64 secs);\n \n     class ClickableLabel : public QLabel\n     {"
      },
      {
        "sha": "89fb1599562118850f2eb0c3fdf49a1a5d6f9409",
        "filename": "src/qt/modaloverlay.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/988d3009320f5363438af9070aaea7879efffb40/src/qt/modaloverlay.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/988d3009320f5363438af9070aaea7879efffb40/src/qt/modaloverlay.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.cpp?ref=988d3009320f5363438af9070aaea7879efffb40",
        "patch": "@@ -105,7 +105,7 @@ void ModalOverlay::tipUpdate(int count, const QDateTime& blockDate, double nVeri\n         ui->progressIncreasePerH->setText(QString::number(progressPerHour*100, 'f', 2)+\"%\");\n \n         // show expected remaining time\n-        ui->expectedTimeLeft->setText(GUIUtil::formateNiceTimeOffset(remainingMSecs/1000.0));\n+        ui->expectedTimeLeft->setText(GUIUtil::formatNiceTimeOffset(remainingMSecs/1000.0));\n \n         static const int MAX_SAMPLES = 5000;\n         if (blockProcessTime.count() > MAX_SAMPLES)"
      }
    ]
  }
]