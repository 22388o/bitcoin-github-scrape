[
  {
    "sha": "a7d2c6327cbd436148dc2c1ca963f17ecf837445",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphN2QyYzYzMjdjYmQ0MzYxNDhkYzJjMWNhOTYzZjE3ZWNmODM3NDQ1",
    "commit": {
      "author": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-02-04T14:51:46Z"
      },
      "committer": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-02-04T15:29:53Z"
      },
      "message": "Add benchmarks for ParseHex and Base64",
      "tree": {
        "sha": "1059c003b373b3f6fcc3be5b18d53c6ee0b39109",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1059c003b373b3f6fcc3be5b18d53c6ee0b39109"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7d2c6327cbd436148dc2c1ca963f17ecf837445",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl45jfIZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqfyA2D/9zdml9vpsPY/RlkSezHCSr\nJr+ywsw2dop5d28E8E6PNPa98g7cVOsPeo+bgXG7Xpal++Ioe+ePZbI68OTaf9QD\nnp51pEmHd5a49nhZoQlsc/5d+rPT2hY9clLsF3E3qSxxSfawaoKoXLY0+24+Y/ut\ncq4XsoosuAaoJTpTUqC4C843jL4Ltw+uSuQPNhC9W4GbRJ1Af8FvBWGxRMzBIiZc\nUmh+GgU9eez4NlTvfTtai+o/dk4DtWjp6IVX3sMaZQz83Wod6ju7yb1jKc8cnL6T\nG7XTX3j3369iytVeQIg/uCusX5PSWPwv0A/7pfWonufoT23iidZTOjo2dPc3B+vq\nGlZSShbx3jcMszQe+0AZ6D7yEXkc20C9eQj2699WHfxS2R0xwdxQB0ilJQ39WMo+\n8T80Snholc0/q4EGd4BRePEq6+1wWY4PBp0ctWj8oPzF2jBi8iQsdnCC0W36RvqE\nHThyPPfS5elBOggOtB1L83DRnRdnQt7Zwa+yVP8G2E/8uIaDPsbpgHGJKbD/OatA\n0JESqouvtqn/6lAVrrOhiL0g2ktcvXNKijFzdPm1p3bHJUmsNF8eJpbzV2MDwm2z\nX1DFjiynWc+U4smpiYF9YFP3IOT+EU+4vslGSx8V/i8a/Q4DlEar8o7XY+lXX1gB\n3SV6P90HZ/gOdNa+429WQw==\n=4Oq5\n-----END PGP SIGNATURE-----",
        "payload": "tree 1059c003b373b3f6fcc3be5b18d53c6ee0b39109\nparent 651e34388832149402fea0d26f3dc13bbe197f5a\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1580827906 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1580830193 +0200\n\nAdd benchmarks for ParseHex and Base64\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7d2c6327cbd436148dc2c1ca963f17ecf837445",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a7d2c6327cbd436148dc2c1ca963f17ecf837445",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7d2c6327cbd436148dc2c1ca963f17ecf837445/comments",
    "author": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "651e34388832149402fea0d26f3dc13bbe197f5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/651e34388832149402fea0d26f3dc13bbe197f5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/651e34388832149402fea0d26f3dc13bbe197f5a"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 66,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f561d622496750d877dde30ca45286104d213b80",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d2c6327cbd436148dc2c1ca963f17ecf837445/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d2c6327cbd436148dc2c1ca963f17ecf837445/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=a7d2c6327cbd436148dc2c1ca963f17ecf837445",
        "patch": "@@ -34,6 +34,7 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/rpc_blockchain.cpp \\\n   bench/rpc_mempool.cpp \\\n   bench/util_time.cpp \\\n+  bench/util_bases16_64.cpp \\\n   bench/verify_script.cpp \\\n   bench/base58.cpp \\\n   bench/bech32.cpp \\"
      },
      {
        "sha": "b38ded1e5dfe8348e33e43e8575df2b2eb628008",
        "filename": "src/bench/util_bases16_64.cpp",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a7d2c6327cbd436148dc2c1ca963f17ecf837445/src/bench/util_bases16_64.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a7d2c6327cbd436148dc2c1ca963f17ecf837445/src/bench/util_bases16_64.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/util_bases16_64.cpp?ref=a7d2c6327cbd436148dc2c1ca963f17ecf837445",
        "patch": "@@ -0,0 +1,65 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+\n+#include <random.h>\n+#include <util/strencodings.h>\n+\n+#include <array>\n+#include <vector>\n+\n+\n+static void Base64Encode(benchmark::State& state)\n+{\n+    static const std::array<unsigned char, 32> buff = {\n+        {17, 79, 8, 99, 150, 189, 208, 162, 22, 23, 203, 163, 36, 58, 147,\n+            227, 139, 2, 215, 100, 91, 38, 11, 141, 253, 40, 117, 21, 16, 90,\n+            200, 24}};\n+    while (state.KeepRunning()) {\n+        (void)EncodeBase64(buff.data(), buff.size());\n+    }\n+}\n+\n+\n+static void Base64Decode(benchmark::State& state)\n+{\n+    std::string str = \"X19jb29raWVfXzpkMzE5MjE2NTU2MmY3ZDZiYjZmY2Q0NzQ5YzhhZGIyMjlkMzYxNGRjMjQ0OTBjMTUwOTcwNjI3NWZjMDMyNzUy==\";\n+    while (state.KeepRunning()) {\n+        DecodeBase64(str, nullptr);\n+    }\n+}\n+\n+static void Base64DecodeBig(benchmark::State& state)\n+{\n+    FastRandomContext insecure_rand(true);\n+    auto bytes = insecure_rand.randbytes(1024);\n+    std::string str = EncodeBase64(bytes.data(), bytes.size());\n+    while (state.KeepRunning()) {\n+        DecodeBase64(str, nullptr);\n+    }\n+}\n+\n+static void Base64DecodeVec(benchmark::State& state)\n+{\n+    std::string str = \"X19jb29raWVfXzpkMzE5MjE2NTU2MmY3ZDZiYjZmY2Q0NzQ5YzhhZGIyMjlkMzYxNGRjMjQ0OTBjMTUwOTcwNjI3NWZjMDMyNzUy==\";\n+    while (state.KeepRunning()) {\n+        DecodeBase64(str.c_str(), nullptr);\n+    }\n+}\n+\n+static void HexParse(benchmark::State& state)\n+{\n+    std::string str = \"fc7aba077ad5f4c3a0988d8daa4810d0d4a0e3bcb53af662998898f33df0556a\";\n+    while (state.KeepRunning()) {\n+        ParseHex(str);\n+    }\n+}\n+\n+\n+BENCHMARK(Base64Encode, 1000 * 1000);\n+BENCHMARK(Base64Decode, 1000 * 1000);\n+BENCHMARK(Base64DecodeBig, 400 * 1000);\n+BENCHMARK(Base64DecodeVec, 1000 * 1000);\n+BENCHMARK(HexParse, 1000 * 1000);"
      }
    ]
  },
  {
    "sha": "40aa0368dcaf88f5fd927a958d1418cf1cc0e6df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MGFhMDM2OGRjYWY4OGY1ZmQ5MjdhOTU4ZDE0MThjZjFjYzBlNmRm",
    "commit": {
      "author": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-02-03T18:50:07Z"
      },
      "committer": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2020-02-12T16:01:26Z"
      },
      "message": "Add memory reserving in ParseHex and SanitizeString",
      "tree": {
        "sha": "6a57ef53cdd2085e5c008322724ad37c5041ac78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a57ef53cdd2085e5c008322724ad37c5041ac78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40aa0368dcaf88f5fd927a958d1418cf1cc0e6df",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl5EIVcZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf+LnD/4s+ZBQgoqeHTjaWHshGSeb\n61kvKoEUEmiTK076NfZgkc0OImOg4Eq8oWwV8nAaAIVO1qMlahszVAd+I8a/xfDE\nxQOhBOYXQmN7vSBQh7YCRaTGgw+3oBIsThsNjTqdHSK502Sar3fIbwDEOl1Lb+rA\nYn5k8A7GH9G03eL8mnLmIsEk1dA7qS6rDSHXuUeqCimseM4LFH/FCXIqheXEyrLp\nvXi8xBh6eTemM43vmcWXT3K72EbhFAvleQMSIaIN7mA1nC2K9iikefJJ9LpPztc4\n3m8LS2YQwOxG1rN/y/LZVKQalrUvs68iBlpKToEydY61pl+3yQh6Xyfcq0D6WBqx\n2g4P0dyOqk2CelqkpVbaCoy5HTJcCNw8LD2+YYbkZF/twxP986jN03Gr4le722Bp\n39oycwoSRpjzWMU+WMrTHC40muT/jYfhJ/RjO8yX3CiRDvg+/SuZB9PKjBUdMoz+\nXbRYpCYCrXopR1/P1j533p21eFmwQX2ZJd8ULFyeWSX9pL+VlBmq16Gp4WbOrXRc\n6fTHe9eopEPK3qtUPRdUswioF3oDtQ446RcwFd9Y2/4p+Ffp0XYnxG6zDy5xef48\neHaZKpeitgMO1sIIDTNVKY1wPD5E8Ft1R8AEZBskhUXyZml8BzPsHChnv3LRo9BE\n04wVc+VUPGjjCviDLSl2Ow==\n=GKgw\n-----END PGP SIGNATURE-----",
        "payload": "tree 6a57ef53cdd2085e5c008322724ad37c5041ac78\nparent a7d2c6327cbd436148dc2c1ca963f17ecf837445\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1580755807 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1581523286 +0200\n\nAdd memory reserving in ParseHex and SanitizeString\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40aa0368dcaf88f5fd927a958d1418cf1cc0e6df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/40aa0368dcaf88f5fd927a958d1418cf1cc0e6df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40aa0368dcaf88f5fd927a958d1418cf1cc0e6df/comments",
    "author": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a7d2c6327cbd436148dc2c1ca963f17ecf837445",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a7d2c6327cbd436148dc2c1ca963f17ecf837445",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a7d2c6327cbd436148dc2c1ca963f17ecf837445"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 4,
      "deletions": 7
    },
    "files": [
      {
        "sha": "6a7c0dbece24bb2f43d87e89b71ee726fdd65e8f",
        "filename": "src/util/strencodings.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40aa0368dcaf88f5fd927a958d1418cf1cc0e6df/src/util/strencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40aa0368dcaf88f5fd927a958d1418cf1cc0e6df/src/util/strencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.cpp?ref=40aa0368dcaf88f5fd927a958d1418cf1cc0e6df",
        "patch": "@@ -27,6 +27,7 @@ static const std::string SAFE_CHARS[] =\n std::string SanitizeString(const std::string& str, int rule)\n {\n     std::string strResult;\n+    strResult.reserve(str.size());\n     for (std::string::size_type i = 0; i < str.size(); i++)\n     {\n         if (SAFE_CHARS[rule].find(str[i]) != std::string::npos)\n@@ -81,10 +82,12 @@ bool IsHexNumber(const std::string& str)\n     return (str.size() > starting_location);\n }\n \n-std::vector<unsigned char> ParseHex(const char* psz)\n+std::vector<unsigned char> ParseHex(const std::string& str)\n {\n     // convert hex dump to vector\n     std::vector<unsigned char> vch;\n+    vch.reserve(str.size() / 2);\n+    auto psz = str.cbegin();\n     while (true)\n     {\n         while (IsSpace(*psz))\n@@ -102,11 +105,6 @@ std::vector<unsigned char> ParseHex(const char* psz)\n     return vch;\n }\n \n-std::vector<unsigned char> ParseHex(const std::string& str)\n-{\n-    return ParseHex(str.c_str());\n-}\n-\n void SplitHostPort(std::string in, int &portOut, std::string &hostOut) {\n     size_t colon = in.find_last_of(':');\n     // if a : is found, and it either follows a [...], or no other : is in the string, treat it as port separator"
      },
      {
        "sha": "d2feea75c9849ab0ccc30a41a1e551ff835bb934",
        "filename": "src/util/strencodings.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40aa0368dcaf88f5fd927a958d1418cf1cc0e6df/src/util/strencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40aa0368dcaf88f5fd927a958d1418cf1cc0e6df/src/util/strencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.h?ref=40aa0368dcaf88f5fd927a958d1418cf1cc0e6df",
        "patch": "@@ -35,7 +35,6 @@ enum SafeChars\n * @return           A new string without unsafe chars\n */\n std::string SanitizeString(const std::string& str, int rule = SAFE_CHARS_DEFAULT);\n-std::vector<unsigned char> ParseHex(const char* psz);\n std::vector<unsigned char> ParseHex(const std::string& str);\n signed char HexDigit(char c);\n /* Returns true if each character in str is a hex character, and has an even"
      }
    ]
  }
]