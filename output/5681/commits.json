[
  {
    "sha": "26c16d9de9874ad2f5fe28377b838a19a558639d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNmMxNmQ5ZGU5ODc0YWQyZjVmZTI4Mzc3YjgzOGExOWE1NTg2Mzlk",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-02-05T00:11:44Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-03-24T16:21:41Z"
      },
      "message": "Includes: Refactor: Move CValidationInterface and CMainSignals out of main",
      "tree": {
        "sha": "b717b2b494657038684a4259d66b1904858b9b42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b717b2b494657038684a4259d66b1904858b9b42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26c16d9de9874ad2f5fe28377b838a19a558639d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26c16d9de9874ad2f5fe28377b838a19a558639d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/26c16d9de9874ad2f5fe28377b838a19a558639d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26c16d9de9874ad2f5fe28377b838a19a558639d/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "22cfe23196c5006d6dd79e1e1a24323148246bde",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22cfe23196c5006d6dd79e1e1a24323148246bde",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22cfe23196c5006d6dd79e1e1a24323148246bde"
      }
    ],
    "stats": {
      "total": 219,
      "additions": 123,
      "deletions": 96
    },
    "files": [
      {
        "sha": "1b3e0d9d5b67e9c5c783d586463cdc264bbfc982",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26c16d9de9874ad2f5fe28377b838a19a558639d/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26c16d9de9874ad2f5fe28377b838a19a558639d/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=26c16d9de9874ad2f5fe28377b838a19a558639d",
        "patch": "@@ -138,6 +138,7 @@ BITCOIN_CORE_H = \\\n   utilmoneystr.h \\\n   utilstrencodings.h \\\n   utiltime.h \\\n+  validationinterface.h \\\n   version.h \\\n   wallet/crypter.h \\\n   wallet/walletdb.h \\\n@@ -191,6 +192,7 @@ libbitcoin_server_a_SOURCES = \\\n   timedata.cpp \\\n   txdb.cpp \\\n   txmempool.cpp \\\n+  validationinterface.cpp \\\n   $(JSON_H) \\\n   $(BITCOIN_CORE_H)\n "
      },
      {
        "sha": "0ffacc338e61f1525ce97b7e4cb4047b143881d9",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 69,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26c16d9de9874ad2f5fe28377b838a19a558639d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26c16d9de9874ad2f5fe28377b838a19a558639d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=26c16d9de9874ad2f5fe28377b838a19a558639d",
        "patch": "@@ -5,9 +5,9 @@\n \n #include \"main.h\"\n \n-#include \"arith_uint256.h\"\n #include \"addrman.h\"\n #include \"alert.h\"\n+#include \"arith_uint256.h\"\n #include \"chainparams.h\"\n #include \"checkpoints.h\"\n #include \"checkqueue.h\"\n@@ -21,6 +21,7 @@\n #include \"undo.h\"\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n+#include \"validationinterface.h\"\n \n #include <sstream>\n \n@@ -156,68 +157,6 @@ namespace {\n     set<int> setDirtyFileInfo;\n } // anon namespace\n \n-//////////////////////////////////////////////////////////////////////////////\n-//\n-// dispatching functions\n-//\n-\n-// These functions dispatch to one or all registered wallets\n-\n-namespace {\n-\n-struct CMainSignals {\n-    /** Notifies listeners of updated transaction data (transaction, and optionally the block it is found in. */\n-    boost::signals2::signal<void (const CTransaction &, const CBlock *)> SyncTransaction;\n-    /** Notifies listeners of an erased transaction (currently disabled, requires transaction replacement). */\n-    boost::signals2::signal<void (const uint256 &)> EraseTransaction;\n-    /** Notifies listeners of an updated transaction without new data (for now: a coinbase potentially becoming visible). */\n-    boost::signals2::signal<void (const uint256 &)> UpdatedTransaction;\n-    /** Notifies listeners of a new active block chain. */\n-    boost::signals2::signal<void (const CBlockLocator &)> SetBestChain;\n-    /** Notifies listeners about an inventory item being seen on the network. */\n-    boost::signals2::signal<void (const uint256 &)> Inventory;\n-    /** Tells listeners to broadcast their data. */\n-    boost::signals2::signal<void ()> Broadcast;\n-    /** Notifies listeners of a block validation result */\n-    boost::signals2::signal<void (const CBlock&, const CValidationState&)> BlockChecked;\n-} g_signals;\n-\n-} // anon namespace\n-\n-void RegisterValidationInterface(CValidationInterface* pwalletIn) {\n-    g_signals.SyncTransaction.connect(boost::bind(&CValidationInterface::SyncTransaction, pwalletIn, _1, _2));\n-    g_signals.EraseTransaction.connect(boost::bind(&CValidationInterface::EraseFromWallet, pwalletIn, _1));\n-    g_signals.UpdatedTransaction.connect(boost::bind(&CValidationInterface::UpdatedTransaction, pwalletIn, _1));\n-    g_signals.SetBestChain.connect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n-    g_signals.Inventory.connect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n-    g_signals.Broadcast.connect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn));\n-    g_signals.BlockChecked.connect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, _1, _2));\n-}\n-\n-void UnregisterValidationInterface(CValidationInterface* pwalletIn) {\n-    g_signals.BlockChecked.disconnect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, _1, _2));\n-    g_signals.Broadcast.disconnect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn));\n-    g_signals.Inventory.disconnect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n-    g_signals.SetBestChain.disconnect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n-    g_signals.UpdatedTransaction.disconnect(boost::bind(&CValidationInterface::UpdatedTransaction, pwalletIn, _1));\n-    g_signals.EraseTransaction.disconnect(boost::bind(&CValidationInterface::EraseFromWallet, pwalletIn, _1));\n-    g_signals.SyncTransaction.disconnect(boost::bind(&CValidationInterface::SyncTransaction, pwalletIn, _1, _2));\n-}\n-\n-void UnregisterAllValidationInterfaces() {\n-    g_signals.BlockChecked.disconnect_all_slots();\n-    g_signals.Broadcast.disconnect_all_slots();\n-    g_signals.Inventory.disconnect_all_slots();\n-    g_signals.SetBestChain.disconnect_all_slots();\n-    g_signals.UpdatedTransaction.disconnect_all_slots();\n-    g_signals.EraseTransaction.disconnect_all_slots();\n-    g_signals.SyncTransaction.disconnect_all_slots();\n-}\n-\n-void SyncWithWallets(const CTransaction &tx, const CBlock *pblock) {\n-    g_signals.SyncTransaction(tx, pblock);\n-}\n-\n //////////////////////////////////////////////////////////////////////////////\n //\n // Registration of network node signals.\n@@ -1897,7 +1836,7 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n \n     // Watch for changes to the previous coinbase transaction.\n     static uint256 hashPrevBestCoinBase;\n-    g_signals.UpdatedTransaction(hashPrevBestCoinBase);\n+    GetMainSignals().UpdatedTransaction(hashPrevBestCoinBase);\n     hashPrevBestCoinBase = block.vtx[0].GetHash();\n \n     int64_t nTime4 = GetTimeMicros(); nTimeCallbacks += nTime4 - nTime3;\n@@ -1956,7 +1895,7 @@ bool static FlushStateToDisk(CValidationState &state, FlushStateMode mode) {\n             return state.Abort(\"Failed to write to coin database\");\n         // Update best block in wallet (so we can detect restored wallets).\n         if (mode != FLUSH_STATE_IF_NEEDED) {\n-            g_signals.SetBestChain(chainActive.GetLocator());\n+            GetMainSignals().SetBestChain(chainActive.GetLocator());\n         }\n         nLastWrite = GetTimeMicros();\n     }\n@@ -2080,7 +2019,7 @@ bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew, CBlock *\n         CCoinsViewCache view(pcoinsTip);\n         CInv inv(MSG_BLOCK, pindexNew->GetBlockHash());\n         bool rv = ConnectBlock(*pblock, state, pindexNew, view);\n-        g_signals.BlockChecked(*pblock, state);\n+        GetMainSignals().BlockChecked(*pblock, state);\n         if (!rv) {\n             if (state.IsInvalid())\n                 InvalidBlockFound(pindexNew, state);\n@@ -3471,7 +3410,7 @@ void static ProcessGetData(CNode* pfrom)\n             }\n \n             // Track requests for our stuff.\n-            g_signals.Inventory(inv.hash);\n+            GetMainSignals().Inventory(inv.hash);\n \n             if (inv.type == MSG_BLOCK || inv.type == MSG_FILTERED_BLOCK)\n                 break;\n@@ -3765,7 +3704,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             }\n \n             // Track requests for our stuff\n-            g_signals.Inventory(inv.hash);\n+            GetMainSignals().Inventory(inv.hash);\n \n             if (pfrom->nSendSize > (SendBufferSize() * 2)) {\n                 Misbehaving(pfrom->GetId(), 50);\n@@ -4536,7 +4475,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         // transactions become unconfirmed and spams other nodes.\n         if (!fReindex && !fImporting && !IsInitialBlockDownload())\n         {\n-            g_signals.Broadcast();\n+            GetMainSignals().Broadcast();\n         }\n \n         //"
      },
      {
        "sha": "b0bab6f7bf54bdafec8e6d6e5887e03769dba65f",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 25,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26c16d9de9874ad2f5fe28377b838a19a558639d/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26c16d9de9874ad2f5fe28377b838a19a558639d/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=26c16d9de9874ad2f5fe28377b838a19a558639d",
        "patch": "@@ -133,15 +133,6 @@ extern CBlockIndex *pindexBestHeader;\n /** Minimum disk space required - used in CheckDiskSpace() */\n static const uint64_t nMinDiskSpace = 52428800;\n \n-/** Register a wallet to receive updates from core */\n-void RegisterValidationInterface(CValidationInterface* pwalletIn);\n-/** Unregister a wallet from core */\n-void UnregisterValidationInterface(CValidationInterface* pwalletIn);\n-/** Unregister all wallets from core */\n-void UnregisterAllValidationInterfaces();\n-/** Push an updated transaction to all registered wallets */\n-void SyncWithWallets(const CTransaction& tx, const CBlock* pblock = NULL);\n-\n /** Register with a network node to receive its signals */\n void RegisterNodeSignals(CNodeSignals& nodeSignals);\n /** Unregister a network node */\n@@ -152,7 +143,7 @@ void UnregisterNodeSignals(CNodeSignals& nodeSignals);\n  * block is made active. Note that it does not, however, guarantee that the\n  * specific block passed to it has been checked for validity!\n  * \n- * @param[out]  state   This may be set to an Error state if any error occurred processing it, including during validation/connection/etc of otherwise unrelated blocks during reorganisation; or it may be set to an Invalid state if pblock is itself invalid (but this is not guaranteed even when the block is checked). If you want to *possibly* get feedback on whether pblock is valid, you must also install a CValidationInterface - this will have its BlockChecked method called whenever *any* block completes validation.\n+ * @param[out]  state   This may be set to an Error state if any error occurred processing it, including during validation/connection/etc of otherwise unrelated blocks during reorganisation; or it may be set to an Invalid state if pblock is itself invalid (but this is not guaranteed even when the block is checked). If you want to *possibly* get feedback on whether pblock is valid, you must also install a CValidationInterface (see validationinterface.h) - this will have its BlockChecked method called whenever *any* block completes validation.\n  * @param[in]   pfrom   The node which we are receiving the block from; it is added to mapBlockSource and may be penalised if the block is invalid.\n  * @param[in]   pblock  The block we want to process.\n  * @param[out]  dbp     If pblock is stored to disk (or already there), this will be set to its location.\n@@ -512,19 +503,4 @@ extern CCoinsViewCache *pcoinsTip;\n /** Global variable that points to the active block tree (protected by cs_main) */\n extern CBlockTreeDB *pblocktree;\n \n-\n-class CValidationInterface {\n-protected:\n-    virtual void SyncTransaction(const CTransaction &tx, const CBlock *pblock) {};\n-    virtual void EraseFromWallet(const uint256 &hash) {};\n-    virtual void SetBestChain(const CBlockLocator &locator) {};\n-    virtual void UpdatedTransaction(const uint256 &hash) {};\n-    virtual void Inventory(const uint256 &hash) {};\n-    virtual void ResendWalletTransactions() {};\n-    virtual void BlockChecked(const CBlock&, const CValidationState&) {};\n-    friend void ::RegisterValidationInterface(CValidationInterface*);\n-    friend void ::UnregisterValidationInterface(CValidationInterface*);\n-    friend void ::UnregisterAllValidationInterfaces();\n-};\n-\n #endif // BITCOIN_MAIN_H"
      },
      {
        "sha": "ae4cd3c592a87a864ac59a9986ba3d1fcb54f2a6",
        "filename": "src/validationinterface.cpp",
        "status": "added",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26c16d9de9874ad2f5fe28377b838a19a558639d/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26c16d9de9874ad2f5fe28377b838a19a558639d/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=26c16d9de9874ad2f5fe28377b838a19a558639d",
        "patch": "@@ -0,0 +1,47 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"validationinterface.h\"\n+\n+static CMainSignals g_signals;\n+\n+CMainSignals& GetMainSignals()\n+{\n+    return g_signals;\n+}\n+\n+void RegisterValidationInterface(CValidationInterface* pwalletIn) {\n+    g_signals.SyncTransaction.connect(boost::bind(&CValidationInterface::SyncTransaction, pwalletIn, _1, _2));\n+    g_signals.EraseTransaction.connect(boost::bind(&CValidationInterface::EraseFromWallet, pwalletIn, _1));\n+    g_signals.UpdatedTransaction.connect(boost::bind(&CValidationInterface::UpdatedTransaction, pwalletIn, _1));\n+    g_signals.SetBestChain.connect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n+    g_signals.Inventory.connect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n+    g_signals.Broadcast.connect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn));\n+    g_signals.BlockChecked.connect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, _1, _2));\n+}\n+\n+void UnregisterValidationInterface(CValidationInterface* pwalletIn) {\n+    g_signals.BlockChecked.disconnect(boost::bind(&CValidationInterface::BlockChecked, pwalletIn, _1, _2));\n+    g_signals.Broadcast.disconnect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn));\n+    g_signals.Inventory.disconnect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n+    g_signals.SetBestChain.disconnect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n+    g_signals.UpdatedTransaction.disconnect(boost::bind(&CValidationInterface::UpdatedTransaction, pwalletIn, _1));\n+    g_signals.EraseTransaction.disconnect(boost::bind(&CValidationInterface::EraseFromWallet, pwalletIn, _1));\n+    g_signals.SyncTransaction.disconnect(boost::bind(&CValidationInterface::SyncTransaction, pwalletIn, _1, _2));\n+}\n+\n+void UnregisterAllValidationInterfaces() {\n+    g_signals.BlockChecked.disconnect_all_slots();\n+    g_signals.Broadcast.disconnect_all_slots();\n+    g_signals.Inventory.disconnect_all_slots();\n+    g_signals.SetBestChain.disconnect_all_slots();\n+    g_signals.UpdatedTransaction.disconnect_all_slots();\n+    g_signals.EraseTransaction.disconnect_all_slots();\n+    g_signals.SyncTransaction.disconnect_all_slots();\n+}\n+\n+void SyncWithWallets(const CTransaction &tx, const CBlock *pblock) {\n+    g_signals.SyncTransaction(tx, pblock);\n+}"
      },
      {
        "sha": "b21b6e578259c38f3b0cb5da88b7a0a0dff949ba",
        "filename": "src/validationinterface.h",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26c16d9de9874ad2f5fe28377b838a19a558639d/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26c16d9de9874ad2f5fe28377b838a19a558639d/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=26c16d9de9874ad2f5fe28377b838a19a558639d",
        "patch": "@@ -0,0 +1,62 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_VALIDATIONINTERFACE_H\n+#define BITCOIN_VALIDATIONINTERFACE_H\n+\n+#include <boost/signals2/signal.hpp>\n+\n+class CBlock;\n+class CBlockLocator;\n+class CTransaction;\n+class CValidationInterface;\n+class CValidationState;\n+class uint256;\n+\n+// These functions dispatch to one or all registered wallets\n+\n+/** Register a wallet to receive updates from core */\n+void RegisterValidationInterface(CValidationInterface* pwalletIn);\n+/** Unregister a wallet from core */\n+void UnregisterValidationInterface(CValidationInterface* pwalletIn);\n+/** Unregister all wallets from core */\n+void UnregisterAllValidationInterfaces();\n+/** Push an updated transaction to all registered wallets */\n+void SyncWithWallets(const CTransaction& tx, const CBlock* pblock = NULL);\n+\n+class CValidationInterface {\n+protected:\n+    virtual void SyncTransaction(const CTransaction &tx, const CBlock *pblock) {};\n+    virtual void EraseFromWallet(const uint256 &hash) {};\n+    virtual void SetBestChain(const CBlockLocator &locator) {};\n+    virtual void UpdatedTransaction(const uint256 &hash) {};\n+    virtual void Inventory(const uint256 &hash) {};\n+    virtual void ResendWalletTransactions() {};\n+    virtual void BlockChecked(const CBlock&, const CValidationState&) {};\n+    friend void ::RegisterValidationInterface(CValidationInterface*);\n+    friend void ::UnregisterValidationInterface(CValidationInterface*);\n+    friend void ::UnregisterAllValidationInterfaces();\n+};\n+\n+struct CMainSignals {\n+    /** Notifies listeners of updated transaction data (transaction, and optionally the block it is found in. */\n+    boost::signals2::signal<void (const CTransaction &, const CBlock *)> SyncTransaction;\n+    /** Notifies listeners of an erased transaction (currently disabled, requires transaction replacement). */\n+    boost::signals2::signal<void (const uint256 &)> EraseTransaction;\n+    /** Notifies listeners of an updated transaction without new data (for now: a coinbase potentially becoming visible). */\n+    boost::signals2::signal<void (const uint256 &)> UpdatedTransaction;\n+    /** Notifies listeners of a new active block chain. */\n+    boost::signals2::signal<void (const CBlockLocator &)> SetBestChain;\n+    /** Notifies listeners about an inventory item being seen on the network. */\n+    boost::signals2::signal<void (const uint256 &)> Inventory;\n+    /** Tells listeners to broadcast their data. */\n+    boost::signals2::signal<void ()> Broadcast;\n+    /** Notifies listeners of a block validation result */\n+    boost::signals2::signal<void (const CBlock&, const CValidationState&)> BlockChecked;\n+};\n+\n+CMainSignals& GetMainSignals();\n+\n+#endif // BITCOIN_VALIDATIONINTERFACE_H"
      },
      {
        "sha": "30104449784e7ba228bc22e05eaaa38c536197b9",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26c16d9de9874ad2f5fe28377b838a19a558639d/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26c16d9de9874ad2f5fe28377b838a19a558639d/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=26c16d9de9874ad2f5fe28377b838a19a558639d",
        "patch": "@@ -7,12 +7,13 @@\n #define BITCOIN_WALLET_H\n \n #include \"amount.h\"\n-#include \"primitives/block.h\"\n-#include \"primitives/transaction.h\"\n #include \"key.h\"\n #include \"keystore.h\"\n #include \"main.h\"\n+#include \"primitives/block.h\"\n+#include \"primitives/transaction.h\"\n #include \"ui_interface.h\"\n+#include \"validationinterface.h\"\n #include \"wallet/crypter.h\"\n #include \"wallet/wallet_ismine.h\"\n #include \"wallet/walletdb.h\""
      }
    ]
  },
  {
    "sha": "eca0b1ea62b2625d9df8daecacde96edeb486d65",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplY2EwYjFlYTYyYjI2MjVkOWRmOGRhZWNhY2RlOTZlZGViNDg2ZDY1",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-02-04T22:19:29Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-03-24T16:21:45Z"
      },
      "message": "Includes: MOVEONLY: move more method definitions out of wallet.h",
      "tree": {
        "sha": "e19de635aa27077df3b0e665b95387bbcb4b710a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e19de635aa27077df3b0e665b95387bbcb4b710a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eca0b1ea62b2625d9df8daecacde96edeb486d65",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eca0b1ea62b2625d9df8daecacde96edeb486d65",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eca0b1ea62b2625d9df8daecacde96edeb486d65",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eca0b1ea62b2625d9df8daecacde96edeb486d65/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "26c16d9de9874ad2f5fe28377b838a19a558639d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26c16d9de9874ad2f5fe28377b838a19a558639d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26c16d9de9874ad2f5fe28377b838a19a558639d"
      }
    ],
    "stats": {
      "total": 136,
      "additions": 76,
      "deletions": 60
    },
    "files": [
      {
        "sha": "cc03d5632e0fbba9bd6dc33fe9d413975473d46c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eca0b1ea62b2625d9df8daecacde96edeb486d65/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eca0b1ea62b2625d9df8daecacde96edeb486d65/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=eca0b1ea62b2625d9df8daecacde96edeb486d65",
        "patch": "@@ -817,6 +817,18 @@ CAmount CWallet::GetDebit(const CTxIn &txin, const isminefilter& filter) const\n     return 0;\n }\n \n+isminetype CWallet::IsMine(const CTxOut& txout) const\n+{\n+    return ::IsMine(*this, txout.scriptPubKey);\n+}\n+\n+CAmount CWallet::GetCredit(const CTxOut& txout, const isminefilter& filter) const\n+{\n+    if (!MoneyRange(txout.nValue))\n+        throw std::runtime_error(\"CWallet::GetCredit(): value out of range\");\n+    return ((IsMine(txout) & filter) ? txout.nValue : 0);\n+}\n+\n bool CWallet::IsChange(const CTxOut& txout) const\n {\n     // TODO: fix handling of 'change' outputs. The assumption is that any\n@@ -839,6 +851,62 @@ bool CWallet::IsChange(const CTxOut& txout) const\n     return false;\n }\n \n+CAmount CWallet::GetChange(const CTxOut& txout) const\n+{\n+    if (!MoneyRange(txout.nValue))\n+        throw std::runtime_error(\"CWallet::GetChange(): value out of range\");\n+    return (IsChange(txout) ? txout.nValue : 0);\n+}\n+\n+bool CWallet::IsMine(const CTransaction& tx) const\n+{\n+    BOOST_FOREACH(const CTxOut& txout, tx.vout)\n+        if (IsMine(txout))\n+            return true;\n+    return false;\n+}\n+\n+bool CWallet::IsFromMe(const CTransaction& tx) const\n+{\n+    return (GetDebit(tx, ISMINE_ALL) > 0);\n+}\n+\n+CAmount CWallet::GetDebit(const CTransaction& tx, const isminefilter& filter) const\n+{\n+    CAmount nDebit = 0;\n+    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n+    {\n+        nDebit += GetDebit(txin, filter);\n+        if (!MoneyRange(nDebit))\n+            throw std::runtime_error(\"CWallet::GetDebit(): value out of range\");\n+    }\n+    return nDebit;\n+}\n+\n+CAmount CWallet::GetCredit(const CTransaction& tx, const isminefilter& filter) const\n+{\n+    CAmount nCredit = 0;\n+    BOOST_FOREACH(const CTxOut& txout, tx.vout)\n+    {\n+        nCredit += GetCredit(txout, filter);\n+        if (!MoneyRange(nCredit))\n+            throw std::runtime_error(\"CWallet::GetCredit(): value out of range\");\n+    }\n+    return nCredit;\n+}\n+\n+CAmount CWallet::GetChange(const CTransaction& tx) const\n+{\n+    CAmount nChange = 0;\n+    BOOST_FOREACH(const CTxOut& txout, tx.vout)\n+    {\n+        nChange += GetChange(txout);\n+        if (!MoneyRange(nChange))\n+            throw std::runtime_error(\"CWallet::GetChange(): value out of range\");\n+    }\n+    return nChange;\n+}\n+\n int64_t CWalletTx::GetTxTime() const\n {\n     int64_t n = nTimeSmart;"
      },
      {
        "sha": "9abc73f9ce1d2946b13ae6b99a21fc95450ae942",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 8,
        "deletions": 60,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eca0b1ea62b2625d9df8daecacde96edeb486d65/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eca0b1ea62b2625d9df8daecacde96edeb486d65/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=eca0b1ea62b2625d9df8daecacde96edeb486d65",
        "patch": "@@ -641,68 +641,16 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     isminetype IsMine(const CTxIn& txin) const;\n     CAmount GetDebit(const CTxIn& txin, const isminefilter& filter) const;\n-    isminetype IsMine(const CTxOut& txout) const\n-    {\n-        return ::IsMine(*this, txout.scriptPubKey);\n-    }\n-    CAmount GetCredit(const CTxOut& txout, const isminefilter& filter) const\n-    {\n-        if (!MoneyRange(txout.nValue))\n-            throw std::runtime_error(\"CWallet::GetCredit(): value out of range\");\n-        return ((IsMine(txout) & filter) ? txout.nValue : 0);\n-    }\n+    isminetype IsMine(const CTxOut& txout) const;\n+    CAmount GetCredit(const CTxOut& txout, const isminefilter& filter) const;\n     bool IsChange(const CTxOut& txout) const;\n-    CAmount GetChange(const CTxOut& txout) const\n-    {\n-        if (!MoneyRange(txout.nValue))\n-            throw std::runtime_error(\"CWallet::GetChange(): value out of range\");\n-        return (IsChange(txout) ? txout.nValue : 0);\n-    }\n-    bool IsMine(const CTransaction& tx) const\n-    {\n-        BOOST_FOREACH(const CTxOut& txout, tx.vout)\n-            if (IsMine(txout))\n-                return true;\n-        return false;\n-    }\n+    CAmount GetChange(const CTxOut& txout) const;\n+    bool IsMine(const CTransaction& tx) const;\n     /** should probably be renamed to IsRelevantToMe */\n-    bool IsFromMe(const CTransaction& tx) const\n-    {\n-        return (GetDebit(tx, ISMINE_ALL) > 0);\n-    }\n-    CAmount GetDebit(const CTransaction& tx, const isminefilter& filter) const\n-    {\n-        CAmount nDebit = 0;\n-        BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-        {\n-            nDebit += GetDebit(txin, filter);\n-            if (!MoneyRange(nDebit))\n-                throw std::runtime_error(\"CWallet::GetDebit(): value out of range\");\n-        }\n-        return nDebit;\n-    }\n-    CAmount GetCredit(const CTransaction& tx, const isminefilter& filter) const\n-    {\n-        CAmount nCredit = 0;\n-        BOOST_FOREACH(const CTxOut& txout, tx.vout)\n-        {\n-            nCredit += GetCredit(txout, filter);\n-            if (!MoneyRange(nCredit))\n-                throw std::runtime_error(\"CWallet::GetCredit(): value out of range\");\n-        }\n-        return nCredit;\n-    }\n-    CAmount GetChange(const CTransaction& tx) const\n-    {\n-        CAmount nChange = 0;\n-        BOOST_FOREACH(const CTxOut& txout, tx.vout)\n-        {\n-            nChange += GetChange(txout);\n-            if (!MoneyRange(nChange))\n-                throw std::runtime_error(\"CWallet::GetChange(): value out of range\");\n-        }\n-        return nChange;\n-    }\n+    bool IsFromMe(const CTransaction& tx) const;\n+    CAmount GetDebit(const CTransaction& tx, const isminefilter& filter) const;\n+    CAmount GetCredit(const CTransaction& tx, const isminefilter& filter) const;\n+    CAmount GetChange(const CTransaction& tx) const;\n     void SetBestChain(const CBlockLocator& loc);\n \n     DBErrors LoadWallet(bool& fFirstRunRet);"
      }
    ]
  },
  {
    "sha": "8a893c949bf6b011c8ae1645888576bf236db79c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YTg5M2M5NDliZjZiMDExYzhhZTE2NDU4ODg1NzZiZjIzNmRiNzlj",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-02-05T00:21:11Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-03-24T16:23:32Z"
      },
      "message": "Includes: Do not include main.h from any other header",
      "tree": {
        "sha": "f8cc7e9b3268bea6b3333a9bc9f3a3f48eb87fbb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8cc7e9b3268bea6b3333a9bc9f3a3f48eb87fbb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a893c949bf6b011c8ae1645888576bf236db79c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a893c949bf6b011c8ae1645888576bf236db79c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8a893c949bf6b011c8ae1645888576bf236db79c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a893c949bf6b011c8ae1645888576bf236db79c/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eca0b1ea62b2625d9df8daecacde96edeb486d65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eca0b1ea62b2625d9df8daecacde96edeb486d65",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eca0b1ea62b2625d9df8daecacde96edeb486d65"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 22,
      "deletions": 4
    },
    "files": [
      {
        "sha": "8e20836c65459ffe4eb46ff58eefdaaa83a844d5",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a893c949bf6b011c8ae1645888576bf236db79c/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a893c949bf6b011c8ae1645888576bf236db79c/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=8a893c949bf6b011c8ae1645888576bf236db79c",
        "patch": "@@ -10,6 +10,8 @@\n #include \"base58.h\"\n #include \"wallet/wallet.h\"\n \n+#include <boost/foreach.hpp>\n+\n #include <QFont>\n #include <QDebug>\n "
      },
      {
        "sha": "ad489de343f6e0efdbd9ae8ac777581b046f7b60",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a893c949bf6b011c8ae1645888576bf236db79c/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a893c949bf6b011c8ae1645888576bf236db79c/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=8a893c949bf6b011c8ae1645888576bf236db79c",
        "patch": "@@ -10,6 +10,7 @@\n \n #include \"base58.h\"\n #include \"chainparams.h\"\n+#include \"main.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n #include \"wallet/wallet.h\""
      },
      {
        "sha": "774667d4ac69e362be7d4e6b7acf1eb61262619e",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a893c949bf6b011c8ae1645888576bf236db79c/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a893c949bf6b011c8ae1645888576bf236db79c/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=8a893c949bf6b011c8ae1645888576bf236db79c",
        "patch": "@@ -17,6 +17,7 @@\n \n #include \"base58.h\"\n #include \"coincontrol.h\"\n+#include \"main.h\"\n #include \"ui_interface.h\"\n #include \"wallet/wallet.h\"\n "
      },
      {
        "sha": "ce166f367213737e97a6dea36fc7d3d4b9a5d4b6",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a893c949bf6b011c8ae1645888576bf236db79c/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a893c949bf6b011c8ae1645888576bf236db79c/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=8a893c949bf6b011c8ae1645888576bf236db79c",
        "patch": "@@ -12,6 +12,7 @@\n \n #include \"base58.h\"\n #include \"init.h\"\n+#include \"main.h\" // For strMessageMagic\n #include \"wallet/wallet.h\"\n \n #include <string>"
      },
      {
        "sha": "9db5ad0fd46169f6be6c0558f47acda017d8e5ce",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a893c949bf6b011c8ae1645888576bf236db79c/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a893c949bf6b011c8ae1645888576bf236db79c/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=8a893c949bf6b011c8ae1645888576bf236db79c",
        "patch": "@@ -5,11 +5,14 @@\n #include \"transactionrecord.h\"\n \n #include \"base58.h\"\n+#include \"main.h\"\n #include \"timedata.h\"\n #include \"wallet/wallet.h\"\n \n #include <stdint.h>\n \n+#include <boost/foreach.hpp>\n+\n /* Return positive answer if transaction should be shown in list.\n  */\n bool TransactionRecord::showTransaction(const CWalletTx &wtx)"
      },
      {
        "sha": "4d5e92cbd40a6c97c483e46392c7ebf5d1d6dfff",
        "filename": "src/test/rpc_wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a893c949bf6b011c8ae1645888576bf236db79c/src/test/rpc_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a893c949bf6b011c8ae1645888576bf236db79c/src/test/rpc_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_wallet_tests.cpp?ref=8a893c949bf6b011c8ae1645888576bf236db79c",
        "patch": "@@ -6,6 +6,7 @@\n #include \"rpcclient.h\"\n \n #include \"base58.h\"\n+#include \"main.h\"\n #include \"wallet/wallet.h\"\n \n #include \"test/test_bitcoin.h\""
      },
      {
        "sha": "f32815028912c9fbcf2119168285952e99bd3101",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a893c949bf6b011c8ae1645888576bf236db79c/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a893c949bf6b011c8ae1645888576bf236db79c/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=8a893c949bf6b011c8ae1645888576bf236db79c",
        "patch": "@@ -5,6 +5,7 @@\n \n #include \"txdb.h\"\n \n+#include \"main.h\"\n #include \"pow.h\"\n #include \"uint256.h\"\n "
      },
      {
        "sha": "1ce93969d8414fb442ff428179dbd70580da7dbe",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a893c949bf6b011c8ae1645888576bf236db79c/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a893c949bf6b011c8ae1645888576bf236db79c/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=8a893c949bf6b011c8ae1645888576bf236db79c",
        "patch": "@@ -6,15 +6,17 @@\n #ifndef BITCOIN_TXDB_H\n #define BITCOIN_TXDB_H\n \n+#include \"coins.h\"\n #include \"leveldbwrapper.h\"\n-#include \"main.h\"\n \n #include <map>\n #include <string>\n #include <utility>\n #include <vector>\n \n-class CCoins;\n+class CBlockFileInfo;\n+class CBlockIndex;\n+class CDiskTxPos;\n class uint256;\n \n //! -dbcache default (MiB)"
      },
      {
        "sha": "9318c1b2b150daee7ef893d3998a13b9f17e905b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a893c949bf6b011c8ae1645888576bf236db79c/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a893c949bf6b011c8ae1645888576bf236db79c/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=8a893c949bf6b011c8ae1645888576bf236db79c",
        "patch": "@@ -6,10 +6,11 @@\n #include \"amount.h\"\n #include \"base58.h\"\n #include \"core_io.h\"\n-#include \"rpcserver.h\"\n #include \"init.h\"\n+#include \"main.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n+#include \"rpcserver.h\"\n #include \"timedata.h\"\n #include \"util.h\"\n #include \"utilmoneystr.h\""
      },
      {
        "sha": "09bcda577ed932c5baf248a5b5787349b7191fc0",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a893c949bf6b011c8ae1645888576bf236db79c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a893c949bf6b011c8ae1645888576bf236db79c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=8a893c949bf6b011c8ae1645888576bf236db79c",
        "patch": "@@ -8,6 +8,7 @@\n #include \"base58.h\"\n #include \"checkpoints.h\"\n #include \"coincontrol.h\"\n+#include \"main.h\"\n #include \"net.h\"\n #include \"script/script.h\"\n #include \"script/sign.h\""
      },
      {
        "sha": "4a13f02195fa9b63a37e5304eb179a837217da98",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a893c949bf6b011c8ae1645888576bf236db79c/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a893c949bf6b011c8ae1645888576bf236db79c/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=8a893c949bf6b011c8ae1645888576bf236db79c",
        "patch": "@@ -9,10 +9,11 @@\n #include \"amount.h\"\n #include \"key.h\"\n #include \"keystore.h\"\n-#include \"main.h\"\n #include \"primitives/block.h\"\n #include \"primitives/transaction.h\"\n+#include \"tinyformat.h\"\n #include \"ui_interface.h\"\n+#include \"utilstrencodings.h\"\n #include \"validationinterface.h\"\n #include \"wallet/crypter.h\"\n #include \"wallet/wallet_ismine.h\"\n@@ -49,10 +50,12 @@ static const CAmount nHighTransactionMaxFeeWarning = 100 * nHighTransactionFeeWa\n static const unsigned int MAX_FREE_TRANSACTION_CREATE_SIZE = 1000;\n \n class CAccountingEntry;\n+class CBlockIndex;\n class CCoinControl;\n class COutput;\n class CReserveKey;\n class CScript;\n+class CTxMemPool;\n class CWalletTx;\n \n /** (client) version numbers for particular wallet features */"
      },
      {
        "sha": "de56a2d1afffb7f88b7e114c20f4e44727114782",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a893c949bf6b011c8ae1645888576bf236db79c/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a893c949bf6b011c8ae1645888576bf236db79c/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=8a893c949bf6b011c8ae1645888576bf236db79c",
        "patch": "@@ -6,6 +6,7 @@\n #include \"wallet/walletdb.h\"\n \n #include \"base58.h\"\n+#include \"main.h\"\n #include \"protocol.h\"\n #include \"serialize.h\"\n #include \"sync.h\""
      }
    ]
  }
]