[
  {
    "sha": "891beb0f8a09810b179e39a680b579c2f6516db7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTFiZWIwZjhhMDk4MTBiMTc5ZTM5YTY4MGI1NzljMmY2NTE2ZGI3",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-01-25T10:03:05Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-04-06T04:34:12Z"
      },
      "message": "[test] fundrawtransaction: lock watch-only shared address\n\nself.nodes[0] creates an address which is watch-only-shared with self.nodes[3]. If nodes[0] spends the associated UTXO during any of its sends later, the watchonly test will fail, as nodes[3] now has insufficient funds.\n\nNote that this also adds a new find_vout_for_address function to the test framework.",
      "tree": {
        "sha": "808c26dc4fed68c1964bad194b70436e23626017",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/808c26dc4fed68c1964bad194b70436e23626017"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/891beb0f8a09810b179e39a680b579c2f6516db7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlrG+MQACgkQV692LbM1\nMyIjUA//dys4ARE7d3ZoIgWV9tdL/3tCmmj1exn/PZxr4xnSIE0/OFTdwgSPcDhJ\nRB9hxnIG3e6D+6ZpUP7LnY5ZWyK0ttgofkpRv+Lb5GITF1sZXG988SxN9Muf+r2Y\nwdsbUzfgolM42nmLJEyPklY25tdbo+cUqqgPDQe4w2t2zdc+Jr6uEJSqMpCM1TiY\nN0ry6do6RdE750t4AfuOKsMvAL70VgCzC1T9MpRqkKc7HF/a2TYqEJQ0OK1ZQi3h\nk4PvSfP/0MIqcf7EzKPZB1MV8crJz8Pjb16hkGsKQ4MHOFNkKI4cWHRFGk45wXjI\nQHNo3wQ1OETDlbuESEnLhJEVTWxxpdXB0jJrIZMZ2Y+wAUzVMY1o4dToYwANAGg7\ntanvcTnsoguzApOWX5c5QrqUWKWOR5JDWe+a1Ha5Ano82XXuy9yz96FsmcRQ/fCM\nZutzmNG3lBGY9McN4H497VBOv7GlSK3GyEslL7CRCPLY/ZWrwUa5ddoahjXrFsyw\nsAD3zPu8i9h5xprn7HtW3UXDZmVdEYz7A1wkPvQAGEr4HoR989+tjIATllQQQwDc\nu/+YsCzK6zjl5l1EDizwnT5E9KFf3cQ56WLdJ4LhaBrnqNyT4kfEma8CGYdcdrRA\nAHLfNPcYzIUKDoB6IxnjmHDtce1bj5OduWDUI3ovlU+xsb0bltI=\n=O5oe\n-----END PGP SIGNATURE-----",
        "payload": "tree 808c26dc4fed68c1964bad194b70436e23626017\nparent 6970b30c6f1d2be7947295fe18f2390649b17a4b\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1516874585 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1522989252 +0900\n\n[test] fundrawtransaction: lock watch-only shared address\n\nself.nodes[0] creates an address which is watch-only-shared with self.nodes[3]. If nodes[0] spends the associated UTXO during any of its sends later, the watchonly test will fail, as nodes[3] now has insufficient funds.\n\nNote that this also adds a new find_vout_for_address function to the test framework.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/891beb0f8a09810b179e39a680b579c2f6516db7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/891beb0f8a09810b179e39a680b579c2f6516db7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/891beb0f8a09810b179e39a680b579c2f6516db7/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6970b30c6f1d2be7947295fe18f2390649b17a4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6970b30c6f1d2be7947295fe18f2390649b17a4b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6970b30c6f1d2be7947295fe18f2390649b17a4b"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 30,
      "deletions": 1
    },
    "files": [
      {
        "sha": "38d7fd9252249e11fdc8753e2c455e0cd59ae6ee",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/891beb0f8a09810b179e39a680b579c2f6516db7/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/891beb0f8a09810b179e39a680b579c2f6516db7/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=891beb0f8a09810b179e39a680b579c2f6516db7",
        "patch": "@@ -4,8 +4,18 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the fundrawtransaction RPC.\"\"\"\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n+from test_framework.util import (\n+    assert_equal,\n+    assert_fee_amount,\n+    assert_greater_than,\n+    assert_greater_than_or_equal,\n+    assert_raises_rpc_error,\n+    connect_nodes_bi,\n+    count_bytes,\n+    find_vout_for_address,\n+)\n \n \n def get_unspent(listunspent, amount):\n@@ -57,6 +67,11 @@ def run_test(self):\n         watchonly_amount = Decimal(200)\n         self.nodes[3].importpubkey(watchonly_pubkey, \"\", True)\n         watchonly_txid = self.nodes[0].sendtoaddress(watchonly_address, watchonly_amount)\n+\n+        # Lock UTXO so nodes[0] doesn't accidentally spend it\n+        watchonly_vout = find_vout_for_address(self.nodes[0], watchonly_txid, watchonly_address)\n+        self.nodes[0].lockunspent(False, [{\"txid\": watchonly_txid, \"vout\": watchonly_vout}])\n+\n         self.nodes[0].sendtoaddress(self.nodes[3].getnewaddress(), watchonly_amount / 10)\n \n         self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 1.5)\n@@ -472,6 +487,9 @@ def run_test(self):\n         connect_nodes_bi(self.nodes,1,2)\n         connect_nodes_bi(self.nodes,0,2)\n         connect_nodes_bi(self.nodes,0,3)\n+        # Again lock the watchonly UTXO or nodes[0] may spend it, because\n+        # lockunspent is memory-only and thus lost on restart\n+        self.nodes[0].lockunspent(False, [{\"txid\": watchonly_txid, \"vout\": watchonly_vout}])\n         self.sync_all()\n \n         # drain the keypool"
      },
      {
        "sha": "1320c8f029570dba46860d0c9f4235c49f85e6e0",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/891beb0f8a09810b179e39a680b579c2f6516db7/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/891beb0f8a09810b179e39a680b579c2f6516db7/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=891beb0f8a09810b179e39a680b579c2f6516db7",
        "patch": "@@ -569,3 +569,14 @@ def mine_large_block(node, utxos=None):\n     fee = 100 * node.getnetworkinfo()[\"relayfee\"]\n     create_lots_of_big_transactions(node, txouts, utxos, num, fee=fee)\n     node.generate(1)\n+\n+def find_vout_for_address(node, txid, addr):\n+    \"\"\"\n+    Locate the vout index of the given transaction sending to the\n+    given address. Raises runtime error exception if not found.\n+    \"\"\"\n+    tx = node.getrawtransaction(txid, True)\n+    for i in range(len(tx[\"vout\"])):\n+        if any([addr == a for a in tx[\"vout\"][i][\"scriptPubKey\"][\"addresses\"]]):\n+            return i\n+    raise RuntimeError(\"Vout not found for address: txid=%s, addr=%s\" % (txid, addr))"
      }
    ]
  }
]