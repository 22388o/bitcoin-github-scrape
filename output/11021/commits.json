[
  {
    "sha": "33366768afe21ff85259c0712176604aab56d9ae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzM2Njc2OGFmZTIxZmY4NTI1OWMwNzEyMTc2NjA0YWFiNTZkOWFl",
    "commit": {
      "author": {
        "name": "Akio Nakamura",
        "email": "nakamura@dgtechnologies.co.jp",
        "date": "2017-08-10T07:53:59Z"
      },
      "committer": {
        "name": "Akio Nakamura",
        "email": "nakamura@dgtechnologies.co.jp",
        "date": "2017-08-25T09:32:45Z"
      },
      "message": "Fix getchaintxstats()\n\n1. Calculate nblocks more adaptive.\n   If not specify nblocks-parameter, illegal parameter error\n   will happen when target block height is below blocks for 1 month.\n   To avoid this error, set default nblocks to\n   min(blocks for 1 month, target block's height - 1)\n   And allowing 0 so that this RPC works good even if target block is\n   genesis block or 1st block.\n2. Correct error message.\n   nblocks accepts [0 .. block's height -1] . so fix as following:\n   \"Invalid block count: should be between 0 and the block's height - 1\"\n3. Add check 0-divide.\n   If nTimeDiff = 0 then returns {... \"txrate\":} and\n   bitcoin-cli cannot handle the response.\n   To avoid this error, do not return \"txrate\" if nTimeDiff = 0.\n4. Add following 3 elements to the return object.\n   1) 'window_block_count' : Size of the window in number of blocks.\n   2) 'window_tx_count' : The number of transactions in the window.\n   3) 'window_interval' : The elapsed time in the window.\n   They clarify how 'txrate' is calculated. 2) and 3) are returned\n   only if 'window_block_count' is a positive value.\n5. Improve help text for 'time' as following.\n   'The timestamp for the final block in the window in UNIX format.",
      "tree": {
        "sha": "eefbc66cbe5a273a07d654512d6cfe92b4b5c9b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eefbc66cbe5a273a07d654512d6cfe92b4b5c9b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33366768afe21ff85259c0712176604aab56d9ae",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33366768afe21ff85259c0712176604aab56d9ae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/33366768afe21ff85259c0712176604aab56d9ae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33366768afe21ff85259c0712176604aab56d9ae/comments",
    "author": {
      "login": "AkioNak",
      "id": 24285095,
      "node_id": "MDQ6VXNlcjI0Mjg1MDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24285095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AkioNak",
      "html_url": "https://github.com/AkioNak",
      "followers_url": "https://api.github.com/users/AkioNak/followers",
      "following_url": "https://api.github.com/users/AkioNak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AkioNak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AkioNak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AkioNak/subscriptions",
      "organizations_url": "https://api.github.com/users/AkioNak/orgs",
      "repos_url": "https://api.github.com/users/AkioNak/repos",
      "events_url": "https://api.github.com/users/AkioNak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AkioNak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "AkioNak",
      "id": 24285095,
      "node_id": "MDQ6VXNlcjI0Mjg1MDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24285095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AkioNak",
      "html_url": "https://github.com/AkioNak",
      "followers_url": "https://api.github.com/users/AkioNak/followers",
      "following_url": "https://api.github.com/users/AkioNak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AkioNak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AkioNak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AkioNak/subscriptions",
      "organizations_url": "https://api.github.com/users/AkioNak/orgs",
      "repos_url": "https://api.github.com/users/AkioNak/repos",
      "events_url": "https://api.github.com/users/AkioNak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AkioNak/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2c9f5ecf3fd4d6eacaea730df48681e11adbea16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c9f5ecf3fd4d6eacaea730df48681e11adbea16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2c9f5ecf3fd4d6eacaea730df48681e11adbea16"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 22,
      "deletions": 10
    },
    "files": [
      {
        "sha": "f7fef5ffea3f723956eff8aa8a600206b090d2d3",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 10,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33366768afe21ff85259c0712176604aab56d9ae/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33366768afe21ff85259c0712176604aab56d9ae/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=33366768afe21ff85259c0712176604aab56d9ae",
        "patch": "@@ -1477,9 +1477,12 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n             \"2. \\\"blockhash\\\"  (string, optional) The hash of the block that ends the window.\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"time\\\": xxxxx,        (numeric) The timestamp for the statistics in UNIX format.\\n\"\n-            \"  \\\"txcount\\\": xxxxx,     (numeric) The total number of transactions in the chain up to that point.\\n\"\n-            \"  \\\"txrate\\\": x.xx,       (numeric) The average rate of transactions per second in the window.\\n\"\n+            \"  \\\"time\\\": xxxxx,                (numeric) The timestamp for the final block in the window in UNIX format.\\n\"\n+            \"  \\\"txcount\\\": xxxxx,             (numeric) The total number of transactions in the chain up to that point.\\n\"\n+            \"  \\\"window_block_count\\\": xxxxx,  (numeric) Size of the window in number of blocks.\\n\"\n+            \"  \\\"window_tx_count\\\": xxxxx,     (numeric) The number of transactions in the window. Only returned if \\\"window_block_count\\\" is > 0.\\n\"\n+            \"  \\\"window_interval\\\": xxxxx,     (numeric) The elapsed time in the window in seconds. Only returned if \\\"window_block_count\\\" is > 0.\\n\"\n+            \"  \\\"txrate\\\": x.xx,               (numeric) The average rate of transactions per second in the window. Only returned if \\\"window_interval\\\" is > 0.\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getchaintxstats\", \"\")\n@@ -1489,10 +1492,6 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n     const CBlockIndex* pindex;\n     int blockcount = 30 * 24 * 60 * 60 / Params().GetConsensus().nPowTargetSpacing; // By default: 1 month\n \n-    if (!request.params[0].isNull()) {\n-        blockcount = request.params[0].get_int();\n-    }\n-\n     bool havehash = !request.params[1].isNull();\n     uint256 hash;\n     if (havehash) {\n@@ -1515,8 +1514,14 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n         }\n     }\n \n-    if (blockcount < 1 || blockcount >= pindex->nHeight) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid block count: should be between 1 and the block's height\");\n+    if (request.params[0].isNull()) {\n+        blockcount = std::max(0, std::min(blockcount, pindex->nHeight - 1));\n+    } else {\n+        blockcount = request.params[0].get_int();\n+\n+        if (blockcount < 0 || (blockcount > 0 && blockcount >= pindex->nHeight)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid block count: should be between 0 and the block's height - 1\");\n+        }\n     }\n \n     const CBlockIndex* pindexPast = pindex->GetAncestor(pindex->nHeight - blockcount);\n@@ -1526,7 +1531,14 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n     UniValue ret(UniValue::VOBJ);\n     ret.push_back(Pair(\"time\", (int64_t)pindex->nTime));\n     ret.push_back(Pair(\"txcount\", (int64_t)pindex->nChainTx));\n-    ret.push_back(Pair(\"txrate\", ((double)nTxDiff) / nTimeDiff));\n+    ret.push_back(Pair(\"window_block_count\", blockcount));\n+    if (blockcount > 0) {\n+        ret.push_back(Pair(\"window_tx_count\", nTxDiff));\n+        ret.push_back(Pair(\"window_interval\", nTimeDiff));\n+        if (nTimeDiff > 0) {\n+            ret.push_back(Pair(\"txrate\", ((double)nTxDiff) / nTimeDiff));\n+        }\n+    }\n \n     return ret;\n }"
      }
    ]
  },
  {
    "sha": "07704c1b3768d6c290046c783063644fc7b7d1da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzcwNGMxYjM3NjhkNmMyOTAwNDZjNzgzMDYzNjQ0ZmM3YjdkMWRh",
    "commit": {
      "author": {
        "name": "Akio Nakamura",
        "email": "nakamura@dgtechnologies.co.jp",
        "date": "2017-08-14T07:29:00Z"
      },
      "committer": {
        "name": "Akio Nakamura",
        "email": "nakamura@dgtechnologies.co.jp",
        "date": "2017-08-25T09:32:45Z"
      },
      "message": "Add some tests for getchaintxstats\n\n1. Add a test for no parameters.\n2. Add a test for the block's height = 1.\n3. Add a test for nblocks is out of range.",
      "tree": {
        "sha": "28f6e29ef3d5dcfbd3d63f47896143a849ee8791",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28f6e29ef3d5dcfbd3d63f47896143a849ee8791"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07704c1b3768d6c290046c783063644fc7b7d1da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07704c1b3768d6c290046c783063644fc7b7d1da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/07704c1b3768d6c290046c783063644fc7b7d1da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07704c1b3768d6c290046c783063644fc7b7d1da/comments",
    "author": {
      "login": "AkioNak",
      "id": 24285095,
      "node_id": "MDQ6VXNlcjI0Mjg1MDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24285095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AkioNak",
      "html_url": "https://github.com/AkioNak",
      "followers_url": "https://api.github.com/users/AkioNak/followers",
      "following_url": "https://api.github.com/users/AkioNak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AkioNak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AkioNak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AkioNak/subscriptions",
      "organizations_url": "https://api.github.com/users/AkioNak/orgs",
      "repos_url": "https://api.github.com/users/AkioNak/repos",
      "events_url": "https://api.github.com/users/AkioNak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AkioNak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "AkioNak",
      "id": 24285095,
      "node_id": "MDQ6VXNlcjI0Mjg1MDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24285095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AkioNak",
      "html_url": "https://github.com/AkioNak",
      "followers_url": "https://api.github.com/users/AkioNak/followers",
      "following_url": "https://api.github.com/users/AkioNak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AkioNak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AkioNak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AkioNak/subscriptions",
      "organizations_url": "https://api.github.com/users/AkioNak/orgs",
      "repos_url": "https://api.github.com/users/AkioNak/repos",
      "events_url": "https://api.github.com/users/AkioNak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AkioNak/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33366768afe21ff85259c0712176604aab56d9ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33366768afe21ff85259c0712176604aab56d9ae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33366768afe21ff85259c0712176604aab56d9ae"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "99594d99954dc2dbf4d60a6be47fb13eab4e7736",
        "filename": "test/functional/blockchain.py",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07704c1b3768d6c290046c783063644fc7b7d1da/test/functional/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07704c1b3768d6c290046c783063644fc7b7d1da/test/functional/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/blockchain.py?ref=07704c1b3768d6c290046c783063644fc7b7d1da",
        "patch": "@@ -56,6 +56,28 @@ def _test_getchaintxstats(self):\n         # we have to round because of binary math\n         assert_equal(round(chaintxstats['txrate'] * 600, 10), Decimal(1))\n \n+        b1 = self.nodes[0].getblock(self.nodes[0].getblockhash(1))\n+        b200 = self.nodes[0].getblock(self.nodes[0].getblockhash(200))\n+        time_diff = b200['mediantime'] - b1['mediantime']\n+\n+        chaintxstats = self.nodes[0].getchaintxstats()\n+        assert_equal(chaintxstats['time'], b200['time'])\n+        assert_equal(chaintxstats['txcount'], 201)\n+        assert_equal(chaintxstats['window_block_count'], 199)\n+        assert_equal(chaintxstats['window_tx_count'], 199)\n+        assert_equal(chaintxstats['window_interval'], time_diff)\n+        assert_equal(round(chaintxstats['txrate'] * time_diff, 10), Decimal(199))\n+\n+        chaintxstats = self.nodes[0].getchaintxstats(blockhash=b1['hash'])\n+        assert_equal(chaintxstats['time'], b1['time'])\n+        assert_equal(chaintxstats['txcount'], 2)\n+        assert_equal(chaintxstats['window_block_count'], 0)\n+        assert('window_tx_count' not in chaintxstats)\n+        assert('window_interval' not in chaintxstats)\n+        assert('txrate' not in chaintxstats)\n+\n+        assert_raises_jsonrpc(-8, \"Invalid block count: should be between 0 and the block's height - 1\", self.nodes[0].getchaintxstats, 201)\n+\n     def _test_gettxoutsetinfo(self):\n         node = self.nodes[0]\n         res = node.gettxoutsetinfo()"
      }
    ]
  }
]