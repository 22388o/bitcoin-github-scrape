[
  {
    "sha": "0201cbcd866f1527b3b097823ad522662a4d84ad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjAxY2JjZDg2NmYxNTI3YjNiMDk3ODIzYWQ1MjI2NjJhNGQ4NGFk",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-29T23:37:34Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-02-13T11:07:36Z"
      },
      "message": "Make all tests pass UBSan without using any UBSan suppressions",
      "tree": {
        "sha": "6ea2cb9441c9801a5a3319fb85883a1d81b44853",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ea2cb9441c9801a5a3319fb85883a1d81b44853"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0201cbcd866f1527b3b097823ad522662a4d84ad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0201cbcd866f1527b3b097823ad522662a4d84ad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0201cbcd866f1527b3b097823ad522662a4d84ad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0201cbcd866f1527b3b097823ad522662a4d84ad/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0c20809da85ac708386fa1ca80f7242917f90761",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c20809da85ac708386fa1ca80f7242917f90761",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0c20809da85ac708386fa1ca80f7242917f90761"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 6,
      "deletions": 14
    },
    "files": [
      {
        "sha": "20428a99305c2dcc9495c544f3cd2ed0b031e79d",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0201cbcd866f1527b3b097823ad522662a4d84ad/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0201cbcd866f1527b3b097823ad522662a4d84ad/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=0201cbcd866f1527b3b097823ad522662a4d84ad",
        "patch": "@@ -338,13 +338,11 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n         failBucket.leftMempool = failNum;\n     }\n \n-    LogPrint(BCLog::ESTIMATEFEE, \"FeeEst: %d %s%.0f%% decay %.5f: feerate: %g from (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n+    LogPrint(BCLog::ESTIMATEFEE, \"FeeEst: %d %s%.0f%% decay %.5f: feerate: %g from (%g - %g) %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.1f/(%.1f %d mem %.1f out)\\n\",\n              confTarget, requireGreater ? \">\" : \"<\", 100.0 * successBreakPoint, decay,\n              median, passBucket.start, passBucket.end,\n-             100 * passBucket.withinTarget / (passBucket.totalConfirmed + passBucket.inMempool + passBucket.leftMempool),\n              passBucket.withinTarget, passBucket.totalConfirmed, passBucket.inMempool, passBucket.leftMempool,\n              failBucket.start, failBucket.end,\n-             100 * failBucket.withinTarget / (failBucket.totalConfirmed + failBucket.inMempool + failBucket.leftMempool),\n              failBucket.withinTarget, failBucket.totalConfirmed, failBucket.inMempool, failBucket.leftMempool);\n \n "
      },
      {
        "sha": "45970126c140d2aa14f77446eb2db68dc099dfca",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0201cbcd866f1527b3b097823ad522662a4d84ad/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0201cbcd866f1527b3b097823ad522662a4d84ad/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=0201cbcd866f1527b3b097823ad522662a4d84ad",
        "patch": "@@ -1888,7 +1888,7 @@ static int64_t nTimeConnect = 0;\n static int64_t nTimeIndex = 0;\n static int64_t nTimeCallbacks = 0;\n static int64_t nTimeTotal = 0;\n-static int64_t nBlocksTotal = 0;\n+static int64_t nBlocksTotal = 1;\n \n /** Apply the effects of this block (with given index) on the UTXO set represented by coins.\n  *  Validity checks that depend on the UTXO set are also done; ConnectBlock()"
      },
      {
        "sha": "1d5a73ce7b3fb6029090e7b22b3ce27714c05a29",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0201cbcd866f1527b3b097823ad522662a4d84ad/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0201cbcd866f1527b3b097823ad522662a4d84ad/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0201cbcd866f1527b3b097823ad522662a4d84ad",
        "patch": "@@ -1658,7 +1658,9 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     }\n     double progress_current = progress_begin;\n     while (block_height && !fAbortRescan && !chain().shutdownRequested()) {\n-        m_scanning_progress = (progress_current - progress_begin) / (progress_end - progress_begin);\n+        if (progress_end - progress_begin > 0.0) {\n+            m_scanning_progress = (progress_current - progress_begin) / (progress_end - progress_begin);\n+        }\n         if (*block_height % 100 == 0 && progress_end - progress_begin > 0.0) {\n             ShowProgress(strprintf(\"%s \" + _(\"Rescanning...\").translated, GetDisplayName()), std::max(1, std::min(99, (int)(m_scanning_progress * 100))));\n         }\n@@ -2928,13 +2930,11 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n     // accidental re-use.\n     reservedest.KeepDestination();\n \n-    WalletLogPrintf(\"Fee Calculation: Fee:%d Bytes:%u Needed:%d Tgt:%d (requested %d) Reason:\\\"%s\\\" Decay %.5f: Estimation: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n+    WalletLogPrintf(\"Fee Calculation: Fee:%d Bytes:%u Needed:%d Tgt:%d (requested %d) Reason:\\\"%s\\\" Decay %.5f: Estimation: (%g - %g) %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.1f/(%.1f %d mem %.1f out)\\n\",\n               nFeeRet, nBytes, nFeeNeeded, feeCalc.returnedTarget, feeCalc.desiredTarget, StringForFeeReason(feeCalc.reason), feeCalc.est.decay,\n               feeCalc.est.pass.start, feeCalc.est.pass.end,\n-              100 * feeCalc.est.pass.withinTarget / (feeCalc.est.pass.totalConfirmed + feeCalc.est.pass.inMempool + feeCalc.est.pass.leftMempool),\n               feeCalc.est.pass.withinTarget, feeCalc.est.pass.totalConfirmed, feeCalc.est.pass.inMempool, feeCalc.est.pass.leftMempool,\n               feeCalc.est.fail.start, feeCalc.est.fail.end,\n-              100 * feeCalc.est.fail.withinTarget / (feeCalc.est.fail.totalConfirmed + feeCalc.est.fail.inMempool + feeCalc.est.fail.leftMempool),\n               feeCalc.est.fail.withinTarget, feeCalc.est.fail.totalConfirmed, feeCalc.est.fail.inMempool, feeCalc.est.fail.leftMempool);\n     return true;\n }"
      },
      {
        "sha": "e2f3fec85163e389b672ce0fa7b0e16b1d41513e",
        "filename": "test/sanitizer_suppressions/ubsan",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0201cbcd866f1527b3b097823ad522662a4d84ad/test/sanitizer_suppressions/ubsan",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0201cbcd866f1527b3b097823ad522662a4d84ad/test/sanitizer_suppressions/ubsan",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/sanitizer_suppressions/ubsan?ref=0201cbcd866f1527b3b097823ad522662a4d84ad",
        "patch": "@@ -1,9 +1,3 @@\n-# -fsanitize=undefined suppressions\n-# =================================\n-float-divide-by-zero:policy/fees.cpp\n-float-divide-by-zero:validation.cpp\n-float-divide-by-zero:wallet/wallet.cpp\n-\n # -fsanitize=integer suppressions\n # ===============================\n # Unsigned integer overflow occurs when the result of an unsigned integer"
      }
    ]
  }
]