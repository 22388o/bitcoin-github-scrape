[
  {
    "sha": "7f912f2161e1e46461e08968a4160687b3213a63",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjkxMmYyMTYxZTFlNDY0NjFlMDg5NjhhNDE2MDY4N2IzMjEzYTYz",
    "commit": {
      "author": {
        "name": "Janosch Gr\u00e4f",
        "email": "janosch.graef@gmx.net",
        "date": "2013-07-04T09:09:37Z"
      },
      "committer": {
        "name": "Janosch Gr\u00e4f",
        "email": "janosch.graef@gmx.net",
        "date": "2013-07-04T09:09:37Z"
      },
      "message": "notifications for new transactions",
      "tree": {
        "sha": "c00f55a8cbb4063ee9ef4cd54c3643607754e48f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c00f55a8cbb4063ee9ef4cd54c3643607754e48f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f912f2161e1e46461e08968a4160687b3213a63",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f912f2161e1e46461e08968a4160687b3213a63",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f912f2161e1e46461e08968a4160687b3213a63",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f912f2161e1e46461e08968a4160687b3213a63/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "6e802ac85d2732ab3dd83e299422d544476de6a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e802ac85d2732ab3dd83e299422d544476de6a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e802ac85d2732ab3dd83e299422d544476de6a1"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b33714ffda0c57950e728f1851a3d7958762efa0",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -226,6 +226,7 @@ std::string HelpMessage()\n     strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n     strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n     strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received (%s in cmd is replaced by message)\") + \"\\n\";\n+    strUsage += \"  -txnotify=<cmd>        \" + _(\"Execute command when a (unconfirmed) transaction is received (%s in cmd is replaced by TxID)\") + \"\\n\";\n     strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n     strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n     strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";"
      },
      {
        "sha": "0b92a16aafc01286776853b1ac208ad1a9f258d4",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -939,6 +939,15 @@ bool CTxMemPool::accept(CValidationState &state, CTransaction &tx, bool fLimitFr\n     printf(\"CTxMemPool::accept() : accepted %s (poolsz %\"PRIszu\")\\n\",\n            hash.ToString().c_str(),\n            mapTx.size());\n+    \n+    // send notification\n+    std::string strCmd = GetArg(\"-txnotify\", \"\");\n+    if (!strCmd.empty())\n+    {\n+        boost::replace_all(strCmd, \"%s\", hash.ToString());\n+        boost::thread t(runCommand, strCmd); // thread runs free\n+    }\n+    \n     return true;\n }\n "
      }
    ]
  },
  {
    "sha": "02082bb9029feefe1d289efcd2184f7752445e84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMjA4MmJiOTAyOWZlZWZlMWQyODllZmNkMjE4NGY3NzUyNDQ1ZTg0",
    "commit": {
      "author": {
        "name": "Janosch Gr\u00e4f",
        "email": "graef@st.cs.uni-saarland.de",
        "date": "2014-11-20T03:04:43Z"
      },
      "committer": {
        "name": "Janosch Gr\u00e4f",
        "email": "graef@st.cs.uni-saarland.de",
        "date": "2014-11-20T03:04:43Z"
      },
      "message": "merged upstream changes",
      "tree": {
        "sha": "570cc1975177c486ce381a22e6944127679e612c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/570cc1975177c486ce381a22e6944127679e612c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02082bb9029feefe1d289efcd2184f7752445e84",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02082bb9029feefe1d289efcd2184f7752445e84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/02082bb9029feefe1d289efcd2184f7752445e84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02082bb9029feefe1d289efcd2184f7752445e84/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7f912f2161e1e46461e08968a4160687b3213a63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f912f2161e1e46461e08968a4160687b3213a63",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f912f2161e1e46461e08968a4160687b3213a63"
      },
      {
        "sha": "b5d1b1092998bc95313856d535c632ea5a8f9104",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5d1b1092998bc95313856d535c632ea5a8f9104",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5d1b1092998bc95313856d535c632ea5a8f9104"
      }
    ],
    "stats": {
      "total": 272134,
      "additions": 164326,
      "deletions": 107808
    },
    "files": [
      {
        "sha": "c9cf4a7d9cd03ed588ba9882d26bfd1dd6800fe7",
        "filename": ".gitattributes",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/.gitattributes",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/.gitattributes",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitattributes?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1 +1 @@\n-src/version.cpp export-subst\n+src/clientversion.cpp export-subst"
      },
      {
        "sha": "c97432df920ed7d5c513d00a3b23ccc8c541e386",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 77,
        "deletions": 3,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,15 +1,70 @@\n-src/*.exe\n+*.tar.gz\n+\n+*.exe\n src/bitcoin\n src/bitcoind\n-src/test_bitcoin\n+src/bitcoin-cli\n+src/bitcoin-tx\n+src/test/test_bitcoin\n+src/qt/test/test_bitcoin-qt\n+\n+# autoreconf\n+Makefile.in\n+aclocal.m4\n+autom4te.cache/\n+build-aux/config.guess\n+build-aux/config.sub\n+build-aux/depcomp\n+build-aux/install-sh\n+build-aux/ltmain.sh\n+build-aux/m4/libtool.m4\n+build-aux/m4/lt~obsolete.m4\n+build-aux/m4/ltoptions.m4\n+build-aux/m4/ltsugar.m4\n+build-aux/m4/ltversion.m4\n+build-aux/missing\n+build-aux/compile\n+build-aux/test-driver\n+config.log\n+config.status\n+configure\n+libtool\n+src/config/bitcoin-config.h\n+src/config/bitcoin-config.h.in\n+src/config/stamp-h1\n+share/setup.nsi\n+share/qt/Info.plist\n+\n+src/univalue/gen\n+\n+src/qt/*.moc\n+src/qt/moc_*.cpp\n+src/qt/forms/ui_*.h\n+\n+src/qt/test/moc*.cpp\n+\n+.deps\n+.dirstamp\n .*.swp\n *.*~*\n *.bak\n *.rej\n *.orig\n+*.pyc\n *.o\n+*.o-*\n *.patch\n .bitcoin\n+*.a\n+*.pb.cc\n+*.pb.h\n+\n+*.log\n+*.trs\n+*.dmg\n+\n+*.json.h\n+*.raw.h\n \n # Compilation and Qt preprocessor part\n *.qm\n@@ -20,6 +75,7 @@ Bitcoin-Qt.app\n # Unit-tests\n Makefile.test\n bitcoin-qt_test\n+src/test/buildenv.py\n \n # Resources cpp\n qrc_*.cpp\n@@ -31,4 +87,22 @@ qrc_*.cpp\n .DS_Store\n build\n \n-!src/leveldb-*/Makefile\n+#lcov\n+*.gcno\n+/*.info\n+test_bitcoin.coverage/\n+total.coverage/\n+coverage_percent.txt\n+\n+#build tests\n+linux-coverage-build\n+linux-build\n+win32-build\n+qa/pull-tester/run-bitcoind-for-test.sh\n+qa/pull-tester/tests-config.sh\n+qa/pull-tester/cache/*\n+qa/pull-tester/test.*/*\n+\n+!src/leveldb*/Makefile\n+\n+/doc/doxygen/"
      },
      {
        "sha": "567428daf9b0c0982c31f2b53dc7f7cbc84202db",
        "filename": ".travis.yml",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,65 @@\n+# errata:\n+# - A travis bug causes caches to trample eachother when using the same\n+#   compiler key (which we don't use anyway). This is worked around for now by\n+#   replacing the \"compilers\" with a build name prefixed by the no-op \":\"\n+#   command. See: https://github.com/travis-ci/casher/issues/6\n+\n+os: linux\n+language: cpp\n+env:\n+  global:\n+    - MAKEJOBS=-j3\n+    - RUN_TESTS=false\n+    - CCACHE_SIZE=100M\n+    - CCACHE_TEMPDIR=/tmp/.ccache-temp\n+    - CCACHE_COMPRESS=1\n+    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n+    - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n+cache:\n+  apt: true\n+  directories:\n+  - depends/built\n+  - depends/sdk-sources\n+  - $HOME/.ccache\n+matrix:\n+  fast_finish: true\n+  include:\n+    - compiler: \": ARM\"\n+      env: HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat\"\n+    - compiler: \": bitcoind\"\n+      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat CPPFLAGS=-DDEBUG_LOCKORDER\"\n+    - compiler: \": No wallet\"\n+      env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat\"\n+    - compiler: \": 32-bit + dash\"\n+      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat\" USE_SHELL=\"/bin/dash\"\n+    - compiler: \": Cross-Mac\"\n+      env: HOST=x86_64-apple-darwin11 PACKAGES=\"gcc-multilib g++-multilib cmake libcap-dev libz-dev libbz2-dev\" OSX_SDK=10.7 GOAL=\"deploy\"\n+    - compiler: \": Win64\"\n+      env: HOST=x86_64-w64-mingw32 PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui\" MAKEJOBS=\"-j2\"\n+    - compiler: \": Win32\"\n+      env: HOST=i686-w64-mingw32 PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui\" MAKEJOBS=\"-j2\"\n+install:\n+    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n+    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n+before_script:\n+    - unset CC; unset CXX\n+    - mkdir -p depends/SDKs depends/sdk-sources\n+    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then wget $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -O depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n+    - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n+    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+script:\n+    - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n+    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n+    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n+    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n+    - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then export CCACHE_READONLY=1; fi\n+    - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n+    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+    - make distdir PACKAGE=bitcoin VERSION=$HOST\n+    - cd bitcoin-$HOST\n+    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+    - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.sh; fi\n+after_script:\n+    - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then (echo \"Upload goes here. Something like: scp -r $BASE_OUTDIR server\" || echo \"upload failed\"); fi"
      },
      {
        "sha": "472d27b46fe13e797f20c3b7ee433ace38313d87",
        "filename": ".tx/config",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,7 @@\n+[main]\n+host = https://www.transifex.com\n+\n+[bitcoin.qt-translation-010x]\n+file_filter = src/qt/locale/bitcoin_<lang>.ts\n+source_file = src/qt/locale/bitcoin_en.ts\n+source_lang = en"
      },
      {
        "sha": "6219bd75a64975f94aa512cd25d9e5adf047a8f6",
        "filename": "COPYING",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,4 +1,4 @@\n-Copyright (c) 2009-2013 Bitcoin Developers\n+Copyright (c) 2009-2014 Bitcoin Developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "07ee48427cd056dadd0cbb3c0fc889c60c01f85c",
        "filename": "INSTALL",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/INSTALL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/INSTALL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,9 +1,5 @@\n Building Bitcoin\n \n-See doc/readme-qt.rst for instructions on building Bitcoin-Qt,\n-the intended-for-end-users, nice-graphical-interface, reference\n-implementation of Bitcoin.\n-\n-See doc/build-*.txt for instructions on building bitcoind,\n+See doc/build-*.md for instructions on building bitcoind,\n the intended-for-services, no-graphical-interface, reference\n implementation of Bitcoin.\n\\ No newline at end of file"
      },
      {
        "sha": "6bc004431346ed9074d679f6c674e595de901bf8",
        "filename": "Makefile.am",
        "status": "added",
        "additions": 182,
        "deletions": 0,
        "changes": 182,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,182 @@\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n+SUBDIRS = src\n+.PHONY: deploy FORCE\n+\n+GZIP_ENV=\"-9n\"\n+\n+BITCOIND_BIN=$(top_builddir)/src/bitcoind$(EXEEXT)\n+BITCOIN_QT_BIN=$(top_builddir)/src/qt/bitcoin-qt$(EXEEXT)\n+BITCOIN_CLI_BIN=$(top_builddir)/src/bitcoin-cli$(EXEEXT)\n+BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n+\n+OSX_APP=Bitcoin-Qt.app\n+OSX_DMG=Bitcoin-Qt.dmg\n+OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n+OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n+OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n+OSX_PLIST=$(top_srcdir)/share/qt/Info.plist #not installed\n+OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n+\n+DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n+\n+WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n+  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n+  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n+  $(top_srcdir)/doc/README_windows.txt\n+\n+OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n+  $(top_srcdir)/contrib/macdeploy/background.png \\\n+  $(top_srcdir)/contrib/macdeploy/DS_Store\n+\n+COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n+  leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n+  baseline_filtered.info block_test_filtered.info \\\n+  leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n+\n+dist-hook:\n+\t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n+\t-$(MAKE) -C $(top_distdir)/src/secp256k1 distclean\n+\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n+\n+distcheck-hook:\n+\t$(MKDIR_P) $(top_distdir)/_build/src/leveldb\n+\tcp -rf $(top_srcdir)/src/leveldb/* $(top_distdir)/_build/src/leveldb/\n+\t-$(MAKE) -C $(top_distdir)/_build/src/leveldb clean\n+\n+distcleancheck:\n+\t@:\n+\n+$(BITCOIN_WIN_INSTALLER): all-recursive\n+\t$(MKDIR_P) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\t@test -f $(MAKENSIS) && $(MAKENSIS) $(top_builddir)/share/setup.nsi || \\\n+\t  echo error: could not build $@\n+\n+$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n+\t$(MAKE) -C src $(patsubst src/%,%,$@)\n+\n+$(OSX_APP)/Contents/PkgInfo:\n+\t$(MKDIR_P) $(@D)\n+\t@echo \"APPL????\" > $@\n+\n+$(OSX_APP)/Contents/Resources/empty.lproj:\n+\t$(MKDIR_P) $(@D)\n+\t@touch $@\n+\n+$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n+\t$(MKDIR_P) $(@D)\n+\t$(INSTALL_DATA) $< $@\n+\n+$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n+\t$(MKDIR_P) $(@D)\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n+\n+OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n+  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n+  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+\n+if BUILD_DARWIN\n+$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+\t$(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2\n+\n+else\n+$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -verbose 2\n+\t$(MKDIR_P) dist/.background\n+\t$(INSTALL) contrib/macdeploy/background.png dist/.background\n+\t$(INSTALL) contrib/macdeploy/DS_Store dist/.DS_Store\n+\tcd dist; $(LN_S) /Applications Applications\n+\t$(GENISOIMAGE) -no-cache-inodes -l -probe -V \"Bitcoin-Qt\" -no-pad -r -apple -o $@ dist\n+endif\n+\n+if TARGET_DARWIN\n+appbundle: $(OSX_APP_BUILT)\n+deploy: $(OSX_DMG)\n+endif\n+if TARGET_WINDOWS\n+deploy: $(BITCOIN_WIN_INSTALLER)\n+endif\n+\n+$(BITCOIN_QT_BIN): FORCE\n+\t$(MAKE) -C src qt/$(@F)\n+\n+$(BITCOIND_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+$(BITCOIN_CLI_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+if USE_LCOV\n+\n+baseline.info:\n+\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n+\n+baseline_filtered.info: baseline.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+leveldb_baseline.info: baseline_filtered.info\n+\t$(LCOV) -c -i -d $(abs_builddir)/src/leveldb -b $(abs_builddir)/src/leveldb -o $@\n+\n+leveldb_baseline_filtered.info: leveldb_baseline.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n+\t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n+\n+test_bitcoin.info: baseline_filtered_combined.info\n+\t$(MAKE) -C src/ check\n+\t$(LCOV) -c -d $(abs_builddir)/src -t test_bitcoin -o $@\n+\t$(LCOV) -z -d $(abs_builddir)/src\n+\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+test_bitcoin_filtered.info: test_bitcoin.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+block_test.info: test_bitcoin_filtered.info\n+\t$(MKDIR_P) qa/tmp\n+\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool 0\n+\t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n+\t$(LCOV) -z -d $(abs_builddir)/src\n+\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+block_test_filtered.info: block_test.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n+test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n+\n+total_coverage.info:  baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+\n+test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n+\t$(GENHTML) -s $< -o $(@D)\n+\t@touch $@\n+\n+total.coverage/.dirstamp: total_coverage.info\n+\t$(GENHTML) -s $< -o $(@D)\n+\t@touch $@\n+\n+cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n+\n+endif\n+\n+if USE_COMPARISON_TOOL\n+check-local:\n+\t$(MKDIR_P) qa/tmp\n+\t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n+endif\n+\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.sh qa/pull-tester/run-bitcoin-cli qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+\n+CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n+\n+.INTERMEDIATE: $(COVERAGE_INFO)\n+\n+clean-local:\n+\trm -rf test_bitcoin.coverage/ total.coverage/ $(OSX_APP)"
      },
      {
        "sha": "cf650fe5433349829ef59748b1c42ced241a5327",
        "filename": "README.md",
        "status": "modified",
        "additions": 62,
        "deletions": 22,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,26 +1,28 @@\n-Bitcoin integration/staging tree\n-================================\n+Bitcoin Core integration/staging tree\n+=====================================\n \n-http://www.bitcoin.org\n+[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n \n-Copyright (c) 2009-2013 Bitcoin Developers\n+https://www.bitcoin.org\n+\n+Copyright (c) 2009-2014 Bitcoin Core Developers\n \n What is Bitcoin?\n ----------------\n \n Bitcoin is an experimental new digital currency that enables instant payments to\n anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin is also the name of the open source\n+out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin client sofware, see http://www.bitcoin.org.\n+the Bitcoin Core software, see https://www.bitcoin.org/en/download.\n \n License\n -------\n \n-Bitcoin is released under the terms of the MIT license. See `COPYING` for more\n+Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see http://opensource.org/licenses/MIT.\n \n Development process\n@@ -38,7 +40,7 @@ submitter will be asked to start a discussion (if they haven't already) on the\n \n The patch will be accepted if there is broad consensus that it is a good thing.\n Developers should expect to rework and resubmit patches if the code doesn't\n-match the project's coding conventions (see `doc/coding.txt`) or are\n+match the project's coding conventions (see [doc/coding.md](doc/coding.md)) or are\n controversial.\n \n The `master` branch is regularly built and tested, but is not guaranteed to be\n@@ -49,24 +51,14 @@ Testing\n -------\n \n Testing and code review is the bottleneck for development; we get more pull\n-requests than we can review and test. Please be patient and help out, and\n-remember this is a security-critical project where any mistake might cost people\n+requests than we can review and test on short notice. Please be patient and help out by testing\n+other people's pull requests, and remember this is a security-critical project where any mistake might cost people\n lots of money.\n \n ### Automated Testing\n \n Developers are strongly encouraged to write unit tests for new code, and to\n-submit new unit tests for old code.\n-\n-Unit tests for the core code are in `src/test/`. To compile and run them:\n-\n-    cd src; make -f makefile.unix test\n-\n-Unit tests for the GUI code are in `src/qt/test/`. To compile and run them:\n-\n-    qmake BITCOIN_QT_TEST=1 -o Makefile.test bitcoin-qt.pro\n-    make -f Makefile.test\n-    ./bitcoin-qt_test\n+submit new unit tests for old code. Unit tests can be compiled and run (assuming they weren't disabled in configure) with: `make check`\n \n Every pull request is built for both Windows and Linux on a dedicated server,\n and unit and sanity tests are automatically run. The binaries produced may be\n@@ -78,5 +70,53 @@ for the build/test scripts.\n \n Large changes should have a test plan, and should be tested by somebody other\n than the developer who wrote the code.\n-\n See https://github.com/bitcoin/QA/ for how to create a test plan.\n+\n+Translations\n+------------\n+\n+Changes to translations as well as new translations can be submitted to\n+[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+\n+Translations are periodically pulled from Transifex and merged into the git repository. See the\n+[translation process](doc/translation_process.md) for details on how this works.\n+\n+**Important**: We do not accept translation changes as GitHub pull requests because the next\n+pull from Transifex would automatically overwrite them again.\n+\n+Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators).\n+\n+Development tips and tricks\n+---------------------------\n+\n+**compiling for debugging**\n+\n+Run configure with the --enable-debug option, then make. Or run configure with\n+CXXFLAGS=\"-g -ggdb -O0\" or whatever debug flags you need.\n+\n+**debug.log**\n+\n+If the code is behaving strangely, take a look in the debug.log file in the data directory;\n+error and debugging messages are written there.\n+\n+The -debug=... command-line option controls debugging; running with just -debug will turn\n+on all categories (and give you a very large debug.log file).\n+\n+The Qt code routes qDebug() output to debug.log under category \"qt\": run with -debug=qt\n+to see it.\n+\n+**testnet and regtest modes**\n+\n+Run with the -testnet option to run with \"play bitcoins\" on the test network, if you\n+are testing multi-machine code that needs to operate across the internet.\n+\n+If you are testing something that can run on one machine, run with the -regtest option.\n+In regression test mode, blocks can be created on-demand; see qa/rpc-tests/ for tests\n+that run in -regtest mode.\n+\n+**DEBUG_LOCKORDER**\n+\n+Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n+can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure\n+CXXFLAGS=\"-DDEBUG_LOCKORDER -g\") inserts run-time checks to keep track of which locks\n+are held, and adds warnings to the debug.log file if inconsistencies are detected."
      },
      {
        "sha": "3e26a183059c059277632e0cca9d11c3b1836f31",
        "filename": "autogen.sh",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,9 @@\n+#!/bin/sh\n+set -e\n+srcdir=\"$(dirname $0)\"\n+cd \"$srcdir\"\n+if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n+  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n+  export LIBTOOLIZE\n+fi\n+autoreconf --install --force --warnings=all"
      },
      {
        "sha": "1d62941e68b97730592233e4cb8b25825a5ec91d",
        "filename": "bitcoin-qt.pro",
        "status": "removed",
        "additions": 0,
        "deletions": 430,
        "changes": 430,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/bitcoin-qt.pro?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,430 +0,0 @@\n-TEMPLATE = app\n-TARGET = bitcoin-qt\n-macx:TARGET = \"Bitcoin-Qt\"\n-VERSION = 0.8.2\n-INCLUDEPATH += src src/json src/qt\n-QT += core gui network\n-greaterThan(QT_MAJOR_VERSION, 4): QT += widgets\n-DEFINES += BOOST_THREAD_USE_LIB BOOST_SPIRIT_THREADSAFE\n-CONFIG += no_include_pwd\n-CONFIG += thread\n-\n-# for boost 1.37, add -mt to the boost libraries\n-# use: qmake BOOST_LIB_SUFFIX=-mt\n-# for boost thread win32 with _win32 sufix\n-# use: BOOST_THREAD_LIB_SUFFIX=_win32-...\n-# or when linking against a specific BerkelyDB version: BDB_LIB_SUFFIX=-4.8\n-\n-# Dependency library locations can be customized with:\n-#    BOOST_INCLUDE_PATH, BOOST_LIB_PATH, BDB_INCLUDE_PATH,\n-#    BDB_LIB_PATH, OPENSSL_INCLUDE_PATH and OPENSSL_LIB_PATH respectively\n-\n-OBJECTS_DIR = build\n-MOC_DIR = build\n-UI_DIR = build\n-\n-# use: qmake \"RELEASE=1\"\n-contains(RELEASE, 1) {\n-    # Mac: compile for maximum compatibility (10.5, 32-bit)\n-    macx:QMAKE_CXXFLAGS += -mmacosx-version-min=10.5 -arch i386 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n-    macx:QMAKE_CFLAGS += -mmacosx-version-min=10.5 -arch i386 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n-    macx:QMAKE_OBJECTIVE_CFLAGS += -mmacosx-version-min=10.5 -arch i386 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n-\n-    !win32:!macx {\n-        # Linux: static link and extra security (see: https://wiki.debian.org/Hardening)\n-        LIBS += -Wl,-Bstatic -Wl,-z,relro -Wl,-z,now\n-    }\n-}\n-\n-!win32 {\n-    # for extra security against potential buffer overflows: enable GCCs Stack Smashing Protection\n-    QMAKE_CXXFLAGS *= -fstack-protector-all\n-    QMAKE_LFLAGS *= -fstack-protector-all\n-    # Exclude on Windows cross compile with MinGW 4.2.x, as it will result in a non-working executable!\n-    # This can be enabled for Windows, when we switch to MinGW >= 4.4.x.\n-}\n-# for extra security (see: https://wiki.debian.org/Hardening): this flag is GCC compiler-specific\n-QMAKE_CXXFLAGS *= -D_FORTIFY_SOURCE=2\n-# for extra security on Windows: enable ASLR and DEP via GCC linker flags\n-win32:QMAKE_LFLAGS *= -Wl,--dynamicbase -Wl,--nxcompat\n-# on Windows: enable GCC large address aware linker flag\n-win32:QMAKE_LFLAGS *= -Wl,--large-address-aware\n-\n-# use: qmake \"USE_QRCODE=1\"\n-# libqrencode (http://fukuchi.org/works/qrencode/index.en.html) must be installed for support\n-contains(USE_QRCODE, 1) {\n-    message(Building with QRCode support)\n-    DEFINES += USE_QRCODE\n-    LIBS += -lqrencode\n-}\n-\n-# use: qmake \"USE_UPNP=1\" ( enabled by default; default)\n-#  or: qmake \"USE_UPNP=0\" (disabled by default)\n-#  or: qmake \"USE_UPNP=-\" (not supported)\n-# miniupnpc (http://miniupnp.free.fr/files/) must be installed for support\n-contains(USE_UPNP, -) {\n-    message(Building without UPNP support)\n-} else {\n-    message(Building with UPNP support)\n-    count(USE_UPNP, 0) {\n-        USE_UPNP=1\n-    }\n-    DEFINES += USE_UPNP=$$USE_UPNP STATICLIB\n-    INCLUDEPATH += $$MINIUPNPC_INCLUDE_PATH\n-    LIBS += $$join(MINIUPNPC_LIB_PATH,,-L,) -lminiupnpc\n-    win32:LIBS += -liphlpapi\n-}\n-\n-# use: qmake \"USE_DBUS=1\"\n-contains(USE_DBUS, 1) {\n-    message(Building with DBUS (Freedesktop notifications) support)\n-    DEFINES += USE_DBUS\n-    QT += dbus\n-}\n-\n-# use: qmake \"USE_IPV6=1\" ( enabled by default; default)\n-#  or: qmake \"USE_IPV6=0\" (disabled by default)\n-#  or: qmake \"USE_IPV6=-\" (not supported)\n-contains(USE_IPV6, -) {\n-    message(Building without IPv6 support)\n-} else {\n-    count(USE_IPV6, 0) {\n-        USE_IPV6=1\n-    }\n-    DEFINES += USE_IPV6=$$USE_IPV6\n-}\n-\n-contains(BITCOIN_NEED_QT_PLUGINS, 1) {\n-    DEFINES += BITCOIN_NEED_QT_PLUGINS\n-    QTPLUGIN += qcncodecs qjpcodecs qtwcodecs qkrcodecs qtaccessiblewidgets\n-}\n-\n-INCLUDEPATH += src/leveldb/include src/leveldb/helpers\n-LIBS += $$PWD/src/leveldb/libleveldb.a $$PWD/src/leveldb/libmemenv.a\n-!win32 {\n-    # we use QMAKE_CXXFLAGS_RELEASE even without RELEASE=1 because we use RELEASE to indicate linking preferences not -O preferences\n-    genleveldb.commands = cd $$PWD/src/leveldb && CC=$$QMAKE_CC CXX=$$QMAKE_CXX $(MAKE) OPT=\\\"$$QMAKE_CXXFLAGS $$QMAKE_CXXFLAGS_RELEASE\\\" libleveldb.a libmemenv.a\n-} else {\n-    # make an educated guess about what the ranlib command is called\n-    isEmpty(QMAKE_RANLIB) {\n-        QMAKE_RANLIB = $$replace(QMAKE_STRIP, strip, ranlib)\n-    }\n-    LIBS += -lshlwapi\n-    genleveldb.commands = cd $$PWD/src/leveldb && CC=$$QMAKE_CC CXX=$$QMAKE_CXX TARGET_OS=OS_WINDOWS_CROSSCOMPILE $(MAKE) OPT=\\\"$$QMAKE_CXXFLAGS $$QMAKE_CXXFLAGS_RELEASE\\\" libleveldb.a libmemenv.a && $$QMAKE_RANLIB $$PWD/src/leveldb/libleveldb.a && $$QMAKE_RANLIB $$PWD/src/leveldb/libmemenv.a\n-}\n-genleveldb.target = $$PWD/src/leveldb/libleveldb.a\n-genleveldb.depends = FORCE\n-PRE_TARGETDEPS += $$PWD/src/leveldb/libleveldb.a\n-QMAKE_EXTRA_TARGETS += genleveldb\n-# Gross ugly hack that depends on qmake internals, unfortunately there is no other way to do it.\n-QMAKE_CLEAN += $$PWD/src/leveldb/libleveldb.a; cd $$PWD/src/leveldb ; $(MAKE) clean\n-\n-# regenerate src/build.h\n-!win32|contains(USE_BUILD_INFO, 1) {\n-    genbuild.depends = FORCE\n-    genbuild.commands = cd $$PWD; /bin/sh share/genbuild.sh $$OUT_PWD/build/build.h\n-    genbuild.target = $$OUT_PWD/build/build.h\n-    PRE_TARGETDEPS += $$OUT_PWD/build/build.h\n-    QMAKE_EXTRA_TARGETS += genbuild\n-    DEFINES += HAVE_BUILD_INFO\n-}\n-\n-QMAKE_CXXFLAGS_WARN_ON = -fdiagnostics-show-option -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wstack-protector\n-\n-# Input\n-DEPENDPATH += src src/json src/qt\n-HEADERS += src/qt/bitcoingui.h \\\n-    src/qt/transactiontablemodel.h \\\n-    src/qt/addresstablemodel.h \\\n-    src/qt/optionsdialog.h \\\n-    src/qt/sendcoinsdialog.h \\\n-    src/qt/addressbookpage.h \\\n-    src/qt/signverifymessagedialog.h \\\n-    src/qt/aboutdialog.h \\\n-    src/qt/editaddressdialog.h \\\n-    src/qt/bitcoinaddressvalidator.h \\\n-    src/alert.h \\\n-    src/addrman.h \\\n-    src/base58.h \\\n-    src/bignum.h \\\n-    src/chainparams.h \\\n-    src/checkpoints.h \\\n-    src/compat.h \\\n-    src/sync.h \\\n-    src/util.h \\\n-    src/hash.h \\\n-    src/uint256.h \\\n-    src/serialize.h \\\n-    src/core.h \\\n-    src/main.h \\\n-    src/net.h \\\n-    src/key.h \\\n-    src/db.h \\\n-    src/walletdb.h \\\n-    src/script.h \\\n-    src/init.h \\\n-    src/bloom.h \\\n-    src/mruset.h \\\n-    src/checkqueue.h \\\n-    src/json/json_spirit_writer_template.h \\\n-    src/json/json_spirit_writer.h \\\n-    src/json/json_spirit_value.h \\\n-    src/json/json_spirit_utils.h \\\n-    src/json/json_spirit_stream_reader.h \\\n-    src/json/json_spirit_reader_template.h \\\n-    src/json/json_spirit_reader.h \\\n-    src/json/json_spirit_error_position.h \\\n-    src/json/json_spirit.h \\\n-    src/qt/clientmodel.h \\\n-    src/qt/guiutil.h \\\n-    src/qt/transactionrecord.h \\\n-    src/qt/guiconstants.h \\\n-    src/qt/optionsmodel.h \\\n-    src/qt/monitoreddatamapper.h \\\n-    src/qt/transactiondesc.h \\\n-    src/qt/transactiondescdialog.h \\\n-    src/qt/bitcoinamountfield.h \\\n-    src/wallet.h \\\n-    src/keystore.h \\\n-    src/qt/transactionfilterproxy.h \\\n-    src/qt/transactionview.h \\\n-    src/qt/walletmodel.h \\\n-    src/qt/walletview.h \\\n-    src/qt/walletstack.h \\\n-    src/qt/walletframe.h \\\n-    src/bitcoinrpc.h \\\n-    src/qt/overviewpage.h \\\n-    src/qt/csvmodelwriter.h \\\n-    src/crypter.h \\\n-    src/qt/sendcoinsentry.h \\\n-    src/qt/qvalidatedlineedit.h \\\n-    src/qt/bitcoinunits.h \\\n-    src/qt/qvaluecombobox.h \\\n-    src/qt/askpassphrasedialog.h \\\n-    src/protocol.h \\\n-    src/qt/notificator.h \\\n-    src/qt/paymentserver.h \\\n-    src/allocators.h \\\n-    src/ui_interface.h \\\n-    src/qt/rpcconsole.h \\\n-    src/version.h \\\n-    src/netbase.h \\\n-    src/clientversion.h \\\n-    src/txdb.h \\\n-    src/leveldb.h \\\n-    src/threadsafety.h \\\n-    src/limitedmap.h \\\n-    src/qt/splashscreen.h\n-\n-SOURCES += src/qt/bitcoin.cpp \\\n-    src/qt/bitcoingui.cpp \\\n-    src/qt/transactiontablemodel.cpp \\\n-    src/qt/addresstablemodel.cpp \\\n-    src/qt/optionsdialog.cpp \\\n-    src/qt/sendcoinsdialog.cpp \\\n-    src/qt/addressbookpage.cpp \\\n-    src/qt/signverifymessagedialog.cpp \\\n-    src/qt/aboutdialog.cpp \\\n-    src/qt/editaddressdialog.cpp \\\n-    src/qt/bitcoinaddressvalidator.cpp \\\n-    src/alert.cpp \\\n-    src/chainparams.cpp \\\n-    src/version.cpp \\\n-    src/sync.cpp \\\n-    src/util.cpp \\\n-    src/hash.cpp \\\n-    src/netbase.cpp \\\n-    src/key.cpp \\\n-    src/script.cpp \\\n-    src/core.cpp \\\n-    src/main.cpp \\\n-    src/init.cpp \\\n-    src/net.cpp \\\n-    src/bloom.cpp \\\n-    src/checkpoints.cpp \\\n-    src/addrman.cpp \\\n-    src/db.cpp \\\n-    src/walletdb.cpp \\\n-    src/qt/clientmodel.cpp \\\n-    src/qt/guiutil.cpp \\\n-    src/qt/transactionrecord.cpp \\\n-    src/qt/optionsmodel.cpp \\\n-    src/qt/monitoreddatamapper.cpp \\\n-    src/qt/transactiondesc.cpp \\\n-    src/qt/transactiondescdialog.cpp \\\n-    src/qt/bitcoinstrings.cpp \\\n-    src/qt/bitcoinamountfield.cpp \\\n-    src/wallet.cpp \\\n-    src/keystore.cpp \\\n-    src/qt/transactionfilterproxy.cpp \\\n-    src/qt/transactionview.cpp \\\n-    src/qt/walletmodel.cpp \\\n-    src/qt/walletview.cpp \\\n-    src/qt/walletstack.cpp \\\n-    src/qt/walletframe.cpp \\\n-    src/bitcoinrpc.cpp \\\n-    src/rpcdump.cpp \\\n-    src/rpcnet.cpp \\\n-    src/rpcmining.cpp \\\n-    src/rpcwallet.cpp \\\n-    src/rpcblockchain.cpp \\\n-    src/rpcrawtransaction.cpp \\\n-    src/qt/overviewpage.cpp \\\n-    src/qt/csvmodelwriter.cpp \\\n-    src/crypter.cpp \\\n-    src/qt/sendcoinsentry.cpp \\\n-    src/qt/qvalidatedlineedit.cpp \\\n-    src/qt/bitcoinunits.cpp \\\n-    src/qt/qvaluecombobox.cpp \\\n-    src/qt/askpassphrasedialog.cpp \\\n-    src/protocol.cpp \\\n-    src/qt/notificator.cpp \\\n-    src/qt/paymentserver.cpp \\\n-    src/qt/rpcconsole.cpp \\\n-    src/noui.cpp \\\n-    src/leveldb.cpp \\\n-    src/txdb.cpp \\\n-    src/qt/splashscreen.cpp\n-\n-RESOURCES += src/qt/bitcoin.qrc\n-\n-FORMS += src/qt/forms/sendcoinsdialog.ui \\\n-    src/qt/forms/addressbookpage.ui \\\n-    src/qt/forms/signverifymessagedialog.ui \\\n-    src/qt/forms/aboutdialog.ui \\\n-    src/qt/forms/editaddressdialog.ui \\\n-    src/qt/forms/transactiondescdialog.ui \\\n-    src/qt/forms/overviewpage.ui \\\n-    src/qt/forms/sendcoinsentry.ui \\\n-    src/qt/forms/askpassphrasedialog.ui \\\n-    src/qt/forms/rpcconsole.ui \\\n-    src/qt/forms/optionsdialog.ui\n-\n-contains(USE_QRCODE, 1) {\n-HEADERS += src/qt/qrcodedialog.h\n-SOURCES += src/qt/qrcodedialog.cpp\n-FORMS += src/qt/forms/qrcodedialog.ui\n-}\n-\n-contains(BITCOIN_QT_TEST, 1) {\n-SOURCES += src/qt/test/test_main.cpp \\\n-    src/qt/test/uritests.cpp\n-HEADERS += src/qt/test/uritests.h\n-DEPENDPATH += src/qt/test\n-QT += testlib\n-TARGET = bitcoin-qt_test\n-DEFINES += BITCOIN_QT_TEST\n-  macx: CONFIG -= app_bundle\n-}\n-\n-# Todo: Remove this line when switching to Qt5, as that option was removed\n-CODECFORTR = UTF-8\n-\n-# for lrelease/lupdate\n-# also add new translations to src/qt/bitcoin.qrc under translations/\n-TRANSLATIONS = $$files(src/qt/locale/bitcoin_*.ts)\n-\n-isEmpty(QMAKE_LRELEASE) {\n-    win32:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]\\\\lrelease.exe\n-    else:QMAKE_LRELEASE = $$[QT_INSTALL_BINS]/lrelease\n-}\n-isEmpty(QM_DIR):QM_DIR = $$PWD/src/qt/locale\n-# automatically build translations, so they can be included in resource file\n-TSQM.name = lrelease ${QMAKE_FILE_IN}\n-TSQM.input = TRANSLATIONS\n-TSQM.output = $$QM_DIR/${QMAKE_FILE_BASE}.qm\n-TSQM.commands = $$QMAKE_LRELEASE ${QMAKE_FILE_IN} -qm ${QMAKE_FILE_OUT}\n-TSQM.CONFIG = no_link\n-QMAKE_EXTRA_COMPILERS += TSQM\n-\n-# \"Other files\" to show in Qt Creator\n-OTHER_FILES += README.md \\\n-    doc/*.rst \\\n-    doc/*.txt \\\n-    doc/*.md \\\n-    src/bitcoind.cpp \\\n-    src/qt/res/bitcoin-qt.rc \\\n-    src/test/*.cpp \\\n-    src/test/*.h \\\n-    src/qt/test/*.cpp \\\n-    src/qt/test/*.h\n-\n-# platform specific defaults, if not overridden on command line\n-isEmpty(BOOST_LIB_SUFFIX) {\n-    macx:BOOST_LIB_SUFFIX = -mt\n-    win32:BOOST_LIB_SUFFIX = -mgw44-mt-s-1_50\n-}\n-\n-isEmpty(BOOST_THREAD_LIB_SUFFIX) {\n-    BOOST_THREAD_LIB_SUFFIX = $$BOOST_LIB_SUFFIX\n-}\n-\n-isEmpty(BDB_LIB_PATH) {\n-    macx:BDB_LIB_PATH = /opt/local/lib/db48\n-}\n-\n-isEmpty(BDB_LIB_SUFFIX) {\n-    macx:BDB_LIB_SUFFIX = -4.8\n-}\n-\n-isEmpty(BDB_INCLUDE_PATH) {\n-    macx:BDB_INCLUDE_PATH = /opt/local/include/db48\n-}\n-\n-isEmpty(BOOST_LIB_PATH) {\n-    macx:BOOST_LIB_PATH = /opt/local/lib\n-}\n-\n-isEmpty(BOOST_INCLUDE_PATH) {\n-    macx:BOOST_INCLUDE_PATH = /opt/local/include\n-}\n-\n-win32:DEFINES += WIN32\n-win32:RC_FILE = src/qt/res/bitcoin-qt.rc\n-\n-win32:!contains(MINGW_THREAD_BUGFIX, 0) {\n-    # At least qmake's win32-g++-cross profile is missing the -lmingwthrd\n-    # thread-safety flag. GCC has -mthreads to enable this, but it doesn't\n-    # work with static linking. -lmingwthrd must come BEFORE -lmingw, so\n-    # it is prepended to QMAKE_LIBS_QT_ENTRY.\n-    # It can be turned off with MINGW_THREAD_BUGFIX=0, just in case it causes\n-    # any problems on some untested qmake profile now or in the future.\n-    DEFINES += _MT\n-    QMAKE_LIBS_QT_ENTRY = -lmingwthrd $$QMAKE_LIBS_QT_ENTRY\n-}\n-\n-!win32:!macx {\n-    DEFINES += LINUX\n-    LIBS += -lrt\n-    # _FILE_OFFSET_BITS=64 lets 32-bit fopen transparently support large files.\n-    DEFINES += _FILE_OFFSET_BITS=64\n-}\n-\n-macx:HEADERS += src/qt/macdockiconhandler.h src/qt/macnotificationhandler.h\n-macx:OBJECTIVE_SOURCES += src/qt/macdockiconhandler.mm src/qt/macnotificationhandler.mm\n-macx:LIBS += -framework Foundation -framework ApplicationServices -framework AppKit -framework CoreServices\n-macx:DEFINES += MAC_OSX MSG_NOSIGNAL=0\n-macx:ICON = src/qt/res/icons/bitcoin.icns\n-macx:QMAKE_CFLAGS_THREAD += -pthread\n-macx:QMAKE_LFLAGS_THREAD += -pthread\n-macx:QMAKE_CXXFLAGS_THREAD += -pthread\n-macx:QMAKE_INFO_PLIST = share/qt/Info.plist\n-\n-# Set libraries and includes at end, to use platform-defined defaults if not overridden\n-INCLUDEPATH += $$BOOST_INCLUDE_PATH $$BDB_INCLUDE_PATH $$OPENSSL_INCLUDE_PATH $$QRENCODE_INCLUDE_PATH\n-LIBS += $$join(BOOST_LIB_PATH,,-L,) $$join(BDB_LIB_PATH,,-L,) $$join(OPENSSL_LIB_PATH,,-L,) $$join(QRENCODE_LIB_PATH,,-L,)\n-LIBS += -lssl -lcrypto -ldb_cxx$$BDB_LIB_SUFFIX\n-# -lgdi32 has to happen after -lcrypto (see  #681)\n-win32:LIBS += -lws2_32 -lshlwapi -lmswsock -lole32 -loleaut32 -luuid -lgdi32\n-LIBS += -lboost_system$$BOOST_LIB_SUFFIX -lboost_filesystem$$BOOST_LIB_SUFFIX -lboost_program_options$$BOOST_LIB_SUFFIX -lboost_thread$$BOOST_THREAD_LIB_SUFFIX\n-win32:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX\n-macx:LIBS += -lboost_chrono$$BOOST_LIB_SUFFIX\n-\n-contains(RELEASE, 1) {\n-    !win32:!macx {\n-        # Linux: turn dynamic linking back on for c/c++ runtime libraries\n-        LIBS += -Wl,-Bdynamic\n-    }\n-}\n-\n-system($$QMAKE_LRELEASE -silent $$TRANSLATIONS)"
      },
      {
        "sha": "3f24d5ddc617b769904edb52095084ad36480dd5",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "added",
        "additions": 281,
        "deletions": 0,
        "changes": 281,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,281 @@\n+# ===========================================================================\n+#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+#\n+# DESCRIPTION\n+#\n+#   Test for the Boost C++ libraries of a particular version (or newer)\n+#\n+#   If no path to the installed boost library is given the macro searchs\n+#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n+#   $BOOST_ROOT environment variable. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Peter Adolphs\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 23\n+\n+AC_DEFUN([AX_BOOST_BASE],\n+[\n+AC_ARG_WITH([boost],\n+  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n+    [use Boost library from a standard location (ARG=yes),\n+     from the specified location (ARG=<path>),\n+     or disable it (ARG=no)\n+     @<:@ARG=yes@:>@ ])],\n+    [\n+    if test \"$withval\" = \"no\"; then\n+        want_boost=\"no\"\n+    elif test \"$withval\" = \"yes\"; then\n+        want_boost=\"yes\"\n+        ac_boost_path=\"\"\n+    else\n+        want_boost=\"yes\"\n+        ac_boost_path=\"$withval\"\n+    fi\n+    ],\n+    [want_boost=\"yes\"])\n+\n+\n+AC_ARG_WITH([boost-libdir],\n+        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n+        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n+        [\n+        if test -d \"$withval\"\n+        then\n+                ac_boost_lib_path=\"$withval\"\n+        else\n+                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n+        fi\n+        ],\n+        [ac_boost_lib_path=\"\"]\n+)\n+\n+if test \"x$want_boost\" = \"xyes\"; then\n+    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n+    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n+    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n+        boost_lib_version_req_sub_minor=\"0\"\n+        fi\n+    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n+    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n+    succeeded=no\n+\n+    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n+    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n+    dnl this (as it rises problems for generic multi-arch support).\n+    dnl The last entry in the list is chosen by default when no libraries\n+    dnl are found, e.g. when only header-only libraries are installed!\n+    libsubdirs=\"lib\"\n+    ax_arch=`uname -m`\n+    case $ax_arch in\n+      x86_64)\n+        libsubdirs=\"lib64 libx32 lib lib64\"\n+        ;;\n+      ppc64|s390x|sparc64|aarch64)\n+        libsubdirs=\"lib64 lib lib64\"\n+        ;;\n+    esac\n+\n+    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n+    dnl them priority over the other paths since, if libs are found there, they\n+    dnl are almost assuredly the ones desired.\n+    AC_REQUIRE([AC_CANONICAL_HOST])\n+    libsubdirs=\"lib/${host_cpu}-${host_os} $libsubdirs\"\n+\n+    case ${host_cpu} in\n+      i?86)\n+        libsubdirs=\"lib/i386-${host_os} $libsubdirs\"\n+        ;;\n+    esac\n+\n+    dnl some arches may advertise a cpu type that doesn't line up with their\n+    dnl prefix's cpu type. For example, uname may report armv7l while libs are\n+    dnl installed to /usr/lib/arm-linux-gnueabihf. Try getting the compiler's\n+    dnl value for an extra chance of finding the correct path.\n+    libsubdirs=\"lib/`$CXX -dumpmachine 2>/dev/null` $libsubdirs\"\n+\n+    dnl first we check the system location for boost libraries\n+    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n+    dnl or if you install boost with RPM\n+    if test \"$ac_boost_path\" != \"\"; then\n+        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n+        for ac_boost_path_tmp in $libsubdirs; do\n+                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n+                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n+                        break\n+                fi\n+        done\n+    elif test \"$cross_compiling\" != yes; then\n+        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n+            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n+                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n+                break;\n+            fi\n+        done\n+    fi\n+\n+    dnl overwrite ld flags if we have required special directory with\n+    dnl --with-boost-libdir parameter\n+    if test \"$ac_boost_lib_path\" != \"\"; then\n+       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n+    fi\n+\n+    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+    export CPPFLAGS\n+\n+    LDFLAGS_SAVED=\"$LDFLAGS\"\n+    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+    export LDFLAGS\n+\n+    AC_REQUIRE([AC_PROG_CXX])\n+    AC_LANG_PUSH(C++)\n+        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    @%:@include <boost/version.hpp>\n+    ]], [[\n+    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n+    // Everything is okay\n+    #else\n+    #  error Boost version is too old\n+    #endif\n+    ]])],[\n+        AC_MSG_RESULT(yes)\n+    succeeded=yes\n+    found_system=yes\n+        ],[:\n+        ])\n+    AC_LANG_POP([C++])\n+\n+\n+\n+    dnl if we found no boost with system layout we search for boost libraries\n+    dnl built and installed without the --layout=system option or for a staged(not installed) version\n+    if test \"x$succeeded\" != \"xyes\"; then\n+        _version=0\n+        if test \"$ac_boost_path\" != \"\"; then\n+            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n+                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n+                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                    V_CHECK=`expr $_version_tmp \\> $_version`\n+                    if test \"$V_CHECK\" = \"1\" ; then\n+                        _version=$_version_tmp\n+                    fi\n+                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n+                done\n+            fi\n+        else\n+            if test \"$cross_compiling\" != yes; then\n+                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n+                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n+                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n+                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                            V_CHECK=`expr $_version_tmp \\> $_version`\n+                            if test \"$V_CHECK\" = \"1\" ; then\n+                                _version=$_version_tmp\n+                                best_path=$ac_boost_path\n+                            fi\n+                        done\n+                    fi\n+                done\n+\n+                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n+                if test \"$ac_boost_lib_path\" = \"\"; then\n+                    for libsubdir in $libsubdirs ; do\n+                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                    done\n+                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n+                fi\n+            fi\n+\n+            if test \"x$BOOST_ROOT\" != \"x\"; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n+                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n+                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n+                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n+                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n+                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n+                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n+                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n+                    fi\n+                fi\n+            fi\n+        fi\n+\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n+\n+        AC_LANG_PUSH(C++)\n+            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        @%:@include <boost/version.hpp>\n+        ]], [[\n+        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n+        // Everything is okay\n+        #else\n+        #  error Boost version is too old\n+        #endif\n+        ]])],[\n+            AC_MSG_RESULT(yes)\n+        succeeded=yes\n+        found_system=yes\n+            ],[:\n+            ])\n+        AC_LANG_POP([C++])\n+    fi\n+\n+    if test \"$succeeded\" != \"yes\" ; then\n+        if test \"$_version\" = \"0\" ; then\n+            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n+        else\n+            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n+        fi\n+        # execute ACTION-IF-NOT-FOUND (if present):\n+        ifelse([$3], , :, [$3])\n+    else\n+        AC_SUBST(BOOST_CPPFLAGS)\n+        AC_SUBST(BOOST_LDFLAGS)\n+        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n+        # execute ACTION-IF-FOUND (if present):\n+        ifelse([$2], , :, [$2])\n+    fi\n+\n+    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+    LDFLAGS=\"$LDFLAGS_SAVED\"\n+fi\n+\n+])"
      },
      {
        "sha": "318ecea17fab84b7bbc24ded70bcb27be749d603",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "added",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,119 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_CHRONO\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CHRONO_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_CHRONO\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2012 Xiyue Deng <manphiz@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 1\n+\n+AC_DEFUN([AX_BOOST_CHRONO],\n+[\n+\tAC_ARG_WITH([boost-chrono],\n+\tAS_HELP_STRING([--with-boost-chrono@<:@=special-lib@:>@],\n+                   [use the Chrono library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-chrono=boost_chrono-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_chrono_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_chrono_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Chrono library is available,\n+\t\t\t\t\t   ax_cv_boost_chrono,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n+                                   [[boost::chrono::system_clock::time_point time;]])],\n+                   ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_chrono\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_CHRONO,,[define if the Boost::Chrono library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n+                ax_lib=\n+                for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                 [link_chrono=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_chrono\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_chrono*.dll* $BOOSTLIBDIR/boost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_chrono.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                 [link_chrono=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_chrono_lib boost_chrono-$ax_boost_user_chrono_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                   [link_chrono=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the boost_chrono library!)\n+            fi\n+\t\t\tif test \"x$link_chrono\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "f5c9d56470bf9659b2c38c677c946d37c32be206",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "added",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,119 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_FILESYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for Filesystem library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_FILESYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 26\n+\n+AC_DEFUN([AX_BOOST_FILESYSTEM],\n+[\n+\tAC_ARG_WITH([boost-filesystem],\n+\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n+                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_filesystem_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_filesystem_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+\t\tLIBS_SAVED=$LIBS\n+\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n+\t\texport LIBS\n+\n+        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n+\t\t\t\t\t   ax_cv_boost_filesystem,\n+        [AC_LANG_PUSH([C++])\n+         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n+                                   [[using namespace boost::filesystem;\n+                                   path my_path( \"foo/bar/data.txt\" );\n+                                   return 0;]])],\n+\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+            ax_lib=\n+            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_filesystem\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+\t\t    fi\n+            else\n+               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                   [link_filesystem=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the boost_filesystem library!)\n+            fi\n+\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\t\tLIBS=\"$LIBS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "f591441854f59863049a28feb0b89b991ec32ef3",
        "filename": "build-aux/m4/ax_boost_program_options.m4",
        "status": "added",
        "additions": 109,
        "deletions": 0,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_program_options.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,109 @@\n+# ============================================================================\n+#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n+# ============================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_PROGRAM_OPTIONS\n+#\n+# DESCRIPTION\n+#\n+#   Test for program options library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_PROGRAM_OPTIONS\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 22\n+\n+AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n+[\n+\tAC_ARG_WITH([boost-program-options],\n+\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n+                       [use the program options library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_program_options_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_program_options_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t    export want_boost\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n+\t\t\t\t\t   ax_cv_boost_program_options,\n+\t\t\t\t\t   [AC_LANG_PUSH(C++)\n+\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options.hpp>\n+                                                          ]],\n+                                  [[boost::program_options::options_description generic(\"Generic options\");\n+                                   return 0;]])],\n+                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n+\t\t\t\t\tAC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n+\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n+                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n+                ax_lib=\n+                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.dylib* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.dylib.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                 [link_program_options=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_program_options\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                 [link_program_options=\"no\"])\n+\t\t\t\tdone\n+                fi\n+                else\n+                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n+                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                   [link_program_options=\"no\"])\n+                  done\n+                fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the boost_program_options library!)\n+            fi\n+\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n+\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n+\t\t\t\tfi\n+\t\tfi\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "9c78280fcae472e022bc2c45afa11ceb70167681",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "added",
        "additions": 121,
        "deletions": 0,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,121 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_SYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_SYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_SYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2008 Michael Tindal\n+#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 17\n+\n+AC_DEFUN([AX_BOOST_SYSTEM],\n+[\n+\tAC_ARG_WITH([boost-system],\n+\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n+                   [use the System library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_system_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_system_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::System library is available,\n+\t\t\t\t\t   ax_cv_boost_system,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n+                                   [[boost::system::system_category]])],\n+                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n+                ax_lib=\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_system\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                   [link_system=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the boost_system library!)\n+            fi\n+\t\t\tif test \"x$link_system\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "9f0bd0b23c9b0caba987ba96080f7696643a8d5d",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "added",
        "additions": 150,
        "deletions": 0,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,150 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_THREAD\n+#\n+# DESCRIPTION\n+#\n+#   Test for Thread library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_THREAD_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_THREAD\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 27\n+\n+AC_DEFUN([AX_BOOST_THREAD],\n+[\n+\tAC_ARG_WITH([boost-thread],\n+\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n+                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_thread_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n+\t\t\t\t\t   ax_cv_boost_thread,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t if test \"x$host_os\" = \"xsolaris\" ; then\n+\t\t\t\t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n+\t\t\t elif test \"x$host_os\" = \"xmingw32\" ; then\n+\t\t\t\t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n+\t\t\t else\n+\t\t\t\tCXXFLAGS=\"-pthread $CXXFLAGS\"\n+\t\t\t fi\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n+                                   [[boost::thread_group thrds;\n+                                   return 0;]])],\n+                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n+           if test \"x$host_os\" = \"xsolaris\" ; then\n+\t\t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n+\t\t   elif test \"x$host_os\" = \"xmingw32\" ; then\n+\t\t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n+\t\t   else\n+\t\t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n+\t\t   fi\n+\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+                        case \"x$host_os\" in\n+                          *bsd* )\n+                               LDFLAGS=\"-pthread $LDFLAGS\"\n+                          break;\n+                          ;;\n+                        esac\n+            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n+                ax_lib=\n+                for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_thread\" != \"xyes\"; then\n+                for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                   [link_thread=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the boost_thread library!)\n+            fi\n+\t\t\tif test \"x$link_thread\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+                        else\n+                           case \"x$host_os\" in\n+                              *bsd* )\n+\t\t\t\tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n+                              break;\n+                              ;;\n+                           esac\n+\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "4efd1e2f18be12e19176f772ad41f07a823a0c85",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "added",
        "additions": 138,
        "deletions": 0,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,138 @@\n+# ================================================================================\n+#  http://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n+# ================================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# DESCRIPTION\n+#\n+#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n+#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n+#   is available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 19\n+\n+AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n+[\n+\tAC_ARG_WITH([boost-unit-test-framework],\n+\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n+                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_unit_test_framework_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n+\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n+                                    [[using boost::unit_test::test_suite;\n+\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); return 0;]])],\n+                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                ax_lib=\n+                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n+                    if test -r $monitor_library ; then\n+                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t  break\n+\t\t\t\t    fi\n+                done\n+                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n+                                 [link_unit_test_framework=\"no\"])\n+\t\t\t\tdone\n+                fi\n+            else\n+                link_unit_test_framework=\"no\"\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n+                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      break;\n+                   fi\n+                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n+                   if test -r $unittest_library ; then\n+                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t    break\n+\t\t\t\t    fi\n+                  done\n+               done\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the boost_unit_test_framework library!)\n+            fi\n+\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "c3a8d695a1bcda95fd91cb6d8c03a94cdcb5b9c7",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,72 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's compiler\n+#   or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the current language's default\n+#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n+#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n+#   force the compiler to issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n+[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n+  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "e2d0d363e4c4ac672d36a2c964973136d007be73",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,71 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the linker or gives an error.\n+#   (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n+#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n+#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n+#   issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_LINK_FLAG],\n+[AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$LDFLAGS\n+  LDFLAGS=\"$LDFLAGS $4 $1\"\n+  AC_LINK_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  LDFLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "b1cfef6b86dd6ed3321fe2b92e215a06cfbdbcdd",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,72 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's\n+#   preprocessor or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n+#   flags when the check is done.  The check is thus made with the flags:\n+#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n+#   preprocessor to issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n+[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$CPPFLAGS\n+  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n+  AC_PREPROC_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  CPPFLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "d383ad5c6d6a5061370800bb1dc89b7a334c0638",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "added",
        "additions": 332,
        "deletions": 0,
        "changes": 332,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,332 @@\n+# ===========================================================================\n+#        http://www.gnu.org/software/autoconf-archive/ax_pthread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n+#\n+# DESCRIPTION\n+#\n+#   This macro figures out how to build C programs using POSIX threads. It\n+#   sets the PTHREAD_LIBS output variable to the threads library and linker\n+#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n+#   flags that are needed. (The user can also force certain compiler\n+#   flags/libs to be tested by setting these environment variables.)\n+#\n+#   Also sets PTHREAD_CC to any special C compiler that is needed for\n+#   multi-threaded programs (defaults to the value of CC otherwise). (This\n+#   is necessary on AIX to use the special cc_r compiler alias.)\n+#\n+#   NOTE: You are assumed to not only compile your program with these flags,\n+#   but also link it with them as well. e.g. you should link with\n+#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n+#\n+#   If you are only building threads programs, you may wish to use these\n+#   variables in your default LIBS, CFLAGS, and CC:\n+#\n+#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n+#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+#     CC=\"$PTHREAD_CC\"\n+#\n+#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n+#   has a nonstandard name, defines PTHREAD_CREATE_JOINABLE to that name\n+#   (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n+#\n+#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n+#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n+#   PTHREAD_CFLAGS.\n+#\n+#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n+#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n+#   is not found. If ACTION-IF-FOUND is not specified, the default action\n+#   will define HAVE_PTHREAD.\n+#\n+#   Please let the authors know if this macro fails on any platform, or if\n+#   you have any other suggestions or comments. This macro was based on work\n+#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n+#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n+#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n+#   grateful for the helpful feedback of numerous users.\n+#\n+#   Updated for Autoconf 2.68 by Daniel Richard G.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n+#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 21\n+\n+AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n+AC_DEFUN([AX_PTHREAD], [\n+AC_REQUIRE([AC_CANONICAL_HOST])\n+AC_LANG_PUSH([C])\n+ax_pthread_ok=no\n+\n+# We used to check for pthread.h first, but this fails if pthread.h\n+# requires special compiler flags (e.g. on True64 or Sequent).\n+# It gets checked for in the link test anyway.\n+\n+# First of all, check if the user has set any of the PTHREAD_LIBS,\n+# etcetera environment variables, and if threads linking works using\n+# them:\n+if test x\"$PTHREAD_LIBS$PTHREAD_CFLAGS\" != x; then\n+        save_CFLAGS=\"$CFLAGS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        save_LIBS=\"$LIBS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        AC_MSG_CHECKING([for pthread_join in LIBS=$PTHREAD_LIBS with CFLAGS=$PTHREAD_CFLAGS])\n+        AC_TRY_LINK_FUNC([pthread_join], [ax_pthread_ok=yes])\n+        AC_MSG_RESULT([$ax_pthread_ok])\n+        if test x\"$ax_pthread_ok\" = xno; then\n+                PTHREAD_LIBS=\"\"\n+                PTHREAD_CFLAGS=\"\"\n+        fi\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+fi\n+\n+# We must check for the threads library under a number of different\n+# names; the ordering is very important because some systems\n+# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n+# libraries is broken (non-POSIX).\n+\n+# Create a list of thread flags to try.  Items starting with a \"-\" are\n+# C compiler flags, and other items are library names, except for \"none\"\n+# which indicates that we try without any flags at all, and \"pthread-config\"\n+# which is a program returning the flags for the Pth emulation library.\n+\n+ax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n+\n+# The ordering *is* (sometimes) important.  Some notes on the\n+# individual items follow:\n+\n+# pthreads: AIX (must check this before -lpthread)\n+# none: in case threads are in libc; should be tried before -Kthread and\n+#       other compiler flags to prevent continual compiler warnings\n+# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n+# -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n+# lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads)\n+# -pthreads: Solaris/gcc\n+# -mthreads: Mingw32/gcc, Lynx/gcc\n+# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n+#      doesn't hurt to check since this sometimes defines pthreads too;\n+#      also defines -D_REENTRANT)\n+#      ... -mt is also the pthreads flag for HP/aCC\n+# pthread: Linux, etcetera\n+# --thread-safe: KAI C++\n+# pthread-config: use pthread-config program (for GNU Pth library)\n+\n+case ${host_os} in\n+        solaris*)\n+\n+        # On Solaris (at least, for some versions), libc contains stubbed\n+        # (non-functional) versions of the pthreads routines, so link-based\n+        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/\n+        # -lpthread.)  (The stubs are missing pthread_cleanup_push, or rather\n+        # a function called by this macro, so we could check for that, but\n+        # who knows whether they'll stub that too in a future libc.)  So,\n+        # we'll just look for -pthreads and -lpthread first:\n+\n+        ax_pthread_flags=\"-pthreads pthread -mt -pthread $ax_pthread_flags\"\n+        ;;\n+\n+        darwin*)\n+        ax_pthread_flags=\"-pthread $ax_pthread_flags\"\n+        ;;\n+esac\n+\n+# Clang doesn't consider unrecognized options an error unless we specify\n+# -Werror. We throw in some extra Clang-specific options to ensure that\n+# this doesn't happen for GCC, which also accepts -Werror.\n+\n+AC_MSG_CHECKING([if compiler needs -Werror to reject unknown flags])\n+save_CFLAGS=\"$CFLAGS\"\n+ax_pthread_extra_flags=\"-Werror\"\n+CFLAGS=\"$CFLAGS $ax_pthread_extra_flags -Wunknown-warning-option -Wsizeof-array-argument\"\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([int foo(void);],[foo()])],\n+                  [AC_MSG_RESULT([yes])],\n+                  [ax_pthread_extra_flags=\n+                   AC_MSG_RESULT([no])])\n+CFLAGS=\"$save_CFLAGS\"\n+\n+if test x\"$ax_pthread_ok\" = xno; then\n+for flag in $ax_pthread_flags; do\n+\n+        case $flag in\n+                none)\n+                AC_MSG_CHECKING([whether pthreads work without any flags])\n+                ;;\n+\n+                -*)\n+                AC_MSG_CHECKING([whether pthreads work with $flag])\n+                PTHREAD_CFLAGS=\"$flag\"\n+                ;;\n+\n+                pthread-config)\n+                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n+                if test x\"$ax_pthread_config\" = xno; then continue; fi\n+                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n+                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n+                ;;\n+\n+                *)\n+                AC_MSG_CHECKING([for the pthreads library -l$flag])\n+                PTHREAD_LIBS=\"-l$flag\"\n+                ;;\n+        esac\n+\n+        save_LIBS=\"$LIBS\"\n+        save_CFLAGS=\"$CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS $ax_pthread_extra_flags\"\n+\n+        # Check for various functions.  We must include pthread.h,\n+        # since some functions may be macros.  (On the Sequent, we\n+        # need a special flag -Kthread to make this header compile.)\n+        # We check for pthread_join because it is in -lpthread on IRIX\n+        # while pthread_create is in libc.  We check for pthread_attr_init\n+        # due to DEC craziness with -lpthreads.  We check for\n+        # pthread_cleanup_push because it is one of the few pthread\n+        # functions on Solaris that doesn't have a non-functional libc stub.\n+        # We try pthread_create on general principles.\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n+                        static void routine(void *a) { a = 0; }\n+                        static void *start_routine(void *a) { return a; }],\n+                       [pthread_t th; pthread_attr_t attr;\n+                        pthread_create(&th, 0, start_routine, 0);\n+                        pthread_join(th, 0);\n+                        pthread_attr_init(&attr);\n+                        pthread_cleanup_push(routine, 0);\n+                        pthread_cleanup_pop(0) /* ; */])],\n+                [ax_pthread_ok=yes],\n+                [])\n+\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+\n+        AC_MSG_RESULT([$ax_pthread_ok])\n+        if test \"x$ax_pthread_ok\" = xyes; then\n+                break;\n+        fi\n+\n+        PTHREAD_LIBS=\"\"\n+        PTHREAD_CFLAGS=\"\"\n+done\n+fi\n+\n+# Various other checks:\n+if test \"x$ax_pthread_ok\" = xyes; then\n+        save_LIBS=\"$LIBS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        save_CFLAGS=\"$CFLAGS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+\n+        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n+        AC_MSG_CHECKING([for joinable pthread attribute])\n+        attr_name=unknown\n+        for attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n+            AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n+                           [int attr = $attr; return attr /* ; */])],\n+                [attr_name=$attr; break],\n+                [])\n+        done\n+        AC_MSG_RESULT([$attr_name])\n+        if test \"$attr_name\" != PTHREAD_CREATE_JOINABLE; then\n+            AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE], [$attr_name],\n+                               [Define to necessary symbol if this constant\n+                                uses a non-standard name on your system.])\n+        fi\n+\n+        AC_MSG_CHECKING([if more special flags are required for pthreads])\n+        flag=no\n+        case ${host_os} in\n+            aix* | freebsd* | darwin*) flag=\"-D_THREAD_SAFE\";;\n+            osf* | hpux*) flag=\"-D_REENTRANT\";;\n+            solaris*)\n+            if test \"$GCC\" = \"yes\"; then\n+                flag=\"-D_REENTRANT\"\n+            else\n+                # TODO: What about Clang on Solaris?\n+                flag=\"-mt -D_REENTRANT\"\n+            fi\n+            ;;\n+        esac\n+        AC_MSG_RESULT([$flag])\n+        if test \"x$flag\" != xno; then\n+            PTHREAD_CFLAGS=\"$flag $PTHREAD_CFLAGS\"\n+        fi\n+\n+        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n+            [ax_cv_PTHREAD_PRIO_INHERIT], [\n+                AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n+                                                [[int i = PTHREAD_PRIO_INHERIT;]])],\n+                    [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n+                    [ax_cv_PTHREAD_PRIO_INHERIT=no])\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\"],\n+            [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])])\n+\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+\n+        # More AIX lossage: compile with *_r variant\n+        if test \"x$GCC\" != xyes; then\n+            case $host_os in\n+                aix*)\n+                AS_CASE([\"x/$CC\"],\n+                  [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n+                  [#handle absolute path differently from PATH based program lookup\n+                   AS_CASE([\"x$CC\"],\n+                     [x/*],\n+                     [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n+                     [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n+                ;;\n+            esac\n+        fi\n+fi\n+\n+test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+\n+AC_SUBST([PTHREAD_LIBS])\n+AC_SUBST([PTHREAD_CFLAGS])\n+AC_SUBST([PTHREAD_CC])\n+\n+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n+if test x\"$ax_pthread_ok\" = xyes; then\n+        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n+        :\n+else\n+        ax_pthread_ok=no\n+        $2\n+fi\n+AC_LANG_POP\n+])dnl AX_PTHREAD"
      },
      {
        "sha": "f3b14461eb9e8e248235e9592ede0db9bb039313",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,66 @@\n+AC_DEFUN([BITCOIN_FIND_BDB48],[\n+  AC_MSG_CHECKING([for Berkeley DB C++ headers])\n+  BDB_CPPFLAGS=\n+  BDB_LIBS=\n+  bdbpath=X\n+  bdb48path=X\n+  bdbdirlist=\n+  for _vn in 4.8 48 4 5 ''; do\n+    for _pfx in b lib ''; do\n+      bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n+    done\n+  done\n+  for searchpath in $bdbdirlist ''; do\n+    test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+      #include <${searchpath}db_cxx.h>\n+    ]],[[\n+      #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n+        #error \"failed to find bdb 4.8+\"\n+      #endif\n+    ]])],[\n+      if test \"x$bdbpath\" = \"xX\"; then\n+        bdbpath=\"${searchpath}\"\n+      fi\n+    ],[\n+      continue\n+    ])\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+      #include <${searchpath}db_cxx.h>\n+    ]],[[\n+      #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n+        #error \"failed to find bdb 4.8\"\n+      #endif\n+    ]])],[\n+      bdb48path=\"${searchpath}\"\n+      break\n+    ],[])\n+  done\n+  if test \"x$bdbpath\" = \"xX\"; then\n+    AC_MSG_RESULT([no])\n+    AC_MSG_ERROR(libdb_cxx headers missing)\n+  elif test \"x$bdb48path\" = \"xX\"; then\n+    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n+    AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n+      AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n+    ],[\n+      AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n+    ])\n+  else\n+    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n+    bdbpath=\"${bdb48path}\"\n+  fi\n+  AC_SUBST(BDB_CPPFLAGS)\n+  \n+  # TODO: Ideally this could find the library version and make sure it matches the headers being used\n+  for searchlib in db_cxx-4.8 db_cxx; do\n+    AC_CHECK_LIB([$searchlib],[main],[\n+      BDB_LIBS=\"-l${searchlib}\"\n+      break\n+    ])\n+  done\n+  if test \"x$BDB_LIBS\" = \"x\"; then\n+      AC_MSG_ERROR([libdb_cxx missing, Bitcoin Core requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n+  fi\n+  AC_SUBST(BDB_LIBS)\n+])"
      },
      {
        "sha": "2a72262653f1f71ca1341fc3ebd30b781a7789f1",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "added",
        "additions": 415,
        "deletions": 0,
        "changes": 415,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,415 @@\n+dnl Helper for cases where a qt dependency is not met.\n+dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n+AC_DEFUN([BITCOIN_QT_FAIL],[\n+  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n+    if test x$bitcoin_enable_qt != xno; then\n+      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n+    fi\n+    bitcoin_enable_qt=no\n+  else\n+    AC_MSG_ERROR([$1])\n+  fi\n+])\n+\n+AC_DEFUN([BITCOIN_QT_CHECK],[\n+  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n+    true\n+    $1\n+  else\n+    true\n+    $2\n+  fi\n+])\n+\n+dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n+dnl Helper for finding the path of programs needed for Qt.\n+dnl Inputs: $1: Variable to be set\n+dnl Inputs: $2: List of programs to search for\n+dnl Inputs: $3: Look for $2 here before $PATH\n+dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n+dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n+AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n+  BITCOIN_QT_CHECK([\n+    if test \"x$3\" != \"x\"; then\n+      AC_PATH_PROGS($1,$2,,$3)\n+    else\n+      AC_PATH_PROGS($1,$2)\n+    fi\n+    if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n+      BITCOIN_QT_FAIL([$1 not found])\n+    fi\n+  ])\n+])\n+\n+dnl Initialize qt input.\n+dnl This must be called before any other BITCOIN_QT* macros to ensure that\n+dnl input variables are set correctly.\n+dnl CAUTION: Do not use this inside of a conditional.\n+AC_DEFUN([BITCOIN_QT_INIT],[\n+  dnl enable qt support\n+  AC_ARG_WITH([gui],\n+    [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n+    [build bitcoin-qt GUI (default=auto, qt4 tried first)])],\n+    [\n+     bitcoin_qt_want_version=$withval\n+     if test x$bitcoin_qt_want_version = xyes; then\n+       bitcoin_qt_force=yes\n+       bitcoin_qt_want_version=auto\n+     fi\n+    ],\n+    [bitcoin_qt_want_version=auto])\n+\n+  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n+  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n+  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n+  AC_ARG_WITH([qt-translationdir],[AS_HELP_STRING([--with-qt-translationdir=PLUGIN_DIR],[specify qt translation path (overridden by pkgconfig)])], [qt_translation_path=$withval], [])\n+  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n+\n+  AC_ARG_WITH([qtdbus],\n+    [AS_HELP_STRING([--with-qtdbus],\n+    [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n+    [use_dbus=$withval],\n+    [use_dbus=auto])\n+\n+  AC_SUBST(QT_TRANSLATION_DIR,$qt_translation_path)\n+])\n+\n+dnl Find the appropriate version of Qt libraries and includes.\n+dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n+dnl Inputs: $2: If $1 is \"yes\" and --with-gui=auto, which qt version should be\n+dnl         tried first.\n+dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n+dnl Outputs: Sets variables for all qt-related tools.\n+dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n+AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n+  use_pkgconfig=$1\n+\n+  if test x$use_pkgconfig = x; then\n+    use_pkgconfig=yes\n+  fi\n+\n+  if test x$use_pkgconfig = xyes; then\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n+  else\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n+  fi\n+\n+  dnl This is ugly and complicated. Yuck. Works as follows:\n+  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n+  dnl check a header to find out. When Qt is built statically, some plugins must\n+  dnl be linked into the final binary as well. These plugins have changed between\n+  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n+  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n+  dnl assumed for windows builds.\n+  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n+  dnl results to QT_LIBS.\n+  BITCOIN_QT_CHECK([\n+  TEMP_CPPFLAGS=$CPPFLAGS\n+  CPPFLAGS=$QT_INCLUDES\n+  if test x$bitcoin_qt_got_major_vers = x5; then\n+    _BITCOIN_QT_IS_STATIC\n+    if test x$bitcoin_cv_static_qt = xyes; then\n+      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+      if test x$qt_plugin_path != x; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+      fi\n+      if test x$use_pkgconfig = xyes; then\n+        PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n+      fi\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n+      if test x$TARGET_OS = xwindows; then\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+        AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n+      elif test x$TARGET_OS = xlinux; then\n+        PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n+        AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n+      elif test x$TARGET_OS = xdarwin; then\n+        if test x$use_pkgconfig = xyes; then\n+          PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n+        fi\n+        AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+        AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n+      fi\n+    fi\n+  else\n+    if test x$TARGET_OS = xwindows; then\n+      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+      if test x$qt_plugin_path != x; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n+      fi\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n+         Q_IMPORT_PLUGIN(qcncodecs)\n+         Q_IMPORT_PLUGIN(qjpcodecs)\n+         Q_IMPORT_PLUGIN(qtwcodecs)\n+         Q_IMPORT_PLUGIN(qkrcodecs)\n+         Q_IMPORT_PLUGIN(AccessibleFactory)],\n+         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n+    fi\n+  fi\n+  CPPFLAGS=$TEMP_CPPFLAGS\n+  ])\n+\n+  if test x$use_pkgconfig$qt_bin_path = xyes; then\n+    if test x$bitcoin_qt_got_major_vers = x5; then\n+      qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n+    fi\n+  fi\n+\n+  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n+\n+  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n+  case $host in\n+    *darwin*)\n+     BITCOIN_QT_CHECK([\n+       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n+       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n+       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n+     ])\n+    ;;\n+    *mingw*)\n+       BITCOIN_QT_CHECK([\n+         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n+       ])\n+  esac\n+\n+\n+  dnl enable qt support\n+  AC_MSG_CHECKING(whether to build Bitcoin Core GUI)\n+  BITCOIN_QT_CHECK([\n+    bitcoin_enable_qt=yes\n+    bitcoin_enable_qt_test=yes\n+    if test x$have_qt_test = xno; then\n+      bitcoin_enable_qt_test=no\n+    fi\n+    bitcoin_enable_qt_dbus=no\n+    if test x$use_dbus != xno && test x$have_qt_dbus = xyes; then\n+      bitcoin_enable_qt_dbus=yes\n+    fi\n+    if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n+      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n+    fi\n+    if test x$LUPDATE = x; then\n+      AC_MSG_WARN(\"lupdate is required to update qt translations\")\n+    fi\n+  ],[\n+    bitcoin_enable_qt=no\n+  ])\n+  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n+\n+  AC_SUBST(QT_INCLUDES)\n+  AC_SUBST(QT_LIBS)\n+  AC_SUBST(QT_LDFLAGS)\n+  AC_SUBST(QT_DBUS_INCLUDES)\n+  AC_SUBST(QT_DBUS_LIBS)\n+  AC_SUBST(QT_TEST_INCLUDES)\n+  AC_SUBST(QT_TEST_LIBS)\n+  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+  AC_SUBST(MOC_DEFS)\n+])\n+\n+dnl All macros below are internal and should _not_ be used from the main\n+dnl configure.ac.\n+dnl ----\n+\n+dnl Internal. Check if the included version of Qt is Qt5.\n+dnl Requires: INCLUDES must be populated as necessary.\n+dnl Output: bitcoin_cv_qt5=yes|no\n+AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n+  AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+    [[#include <QtCore>]],\n+    [[\n+      #if QT_VERSION < 0x050000\n+      choke me\n+      #else\n+      return 0;\n+      #endif\n+    ]])],\n+    [bitcoin_cv_qt5=yes],\n+    [bitcoin_cv_qt5=no])\n+])])\n+\n+dnl Internal. Check if the linked version of Qt was built as static libs.\n+dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Output: bitcoin_cv_static_qt=yes|no\n+dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n+AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n+  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+    [[#include <QtCore>]],\n+    [[\n+      #if defined(QT_STATIC)\n+      return 0;\n+      #else\n+      choke me\n+      #endif\n+    ]])],\n+    [bitcoin_cv_static_qt=yes],\n+    [bitcoin_cv_static_qt=no])\n+  ])\n+  if test xbitcoin_cv_static_qt = xyes; then\n+    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n+  fi\n+])\n+\n+dnl Internal. Check if the link-requirements for static plugins are met.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n+dnl Inputs: $2: The libraries that resolve $1.\n+dnl Output: QT_LIBS is prepended or configure exits.\n+AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n+  AC_MSG_CHECKING(for static Qt plugins: $2)\n+  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$2 $QT_LIBS $LIBS\"\n+  AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+    #define QT_STATICPLUGIN\n+    #include <QtPlugin>\n+    $1]],\n+    [[return 0;]])],\n+    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n+    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n+  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n+])\n+\n+dnl Internal. Find Qt libraries using pkg-config.\n+dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to check\n+dnl         first.\n+dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n+dnl         first.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n+  m4_ifdef([PKG_CHECK_MODULES],[\n+  auto_priority_version=$1\n+  if test x$auto_priority_version = x; then\n+    auto_priority_version=qt5\n+  fi\n+    if test x$bitcoin_qt_want_version = xqt5 ||  ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+      QT_LIB_PREFIX=Qt5\n+      bitcoin_qt_got_major_vers=5\n+    else\n+      QT_LIB_PREFIX=Qt\n+      bitcoin_qt_got_major_vers=4\n+    fi\n+    qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n+    qt4_modules=\"QtCore QtGui QtNetwork\"\n+    BITCOIN_QT_CHECK([\n+      if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+        PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n+      elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n+        PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n+      fi\n+\n+      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n+      if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n+        if test x$auto_priority_version = x$qt5; then\n+          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n+        else\n+          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n+        fi\n+      fi\n+      if test x$have_qt != xyes; then\n+        have_qt=no\n+        BITCOIN_QT_FAIL([Qt dependencies not found])\n+      fi\n+    ])\n+    BITCOIN_QT_CHECK([\n+      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+      if test x$use_dbus != xno; then\n+        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+      fi\n+    ])\n+  ])\n+  true; dnl\n+])\n+\n+dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n+dnl from the discovered headers.\n+dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n+dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  TEMP_LIBS=\"$LIBS\"\n+  BITCOIN_QT_CHECK([\n+    if test x$qt_include_path != x; then\n+      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n+\n+  BITCOIN_QT_CHECK([\n+    if test x$bitcoin_qt_want_version = xauto; then\n+      _BITCOIN_QT_CHECK_QT5\n+    fi\n+    if test x$bitcoin_cv_qt5 = xyes || test x$bitcoin_qt_want_version = xqt5; then\n+      QT_LIB_PREFIX=Qt5\n+      bitcoin_qt_got_major_vers=5\n+    else\n+      QT_LIB_PREFIX=Qt\n+      bitcoin_qt_got_major_vers=4\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      LIBS=\"$LIBS -L$qt_lib_path\"\n+    fi\n+\n+    if test x$TARGET_OS = xwindows; then\n+      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([jpeg] ,[main],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([pcre16] ,[main],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n+  if test x$bitcoin_qt_got_major_vers = x5; then\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+  fi\n+  QT_LIBS=\"$LIBS\"\n+  LIBS=\"$TEMP_LIBS\"\n+\n+  BITCOIN_QT_CHECK([\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      LIBS=\"-L$qt_lib_path\"\n+    fi\n+    AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n+    AC_CHECK_HEADER([QTest],, have_qt_test=no)\n+    QT_TEST_LIBS=\"$LIBS\"\n+    if test x$use_dbus != xno; then\n+      LIBS=\n+      if test x$qt_lib_path != x; then\n+        LIBS=\"-L$qt_lib_path\"\n+      fi\n+      AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)\n+      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n+      QT_DBUS_LIBS=\"$LIBS\"\n+    fi\n+  ])\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+  LIBS=\"$TEMP_LIBS\"\n+])\n+"
      },
      {
        "sha": "66f106c7d47b9121576197c56f6a330e3972d188",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,14 @@\n+dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n+dnl SUBDIRECTORY-NAME must end with a path separator\n+AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n+  if test \"x$2\" = \"x\"; then\n+    AC_MSG_RESULT([default])\n+  else\n+    echo \"#include <$2$3.h>\" >conftest.cpp\n+    newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\\\n\\\\r\\\\\\\\' | sed -e 's/^.*[[:space:]:]\\(\\/[^[:space:]]*\\)]$3[\\.h[[:space:]].*$/\\1/' -e t -e d`]\n+    AC_MSG_RESULT([${newinclpath}])\n+    if test \"x${newinclpath}\" != \"x\"; then\n+      eval \"$1=\\\"\\$$1\\\"' -I${newinclpath}'\"\n+    fi\n+  fi\n+])"
      },
      {
        "sha": "c0489f5be7d64e2351aa1399041db33b6709976b",
        "filename": "configure.ac",
        "status": "added",
        "additions": 856,
        "deletions": 0,
        "changes": 856,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,856 @@\n+dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n+AC_PREREQ([2.60])\n+define(_CLIENT_VERSION_MAJOR, 0)\n+define(_CLIENT_VERSION_MINOR, 9)\n+define(_CLIENT_VERSION_REVISION, 99)\n+define(_CLIENT_VERSION_BUILD, 0)\n+define(_CLIENT_VERSION_IS_RELEASE, false)\n+define(_COPYRIGHT_YEAR, 2014)\n+AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[info@bitcoin.org],[bitcoin])\n+AC_CONFIG_SRCDIR([src/main.cpp])\n+AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n+AC_CONFIG_AUX_DIR([build-aux])\n+AC_CONFIG_MACRO_DIR([build-aux/m4])\n+\n+AC_CANONICAL_HOST\n+\n+AH_TOP([#ifndef BITCOIN_CONFIG_H])\n+AH_TOP([#define BITCOIN_CONFIG_H])\n+AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n+\n+dnl faketime breaks configure and is only needed for make. Disable it here.\n+unset FAKETIME\n+\n+dnl Automake init set-up and checks\n+AM_INIT_AUTOMAKE([no-define subdir-objects foreign])\n+\n+dnl faketime messes with timestamps and causes configure to be re-run.\n+dnl --disable-maintainer-mode can be used to bypass this.\n+AM_MAINTAINER_MODE([enable])\n+\n+dnl make the compilation flags quiet unless V=1 is used\n+m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n+\n+dnl Compiler checks (here before libtool).\n+if test \"x${CXXFLAGS+set}\" = \"xset\"; then\n+  CXXFLAGS_overridden=yes\n+else\n+  CXXFLAGS_overridden=no\n+fi\n+AC_PROG_CXX\n+m4_ifdef([AC_PROG_OBJCXX],[AC_PROG_OBJCXX])\n+\n+dnl By default, libtool for mingw refuses to link static libs into a dll for\n+dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n+dnl we have those under control, re-enable that functionality.\n+case $host in\n+  *mingw*)\n+     lt_cv_deplibs_check_method=\"pass_all\"\n+  ;;\n+esac\n+dnl Libtool init checks.\n+LT_INIT([disable-shared])\n+\n+dnl Check/return PATH for base programs.\n+AC_PATH_TOOL(AR, ar)\n+AC_PATH_TOOL(RANLIB, ranlib)\n+AC_PATH_TOOL(STRIP, strip)\n+AC_PATH_TOOL(GCOV, gcov)\n+AC_PATH_PROG(LCOV, lcov)\n+AC_PATH_PROG(JAVA, java)\n+AC_PATH_PROG(GENHTML, genhtml)\n+AC_PATH_PROG([GIT], [git])\n+AC_PATH_PROG(CCACHE,ccache)\n+AC_PATH_PROG(XGETTEXT,xgettext)\n+AC_PATH_PROG(HEXDUMP,hexdump)\n+\n+# This m4 will only be used if a system copy cannot be found. This is helpful\n+# on systems where autotools are installed but the pkg-config macros are not in\n+# a default location. It is currently used for building on OSX where autotools\n+# are preinstalled but pkg-config comes from macports or homebrew. It should\n+# probably be removed when building on <= 10.6 is no longer supported.\n+m4_include([pkg.m4])\n+\n+dnl pkg-config check.\n+PKG_PROG_PKG_CONFIG\n+\n+# Enable wallet\n+AC_ARG_ENABLE([wallet],\n+  [AS_HELP_STRING([--enable-wallet],\n+  [enable wallet (default is yes)])],\n+  [enable_wallet=$enableval],\n+  [enable_wallet=yes])\n+\n+AC_ARG_WITH([miniupnpc],\n+  [AS_HELP_STRING([--with-miniupnpc],\n+  [enable UPNP (default is yes if libminiupnpc is found)])],\n+  [use_upnp=$withval],\n+  [use_upnp=auto])\n+\n+AC_ARG_ENABLE([upnp-default],\n+  [AS_HELP_STRING([--enable-upnp-default],\n+  [if UPNP is enabled, turn it on at startup (default is no)])],\n+  [use_upnp_default=$enableval],\n+  [use_upnp_default=no])\n+\n+AC_ARG_ENABLE(tests,\n+    AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n+    [use_tests=$enableval],\n+    [use_tests=yes])\n+\n+AC_ARG_WITH([comparison-tool],\n+    AS_HELP_STRING([--with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\n+    [use_comparison_tool=$withval],\n+    [use_comparison_tool=no])\n+\n+AC_ARG_ENABLE([comparison-tool-reorg-tests],\n+    AS_HELP_STRING([--enable-comparison-tool-reorg-tests],[enable expensive reorg tests in the comparison tool (default no)]),\n+    [use_comparison_tool_reorg_tests=$enableval],\n+    [use_comparison_tool_reorg_tests=no])\n+\n+AC_ARG_WITH([qrencode],\n+  [AS_HELP_STRING([--with-qrencode],\n+  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n+  [use_qr=$withval],\n+  [use_qr=auto])\n+\n+AC_ARG_ENABLE([hardening],\n+  [AS_HELP_STRING([--enable-hardening],\n+  [attempt to harden the resulting executables (default is yes)])],\n+  [use_hardening=$enableval],\n+  [use_hardening=yes])\n+\n+AC_ARG_ENABLE([reduce-exports],\n+  [AS_HELP_STRING([--enable-reduce-exports],\n+  [attempt to reduce exported symbols in the resulting executables (default is yes)])],\n+  [use_reduce_exports=$enableval],\n+  [use_reduce_exports=auto])\n+\n+AC_ARG_ENABLE([ccache],\n+  [AS_HELP_STRING([--enable-ccache],\n+  [use ccache for building (default is yes if ccache is found)])],\n+  [use_ccache=$enableval],\n+  [use_ccache=auto])\n+\n+AC_ARG_ENABLE([lcov],\n+  [AS_HELP_STRING([--enable-lcov],\n+  [enable lcov testing (default is no)])],\n+  [use_lcov=yes],\n+  [use_lcov=no])\n+\n+AC_ARG_ENABLE([glibc-back-compat],\n+  [AS_HELP_STRING([--enable-glibc-back-compat],\n+  [enable backwards compatibility with glibc and libstdc++])],\n+  [use_glibc_compat=$enableval],\n+  [use_glibc_compat=no])\n+\n+AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n+\n+# Enable debug \n+AC_ARG_ENABLE([debug],\n+    [AS_HELP_STRING([--enable-debug],\n+                    [use debug compiler flags and macros (default is no)])],\n+    [enable_debug=$enableval],\n+    [enable_debug=no])\n+\n+if test \"x$enable_debug\" = xyes; then\n+    if test \"x$GCC\" = xyes; then\n+        CFLAGS=\"-g3 -O0 -DDEBUG\"\n+    fi\n+    \n+    if test \"x$GXX\" = xyes; then\n+        CXXFLAGS=\"-g3 -O0 -DDEBUG\"\n+    fi\n+fi \n+\n+## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n+##       compatibility with the legacy buildsystem.\n+##\n+if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n+  CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter\"\n+fi\n+CPPFLAGS=\"$CPPFLAGS -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n+\n+AC_LANG_PUSH([C++])\n+\n+use_pkgconfig=yes\n+case $host in\n+  *mingw*)\n+\n+     #pkgconfig does more harm than good with MinGW\n+     use_pkgconfig=no\n+\n+     TARGET_OS=windows\n+     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\n+\n+     AX_CHECK_LINK_FLAG([[-static-libgcc]],[LDFLAGS=\"$LDFLAGS -static-libgcc\"])\n+     AX_CHECK_LINK_FLAG([[-static-libstdc++]],[LDFLAGS=\"$LDFLAGS -static-libstdc++\"])\n+\n+     # -static is interpreted by libtool, where it has a different meaning.\n+     # In libtool-speak, it's -all-static.\n+     AX_CHECK_LINK_FLAG([[-static]],[LDFLAGS=\"$LDFLAGS -static\"; LIBTOOL_LDFLAGS=\"$LIBTOOL_LDFLAGS -all-static\"])\n+\n+     AC_PATH_PROG([MAKENSIS], [makensis], none)\n+     if test x$MAKENSIS = xnone; then\n+       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n+     fi\n+\n+     AC_PATH_TOOL(WINDRES, windres, none)\n+     if test x$WINDRES = xnone; then\n+       AC_MSG_ERROR(\"windres not found\")\n+     fi\n+\n+     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n+     LEVELDB_TARGET_FLAGS=\"TARGET_OS=OS_WINDOWS_CROSSCOMPILE\"\n+     if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n+       CXXFLAGS=\"$CXXFLAGS -w\"\n+     fi\n+     case $host in\n+       i?86-*) WINDOWS_BITS=32 ;;\n+       x86_64-*) WINDOWS_BITS=64 ;;\n+       *) AC_MSG_ERROR(\"Could not determine win32/win64 for installer\") ;;\n+     esac\n+     AC_SUBST(WINDOWS_BITS)\n+     ;;\n+  *darwin*)\n+     TARGET_OS=darwin\n+     LEVELDB_TARGET_FLAGS=\"TARGET_OS=Darwin\"\n+     if  test x$cross_compiling != xyes; then\n+       BUILD_OS=darwin\n+       AC_CHECK_PROG([PORT],port, port)\n+       if test x$PORT = xport; then\n+         dnl add default macports paths\n+         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include -I/opt/local/include/db48\"\n+         LIBS=\"$LIBS -L/opt/local/lib -L/opt/local/lib/db48\"\n+       fi\n+\n+       AC_CHECK_PROG([BREW],brew, brew)\n+       if test x$BREW = xbrew; then\n+         dnl These Homebrew packages may be keg-only, meaning that they won't be found\n+         dnl in expected paths because they may conflict with system files. Ask\n+         dnl Homebrew where each one is located, then adjust paths accordingly.\n+         dnl It's safe to add these paths even if the functionality is disabled by\n+         dnl the user (--without-wallet or --without-gui for example).\n+\n+         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\n+         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\n+         qt5_prefix=`$BREW --prefix qt5 2>/dev/null`\n+         if test x$openssl_prefix != x; then\n+           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n+           export PKG_CONFIG_PATH\n+         fi\n+         if test x$bdb_prefix != x; then\n+           CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n+           LIBS=\"$LIBS -L$bdb_prefix/lib\"\n+         fi\n+         if test x$qt5_prefix != x; then\n+           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n+           export PKG_CONFIG_PATH\n+         fi\n+       fi\n+     else\n+       case $build_os in\n+         *darwin*)\n+           BUILD_OS=darwin\n+           ;;\n+         *)\n+           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n+           AC_PATH_TOOL([OTOOL], [otool], otool)\n+           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n+           ;;\n+       esac\n+     fi\n+\n+     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n+     ;;\n+   *linux*)\n+     TARGET_OS=linux\n+     ;;\n+   *)\n+     ;;\n+esac\n+\n+if test x$use_comparison_tool != xno; then\n+  AC_SUBST(JAVA_COMPARISON_TOOL, $use_comparison_tool)\n+fi\n+\n+if test x$use_comparison_tool_reorg_tests != xno; then\n+  if test x$use_comparison_tool = x; then\n+    AC_MSG_ERROR(\"comparison tool reorg tests but comparison tool was not specified\")\n+  fi\n+  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 1)\n+else\n+  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 0)\n+fi\n+\n+if test x$use_lcov = xyes; then\n+  if test x$LCOV = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n+  fi\n+  if test x$GCOV = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but gcov not found\")\n+  fi\n+  if test x$JAVA = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but java not found\")\n+  fi\n+  if test x$GENHTML = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n+  fi\n+  if test x$use_comparison_tool = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but comparison tool was not specified\")\n+  fi\n+  LCOV=\"$LCOV --gcov-tool=$GCOV\"\n+  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n+    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n+fi\n+\n+dnl Require little endian\n+AC_C_BIGENDIAN([AC_MSG_ERROR(\"Big Endian not supported\")])\n+\n+dnl Check for pthread compile/link requirements\n+AX_PTHREAD\n+\n+# The following macro will add the necessary defines to bitcoin-config.h, but\n+# they also need to be passed down to any subprojects. Pull the results out of\n+# the cache and add them to CPPFLAGS.\n+AC_SYS_LARGEFILE\n+# detect POSIX or GNU variant of strerror_r\n+AC_FUNC_STRERROR_R\n+\n+if test x$ac_cv_sys_file_offset_bits != x &&\n+   test x$ac_cv_sys_file_offset_bits != xno &&\n+   test x$ac_cv_sys_file_offset_bits != xunknown; then\n+  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\n+fi\n+\n+if test x$ac_cv_sys_large_files != x &&\n+   test x$ac_cv_sys_large_files != xno &&\n+   test x$ac_cv_sys_large_files != xunknown; then\n+  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\n+fi\n+\n+AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\n+\n+if test x$use_glibc_compat != xno; then\n+\n+  #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n+  # See which one is present here.\n+  AC_MSG_CHECKING(__fdelt_chk type)\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE\n+                    #undef _FORTIFY_SOURCE\n+                  #endif\n+                  #define _FORTIFY_SOURCE 2\n+                  #include <sys/select.h>\n+     extern \"C\" long unsigned int __fdelt_warn(long unsigned int);]],[[]])],\n+    [ fdelt_type=\"long unsigned int\"],\n+    [ fdelt_type=\"long int\"])\n+  AC_MSG_RESULT($fdelt_type)\n+  AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n+\n+fi\n+\n+if test x$use_hardening != xno; then\n+  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n+  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n+\n+  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n+    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n+      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+    ])\n+    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n+  ])\n+\n+  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n+\n+  if test x$TARGET_OS != xwindows; then\n+    # All windows code is PIC, forcing it on just adds useless compile warnings\n+    AX_CHECK_COMPILE_FLAG([-fPIE],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fPIE\"])\n+    AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n+  fi\n+\n+  CXXFLAGS=\"$CXXFLAGS $HARDENED_CXXFLAGS\"\n+  CPPFLAGS=\"$CPPFLAGS $HARDENED_CPPFLAGS\"\n+  LDFLAGS=\"$LDFLAGS $HARDENED_LDFLAGS\"\n+  OBJCXXFLAGS=\"$CXXFLAGS\"\n+fi\n+\n+dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n+if test x$TARGET_OS = xdarwin; then\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n+fi\n+\n+AC_CHECK_HEADERS([endian.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n+AC_SEARCH_LIBS([getaddrinfo_a], [anl], [AC_DEFINE(HAVE_GETADDRINFO_A, 1, [Define this symbol if you have getaddrinfo_a])])\n+AC_SEARCH_LIBS([inet_pton], [nsl resolv], [AC_DEFINE(HAVE_INET_PTON, 1, [Define this symbol if you have inet_pton])])\n+\n+AC_CHECK_DECLS([le32toh, le64toh, htole32, htole64, be32toh, be64toh, htobe32, htobe64],,,\n+\t\t[#if HAVE_ENDIAN_H\n+                 #include <endian.h>\n+                 #endif])\n+\n+dnl Check for MSG_NOSIGNAL\n+AC_MSG_CHECKING(for MSG_NOSIGNAL)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n+ [[ int f = MSG_NOSIGNAL; ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_SEARCH_LIBS([clock_gettime],[rt])\n+\n+AC_MSG_CHECKING([for visibility attribute])\n+AC_LINK_IFELSE([AC_LANG_SOURCE([\n+  int foo_def( void ) __attribute__((visibility(\"default\")));\n+  int main(){}\n+  ])],\n+  [\n+    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n+    AC_MSG_RESULT(yes)\n+  ],\n+  [\n+    AC_MSG_RESULT(no)\n+    if test x$use_reduce_exports = xyes; then\n+      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduced-exports.])\n+    fi\n+      AC_MSG_WARN([Cannot find a working visibility attribute. Disabling reduced exports.])\n+      use_reduce_exports=no\n+  ]\n+)\n+\n+if test x$use_reduce_exports != xno; then\n+  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n+  [\n+    if test x$use_reduce_exports = xyes; then\n+      AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduced-exports.])\n+    fi\n+    AC_MSG_WARN([Cannot set default symbol visibility. Disabling reduced exports.])\n+    use_reduce_exports=no\n+  ])\n+fi\n+\n+LEVELDB_CPPFLAGS=\n+LIBLEVELDB=\n+LIBMEMENV=\n+AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\n+AC_SUBST(LEVELDB_CPPFLAGS)\n+AC_SUBST(LIBLEVELDB)\n+AC_SUBST(LIBMEMENV)\n+\n+if test x$enable_wallet != xno; then\n+    dnl Check for libdb_cxx only if wallet enabled\n+    BITCOIN_FIND_BDB48\n+fi\n+\n+dnl Check for libminiupnpc (optional)\n+if test x$use_upnp != xno; then\n+  AC_CHECK_HEADERS(\n+    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n+    [AC_CHECK_LIB([miniupnpc], [main],[MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n+    [have_miniupnpc=no]\n+  )\n+fi\n+\n+dnl Check for boost libs\n+AX_BOOST_BASE\n+AX_BOOST_SYSTEM\n+AX_BOOST_FILESYSTEM\n+AX_BOOST_PROGRAM_OPTIONS\n+AX_BOOST_THREAD\n+AX_BOOST_CHRONO\n+\n+\n+if test x$use_reduce_exports != xno; then\n+  AC_MSG_CHECKING([for working boost reduced exports])\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  CPPFLAGS=\"$BOOST_CPPFLAGS $CPPFLAGS\"\n+  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n+      @%:@include <boost/version.hpp>\n+    ]], [[\n+      #if BOOST_VERSION >= 104900\n+      // Everything is okay\n+      #else\n+      #  error Boost version is too old\n+      #endif\n+    ]])],[\n+      AC_MSG_RESULT(yes)\n+    ],[:\n+    if test x$use_reduce_exports = xauto; then\n+      use_reduce_exports=no\n+    else\n+      if test x$use_reduce_exports = xyes; then\n+        AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduced-exports.])\n+      fi\n+    fi\n+    AC_MSG_RESULT(no)\n+    AC_MSG_WARN([boost versions < 1.49 are known to have symbol visibility issues. Disabling reduced exports.])\n+  ])\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+fi\n+\n+if test x$use_reduce_exports != xno; then\n+    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n+    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\n+fi\n+\n+if test x$use_tests = xyes; then\n+\n+  if test x$HEXDUMP = x; then\n+    AC_MSG_ERROR(hexdump is required for tests)\n+  fi\n+\n+\n+  AX_BOOST_UNIT_TEST_FRAMEWORK\n+\n+  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n+  AC_MSG_CHECKING([for dynamic linked boost test])\n+  TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([\n+       #define BOOST_TEST_DYN_LINK\n+       #define BOOST_TEST_MAIN\n+        #include <boost/test/unit_test.hpp>\n+\n+       ])],\n+    [AC_MSG_RESULT(yes)]\n+    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n+    [AC_MSG_RESULT(no)])\n+  LIBS=\"$TEMP_LIBS\"\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+fi\n+\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB\"\n+\n+dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n+dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n+dnl a working version is available, else fall back to sleep. sleep was removed\n+dnl after 1.56.\n+dnl If neither is available, abort.\n+dnl If sleep_for is used, boost_chrono becomes a requirement.\n+if test x$ax_cv_boost_chrono = xyes; then\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$BOOST_LIBS $BOOST_CHRONO_LIB $LIBS\"\n+TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+  #include <boost/thread/thread.hpp>\n+  #include <boost/version.hpp>\n+  ]],[[\n+  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\n+      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));\n+  #else\n+   choke me\n+  #endif\n+  ]])],\n+  [boost_sleep=yes; BOOST_LIBS=\"$BOOST_LIBS $BOOST_CHRONO_LIB\";\n+     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\n+  [boost_sleep=no])\n+LIBS=\"$TEMP_LIBS\"\n+CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+fi\n+\n+if test x$boost_sleep != xyes; then\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$BOOST_LIBS $LIBS\"\n+TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+  #include <boost/version.hpp>\n+  #include <boost/thread.hpp>\n+  #include <boost/date_time/posix_time/posix_time_types.hpp>\n+  ]],[[\n+  #if BOOST_VERSION <= 105600\n+      boost::this_thread::sleep(boost::posix_time::milliseconds(0));\n+  #else\n+   choke me\n+  #endif\n+  ]])],\n+  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],\n+  [boost_sleep=no])\n+LIBS=\"$TEMP_LIBS\"\n+CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+fi\n+\n+if test x$boost_sleep != xyes; then\n+  AC_MSG_ERROR(No working boost sleep implementation found.)\n+fi\n+\n+AC_ARG_WITH([utils],\n+  [AS_HELP_STRING([--with-utils],\n+  [build bitcoin-cli bitcoin-tx (default=yes)])],\n+  [build_bitcoin_utils=$withval],\n+  [build_bitcoin_utils=yes])\n+\n+AC_ARG_WITH([daemon],\n+  [AS_HELP_STRING([--with-daemon],\n+  [build bitcoind daemon (default=yes)])],\n+  [build_bitcoind=$withval],\n+  [build_bitcoind=yes])\n+\n+BITCOIN_QT_INIT\n+\n+if test x$use_pkgconfig = xyes; then\n+\n+  if test x\"$PKG_CONFIG\" = \"x\"; then\n+    AC_MSG_ERROR(pkg-config not found.)\n+  fi\n+\n+  : #NOP\n+  m4_ifdef(\n+    [PKG_CHECK_MODULES],\n+    [\n+      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n+      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n+      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n+      if test x$use_qr != xno; then\n+        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n+      fi\n+    ]\n+  )\n+else\n+  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n+  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n+\n+  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n+  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n+\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n+  if test x$use_qr != xno; then\n+    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n+    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n+  fi\n+fi\n+\n+BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n+\n+AC_MSG_CHECKING([whether to build bitcoind])\n+AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n+AC_MSG_RESULT($build_bitcoind)\n+\n+AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n+AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n+AC_MSG_RESULT($build_bitcoin_utils)\n+\n+dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n+BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt4])\n+\n+AC_LANG_POP\n+\n+if test \"x$use_ccache\" != \"xno\"; then\n+  AC_MSG_CHECKING(if ccache should be used)\n+  if test x$CCACHE = x; then\n+    if test \"x$use_ccache\" = \"xyes\"; then\n+      AC_MSG_ERROR([ccache not found.]);\n+    else\n+      use_ccache=no\n+    fi\n+  else\n+    use_ccache=yes\n+    CC=\"$ac_cv_path_CCACHE $CC\"\n+    CXX=\"$ac_cv_path_CCACHE $CXX\"\n+  fi\n+  AC_MSG_RESULT($use_ccache)\n+fi\n+if test \"x$use_ccache\" = \"xyes\"; then\n+    AX_CHECK_PREPROC_FLAG([-Qunused-arguments],[CPPFLAGS=\"-Qunused-arguments $CPPFLAGS\"])\n+fi\n+\n+dnl enable wallet\n+AC_MSG_CHECKING([if wallet should be enabled])\n+if test x$enable_wallet != xno; then\n+  AC_MSG_RESULT(yes)\n+  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n+\n+else\n+  AC_MSG_RESULT(no)\n+fi\n+\n+dnl enable upnp support\n+AC_MSG_CHECKING([whether to build with support for UPnP])\n+if test x$have_miniupnpc = xno; then\n+  if test x$use_upnp = xyes; then\n+     AC_MSG_ERROR(\"UPnP requested but cannot be built. use --without-miniupnpc\")\n+  fi\n+  AC_MSG_RESULT(no)\n+else\n+  if test x$use_upnp != xno; then\n+    AC_MSG_RESULT(yes)\n+    AC_MSG_CHECKING([whether to build with UPnP enabled by default])\n+    use_upnp=yes\n+    upnp_setting=0\n+    if test x$use_upnp_default != xno; then\n+      use_upnp_default=yes\n+      upnp_setting=1\n+    fi\n+    AC_MSG_RESULT($use_upnp_default)\n+    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n+    if test x$TARGET_OS = xwindows; then\n+      MINIUPNPC_CPPFLAGS=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\n+    fi\n+  else\n+    AC_MSG_RESULT(no)\n+  fi\n+fi\n+\n+dnl these are only used when qt is enabled\n+if test x$bitcoin_enable_qt != xno; then\n+  BUILD_QT=qt\n+  dnl enable dbus support\n+  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n+  if test x$bitcoin_enable_qt_dbus != xno; then\n+    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n+  fi\n+  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n+\n+  dnl enable qr support\n+  AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n+  if test x$have_qrencode = xno; then\n+    if test x$use_qr = xyes; then\n+     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n+    fi\n+    AC_MSG_RESULT(no)\n+  else\n+    if test x$use_qr != xno; then\n+      AC_MSG_RESULT(yes)\n+      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n+      use_qr=yes\n+    else\n+      AC_MSG_RESULT(no)\n+    fi\n+  fi\n+\n+  if test x$XGETTEXT = x; then\n+    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n+  fi\n+\n+  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n+  if test x$use_tests$bitcoin_enable_qt_test = xyesyes; then\n+    AC_MSG_RESULT([yes])\n+    BUILD_TEST_QT=\"test\"\n+  else\n+    AC_MSG_RESULT([no])\n+  fi\n+fi\n+\n+AC_MSG_CHECKING([whether to build test_bitcoin])\n+if test x$use_tests = xyes; then\n+  AC_MSG_RESULT([yes])\n+  BUILD_TEST=\"test\"\n+else\n+  AC_MSG_RESULT([no])\n+fi\n+\n+AC_MSG_CHECKING([whether to reduce exports])\n+if test x$use_reduce_exports != xno; then\n+  AC_MSG_RESULT([yes])\n+else\n+  AC_MSG_RESULT([no])\n+fi\n+\n+if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n+  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-daemon --with-gui or --enable-tests])\n+fi\n+\n+AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n+AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n+AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n+AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n+AM_CONDITIONAL([ENABLE_TESTS],[test x$use_tests = xyes])\n+AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n+AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$use_tests$bitcoin_enable_qt_test = xyesyes])\n+AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n+AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n+AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\n+AM_CONDITIONAL([USE_COMPARISON_TOOL_REORG_TESTS],[test x$use_comparison_tool_reorg_test != xno])\n+AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n+AM_CONDITIONAL([USE_LIBSECP256K1],[test x$use_libsecp256k1 = xyes])\n+\n+AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n+AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n+AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n+AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n+AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n+AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\n+AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n+AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n+AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n+AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n+AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n+AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n+\n+AC_SUBST(RELDFLAGS)\n+AC_SUBST(LIBTOOL_LDFLAGS)\n+AC_SUBST(USE_UPNP)\n+AC_SUBST(USE_QRCODE)\n+AC_SUBST(BOOST_LIBS)\n+AC_SUBST(TESTDEFS)\n+AC_SUBST(LEVELDB_TARGET_FLAGS)\n+AC_SUBST(BUILD_TEST)\n+AC_SUBST(BUILD_QT)\n+AC_SUBST(BUILD_TEST_QT)\n+AC_SUBST(MINIUPNPC_CPPFLAGS)\n+AC_SUBST(MINIUPNPC_LIBS)\n+AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n+AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n+AC_CONFIG_FILES([qa/pull-tester/tests-config.sh],[chmod +x qa/pull-tester/tests-config.sh])\n+\n+dnl boost's m4 checks do something really nasty: they export these vars. As a\n+dnl result, they leak into secp256k1's configure and crazy things happen.\n+dnl Until this is fixed upstream and we've synced, we'll just un-export them.\n+CPPFLAGS_TEMP=\"$CPPFLAGS\"\n+unset CPPFLAGS\n+CPPFLAGS=\"$CPPFLAGS_TEMP\"\n+\n+LDFLAGS_TEMP=\"$LDFLAGS\"\n+unset LDFLAGS\n+LDFLAGS=\"$LDFLAGS_TEMP\"\n+\n+LIBS_TEMP=\"$LIBS\"\n+unset LIBS\n+LIBS=\"$LIBS_TEMP\"\n+\n+PKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\"\n+unset PKG_CONFIG_PATH\n+PKG_CONFIG_PATH=\"$PKGCONFIG_PATH_TEMP\"\n+\n+PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n+unset PKG_CONFIG_LIBDIR\n+PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n+\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic\"\n+AC_CONFIG_SUBDIRS([src/secp256k1])\n+\n+AC_OUTPUT\n+\n+dnl Taken from https://wiki.debian.org/RpathIssue\n+case $host in\n+   *-*-linux-gnu)\n+     AC_MSG_RESULT([Fixing libtool for -rpath problems.])\n+     sed < libtool > libtool-2 \\\n+     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=\" -D__LIBTOOL_IS_A_FOOL__ \"/'\n+     mv libtool-2 libtool\n+     chmod 755 libtool\n+   ;;\n+esac"
      },
      {
        "sha": "dae975e9efc2c1efc2b2a027f06623749edec75b",
        "filename": "contrib/README.md",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,56 @@\n+Wallet Tools\n+---------------------\n+\n+### [BitRPC](/contrib/bitrpc) ###\n+Allows for sending of all standard Bitcoin commands via RPC rather than as command line args.\n+\n+### [SpendFrom](/contrib/spendfrom) ###\n+\n+Use the raw transactions API to send coins received on a particular\n+address (or addresses).\n+\n+Repository Tools\n+---------------------\n+\n+### [Developer tools](/contrib/devtools) ###\n+Specific tools for developers working on this repository.\n+Contains the script `github-merge.sh` for merging github pull requests securely and signing them using GPG.\n+\n+### [Linearize](/contrib/linearize) ###\n+Construct a linear, no-fork, best version of the blockchain.\n+\n+### [Qos](/contrib/qos) ###\n+\n+A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+\n+### [Seeds](/contrib/seeds) ###\n+Utility to generate the pnSeed[] array that is compiled into the client.\n+\n+Build Tools and Keys\n+---------------------\n+\n+### [Debian](/contrib/debian) ###\n+Contains files used to package bitcoind/bitcoin-qt\n+for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+\n+### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n+Gavin's notes on getting gitian builds up and running using KVM.\n+\n+### [Gitian-downloader](/contrib/gitian-downloader)\n+Various PGP files of core developers. \n+\n+### [MacDeploy](/contrib/macdeploy) ###\n+Scripts and notes for Mac builds. \n+\n+Test and Verify Tools \n+---------------------\n+\n+### [TestGen](/contrib/testgen) ###\n+Utilities to generate test vectors for the data-driven Bitcoin tests.\n+\n+### [Test Patches](/contrib/test-patches) ###\n+These patches are applied when the automated pull-tester\n+tests each pull and when master is tested using jenkins.\n+\n+### [Verify SF Binaries](/contrib/verifysfbinaries) ###\n+This script attempts to download and verify the signature file SHA256SUMS.asc from SourceForge."
      },
      {
        "sha": "3a72d10f4732b80e50d943d9d600e8d38b9957b9",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,21 @@\n+FORMS += \\\n+    ../src/qt/forms/aboutdialog.ui \\\n+    ../src/qt/forms/addressbookpage.ui \\\n+    ../src/qt/forms/askpassphrasedialog.ui \\\n+    ../src/qt/forms/coincontroldialog.ui \\\n+    ../src/qt/forms/editaddressdialog.ui \\\n+    ../src/qt/forms/helpmessagedialog.ui \\\n+    ../src/qt/forms/intro.ui \\\n+    ../src/qt/forms/openuridialog.ui \\\n+    ../src/qt/forms/optionsdialog.ui \\\n+    ../src/qt/forms/overviewpage.ui \\\n+    ../src/qt/forms/receivecoinsdialog.ui \\\n+    ../src/qt/forms/receiverequestdialog.ui \\\n+    ../src/qt/forms/rpcconsole.ui \\\n+    ../src/qt/forms/sendcoinsdialog.ui \\\n+    ../src/qt/forms/sendcoinsentry.ui \\\n+    ../src/qt/forms/signverifymessagedialog.ui \\\n+    ../src/qt/forms/transactiondescdialog.ui \\\n+\n+RESOURCES += \\\n+    ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "37ece258996af3403c3e26fa06d1a0cd7400b8d4",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 38,
        "deletions": 8,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,5 +1,5 @@\n-# bash programmable completion for bitcoind(1)\n-# Copyright (c) 2012 Christian von Roques <roques@mti.ag>\n+# bash programmable completion for bitcoind(1) and bitcoin-cli(1)\n+# Copyright (c) 2012,2014 Christian von Roques <roques@mti.ag>\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -37,9 +37,39 @@ _bitcoind() {\n     COMPREPLY=()\n     _get_comp_words_by_ref -n = cur prev words cword\n \n+    if ((cword > 4)); then\n+        case ${words[cword-4]} in\n+            listtransactions)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            signrawtransaction)\n+                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 3)); then\n+        case ${words[cword-3]} in\n+            addmultisigaddress)\n+                _bitcoin_accounts\n+                return 0\n+                ;;\n+            getbalance|gettxout|importaddress|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n     if ((cword > 2)); then\n         case ${words[cword-2]} in\n-            listreceivedbyaccount|listreceivedbyaddress)\n+            addnode)\n+                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            getblock|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n                 COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n@@ -51,11 +81,11 @@ _bitcoind() {\n     fi\n \n     case \"$prev\" in\n-        backupwallet)\n+        backupwallet|dumpwallet|importwallet)\n             _filedir\n             return 0\n             ;;\n-        setgenerate)\n+        getmempool|lockunspent|setgenerate)\n             COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n             return 0\n             ;;\n@@ -66,7 +96,7 @@ _bitcoind() {\n     esac\n \n     case \"$cur\" in\n-        -conf=*|-pid=*|-rpcsslcertificatechainfile=*|-rpcsslprivatekeyfile=*)\n+        -conf=*|-pid=*|-loadblock=*|-wallet=*|-rpcsslcertificatechainfile=*|-rpcsslprivatekeyfile=*)\n             cur=\"${cur#*=}\"\n             _filedir\n             return 0\n@@ -89,7 +119,7 @@ _bitcoind() {\n \n             # only parse help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '{ print $1; }')\n+                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n             fi\n \n             COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n@@ -103,7 +133,7 @@ _bitcoind() {\n     esac\n }\n \n-complete -F _bitcoind bitcoind\n+complete -F _bitcoind bitcoind bitcoin-cli\n }\n \n # Local variables:"
      },
      {
        "sha": "f5ef2f0405a941e2c9ca8c4c1178a5a97a9d590e",
        "filename": "contrib/bitrpc/README.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/bitrpc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/bitrpc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,8 @@\n+### BitRPC\n+Allows for sending of all standard Bitcoin commands via RPC rather than as command line args.\n+\n+### Looking for Wallet Tools?\n+BitRPC.py is able to do the exact same thing as `walletchangepass.py` and `walletunlock.py`. Their respective commands in BitRPC.py are:\n+\n+\tbitrpc.py walletpassphrasechange\n+\tbitrpc.py walletpassphrase\n\\ No newline at end of file"
      },
      {
        "sha": "02577b1b6aab76987a71e5aea9c9ce023b4fd66e",
        "filename": "contrib/bitrpc/bitrpc.py",
        "status": "modified",
        "additions": 253,
        "deletions": 240,
        "changes": 493,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/bitrpc/bitrpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/bitrpc/bitrpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/bitrpc.py?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,6 +1,7 @@\n from jsonrpc import ServiceProxy\n import sys\n import string\n+import getpass\n \n # ===== BEGIN USER SETTINGS =====\n # if you do not set these you will be prompted for a password for every command\n@@ -10,315 +11,327 @@\n \n \n if rpcpass == \"\":\n-\taccess = ServiceProxy(\"http://127.0.0.1:8332\")\n+    access = ServiceProxy(\"http://127.0.0.1:8332\")\n else:\n-\taccess = ServiceProxy(\"http://\"+rpcuser+\":\"+rpcpass+\"@127.0.0.1:8332\")\n+    access = ServiceProxy(\"http://\"+rpcuser+\":\"+rpcpass+\"@127.0.0.1:8332\")\n cmd = sys.argv[1].lower()\n \n if cmd == \"backupwallet\":\n-\ttry:\n-\t\tpath = raw_input(\"Enter destination path/filename: \")\n-\t\tprint access.backupwallet(path)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        path = raw_input(\"Enter destination path/filename: \")\n+        print access.backupwallet(path)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n+        \n+elif cmd == \"encryptwallet\":\n+    try:\n+        pwd = getpass.getpass(prompt=\"Enter passphrase: \")\n+        pwd2 = getpass.getpass(prompt=\"Repeat passphrase: \")\n+        if pwd == pwd2:\n+            access.encryptwallet(pwd)\n+            print \"\\n---Wallet encrypted. Server stopping, restart to run with encrypted wallet---\\n\"\n+        else:\n+            print \"\\n---Passphrases do not match---\\n\"\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getaccount\":\n-\ttry:\n-\t\taddr = raw_input(\"Enter a Bitcoin address: \")\n-\t\tprint access.getaccount(addr)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        addr = raw_input(\"Enter a Bitcoin address: \")\n+        print access.getaccount(addr)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getaccountaddress\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account name: \")\n-\t\tprint access.getaccountaddress(acct)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        acct = raw_input(\"Enter an account name: \")\n+        print access.getaccountaddress(acct)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getaddressesbyaccount\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account name: \")\n-\t\tprint access.getaddressesbyaccount(acct)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        acct = raw_input(\"Enter an account name: \")\n+        print access.getaddressesbyaccount(acct)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getbalance\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account (optional): \")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\ttry:\n-\t\t\tprint access.getbalance(acct, mc)\n-\t\texcept:\n-\t\t\tprint access.getbalance()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        acct = raw_input(\"Enter an account (optional): \")\n+        mc = raw_input(\"Minimum confirmations (optional): \")\n+        try:\n+            print access.getbalance(acct, mc)\n+        except:\n+            print access.getbalance()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getblockbycount\":\n-\ttry:\n-\t\theight = raw_input(\"Height: \")\n-\t\tprint access.getblockbycount(height)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        height = raw_input(\"Height: \")\n+        print access.getblockbycount(height)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getblockcount\":\n-\ttry:\n-\t\tprint access.getblockcount()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        print access.getblockcount()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getblocknumber\":\n-\ttry:\n-\t\tprint access.getblocknumber()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        print access.getblocknumber()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getconnectioncount\":\n-\ttry:\n-\t\tprint access.getconnectioncount()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        print access.getconnectioncount()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getdifficulty\":\n-\ttry:\n-\t\tprint access.getdifficulty()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        print access.getdifficulty()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getgenerate\":\n-\ttry:\n-\t\tprint access.getgenerate()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        print access.getgenerate()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"gethashespersec\":\n-\ttry:\n-\t\tprint access.gethashespersec()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        print access.gethashespersec()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getinfo\":\n-\ttry:\n-\t\tprint access.getinfo()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        print access.getinfo()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getnewaddress\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account name: \")\n-\t\ttry:\n-\t\t\tprint access.getnewaddress(acct)\n-\t\texcept:\n-\t\t\tprint access.getnewaddress()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        acct = raw_input(\"Enter an account name: \")\n+        try:\n+            print access.getnewaddress(acct)\n+        except:\n+            print access.getnewaddress()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getreceivedbyaccount\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account (optional): \")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\ttry:\n-\t\t\tprint access.getreceivedbyaccount(acct, mc)\n-\t\texcept:\n-\t\t\tprint access.getreceivedbyaccount()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        acct = raw_input(\"Enter an account (optional): \")\n+        mc = raw_input(\"Minimum confirmations (optional): \")\n+        try:\n+            print access.getreceivedbyaccount(acct, mc)\n+        except:\n+            print access.getreceivedbyaccount()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getreceivedbyaddress\":\n-\ttry:\n-\t\taddr = raw_input(\"Enter a Bitcoin address (optional): \")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\ttry:\n-\t\t\tprint access.getreceivedbyaddress(addr, mc)\n-\t\texcept:\n-\t\t\tprint access.getreceivedbyaddress()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        addr = raw_input(\"Enter a Bitcoin address (optional): \")\n+        mc = raw_input(\"Minimum confirmations (optional): \")\n+        try:\n+            print access.getreceivedbyaddress(addr, mc)\n+        except:\n+            print access.getreceivedbyaddress()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"gettransaction\":\n-\ttry:\n-\t\ttxid = raw_input(\"Enter a transaction ID: \")\n-\t\tprint access.gettransaction(txid)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        txid = raw_input(\"Enter a transaction ID: \")\n+        print access.gettransaction(txid)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"getwork\":\n-\ttry:\n-\t\tdata = raw_input(\"Data (optional): \")\n-\t\ttry:\n-\t\t\tprint access.gettransaction(data)\n-\t\texcept:\n-\t\t\tprint access.gettransaction()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        data = raw_input(\"Data (optional): \")\n+        try:\n+            print access.gettransaction(data)\n+        except:\n+            print access.gettransaction()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"help\":\n-\ttry:\n-\t\tcmd = raw_input(\"Command (optional): \")\n-\t\ttry:\n-\t\t\tprint access.help(cmd)\n-\t\texcept:\n-\t\t\tprint access.help()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        cmd = raw_input(\"Command (optional): \")\n+        try:\n+            print access.help(cmd)\n+        except:\n+            print access.help()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"listaccounts\":\n-\ttry:\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\ttry:\n-\t\t\tprint access.listaccounts(mc)\n-\t\texcept:\n-\t\t\tprint access.listaccounts()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        mc = raw_input(\"Minimum confirmations (optional): \")\n+        try:\n+            print access.listaccounts(mc)\n+        except:\n+            print access.listaccounts()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"listreceivedbyaccount\":\n-\ttry:\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tincemp = raw_input(\"Include empty? (true/false, optional): \")\n-\t\ttry:\n-\t\t\tprint access.listreceivedbyaccount(mc, incemp)\n-\t\texcept:\n-\t\t\tprint access.listreceivedbyaccount()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        mc = raw_input(\"Minimum confirmations (optional): \")\n+        incemp = raw_input(\"Include empty? (true/false, optional): \")\n+        try:\n+            print access.listreceivedbyaccount(mc, incemp)\n+        except:\n+            print access.listreceivedbyaccount()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"listreceivedbyaddress\":\n-\ttry:\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tincemp = raw_input(\"Include empty? (true/false, optional): \")\n-\t\ttry:\n-\t\t\tprint access.listreceivedbyaddress(mc, incemp)\n-\t\texcept:\n-\t\t\tprint access.listreceivedbyaddress()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        mc = raw_input(\"Minimum confirmations (optional): \")\n+        incemp = raw_input(\"Include empty? (true/false, optional): \")\n+        try:\n+            print access.listreceivedbyaddress(mc, incemp)\n+        except:\n+            print access.listreceivedbyaddress()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"listtransactions\":\n-\ttry:\n-\t\tacct = raw_input(\"Account (optional): \")\n-\t\tcount = raw_input(\"Number of transactions (optional): \")\n-\t\tfrm = raw_input(\"Skip (optional):\")\n-\t\ttry:\n-\t\t\tprint access.listtransactions(acct, count, frm)\n-\t\texcept:\n-\t\t\tprint access.listtransactions()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        acct = raw_input(\"Account (optional): \")\n+        count = raw_input(\"Number of transactions (optional): \")\n+        frm = raw_input(\"Skip (optional):\")\n+        try:\n+            print access.listtransactions(acct, count, frm)\n+        except:\n+            print access.listtransactions()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"move\":\n-\ttry:\n-\t\tfrm = raw_input(\"From: \")\n-\t\tto = raw_input(\"To: \")\n-\t\tamt = raw_input(\"Amount:\")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tcomment = raw_input(\"Comment (optional): \")\n-\t\ttry:\n-\t\t\tprint access.move(frm, to, amt, mc, comment)\n-\t\texcept:\n-\t\t\tprint access.move(frm, to, amt)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        frm = raw_input(\"From: \")\n+        to = raw_input(\"To: \")\n+        amt = raw_input(\"Amount:\")\n+        mc = raw_input(\"Minimum confirmations (optional): \")\n+        comment = raw_input(\"Comment (optional): \")\n+        try:\n+            print access.move(frm, to, amt, mc, comment)\n+        except:\n+            print access.move(frm, to, amt)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"sendfrom\":\n-\ttry:\n-\t\tfrm = raw_input(\"From: \")\n-\t\tto = raw_input(\"To: \")\n-\t\tamt = raw_input(\"Amount:\")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tcomment = raw_input(\"Comment (optional): \")\n-\t\tcommentto = raw_input(\"Comment-to (optional): \")\n-\t\ttry:\n-\t\t\tprint access.sendfrom(frm, to, amt, mc, comment, commentto)\n-\t\texcept:\n-\t\t\tprint access.sendfrom(frm, to, amt)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        frm = raw_input(\"From: \")\n+        to = raw_input(\"To: \")\n+        amt = raw_input(\"Amount:\")\n+        mc = raw_input(\"Minimum confirmations (optional): \")\n+        comment = raw_input(\"Comment (optional): \")\n+        commentto = raw_input(\"Comment-to (optional): \")\n+        try:\n+            print access.sendfrom(frm, to, amt, mc, comment, commentto)\n+        except:\n+            print access.sendfrom(frm, to, amt)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"sendmany\":\n-\ttry:\n-\t\tfrm = raw_input(\"From: \")\n-\t\tto = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tcomment = raw_input(\"Comment (optional): \")\n-\t\ttry:\n-\t\t\tprint access.sendmany(frm,to,mc,comment)\n-\t\texcept:\n-\t\t\tprint access.sendmany(frm,to)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        frm = raw_input(\"From: \")\n+        to = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n+        mc = raw_input(\"Minimum confirmations (optional): \")\n+        comment = raw_input(\"Comment (optional): \")\n+        try:\n+            print access.sendmany(frm,to,mc,comment)\n+        except:\n+            print access.sendmany(frm,to)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"sendtoaddress\":\n-\ttry:\n-\t\tto = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n-\t\tamt = raw_input(\"Amount:\")\n-\t\tcomment = raw_input(\"Comment (optional): \")\n-\t\tcommentto = raw_input(\"Comment-to (optional): \")\n-\t\ttry:\n-\t\t\tprint access.sendtoaddress(to,amt,comment,commentto)\n-\t\texcept:\n-\t\t\tprint access.sendtoaddress(to,amt)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        to = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n+        amt = raw_input(\"Amount:\")\n+        comment = raw_input(\"Comment (optional): \")\n+        commentto = raw_input(\"Comment-to (optional): \")\n+        try:\n+            print access.sendtoaddress(to,amt,comment,commentto)\n+        except:\n+            print access.sendtoaddress(to,amt)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"setaccount\":\n-\ttry:\n-\t\taddr = raw_input(\"Address: \")\n-\t\tacct = raw_input(\"Account:\")\n-\t\tprint access.setaccount(addr,acct)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        addr = raw_input(\"Address: \")\n+        acct = raw_input(\"Account:\")\n+        print access.setaccount(addr,acct)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"setgenerate\":\n-\ttry:\n-\t\tgen= raw_input(\"Generate? (true/false): \")\n-\t\tcpus = raw_input(\"Max processors/cores (-1 for unlimited, optional):\")\n-\t\ttry:\n-\t\t\tprint access.setgenerate(gen, cpus)\n-\t\texcept:\n-\t\t\tprint access.setgenerate(gen)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        gen= raw_input(\"Generate? (true/false): \")\n+        cpus = raw_input(\"Max processors/cores (-1 for unlimited, optional):\")\n+        try:\n+            print access.setgenerate(gen, cpus)\n+        except:\n+            print access.setgenerate(gen)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"settxfee\":\n-\ttry:\n-\t\tamt = raw_input(\"Amount:\")\n-\t\tprint access.settxfee(amt)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        amt = raw_input(\"Amount:\")\n+        print access.settxfee(amt)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"stop\":\n-\ttry:\n-\t\tprint access.stop()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        print access.stop()\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"validateaddress\":\n-\ttry:\n-\t\taddr = raw_input(\"Address: \")\n-\t\tprint access.validateaddress(addr)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        addr = raw_input(\"Address: \")\n+        print access.validateaddress(addr)\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"walletpassphrase\":\n-\ttry:\n-\t\tpwd = raw_input(\"Enter wallet passphrase: \")\n-\t\taccess.walletpassphrase(pwd, 60)\n-\t\tprint \"\\n---Wallet unlocked---\\n\"\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n+    try:\n+        pwd = getpass.getpass(prompt=\"Enter wallet passphrase: \")\n+        access.walletpassphrase(pwd, 60)\n+        print \"\\n---Wallet unlocked---\\n\"\n+    except:\n+        print \"\\n---An error occurred---\\n\"\n \n elif cmd == \"walletpassphrasechange\":\n-\ttry:\n-\t\tpwd = raw_input(\"Enter old wallet passphrase: \")\n-\t\tpwd2 = raw_input(\"Enter new wallet passphrase: \")\n-\t\taccess.walletpassphrasechange(pwd, pwd2)\n-\t\tprint\n-\t\tprint \"\\n---Passphrase changed---\\n\"\n-\texcept:\n-\t\tprint\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\t\tprint\n+    try:\n+        pwd = getpass.getpass(prompt=\"Enter old wallet passphrase: \")\n+        pwd2 = getpass.getpass(prompt=\"Enter new wallet passphrase: \")\n+        access.walletpassphrasechange(pwd, pwd2)\n+        print\n+        print \"\\n---Passphrase changed---\\n\"\n+    except:\n+        print\n+        print \"\\n---An error occurred---\\n\"\n+        print\n \n else:\n-\tprint \"Command not found or not supported\"\n\\ No newline at end of file\n+    print \"Command not found or not supported\""
      },
      {
        "sha": "1cb9b75fbdeb01760815c5154c160cc2fd4c1179",
        "filename": "contrib/debian/README",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/debian/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/debian/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,20 +0,0 @@\n-This directory contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems.\n-\n-If you compile bitcoind/bitcoin-qt yourself, there are some\n-useful files here:\n-\n-bitcoin: URI support\n---------------------\n-\n-bitcoin-qt.desktop  (Gnome / Open Desktop)\n-To install:\n-  sudo desktop-file-install bitcoin-qt.desktop\n-  sudo update-desktop-database\n-\n-If you build yourself, you will either need to modify the paths in\n-the .desktop file or copy or symlink your bitcoin-qt binary to /usr/bin\n-and the ../../share/pixmaps/bitcoin128.png to /usr/share/pixmaps\n-\n-bitcoin-qt.protocol (KDE)\n-"
      },
      {
        "sha": "fab9cc238156789c96e4b908fbe1e4d863ecebf9",
        "filename": "contrib/debian/README.md",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,21 @@\n+\n+Debian\n+====================\n+This directory contains files used to package bitcoind/bitcoin-qt\n+for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+\n+## bitcoin: URI support ##\n+\n+\n+bitcoin-qt.desktop  (Gnome / Open Desktop)\n+To install:\n+\n+\tsudo desktop-file-install bitcoin-qt.desktop\n+\tsudo update-desktop-database\n+\n+If you build yourself, you will either need to modify the paths in\n+the .desktop file or copy or symlink your bitcoin-qt binary to `/usr/bin`\n+and the `../../share/pixmaps/bitcoin128.png` to `/usr/share/pixmaps`\n+\n+bitcoin-qt.protocol (KDE)\n+"
      },
      {
        "sha": "61e1aca6ad0ce17519af59f6da4afdd9521b79a8",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -4,9 +4,9 @@ Name=Bitcoin\n Comment=Bitcoin P2P Cryptocurrency\n Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=/usr/bin/bitcoin-qt %u\n+Exec=bitcoin-qt %u\n Terminal=false\n Type=Application\n-Icon=/usr/share/pixmaps/bitcoin128.png\n+Icon=bitcoin128\n MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;\n+Categories=Office;Finance;"
      },
      {
        "sha": "e0b32373be68d74e075a779f083b3dededc574d7",
        "filename": "contrib/debian/bitcoin-qt.install",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/bitcoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/bitcoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.install?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,4 +1,4 @@\n-bitcoin-qt usr/bin\n+usr/local/bin/bitcoin-qt usr/bin\n share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n share/pixmaps/bitcoin16.xpm usr/share/pixmaps\n share/pixmaps/bitcoin128.png usr/share/pixmaps"
      },
      {
        "sha": "798ea851f6ef8a01e19984221efd327625fda92d",
        "filename": "contrib/debian/bitcoind.install",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1 +1,2 @@\n-src/bitcoind usr/bin\n+usr/local/bin/bitcoind usr/bin\n+usr/local/bin/bitcoin-cli usr/bin"
      },
      {
        "sha": "fe910b65a5578f33d21d34941f8eddd29b3b6910",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,3 +1,53 @@\n+bitcoin (0.9.3-precise1) precise; urgency=medium\n+\n+  * New upstream releases.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 26 Sep 2014 12:01:00 -0700\n+\n+bitcoin (0.9.1-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+  * Backport pull #4019\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sat, 19 Apr 2014 17:29:00 -0400\n+\n+bitcoin (0.9.0-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Thu, 20 Mar 2014 13:10:00 -0400\n+\n+bitcoin (0.8.6-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+  * Make .desktop paths non-fixed (suggested by prusnak@github)\n+\n+ -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n+\n+bitcoin (0.8.5-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sun, 15 Sep 2013 14:02:00 -0400\n+\n+bitcoin (0.8.4-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 4 Sep 2013 10:25:00 -0400\n+\n+bitcoin (0.8.3-natty1) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 26 Jun 2013 00:18:00 +0100\n+\n+bitcoin (0.8.2-natty1) natty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Wed, 29 Mar 2013 23:23:00 +0100\n+\n bitcoin (0.8.1-natty3) natty; urgency=low\n \n   * New pixmaps"
      },
      {
        "sha": "a653260ad30ee1f8db5632fc362fcdc1bf7293ff",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -5,6 +5,8 @@ Maintainer: Jonas Smedegaard <dr@jones.dk>\n Uploaders: Micah Anderson <micah@debian.org>\n Build-Depends: debhelper,\n  devscripts,\n+ automake,\n+ libtool,\n  bash-completion,\n  libboost-system-dev (>> 1.35) | libboost-system1.35-dev,\n  libdb4.8++-dev,\n@@ -17,7 +19,8 @@ Build-Depends: debhelper,\n  libboost-test-dev (>> 1.35) | libboost-test1.35-dev,\n  qt4-qmake,\n  libqt4-dev,\n- libqrencode-dev\n+ libqrencode-dev,\n+ libprotobuf-dev, protobuf-compiler\n Standards-Version: 3.9.2\n Homepage: http://www.bitcoin.org/\n Vcs-Git: git://github.com/bitcoin/bitcoin.git\n@@ -34,10 +37,10 @@ Description: peer-to-peer network based digital currency - daemon\n  check for double-spending.\n  .\n  Full transaction history is stored locally at each client.  This\n- requires 2+ GB of space, slowly growing.\n+ requires 20+ GB of space, slowly growing.\n  .\n- This package provides bitcoind, a combined daemon and CLI tool to\n- interact with the daemon.\n+ This package provides the daemon, bitcoind, and the CLI tool\n+ bitcoin-cli to interact with the daemon.\n \n Package: bitcoin-qt\n Architecture: any\n@@ -50,6 +53,6 @@ Description: peer-to-peer network based digital currency - Qt GUI\n  check for double-spending.\n  .\n  Full transaction history is stored locally at each client.  This\n- requires 2+ GB of space, slowly growing.\n+ requires 20+ GB of space, slowly growing.\n  .\n  This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt."
      },
      {
        "sha": "a6ee201991cc4e1f0e791d4a85f46f4aa433bd71",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -6,9 +6,9 @@ Source: http://sourceforge.net/projects/bitcoin/files/\n  https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2012, Bitcoin Developers\n+Copyright: 2009-2012, Bitcoin Core Developers\n License: Expat\n-Comment: The Bitcoin Developers encompasses the current developers listed on bitcoin.org,\n+Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n \n Files: src/json/*\n@@ -71,7 +71,7 @@ Copyright: Bitboy (optimized for 16x16 by Wladimir van der Laan)\n License: PUB-DOM\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n-Files:  scripts/img/reload.xcf, src/qt/res/movies/update_spinner.mng\n+Files:  scripts/img/reload.xcf, src/qt/res/movies/*.png\n Copyright: Everaldo (Everaldo Coelho)\n License: GPL-3+\n Comment: Icon Pack: Kids"
      },
      {
        "sha": "31cca981e0a2a5bfd86d142ef351524068f0ad50",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 64,
        "deletions": 33,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,79 +1,110 @@\n-# bitcoin.conf configuration file. Lines beginning with # are comments.\n-\n-\n+##\n+## bitcoin.conf configuration file. Lines beginning with # are comments.\n+##\n+ \n # Network-related settings:\n \n # Run on the test network instead of the real bitcoin network.\n-#testnet=1\n+#testnet=0\n \n-# Connect via a socks4 proxy\n+# Run a regression test network\n+#regtest=0\n+\n+# Connect via a SOCKS5 proxy\n #proxy=127.0.0.1:9050\n \n+##############################################################\n+##            Quick Primer on addnode vs connect            ##\n+##  Let's say for instance you use addnode=4.2.2.4          ##\n+##  addnode will connect you to and tell you about the      ##\n+##    nodes connected to 4.2.2.4.  In addition it will tell ##\n+##    the other nodes connected to it that you exist so     ##\n+##    they can connect to you.                              ##\n+##  connect will not do the above when you 'connect' to it. ##\n+##    It will *only* connect you to 4.2.2.4 and no one else.##\n+##                                                          ##\n+##  So if you're behind a firewall, or have other problems  ##\n+##  finding nodes, add some using 'addnode'.                ##\n+##                                                          ##\n+##  If you want to stay private, use 'connect' to only      ##\n+##  connect to \"trusted\" nodes.                             ##\n+##                                                          ##\n+##  If you run multiple nodes on a LAN, there's no need for ##\n+##  all of them to open lots of connections.  Instead       ##\n+##  'connect' them all to one node that is port forwarded   ##\n+##  and has lots of connections.                            ##\n+##       Thanks goes to [Noodle] on Freenode.               ##\n+##############################################################\n+\n # Use as many addnode= settings as you like to connect to specific peers\n #addnode=69.164.218.197\n #addnode=10.0.0.2:8333\n \n-# ... or use as many connect= settings as you like to connect ONLY\n-# to specific peers:\n+# Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n #connect=69.164.218.197\n #connect=10.0.0.1:8333\n \n+# Listening mode, enabled by default except when 'connect' is being used\n+#listen=1\n+\n # Maximum number of inbound+outbound connections.\n #maxconnections=\n \n-\n+#\n # JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n+#\n \n-# server=1 tells Bitcoin to accept JSON-RPC commands.\n-#server=1\n+# server=1 tells Bitcoin-QT and bitcoind to accept JSON-RPC commands\n+#server=0\n \n # You must set rpcuser and rpcpassword to secure the JSON-RPC api\n #rpcuser=Ulysseys\n-#rpcpassword=YourSuperGreatPasswordNumber_385593\n+#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n+\n+# How many seconds bitcoin will wait for a complete RPC HTTP request.\n+# after the HTTP connection is established. \n+#rpctimeout=30\n \n-# By default, only RPC connections from localhost are allowed.  Specify\n-# as many rpcallowip= settings as you like to allow connections from\n-# other hosts (and you may use * as a wildcard character):\n-#rpcallowip=10.1.1.34\n-#rpcallowip=192.168.1.*\n+# By default, only RPC connections from localhost are allowed.\n+# Specify as many rpcallowip= settings as you like to allow connections from other hosts,\n+# either as a single IPv4/IPv6 or with a subnet specification.\n+\n+# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n+# because the rpcpassword is transmitted over the network unencrypted.\n+\n+# server=1 tells Bitcoin-QT to accept JSON-RPC commands.\n+# it is also read by bitcoind to determine if RPC should be enabled \n+#rpcallowip=10.1.1.34/255.255.255.0\n+#rpcallowip=1.2.3.4/24\n+#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n \n # Listen for RPC connections on this TCP port:\n-rpcport=8332\n+#rpcport=8332\n \n # You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n # running on another host using this option:\n-rpcconnect=127.0.0.1\n+#rpcconnect=127.0.0.1\n \n # Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate\n # with Bitcoin -server or bitcoind\n #rpcssl=1\n \n # OpenSSL settings used when rpcssl=1\n-rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n-rpcsslcertificatechainfile=server.cert\n-rpcsslprivatekeyfile=server.pem\n+#rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n+#rpcsslcertificatechainfile=server.cert\n+#rpcsslprivatekeyfile=server.pem\n \n \n # Miscellaneous options\n \n-# Set gen=1 to attempt to generate bitcoins\n-gen=0\n-\n-# Use SSE instructions to try to generate bitcoins faster.\n-#4way=1\n-\n # Pre-generate this many public/private key pairs, so wallet backups will be valid for\n # both prior transactions and several dozen future transactions.\n-keypool=100\n+#keypool=100\n \n # Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n # are more likely than free transactions to be included in generated blocks, so may\n # be validated sooner.\n-paytxfee=0.00\n-\n-# Allow direct connections for the 'pay via IP address' feature.\n-#allowreceivebyip=1\n-\n+#paytxfee=0.00\n \n # User interface options\n "
      },
      {
        "sha": "a023582bc025930bde66119479235c5ee838b19f",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -32,10 +32,7 @@ Set database cache size in megabytes (default: 25)\n Specify connection timeout in milliseconds (default: 5000)\n .TP\n \\fB\\-proxy=\\fR<ip:port>\n-Connect through socks proxy\n-.TP\n-\\fB\\-socks=\\fR<n>\n-Select the version of socks proxy to use (4\\-5, default: 5)\n+Connect through SOCKS5 proxy\n .TP\n \\fB\\-tor=\\fR<ip:port>\n Use proxy to reach tor hidden services (default: same as \\fB\\-proxy\\fR)"
      },
      {
        "sha": "8a0078d5d58a28990dc025bbf9834b4367fc2843",
        "filename": "contrib/debian/manpages/bitcoin.conf.5",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/manpages/bitcoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/manpages/bitcoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin.conf.5?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -2,7 +2,7 @@\n .SH NAME\n bitcoin.conf \\- bitcoin configuration file\n .SH SYNOPSIS\n-All command-line options (except for '\\-datadir' and '\\-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n+All command-line options (except for '\\-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n .TP\n The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character.\n .TP\n@@ -37,9 +37,6 @@ You must set *rpcuser* to secure the JSON-RPC api.\n \\fBrpcpassword=\\fR\\fI'password'\\fR\n You must set *rpcpassword* to secure the JSON-RPC api.\n .TP\n-\\fBrpctimeout=\\fR\\fI'30'\\fR\n-How many seconds *bitcoin* will wait for a complete RPC HTTP request, after the HTTP connection is established.\n-.TP\n \\fBrpcallowip=\\fR\\fI'192.168.1.*'\\fR\n By default, only RPC connections from localhost are allowed. Specify as many *rpcallowip=* settings as you like to allow connections from other hosts (and you may use * as a wildcard character).\n .TP"
      },
      {
        "sha": "a1b17d6077f4a687dcd63dad55b1cc9724a31d3a",
        "filename": "contrib/debian/manpages/bitcoind.1",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/manpages/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/manpages/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoind.1?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -28,7 +28,7 @@ Start minimized\n Specify data directory\n .TP\n \\fB\\-proxy=\\fR<ip:port>\n-Connect through socks4 proxy\n+Connect through SOCKS5 proxy\n .TP\n \\fB\\-addnode=\\fR<ip>\n Add a node to connect to"
      },
      {
        "sha": "52b357cf01a5064a90fecb963af15ca80a0beccc",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 6,
        "deletions": 15,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -11,23 +11,14 @@ DEB_INSTALL_MANPAGES_bitcoind += debian/manpages/*\n %:\n \tdh --with bash-completion $@\n \n-override_dh_auto_build:\n-\tcd src; $(MAKE) -f makefile.unix bitcoind\n-\t$(MAKE)\n-\n override_dh_auto_clean:\n-\tif [ -f Makefile ]; then $(MAKE) clean; else rm -rf build/; rm -f bitcoin-qt; fi\n-\tcd src; $(MAKE) -f makefile.unix clean\n+\tif [ -f Makefile ]; then $(MAKE) distclean; fi\n+\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n \n+# Yea, autogen should be run on the source archive, but I like doing git archive\n override_dh_auto_configure:\n-\tqmake bitcoin-qt.pro USE_QRCODE=1\n+\t./autogen.sh\n+\t./configure\n \n override_dh_auto_test:\n-\tcd src; $(MAKE) -f makefile.unix test_bitcoin\n-\tsrc/test_bitcoin\n-\n-# Ensure wrapper is set executable\n-binary-post-install/bitcoind:\n-\tchmod +x $(cdbs_curdestdir)usr/bin/bitcoind\n-binary-post-install/bitcoin-qt:\n-\tchmod +x $(cdbs_curdestdir)usr/bin/bitcoin-qt\n+\tmake check"
      },
      {
        "sha": "a57b4e561e6183a2b67f80c9f292a221d4ba071f",
        "filename": "contrib/devtools/README.md",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,83 @@\n+Contents\n+===========\n+This directory contains tools for developers working on this repository.\n+\n+github-merge.sh\n+==================\n+\n+A small script to automate merging pull-requests securely and sign them with GPG.\n+\n+For example:\n+\n+  ./github-merge.sh bitcoin/bitcoin 3077\n+\n+(in any git repository) will help you merge pull request #3077 for the\n+bitcoin/bitcoin repository.\n+\n+What it does:\n+* Fetch master and the pull request.\n+* Locally construct a merge commit.\n+* Show the diff that merge results in.\n+* Ask you to verify the resulting source tree (so you can do a make\n+check or whatever).\n+* Ask you whether to GPG sign the merge commit.\n+* Ask you whether to push the result upstream.\n+\n+This means that there are no potential race conditions (where a\n+pullreq gets updated while you're reviewing it, but before you click\n+merge), and when using GPG signatures, that even a compromised github\n+couldn't mess with the sources.\n+\n+Setup\n+---------\n+Configuring the github-merge tool for the bitcoin repository is done in the following way:\n+\n+    git config githubmerge.repository bitcoin/bitcoin\n+    git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n+    git config --global user.signingkey mykeyid (if you want to GPG sign)\n+\n+fix-copyright-headers.py\n+===========================\n+\n+Every year newly updated files need to have its copyright headers updated to reflect the current year.\n+If you run this script from src/ it will automatically update the year on the copyright header for all\n+.cpp and .h files if these have a git commit from the current year.\n+\n+For example a file changed in 2014 (with 2014 being the current year):\n+```// Copyright (c) 2009-2013 The Bitcoin developers```\n+\n+would be changed to:\n+```// Copyright (c) 2009-2014 The Bitcoin developers```\n+\n+symbol-check.py\n+==================\n+\n+A script to check that the (Linux) executables produced by gitian only contain\n+allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n+still compatible with the minimum supported Linux distribution versions.\n+\n+Example usage after a gitian build:\n+\n+    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py \n+\n+If only supported symbols are used the return value will be 0 and the output will be empty.\n+\n+If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:\n+\n+    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n+    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n+    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n+    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n+\n+update-translations.py\n+=======================\n+\n+Run this script from the root of the repository to update all translations from transifex.\n+It will do the following automatically:\n+\n+- fetch all translations\n+- post-process them into valid and committable format\n+- add missing translations to the build system (TODO)\n+\n+See doc/translation-process.md for more information.\n+"
      },
      {
        "sha": "52fdc99144b4762bc157365ca231b256cbb282d2",
        "filename": "contrib/devtools/fix-copyright-headers.py",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/devtools/fix-copyright-headers.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/devtools/fix-copyright-headers.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/fix-copyright-headers.py?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,53 @@\n+#!/usr/bin/env python\n+'''\n+Run this script inside of src/ and it will look for all the files\n+that were changed this year that still have the last year in the\n+copyright headers, and it will fix the headers on that file using\n+a perl regex one liner.\n+\n+For example: if it finds something like this and we're in 2014\n+\n+// Copyright (c) 2009-2013 The Bitcoin developers\n+\n+it will change it to\n+\n+// Copyright (c) 2009-2014 The Bitcoin developers\n+\n+It will do this for all the files in the folder and its children.\n+\n+Author: @gubatron\n+'''\n+import os\n+import time\n+\n+year = time.gmtime()[0]\n+last_year = year - 1\n+command = \"perl -pi -e 's/%s The Bitcoin/%s The Bitcoin/' %s\"\n+listFilesCommand = \"find . | grep %s\"\n+\n+extensions = [\".cpp\",\".h\"]\n+\n+def getLastGitModifiedDate(filePath):\n+  gitGetLastCommitDateCommand = \"git log \" + filePath +\" | grep Date | head -n 1\"\n+  p = os.popen(gitGetLastCommitDateCommand)\n+  result = \"\"\n+  for l in p:\n+    result = l\n+    break\n+  result = result.replace(\"\\n\",\"\")\n+  return result\n+\n+n=1\n+for extension in extensions:\n+  foundFiles = os.popen(listFilesCommand % extension)\n+  for filePath in foundFiles:\n+    filePath = filePath[1:-1]\n+    if filePath.endswith(extension):\n+      filePath = os.getcwd() + filePath\n+      modifiedTime = getLastGitModifiedDate(filePath)\n+      if len(modifiedTime) > 0 and str(year) in modifiedTime:\n+        print n,\"Last Git Modified: \", modifiedTime, \" - \", filePath\n+        os.popen(command % (last_year,year,filePath))\n+        n = n + 1\n+\n+"
      },
      {
        "sha": "3217a061950264ff0b3ec4df074fd03a16e0d524",
        "filename": "contrib/devtools/github-merge.sh",
        "status": "added",
        "additions": 173,
        "deletions": 0,
        "changes": 173,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/devtools/github-merge.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/devtools/github-merge.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.sh?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,173 @@\n+#!/bin/bash\n+\n+# This script will locally construct a merge commit for a pull request on a\n+# github repository, inspect it, sign it and optionally push it.\n+\n+# The following temporary branches are created/overwritten and deleted:\n+# * pull/$PULL/base (the current master we're merging onto)\n+# * pull/$PULL/head (the current state of the remote pull request)\n+# * pull/$PULL/merge (github's merge)\n+# * pull/$PULL/local-merge (our merge)\n+\n+# In case of a clean merge that is accepted by the user, the local branch with\n+# name $BRANCH is overwritten with the merged result, and optionally pushed.\n+\n+REPO=\"$(git config --get githubmerge.repository)\"\n+if [[ \"d$REPO\" == \"d\" ]]; then\n+  echo \"ERROR: No repository configured. Use this command to set:\" >&2\n+  echo \"git config githubmerge.repository <owner>/<repo>\" >&2\n+  echo \"In addition, you can set the following variables:\" >&2\n+  echo \"- githubmerge.host (default git@github.com)\" >&2\n+  echo \"- githubmerge.branch (default master)\" >&2\n+  echo \"- githubmerge.testcmd (default none)\" >&2\n+  exit 1\n+fi\n+\n+HOST=\"$(git config --get githubmerge.host)\"\n+if [[ \"d$HOST\" == \"d\" ]]; then\n+  HOST=\"git@github.com\"\n+fi\n+\n+BRANCH=\"$(git config --get githubmerge.branch)\"\n+if [[ \"d$BRANCH\" == \"d\" ]]; then\n+  BRANCH=\"master\"\n+fi\n+\n+TESTCMD=\"$(git config --get githubmerge.testcmd)\"\n+\n+PULL=\"$1\"\n+\n+if [[ \"d$PULL\" == \"d\" ]]; then\n+  echo \"Usage: $0 pullnumber [branch]\" >&2\n+  exit 2\n+fi\n+\n+if [[ \"d$2\" != \"d\" ]]; then\n+  BRANCH=\"$2\"\n+fi\n+\n+# Initialize source branches.\n+git checkout -q \"$BRANCH\"\n+if git fetch -q \"$HOST\":\"$REPO\" \"+refs/pull/$PULL/*:refs/heads/pull/$PULL/*\"; then\n+  if ! git log -q -1 \"refs/heads/pull/$PULL/head\" >/dev/null 2>&1; then\n+    echo \"ERROR: Cannot find head of pull request #$PULL on $HOST:$REPO.\" >&2\n+    exit 3\n+  fi\n+  if ! git log -q -1 \"refs/heads/pull/$PULL/merge\" >/dev/null 2>&1; then\n+    echo \"ERROR: Cannot find merge of pull request #$PULL on $HOST:$REPO.\" >&2\n+    exit 3\n+  fi\n+else\n+  echo \"ERROR: Cannot find pull request #$PULL on $HOST:$REPO.\" >&2\n+  exit 3\n+fi\n+if git fetch -q \"$HOST\":\"$REPO\" +refs/heads/\"$BRANCH\":refs/heads/pull/\"$PULL\"/base; then\n+  true\n+else\n+  echo \"ERROR: Cannot find branch $BRANCH on $HOST:$REPO.\" >&2\n+  exit 3\n+fi\n+git checkout -q pull/\"$PULL\"/base\n+git branch -q -D pull/\"$PULL\"/local-merge 2>/dev/null\n+git checkout -q -b pull/\"$PULL\"/local-merge\n+TMPDIR=\"$(mktemp -d -t ghmXXXXX)\"\n+\n+function cleanup() {\n+  git checkout -q \"$BRANCH\"\n+  git branch -q -D pull/\"$PULL\"/head 2>/dev/null\n+  git branch -q -D pull/\"$PULL\"/base 2>/dev/null\n+  git branch -q -D pull/\"$PULL\"/merge 2>/dev/null\n+  git branch -q -D pull/\"$PULL\"/local-merge 2>/dev/null\n+  rm -rf \"$TMPDIR\"\n+}\n+\n+# Create unsigned merge commit.\n+(\n+  echo \"Merge pull request #$PULL\"\n+  echo \"\"\n+  git log --no-merges --topo-order --pretty='format:%h %s (%an)' pull/\"$PULL\"/base..pull/\"$PULL\"/head\n+)>\"$TMPDIR/message\"\n+if git merge -q --commit --no-edit --no-ff -m \"$(<\"$TMPDIR/message\")\" pull/\"$PULL\"/head; then\n+  if [ \"d$(git log --pretty='format:%s' -n 1)\" != \"dMerge pull request #$PULL\" ]; then\n+    echo \"ERROR: Creating merge failed (already merged?).\" >&2\n+    cleanup\n+    exit 4\n+  fi\n+else\n+  echo \"ERROR: Cannot be merged cleanly.\" >&2\n+  git merge --abort\n+  cleanup\n+  exit 4\n+fi\n+\n+# Run test command if configured.\n+if [[ \"d$TESTCMD\" != \"d\" ]]; then\n+  # Go up to the repository's root.\n+  while [ ! -d .git ]; do cd ..; done\n+  if ! $TESTCMD; then\n+    echo \"ERROR: Running $TESTCMD failed.\" >&2\n+    cleanup\n+    exit 5\n+  fi\n+  # Show the created merge.\n+  git diff pull/\"$PULL\"/merge..pull/\"$PULL\"/local-merge >\"$TMPDIR\"/diff\n+  git diff pull/\"$PULL\"/base..pull/\"$PULL\"/local-merge\n+  if [[ \"$(<\"$TMPDIR\"/diff)\" != \"\" ]]; then\n+    echo \"WARNING: merge differs from github!\" >&2\n+    read -p \"Type 'ignore' to continue. \" -r >&2\n+    if [[ \"d$REPLY\" =~ ^d[iI][gG][nN][oO][rR][eE]$ ]]; then\n+      echo \"Difference with github ignored.\" >&2\n+    else\n+      cleanup\n+      exit 6\n+    fi\n+  fi\n+  read -p \"Press 'd' to accept the diff. \" -n 1 -r >&2\n+  echo\n+  if [[ \"d$REPLY\" =~ ^d[dD]$ ]]; then\n+    echo \"Diff accepted.\" >&2\n+  else\n+    echo \"ERROR: Diff rejected.\" >&2\n+    cleanup\n+    exit 6\n+  fi\n+else\n+  # Verify the result.\n+  echo \"Dropping you on a shell so you can try building/testing the merged source.\" >&2\n+  echo \"Run 'git diff HEAD~' to show the changes being merged.\" >&2\n+  echo \"Type 'exit' when done.\" >&2\n+  bash -i\n+  read -p \"Press 'm' to accept the merge. \" -n 1 -r >&2\n+  echo\n+  if [[ \"d$REPLY\" =~ ^d[Mm]$ ]]; then\n+    echo \"Merge accepted.\" >&2\n+  else\n+    echo \"ERROR: Merge rejected.\" >&2\n+    cleanup\n+    exit 7\n+  fi\n+fi\n+\n+# Sign the merge commit.\n+read -p \"Press 's' to sign off on the merge. \" -n 1 -r >&2\n+echo\n+if [[ \"d$REPLY\" =~ ^d[Ss]$ ]]; then\n+  if [[ \"$(git config --get user.signingkey)\" == \"\" ]]; then\n+    echo \"WARNING: No GPG signing key set, not signing. Set one using:\" >&2\n+    echo \"git config --global user.signingkey <key>\" >&2\n+    git commit -q --signoff --amend --no-edit\n+  else\n+    git commit -q --gpg-sign --amend --no-edit\n+  fi\n+fi\n+\n+# Clean up temporary branches, and put the result in $BRANCH.\n+git checkout -q \"$BRANCH\"\n+git reset -q --hard pull/\"$PULL\"/local-merge\n+cleanup\n+\n+# Push the result.\n+read -p \"Type 'push' to push the result to $HOST:$REPO, branch $BRANCH. \" -r >&2\n+if [[ \"d$REPLY\" =~ ^d[Pp][Uu][Ss][Hh]$ ]]; then\n+  git push \"$HOST\":\"$REPO\" refs/heads/\"$BRANCH\"\n+fi"
      },
      {
        "sha": "f3999f1c0b54a25f0e49660ef75cf263a1d37f0b",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "added",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,119 @@\n+#!/usr/bin/python\n+# Copyright (c) 2014 Wladimir J. van der Laan\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+A script to check that the (Linux) executables produced by gitian only contain\n+allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n+still compatible with the minimum supported Linux distribution versions.\n+\n+Example usage:\n+\n+    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py\n+'''\n+from __future__ import division, print_function\n+import subprocess\n+import re\n+import sys\n+\n+# Debian 6.0.9 (Squeeze) has:\n+#\n+# - g++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=g%2B%2B)\n+# - libc version 2.11.3 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libc6)\n+# - libstdc++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libstdc%2B%2B6)\n+#\n+# Ubuntu 10.04.4 (Lucid Lynx) has:\n+#\n+# - g++ version 4.4.3 (http://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=lucid&section=all)\n+# - libc version 2.11.1 (http://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=lucid&section=all)\n+# - libstdc++ version 4.4.3 (http://packages.ubuntu.com/search?suite=lucid&section=all&arch=any&keywords=libstdc%2B%2B&searchon=names)\n+#\n+# Taking the minimum of these as our target.\n+#\n+# According to GNU ABI document (http://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n+#   GCC 4.4.0: GCC_4.4.0\n+#   GCC 4.4.2: GLIBCXX_3.4.13, CXXABI_1.3.3\n+#   (glibc)    GLIBC_2_11\n+#\n+MAX_VERSIONS = {\n+'GCC':     (4,4,0),\n+'CXXABI':  (1,3,3),\n+'GLIBCXX': (3,4,13),\n+'GLIBC':   (2,11)\n+}\n+# Ignore symbols that are exported as part of every executable\n+IGNORE_EXPORTS = {\n+'_edata', '_end', '_init', '__bss_start', '_fini'\n+}\n+READELF_CMD = '/usr/bin/readelf'\n+CPPFILT_CMD = '/usr/bin/c++filt'\n+\n+class CPPFilt(object):\n+    '''\n+    Demangle C++ symbol names.\n+\n+    Use a pipe to the 'c++filt' command.\n+    '''\n+    def __init__(self):\n+        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n+\n+    def __call__(self, mangled):\n+        self.proc.stdin.write(mangled + '\\n')\n+        return self.proc.stdout.readline().rstrip()\n+\n+    def close(self):\n+        self.proc.stdin.close()\n+        self.proc.stdout.close()\n+        self.proc.wait()\n+\n+def read_symbols(executable, imports=True):\n+    '''\n+    Parse an ELF executable and return a list of (symbol,version) tuples\n+    for dynamic, imported symbols.\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Could not read symbols for %s: %s' % (executable, stderr.strip()))\n+    syms = []\n+    for line in stdout.split('\\n'):\n+        line = line.split()\n+        if len(line)>7 and re.match('[0-9]+:$', line[0]):\n+            (sym, _, version) = line[7].partition('@')\n+            is_import = line[6] == 'UND'\n+            if version.startswith('@'):\n+                version = version[1:]\n+            if is_import == imports:\n+                syms.append((sym, version))\n+    return syms\n+\n+def check_version(max_versions, version):\n+    if '_' in version:\n+        (lib, _, ver) = version.rpartition('_')\n+    else:\n+        lib = version\n+        ver = '0'\n+    ver = tuple([int(x) for x in ver.split('.')])\n+    if not lib in max_versions:\n+        return False\n+    return ver <= max_versions[lib]\n+\n+if __name__ == '__main__':\n+    cppfilt = CPPFilt()\n+    retval = 0\n+    for filename in sys.argv[1:]:\n+        # Check imported symbols\n+        for sym,version in read_symbols(filename, True):\n+            if version and not check_version(MAX_VERSIONS, version):\n+                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym), version))\n+                retval = 1\n+        # Check exported symbols\n+        for sym,version in read_symbols(filename, False):\n+            if sym in IGNORE_EXPORTS:\n+                continue\n+            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n+            retval = 1\n+\n+    exit(retval)\n+\n+"
      },
      {
        "sha": "0be632069a9421d06b7a05ea7af76d14fd060322",
        "filename": "contrib/devtools/update-translations.py",
        "status": "added",
        "additions": 186,
        "deletions": 0,
        "changes": 186,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,186 @@\n+#!/usr/bin/python\n+# Copyright (c) 2014 Wladimir J. van der Laan\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Run this script from the root of the repository to update all translations from\n+transifex.\n+It will do the following automatically:\n+\n+- fetch all translations using the tx tool\n+- post-process them into valid and committable format\n+  - remove invalid control characters\n+  - remove location tags (makes diffs less noisy)\n+\n+TODO:\n+- auto-add new translations to the build system according to the translation process\n+'''\n+from __future__ import division, print_function\n+import subprocess\n+import re\n+import sys\n+import os\n+import io\n+import xml.etree.ElementTree as ET\n+\n+# Name of transifex tool\n+TX = 'tx'\n+# Name of source language file\n+SOURCE_LANG = 'bitcoin_en.ts'\n+# Directory with locale files\n+LOCALE_DIR = 'src/qt/locale'\n+\n+def check_at_repository_root():\n+    if not os.path.exists('.git'):\n+        print('No .git directory found')\n+        print('Execute this script at the root of the repository', file=sys.stderr)\n+        exit(1)\n+\n+def fetch_all_translations():\n+    if subprocess.call([TX, 'pull', '-f']):\n+        print('Error while fetching translations', file=sys.stderr)\n+        exit(1)\n+\n+def find_format_specifiers(s):\n+    '''Find all format specifiers in a string.'''\n+    pos = 0\n+    specifiers = []\n+    while True:\n+        percent = s.find('%', pos)\n+        if percent < 0:\n+            break\n+        specifiers.append(s[percent+1])\n+        pos = percent+2\n+    return specifiers\n+\n+def split_format_specifiers(specifiers):\n+    '''Split format specifiers between numeric (Qt) and others (strprintf)'''\n+    numeric = []\n+    other = []\n+    for s in specifiers:\n+        if s in {'1','2','3','4','5','6','7','8','9'}:\n+            numeric.append(s)\n+        else:\n+            other.append(s)\n+\n+    # numeric (Qt) can be present in any order, others (strprintf) must be in specified order\n+    return set(numeric),other\n+\n+def sanitize_string(s):\n+    '''Sanitize string for printing'''\n+    return s.replace('\\n',' ')\n+\n+def check_format_specifiers(source, translation, errors):\n+    source_f = split_format_specifiers(find_format_specifiers(source))\n+    # assert that no source messages contain both Qt and strprintf format specifiers\n+    # if this fails, go change the source as this is hacky and confusing!\n+    assert(not(source_f[0] and source_f[1]))\n+    try:\n+        translation_f = split_format_specifiers(find_format_specifiers(translation))\n+    except IndexError:\n+        errors.append(\"Parse error in translation '%s'\" % sanitize_string(translation))\n+        return False\n+    else:\n+        if source_f != translation_f:\n+            errors.append(\"Mismatch between '%s' and '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n+            return False\n+    return True\n+\n+def all_ts_files(suffix=''):\n+    for filename in os.listdir(LOCALE_DIR):\n+        # process only language files, and do not process source language\n+        if not filename.endswith('.ts'+suffix) or filename == SOURCE_LANG+suffix:\n+            continue\n+        if suffix: # remove provided suffix\n+            filename = filename[0:-len(suffix)]\n+        filepath = os.path.join(LOCALE_DIR, filename)\n+        yield(filename, filepath)\n+\n+FIX_RE = re.compile(b'[\\x00-\\x09\\x0b\\x0c\\x0e-\\x1f]')\n+def remove_invalid_characters(s):\n+    '''Remove invalid characters from translation string'''\n+    return FIX_RE.sub(b'', s)\n+\n+# Override cdata escape function to make our output match Qt's (optional, just for cleaner diffs for\n+# comparison, disable by default)\n+_orig_escape_cdata = None\n+def escape_cdata(text):\n+    text = _orig_escape_cdata(text)\n+    text = text.replace(\"'\", '&apos;')\n+    text = text.replace('\"', '&quot;')\n+    return text\n+\n+def postprocess_translations(reduce_diff_hacks=False):\n+    print('Checking and postprocessing...')\n+\n+    if reduce_diff_hacks:\n+        global _orig_escape_cdata\n+        _orig_escape_cdata = ET._escape_cdata\n+        ET._escape_cdata = escape_cdata\n+\n+    for (filename,filepath) in all_ts_files():\n+        os.rename(filepath, filepath+'.orig')\n+\n+    have_errors = False\n+    for (filename,filepath) in all_ts_files('.orig'):\n+        # pre-fixups to cope with transifex output\n+        parser = ET.XMLParser(encoding='utf-8') # need to override encoding because 'utf8' is not understood only 'utf-8'\n+        with open(filepath + '.orig', 'rb') as f:\n+            data = f.read()\n+        # remove control characters; this must be done over the entire file otherwise the XML parser will fail\n+        data = remove_invalid_characters(data)\n+        tree = ET.parse(io.BytesIO(data), parser=parser)\n+\n+        # iterate over all messages in file\n+        root = tree.getroot()\n+        for context in root.findall('context'):\n+            for message in context.findall('message'):\n+                numerus = message.get('numerus') == 'yes'\n+                source = message.find('source').text\n+                translation_node = message.find('translation')\n+                # pick all numerusforms\n+                if numerus:\n+                    translations = [i.text for i in translation_node.findall('numerusform')]\n+                else:\n+                    translations = [translation_node.text]\n+\n+                for translation in translations:\n+                    if translation is None:\n+                        continue\n+                    errors = []\n+                    valid = check_format_specifiers(source, translation, errors)\n+\n+                    for error in errors:\n+                        print('%s: %s' % (filename, error))\n+\n+                    if not valid: # set type to unfinished and clear string if invalid\n+                        translation_node.clear()\n+                        translation_node.set('type', 'unfinished')\n+                        have_errors = True\n+\n+                # Remove location tags\n+                for location in message.findall('location'):\n+                    message.remove(location)\n+\n+                # Remove entire message if it is an unfinished translation\n+                if translation_node.get('type') == 'unfinished':\n+                    context.remove(message)\n+\n+        # write fixed-up tree\n+        # if diff reduction requested, replace some XML to 'sanitize' to qt formatting\n+        if reduce_diff_hacks:\n+            out = io.BytesIO()\n+            tree.write(out, encoding='utf-8')\n+            out = out.getvalue()\n+            out = out.replace(b' />', b'/>')\n+            with open(filepath, 'wb') as f:\n+                f.write(out)\n+        else:\n+            tree.write(filepath, encoding='utf-8')\n+    return have_errors\n+\n+if __name__ == '__main__':\n+    check_at_repository_root()\n+    fetch_all_translations()\n+    postprocess_translations()\n+"
      },
      {
        "sha": "46c7668ab95df8b270148ac37c3e3f9cdabc98a4",
        "filename": "contrib/gitian-descriptors/README",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/gitian-descriptors/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/gitian-descriptors/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,86 +0,0 @@\n-Gavin's notes on getting gitian builds up and running using KVM:\n-\n-These instructions distilled from:\n-  https://help.ubuntu.com/community/KVM/Installation\n-... see there for complete details.\n-\n-You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n-\n-You probably need to enable hardware virtualization in your machine's BIOS.\n-\n-You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n-  sudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n-\n-Sanity checks:\n-  sudo service apt-cacher-ng status   # Should return apt-cacher-ng is running\n-  ls -l /dev/kvm   # Should show a /dev/kvm device\n-\n-\n-Once you've got the right hardware and software:\n-\n-    git clone git://github.com/bitcoin/bitcoin.git\n-    git clone git://github.com/devrandom/gitian-builder.git\n-    mkdir gitian-builder/inputs\n-    cd gitian-builder/inputs\n-    # Inputs for Linux and Win32:\n-    wget -O miniupnpc-1.6.tar.gz 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.tar.gz'\n-    wget 'http://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'\n-    # Inputs for Win32: (Linux has packages for these)\n-    wget 'https://downloads.sourceforge.net/project/boost/boost/1.50.0/boost_1_50_0.tar.bz2'\n-    wget 'http://www.openssl.org/source/openssl-1.0.1c.tar.gz'\n-    wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n-    wget 'https://downloads.sourceforge.net/project/libpng/zlib/1.2.6/zlib-1.2.6.tar.gz'\n-    wget 'https://downloads.sourceforge.net/project/libpng/libpng15/older-releases/1.5.9/libpng-1.5.9.tar.gz'\n-    wget 'http://releases.qt-project.org/qt4/source/qt-everywhere-opensource-src-4.8.3.tar.gz'\n-    cd ../..\n-\n-    cd gitian-builder\n-    bin/make-base-vm --arch i386\n-    bin/make-base-vm --arch amd64\n-    cd ..\n-\n-    # Build Linux release:\n-    cd bitcoin\n-    git pull\n-    cd ../gitian-builder\n-    git pull\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/gitian.yml\n-\n-    # Build Win32 dependencies: (only needs to be done once, or when dependency versions change)\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/boost-win32.yml\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/deps-win32.yml\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/qt-win32.yml\n-\n-    # Build Win32 release:\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/gitian-win32.yml\n-\n----------------------\n-\n-gitian-builder now also supports building using LXC. See\n-  https://help.ubuntu.com/12.04/serverguide/lxc.html\n-... for how to get LXC up and running under Ubuntu.\n-\n-If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n-and at least 10 gigabytes of free disk space, you can gitian-build using\n-LXC running inside a virtual machine.\n-\n-Here's a description of Gavin's setup on OSX 10.6:\n-\n-1. Download and install VirtualBox from https://www.virtualbox.org/\n-\n-2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from\n-  http://www.ubuntu.com/\n-\n-3. Run VirtualBox and create a new virtual machine, using the\n-  Ubuntu .iso (see the VirtualBox documentation for details).\n-  Create it with at least 2 gigabytes of memory and a disk\n-  that is at least 20 gigabytes big.\n-\n-4. Inside the running Ubuntu desktop, install:\n-  sudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n-\n-5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right\n-  hardware and software\" instructions above:\n-  export USE_LXC=1\n-  git clone git://github.com/bitcoin/bitcoin.git\n-  ... etc"
      },
      {
        "sha": "7a67263ee44ce0f9f794815791b7877bf1428c67",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,67 @@\n+### Gavin's notes on getting gitian builds up and running using KVM:###\n+\n+These instructions distilled from:\n+[  https://help.ubuntu.com/community/KVM/Installation](  https://help.ubuntu.com/community/KVM/Installation)\n+... see there for complete details.\n+\n+You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n+\n+You probably need to enable hardware virtualization in your machine's BIOS.\n+\n+You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n+\n+\tsudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n+\n+Sanity checks:\n+\n+\tsudo service apt-cacher-ng status  # Should return apt-cacher-ng is running\n+\tls -l /dev/kvm   # Should show a /dev/kvm device\n+\n+\n+Once you've got the right hardware and software:\n+\n+    git clone git://github.com/bitcoin/bitcoin.git\n+    git clone git://github.com/devrandom/gitian-builder.git\n+    mkdir gitian-builder/inputs\n+    cd gitian-builder/inputs\n+\n+    # Create base images\n+    cd gitian-builder\n+    bin/make-base-vm --suite precise --arch i386\n+    bin/make-base-vm --suite precise --arch amd64\n+    cd ..\n+\n+    # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n+    ...\n+\n+    # For further build instructions see doc/release-notes.md\n+    ...\n+\n+---------------------\n+\n+`gitian-builder` now also supports building using LXC. See\n+[  https://help.ubuntu.com/12.04/serverguide/lxc.html](  https://help.ubuntu.com/12.04/serverguide/lxc.html)\n+... for how to get LXC up and running under Ubuntu.\n+\n+If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n+and at least 10 gigabytes of free disk space, you can `gitian-build` using\n+LXC running inside a virtual machine.\n+\n+Here's a description of Gavin's setup on OSX 10.6:\n+\n+1. Download and install VirtualBox from [https://www.virtualbox.org/](https://www.virtualbox.org/)\n+\n+2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from\n+   [http://www.ubuntu.com/](http://www.ubuntu.com/)\n+\n+3. Run VirtualBox and create a new virtual machine, using the Ubuntu .iso (see the [VirtualBox documentation](https://www.virtualbox.org/wiki/Documentation) for details). Create it with at least 2 gigabytes of memory and a disk that is at least 20 gigabytes big.\n+\n+4. Inside the running Ubuntu desktop, install:\n+\n+\tsudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n+\n+5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n+\n+\texport USE_LXC=1\n+\tgit clone git://github.com/bitcoin/bitcoin.git\n+\t... etc"
      },
      {
        "sha": "bd3534633737acf904f8a256f758b01a0d7a9b10",
        "filename": "contrib/gitian-descriptors/boost-linux.yml",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/boost-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/boost-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-linux.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,55 @@\n+---\n+name: \"boost\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages:\n+- \"g++\"\n+- \"unzip\"\n+- \"pkg-config\"\n+- \"libtool\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"zip\"\n+- \"libz-dev\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"boost_1_55_0.tar.bz2\"\n+script: |\n+  STAGING=\"$HOME/install\"\n+  TEMPDIR=\"$HOME/tmp\"\n+  export LIBRARY_PATH=\"$STAGING/lib\"\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  # Input Integrity Check\n+  echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\" | shasum -c\n+\n+  mkdir -p \"$STAGING\"\n+  tar --warning=no-timestamp -xjf boost_1_55_0.tar.bz2\n+  cd boost_1_55_0\n+  GCCVERSION=$(g++ -E -dM $(mktemp --suffix=.h) | grep __VERSION__ | cut -d ' ' -f 3 | cut -d '\"' -f 2)\n+  # note: bjam with -d+2 reveals that -O3 is implied by default, no need to provide it in cxxflags\n+  echo \"using gcc : $GCCVERSION : g++\n+        :\n+        <cxxflags>\\\"-frandom-seed=boost1 -fPIC\\\"\n+  ;\" > user-config.jam\n+\n+  ./bootstrap.sh --without-icu\n+\n+  ./bjam toolset=gcc threadapi=pthread threading=multi variant=release link=static runtime-link=shared --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 --layout=tagged --build-type=complete --prefix=\"$STAGING\" $MAKEOPTS -d+2 install\n+\n+  # post-process all generated libraries to be deterministic\n+  # extract them to a temporary directory then re-build them deterministically\n+  for LIB in $(find $STAGING -name \\*.a); do\n+    rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n+    ar xv $LIB | cut -b5- > /tmp/list.txt\n+    rm $LIB\n+    ar crsD $LIB $(cat /tmp/list.txt)\n+  done\n+  #\n+  cd \"$STAGING\"\n+  find | sort | zip -X@ $OUTDIR/boost-linux${GBUILD_BITS}-1.55.0-gitian-r1.zip"
      },
      {
        "sha": "347952e3a663988e3df5cd125137ca5cd07e8e3c",
        "filename": "contrib/gitian-descriptors/boost-win.yml",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/boost-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/boost-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-win.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,86 @@\n+---\n+name: \"boost\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"faketime\"\n+- \"zip\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"boost_1_55_0.tar.bz2\"\n+- \"boost-mingw-gas-cross-compile-2013-03-03.patch\"\n+script: |\n+  # Defines\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  INDIR=$HOME/build\n+  TEMPDIR=$HOME/tmp\n+  # Input Integrity Check\n+  echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\" | shasum -c\n+  echo \"d2b7f6a1d7051faef3c9cf41a92fa3671d905ef1e1da920d07651a43299f6268  boost-mingw-gas-cross-compile-2013-03-03.patch\" | shasum -c\n+\n+  for BITS in 32 64; do # for architectures\n+    #\n+    INSTALLPREFIX=$HOME/staging${BITS}\n+    BUILDDIR=$HOME/build${BITS}\n+    if [ \"x$BITS\" = \"x32\" ]; then\n+      HOST=i686-w64-mingw32\n+    else\n+      HOST=x86_64-w64-mingw32\n+    fi\n+    #\n+    mkdir -p $INSTALLPREFIX $BUILDDIR\n+    cd $BUILDDIR\n+    #\n+    tar --warning=no-timestamp -xjf $INDIR/boost_1_55_0.tar.bz2\n+    cd boost_1_55_0\n+    GCCVERSION=$($HOST-g++ -E -dM $(mktemp --suffix=.h) | grep __VERSION__ | cut -d ' ' -f 3 | cut -d '\"' -f 2)\n+    echo \"using gcc : $GCCVERSION : $HOST-g++\n+        :\n+        <rc>$HOST-windres\n+        <archiver>$HOST-ar\n+        <cxxflags>-frandom-seed=boost1\n+        <ranlib>$HOST-ranlib\n+  ;\" > user-config.jam\n+    ./bootstrap.sh --without-icu\n+\n+    # Workaround: Upstream boost dev refuses to include patch that would allow Free Software cross-compile toolchain to work\n+    #             This patch was authored by the Fedora package developer and ships in Fedora's mingw32-boost.\n+    #             Please obtain the exact patch that matches the above sha256sum from one of the following mirrors.\n+    #\n+    # Read History:   https://svn.boost.org/trac/boost/ticket/7262\n+    # History Mirror: http://rose.makesad.us/~paulproteus/mirrors/7262%20Boost.Context%20fails%20to%20build%20using%20MinGW.html\n+    #\n+    # Patch:          https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch\n+    # Patch Mirror:   http://wtogami.fedorapeople.org/boost-mingw-gas-cross-compile-2013-03-03.patch\n+    # Patch Mirror:   http://mindstalk.net/host/boost-mingw-gas-cross-compile-2013-03-03.patch\n+    # Patch Mirror:   http://rose.makesad.us/~paulproteus/mirrors/boost-mingw-gas-cross-compile-2013-03-03.patch\n+    patch -p0 < $INDIR/boost-mingw-gas-cross-compile-2013-03-03.patch\n+\n+    # Bug Workaround: boost-1.54.0 broke the ability to disable zlib, still broken in 1.55\n+    # https://svn.boost.org/trac/boost/ticket/9156\n+    sed -i 's^\\[ ac.check-library /zlib//zlib : <library>/zlib//zlib^^' libs/iostreams/build/Jamfile.v2\n+    sed -i 's^<source>zlib.cpp <source>gzip.cpp \\]^^' libs/iostreams/build/Jamfile.v2\n+\n+    # http://statmt.org/~s0565741/software/boost_1_52_0/libs/context/doc/html/context/requirements.html\n+    # \"For cross-compiling the lib you must specify certain additional properties at bjam command line: target-os, abi, binary-format, architecture and address-model.\"\n+    ./bjam toolset=gcc binary-format=pe target-os=windows threadapi=win32 address-model=$BITS threading=multi variant=release link=static runtime-link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete --prefix=\"$INSTALLPREFIX\" $MAKEOPTS install\n+    # post-process all generated libraries to be deterministic\n+    # extract them to a temporary directory then re-build them deterministically\n+    for LIB in $(find $INSTALLPREFIX -name \\*.a); do\n+        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n+        $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt\n+        rm $LIB\n+        $HOST-ar crsD $LIB $(cat /tmp/list.txt)\n+    done\n+    #\n+    cd \"$INSTALLPREFIX\"\n+    find | sort | zip -X@ $OUTDIR/boost-win$BITS-1.55.0-gitian-r6.zip\n+  done # for BITS in\n+"
      },
      {
        "sha": "1eeb9eaa28ba581e3b15d0857db47b6f5505db2e",
        "filename": "contrib/gitian-descriptors/boost-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/gitian-descriptors/boost-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/gitian-descriptors/boost-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-win32.yml?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,38 +0,0 @@\n----\n-name: \"boost\"\n-suites:\n-- \"lucid\"\n-architectures:\n-- \"i386\"\n-packages: \n-- \"mingw32\"\n-- \"faketime\"\n-- \"zip\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"boost_1_50_0.tar.bz2\"\n-script: |\n-  TMPDIR=\"$HOME/tmpdir\"\n-  mkdir -p $TMPDIR/bin/$GBUILD_BITS $TMPDIR/include\n-  tar xjf boost_1_50_0.tar.bz2\n-  cd boost_1_50_0\n-  echo \"using gcc : 4.4 : i586-mingw32msvc-g++\n-        :\n-        <rc>i586-mingw32msvc-windres\n-        <archiver>i586-mingw32msvc-ar\n-        <cxxflags>-frandom-seed=boost1\n-  ;\" > user-config.jam\n-  ./bootstrap.sh --without-icu\n-  ./bjam toolset=gcc target-os=windows threadapi=win32 threading=multi variant=release link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete $MAKEOPTS stage\n-  for lib in chrono date_time exception filesystem graph iostreams math_c99f math_c99l math_c99 math_tr1f math_tr1l math_tr1 prg_exec_monitor program_options random regex serialization signals system test_exec_monitor thread_win32 unit_test_framework wave wserialization; do\n-      mkdir $lib\n-      (cd $lib ; ar xf ../stage/lib/libboost_${lib}-mt-s.a)\n-      mv $lib $TMPDIR/bin/$GBUILD_BITS\n-  done\n-  cp -a boost $TMPDIR/include\n-  cd $TMPDIR\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  zip -r boost-win32-1.50.0-gitian2.zip *\n-  cp boost-win32-1.50.0-gitian2.zip $OUTDIR"
      },
      {
        "sha": "82212221334ab96b2ddfdf31382c1dacb684522c",
        "filename": "contrib/gitian-descriptors/deps-linux.yml",
        "status": "added",
        "additions": 98,
        "deletions": 0,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/deps-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/deps-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-linux.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,98 @@\n+---\n+name: \"bitcoin\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages:\n+- \"g++\"\n+- \"unzip\"\n+- \"zip\"\n+- \"pkg-config\"\n+- \"libtool\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes: []\n+files:\n+- \"openssl-1.0.1h.tar.gz\"\n+- \"miniupnpc-1.9.tar.gz\"\n+- \"qrencode-3.4.3.tar.bz2\"\n+- \"protobuf-2.5.0.tar.bz2\"\n+- \"db-4.8.30.NC.tar.gz\"\n+script: |\n+  STAGING=\"$HOME/install\"\n+  TEMPDIR=\"$HOME/tmp\"\n+  OPTFLAGS='-O2'\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  export LIBRARY_PATH=\"$STAGING/lib\"\n+  # Integrity Check\n+  echo \"9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz\"  | sha256sum -c\n+  echo \"2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz\"   | sha256sum -c\n+  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n+  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n+  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n+\n+  #\n+  tar xzf openssl-1.0.1h.tar.gz\n+  cd openssl-1.0.1h\n+  #   need -fPIC to avoid relocation error in 64 bit builds\n+  ./config no-shared no-zlib no-dso no-krb5 --openssldir=$STAGING -fPIC\n+  #   need to build OpenSSL with faketime because a timestamp is embedded into cversion.o\n+  make\n+  make install_sw\n+  cd ..\n+  #\n+  tar xzfm miniupnpc-1.9.tar.gz\n+  cd miniupnpc-1.9\n+  #   miniupnpc is always built with -fPIC\n+  INSTALLPREFIX=$STAGING make $MAKEOPTS install\n+  rm -f $STAGING/lib/libminiupnpc.so* # no way to skip shared lib build\n+  cd ..\n+  #\n+  tar xjf qrencode-3.4.3.tar.bz2\n+  cd qrencode-3.4.3\n+  unset FAKETIME # unset fake time during configure, as it does some clock sanity tests\n+  #   need --with-pic to avoid relocation error in 64 bit builds\n+  ./configure --prefix=$STAGING --enable-static --disable-shared --with-pic --without-tools --disable-dependency-tracking\n+  # Workaround to prevent re-configuring by make; make all files have a date in the past\n+  find . -print0 | xargs -r0 touch -t 200001010000\n+  export FAKETIME=$REFERENCE_DATETIME\n+  make $MAKEOPTS install\n+  cd ..\n+  #\n+  tar xjf protobuf-2.5.0.tar.bz2\n+  cd protobuf-2.5.0\n+  mkdir -p $STAGING/host/bin\n+  unset FAKETIME # unset fake time during configure, as it does some clock sanity tests\n+  #   need --with-pic to avoid relocation error in 64 bit builds\n+  ./configure --prefix=$STAGING --bindir=$STAGING/host/bin --enable-static --disable-shared --with-pic --without-zlib\n+  # Workaround to prevent re-configuring by make; make all files have a date in the past\n+  find . -print0 | xargs -r0 touch -t 200001010000\n+  export FAKETIME=$REFERENCE_DATETIME\n+  make $MAKEOPTS install\n+  cd ..\n+  #\n+  tar xzf db-4.8.30.NC.tar.gz\n+  cd db-4.8.30.NC/build_unix\n+  #   need --with-pic to avoid relocation error in 64 bit builds\n+  ../dist/configure --prefix=$STAGING --enable-cxx --disable-shared --with-pic\n+  # Workaround to prevent re-configuring by make; make all files have a date in the past\n+  find . -print0 | xargs -r0 touch -t 200001010000\n+  make $MAKEOPTS library_build\n+  make install_lib install_include\n+  cd ../..\n+  # post-process all generated libraries to be deterministic\n+  # extract them to a temporary directory then re-build them deterministically\n+  for LIB in $(find $STAGING -name \\*.a); do\n+    rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n+    ar xv $LIB | cut -b5- > /tmp/list.txt\n+    rm $LIB\n+    ar crsD $LIB $(cat /tmp/list.txt)\n+  done\n+  #\n+  cd $STAGING\n+  find include lib bin host | sort | zip -X@ $OUTDIR/bitcoin-deps-linux${GBUILD_BITS}-gitian-r6.zip"
      },
      {
        "sha": "fe02950ef9c09ee5a3c0941ba9660390f01b53ec",
        "filename": "contrib/gitian-descriptors/deps-win.yml",
        "status": "added",
        "additions": 128,
        "deletions": 0,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/deps-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/deps-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,128 @@\n+---\n+name: \"bitcoin-deps\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"git-core\"\n+- \"zip\"\n+- \"faketime\"\n+- \"psmisc\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"openssl-1.0.1h.tar.gz\"\n+- \"db-4.8.30.NC.tar.gz\"\n+- \"miniupnpc-1.9.tar.gz\"\n+- \"zlib-1.2.8.tar.gz\"\n+- \"libpng-1.6.8.tar.gz\"\n+- \"qrencode-3.4.3.tar.bz2\"\n+script: |\n+  #\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  INDIR=$HOME/build\n+  TEMPDIR=$HOME/tmp\n+  # Input Integrity Check\n+  echo \"9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz\"  | sha256sum -c\n+  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n+  echo \"2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz\"   | sha256sum -c\n+  echo \"36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d  zlib-1.2.8.tar.gz\"      | sha256sum -c\n+  echo \"32c7acf1608b9c8b71b743b9780adb7a7b347563dbfb4a5263761056da44cc96  libpng-1.6.8.tar.gz\"    | sha256sum -c\n+  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n+\n+  for BITS in 32 64; do # for architectures\n+    #\n+    INSTALLPREFIX=$HOME/staging${BITS}\n+    BUILDDIR=$HOME/build${BITS}\n+    if [ \"x$BITS\" = \"x32\" ]; then\n+      HOST=i686-w64-mingw32\n+    else\n+      HOST=x86_64-w64-mingw32\n+    fi\n+    #\n+    mkdir -p $INSTALLPREFIX $BUILDDIR\n+    cd $BUILDDIR\n+    #\n+    tar xzf $INDIR/openssl-1.0.1h.tar.gz\n+    cd openssl-1.0.1h\n+    if [ \"x$BITS\" = \"x32\" ]; then\n+      OPENSSL_TGT=mingw\n+    else\n+      OPENSSL_TGT=mingw64\n+    fi\n+    ./Configure --cross-compile-prefix=$HOST- ${OPENSSL_TGT} no-shared no-dso --openssldir=$INSTALLPREFIX\n+    make\n+    make install_sw\n+    cd ..\n+    #\n+    tar xzf $INDIR/db-4.8.30.NC.tar.gz\n+    cd db-4.8.30.NC/build_unix\n+    ../dist/configure --prefix=$INSTALLPREFIX --enable-mingw --enable-cxx --host=$HOST --disable-shared\n+    make $MAKEOPTS library_build\n+    make install_lib install_include\n+    cd ../..\n+    #\n+    tar xzf $INDIR/miniupnpc-1.9.tar.gz\n+    cd miniupnpc-1.9\n+    echo \"\n+  --- miniupnpc-1.9/Makefile.mingw.orig   2013-09-29 18:52:51.014087958 -1000\n+  +++ miniupnpc-1.9/Makefile.mingw        2013-09-29 19:09:29.663318691 -1000\n+  @@ -67,8 +67,8 @@\n+   \n+   wingenminiupnpcstrings.o:\twingenminiupnpcstrings.c\n+   \n+  -miniupnpcstrings.h: miniupnpcstrings.h.in wingenminiupnpcstrings\n+  -\twingenminiupnpcstrings \\$< \\$@\n+  +miniupnpcstrings.h: miniupnpcstrings.h.in \n+  +\tsed -e 's|OS/version|MSWindows/5.1.2600|' -e 's|MINIUPNPC_VERSION_STRING \\\"version\\\"|MINIUPNPC_VERSION_STRING \\\"VERSIONHERE\\\"|' \\$< > \\$@\n+   \n+   minixml.o:\tminixml.c minixml.h miniupnpcstrings.h\n+   \n+  \" | sed \"s/VERSIONHERE/$(cat VERSION)/\" | patch -p1\n+    mkdir -p dll\n+    make -f Makefile.mingw CC=$HOST-gcc AR=$HOST-ar libminiupnpc.a\n+    install -d $INSTALLPREFIX/include/miniupnpc\n+    install *.h $INSTALLPREFIX/include/miniupnpc\n+    install libminiupnpc.a  $INSTALLPREFIX/lib\n+    cd ..\n+    #\n+    tar xzf $INDIR/zlib-1.2.8.tar.gz\n+    cd zlib-1.2.8\n+    CROSS_PREFIX=$HOST- ./configure --prefix=$INSTALLPREFIX --static\n+    make\n+    make install\n+    cd ..\n+    #\n+    tar xzf $INDIR/libpng-1.6.8.tar.gz\n+    cd libpng-1.6.8\n+    OPT=\"-O2\"\n+    CPPFLAGS=\"${OPT} -I$INSTALLPREFIX/include\" CFLAGS=\"${OPT} -I$INSTALLPREFIX/include\" LDFLAGS=\"${OPT} -L$INSTALLPREFIX/lib\" ./configure --disable-shared --prefix=$INSTALLPREFIX --host=$HOST\n+    make $MAKEOPTS\n+    make install\n+    cd ..\n+    #\n+    tar xjf $INDIR/qrencode-3.4.3.tar.bz2\n+    cd qrencode-3.4.3\n+    png_CFLAGS=\"-I$INSTALLPREFIX/include\" png_LIBS=\"-L$INSTALLPREFIX/lib -lpng\" ./configure --prefix=$INSTALLPREFIX --host=$HOST --enable-static --disable-shared --without-tools --disable-dependency-tracking\n+    # Workaround to prevent re-configuring by make (resulting in missing m4 error); make all files have a date in the past\n+    find . -print0 | xargs -r0 touch -t 200001010000\n+    make\n+    make install\n+    cd ..\n+    # post-process all generated libraries to be deterministic\n+    # extract them to a temporary directory then re-build them deterministically\n+    for LIB in $(find $INSTALLPREFIX -name \\*.a); do\n+        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n+        $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt\n+        rm $LIB\n+        $HOST-ar crsD $LIB $(cat /tmp/list.txt)\n+    done\n+    #\n+    cd $INSTALLPREFIX\n+    find include lib | sort | zip -X@ $OUTDIR/bitcoin-deps-win$BITS-gitian-r13.zip\n+  done # for BITS in"
      },
      {
        "sha": "90f4c6c4be035d3e2d2112bfdd9bef3e640eda96",
        "filename": "contrib/gitian-descriptors/deps-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/gitian-descriptors/deps-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/gitian-descriptors/deps-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win32.yml?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,72 +0,0 @@\n----\n-name: \"bitcoin-deps\"\n-suites:\n-- \"lucid\"\n-architectures:\n-- \"i386\"\n-packages:\n-- \"mingw32\"\n-- \"git-core\"\n-- \"zip\"\n-- \"faketime\"\n-- \"wine\"\n-- \"psmisc\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"openssl-1.0.1c.tar.gz\"\n-- \"db-4.8.30.NC.tar.gz\"\n-- \"miniupnpc-1.6.tar.gz\"\n-- \"zlib-1.2.6.tar.gz\"\n-- \"libpng-1.5.9.tar.gz\"\n-- \"qrencode-3.2.0.tar.bz2\"\n-script: |\n-  #\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  #\n-  tar xzf openssl-1.0.1c.tar.gz\n-  cd openssl-1.0.1c\n-  ./Configure --cross-compile-prefix=i586-mingw32msvc- mingw\n-  make\n-  cd ..\n-  #\n-  tar xzf db-4.8.30.NC.tar.gz\n-  cd db-4.8.30.NC/build_unix\n-  ../dist/configure --enable-mingw --enable-cxx --host=i586-mingw32msvc CFLAGS=\"-I/usr/i586-mingw32msvc/include\"\n-  make $MAKEOPTS\n-  cd ../..\n-  #\n-  tar xzf miniupnpc-1.6.tar.gz\n-  cd miniupnpc-1.6\n-  sed 's/dllwrap -k --driver-name gcc/$(DLLWRAP) -k --driver-name $(CC)/' -i Makefile.mingw\n-  sed 's|wingenminiupnpcstrings $< $@|./wingenminiupnpcstrings $< $@|' -i Makefile.mingw\n-  make -f Makefile.mingw DLLWRAP=i586-mingw32msvc-dllwrap CC=i586-mingw32msvc-gcc AR=i586-mingw32msvc-ar\n-  cd ..\n-  mv miniupnpc-1.6 miniupnpc\n-  #\n-  tar xzf zlib-1.2.6.tar.gz\n-  cd zlib-1.2.6\n-  make -f win32/Makefile.gcc PREFIX=i586-mingw32msvc- $MAKEOPTS\n-  cd ..\n-  #\n-  tar xzf libpng-1.5.9.tar.gz\n-  cd libpng-1.5.9\n-  ./configure -disable-shared CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld LDFLAGS=\"-L../zlib-1.2.6/\" CFLAGS=\"-I../zlib-1.2.6/\"\n-  make $MAKEOPTS\n-  cd ..\n-  #\n-  tar xjf qrencode-3.2.0.tar.bz2\n-  cd qrencode-3.2.0\n-  ./configure CC=i586-mingw32msvc-cc AR=i586-mingw32msvc-ar STRIP=i586-mingw32msvc-strip RANLIB=i586-mingw32msvc-ranlib OBJDUMP=i586-mingw32msvc-objdump LD=i586-mingw32msvc-ld png_LIBS=\"../libpng-1.5.9/.libs/libpng15.a ../zlib-1.2.6/libz.a\" png_CFLAGS=\"-I../libpng-1.5.9\"\n-  make $MAKEOPTS\n-  cd ..\n-  #\n-  zip -r $OUTDIR/bitcoin-deps-0.0.5.zip \\\n-    $(ls qrencode-*/{qrencode.h,.libs/libqrencode.{,l}a} | sort) \\\n-    $(ls db-*/build_unix/{libdb_cxx.a,db.h,db_cxx.h,libdb.a,.libs/libdb_cxx-?.?.a} | sort) \\\n-    $(find openssl-* -name '*.a' -o -name '*.h' | sort) \\\n-    $(find miniupnpc -name '*.h' -o -name 'libminiupnpc.a' | sort)\n-  # Kill wine processes as gitian won't figure out we are done otherwise\n-  killall wineserver services.exe explorer.exe winedevice.exe"
      },
      {
        "sha": "30b0227bdd0e03e09487199dedca1a3a2d492c88",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,86 @@\n+---\n+name: \"bitcoin\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages: \n+- \"g++\"\n+- \"git-core\"\n+- \"unzip\"\n+- \"pkg-config\"\n+- \"autoconf2.13\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"libqt4-core\"\n+- \"libqt4-gui\"\n+- \"libqt4-dbus\"\n+- \"libqt4-network\"\n+- \"libqt4-test\"\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files:\n+- \"bitcoin-deps-linux32-gitian-r6.zip\"\n+- \"bitcoin-deps-linux64-gitian-r6.zip\"\n+- \"boost-linux32-1.55.0-gitian-r1.zip\"\n+- \"boost-linux64-1.55.0-gitian-r1.zip\"\n+- \"qt-linux32-4.6.4-gitian-r1.tar.gz\"\n+- \"qt-linux64-4.6.4-gitian-r1.tar.gz\"\n+script: |\n+  STAGING=\"$HOME/install\"\n+  OPTFLAGS='-O2'\n+  BINDIR=\"${OUTDIR}/bin/${GBUILD_BITS}\" # 32/64 bit build specific output directory\n+  TEMPDIR=\"$HOME/tempdir\"\n+  export TZ=UTC\n+  export LIBRARY_PATH=\"$STAGING/lib\"\n+  export PATH=\"$STAGING/bin:$PATH\"\n+  mkdir -p ${BINDIR}\n+  #\n+  mkdir -p $STAGING\n+  cd $STAGING\n+  unzip ../build/bitcoin-deps-linux${GBUILD_BITS}-gitian-r6.zip\n+  unzip ../build/boost-linux${GBUILD_BITS}-1.55.0-gitian-r1.zip\n+  tar -zxf ../build/qt-linux${GBUILD_BITS}-4.6.4-gitian-r1.tar.gz\n+  cd ../build\n+\n+  # Avoid exporting *any* symbols from the executable\n+  # This avoids conflicts between the libraries statically linked into bitcoin and any\n+  # libraries we may link dynamically (such as Qt and OpenSSL, see issue #4094).\n+  # It also avoids start-up overhead to not export any unnecessary symbols.\n+  # To do this, build a linker script that marks all symbols as local.\n+  LINKER_SCRIPT=$HOME/build/linker_version_script\n+  echo '\n+  {\n+    local: *;\n+  };' > $LINKER_SCRIPT\n+  function do_configure {\n+      ./configure \"$@\" --enable-upnp-default --prefix=$STAGING --with-protoc-bindir=$STAGING/host/bin --with-qt-bindir=$STAGING/bin --with-boost=$STAGING --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib -Wl,--version-script=$LINKER_SCRIPT ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\" --enable-glibc-back-compat\n+  }\n+  #\n+  cd bitcoin\n+  ./autogen.sh\n+  do_configure\n+  make dist\n+  DISTNAME=`echo bitcoin-*.tar.gz`\n+\n+  # Build dynamic versions of everything\n+  # (with static linking to boost and openssl as well a some non-OS deps)\n+  mkdir -p distsrc\n+  cd distsrc\n+  tar --strip-components=1 -xf ../$DISTNAME\n+  do_configure --bindir=$BINDIR \n+  make $MAKEOPTS\n+  make $MAKEOPTS install-strip\n+  make $MAKEOPTS clean\n+\n+  # sort distribution tar file and normalize user/group/mtime information for deterministic output\n+  mkdir -p $OUTDIR/src\n+  rm -rf $TEMPDIR\n+  mkdir -p $TEMPDIR\n+  cd $TEMPDIR\n+  tar -xvf $HOME/build/bitcoin/$DISTNAME | sort | tar --no-recursion -cT /dev/stdin --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 --mtime=\"$REFERENCE_DATETIME\" | gzip -n > $OUTDIR/src/$DISTNAME"
      },
      {
        "sha": "bc3d561c357089535420f7d25d9abcf57dc8838f",
        "filename": "contrib/gitian-descriptors/gitian-osx-bitcoin.yml",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/gitian-osx-bitcoin.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/gitian-osx-bitcoin.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-bitcoin.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,61 @@\n+---\n+name: \"bitcoin\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+packages:\n+- \"git-core\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"pkg-config\"\n+- \"p7zip-full\"\n+- \"libtool\"\n+\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files:\n+- \"osx-native-depends-r3.tar.gz\"\n+- \"osx-depends-r4.tar.gz\"\n+- \"osx-depends-qt-5.2.1-r4.tar.gz\"\n+- \"MacOSX10.7.sdk.tar.gz\"\n+\n+script: |\n+\n+  HOST=x86_64-apple-darwin11\n+  PREFIX=`pwd`/osx-cross-depends/prefix\n+  SDK=`pwd`/osx-cross-depends/SDKs/MacOSX10.7.sdk\n+  NATIVEPREFIX=`pwd`/osx-cross-depends/native-prefix\n+  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+\n+  export SOURCES_PATH=`pwd`\n+\n+  mkdir -p osx-cross-depends/SDKs\n+\n+  tar -C osx-cross-depends/SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n+\n+  tar -C osx-cross-depends -xf osx-native-depends-r3.tar.gz\n+  tar -C osx-cross-depends -xf osx-depends-r4.tar.gz\n+  tar -C osx-cross-depends -xf osx-depends-qt-5.2.1-r4.tar.gz\n+  export PATH=`pwd`/osx-cross-depends/native-prefix/bin:$PATH\n+\n+  cd bitcoin\n+\n+  export ZERO_AR_DATE=1\n+  export QT_RCC_TEST=1\n+  ./autogen.sh\n+  ./configure --host=${HOST} --with-boost=${PREFIX} CC=clang CXX=clang++ OBJC=clang OBJCXX=clang++ CFLAGS=\"-target ${HOST} -mmacosx-version-min=10.6 --sysroot ${SDK} -msse2 -Qunused-arguments\" CXXFLAGS=\"-target ${HOST} -mmacosx-version-min=10.6 --sysroot ${SDK} -msse2 -Qunused-arguments\" LDFLAGS=\"-B${NATIVEPREFIX}/bin -L${PREFIX}/lib -L${SDK}/usr/lib/i686-apple-darwin10/4.2.1\" CPPFLAGS=\"-I${NATIVEPREFIX}/lib/clang/3.2/include -I${PREFIX}/include\" SSL_LIBS=\"-lz -lssl -lcrypto\" --disable-tests -with-gui=qt5 PKG_CONFIG_LIBDIR=\"${PREFIX}/lib/pkgconfig\" --disable-dependency-tracking --disable-maintainer-mode\n+  make dist\n+  mkdir -p distsrc\n+  cd distsrc\n+  tar --strip-components=1 -xf ../bitcoin-*.tar*\n+  ./configure --host=${HOST} --with-boost=${PREFIX} CC=clang CXX=clang++ OBJC=clang OBJCXX=clang++ CFLAGS=\"-target ${HOST} -mmacosx-version-min=10.6 --sysroot ${SDK} -msse2 -Qunused-arguments\" CXXFLAGS=\"-target ${HOST} -mmacosx-version-min=10.6 --sysroot ${SDK} -msse2 -Qunused-arguments\" LDFLAGS=\"-B${NATIVEPREFIX}/bin -L${PREFIX}/lib -L${SDK}/usr/lib/i686-apple-darwin10/4.2.1\" CPPFLAGS=\"-I${NATIVEPREFIX}/lib/clang/3.2/include -I${PREFIX}/include\" SSL_LIBS=\"-lz -lssl -lcrypto\" --disable-tests -with-gui=qt5 PKG_CONFIG_LIBDIR=\"${PREFIX}/lib/pkgconfig\"  --disable-dependency-tracking --disable-maintainer-mode\n+  make $MAKEOPTS\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  make deploy\n+  dmg dmg Bitcoin-Qt.dmg $OUTDIR/Bitcoin-Qt.dmg"
      },
      {
        "sha": "07a021cf0c59ac7d6f96c80ea1cc00b56a402e18",
        "filename": "contrib/gitian-descriptors/gitian-osx-depends.yml",
        "status": "added",
        "additions": 159,
        "deletions": 0,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/gitian-osx-depends.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/gitian-osx-depends.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-depends.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,159 @@\n+---\n+name: \"osx-depends\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+packages:\n+- \"git-core\"\n+- \"automake\"\n+- \"p7zip-full\"\n+\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes: []\n+files:\n+- \"boost_1_55_0.tar.bz2\"\n+- \"db-4.8.30.NC.tar.gz\"\n+- \"miniupnpc-1.9.tar.gz\"\n+- \"openssl-1.0.1h.tar.gz\"\n+- \"protobuf-2.5.0.tar.bz2\"\n+- \"qrencode-3.4.3.tar.bz2\"\n+- \"MacOSX10.7.sdk.tar.gz\"\n+- \"osx-native-depends-r3.tar.gz\"\n+\n+script: |\n+\n+  echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\" | sha256sum -c\n+  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\" | sha256sum -c\n+  echo \"2923e453e880bb949e3d4da9f83dd3cb6f08946d35de0b864d0339cf70934464  miniupnpc-1.9.tar.gz\" | sha256sum -c\n+  echo \"9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093  openssl-1.0.1h.tar.gz\" | sha256sum -c\n+  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n+  echo \"dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98  qrencode-3.4.3.tar.bz2\" | sha256sum -c\n+\n+  REVISION=r4\n+  export SOURCES_PATH=`pwd`\n+  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export PATH=$HOME:$PATH\n+  export SOURCES_PATH=`pwd`\n+  export ZERO_AR_DATE=1\n+\n+  mkdir -p osx-cross-depends/build\n+  cd osx-cross-depends\n+\n+  PREFIX=`pwd`/prefix\n+  NATIVEPREFIX=`pwd`/native-prefix\n+  BUILD_BASE=`pwd`/build\n+  SDK=`pwd`/SDKs/MacOSX10.7.sdk\n+  HOST=x86_64-apple-darwin11\n+  MIN_VERSION=10.6\n+\n+  INT_CFLAGS=\"-target ${HOST} -mmacosx-version-min=${MIN_VERSION} --sysroot ${SDK} -msse2 -Qunused-arguments\"\n+  INT_CXXFLAGS=\"${INT_CFLAGS}\"\n+  INT_LDFLAGS=\"-L${PREFIX}/lib -L${SDK}/usr/lib/i686-apple-darwin10/4.2.1\"\n+  INT_LDFLAGS_CLANG=\"-B${NATIVEPREFIX}/bin\"\n+  INT_CPPFLAGS=\"-I${PREFIX}/include\"\n+  INT_CC=clang\n+  INT_CXX=clang++\n+  INT_OBJC=clang\n+  INT_OBJCXX=clang++\n+  INT_AR=${HOST}-ar\n+  INT_RANLIB=${HOST}-ranlib\n+  INT_LIBTOOL=${HOST}-libtool\n+  INT_INSTALL_NAME_TOOL=${HOST}-install_name_tool\n+\n+  export PATH=${NATIVEPREFIX}/bin:${PATH}\n+\n+  mkdir -p ${NATIVEPREFIX}/bin\n+  mkdir -p ${NATIVEPREFIX}/lib\n+  mkdir -p ${PREFIX}/bin\n+  mkdir -p ${PREFIX}/lib\n+  mkdir -p ${BUILD_BASE}\n+\n+  mkdir -p SDKs\n+  tar -C SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n+\n+  tar xf /home/ubuntu/build/osx-native-depends-r3.tar.gz\n+\n+  # bdb\n+  SOURCE_FILE=${SOURCES_PATH}/db-4.8.30.NC.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/db-4.8.30.NC\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  sed -i 's/__atomic_compare_exchange/__atomic_compare_exchange_db/g' ${BUILD_DIR}/dbinc/atomic.h\n+  pushd ${BUILD_DIR}\n+  cd build_unix;\n+  ../dist/configure --host=${HOST} --prefix=\"${PREFIX}\" --disable-shared --enable-cxx CC=\"${INT_CC}\" CXX=\"${INT_CXX}\" AR=\"${INT_AR}\" RANLIB=\"${INT_RANLIB}\" OBJC=\"${INT_OBJC}\" OBJCXX=\"${INT_OBJCXX}\" CFLAGS=\"${INT_CFLAGS}\" CXXFLAGS=\"${INT_CXXFLAGS}\" LDFLAGS=\"${INT_CLANG_LDFLAGS} ${INT_LDFLAGS}\" CPPFLAGS=\"${INT_CPPFLAGS}\"\n+  make $MAKEOPTS libdb.a libdb_cxx.a\n+  make  install_lib install_include\n+  popd\n+\n+  # openssl\n+  SOURCE_FILE=${SOURCES_PATH}/openssl-1.0.1h.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/openssl-1.0.1h\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR}\n+  sed -ie \"s|cc:|${INT_CC}:|\" ${BUILD_DIR}/Configure\n+  sed -ie \"s|\\(-arch [_a-zA-Z0-9]*\\)|\\1 --sysroot ${SDK}  -target ${HOST} -msse2|\" ${BUILD_DIR}/Configure\n+  AR=\"${INT_AR}\" RANLIB=\"${INT_RANLIB}\" ./Configure --prefix=${PREFIX} --openssldir=${PREFIX}/etc/openssl zlib shared no-krb5 darwin64-x86_64-cc ${INT_LDFLAGS} ${INT_CLANG_LDFLAGS} ${INT_CPPFLAGS}\n+  sed -i \"s|engines apps test|engines|\" ${BUILD_DIR}/Makefile\n+  sed -i \"/define DATE/d\" ${BUILD_DIR}/crypto/Makefile\n+  make -j1 build_libs libcrypto.pc libssl.pc openssl.pc\n+  make -j1 install_sw\n+  popd\n+\n+  #libminiupnpc\n+  SOURCE_FILE=${SOURCES_PATH}/miniupnpc-1.9.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/miniupnpc-1.9\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR}\n+  CFLAGS=\"${INT_CFLAGS} ${INT_CPPFLAGS}\" make $MAKEOPTS OS=Darwin CC=\"${INT_CC}\" AR=\"${INT_AR}\" libminiupnpc.a\n+  install -d ${PREFIX}/include/miniupnpc\n+  install *.h ${PREFIX}/include/miniupnpc\n+  install libminiupnpc.a  ${PREFIX}/lib\n+  popd\n+\n+  # qrencode\n+  SOURCE_FILE=${SOURCES_PATH}/qrencode-3.4.3.tar.bz2\n+  BUILD_DIR=${BUILD_BASE}/qrencode-3.4.3\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR}\n+\n+  # m4 folder is not included in the stable release, which can confuse aclocal\n+  # if its timestamp ends up being earlier than configure.ac when extracted\n+  touch aclocal.m4\n+  ./configure --host=${HOST} --prefix=\"${PREFIX}\" --disable-shared CC=\"${INT_CC}\" CXX=\"${INT_CXX}\" AR=\"${INT_AR}\" RANLIB=\"${INT_RANLIB}\" OBJC=\"${INT_OBJC}\" OBJCXX=\"${INT_OBJCXX}\" CFLAGS=\"${INT_CFLAGS}\" CXXFLAGS=\"${INT_CXXFLAGS}\" LDFLAGS=\"${INT_CLANG_LDFLAGS} ${INT_LDFLAGS}\" CPPFLAGS=\"${INT_CPPFLAGS}\" --disable-shared -without-tools --disable-sdltest --disable-dependency-tracking\n+  make $MAKEOPTS\n+  make install\n+  popd\n+\n+  # libprotobuf\n+  SOURCE_FILE=${SOURCES_PATH}/protobuf-2.5.0.tar.bz2\n+  BUILD_DIR=${BUILD_BASE}/protobuf-2.5.0\n+\n+  tar -C ${BUILD_BASE} -xjf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR}\n+  ./configure --host=${HOST} --prefix=\"${PREFIX}\" --disable-shared --enable-cxx CC=\"${INT_CC}\" CXX=\"${INT_CXX}\" AR=\"${INT_AR}\" RANLIB=\"${INT_RANLIB}\" OBJC=\"${INT_OBJC}\" OBJCXX=\"${INT_OBJCXX}\" CFLAGS=\"${INT_CFLAGS}\" CXXFLAGS=\"${INT_CXXFLAGS}\" LDFLAGS=\"${INT_CLANG_LDFLAGS} ${INT_LDFLAGS}\" CPPFLAGS=\"${INT_CPPFLAGS}\" --enable-shared=no --disable-dependency-tracking --with-protoc=${NATIVEPREFIX}/bin/protoc\n+  cd src\n+  make $MAKEOPTS libprotobuf.la\n+  make install-libLTLIBRARIES install-nobase_includeHEADERS\n+  cd ..\n+  make install-pkgconfigDATA\n+  popd\n+\n+  # boost\n+  SOURCE_FILE=${SOURCES_PATH}/boost_1_55_0.tar.bz2\n+  BUILD_DIR=${BUILD_BASE}/boost_1_55_0\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR}\n+  ./bootstrap.sh --with-libraries=chrono,filesystem,program_options,system,thread,test\n+  echo \"using darwin : : ${INT_CXX} : <cxxflags>\\\"${INT_CFLAGS} ${INT_CPPFLAGS}\\\" <linkflags>\\\"${INT_LDFLAGS} ${INT_CLANG_LDFLAGS}\\\" <archiver>\\\"${INT_LIBTOOL}\\\" <striper>\\\"${INT_STRIP}\\\" : ;\" > \"user-config.jam\"\n+  ./b2 -d2 --layout=tagged --build-type=complete --prefix=\"${PREFIX}\" --toolset=darwin-4.2.1 --user-config=user-config.jam variant=release threading=multi link=static install\n+  popd\n+\n+  export GZIP=\"-9n\"\n+  find prefix | sort | tar --no-recursion -czf osx-depends-${REVISION}.tar.gz -T -\n+\n+  mv osx-depends-${REVISION}.tar.gz $OUTDIR"
      },
      {
        "sha": "a753ad704ffe70d56f20be3562f2152d48862be9",
        "filename": "contrib/gitian-descriptors/gitian-osx-native.yml",
        "status": "added",
        "additions": 178,
        "deletions": 0,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/gitian-osx-native.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/gitian-osx-native.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-native.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,178 @@\n+---\n+name: \"osx-native\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+packages:\n+- \"git-core\"\n+- \"automake\"\n+- \"faketime\"\n+- \"libssl-dev\"\n+- \"libbz2-dev\"\n+- \"libz-dev\"\n+- \"cmake\"\n+- \"libcap-dev\"\n+- \"p7zip-full\"\n+- \"uuid-dev\"\n+\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes: []\n+files:\n+- \"10cc648683617cca8bcbeae507888099b41b530c.tar.gz\"\n+- \"cctools-809.tar.gz\"\n+- \"dyld-195.5.tar.gz\"\n+- \"ld64-127.2.tar.gz\"\n+- \"protobuf-2.5.0.tar.bz2\"\n+- \"MacOSX10.7.sdk.tar.gz\"\n+- \"cdrkit-1.1.11.tar.gz\"\n+- \"libdmg-hfsplus-v0.1.tar.gz\"\n+- \"clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\"\n+- \"cdrkit-deterministic.patch\"\n+\n+\n+script: |\n+\n+  echo \"18406961fd4a1ec5c7ea35c91d6a80a2f8bb797a2bd243a610bd75e13eff9aca  10cc648683617cca8bcbeae507888099b41b530c.tar.gz\" | sha256sum -c\n+  echo \"03ba62749b843b131c7304a044a98c6ffacd65b1399b921d69add0375f79d8ad  cctools-809.tar.gz\" | sha256sum -c\n+  echo \"2cf0484c87cf79b606b351a7055a247dae84093ae92c747a74e0cde2c8c8f83c  dyld-195.5.tar.gz\" | sha256sum -c\n+  echo \"97b75547b2bd761306ab3e15ae297f01e7ab9760b922bc657f4ef72e4e052142  ld64-127.2.tar.gz\" | sha256sum -c\n+  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n+  echo \"d1c030756ecc182defee9fe885638c1785d35a2c2a297b4604c0e0dcc78e47da  cdrkit-1.1.11.tar.gz\" | sha256sum -c\n+  echo \"6569a02eb31c2827080d7d59001869ea14484c281efab0ae7f2b86af5c3120b3  libdmg-hfsplus-v0.1.tar.gz\" | sha256sum -c\n+  echo \"b9d57a88f9514fa1f327a1a703756d0c1c960f4c58494a5bd80313245d13ffff  clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\" | sha256sum -c\n+  echo \"cc12bdbd7a09f71cb2a6a3e6ec3e0abe885ca7111c2b47857f5095e5980caf4f  cdrkit-deterministic.patch\" | sha256sum -c\n+\n+\n+  REVISION=r3\n+  export REFERENCE_DATETIME\n+  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+\n+  REAL_AR=`which ar`\n+  REAL_RANLIB=`which ranlib`\n+  REAL_DATE=`which date`\n+\n+  echo '#!/bin/bash' > $HOME/ar\n+  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ar\n+  echo \"$REAL_AR \\\"\\$@\\\"\" >> $HOME/ar\n+\n+  echo '#!/bin/bash' > $HOME/ranlib\n+  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ranlib\n+  echo \"$REAL_RANLIB \\\"\\$@\\\"\" >> $HOME/ranlib\n+\n+  echo '#!/bin/bash' > $HOME/date\n+  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/date\n+  echo \"$REAL_DATE \\\"\\$@\\\"\" >> $HOME/date\n+\n+  chmod +x $HOME/ar $HOME/ranlib $HOME/date\n+\n+\n+  export PATH=$HOME:$PATH\n+  export SOURCES_PATH=`pwd`\n+\n+  mkdir -p osx-cross-depends/build\n+  cd osx-cross-depends\n+\n+  NATIVEPREFIX=`pwd`/native-prefix\n+  BUILD_BASE=`pwd`/build\n+  SDK=`pwd`/SDKs/MacOSX10.7.sdk\n+  HOST=x86_64-apple-darwin11\n+  MIN_VERSION=10.6\n+\n+  CFLAGS=\"\"\n+  CXXFLAGS=\"${CFLAGS}\"\n+  LDFLAGS=\"-L${NATIVEPREFIX}/lib\"\n+\n+  export PATH=${NATIVEPREFIX}/bin:${PATH}\n+\n+  mkdir -p ${NATIVEPREFIX}/bin\n+  mkdir -p ${NATIVEPREFIX}/lib\n+\n+  mkdir -p SDKs\n+  tar -C SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n+\n+  #  Clang\n+  SOURCE_FILE=${SOURCES_PATH}/clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/clang+llvm-3.2-x86-linux-ubuntu-12.04\n+\n+  mkdir -p ${NATIVEPREFIX}/lib/clang/3.2/include\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  cp ${BUILD_DIR}/bin/clang ${NATIVEPREFIX}/bin/\n+  cp ${BUILD_DIR}/bin/clang++ ${NATIVEPREFIX}/bin/\n+  cp ${BUILD_DIR}/lib/libLTO.so ${NATIVEPREFIX}/lib/\n+  cp ${BUILD_DIR}/lib/clang/3.2/include/* ${NATIVEPREFIX}/lib/clang/3.2/include\n+\n+  # cctools\n+  SOURCE_FILE=${SOURCES_PATH}/10cc648683617cca8bcbeae507888099b41b530c.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/toolchain4-10cc648683617cca8bcbeae507888099b41b530c\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  mkdir -p ${BUILD_DIR}/sdks\n+  pushd ${BUILD_DIR}/sdks;\n+  ln -sf ${SDK} MacOSX10.7.sdk\n+  ln -sf ${SOURCES_PATH}/cctools-809.tar.gz ${BUILD_DIR}/cctools2odcctools/cctools-809.tar.gz\n+  ln -sf ${SOURCES_PATH}/ld64-127.2.tar.gz ${BUILD_DIR}/cctools2odcctools/ld64-127.2.tar.gz\n+  ln -sf ${SOURCES_PATH}/dyld-195.5.tar.gz ${BUILD_DIR}/cctools2odcctools/dyld-195.5.tar.gz\n+\n+  tar -C ${BUILD_DIR} -xf ${SOURCES_PATH}/clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n+  #   Hack in the use of our llvm headers rather than grabbing the old llvm-gcc.\n+  sed -i \"s|GCC_DIR|LLVM_CLANG_DIR|g\" ${BUILD_DIR}/cctools2odcctools/extract.sh\n+  sed -i \"s|llvmgcc42-2336.1|clang+llvm-3.2-x86-linux-ubuntu-12.04|g\" ${BUILD_DIR}/cctools2odcctools/extract.sh\n+  sed -i \"s|\\${LLVM_CLANG_DIR}/llvmCore/include/llvm-c|\\${LLVM_CLANG_DIR}/include/llvm-c \\${LLVM_CLANG_DIR}/include/llvm |\" ${BUILD_DIR}/cctools2odcctools/extract.sh\n+\n+  sed -i \"s|fAC_INIT|AC_INIT|\" ${BUILD_DIR}/cctools2odcctools/files/configure.ac\n+  sed -i 's/\\# Dynamically linked LTO/\\t ;\\&\\n\\t linux*)\\n# Dynamically linked LTO/' ${BUILD_DIR}/cctools2odcctools/files/configure.ac\n+\n+  cd ${BUILD_DIR}/cctools2odcctools\n+  ./extract.sh --osxver 10.7\n+  cd odcctools-809\n+  ./configure --prefix=${NATIVEPREFIX} --target=${HOST} CFLAGS=\"${CFLAGS} -I${NATIVEPREFIX}/include -D__DARWIN_UNIX03 -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS\" LDFLAGS=\"${LDFLAGS} -Wl,-rpath=\\\\\\$\\$ORIGIN/../lib\" --with-sysroot=${SDK}\n+\n+  #   The 'PC' define in sparc/reg.h conflicts but doesn't get used anyway. Just rename it.\n+  sed -i \"s|define\\tPC|define\\tPC_|\"  ${BUILD_DIR}/cctools2odcctools/odcctools-809/include/architecture/sparc/reg.h\n+  make $MAKEOPTS\n+  make install\n+  popd\n+\n+  # protoc\n+  SOURCE_FILE=${SOURCES_PATH}/protobuf-2.5.0.tar.bz2\n+  BUILD_DIR=${BUILD_BASE}/protobuf-2.5.0\n+\n+  tar -C ${BUILD_BASE} -xjf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR};\n+  ./configure --enable-shared=no --disable-dependency-tracking --prefix=${NATIVEPREFIX}\n+  make $MAKEOPTS\n+  cp ${BUILD_DIR}/src/protoc ${NATIVEPREFIX}/bin/\n+  popd\n+\n+  # cdrkit\n+  SOURCE_FILE=${SOURCES_PATH}/cdrkit-1.1.11.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/cdrkit-1.1.11\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  pushd ${BUILD_DIR}\n+  patch -p1 < ${SOURCES_PATH}/cdrkit-deterministic.patch\n+  cmake -DCMAKE_INSTALL_PREFIX=${NATIVEPREFIX}\n+  make $MAKEOPTS genisoimage\n+  make -C genisoimage install\n+  popd\n+\n+  # libdmg-hfsplus\n+  SOURCE_FILE=${SOURCES_PATH}/libdmg-hfsplus-v0.1.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/libdmg-hfsplus-libdmg-hfsplus-v0.1\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+  mkdir -p ${BUILD_DIR}/build\n+  pushd ${BUILD_DIR}/build\n+  cmake -DCMAKE_INSTALL_PREFIX:PATH=${NATIVEPREFIX}/bin ..\n+  make $MAKEOPTS\n+  make install\n+  popd\n+\n+  rm -rf native-prefix/docs\n+\n+  export GZIP=\"-9n\"\n+  find native-prefix | sort | tar --no-recursion -czf osx-native-depends-$REVISION.tar.gz -T -\n+  mv osx-native-depends-$REVISION.tar.gz $OUTDIR"
      },
      {
        "sha": "5e0ad9222a855c0b22a58470b975f280e7b37d2c",
        "filename": "contrib/gitian-descriptors/gitian-osx-qt.yml",
        "status": "added",
        "additions": 186,
        "deletions": 0,
        "changes": 186,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/gitian-osx-qt.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/gitian-osx-qt.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-qt.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,186 @@\n+---\n+name: \"osx-qt\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+packages:\n+- \"git-core\"\n+- \"automake\"\n+- \"p7zip-full\"\n+\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes: []\n+files:\n+- \"qt-everywhere-opensource-src-5.2.1.tar.gz\"\n+- \"osx-native-depends-r3.tar.gz\"\n+- \"osx-depends-r4.tar.gz\"\n+- \"MacOSX10.7.sdk.tar.gz\"\n+\n+script: |\n+\n+  echo \"84e924181d4ad6db00239d87250cc89868484a14841f77fb85ab1f1dbdcd7da1  qt-everywhere-opensource-src-5.2.1.tar.gz\" | sha256sum -c\n+\n+  REVISION=r4\n+  export SOURCES_PATH=`pwd`\n+  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export ZERO_AR_DATE=1\n+\n+  export TZ=UTC\n+\n+  REAL_DATE=`which date`\n+  echo '#!/bin/bash' > $HOME/date\n+  echo \"$REAL_DATE -d \\\"${REFERENCE_DATETIME}\\\" \\\"\\$@\\\"\" >> $HOME/date\n+\n+  chmod +x $HOME/date\n+  export PATH=$HOME:$PATH\n+\n+  mkdir -p osx-cross-depends/build\n+  cd osx-cross-depends\n+\n+  PREFIX=`pwd`/prefix\n+  NATIVEPREFIX=`pwd`/native-prefix\n+  BUILD_BASE=`pwd`/build\n+  SDK=`pwd`/SDKs/MacOSX10.7.sdk\n+  HOST=x86_64-apple-darwin11\n+  MIN_VERSION=10.6\n+\n+  INT_CFLAGS=\"-target ${HOST} -mmacosx-version-min=${MIN_VERSION} --sysroot ${SDK} -msse2 -Qunused-arguments\"\n+  INT_CXXFLAGS=\"${INT_CFLAGS}\"\n+  INT_LDFLAGS=\"-L${PREFIX}/lib -L${SDK}/usr/lib/i686-apple-darwin10/4.2.1\"\n+  INT_LDFLAGS_CLANG=\"-B${NATIVEPREFIX}/bin\"\n+  INT_CPPFLAGS=\"-I${PREFIX}/include\"\n+  INT_CC=clang\n+  INT_CXX=clang++\n+  INT_OBJC=clang\n+  INT_OBJCXX=clang++\n+  INT_AR=${HOST}-ar\n+  INT_RANLIB=${HOST}-ranlib\n+  INT_LIBTOOL=${HOST}-libtool\n+  INT_INSTALL_NAME_TOOL=${HOST}-install_name_tool\n+\n+  export PATH=${NATIVEPREFIX}/bin:${PATH}\n+\n+  mkdir -p ${NATIVEPREFIX}/bin\n+  mkdir -p ${NATIVEPREFIX}/lib\n+  mkdir -p ${PREFIX}/bin\n+  mkdir -p ${PREFIX}/lib\n+  mkdir -p ${BUILD_BASE}\n+\n+  mkdir -p SDKs\n+  tar -C SDKs -xf ${SOURCES_PATH}/MacOSX10.7.sdk.tar.gz\n+\n+  tar xf /home/ubuntu/build/osx-native-depends-r3.tar.gz\n+\n+  export PATH=`pwd`/native-prefix/bin:$PATH\n+  tar xf /home/ubuntu/build/osx-depends-r4.tar.gz\n+\n+  SOURCE_FILE=${SOURCES_PATH}/qt-everywhere-opensource-src-5.2.1.tar.gz\n+  BUILD_DIR=${BUILD_BASE}/qt-everywhere-opensource-src-5.2.1\n+\n+\n+  tar -C ${BUILD_BASE} -xf ${SOURCE_FILE}\n+\n+  # Install our mkspec. All files are pulled from the macx-clang spec, except for\n+  # our custom qmake.conf\n+  SPECFILE=${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux/qmake.conf\n+\n+  mkdir -p ${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux\n+  cp -f ${BUILD_DIR}/qtbase/mkspecs/macx-clang/Info.plist.lib ${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux/\n+  cp -f ${BUILD_DIR}/qtbase/mkspecs/macx-clang/Info.plist.app ${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux/\n+  cp -f ${BUILD_DIR}/qtbase/mkspecs/macx-clang/qplatformdefs.h ${BUILD_DIR}/qtbase/mkspecs/macx-clang-linux/\n+\n+  cat > ${SPECFILE} <<ENDCONF\n+ \n+  MAKEFILE_GENERATOR      = UNIX\n+  CONFIG                 += app_bundle incremental global_init_link_order lib_version_first plugin_no_soname absolute_library_soname\n+  QMAKE_INCREMENTAL_STYLE = sublib\n+\n+  include(../common/macx.conf)\n+  include(../common/gcc-base-mac.conf)\n+  include(../common/clang.conf)\n+  include(../common/clang-mac.conf)\n+\n+  QMAKE_XCODE_VERSION=4.3\n+  QMAKE_XCODE_DEVELOPER_PATH=/Developer\n+\n+  QMAKE_MACOSX_DEPLOYMENT_TARGET = ${MIN_VERSION}\n+\n+  QMAKE_MAC_SDK=macosx\n+  QMAKE_MAC_SDK.macosx.path = ${SDK}\n+  QMAKE_MAC_SDK.macosx.platform_name = macosx\n+  QMAKE_MAC_SDK_PATH=${SDK}\n+\n+  QMAKE_CFLAGS += -target ${HOST}\n+  QMAKE_OBJECTIVE_CFLAGS += -target ${HOST}\n+  QMAKE_CXXFLAGS += -target ${HOST}\n+\n+  QMAKE_LFLAGS += -target ${HOST}\n+  QMAKE_AR = ${HOST}-ar cq\n+  QMAKE_RANLIB=${HOST}-ranlib\n+  QMAKE_LIBTOOL=${HOST}-libtool\n+  QMAKE_INSTALL_NAME_TOOL=${HOST}-install_name_tool\n+\n+  load(qt_config)\n+ \n+  ENDCONF\n+\n+  pushd ${BUILD_DIR}\n+  ./configure -release -opensource -openssl-linked \\\n+  -no-audio-backend  -no-javascript-jit -no-sql-sqlite -no-sql-tds \\\n+  -no-cups -no-iconv -no-dbus -no-gif -no-audio-backend -no-freetype \\\n+  -no-javascript-jit -no-sql-sqlite -no-nis -no-cups -no-iconv -no-pch \\\n+  -no-dbus -no-gif -no-sm -nomake examples -no-feature-style-plastique \\\n+  -no-xcb -no-qml-debug -no-pch -no-nis \\\n+  -no-feature-style-cde -no-feature-style-s60 -no-feature-style-motif \\\n+  -no-feature-style-windowsmobile -no-feature-style-windowsce \\\n+  -no-feature-style-cleanlooks \\\n+  -no-sql-db2 -no-sql-ibase -no-sql-oci -no-sql-tds -no-sql-mysql \\\n+  -no-sql-odbc -no-sql-psql -no-sql-sqlite -no-sql-sqlite2 \\\n+  -skip qtsvg -skip qtwebkit -skip qtwebkit-examples -skip qtserialport \\\n+  -skip qtdeclarative -skip qtmultimedia -skip qtimageformats \\\n+  -skip qtlocation -skip qtsensors -skip qtquick1 -skip qtxmlpatterns \\\n+  -skip qtquickcontrols -skip qtactiveqt -skip qtconnectivity \\\n+  -skip qtwinextras -skip qtscript \\\n+  -prefix ${PREFIX} -bindir ${NATIVEPREFIX}/bin \\\n+  -confirm-license -xplatform macx-clang-linux -v ${INT_LDFLAGS}\n+\n+  # RCC's output is sorted using each file entry's hash as the key. Unfortunately,\n+  # the hash function uses a random seed for each run so the results aren't\n+  # deterministic. This leads to static resources being defined in a random order,\n+  # which in-turn means that object files are not predictable.\n+  # Fortunately, this upsets Qt's unit tests as well, so they've added the\n+  # QT_RCC_TEST environment variable to set a pre-defined seed. Here, do the same\n+  # thing for the same reason.\n+  QT_RCC_TEST=1 make $MAKEOPTS module-qtbase-make_first\n+\n+\n+  make $MAKEOPTS module-qttranslations-make_first\n+  make $MAKEOPTS module-qttools-make_first\n+  make $MAKEOPTS -C qtbase\n+  make -C qtbase install\n+  make -C qttranslations install\n+  make -C qttools/src/linguist install\n+  popd\n+\n+  # This file should not be installed to the destination. It's native and\n+  # non-deterministic. Remove it.\n+  # See: https://bugreports.qt-project.org/browse/QTBUG-31393\n+  rm -f ${PREFIX}/lib/libQt5Bootstrap.a\n+\n+  rm -f ${PREFIX}/lib/Qt*.framework/Qt*.prl\n+  pushd ${PREFIX}/include\n+  ln -sf ../lib/QtNetwork.framework/Headers/ QtNetwork\n+  ln -sf ../lib/QtWidgets.framework/Headers/ QtWidgets\n+  ln -sf ../lib/QtGui.framework/Headers/ QtGui\n+  ln -sf ../lib/QtCore.framework/Headers/ QtCore\n+  ln -sf ../lib/QtTest.framework/Headers/ QtTest\n+  popd\n+\n+  rm -f ${PREFIX}/lib/*.la\n+  find ${PREFIX}/lib -name \"*.prl\" -delete\n+\n+  export GZIP=\"-9n\"\n+  find native-prefix prefix | sort | tar --no-recursion -czf osx-depends-qt-5.2.1-${REVISION}.tar.gz -T -\n+\n+  mv osx-depends-qt-5.2.1-${REVISION}.tar.gz $OUTDIR"
      },
      {
        "sha": "b2795c5376941dc34ee3812731ce83c9181d3a15",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,97 @@\n+---\n+name: \"bitcoin\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"git-core\"\n+- \"unzip\"\n+- \"nsis\"\n+- \"faketime\"\n+- \"autoconf2.13\"\n+- \"libtool\"\n+- \"automake\"\n+- \"pkg-config\"\n+- \"bsdmainutils\"\n+\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files:\n+- \"qt-win32-5.2.0-gitian-r3.zip\"\n+- \"qt-win64-5.2.0-gitian-r3.zip\"\n+- \"boost-win32-1.55.0-gitian-r6.zip\"\n+- \"boost-win64-1.55.0-gitian-r6.zip\"\n+- \"bitcoin-deps-win32-gitian-r13.zip\"\n+- \"bitcoin-deps-win64-gitian-r13.zip\"\n+- \"protobuf-win32-2.5.0-gitian-r4.zip\"\n+- \"protobuf-win64-2.5.0-gitian-r4.zip\"\n+script: |\n+  # Defines\n+  export TZ=UTC\n+  INDIR=$HOME/build\n+  OPTFLAGS='-O2'\n+  TEMPDIR=\"$HOME/tempdir\"\n+  NEEDDIST=1\n+  # Qt: workaround for determinism in resource ordering\n+  #  Qt5's rcc uses a QHash to store the files for the resource.\n+  #  A security fix in QHash makes the ordering of keys to be different on every run\n+  #  (https://qt.gitorious.org/qt/qtbase/commit/c01eaa438200edc9a3bbcd8ae1e8ded058bea268).\n+  #  This is good in general but qrc shouldn't be doing a traversal over a randomized container.\n+  #  The thorough solution would be to use QMap instead of QHash, but this requires patching Qt.\n+  #  For now luckily there is a test mode that forces a fixed seed.\n+  export QT_RCC_TEST=1\n+  for BITS in 32 64; do # for architectures\n+    #\n+    STAGING=$HOME/staging${BITS}\n+    BUILDDIR=$HOME/build${BITS}\n+    BINDIR=$OUTDIR/$BITS\n+    if [ \"x$BITS\" = \"x32\" ]; then\n+      HOST=i686-w64-mingw32\n+    else\n+      HOST=x86_64-w64-mingw32\n+    fi\n+    export PATH=$STAGING/host/bin:$PATH\n+    mkdir -p $STAGING $BUILDDIR $BINDIR\n+    #\n+    cd $STAGING\n+    unzip $INDIR/qt-win${BITS}-5.2.0-gitian-r3.zip\n+    unzip $INDIR/boost-win${BITS}-1.55.0-gitian-r6.zip\n+    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r13.zip\n+    unzip $INDIR/protobuf-win${BITS}-2.5.0-gitian-r4.zip\n+    if [ \"x$NEEDDIST\" = \"x1\" ]; then\n+      # Make source code archive which is architecture independent so it only needs to be done once\n+      cd $HOME/build/bitcoin\n+      ./autogen.sh\n+      ./configure --bindir=$OUTDIR --prefix=$STAGING --host=$HOST --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n+      make dist\n+      DISTNAME=`echo bitcoin-*.tar.gz`\n+      NEEDDIST=0\n+    fi\n+    # Build platform-dependent executables from source archive\n+    cd $BUILDDIR\n+    mkdir -p distsrc\n+    cd distsrc\n+    tar --strip-components=1 -xf $HOME/build/bitcoin/$DISTNAME\n+    ./configure --enable-upnp-default --bindir=$BINDIR --prefix=$STAGING --host=$HOST --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include ${OPTFLAGS}\" LDFLAGS=\"-L$STAGING/lib ${OPTFLAGS}\" CXXFLAGS=\"-frandom-seed=bitcoin ${OPTFLAGS}\"\n+    export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+    export FAKETIME=$REFERENCE_DATETIME\n+    make $MAKEOPTS\n+    make deploy\n+    make install-strip\n+    cp -f bitcoin-*setup*.exe $BINDIR/\n+    unset LD_PRELOAD\n+    unset FAKETIME\n+  done # for BITS in\n+\n+  # sort distribution tar file and normalize user/group/mtime information for deterministic output\n+  mkdir -p $OUTDIR/src\n+  rm -rf $TEMPDIR\n+  mkdir -p $TEMPDIR\n+  cd $TEMPDIR\n+  tar -xvf $HOME/build/bitcoin/$DISTNAME | sort | tar --no-recursion -cT /dev/stdin --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 --mtime=\"$REFERENCE_DATETIME\" | gzip -n > $OUTDIR/src/$DISTNAME\n+"
      },
      {
        "sha": "fd3b55325aebdee54eb30529e00696be865d0274",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,74 +0,0 @@\n----\n-name: \"bitcoin\"\n-suites:\n-- \"lucid\"\n-architectures:\n-- \"i386\"\n-packages:\n-- \"mingw32\"\n-- \"git-core\"\n-- \"unzip\"\n-- \"nsis\"\n-- \"faketime\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files:\n-- \"qt-win32-4.8.3-gitian-r1.zip\"\n-- \"boost-win32-1.50.0-gitian2.zip\"\n-- \"bitcoin-deps-0.0.5.zip\"\n-script: |\n-  #\n-  mkdir $HOME/qt\n-  cd $HOME/qt\n-  unzip ../build/qt-win32-4.8.3-gitian-r1.zip\n-  cd $HOME/build/\n-  export PATH=$HOME/qt/bin/:$PATH\n-  #\n-  mkdir boost_1_50_0\n-  cd boost_1_50_0\n-  mkdir -p stage/lib\n-  unzip ../boost-win32-1.50.0-gitian2.zip\n-  cd bin/$GBUILD_BITS\n-  for lib in *; do\n-    i586-mingw32msvc-ar rc ../../stage/lib/libboost_${lib}-mt-s.a $lib/*.o\n-    i586-mingw32msvc-ranlib ../../stage/lib/libboost_${lib}-mt-s.a\n-  done\n-  cd ../..\n-  mv include/boost .\n-  cd ..\n-  #\n-  unzip bitcoin-deps-0.0.5.zip\n-  #\n-  find -type f | xargs touch --date=\"$REFERENCE_DATETIME\"\n-  #\n-  cd bitcoin\n-  mkdir -p $OUTDIR/src\n-  git archive HEAD | tar -x -C $OUTDIR/src\n-  cp $OUTDIR/src/doc/README_windows.txt $OUTDIR/readme.txt\n-  cp $OUTDIR/src/COPYING $OUTDIR/COPYING.txt\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  $HOME/qt/src/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$HOME/build/miniupnpc MINIUPNPC_INCLUDE_PATH=$HOME/build/ BDB_LIB_PATH=$HOME/build/db-4.8.30.NC/build_unix BDB_INCLUDE_PATH=$HOME/build/db-4.8.30.NC/build_unix BOOST_LIB_PATH=$HOME/build/boost_1_50_0/stage/lib BOOST_INCLUDE_PATH=$HOME/build/boost_1_50_0 BOOST_LIB_SUFFIX=-mt-s BOOST_THREAD_LIB_SUFFIX=_win32-mt-s OPENSSL_LIB_PATH=$HOME/build/openssl-1.0.1c OPENSSL_INCLUDE_PATH=$HOME/build/openssl-1.0.1c/include QRENCODE_LIB_PATH=$HOME/build/qrencode-3.2.0/.libs QRENCODE_INCLUDE_PATH=$HOME/build/qrencode-3.2.0 USE_QRCODE=1 INCLUDEPATH=$HOME/build DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_LRELEASE=lrelease QMAKE_CXXFLAGS=-frandom-seed=bitcoin USE_BUILD_INFO=1\n-  make $MAKEOPTS\n-  cp release/bitcoin-qt.exe $OUTDIR/\n-  #\n-  cd src\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  make -f makefile.linux-mingw $MAKEOPTS DEPSDIR=$HOME/build bitcoind.exe USE_UPNP=0 DEBUGFLAGS=\"-frandom-seed=bitcoin\"\n-  i586-mingw32msvc-strip bitcoind.exe\n-  mkdir $OUTDIR/daemon\n-  cp bitcoind.exe $OUTDIR/daemon\n-  cd ..\n-  mkdir nsis\n-  git archive HEAD | tar -x -C nsis\n-  cd nsis/src\n-  mkdir ../release\n-  cp ../../release/* ../release/\n-  cp ../../src/*.exe .\n-  makensis ../share/setup.nsi\n-  cp ../share/bitcoin-*-win32-setup.exe $OUTDIR/"
      },
      {
        "sha": "195d0e36ff191f57c2daf3133146908d80ae7e42",
        "filename": "contrib/gitian-descriptors/gitian.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/gitian-descriptors/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/gitian-descriptors/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian.yml?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,55 +0,0 @@\n----\n-name: \"bitcoin\"\n-suites:\n-- \"lucid\"\n-architectures:\n-- \"i386\"\n-- \"amd64\"\n-packages: \n-- \"libdb4.8++-dev\"\n-- \"qt4-qmake\"\n-- \"libqt4-dev\"\n-- \"libboost-system-dev\"\n-- \"libboost-filesystem-dev\"\n-- \"libboost-program-options-dev\"\n-- \"libboost-thread-dev\"\n-- \"libssl-dev\"\n-- \"git-core\"\n-- \"unzip\"\n-- \"pkg-config\"\n-- \"libpng12-dev\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files:\n-- \"miniupnpc-1.6.tar.gz\"\n-- \"qrencode-3.2.0.tar.bz2\"\n-script: |\n-  INSTDIR=\"$HOME/install\"\n-  export LIBRARY_PATH=\"$INSTDIR/lib\"\n-  #\n-  tar xzf miniupnpc-1.6.tar.gz\n-  cd miniupnpc-1.6\n-  INSTALLPREFIX=$INSTDIR make $MAKEOPTS install\n-  cd ..\n-  #\n-  tar xjf qrencode-3.2.0.tar.bz2\n-  cd qrencode-3.2.0\n-  ./configure --prefix=$INSTDIR --enable-static --disable-shared\n-  make $MAKEOPTS install\n-  cd ..\n-  #\n-  cd bitcoin\n-  mkdir -p $OUTDIR/src\n-  git archive HEAD | tar -x -C $OUTDIR/src\n-  cp $OUTDIR/src/doc/README.md $OUTDIR\n-  cp $OUTDIR/src/COPYING $OUTDIR\n-  cd src\n-  make -f makefile.unix STATIC=1 OPENSSL_INCLUDE_PATH=\"$INSTDIR/include\" OPENSSL_LIB_PATH=\"$INSTDIR/lib\" $MAKEOPTS bitcoind USE_UPNP=0 DEBUGFLAGS=\n-  mkdir -p $OUTDIR/bin/$GBUILD_BITS\n-  install -s bitcoind $OUTDIR/bin/$GBUILD_BITS\n-  cd ..\n-  qmake INCLUDEPATH=\"$INSTDIR/include\" LIBS=\"-L$INSTDIR/lib\" RELEASE=1 USE_QRCODE=1\n-  make $MAKEOPTS\n-  install bitcoin-qt $OUTDIR/bin/$GBUILD_BITS"
      },
      {
        "sha": "1b7af08843df5b8ce7790e749d4f18b6fc36c6e8",
        "filename": "contrib/gitian-descriptors/protobuf-win.yml",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/protobuf-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/protobuf-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/protobuf-win.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,65 @@\n+---\n+name: \"protobuf-win32\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"zip\"\n+- \"faketime\"\n+reference_datetime: \"2013-04-15 00:00:00\"\n+remotes: []\n+files:\n+- \"protobuf-2.5.0.tar.bz2\"\n+script: |\n+  #\n+  export TZ=UTC\n+  INDIR=$HOME/build\n+  TEMPDIR=$HOME/tmp\n+  OPTFLAGS=\"-O2\"\n+  # Integrity Check\n+  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n+\n+  for BITS in 32 64; do # for architectures\n+    #\n+    INSTALLPREFIX=$HOME/staging${BITS}\n+    BUILDDIR=$HOME/build${BITS}\n+    if [ \"x$BITS\" = \"x32\" ]; then\n+      HOST=i686-w64-mingw32\n+    else\n+      HOST=x86_64-w64-mingw32\n+    fi\n+    #\n+    mkdir -p $INSTALLPREFIX $BUILDDIR\n+    cd $BUILDDIR\n+    #\n+    tar xjf $INDIR/protobuf-2.5.0.tar.bz2\n+    cd protobuf-2.5.0\n+    # First: build a native (linux) protoc\n+    ./configure --enable-shared=no --disable-dependency-tracking --without-zlib CXXFLAGS=\"-frandom-seed=11 ${OPTFLAGS}\"\n+    make\n+    mkdir -p $INSTALLPREFIX/host/bin\n+    cp src/protoc $INSTALLPREFIX/host/bin\n+    # Now recompile with the mingw cross-compiler:\n+    make distclean\n+    ./configure --prefix=$INSTALLPREFIX --enable-shared=no --disable-dependency-tracking --without-zlib --with-protoc=$INSTALLPREFIX/host/bin/protoc --host=$HOST CXXFLAGS=\"-frandom-seed=11 ${OPTFLAGS}\"\n+    export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+    export FAKETIME=$REFERENCE_DATETIME\n+    make\n+    make install\n+    # post-process all generated libraries to be deterministic\n+    # extract them to a temporary directory then re-build them deterministically\n+    for LIB in $(find $INSTALLPREFIX -name \\*.a); do\n+        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n+        $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt\n+        rm $LIB\n+        $HOST-ar crsD $LIB $(cat /tmp/list.txt)\n+    done\n+    #\n+    cd $INSTALLPREFIX\n+    find include lib host | sort | zip -X@ $OUTDIR/protobuf-win$BITS-2.5.0-gitian-r4.zip\n+    unset LD_PRELOAD\n+    unset FAKETIME\n+  done # for BITS in"
      },
      {
        "sha": "fd86b4df1dceb6815fd9d61f329b6a779e80108f",
        "filename": "contrib/gitian-descriptors/qt-linux.yml",
        "status": "added",
        "additions": 264,
        "deletions": 0,
        "changes": 264,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/qt-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/qt-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-linux.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,264 @@\n+---\n+name: \"qt-linux\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages:\n+- \"zip\"\n+- \"unzip\"\n+- \"faketime\"\n+- \"unzip\"\n+- \"libxext-dev\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"qt-everywhere-opensource-src-4.6.4.tar.gz\"\n+script: |\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  if [ \"x$GBUILD_BITS\" = \"x32\" ]; then\n+    ARCH='i386-linux-gnu'\n+  else\n+    ARCH='x86_64-linux-gnu'\n+  fi\n+  # The purpose of this gitian build is not to actually build Qt, but to export\n+  # the headers as well as pkgconfig files in a useable format so that we can\n+  # pretend to link against an older version. The goal is to link to the\n+  # system version of Qt 4.\n+  # Also build development tools.\n+  INSTALLPREFIX=\"$HOME/install\"\n+  # Integrity Check\n+  echo \"9ad4d46c721b53a429ed5a2eecfd3c239a9ab566562f183f99d3125f1a234250  qt-everywhere-opensource-src-4.6.4.tar.gz\" | sha256sum -c\n+  # Make install directories\n+  mkdir -p $INSTALLPREFIX\n+  mkdir -p $INSTALLPREFIX/include\n+  PKGCONFIGDIR=$INSTALLPREFIX/lib/pkgconfig\n+  mkdir -p $PKGCONFIGDIR\n+  #\n+  tar xzf qt-everywhere-opensource-src-4.6.4.tar.gz\n+  cd qt-everywhere-opensource-src-4.6.4\n+  QTBUILDDIR=$(pwd)\n+  sed 's/TODAY=`date +%Y-%m-%d`/TODAY=2011-01-30/' -i configure\n+\n+  # Need to build 4.6-versioned host utilities as well (lrelease/qrc/lupdate/...)\n+  ./configure -prefix $INSTALLPREFIX -confirm-license -release -opensource -no-qt3support -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -no-opengl -nomake examples -nomake demos -nomake docs\n+  #\n+  make $MAKEOPTS -C src/tools install  # (rcc, uic, moc)\n+  make $MAKEOPTS -C tools/linguist/lrelease install  # (lrelease)\n+  # install includes and pkgconfig files\n+  for DIR in src/corelib src/gui src/testlib src/dbus src/network; do\n+    (\n+    cd $DIR\n+    # extract module (QtCore/QtNetwork/...) from Makefile\n+    MODULE=$(grep \"QMAKE_TARGET *=\" Makefile | cut -d = -f 2 | xargs)\n+    # patch makefile so that not everything is build first\n+    sed -i 's/first: all/first:/g' Makefile\n+    make install_flat_headers install_class_headers install_targ_headers\n+    # create and install pkgconfig descriptor\n+    make ../../lib/pkgconfig/$MODULE.pc\n+    sed -e \"s,$QTBUILDDIR,$INSTALLPREFIX,g\" ../../lib/pkgconfig/$MODULE.pc > $PKGCONFIGDIR/$MODULE.pc\n+    # create links to existing Qt libraries\n+    ln -sf /usr/lib/${ARCH}/lib${MODULE}.so.4 ${INSTALLPREFIX}/lib/lib${MODULE}.so\n+    )\n+  done\n+\n+  # Write our own configuration header, same as Ubuntu\n+  # When we don't do this, the configuration will be without STL support (the QString from/to stdString methods)\n+  QCONFIG=$INSTALLPREFIX/include/Qt/qconfig.h\n+  echo '\n+  /* Qt Edition */\n+  #ifndef QT_EDITION\n+  #  define QT_EDITION QT_EDITION_OPENSOURCE\n+  #endif\n+  ' > $QCONFIG\n+\n+  if [ \"x$GBUILD_BITS\" = \"x32\" ]; then\n+    echo '\n+  /* Machine byte-order */\n+  #define Q_BIG_ENDIAN 4321\n+  #define Q_LITTLE_ENDIAN 1234\n+  #define QT_BUILD_KEY \"i386 linux g++-4 full-config\"\n+  #define QT_BUILD_KEY_COMPAT \"i686 Linux g++-4 full-config\"\n+\n+  #ifdef QT_BOOTSTRAPPED\n+  #define Q_BYTE_ORDER Q_LITTLE_ENDIAN\n+  #else\n+  #define Q_BYTE_ORDER Q_LITTLE_ENDIAN\n+  #endif\n+  /* Machine Architecture */\n+  #ifndef QT_BOOTSTRAPPED\n+  # define QT_ARCH_I386\n+  #else\n+  # define QT_ARCH_I386\n+  #endif\n+  /* Compile time features */\n+  #define QT_LARGEFILE_SUPPORT 64\n+  #define QT_POINTER_SIZE 4\n+  ' >> $QCONFIG\n+  else\n+    echo '\n+  /* Machine byte-order */\n+  #define Q_BIG_ENDIAN 4321\n+  #define Q_LITTLE_ENDIAN 1234\n+  #define QT_BUILD_KEY \"x86_64 linux g++-4 full-config\"\n+  #define QT_BUILD_KEY_COMPAT \"x86_64 Linux g++-4 full-config\"\n+\n+  #ifdef QT_BOOTSTRAPPED\n+  #define Q_BYTE_ORDER Q_LITTLE_ENDIAN\n+  #else\n+  #define Q_BYTE_ORDER Q_LITTLE_ENDIAN\n+  #endif\n+  /* Machine Architecture */\n+  #ifndef QT_BOOTSTRAPPED\n+  # define QT_ARCH_X86_64\n+  #else\n+  # define QT_ARCH_X86_64\n+  #endif\n+  /* Compile time features */\n+  #define QT_LARGEFILE_SUPPORT 64\n+  #define QT_POINTER_SIZE 8\n+  ' >> $QCONFIG\n+  fi\n+\n+  echo '\n+  #ifndef QT_BOOTSTRAPPED\n+\n+  #if defined(QT_NO_EGL) && defined(QT_EGL)\n+  # undef QT_NO_EGL\n+  #elif !defined(QT_NO_EGL) && !defined(QT_EGL)\n+  # define QT_NO_EGL\n+  #endif\n+\n+  #if defined(QT_NO_GSTREAMER) && defined(QT_GSTREAMER)\n+  # undef QT_NO_GSTREAMER\n+  #elif !defined(QT_NO_GSTREAMER) && !defined(QT_GSTREAMER)\n+  # define QT_NO_GSTREAMER\n+  #endif\n+\n+  #if defined(QT_NO_ICD) && defined(QT_ICD)\n+  # undef QT_NO_ICD\n+  #elif !defined(QT_NO_ICD) && !defined(QT_ICD)\n+  # define QT_NO_ICD\n+  #endif\n+\n+  #if defined(QT_NO_IMAGEFORMAT_JPEG) && defined(QT_IMAGEFORMAT_JPEG)\n+  # undef QT_NO_IMAGEFORMAT_JPEG\n+  #elif !defined(QT_NO_IMAGEFORMAT_JPEG) && !defined(QT_IMAGEFORMAT_JPEG)\n+  # define QT_NO_IMAGEFORMAT_JPEG\n+  #endif\n+\n+  #if defined(QT_NO_IMAGEFORMAT_MNG) && defined(QT_IMAGEFORMAT_MNG)\n+  # undef QT_NO_IMAGEFORMAT_MNG\n+  #elif !defined(QT_NO_IMAGEFORMAT_MNG) && !defined(QT_IMAGEFORMAT_MNG)\n+  # define QT_NO_IMAGEFORMAT_MNG\n+  #endif\n+\n+  #if defined(QT_NO_IMAGEFORMAT_TIFF) && defined(QT_IMAGEFORMAT_TIFF)\n+  # undef QT_NO_IMAGEFORMAT_TIFF\n+  #elif !defined(QT_NO_IMAGEFORMAT_TIFF) && !defined(QT_IMAGEFORMAT_TIFF)\n+  # define QT_NO_IMAGEFORMAT_TIFF\n+  #endif\n+\n+  #if defined(QT_NO_MULTIMEDIA) && defined(QT_MULTIMEDIA)\n+  # undef QT_NO_MULTIMEDIA\n+  #elif !defined(QT_NO_MULTIMEDIA) && !defined(QT_MULTIMEDIA)\n+  # define QT_NO_MULTIMEDIA\n+  #endif\n+\n+  #if defined(QT_NO_OPENVG) && defined(QT_OPENVG)\n+  # undef QT_NO_OPENVG\n+  #elif !defined(QT_NO_OPENVG) && !defined(QT_OPENVG)\n+  # define QT_NO_OPENVG\n+  #endif\n+\n+  #if defined(QT_NO_PHONON) && defined(QT_PHONON)\n+  # undef QT_NO_PHONON\n+  #elif !defined(QT_NO_PHONON) && !defined(QT_PHONON)\n+  # define QT_NO_PHONON\n+  #endif\n+\n+  #if defined(QT_NO_PULSEAUDIO) && defined(QT_PULSEAUDIO)\n+  # undef QT_NO_PULSEAUDIO\n+  #elif !defined(QT_NO_PULSEAUDIO) && !defined(QT_PULSEAUDIO)\n+  # define QT_NO_PULSEAUDIO\n+  #endif\n+\n+  #if defined(QT_NO_S60) && defined(QT_S60)\n+  # undef QT_NO_S60\n+  #elif !defined(QT_NO_S60) && !defined(QT_S60)\n+  # define QT_NO_S60\n+  #endif\n+\n+  #if defined(QT_NO_STYLE_S60) && defined(QT_STYLE_S60)\n+  # undef QT_NO_STYLE_S60\n+  #elif !defined(QT_NO_STYLE_S60) && !defined(QT_STYLE_S60)\n+  # define QT_NO_STYLE_S60\n+  #endif\n+\n+  #if defined(QT_NO_SXE) && defined(QT_SXE)\n+  # undef QT_NO_SXE\n+  #elif !defined(QT_NO_SXE) && !defined(QT_SXE)\n+  # define QT_NO_SXE\n+  #endif\n+\n+  #if defined(QT_NO_WEBKIT) && defined(QT_WEBKIT)\n+  # undef QT_NO_WEBKIT\n+  #elif !defined(QT_NO_WEBKIT) && !defined(QT_WEBKIT)\n+  # define QT_NO_WEBKIT\n+  #endif\n+\n+  #if defined(QT_NO_ZLIB) && defined(QT_ZLIB)\n+  # undef QT_NO_ZLIB\n+  #elif !defined(QT_NO_ZLIB) && !defined(QT_ZLIB)\n+  # define QT_NO_ZLIB\n+  #endif\n+\n+  #if defined(QT_RUNTIME_XCURSOR) && defined(QT_NO_RUNTIME_XCURSOR)\n+  # undef QT_RUNTIME_XCURSOR\n+  #elif !defined(QT_RUNTIME_XCURSOR) && !defined(QT_NO_RUNTIME_XCURSOR)\n+  # define QT_RUNTIME_XCURSOR\n+  #endif\n+\n+  #if defined(QT_RUNTIME_XFIXES) && defined(QT_NO_RUNTIME_XFIXES)\n+  # undef QT_RUNTIME_XFIXES\n+  #elif !defined(QT_RUNTIME_XFIXES) && !defined(QT_NO_RUNTIME_XFIXES)\n+  # define QT_RUNTIME_XFIXES\n+  #endif\n+\n+  #if defined(QT_RUNTIME_XINERAMA) && defined(QT_NO_RUNTIME_XINERAMA)\n+  # undef QT_RUNTIME_XINERAMA\n+  #elif !defined(QT_RUNTIME_XINERAMA) && !defined(QT_NO_RUNTIME_XINERAMA)\n+  # define QT_RUNTIME_XINERAMA\n+  #endif\n+\n+  #if defined(QT_RUNTIME_XINPUT) && defined(QT_NO_RUNTIME_XINPUT)\n+  # undef QT_RUNTIME_XINPUT\n+  #elif !defined(QT_RUNTIME_XINPUT) && !defined(QT_NO_RUNTIME_XINPUT)\n+  # define QT_RUNTIME_XINPUT\n+  #endif\n+\n+  #if defined(QT_RUNTIME_XRANDR) && defined(QT_NO_RUNTIME_XRANDR)\n+  # undef QT_RUNTIME_XRANDR\n+  #elif !defined(QT_RUNTIME_XRANDR) && !defined(QT_NO_RUNTIME_XRANDR)\n+  # define QT_RUNTIME_XRANDR\n+  #endif\n+\n+  #if defined(QT_USE_MATH_H_FLOATS) && defined(QT_NO_USE_MATH_H_FLOATS)\n+  # undef QT_USE_MATH_H_FLOATS\n+  #elif !defined(QT_USE_MATH_H_FLOATS) && !defined(QT_NO_USE_MATH_H_FLOATS)\n+  # define QT_USE_MATH_H_FLOATS\n+  #endif\n+\n+  #endif // QT_BOOTSTRAPPED\n+\n+  #define QT_VISIBILITY_AVAILABLE\n+  ' >> $QCONFIG\n+  cp $QCONFIG $INSTALLPREFIX/include/QtCore/qconfig.h\n+\n+  cd $INSTALLPREFIX\n+  # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n+  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+  # Create a .tar.gz because .zip has problems with symbolic links\n+  find | sort | tar --no-recursion -cT /dev/stdin --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 --mtime=\"$REFERENCE_DATETIME\" | gzip -n > $OUTDIR/qt-linux${GBUILD_BITS}-4.6.4-gitian-r1.tar.gz"
      },
      {
        "sha": "57bc4c31804926f5c5ae120c4e41fefb8c8220b7",
        "filename": "contrib/gitian-descriptors/qt-win.yml",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/qt-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-descriptors/qt-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win.yml?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,92 @@\n+---\n+name: \"qt\"\n+suites:\n+- \"precise\"\n+architectures:\n+- \"amd64\"\n+packages: \n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"zip\"\n+- \"unzip\"\n+- \"faketime\"\n+- \"libz-dev\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"qt-everywhere-opensource-src-5.2.0.tar.gz\"\n+- \"bitcoin-deps-win32-gitian-r13.zip\"\n+- \"bitcoin-deps-win64-gitian-r13.zip\"\n+script: |\n+  # Defines\n+  export TZ=UTC\n+  INDIR=$HOME/build\n+  TEMPDIR=$HOME/tmp\n+  # Qt: workaround for determinism in resource ordering\n+  #  Qt5's rcc uses a QHash to store the files for the resource.\n+  #  A security fix in QHash makes the ordering of keys to be different on every run\n+  #  (https://qt.gitorious.org/qt/qtbase/commit/c01eaa438200edc9a3bbcd8ae1e8ded058bea268).\n+  #  This is good in general but qrc shouldn't be doing a traversal over a randomized container.\n+  #  The thorough solution would be to use QMap instead of QHash, but this requires patching Qt.\n+  #  For now luckily there is a test mode that forces a fixed seed.\n+  export QT_RCC_TEST=1\n+  # Integrity Check\n+  echo \"395ec72277c5786c65b8163ef5817fd03d0a1f524a6d47f53624baf8056f1081  qt-everywhere-opensource-src-5.2.0.tar.gz\" | sha256sum -c\n+\n+  for BITS in 32 64; do # for architectures\n+    #\n+    INSTALLPREFIX=$HOME/staging${BITS}\n+    BUILDDIR=$HOME/build${BITS}\n+    DEPSDIR=$HOME/deps${BITS}\n+    if [ \"x$BITS\" = \"x32\" ]; then\n+      HOST=i686-w64-mingw32\n+    else\n+      HOST=x86_64-w64-mingw32\n+    fi\n+    #\n+    mkdir -p $INSTALLPREFIX $INSTALLPREFIX/host/bin $DEPSDIR $BUILDDIR\n+    #\n+    # Need mingw-compiled openssl from bitcoin-deps:\n+    cd $DEPSDIR\n+    unzip $INDIR/bitcoin-deps-win${BITS}-gitian-r13.zip\n+    #\n+    cd $BUILDDIR\n+    #\n+    tar xzf $INDIR/qt-everywhere-opensource-src-5.2.0.tar.gz\n+    cd qt-everywhere-opensource-src-5.2.0\n+    SPECNAME=\"win32-g++\"\n+    SPECFILE=\"qtbase/mkspecs/${SPECNAME}/qmake.conf\"\n+    sed 's/qt_instdate=`date +%Y-%m-%d`/qt_instdate=2011-01-30/' -i qtbase/configure\n+    sed --posix \"s|QMAKE_CFLAGS            = -pipe -fno-keep-inline-dllexport|QMAKE_CFLAGS\\t\\t= -pipe -fno-keep-inline-dllexport -isystem /usr/$HOST/include/ -frandom-seed=qtbuild -I$DEPSDIR/include|\" -i ${SPECFILE}\n+    sed --posix \"s|QMAKE_LFLAGS            =|QMAKE_LFLAGS\\t\\t= -L$DEPSDIR/lib|\" -i ${SPECFILE}\n+    # Before we tried to pass arguments to ar (static linking) in using QMAKE_LIB, however\n+    #  qt removes the arguments for ar and provides a script which makes it impossible to pass the determinism flag -\n+    #  so rather than try to replace ar, post-process all libraries and plugins at the end.\n+    #\n+    # Don't load faketime while compiling Qt, qmake will get stuck in nearly infinite loops\n+    #export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+    #export FAKETIME=$REFERENCE_DATETIME\n+    #\n+    # Compile static libraries, and use statically linked openssl (-openssl-linked):\n+    OPENSSL_LIBS=\"-L$DEPSDIR/lib -lssl -lcrypto -lgdi32\" ./configure -prefix $INSTALLPREFIX -bindir $INSTALLPREFIX/host/bin -confirm-license -release -opensource -static -xplatform $SPECNAME -device-option CROSS_COMPILE=\"$HOST-\" -no-audio-backend -no-javascript-jit -no-sql-sqlite -no-sql-odbc -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-opengl -no-compile-examples -no-feature-style-windowsce -no-feature-style-windowsmobile -no-qml-debug -openssl-linked -skip qtsvg -skip qtwebkit -skip qtwebkit-examples -skip qtserialport -skip qtdeclarative -skip qtmultimedia -skip qtimageformats -skip qtlocation -skip qtsensors -skip qtquick1 -skip qtquickcontrols -skip qtactiveqt -skip qtconnectivity -skip qtwinextras -skip qtxmlpatterns -skip qtscript -skip qtdoc -system-libpng -system-zlib\n+    make $MAKEOPTS install\n+    # post-process all generated libraries and plugins to be deterministic\n+    # extract them to a temporary directory then re-build them deterministically\n+    for LIB in $(find $INSTALLPREFIX -name *.a); do\n+        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n+        $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt\n+        rm $LIB\n+        $HOST-ar crsD $LIB $(cat /tmp/list.txt)\n+    done\n+    #\n+    cd $INSTALLPREFIX\n+    # Remove unused non-deterministic stuff\n+    rm host/bin/qtpaths.exe lib/libQt5Bootstrap.a lib/libQt5Bootstrap.la\n+    # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n+    export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+    export FAKETIME=$REFERENCE_DATETIME\n+    find -print0 | xargs -r0 touch # fix up timestamps before packaging\n+    find | sort | zip -X@ $OUTDIR/qt-win${BITS}-5.2.0-gitian-r3.zip\n+    unset LD_PRELOAD\n+    unset FAKETIME\n+  done # for BITS in"
      },
      {
        "sha": "0b711790e64930be3ca7caf4d293f0e4d808651b",
        "filename": "contrib/gitian-descriptors/qt-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/gitian-descriptors/qt-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/gitian-descriptors/qt-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win32.yml?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,54 +0,0 @@\n----\n-name: \"qt\"\n-suites:\n-- \"lucid\"\n-architectures:\n-- \"i386\"\n-packages: \n-- \"mingw32\"\n-- \"zip\"\n-- \"faketime\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"qt-everywhere-opensource-src-4.8.3.tar.gz\"\n-script: |\n-  INSTDIR=\"$HOME/qt/\"\n-  mkdir $INSTDIR\n-  SRCDIR=\"$INSTDIR/src/\"\n-  mkdir $SRCDIR\n-  #\n-  tar xzf qt-everywhere-opensource-src-4.8.3.tar.gz\n-  cd qt-everywhere-opensource-src-4.8.3\n-  sed 's/$TODAY/2011-01-30/' -i configure\n-  sed 's/i686-pc-mingw32-/i586-mingw32msvc-/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix 's|QMAKE_CFLAGS\\t\\t= -pipe|QMAKE_CFLAGS\\t\\t= -pipe -isystem /usr/i586-mingw32msvc/include/ -frandom-seed=qtbuild|' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed 's/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions -mthreads/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed 's/QMAKE_LFLAGS_EXCEPTIONS_ON = -mthreads/QMAKE_LFLAGS_EXCEPTIONS_ON = -lmingwthrd/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix 's/QMAKE_MOC\\t\\t= i586-mingw32msvc-moc/QMAKE_MOC\\t\\t= moc/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix 's/QMAKE_RCC\\t\\t= i586-mingw32msvc-rcc/QMAKE_RCC\\t\\t= rcc/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix 's/QMAKE_UIC\\t\\t= i586-mingw32msvc-uic/QMAKE_UIC\\t\\t= uic/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  # ar adds timestamps to every object file included in the static library\n-  # providing -D as ar argument is supposed to solve it, but doesn't work as qmake strips off the arguments and adds -M to pass a script...\n-  # which somehow cannot be combined with other flags.\n-  # use faketime only for ar, as it confuses make/qmake into hanging sometimes\n-  sed --posix \"s|QMAKE_LIB\\t\\t= i586-mingw32msvc-ar -ru|QMAKE_LIB\\t\\t= $HOME/ar -Dr|\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  echo '#!/bin/bash' > $HOME/ar\n-  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ar\n-  echo 'i586-mingw32msvc-ar \"$@\"' >> $HOME/ar\n-  chmod +x $HOME/ar\n-  #export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  ./configure -prefix $INSTDIR -confirm-license -release -opensource -static -no-qt3support -xplatform unsupported/win32-g++-cross -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -no-opengl -nomake examples -nomake demos -nomake docs -no-feature-style-plastique -no-feature-style-cleanlooks -no-feature-style-motif -no-feature-style-cde -no-feature-style-windowsce -no-feature-style-windowsmobile -no-feature-style-s60\n-  find . -name *.prl | xargs -l sed 's|/\\.||' -i\n-  find . -name *.prl | xargs -l sed 's|/$||' -i\n-  make $MAKEOPTS install\n-  cp -a bin $SRCDIR/\n-  cd $INSTDIR\n-  find . -name *.prl | xargs -l sed 's|/$||' -i\n-  #sed 's|QMAKE_PRL_LIBS.*|QMAKE_PRL_LIBS = -lQtDeclarative -lQtScript -lQtSvg -lQtSql -lQtXmlPatterns -lQtGui -lgdi32 -lcomdlg32 -loleaut32 -limm32 -lwinmm -lwinspool -lmsimg32 -lQtNetwork -lQtCore -lole32 -luuid -lws2_32 -ladvapi32 -lshell32 -luser32 -lkernel32|' -i imports/Qt/labs/particles/qmlparticlesplugin.prl\n-\n-  # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  zip -r $OUTDIR/qt-win32-4.8.3-gitian-r1.zip *"
      },
      {
        "sha": "df06e19fa4b109286dbbb7596c86d31fe0f1052f",
        "filename": "contrib/gitian-downloader/aschildbach-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-downloader/aschildbach-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-downloader/aschildbach-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/aschildbach-key.pgp?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "6b0bd240ba4cf8df485a8caa689717a12ef6b3c8",
        "filename": "contrib/gitian-downloader/cfields-key.pgp",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-downloader/cfields-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-downloader/cfields-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/cfields-key.pgp?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.12 (GNU/Linux)\n+\n+mQINBFOHTh4BEADdKsRvmNhX+B+bcPsgMkp8ztwJA5g/rmrOlHQpKOOf4P2tAr6w\n+FmXCChWF9Iq3pDFQ0t0iq5rgisFPyrGVT/VToMmH+/PSLTyIdAlgkRYDMAPsMAFV\n+MaADH4yiAgJ3cdXtysjaNQV5O25ypqq6/obUjZJD5Enn6b/UgHe2+7LTmTNsskOx\n+5s/WPPht79EY1kM4JQfmDx68CsmqeSAlT6yeO3RQcLn/l46cfXiwzMO4h1hsZS1r\n+pgciRp0EHK9uAjF2rjqt8v4SDxwyTnwfpBBulzvH9mBf+HRXWzoTMR4sC/oOZext\n+hKAH/ex47BxN3HU3ftNhCK2c1xcU1UOGSjbf0RdbwuSCxxa7mktEDumvOxAk9EBB\n++PDPv7jO1FBK3rsJdscYQIL0AiRyO49VfNLARa34OqUi8pOAxKBQ9plO02W1gp7a\n+DVBPI05TZ46Y8dTR2Bc1raAgOyxnXM7jfiQG2gSULiKAJAI4HwOiodaiiHAxDaIo\n+a3mtsmfN25TZUQuA0I0BvHbJvLRlVnyZm3XVOcwReKJpZJV4qRhd3XNrERZdz6ZK\n+cAZnyC/X+Uzo4HfnVSsJk1GpIa4seYyrVCFfHMiAA6SkgAUFbV26KCOv4rNR2GlV\n+l2fVhu1RKOEUJ8nRcEqf93SehRVYdI67LepIPgmIwi0KG4HhoTbIHDAKWQARAQAB\n+tCtDb3J5IEZpZWxkcyA8Y2ZpZWxkc0BiaXRjb2luZm91bmRhdGlvbi5vcmc+iQI4\n+BBMBAgAiBQJTh04eAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRAcJJH/\n+6w73cBTiEADIGZSueBFmaOTJCgasKGguHns/n8P94EQBZr07rrgN99Rzp85WvDUN\n+Qa72wj3GNcAffN7aZlIWv4g+fjyr9AzHekjI/7iwwSYIfjfTR/xRUW7czRfKAOrK\n+iwpEzgv440i7PBvkS/AhNdUNkm+cJvaQUej/F2/O52qDLEpHuzvjAUUWlSeF9/oO\n+AjM9dfC24L5k5cVwQvH9noxk3EyuE7BuiGE5a+kKiORrtxiHeUG6GYQxuqrPucLU\n+fI67ETyXa0YSpYm5/O65BKMTMpmkMvv1JC2kqqsYTrO5p158CrKzq2xvpuG4ABsb\n+9KwICUGW31Ndr6TXwQJFa1b7VK4G1g6M1DFkVTOLJnEyOwgYxsXrV5QFpzpAOAji\n+6KcxNGeow1avAFYbqjjLgu9UNuq6b8du13hjkQxVs2NAP1Kd/u2ADwxQHMhZGVEC\n+9LIcLVSP9ShY6fR8m6fwSlJfpiV81uLNVD8KIyvp+pYTQ/FnxoPhPIwalYquBZKi\n+0u38igW75IzZ0fYvJgTumE/8ofSVkutVtrQb21eJclVrJGMNweTlJcJhAWdKkjDC\n+e6mSj8GItKV1ef+eusXSzs/wPyTaqgkELvvAOZdwUq3kobQErE5HOuPEOvcwuY96\n+DcxLexirCGW5wCUq7Db0c0dUjQwzzb5OTW2jdnPVR0qxi29TnOJ2aLkCDQRTh04e\n+ARAAuJKpI6NTCQrjEqe9AYywN8676+fPS5bqXkyb/iub6MXeQdwpH0K42lXAaYMq\n+ow/0aLlvGWCHuJJGozoOWpTzQ+VPbhpdARoLCop5fYTpy8Q17ubLeeODDtr6jtDN\n+lmg+9PBIErIVUnUS2wNZuJRVsfwlLaU3T2v8kQnQ6AEbl/QwyWW9nB8rAWBu6Hvs\n+VdtcBmtHSr9xAGBGfW6rSVhTitikR4lWJPdNJxI3pLaswpLIUIQ1rssKO4glljcp\n+C6nhMvRkDLvDFvDP9QnmwY/A4ch5S6ANPrhOjQuu9njjQ+/ImrJTjAXqHwg5KdTc\n+NKxufgvi9elOQ422o0No3yKdRoRA4kdcUmqA9gNZDyX0ZTd17aNqc42Zt3aYLJ11\n+bLZZp0qnfhkmhbsBZZtaLNkuF+RGPWysxY7KPMm+nHn6f3Wpr18E+T02wi02r4nS\n+HOQI+gppDqy3Vq3ZZNoUZynctiLZVHkqi+WYXqfD2tEn8UJKpht7jrZlNgkHFgT7\n+T0/U4+JmaQ/HltE+IexAIH0GP0Jt6hmRoZimdoy8Q8NY5t/fn9CQNJm5InrHvooN\n+aFmZMvzGTGiTqBqnA/7k9FCUEG98LK11MsIssY8YE/F6HD69R3ISyRvhUbpFvhD8\n+c6zOkEKngTWvyRevrDrDz2yoZ1+T1X350+92rbEc/8WyutcAEQEAAYkCHwQYAQIA\n+CQUCU4dOHgIbDAAKCRAcJJH/6w73cAakEACv4EUEjtFjqnGB0Lru5FKs1obWcf37\n+c4a5yYvOw58dkEZ9hsq34qWGLT128n6R24KEG+3O4CbplAD5Kt2eAPracbPHMAn8\n+TGmC+KjiGlBR5xCY9dD0fn5EbRWOa+Fdcj1DpneaqMl9vLnBbqGp7pa/MwSOc+FB\n+0Ms2rcGJJMNHgITfP22eCf6pvf/xq7kKbUJ3Kjqdc2hWlRMjC/OOeITdrgycfDk/\n+AOzLNqk5q7bYOxna6rWDLGSkCATyQKaBTVK7wRd1VrIhI4vfFqy+BWYXyXJ0pxjS\n+eaCDwbWHX/KW+0qLsmHxFMAyHJPjs8LEwK/DRbmWhe1HzPcBKmpyjqlkuxPjAdSl\n+hP4+IBvVNLf2Kh3uFHehk9A6oCYZGe3lLfQnOxIantXF7IROTmiZZsb+08w6cIXE\n++r6kWG6vP2aCVtzYNfY+2p5xfg3yMxcxENJki1WSCOq6WVf9IWFzSJu+0+eazD3L\n+3QpZoSX5VvT6x05C0Ay1ert0Q5MyF84Eh8mDqL4PhpWtQhZMp8SG4jqFVgrhM4sl\n+vWGYXGns4tbnNPiiksjBD8TTvG3+mt48sNJIpHThjdWJSZjllYG7jV8oi7HrX8M2\n+LOwWWLYxHkqi9wpmrWHSmniex6ABozcqrb+EgSMnHuSd7glmOJxHToJIudJbKG5D\n+MrD0ofsytfy1LQ==\n+=DE4h\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "f5e6382b846d1826f3c4a8306a1d39d4cf1031bc",
        "filename": "contrib/gitian-downloader/linux-download-config",
        "status": "modified",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-downloader/linux-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-downloader/linux-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/linux-download-config?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -8,31 +8,35 @@ rss:\n   pattern: bitcoin-\\d+.\\d+.\\d+-linux-gitian.zip\n signers:\n   0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n-    weight: 40\n     name: BlueMatt\n     key: bluematt\n   BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n-    weight: 40\n     name: Devrandom\n     key: devrandom\n   E463A93F5F3117EEDE6C7316BD02942421F4889F:\n-    weight: 40\n     name: Luke-Jr\n     key: luke-jr\n   D762373D24904A3E42F33B08B9A408E71DAAC974:\n-    weight: 40\n     name: \"Pieter Wuille\"\n     key: sipa\n   77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n-    weight: 40\n     name: tcatm\n     key: tcatm\n   01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n-    weight: 40\n     name: \"Gavin Andresen\"\n     key: gavinandresen\n   71A3B16735405025D447E8F274810B012346C9A6:\n-    weight: 40\n     name: \"Wladimir J. van der Laan\"\n     key: laanwj\n-minimum_weight: 120\n+  AEC1884398647C47413C1C3FB1179EB7347DC10D:\n+    name: \"Warren Togami\"\n+    key: wtogami\n+  9692B91BBF0E8D34DFD33B1882C5C009628ECF0C:\n+    name: michagogo\n+    key: michagogo\n+  E944AE667CF960B1004BC32FCA662BE18B877A60:\n+    name: \"Andreas Schildbach\"\n+    key: aschildbach\n+  C060A6635913D98A3587D7DB1C2491FFEB0EF770:\n+    name: \"Cory Fields\"\n+    key: \"cfields\""
      },
      {
        "sha": "47bc404554b41866c5626384c30a9e4f9261958c",
        "filename": "contrib/gitian-downloader/michagogo-key.pgp",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-downloader/michagogo-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-downloader/michagogo-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/michagogo-key.pgp?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,59 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.12 (GNU/Linux)\n+\n+mQENBFGeqJ4BCADb7SI3/+q93gIvN0AGRg9Mtz73OLIOzCHeeoyn+tp7JcYNzxkQ\n+9lfeXiEfn72Sh8gHkLtLIqr7HlIMo8DxSS8JPRVjlJGkNyAW4SeEwN2wNa5OV8k0\n+N4jBa9a1csFyCyrEkPKvkUpBkQDvNXjNxyEhHwyZqPanKxy6NXIHOJji8ObOMQXI\n+T9HwJrpjRth3u4uKG968JBTEyAXAmkt0Zidl1Ykgzcedk4mJSE9uZCW8DjSv2wML\n+XcQz8+dYsoskT3KRdkowLHxAfj1BNyNc1+rKLghliM5vSQWi+Lbhi1Bxh4sY1UwA\n+lKnAGqrnAGyIvCtkwTq5QI6ufF2ZY44bvVgpABEBAAG0IU1pY2hhZ29nbyA8bWlj\n+aGFnb2dvQHNlcnZlci5mYWtlPokBOAQTAQIAIgUCUZ6ongIbAwYLCQgHAwIGFQgC\n+CQoLBBYCAwECHgECF4AACgkQgsXACWKOzwzMUAgAuqUmK10xE5C3lUym2f72z0t6\n+a2NM5Wfjr9//Y1/okC36C5XAMEtN2UwckPzzJ5p5D5y5yzwfZq5Jd8Py29VQIMsV\n+7FbC1a0H3D+bCyX+JJ6FAmUbnWOQ/+mydYc74RvD8iwjePNT6kziZNv6dMGctJTl\n+0alwjtQYgyGkeYKnIxbcyjHX/IawLUrunb/6mSKun87T8+NM/omfFCTc3l8TakpM\n+0wyNYRiUkIfUBvB8sDUU3A80qKN/hqRKvlFu3+/kMiAc9ZYQrbmsB+sYWdmM+4zw\n+8NBw3yuYzWyPuoa4PR5ZmS9F11WLMR5vTRCdLudAqYsWu3LtV6vAIvlOUa2LMLRg\n+TWljaGFnb2dvIChSZWdpc3RlcmVkIG5pY2sgbWljaGFnb2dvIG9uIGZyZWVub2Rl\n+IGFzIG9mIE9jdG9iZXIgMTIsIDIwMTMpIDxtaWNoYWdvZ29Ac2VydmVyLmZha2U+\n+iQE4BBMBAgAiBQJSWarzAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRCC\n+xcAJYo7PDA7nB/91wAiaMlU5nHLUu0anhNQbGvUdFgKK1zO90S5KzUdJcY438jcS\n+UJW1az8l9U9JBRIfPRYVhz/Z1TAJ+dCzD7D8BXHFeGEr0zNOh87ly9aB5du7dpN2\n+oSBD6wLcJpqxt4h+XjSS2CX98/2ZIJxXENE2KySaTXP39Xl3eNwvJTUBA4XlcMey\n+J8KMp/IERli4H0O7vRyLgu3yYpUArTqAonzG1g2lfB35PQJfeInrRSniQ336otnZ\n+A8qwJ63kfUtWVDRz0g1fnvtiLGPivDJaI5hyIaUeJPaXU1+sg7YNroDu60o2NGZh\n+F+0IjHlvRfzzA+F9Vw38rpSqR3BmCdjf6Sv3iQEcBBABAgAGBQJSWa9/AAoJEH+r\n+EUJn5PoE/hgH/1T2dAthVucA/hzY0nl4SMjbg+dzNlYBq00Qwx8DRKVjk5et8+kY\n+oPI3DGILcr+ELnxNekeMv9WQBBtJanUh1K5ohZ6ohoR7lG18LXf5HCdspflB5Me6\n+LMA6iMryEP6gIs9GFuoGe2YQavm58YrkqhcPu34dGN7kdurfEXLvDfVlh5ZbKCsP\n+Gyd7Pbz04SpqykgK1udiTsLVjc70Xhv+jAMqeaCugDX6TLEwjVmZH/xsyKk2Uh3V\n+Oib5FXADAtKH+vSqqhFpXrw7R/NaBzvCbas8l61DFHiUg1/bo8vsV8MtGcyZmzXJ\n+C5Gm0njtGOil/g7JF9siUrpxs9Yyt/h+T2W0W01pY2hhZ29nbyAoVXNlciBhY2Nv\n+dW50IG1pY2hhZ29nbyBvbiBHaXRodWIgYXMgb2YgT2N0b2JlciAxMiwgMjAxMykg\n+PG1pY2hhZ29nb0BzZXJ2ZXIuZmFrZT6JATcEEwECACIFAlJZqxkCGwMGCwkIBwMC\n+BhUIAgkKCwQWAgMBAh4BAheAAAoJEILFwAlijs8M+1AH+IU78ARblqTnJeSl0iWH\n+mEsg4IBK30Q6/exDAcqOEm1Yc171uw2WnGmIvPYOQqxrRTvj3LoQ816dU6jrj6vY\n+s+XX0R2hxy7ILh17D/3UKnHcddu7rmc7pNEqZeBXaMughqQaPOWkAIe52+qK5tsl\n+sWllzTYE4jo29uZ3dAtDcKEJjBo/pIXnu1GOslE1+V4X1H9WDlwrS/JXHzyDQAjt\n+maPR+3gNesDanhrRmrnT3ZXW2ZVd3vGBibhia8PWUhU1uwOH23ySWXncgsHH0Zad\n+UMjd4w3YliZP/mLn2ghAxHB70IO7lgAgN3HYZeFoufP3pcK440A+CezfQiRcjHl/\n+oIkBHAQQAQIABgUCUlmvfwAKCRB/qxFCZ+T6BOq9CACItsrUZPKGeWSTkMHknMrV\n+K5vxIXJVCBb+Tppc0Q/J5p4EkW/RFhTwIP2zw8NLDKMh5oO9md4LXhvfIZkqQJFo\n+6ZtLa3Vf+Kj7uyxezBo4QHA+G7tDsRGaMKVrEMiyLCwS1+hg9VaNzsf7zmQW7mYE\n+vTLMHp3cVaSU7Mh2Dl8rnAaM/DpTUZQwZ+32Qrb/Z4HSa4f278iqoFpjEbBE2KCr\n+vT5yEVvpCZ4lwSgA2a+uTlRTvVV6NA/kpsxU64tmhuEOjy+ToDqJ8wv4mqvWZxMv\n+C6OhfVaXBy3U9gG8aQV0ffXGs+TbCtv8ApHd6E1/AVk0oyZGJaBVrEl688bBIWd/\n+uQENBFGeqJ4BCADFmgR7oEGkFFB5qXnuNYFq1nUGDAh0dLNtAD3J6EMxUZEXdmp+\n+DQHJw6/eDRQaG9EbjNZheycbVUoI8K2Y/Z268HQueGuIEIJv6cZYXoXdWCbDD4fn\n+HMNUX2wNlpDqWxb7PNUEtfU9hI3gmHGlr5OiEh3iV06uiZg4n2rbWPbj45m5LJzv\n+wpCrUA+pLcl9Xjw2cajaSTjdXHk9gvXTCo6s2ZS3/3Q4l+xuzZp1MGNzPQHASMKs\n+wecSJKkYg6W8I5WsVlPd9a8oQCc/Nfz7BPw31MRVR/SF5FAMqaXx5uLwghVdHB2i\n+cLURsOtJlCfP8W06gB7yS+MH45Jq/oxBRiJBABEBAAGJAR8EGAECAAkFAlGeqJ4C\n+GwwACgkQgsXACWKOzwwT4wgAy6ICcnBZ9l2jSu+ldy57F6jf5kpKZgB9NV8V2mMA\n+NeY1wMQ4VTVpU4t3s4E2LYtGNJNkPQVHbt1Pf4dGPasvMPaHMamgwgyqgYixqs0x\n+D5PdKzVrfnjwTTr/ZAFdccSPmvy5/hbY0geQ/+mzdbL07+xaT58JIoG5nySDKhmC\n+VeOvhDZtXMVAhEWBDPEgh/H9sEuBgMgZrzfE1j3q802qiXeQs6WtadWlQ1RN9Iq1\n+ZzIi6u9/BifEIRI0pO/WwKOZdXLTemFUoakoe7uT3A74N96t0G9LZVihYbEoO+Pc\n+5IaHPBV5VLeR3TB1LnnjHVf/Fwi8cnGy50kNWjcbMyEDag==\n+=jyQ4\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "06c164180d5076483c83119ce378f830a671ccb4",
        "filename": "contrib/gitian-downloader/win32-download-config",
        "status": "modified",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-downloader/win32-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-downloader/win32-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/win32-download-config?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -8,31 +8,35 @@ rss:\n   pattern: bitcoin-\\d+.\\d+.\\d+-win32-gitian.zip\n signers:\n   0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n-    weight: 40\n     name: BlueMatt\n     key: bluematt\n   BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n-    weight: 40\n     name: Devrandom\n     key: devrandom\n   E463A93F5F3117EEDE6C7316BD02942421F4889F:\n-    weight: 40\n     name: Luke-Jr\n     key: luke-jr\n   D762373D24904A3E42F33B08B9A408E71DAAC974:\n-    weight: 40\n     name: \"Pieter Wuille\"\n     key: sipa\n   77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n-    weight: 40\n     name: tcatm\n     key: tcatm\n   01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n-    weight: 40\n     name: \"Gavin Andresen\"\n     key: gavinandresen\n   71A3B16735405025D447E8F274810B012346C9A6:\n-    weight: 40\n     name: \"Wladimir J. van der Laan\"\n     key: laanwj\n-minimum_weight: 120\n+  AEC1884398647C47413C1C3FB1179EB7347DC10D:\n+    name: \"Warren Togami\"\n+    key: wtogami\n+  9692B91BBF0E8D34DFD33B1882C5C009628ECF0C:\n+    name: michagogo\n+    key: michagogo\n+  E944AE667CF960B1004BC32FCA662BE18B877A60:\n+    name: \"Andreas Schildbach\"\n+    key: aschildbach\n+  C060A6635913D98A3587D7DB1C2491FFEB0EF770:\n+    name: \"Cory Fields\"\n+    key: \"cfields\""
      },
      {
        "sha": "e0f6c4c5fdf56ffbd6308d4e0a6624290feadff6",
        "filename": "contrib/gitian-downloader/wtogami-key.pgp",
        "status": "added",
        "additions": 131,
        "deletions": 0,
        "changes": 131,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-downloader/wtogami-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/gitian-downloader/wtogami-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/wtogami-key.pgp?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,131 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.13 (GNU/Linux)\n+\n+mQQNBFHOzpUBIADYwJ1vC5npnYCthOtiSna/siS6tdol0OXc82QRgK4Q2YeFCkpN\n+Fw/T5YK34BLVGWDHPoafG2+r1nXIuMZnJIiGw6QVOL2sP9f7PrMmzck5KJPHD14Y\n+GRd9BPkhmt3dXzOCjhig7jI6hKEYayfJNUNs9nlZEvl4QWIBMmk+IyqQz3f1HMfl\n+/GkFDShBYF8Ny7Ktlx7AaXymajm4DCrTkbj5V2ZDqJgyQM549EoPSwXBQYrEjye3\n+g2viC8rUFRFWFjdnx7jFEb1uhx71YGuqiLxKihUW9pbSNK2cLweFazHSVmh+B/pz\n+fxHfUn+ijLSIAnprTmc/rq89un/iiPt0O/mspcCZ6hE5pFIyX+SC+9PrGz+bFSmw\n+PkMOZzG489G8k4t/uZsit6helkl0emg6JiXLTmS/oTuT7B9Z9/MeEhOXFcxUb0fr\n+2aZkEmH5d1oxSBis3D5nylmNJXOUSCpJAZ8E5Sr/5FbF9IPR+NSzosVacqCx5Dxj\n+vJ7HpZKn6pJfmwrghVXQv04NRTcxbHNmwd98cofBtWX8yBO8M2M+jZrU+BVDUbb/\n+A1oAyIbUUswBP768Oh11bELhCly774VwBqTojm2yodLGSyysx4zoa6qL7myfor0m\n+a+K29y8WH9XGmKGMdUOg+q9z+ODky9aToGvEo2eVhKIlJsk0aFAGy/8awy6qRIIj\n+UqLMq6XoFcYlE7SmnFUDDDPlBK/NkFFqySpFhKNRyt69Ea9kYXOxDnf/EnBwHn8m\n+PiFQpeZqgnmhyj8Nk1SSQBgUi07NyXdQ/WIYpWmqqqfHRVQgSE9C1920T1zg/E97\n+n5yYjI/gQQwq9wikkJmog6Ny7MSiwIU4LYV0pTUdI4//EJMId2FH8YEUfvG5ds+F\n+H/o/D4CAJ86KjspizfH8jEjhn0Rm/OtrxLz1rwA1gtF//P3TYNWw5qruL4stP3Rx\n+9Gve8Bm7oCBU73UT2ZJomEsWE3oqXinLRl3YCsjGDg/d3ySD6i0/BBROLIeXkh3M\n+M1CNCqREDGLA0vxQi1o7Zi7ZA4gWPSzvi/8KtSzY1iAQODxWUmOICRP7KQODWJmt\n+roTqhKgZ39wlR6eqkO8ZfAvRYsjvkL+EZFbbKbHxVJLhKchd2qHS+/Q3ov4SFzWY\n+/cE0ChOPDM587Jkps2bynKQAzQ6810FXmJc0ztrPeD3PEbuyY4KNJV8HGViRDJXi\n+wvs8eqfvTDGDPl4aLYVCKO9VqZ2OJvqhRhh71LQ2xRrX1LGnYLnUGCMuEQYKvMcI\n+TSssM/VAfeWAPJDklD0lVNJ7d9Z5ugvJHFc01SaaB47Aod2SPWp5DeiY4A8dcy2w\n+7f4Wx6FcdP1RXqaRZKCapBooN04vsvGllCshABEBAAG0KFdhcnJlbiBUb2dhbWkg\n+KDIwMTMpIDx3dG9nYW1pQGdtYWlsLmNvbT6JBDgEEwECACIFAlHOzpUCGwMGCwkI\n+BwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJELEXnrc0fcENY4Ef/23L9iC/39ekJ8Is\n+1IZdCoDD7/DgVaZqydDcy/ha9uaDFY4MQ0h9RZYo1axVBth/Yxzh1XnvitW8HFKn\n+DXn5wJI++KWpdLMUsTrc2iWsjAGgicmN5bkQvfTnRwn2pF17EUUEhZ8YyE3qMSVD\n+rDBECLAswT4Oiq9r9yw3VCFsRaxz5bhk9AAzWjam4H7mAfaEAOUvuX221v+KGSDM\n+UsGAAe+GjMPL8KnGgEbISlSUF1Ubcw3EChcqjf3BID2gMLkAnGAoxlCZSYievytg\n+71mcHyIf9yF861QrGcrCh6/objtRdt4IDUVwo9wapunRmYCdZux4ApD0Hit8nAsm\n+QtxftSK6FWBTOCIRoOQTjwE8qj9GYTIbUFppX66Dzh00td5NKkWz0PVze7YSk2hC\n+KCVBYyUYHgkQYVlYLZw7dBrXSXv7ph95vc93RDS031cU7tPOrthqnMmhtg1WAwzH\n+xc2v3az9Gsw1RyxBAOVpkB0AFODiEiVg46xqmxaBPXfQOg/buZA2l4gK4U/pVUZH\n+72lle2CbBw6FoSx40Y3GYZWB2uEdXBTNLlhX7q2Jvo8WdeTxEv5ACZsjI7K/wrzt\n+nmvCHefOmVf4tefkXy1MyEvBt2+Ek9bHmHDL1BSk/JdJzJtam2uaP5pGum/PwIUW\n+KBatmHKZUKwgOIml9btB413C4zSK3GQmC5Y/+TxYybACIdxTDqPSczVZ5Q+jSywX\n+shdOoLXDRyrYhT2sHjZ1W29B8ebokqwousF77EA94sqfQvDDnmFpvfq9+m0WYtOh\n+PFF/yxOtlbPJYX7mnC8+dUgobSA4AR5Yrclt+levgivIyNuBwzevHRDMreMZKl2J\n+uiOT8tkuu66fAwEltIowjjV7TBRfij4QLXl/zfFo8jKU8efL3xluXoRn7g+E5FZ3\n+19KTF/DWMcttfeTUYVnv0QTnstb1RGnVj7w8JMy90mKdMQFpl7IzHd2n6LrhEw1V\n+1AaPF7EcQBOlvsvlZdIFQrFyhKozKoGi3wRrl/bNdebxjIjPzfN9GgbiufFjz2d7\n+DMR9GFXfUMVxLncaqBBy1X7MV17ZF7K4uw6DET4fRoecb4N5mJVUxvYq4iZApnNP\n+npgGdmlcyPD6o3ynx/vkw78m13Gfgw8i2OaUY7xBdOyNVEvkJZBLaC2hw+TKLaZa\n+v0RExtAO0i0QO4Y1eo78Pl9jOpz0wkJ4KG0270l1Jza4IyaIhYRDWagWOfOp/cXU\n+cvKKiuJhLOsX1Bapz+O2Aor9+EwWRdPd3BzE2ABdmKHPwrKobNp75wrCpQ5mZifn\n+DSTJRMPQQJV3wGfB2sP0NE47U8w5CCmVK8gEuqYr6wBl/CCq5tjiRc63VM+to5V4\n+tVNTCJWIRgQQEQIABgUCUc7PqwAKCRBr3f6OVKKs8cYAAKCFCLJ5wc+iAVCFRevh\n+xTcJct0fiQCePHpY37CIeP8s9BH8GqCDftUqh8SIRgQQEQIABgUCUc7YwAAKCRDd\n+f+mrhdawLOVxAJ9Tjud26LtbM2mWcPj2eT7dhqgZrQCdGyMwMMVzp40lsCK44PrV\n++mpFO7KJAhwEEAECAAYFAlHO0BkACgkQw35HI5aSdvXfLw//c2zZxXg4bI2W7gkB\n+ZQJIOWnmPZfhrXQNeFuetyGoWTm4ZWxW362AdDGiQSGNNkXqeBPOitKOkRyZP/Z3\n+h1vwkLkwdFZyWXK00BzYBKfjThWV1BAnArQLewSiLlE7qSnsPEY6FW0PNv711cbL\n+lXSUP1/lW25Nx7L76GAF6sHreoIdglE8YH5y310JuFnqPa0uaJG+qDo8Mb+WkyLy\n+Q2A3Atws1tIB9vHsq2FCt9ACyAEA3AqtHR4uMFmIWpUYy77fJAZdzLZTWf0X5XYw\n+XILNPOl/I0iZrq3LYQAvJfIwjWAC/lm6uTLlvkIJHKyhcIT+RocjMV7bY9ezrC5i\n+Cag3gaOZ7USMt0h59KdmBaHHNa32n3PSHg9XWljqoWMRjuaRdcA7ofK0BHDJbHWE\n+cldKXC09laWOXbyNmJsfug/23vNE7fS/cAKSIgEWszEwHJCahB2i/HqOQF0DUGpq\n+3s5oIXs2xIuN0yT6yIIiQnTU/FkWDDu4D1OZNrDW6QG3cde0PRak/0fr4Kv4iB3E\n+CAzlsRBlWKNu/eE4QBx6cbvLqjriijhGAF+8Y1zvRKNKPr96hSsETfVytuKDTp6F\n+u7PAarrSATGXI92Hy3ThAZla0VOYUyeWPktqUMDNq90tIBZbwKpOMMqvJmZfgdOU\n+4ldDq1f5+2WhAt1aTL1GJVCuYcCJAhwEEAECAAYFAlHO3MQACgkQnSOpPExjO3Gi\n+jxAAsD+luooqqoz3A28ZxwfCDV+ovazQ4Bw6hVU0zKKZIz/2H4jwmLtLSHtucCRM\n+xRksZmnqf1p2nn+BKBXDInx9vI9HziMu7fWkzhuovAIf9+X/l6EYV1kQx0bIM1qU\n+BxXWPgGdrgSZZHl9Qff/BOBnrI8NJmVBDzOh3BSs0BrSR7aFbkSNbjk/JcP0JEyk\n+j6wDKQsop/Ca5AboLL0uQPgTvhxCu4VROKjhu7o3s7G3xlxTpimwYklDQuYFaGKj\n+ZNIGFq2orfIMBnj7ZEQVXzhWltlHcgPVP5TDfgd4pVUbyUB6ras7odJWWIHnUFmj\n+1l5bGidIwRXGFusE4iR8pR528LG2KxNDNQYipsKRY9m+wH+N7gbSgK8DxmocvieV\n+vcILFS5VrPLbEO2oC13NMljmvua3ovDB0CEh9rybaH+/oA+VDS2L3pkgATTju+Vx\n+6+mVdlvnrA4mJ5BoLHzrleKybS4ZkbtVBh1KOYmo95NgVifRvpVPB6hKzwqcjYFV\n+fVYBxTryTBRyd9MLsqpPKnGLBENTFvKDxRCK3iioNyVhXdS0z/UyF1C2hwNTpnjY\n+pGCu+Es3SILJg2TvQcwLM0OoYBA1bcONm2XbkTrdCpTOtQcSewQSkijREunx14iu\n+pvNSWeNmbjQU7gNYhvwcBgh90tWgNCfqTtSa5xSe46tmv0SJAhwEEAECAAYFAlHQ\n+1hgACgkQZwn/QC8Dr2hT/g/+OFUYPXfWo0+ILdxyTGP/v2mSw/X3dBCEYUqefWxD\n+umcwnksey+thEGFBlxbwpyOfAoTzZLUupaG6BacVgRUvv8bTne4v2H1d22aBXyjC\n+HMtQPhupn/giamu8q8hCPFrDp6inIAeFuz1GmQaH6xWO5eYBuYXQtxlvZLWBsuMT\n+74en4e3vjczxGmJu/nvM9ugcYsexA/zcN6SRGr7t2pV4ZElPzPBRyAzhYqhP1YlB\n+Rydz60OjgcWYEoJKWhJOfmFJ3ZoNGAz4TGoBkDIq4olCF0/cxqrtHN+ZnEOLwiZ7\n+4ZX90avcjEFtM+Wb5dBHNpni4ISoHcVI1X0ye6tuAOOt7RywbET/0oIW5iSNMgJ0\n+X4XYgOIQ2+a8yjGBjo9I57k0vp1mL6Ji/eaa0dlppcCGnzvSHss+O0qO212pg5Yk\n+GGfjX1y1ZeSP3ca9C2XyOGIVw2d2Iu7OyqAv/N81xt6ZgG3qixQC0nmgOmn7Kh2B\n+20W12KpLxKS8RQdHawGau3MBGKeqbfK6/eAzm22yD4/yJAoW4hKgm84z3FbKUN8w\n+ulYMK9hS2c4egpoDAOJ/QZLLXFWiyi7/sHZz69G2AweWCjOJh28Otg0cUHoLo7jw\n+oO/L0rCsOQMbUuIumYXBPHNnDwv1xfv2lT8tVzf6GksFJBAw0DybxOMTaOg45Lhz\n+jGS5BA0EUc7OlQEgAN6t+BV705uoCsdHtQBq/HKGGD5tBiOzy7Wd4nF/c6EWzET4\n+QUnmw6bDnqjxrk9MWniPDf1O9MvuB4qIY6g9kEjZ+VSQpWUZpZ5bMXCNHrfh9J2Q\n+6oLWqDmpeZv2OI0O9wxT62QaFei2qBtimSnBudLSCnvmU3S0h1PflmJsbj+tVcko\n+w2yOh2bjH1jkVAODHvEbxqyD6fiZhbfUVbPC49SBmXv8Gv0UywNSkP+iqJdwZAb0\n+XtjRx4WjZCkTwJAnbM4CJ63+5Hd83BtWZAZbGAh76XY/cSkDirXtXC+2LNUmP5W2\n+QY+ur5Bvz8LHaqJMXLAtePdkv5kpd+jXBrZieXUtqovxZaQTinl7C3L2TZd/ivxD\n+F3Rko9BFDuXXcdZrxBY5b3146IvSPp1y0WmHRxhAPb+RuiHQMt8K92nOhPyvtWXB\n+mWz0GnW9L6+CW4LKSPRSnE057hyxYNP/DcDd+fWFH+MmhU9noqHfJXSaLVzdI5PI\n+L8N44AndPIojnlxrxRs7Ik/nW6cTV9H3agg+24yyTdFkACbfIS6wWXOHeHuBzmO6\n+VI7pXOZJ9vZT7zI7M/hVci0R3putsGqgRfByRWWQ2DNeyrwUHexZNR/NYz1uhvA6\n+dBfKcuAwqxbdSrW/BxJ+iJWdkgYGCV67VLlO6S9sO33HgOanpPr5R9V1KsFVh4dN\n+j6BjZ4ALE5FPNW+iONnuXvtZbN2cBlBzMDeFC9oZoYCs1Pkmk8xUY2sAXPUt1R0G\n+D/miIb7ig1N52j9P6vv6fPs1ghmc/hGkhaXyjS54B5T33V6M9g+yba9mIgi8ZxZa\n+G+4rlFFKA4HS7wYYRJoqMvnc/qBYvoWLaPu3Xq6AXrJyuAaN+e3L8++cWbYHBXF9\n+qt+Q2RFL0FNiYUQuwkiaerysnm1a0H7ZtJ4zjl4ZgA1Ej7QcylTIbgFW3L7FnyMH\n+/5weLLN2wdjAtzjhRPYJLbV6V/gFbbpCpr+caDUaxSNizQuhhzVI5UrJegaHCCrx\n+DCiwWRFYzN5pqhtgzcaImK76DmPIk+Yrsum5KJZQeGfzKxvF0YnwxU0bxFzcDZJD\n+X2oCJn828Aw2j0nIlVlrrao0JMkvTBeZehO/11U68M2vKGEqrsQOb/BTXyLCeZwn\n+UGow1WvYfRxEZTrhhiYw94EH06gbqmKG1xsuV4LDI5z63/6ACcQW3orMbMymJCky\n+4HiNVZ7SNeGoYe380CJCwv6GN1opKTAWp84cr2KzhAzONGqNWNpUhznAXlI+GzCc\n+D2H330L1atMqZHjgpEfrkowvJ7WBM5KFKDfylaTKhYvfZcTOZs5OmRZSW3U54wRD\n+RMP0d2+k3vRililNhHIErHbjhYFc6zubVbBhvUMAEQEAAYkEHwQYAQIACQUCUc7O\n+lQIbDAAKCRCxF563NH3BDSX2IACugAdZqX+o/+pTkSrj+NEAcP0ZMci8w5nm/yOP\n+VlGyY6PXGuQKcBtvz3LWtIDdddMc/bD/zmZPwSzTx1MMOWc+gjR0azXe2RrdMHYk\n+8pb4X4Op2Nkasoc/8hNsRKaU24WUAQMqrRREIVBEOuHGl1A52Lj+aFB04rRHrkMl\n+AqjB5bwArPorIBdM417EEl4hjEZ9BpQxbUgBhTgGTZuc1u9PsKz1YvQ79YJIRmSH\n+n72Zaf35zY55eOQeoVBzGmFPq+/UFqtRNWA7jmRhHvMz/yR33B/RSxyTJuPb79zi\n+2mIZOrViG3X/UNL4qtOc1cKXQBi+FjHAMlGrCc+D5lnyOhEvqoEuvQic7V6C8Pvk\n+9q+jngn2Gs4pdJO8FOnwaC5xp/ZNE0v7x/KtAHyBA6iKcaepgoRQPSt1ONiHyfh1\n+iGgJn+Y6IHx4YDYKEY0UIzHhCfWUl8XZWcf4wLGEbGztkRbkCFqrsja5IeaO7umB\n+i6C4f95uSGjV7SiIMJOE8xo/m2g4VCnnmk7U996JwtBMKREMMqa3ABK4trfBL3Kq\n+P6I6ZTlA/C5svkVUVwWOMZau9kLDsxv8keGrFteZtfYa1KPAROFwNuBU82UW0KtX\n+QQbZoBKt1o3LhqEu+hXU3iKocYWSbBThH8u6vPNgSnW2Qcv3gcUU3jGmYeHrGiUO\n+SuEWxwlKUxCxBNfmz1FGswlwve1LsS3RTz/XB/L6Ubhq5L7FevrXz8152kuMqnpy\n+m93sXkL1eJVo07hH+otcRnMzy4vUar9z/N12t3hfTffx29PBKUCc2PKPVpLfJX2i\n+hieHk23fhLnptjc3lm9S+bHO3rqEWHqgNgNp9bpuwiLRsIy6qTtmC8jxXkGXvQrS\n++2Hv6+jRfDcqEAK3vqi1XL7Td81KRjnheBtsKpjS2PFatK3uTo6v1oRWJCdRCxg1\n+HT6a9KvZ+DNKcxlQISKAOLX72qpziaDl4CpBdQy4Zg2pr9oYkLdlfkaDK/OH4J3M\n+wJiVf/uNPPd+yy6xZXK0SPZHf+mf5Yt+Sim93hIbdS9AMdvHKB5n3DR27H+/okPj\n+w3J9z85hxgP5KspizQR6t77AWddPRy/l3BBZeb+HiaeKGBJeSNWXpkPXHkdjLW8U\n+QStzFR8r15FWJTmamIknjJ3XNbytMCpu8cj2ZVZdyjPcHEBL3WbNYYtauSuYmyUO\n+yXBaecM/KoTdvHiERU/mMuf7f1ftftCHehZoNaP+BeIbIud9IHIdrSQBCW+RC1Y1\n+8opDLMtnIOX3OnyCN38ELYcuNLMJxBqnQgi7MVDVcT1+BN/+lFQtG44+rPUkK+T1\n+Jk1/tIJqcyc1BfY6uFHFXWWnqQnjl0XpZo+/bMDxTVy8yND2\n+=icdI\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "1001f29065ff3018129abe49d13bfacb1ad0e899",
        "filename": "contrib/homebrew/bitcoin.qt.pro.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/homebrew/bitcoin.qt.pro.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/homebrew/bitcoin.qt.pro.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/homebrew/bitcoin.qt.pro.patch?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,32 +0,0 @@\n-diff --git a/bitcoin-qt.pro b/bitcoin-qt.pro\n-index d938c07..e1dd4ec 100644\n---- a/bitcoin-qt.pro\n-+++ b/bitcoin-qt.pro\n-@@ -353,7 +353,7 @@\n- }\n- \n- isEmpty(BDB_LIB_PATH) {\n--    macx:BDB_LIB_PATH = /opt/local/lib/db48\n-+    macx:BDB_LIB_PATH = /usr/local/opt/berkeley-db4/lib\n- }\n- \n- isEmpty(BDB_LIB_SUFFIX) {\n-@@ -361,15 +361,15 @@\n- }\n- \n- isEmpty(BDB_INCLUDE_PATH) {\n--    macx:BDB_INCLUDE_PATH = /opt/local/include/db48\n-+    macx:BDB_INCLUDE_PATH = /usr/local/opt/berkeley-db4/include\n- }\n- \n- isEmpty(BOOST_LIB_PATH) {\n--    macx:BOOST_LIB_PATH = /opt/local/lib\n-+    macx:BOOST_LIB_PATH = /usr/local/opt/boost/lib\n- }\n- \n- isEmpty(BOOST_INCLUDE_PATH) {\n--    macx:BOOST_INCLUDE_PATH = /opt/local/include\n-+    macx:BOOST_INCLUDE_PATH = /usr/local/opt/boost/include\n- }\n- \n- win32:DEFINES += WIN32"
      },
      {
        "sha": "287db2fdf22a8430bac24df20c3a6094a4de4e22",
        "filename": "contrib/homebrew/makefile.osx.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 48,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/homebrew/makefile.osx.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/homebrew/makefile.osx.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/homebrew/makefile.osx.patch?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,48 +0,0 @@\n-diff --git a/src/makefile.osx b/src/makefile.osx\n-index bef0ef3..07ef8d3 100644\n---- a/src/makefile.osx\n-+++ b/src/makefile.osx\n-@@ -7,17 +7,21 @@\n- # Originally by Laszlo Hanyecz (solar@heliacal.net)\n- \n- CXX=llvm-g++\n--DEPSDIR=/opt/local\n-+DEPSDIR=/usr/local\n-+DB4DIR=/usr/local/opt/berkeley-db4\n-+OPENSSLDIR=/usr/local/opt/openssl\n- \n- INCLUDEPATHS= \\\n-  -I\"$(CURDIR)\" \\\n-- -I\"$(CURDIR)\"/obj \\\n-+ -I\"$(CURDIR)/obj\" \\\n-  -I\"$(DEPSDIR)/include\" \\\n-- -I\"$(DEPSDIR)/include/db48\"\n-+ -I\"$(DB4DIR)/include\" \\\n-+ -I\"$(OPENSSLDIR)/include\"\n- \n- LIBPATHS= \\\n-  -L\"$(DEPSDIR)/lib\" \\\n-- -L\"$(DEPSDIR)/lib/db48\"\n-+ -L\"$(DB4DIR)/lib\" \\\n-+ -L\"$(OPENSSLDIR)/lib\"\n- \n- USE_UPNP:=1\n- USE_IPV6:=1\n-@@ -31,14 +35,14 @@ ifdef STATIC\n- TESTLIBS += \\\n-  $(DEPSDIR)/lib/libboost_unit_test_framework-mt.a\n- LIBS += \\\n-- $(DEPSDIR)/lib/db48/libdb_cxx-4.8.a \\\n-+ $(DB4DIR)/lib/libdb_cxx-4.8.a \\\n-  $(DEPSDIR)/lib/libboost_system-mt.a \\\n-  $(DEPSDIR)/lib/libboost_filesystem-mt.a \\\n-  $(DEPSDIR)/lib/libboost_program_options-mt.a \\\n-  $(DEPSDIR)/lib/libboost_thread-mt.a \\\n-  $(DEPSDIR)/lib/libboost_chrono-mt.a \\\n-- $(DEPSDIR)/lib/libssl.a \\\n-- $(DEPSDIR)/lib/libcrypto.a \\\n-+ $(OPENSSLDIR)/lib/libssl.a \\\n-+ $(OPENSSLDIR)/lib/libcrypto.a \\\n-  -lz\n- else\n- TESTLIBS += \\"
      },
      {
        "sha": "d3fa9665839a2034c729cfa269b8a8c543c93a2a",
        "filename": "contrib/init/README.md",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,10 @@\n+Sample configuration files for:\n+\n+SystemD: bitcoind.service\n+Upstart: bitcoind.conf\n+OpenRC:  bitcoind.openrc\n+         bitcoind.openrcconf\n+\n+have been made available to assist packagers in creating node packages here.\n+\n+See doc/init.md for more information."
      },
      {
        "sha": "f9554eecde7f2e536d7ac4422b58e870f2275eaa",
        "filename": "contrib/init/bitcoind.conf",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,65 @@\n+description \"Bitcoin Core Daemon\"\n+\n+start on runlevel [2345]\n+stop on starting rc RUNLEVEL=[016]\n+\n+env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n+env BITCOIND_USER=\"bitcoin\"\n+env BITCOIND_GROUP=\"bitcoin\"\n+env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n+# upstart can't handle variables constructed with other variables\n+env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n+env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n+env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n+\n+expect fork\n+\n+respawn\n+respawn limit 5 120\n+kill timeout 60\n+\n+pre-start script\n+    # this will catch non-existent config files\n+    # bitcoind will check and exit with this very warning, but it can do so\n+    # long after forking, leaving upstart to think everything started fine.\n+    # since this is a commonly encountered case on install, just check and\n+    # warn here.\n+    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n+        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n+        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n+        echo\n+        echo \"This password is security critical to securing wallets \"\n+        echo \"and must not be the same as the rpcuser setting.\"\n+        echo \"You can generate a suitable random password using the following\"\n+        echo \"command from the shell:\"\n+        echo\n+        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+        echo\n+        echo \"It is also recommended that you also set alertnotify so you are \"\n+        echo \"notified of problems:\"\n+        echo\n+        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n+            \"admin@foo.com\"\n+        echo\n+        exit 1\n+    fi\n+\n+    mkdir -p \"$BITCOIND_PIDDIR\"\n+    chmod 0755 \"$BITCOIND_PIDDIR\"\n+    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n+    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n+    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n+end script\n+\n+exec start-stop-daemon \\\n+    --start \\\n+    --pidfile \"$BITCOIND_PIDFILE\" \\\n+    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n+    --exec \"$BITCOIND_BIN\" \\\n+    -- \\\n+    -pid=\"$BITCOIND_PIDFILE\" \\\n+    -conf=\"$BITCOIND_CONFIGFILE\" \\\n+    -datadir=\"$BITCOIND_DATADIR\" \\\n+    -disablewallet \\\n+    -daemon\n+"
      },
      {
        "sha": "1f7758c9202a52bbd8492535443abe80db49f6c1",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,86 @@\n+#!/sbin/runscript\n+\n+# backward compatibility for existing gentoo layout \n+#\n+if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n+\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n+else\n+\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n+fi\n+\n+BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n+BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n+BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n+BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n+BITCOIND_USER=${BITCOIND_USER:-bitcoin}\n+BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n+BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n+\n+name=\"Bitcoin Core Daemon\"\n+description=\"Bitcoin crypto-currency p2p network daemon\"\n+\n+command=\"/usr/bin/bitcoind\"\n+command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n+\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n+\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n+\t\t-daemon \\\n+\t\t${BITCOIND_OPTS}\"\n+\n+required_files=\"${BITCOIND_CONFIGFILE}\"\n+start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n+\t\t\t-N ${BITCOIND_NICE:-0} -w 2000\"\n+pidfile=\"${BITCOIND_PIDFILE}\"\n+retry=60\n+\n+depend() {\n+\tneed localmount net\n+}\n+\n+# verify\n+# 1) that the datadir exists and is writable (or create it)\n+# 2) that a directory for the pid exists and is writable\n+# 3) ownership and permissions on the config file\n+start_pre() {\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0750 \\\n+\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n+\t\"${BITCOIND_DATADIR}\"\n+\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0755 \\\n+\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n+\t\"${BITCOIND_PIDDIR}\"\n+\n+\tcheckpath -f \\\n+\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n+\t-m 0660 \\\n+\t${BITCOIND_CONFIGFILE}\n+\n+\tcheckconfig || return 1\n+}\n+\n+checkconfig()\n+{\n+\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n+\t\teerror \"\"\n+\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n+\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n+\t\teerror \"\"\n+\t\teerror \"This password is security critical to securing wallets \"\n+\t\teerror \"and must not be the same as the rpcuser setting.\"\n+\t\teerror \"You can generate a suitable random password using the following\"\n+\t\teerror \"command from the shell:\"\n+\t\teerror \"\"\n+\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+\t\teerror \"\"\n+\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n+\t\teerror \"notified of problems:\"\n+\t\teerror \"\"\n+\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n+\t\t\t\"admin@foo.com\"\n+\t\teerror \"\"\n+\t\treturn 1\n+\tfi\n+}"
      },
      {
        "sha": "d8d7f58337460aea699ffea8eac36b17cc59d69d",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,27 @@\n+# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n+\n+# Config file location\n+#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n+\n+# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n+#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n+\n+# What filename to give the pidfile\n+#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n+\n+# Where to write bitcoind data (be mindful that the blockchain is large)\n+#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n+\n+# User and group to own bitcoind process\n+#BITCOIND_USER=\"bitcoin\"\n+#BITCOIND_GROUP=\"bitcoin\"\n+\n+# Path to bitcoind executable\n+#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n+\n+# Nice value to run bitcoind under\n+#BITCOIND_NICE=0\n+\n+# Additional options (avoid -conf and -datadir, use flags above)\n+BITCOIND_OPTS=\"-disablewallet\"\n+"
      },
      {
        "sha": "9132957c38b8d3ed6648b79d3948e41ee3861db0",
        "filename": "contrib/init/bitcoind.service",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,22 @@\n+[Unit]\n+Description=Bitcoin's distributed currency daemon\n+After=network.target\n+\n+[Service]\n+User=bitcoin\n+Group=bitcoin\n+\n+Type=forking\n+PIDFile=/var/lib/bitcoind/bitcoind.pid\n+ExecStart=/usr/bin/bitcoind -daemon -pid=/var/lib/bitcoind/bitcoind.pid \\\n+-conf=/etc/bitcoin/bitcoin.conf -datadir=/var/lib/bitcoind -disablewallet\n+\n+Restart=always\n+PrivateTmp=true\n+TimeoutStopSec=60s\n+TimeoutStartSec=2s\n+StartLimitInterval=120s\n+StartLimitBurst=5\n+\n+[Install]\n+WantedBy=multi-user.target"
      },
      {
        "sha": "157586e4d4e0a89a9ed9513be65f50933649b5bd",
        "filename": "contrib/linearize/README.md",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,33 @@\n+# Linearize\n+Construct a linear, no-fork, best version of the blockchain.\n+\n+## Step 1: Download hash list\n+\n+   $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n+\n+Required configuration file settings for linearize-hashes:\n+* RPC: rpcuser, rpcpassword\n+\n+Optional config file setting for linearize-hashes:\n+* RPC: host, port\n+* Block chain: min_height, max_height\n+\n+## Step 2: Copy local block data\n+\n+   $ ./linearize-data.py linearize.cfg\n+\n+Required configuration file settings:\n+* \"input\": bitcoind blocks/ directory containing blkNNNNN.dat\n+* \"hashlist\": text file containing list of block hashes, linearized-hashes.py\n+output.\n+* \"output_file\": bootstrap.dat\n+      or\n+* \"output\": output directory for linearized blocks/blkNNNNN.dat output\n+\n+Optional config file setting for linearize-data:\n+* \"netmagic\": network magic number\n+* \"max_out_sz\": maximum output file size (default 1000*1000*1000)\n+* \"split_timestamp\": Split files when a new month is first seen, in addition to\n+reaching a maximum file size.\n+* \"file_timestamp\": Set each file's last-modified time to that of the\n+most recent block in that file."
      },
      {
        "sha": "e0fef13886d92aa96b6172e8eab7116895fd09f7",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,19 @@\n+\n+# bitcoind RPC settings (linearize-hashes)\n+rpcuser=someuser\n+rpcpassword=somepassword\n+host=127.0.0.1\n+port=8332\n+\n+# bootstrap.dat hashlist settings (linearize-hashes)\n+max_height=313000\n+\n+# bootstrap.dat input/output settings (linearize-data)\n+netmagic=f9beb4d9\n+input=/home/example/.bitcoin/blocks\n+output_file=/home/example/Downloads/bootstrap.dat\n+hashlist=hashlist.txt\n+split_year=1\n+\n+# Maxmimum size in bytes of out-of-order blocks cache in memory\n+out_of_order_cache_sz = 100000000"
      },
      {
        "sha": "2dac3a614b03180b7d6804cd7d195e3e2a92e7c2",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "added",
        "additions": 299,
        "deletions": 0,
        "changes": 299,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,299 @@\n+#!/usr/bin/python\n+#\n+# linearize-data.py: Construct a linear, no-fork version of the chain.\n+#\n+# Copyright (c) 2013-2014 The Bitcoin developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from __future__ import print_function, division\n+import json\n+import struct\n+import re\n+import os\n+import base64\n+import httplib\n+import sys\n+import hashlib\n+import datetime\n+import time\n+from collections import namedtuple\n+\n+settings = {}\n+\n+def uint32(x):\n+\treturn x & 0xffffffffL\n+\n+def bytereverse(x):\n+\treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n+\t\t       (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n+\n+def bufreverse(in_buf):\n+\tout_words = []\n+\tfor i in range(0, len(in_buf), 4):\n+\t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n+\t\tout_words.append(struct.pack('@I', bytereverse(word)))\n+\treturn ''.join(out_words)\n+\n+def wordreverse(in_buf):\n+\tout_words = []\n+\tfor i in range(0, len(in_buf), 4):\n+\t\tout_words.append(in_buf[i:i+4])\n+\tout_words.reverse()\n+\treturn ''.join(out_words)\n+\n+def calc_hdr_hash(blk_hdr):\n+\thash1 = hashlib.sha256()\n+\thash1.update(blk_hdr)\n+\thash1_o = hash1.digest()\n+\n+\thash2 = hashlib.sha256()\n+\thash2.update(hash1_o)\n+\thash2_o = hash2.digest()\n+\n+\treturn hash2_o\n+\n+def calc_hash_str(blk_hdr):\n+\thash = calc_hdr_hash(blk_hdr)\n+\thash = bufreverse(hash)\n+\thash = wordreverse(hash)\n+\thash_str = hash.encode('hex')\n+\treturn hash_str\n+\n+def get_blk_dt(blk_hdr):\n+\tmembers = struct.unpack(\"<I\", blk_hdr[68:68+4])\n+\tnTime = members[0]\n+\tdt = datetime.datetime.fromtimestamp(nTime)\n+\tdt_ym = datetime.datetime(dt.year, dt.month, 1)\n+\treturn (dt_ym, nTime)\n+\n+def get_block_hashes(settings):\n+\tblkindex = []\n+\tf = open(settings['hashlist'], \"r\")\n+\tfor line in f:\n+\t\tline = line.rstrip()\n+\t\tblkindex.append(line)\n+\n+\tprint(\"Read \" + str(len(blkindex)) + \" hashes\")\n+\n+\treturn blkindex\n+\n+def mkblockmap(blkindex):\n+\tblkmap = {}\n+\tfor height,hash in enumerate(blkindex):\n+\t\tblkmap[hash] = height\n+\treturn blkmap\n+\n+# Block header and extent on disk\n+BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n+\n+class BlockDataCopier:\n+\tdef __init__(self, settings, blkindex, blkmap):\n+\t\tself.settings = settings\n+\t\tself.blkindex = blkindex\n+\t\tself.blkmap = blkmap\n+\n+\t\tself.inFn = 0\n+\t\tself.inF = None\n+\t\tself.outFn = 0\n+\t\tself.outsz = 0\n+\t\tself.outF = None\n+\t\tself.outFname = None\n+\t\tself.blkCountIn = 0\n+\t\tself.blkCountOut = 0\n+\n+\t\tself.lastDate = datetime.datetime(2000, 1, 1)\n+\t\tself.highTS = 1408893517 - 315360000\n+\t\tself.timestampSplit = False\n+\t\tself.fileOutput = True\n+\t\tself.setFileTime = False\n+\t\tself.maxOutSz = settings['max_out_sz']\n+\t\tif 'output' in settings:\n+\t\t\tself.fileOutput = False\n+\t\tif settings['file_timestamp'] != 0:\n+\t\t\tself.setFileTime = True\n+\t\tif settings['split_timestamp'] != 0:\n+\t\t\tself.timestampSplit = True\n+        # Extents and cache for out-of-order blocks\n+\t\tself.blockExtents = {}\n+\t\tself.outOfOrderData = {}\n+\t\tself.outOfOrderSize = 0 # running total size for items in outOfOrderData\n+\n+\tdef writeBlock(self, inhdr, blk_hdr, rawblock):\n+\t\tif not self.fileOutput and ((self.outsz + self.inLen) > self.maxOutSz):\n+\t\t\tself.outF.close()\n+\t\t\tif self.setFileTime:\n+\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n+\t\t\tself.outF = None\n+\t\t\tself.outFname = None\n+\t\t\tself.outFn = outFn + 1\n+\t\t\tself.outsz = 0\n+\n+\t\t(blkDate, blkTS) = get_blk_dt(blk_hdr)\n+\t\tif self.timestampSplit and (blkDate > self.lastDate):\n+\t\t\tprint(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + hash_str)\n+\t\t\tlastDate = blkDate\n+\t\t\tif outF:\n+\t\t\t\toutF.close()\n+\t\t\t\tif setFileTime:\n+\t\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n+\t\t\t\tself.outF = None\n+\t\t\t\tself.outFname = None\n+\t\t\t\tself.outFn = self.outFn + 1\n+\t\t\t\tself.outsz = 0\n+\n+\t\tif not self.outF:\n+\t\t\tif self.fileOutput:\n+\t\t\t\toutFname = self.settings['output_file']\n+\t\t\telse:\n+\t\t\t\toutFname = \"%s/blk%05d.dat\" % (self.settings['output'], outFn)\n+\t\t\tprint(\"Output file\" + outFname)\n+\t\t\tself.outF = open(outFname, \"wb\")\n+\n+\t\tself.outF.write(inhdr)\n+\t\tself.outF.write(blk_hdr)\n+\t\tself.outF.write(rawblock)\n+\t\tself.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n+\n+\t\tself.blkCountOut = self.blkCountOut + 1\n+\t\tif blkTS > self.highTS:\n+\t\t\tself.highTS = blkTS\n+\n+\t\tif (self.blkCountOut % 1000) == 0:\n+\t\t\tprint('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' % \n+\t\t\t\t\t(self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n+\n+\tdef inFileName(self, fn):\n+\t\treturn \"%s/blk%05d.dat\" % (self.settings['input'], fn)\n+\n+\tdef fetchBlock(self, extent):\n+\t\t'''Fetch block contents from disk given extents'''\n+\t\twith open(self.inFileName(extent.fn), \"rb\") as f:\n+\t\t\tf.seek(extent.offset)\n+\t\t\treturn f.read(extent.size)\n+\n+\tdef copyOneBlock(self):\n+\t\t'''Find the next block to be written in the input, and copy it to the output.'''\n+\t\textent = self.blockExtents.pop(self.blkCountOut)\n+\t\tif self.blkCountOut in self.outOfOrderData:\n+\t\t\t# If the data is cached, use it from memory and remove from the cache\n+\t\t\trawblock = self.outOfOrderData.pop(self.blkCountOut)\n+\t\t\tself.outOfOrderSize -= len(rawblock)\n+\t\telse: # Otherwise look up data on disk\n+\t\t\trawblock = self.fetchBlock(extent)\n+\n+\t\tself.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n+\n+\tdef run(self):\n+\t\twhile self.blkCountOut < len(self.blkindex):\n+\t\t\tif not self.inF:\n+\t\t\t\tfname = self.inFileName(self.inFn)\n+\t\t\t\tprint(\"Input file\" + fname)\n+\t\t\t\ttry:\n+\t\t\t\t\tself.inF = open(fname, \"rb\")\n+\t\t\t\texcept IOError:\n+\t\t\t\t\tprint(\"Premature end of block data\")\n+\t\t\t\t\treturn\n+\n+\t\t\tinhdr = self.inF.read(8)\n+\t\t\tif (not inhdr or (inhdr[0] == \"\\0\")):\n+\t\t\t\tself.inF.close()\n+\t\t\t\tself.inF = None\n+\t\t\t\tself.inFn = self.inFn + 1\n+\t\t\t\tcontinue\n+\n+\t\t\tinMagic = inhdr[:4]\n+\t\t\tif (inMagic != self.settings['netmagic']):\n+\t\t\t\tprint(\"Invalid magic:\" + inMagic)\n+\t\t\t\treturn\n+\t\t\tinLenLE = inhdr[4:]\n+\t\t\tsu = struct.unpack(\"<I\", inLenLE)\n+\t\t\tinLen = su[0] - 80 # length without header\n+\t\t\tblk_hdr = self.inF.read(80)\n+\t\t\tinExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n+\n+\t\t\thash_str = calc_hash_str(blk_hdr)\n+\t\t\tif not hash_str in blkmap:\n+\t\t\t\tprint(\"Skipping unknown block \" + hash_str)\n+\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n+\t\t\t\tcontinue\n+\n+\t\t\tblkHeight = self.blkmap[hash_str]\n+\t\t\tself.blkCountIn += 1\n+\n+\t\t\tif self.blkCountOut == blkHeight:\n+\t\t\t\t# If in-order block, just copy\n+\t\t\t\trawblock = self.inF.read(inLen)\n+\t\t\t\tself.writeBlock(inhdr, blk_hdr, rawblock)\n+\n+\t\t\t\t# See if we can catch up to prior out-of-order blocks\n+\t\t\t\twhile self.blkCountOut in self.blockExtents:\n+\t\t\t\t\tself.copyOneBlock()\n+\n+\t\t\telse: # If out-of-order, skip over block data for now\n+\t\t\t\tself.blockExtents[blkHeight] = inExtent\n+\t\t\t\tif self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n+\t\t\t\t\t# If there is space in the cache, read the data\n+\t\t\t\t\t# Reading the data in file sequence instead of seeking and fetching it later is preferred,\n+\t\t\t\t\t# but we don't want to fill up memory\n+\t\t\t\t\tself.outOfOrderData[blkHeight] = self.inF.read(inLen)\n+\t\t\t\t\tself.outOfOrderSize += inLen\n+\t\t\t\telse: # If no space in cache, seek forward\n+\t\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n+\n+\t\tprint(\"Done (%i blocks written)\" % (self.blkCountOut))\n+\n+if __name__ == '__main__':\n+\tif len(sys.argv) != 2:\n+\t\tprint(\"Usage: linearize-data.py CONFIG-FILE\")\n+\t\tsys.exit(1)\n+\n+\tf = open(sys.argv[1])\n+\tfor line in f:\n+\t\t# skip comment lines\n+\t\tm = re.search('^\\s*#', line)\n+\t\tif m:\n+\t\t\tcontinue\n+\n+\t\t# parse key=value lines\n+\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+\t\tif m is None:\n+\t\t\tcontinue\n+\t\tsettings[m.group(1)] = m.group(2)\n+\tf.close()\n+\n+\tif 'netmagic' not in settings:\n+\t\tsettings['netmagic'] = 'f9beb4d9'\n+\tif 'input' not in settings:\n+\t\tsettings['input'] = 'input'\n+\tif 'hashlist' not in settings:\n+\t\tsettings['hashlist'] = 'hashlist.txt'\n+\tif 'file_timestamp' not in settings:\n+\t\tsettings['file_timestamp'] = 0\n+\tif 'split_timestamp' not in settings:\n+\t\tsettings['split_timestamp'] = 0\n+\tif 'max_out_sz' not in settings:\n+\t\tsettings['max_out_sz'] = 1000L * 1000 * 1000\n+\tif 'out_of_order_cache_sz' not in settings:\n+\t\tsettings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n+\n+\tsettings['max_out_sz'] = long(settings['max_out_sz'])\n+\tsettings['split_timestamp'] = int(settings['split_timestamp'])\n+\tsettings['file_timestamp'] = int(settings['file_timestamp'])\n+\tsettings['netmagic'] = settings['netmagic'].decode('hex')\n+\tsettings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n+\n+\tif 'output_file' not in settings and 'output' not in settings:\n+\t\tprint(\"Missing output file / directory\")\n+\t\tsys.exit(1)\n+\n+\tblkindex = get_block_hashes(settings)\n+\tblkmap = mkblockmap(blkindex)\n+\n+\tif not \"000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\" in blkmap:\n+\t\tprint(\"not found\")\n+\telse:\n+\t\tBlockDataCopier(settings, blkindex, blkmap).run()\n+\n+"
      },
      {
        "sha": "dc7f6540499620738fff5bcd510970d2f400a54c",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "added",
        "additions": 113,
        "deletions": 0,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,113 @@\n+#!/usr/bin/python\n+#\n+# linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n+#\n+# Copyright (c) 2013-2014 The Bitcoin developers\n+# Distributed under the MIT/X11 software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from __future__ import print_function\n+import json\n+import struct\n+import re\n+import base64\n+import httplib\n+import sys\n+\n+settings = {}\n+\n+class BitcoinRPC:\n+\tdef __init__(self, host, port, username, password):\n+\t\tauthpair = \"%s:%s\" % (username, password)\n+\t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n+\t\tself.conn = httplib.HTTPConnection(host, port, False, 30)\n+\n+\tdef execute(self, obj):\n+\t\tself.conn.request('POST', '/', json.dumps(obj),\n+\t\t\t{ 'Authorization' : self.authhdr,\n+\t\t\t  'Content-type' : 'application/json' })\n+\n+\t\tresp = self.conn.getresponse()\n+\t\tif resp is None:\n+\t\t\tprint(\"JSON-RPC: no response\", file=sys.stderr)\n+\t\t\treturn None\n+\n+\t\tbody = resp.read()\n+\t\tresp_obj = json.loads(body)\n+\t\treturn resp_obj\n+\n+\t@staticmethod\n+\tdef build_request(idx, method, params):\n+\t\tobj = { 'version' : '1.1',\n+\t\t\t'method' : method,\n+\t\t\t'id' : idx }\n+\t\tif params is None:\n+\t\t\tobj['params'] = []\n+\t\telse:\n+\t\t\tobj['params'] = params\n+\t\treturn obj\n+\n+\t@staticmethod\n+\tdef response_is_error(resp_obj):\n+\t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n+\n+def get_block_hashes(settings, max_blocks_per_call=10000):\n+\trpc = BitcoinRPC(settings['host'], settings['port'],\n+\t\t\t settings['rpcuser'], settings['rpcpassword'])\n+\n+\theight = settings['min_height']\n+\twhile height < settings['max_height']+1:\n+\t\tnum_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n+\t\tbatch = []\n+\t\tfor x in range(num_blocks):\n+\t\t\tbatch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n+\n+\t\treply = rpc.execute(batch)\n+\n+\t\tfor x,resp_obj in enumerate(reply):\n+\t\t\tif rpc.response_is_error(resp_obj):\n+\t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n+\t\t\t\texit(1)\n+\t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n+\t\t\tprint(resp_obj['result'])\n+\n+\t\theight += num_blocks\n+\n+if __name__ == '__main__':\n+\tif len(sys.argv) != 2:\n+\t\tprint(\"Usage: linearize-hashes.py CONFIG-FILE\")\n+\t\tsys.exit(1)\n+\n+\tf = open(sys.argv[1])\n+\tfor line in f:\n+\t\t# skip comment lines\n+\t\tm = re.search('^\\s*#', line)\n+\t\tif m:\n+\t\t\tcontinue\n+\n+\t\t# parse key=value lines\n+\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+\t\tif m is None:\n+\t\t\tcontinue\n+\t\tsettings[m.group(1)] = m.group(2)\n+\tf.close()\n+\n+\tif 'host' not in settings:\n+\t\tsettings['host'] = '127.0.0.1'\n+\tif 'port' not in settings:\n+\t\tsettings['port'] = 8332\n+\tif 'min_height' not in settings:\n+\t\tsettings['min_height'] = 0\n+\tif 'max_height' not in settings:\n+\t\tsettings['max_height'] = 313000\n+\tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n+\t\tprint(\"Missing username and/or password in cfg file\", file=stderr)\n+\t\tsys.exit(1)\n+\n+\tsettings['port'] = int(settings['port'])\n+\tsettings['min_height'] = int(settings['min_height'])\n+\tsettings['max_height'] = int(settings['max_height'])\n+\n+\tget_block_hashes(settings)\n+"
      },
      {
        "sha": "b9a1e1486405136607eedf433af8d469ef7059b8",
        "filename": "contrib/macdeploy/DS_Store",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/macdeploy/DS_Store",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/macdeploy/DS_Store",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/DS_Store?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "0aa57b4777132056049ee69cc02d3305f06a8d31",
        "filename": "contrib/macdeploy/README.md",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,15 @@\n+### MacDeploy ###\n+\n+For Snow Leopard (which uses [Python 2.6](http://www.python.org/download/releases/2.6/)), you will need the param_parser package:\n+\t\n+\tsudo easy_install argparse\n+\n+This script should not be run manually, instead, after building as usual:\n+\n+\tmake deploy\n+\n+During the process, the disk image window will pop up briefly where the fancy\n+settings are applied. This is normal, please do not interfere.\n+\n+When finished, it will produce `Bitcoin-Qt.dmg`.\n+"
      },
      {
        "sha": "541136001fceec61ab47277979332e620468ac74",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 102,
        "deletions": 28,
        "changes": 130,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -17,9 +17,8 @@\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n #\n \n-import subprocess, sys, re, os, shutil, stat, os.path\n+import subprocess, sys, re, os, shutil, stat, os.path, time\n from string import Template\n-from time import sleep\n from argparse import ArgumentParser\n \n # This is ported from the original macdeployqt with modifications\n@@ -38,7 +37,10 @@ class FrameworkInfo(object):\n         self.sourceFilePath = \"\"\n         self.destinationDirectory = \"\"\n         self.sourceResourcesDirectory = \"\"\n+        self.sourceVersionContentsDirectory = \"\"\n+        self.sourceContentsDirectory = \"\"\n         self.destinationResourcesDirectory = \"\"\n+        self.destinationVersionContentsDirectory = \"\"\n     \n     def __eq__(self, other):\n         if self.__class__ == other.__class__:\n@@ -142,7 +144,11 @@ class FrameworkInfo(object):\n             info.destinationDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, info.binaryDirectory)\n             \n             info.sourceResourcesDirectory = os.path.join(info.frameworkPath, \"Resources\")\n+            info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n+            info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n             info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n+            info.destinationContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Contents\")\n+            info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n         \n         return info\n \n@@ -196,7 +202,8 @@ class DeploymentInfo(object):\n def getFrameworks(binaryPath, verbose):\n     if verbose >= 3:\n         print \"Inspecting with otool: \" + binaryPath\n-    otool = subprocess.Popen([\"otool\", \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+    otoolbin=os.getenv(\"OTOOL\", \"otool\")\n+    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n     o_stdout, o_stderr = otool.communicate()\n     if otool.returncode != 0:\n         if verbose >= 1:\n@@ -211,6 +218,7 @@ def getFrameworks(binaryPath, verbose):\n     \n     libraries = []\n     for line in otoolLines:\n+        line = line.replace(\"@loader_path\", os.path.dirname(binaryPath))\n         info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n         if info is not None:\n             if verbose >= 3:\n@@ -221,7 +229,8 @@ def getFrameworks(binaryPath, verbose):\n     return libraries\n \n def runInstallNameTool(action, *args):\n-    subprocess.check_call([\"install_name_tool\", \"-\"+action] + list(args))\n+    installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n+    subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n \n def changeInstallName(oldName, newName, binaryPath, verbose):\n     if verbose >= 3:\n@@ -239,10 +248,11 @@ def changeIdentification(id, binaryPath, verbose):\n     runInstallNameTool(\"id\", id, binaryPath)\n \n def runStrip(binaryPath, verbose):\n+    stripbin=os.getenv(\"STRIP\", \"strip\")\n     if verbose >= 3:\n         print \"Using strip:\"\n         print \" stripped\", binaryPath\n-    subprocess.check_call([\"strip\", \"-x\", binaryPath])\n+    subprocess.check_call([stripbin, \"-x\", binaryPath])\n \n def copyFramework(framework, path, verbose):\n     if framework.sourceFilePath.startswith(\"Qt\"):\n@@ -272,18 +282,35 @@ def copyFramework(framework, path, verbose):\n       os.chmod(toPath, permissions.st_mode | stat.S_IWRITE)\n \n     if not framework.isDylib(): # Copy resources for real frameworks\n+\n+        linkfrom = os.path.join(path, \"Contents\",\"Frameworks\", framework.frameworkName, \"Versions\", \"Current\")\n+        linkto = framework.version\n+        if not os.path.exists(linkfrom):\n+            os.symlink(linkto, linkfrom)\n+            if verbose >= 2:\n+                print \"Linked:\", linkfrom, \"->\", linkto\n         fromResourcesDir = framework.sourceResourcesDirectory\n         if os.path.exists(fromResourcesDir):\n             toResourcesDir = os.path.join(path, framework.destinationResourcesDirectory)\n-            shutil.copytree(fromResourcesDir, toResourcesDir)\n+            shutil.copytree(fromResourcesDir, toResourcesDir, symlinks=True)\n             if verbose >= 3:\n                 print \"Copied resources:\", fromResourcesDir\n                 print \" to:\", toResourcesDir\n+        fromContentsDir = framework.sourceVersionContentsDirectory\n+        if not os.path.exists(fromContentsDir):\n+            fromContentsDir = framework.sourceContentsDirectory\n+        if os.path.exists(fromContentsDir):\n+            toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n+            shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n+            contentslinkfrom = os.path.join(path, framework.destinationContentsDirectory)\n+            if verbose >= 3:\n+                print \"Copied Contents:\", fromContentsDir\n+                print \" to:\", toContentsDir\n     elif framework.frameworkName.startswith(\"libQtGui\"): # Copy qt_menu.nib (applies to non-framework layout)\n         qtMenuNibSourcePath = os.path.join(framework.frameworkDirectory, \"Resources\", \"qt_menu.nib\")\n         qtMenuNibDestinationPath = os.path.join(path, \"Contents\", \"Resources\", \"qt_menu.nib\")\n         if os.path.exists(qtMenuNibSourcePath) and not os.path.exists(qtMenuNibDestinationPath):\n-            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath)\n+            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath, symlinks=True)\n             if verbose >= 3:\n                 print \"Copied for libQtGui:\", qtMenuNibSourcePath\n                 print \" to:\", qtMenuNibDestinationPath\n@@ -305,7 +332,7 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n         if deploymentInfo.qtPath is None and framework.isQtFramework():\n             deploymentInfo.detectQtPath(framework.frameworkDirectory)\n         \n-        if framework.installName.startswith(\"@executable_path\"):\n+        if framework.installName.startswith(\"@executable_path\") or framework.installName.startswith(bundlePath):\n             if verbose >= 2:\n                 print framework.frameworkName, \"already deployed, skipping.\"\n             continue\n@@ -347,6 +374,8 @@ def deployFrameworksForAppBundle(applicationBundle, strip, verbose):\n def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n     # Lookup available plugins, exclude unneeded\n     plugins = []\n+    if deploymentInfo.pluginPath is None:\n+        return\n     for dirpath, dirnames, filenames in os.walk(deploymentInfo.pluginPath):\n         pluginDirectory = os.path.relpath(dirpath, deploymentInfo.pluginPath)\n         if pluginDirectory == \"designer\":\n@@ -364,15 +393,31 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n             # Deploy the script plugins only if QtScript is in use\n             if not deploymentInfo.usesFramework(\"QtScript\"):\n                 continue\n-        elif pluginDirectory == \"qmltooling\":\n+        elif pluginDirectory == \"qmltooling\" or pluginDirectory == \"qml1tooling\":\n             # Deploy the qml plugins only if QtDeclarative is in use\n             if not deploymentInfo.usesFramework(\"QtDeclarative\"):\n                 continue\n         elif pluginDirectory == \"bearer\":\n             # Deploy the bearer plugins only if QtNetwork is in use\n             if not deploymentInfo.usesFramework(\"QtNetwork\"):\n                 continue\n-        \n+        elif pluginDirectory == \"position\":\n+            # Deploy the position plugins only if QtPositioning is in use\n+            if not deploymentInfo.usesFramework(\"QtPositioning\"):\n+                continue\n+        elif pluginDirectory == \"sensors\" or pluginDirectory == \"sensorgestures\":\n+            # Deploy the sensor plugins only if QtSensors is in use\n+            if not deploymentInfo.usesFramework(\"QtSensors\"):\n+                continue\n+        elif pluginDirectory == \"audio\" or pluginDirectory == \"playlistformats\":\n+            # Deploy the audio plugins only if QtMultimedia is in use\n+            if not deploymentInfo.usesFramework(\"QtMultimedia\"):\n+                continue\n+        elif pluginDirectory == \"mediaservice\":\n+            # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n+            if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n+                continue\n+\n         for pluginName in filenames:\n             pluginPath = os.path.join(pluginDirectory, pluginName)\n             if pluginName.endswith(\"_debug.dylib\"):\n@@ -390,7 +435,11 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n                 # Deploy the opengl graphicssystem plugin only if QtOpenGL is in use\n                 if not deploymentInfo.usesFramework(\"QtOpenGL\"):\n                     continue\n-            \n+            elif pluginPath == \"accessible/libqtaccessiblequick.dylib\":\n+                # Deploy the accessible qtquick plugin only if QtQuick is in use\n+                if not deploymentInfo.usesFramework(\"QtQuick\"):\n+                    continue\n+\n             plugins.append((pluginDirectory, pluginName))\n     \n     for pluginDirectory, pluginName in plugins:\n@@ -421,8 +470,8 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n                 deployFrameworks([dependency], appBundleInfo.path, destinationPath, strip, verbose, deploymentInfo)\n \n qt_conf=\"\"\"[Paths]\n-translations=Resources\n-plugins=PlugIns\n+Translations=Resources\n+Plugins=PlugIns\n \"\"\"\n \n ap = ArgumentParser(description=\"\"\"Improved version of macdeployqt.\n@@ -444,6 +493,7 @@ ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"\n ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's ressources; the language list must be separated with commas, not with whitespace\")\n+ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n \n config = ap.parse_args()\n@@ -462,6 +512,15 @@ if not os.path.exists(app_bundle):\n app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n \n # ------------------------------------------------\n+translations_dir = None\n+if config.translations_dir and config.translations_dir[0]:\n+    if os.path.exists(config.translations_dir[0]):\n+        translations_dir = config.translations_dir[0]\n+    else:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not find translation dir \\\"%s\\\"\\n\" % (translations_dir))\n+        sys.exit(1)\n+# ------------------------------------------------\n \n for p in config.add_resources:\n     if verbose >= 3:\n@@ -483,16 +542,6 @@ if len(config.fancy) == 1:\n             sys.stderr.write(\"Error: Could not import plistlib which is required for fancy disk images.\\n\")\n         sys.exit(1)\n     \n-    if verbose >= 3:\n-        print \"Fancy: Importing appscript...\"\n-    try:\n-        import appscript\n-    except ImportError:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not import appscript which is required for fancy disk images.\\n\")\n-            sys.stderr.write(\"Please install it e.g. with \\\"sudo easy_install appscript\\\".\\n\")\n-        sys.exit(1)\n-    \n     p = config.fancy[0]\n     if verbose >= 3:\n         print \"Fancy: Loading \\\"%s\\\"...\" % p\n@@ -555,7 +604,7 @@ if verbose >= 3:\n     print app_bundle, \"->\", target\n \n os.mkdir(\"dist\")\n-shutil.copytree(app_bundle, target)\n+shutil.copytree(app_bundle, target, symlinks=True)\n \n applicationBundle = ApplicationBundleInfo(target)\n \n@@ -575,7 +624,7 @@ try:\n except RuntimeError as e:\n     if verbose >= 1:\n         sys.stderr.write(\"Error: %s\\n\" % str(e))\n-    sys.exit(ret)\n+    sys.exit(1)\n \n # ------------------------------------------------\n \n@@ -588,14 +637,21 @@ if config.plugins:\n     except RuntimeError as e:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: %s\\n\" % str(e))\n-        sys.exit(ret)\n+        sys.exit(1)\n \n # ------------------------------------------------\n \n if len(config.add_qt_tr) == 0:\n     add_qt_tr = []\n else:\n-    qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n+    if translations_dir is not None:\n+        qt_tr_dir = translations_dir\n+    else:\n+        if deploymentInfo.qtPath is not None:\n+            qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n+        else:\n+            sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n+            sys.exit(1)\n     add_qt_tr = [\"qt_%s.qm\" % lng for lng in config.add_qt_tr[0].split(\",\")]\n     for lng_file in add_qt_tr:\n         p = os.path.join(qt_tr_dir, lng_file)\n@@ -635,7 +691,7 @@ for p in config.add_resources:\n     if verbose >= 3:\n         print p, \"->\", t\n     if os.path.isdir(p):\n-        shutil.copytree(p, t)\n+        shutil.copytree(p, t, symlinks=True)\n     else:\n         shutil.copy2(p, t)\n \n@@ -651,6 +707,23 @@ elif config.sign:\n # ------------------------------------------------\n \n if config.dmg is not None:\n+\n+    #Patch in check_output for Python 2.6\n+    if \"check_output\" not in dir( subprocess ):\n+        def f(*popenargs, **kwargs):\n+            if 'stdout' in kwargs:\n+                raise ValueError('stdout argument not allowed, it will be overridden.')\n+            process = subprocess.Popen(stdout=subprocess.PIPE, *popenargs, **kwargs)\n+            output, unused_err = process.communicate()\n+            retcode = process.poll()\n+            if retcode:\n+                cmd = kwargs.get(\"args\")\n+                if cmd is None:\n+                    cmd = popenargs[0]\n+                raise CalledProcessError(retcode, cmd)\n+            return output\n+        subprocess.check_output = f\n+\n     def runHDIUtil(verb, image_basename, **kwargs):\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n         if kwargs.has_key(\"capture_stdout\"):\n@@ -792,6 +865,7 @@ if config.dmg is not None:\n \n         if verbose >= 2:\n             print \"+ Finalizing .dmg disk image +\"\n+            time.sleep(5)\n         \n         try:\n             runHDIUtil(\"convert\", dmg_name + \".temp\", format=\"UDBZ\", o=dmg_name + \".dmg\", ov=True)"
      },
      {
        "sha": "3d749014374f7b4bb33e031dfce24e7e71a746e7",
        "filename": "contrib/macdeploy/notes.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/macdeploy/notes.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/macdeploy/notes.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/notes.txt?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,26 +0,0 @@\n-\n-macdeployqtplus works best on OS X Lion, for Snow Leopard you'd need to install\n-Python 2.7 and make it your default Python installation.\n-\n-You will need the appscript package for the fancy disk image creation to work.\n-Install it by invoking \"sudo easy_install appscript\".\n-\n-This script should be invoked in the target directory like this:\n-$source_dir/contrib/macdeploy/macdeployqtplus Bitcoin-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy $source_dir/contrib/macdeploy/fancy.plist -verbose 2\n-\n-During the process, the disk image window will pop up briefly where the fancy\n-settings are applied. This is normal, please do not interfere.\n-\n-You can also set up Qt Creator for invoking the script. For this, go to the\n-\"Projects\" tab on the left side, switch to \"Run Settings\" above and add a\n-deploy configuration. Next add a deploy step choosing \"Custom Process Step\".\n-Fill in the following.\n-\n-Enable custom process step: [x]\n-Command: %{sourceDir}/contrib/macdeploy/macdeployqtplus\n-Working directory: %{buildDir}\n-Command arguments: Bitcoin-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy %{sourceDir}/contrib/macdeploy/fancy.plist -verbose 2\n-\n-After that you can start the deployment process through the menu with\n-Build -> Deploy Project \"bitcoin-qt\"\n-"
      },
      {
        "sha": "d1596575dd1bd86428a46296383ef4a26d3b25ed",
        "filename": "contrib/pyminer/README",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/pyminer/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/pyminer/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/pyminer/README?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,6 +0,0 @@\n-\n-This is a 'getwork' CPU mining client for bitcoin.\n-\n-It is pure-python, and therefore very, very slow.  The purpose is to\n-provide a reference implementation of a miner, for study.\n-"
      },
      {
        "sha": "103e7c1372598d2a4d2ef758aa39dc70b52560fc",
        "filename": "contrib/pyminer/example-config.cfg",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/pyminer/example-config.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/pyminer/example-config.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/pyminer/example-config.cfg?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,32 +0,0 @@\n-\n-#\n-# RPC login details\n-#\n-host=127.0.0.1\n-port=8332\n-\n-rpcuser=myusername\n-rpcpass=mypass\n-\n-\n-#\n-# mining details\n-#\n-\n-threads=4\n-\n-# periodic rate for requesting new work, if solution not found\n-scantime=60\n-\n-\n-#\n-# misc.\n-#\n-\n-# not really used right now\n-logdir=/tmp/pyminer\n-\n-# set to 1, to enable hashmeter output\n-hashmeter=0\n-\n-"
      },
      {
        "sha": "0a2932d66e7c1307a218a8922d71cc66cb36f18d",
        "filename": "contrib/pyminer/pyminer.py",
        "status": "removed",
        "additions": 0,
        "deletions": 252,
        "changes": 252,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/pyminer/pyminer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/pyminer/pyminer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/pyminer/pyminer.py?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,252 +0,0 @@\n-#!/usr/bin/python\n-#\n-# Copyright (c) 2011 The Bitcoin developers\n-# Distributed under the MIT/X11 software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-import time\n-import json\n-import pprint\n-import hashlib\n-import struct\n-import re\n-import base64\n-import httplib\n-import sys\n-from multiprocessing import Process\n-\n-ERR_SLEEP = 15\n-MAX_NONCE = 1000000L\n-\n-settings = {}\n-pp = pprint.PrettyPrinter(indent=4)\n-\n-class BitcoinRPC:\n-\tOBJID = 1\n-\n-\tdef __init__(self, host, port, username, password):\n-\t\tauthpair = \"%s:%s\" % (username, password)\n-\t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n-\t\tself.conn = httplib.HTTPConnection(host, port, False, 30)\n-\tdef rpc(self, method, params=None):\n-\t\tself.OBJID += 1\n-\t\tobj = { 'version' : '1.1',\n-\t\t\t'method' : method,\n-\t\t\t'id' : self.OBJID }\n-\t\tif params is None:\n-\t\t\tobj['params'] = []\n-\t\telse:\n-\t\t\tobj['params'] = params\n-\t\tself.conn.request('POST', '/', json.dumps(obj),\n-\t\t\t{ 'Authorization' : self.authhdr,\n-\t\t\t  'Content-type' : 'application/json' })\n-\n-\t\tresp = self.conn.getresponse()\n-\t\tif resp is None:\n-\t\t\tprint \"JSON-RPC: no response\"\n-\t\t\treturn None\n-\n-\t\tbody = resp.read()\n-\t\tresp_obj = json.loads(body)\n-\t\tif resp_obj is None:\n-\t\t\tprint \"JSON-RPC: cannot JSON-decode body\"\n-\t\t\treturn None\n-\t\tif 'error' in resp_obj and resp_obj['error'] != None:\n-\t\t\treturn resp_obj['error']\n-\t\tif 'result' not in resp_obj:\n-\t\t\tprint \"JSON-RPC: no result in object\"\n-\t\t\treturn None\n-\n-\t\treturn resp_obj['result']\n-\tdef getblockcount(self):\n-\t\treturn self.rpc('getblockcount')\n-\tdef getwork(self, data=None):\n-\t\treturn self.rpc('getwork', data)\n-\n-def uint32(x):\n-\treturn x & 0xffffffffL\n-\n-def bytereverse(x):\n-\treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n-\t\t\t(((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n-\n-def bufreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n-\t\tout_words.append(struct.pack('@I', bytereverse(word)))\n-\treturn ''.join(out_words)\n-\n-def wordreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tout_words.append(in_buf[i:i+4])\n-\tout_words.reverse()\n-\treturn ''.join(out_words)\n-\n-class Miner:\n-\tdef __init__(self, id):\n-\t\tself.id = id\n-\t\tself.max_nonce = MAX_NONCE\n-\n-\tdef work(self, datastr, targetstr):\n-\t\t# decode work data hex string to binary\n-\t\tstatic_data = datastr.decode('hex')\n-\t\tstatic_data = bufreverse(static_data)\n-\n-\t\t# the first 76b of 80b do not change\n-\t\tblk_hdr = static_data[:76]\n-\n-\t\t# decode 256-bit target value\n-\t\ttargetbin = targetstr.decode('hex')\n-\t\ttargetbin = targetbin[::-1]\t# byte-swap and dword-swap\n-\t\ttargetbin_str = targetbin.encode('hex')\n-\t\ttarget = long(targetbin_str, 16)\n-\n-\t\t# pre-hash first 76b of block header\n-\t\tstatic_hash = hashlib.sha256()\n-\t\tstatic_hash.update(blk_hdr)\n-\n-\t\tfor nonce in xrange(self.max_nonce):\n-\n-\t\t\t# encode 32-bit nonce value\n-\t\t\tnonce_bin = struct.pack(\"<I\", nonce)\n-\n-\t\t\t# hash final 4b, the nonce value\n-\t\t\thash1_o = static_hash.copy()\n-\t\t\thash1_o.update(nonce_bin)\n-\t\t\thash1 = hash1_o.digest()\n-\n-\t\t\t# sha256 hash of sha256 hash\n-\t\t\thash_o = hashlib.sha256()\n-\t\t\thash_o.update(hash1)\n-\t\t\thash = hash_o.digest()\n-\n-\t\t\t# quick test for winning solution: high 32 bits zero?\n-\t\t\tif hash[-4:] != '\\0\\0\\0\\0':\n-\t\t\t\tcontinue\n-\n-\t\t\t# convert binary hash to 256-bit Python long\n-\t\t\thash = bufreverse(hash)\n-\t\t\thash = wordreverse(hash)\n-\n-\t\t\thash_str = hash.encode('hex')\n-\t\t\tl = long(hash_str, 16)\n-\n-\t\t\t# proof-of-work test:  hash < target\n-\t\t\tif l < target:\n-\t\t\t\tprint time.asctime(), \"PROOF-OF-WORK found: %064x\" % (l,)\n-\t\t\t\treturn (nonce + 1, nonce_bin)\n-\t\t\telse:\n-\t\t\t\tprint time.asctime(), \"PROOF-OF-WORK false positive %064x\" % (l,)\n-#\t\t\t\treturn (nonce + 1, nonce_bin)\n-\n-\t\treturn (nonce + 1, None)\n-\n-\tdef submit_work(self, rpc, original_data, nonce_bin):\n-\t\tnonce_bin = bufreverse(nonce_bin)\n-\t\tnonce = nonce_bin.encode('hex')\n-\t\tsolution = original_data[:152] + nonce + original_data[160:256]\n-\t\tparam_arr = [ solution ]\n-\t\tresult = rpc.getwork(param_arr)\n-\t\tprint time.asctime(), \"--> Upstream RPC result:\", result\n-\n-\tdef iterate(self, rpc):\n-\t\twork = rpc.getwork()\n-\t\tif work is None:\n-\t\t\ttime.sleep(ERR_SLEEP)\n-\t\t\treturn\n-\t\tif 'data' not in work or 'target' not in work:\n-\t\t\ttime.sleep(ERR_SLEEP)\n-\t\t\treturn\n-\n-\t\ttime_start = time.time()\n-\n-\t\t(hashes_done, nonce_bin) = self.work(work['data'],\n-\t\t\t\t\t\t     work['target'])\n-\n-\t\ttime_end = time.time()\n-\t\ttime_diff = time_end - time_start\n-\n-\t\tself.max_nonce = long(\n-\t\t\t(hashes_done * settings['scantime']) / time_diff)\n-\t\tif self.max_nonce > 0xfffffffaL:\n-\t\t\tself.max_nonce = 0xfffffffaL\n-\n-\t\tif settings['hashmeter']:\n-\t\t\tprint \"HashMeter(%d): %d hashes, %.2f Khash/sec\" % (\n-\t\t\t      self.id, hashes_done,\n-\t\t\t      (hashes_done / 1000.0) / time_diff)\n-\n-\t\tif nonce_bin is not None:\n-\t\t\tself.submit_work(rpc, work['data'], nonce_bin)\n-\n-\tdef loop(self):\n-\t\trpc = BitcoinRPC(settings['host'], settings['port'],\n-\t\t\t\t settings['rpcuser'], settings['rpcpass'])\n-\t\tif rpc is None:\n-\t\t\treturn\n-\n-\t\twhile True:\n-\t\t\tself.iterate(rpc)\n-\n-def miner_thread(id):\n-\tminer = Miner(id)\n-\tminer.loop()\n-\n-if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint \"Usage: pyminer.py CONFIG-FILE\"\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\tif 'host' not in settings:\n-\t\tsettings['host'] = '127.0.0.1'\n-\tif 'port' not in settings:\n-\t\tsettings['port'] = 8332\n-\tif 'threads' not in settings:\n-\t\tsettings['threads'] = 1\n-\tif 'hashmeter' not in settings:\n-\t\tsettings['hashmeter'] = 0\n-\tif 'scantime' not in settings:\n-\t\tsettings['scantime'] = 30L\n-\tif 'rpcuser' not in settings or 'rpcpass' not in settings:\n-\t\tprint \"Missing username and/or password in cfg file\"\n-\t\tsys.exit(1)\n-\n-\tsettings['port'] = int(settings['port'])\n-\tsettings['threads'] = int(settings['threads'])\n-\tsettings['hashmeter'] = int(settings['hashmeter'])\n-\tsettings['scantime'] = long(settings['scantime'])\n-\n-\tthr_list = []\n-\tfor thr_id in range(settings['threads']):\n-\t\tp = Process(target=miner_thread, args=(thr_id,))\n-\t\tp.start()\n-\t\tthr_list.append(p)\n-\t\ttime.sleep(1)\t\t\t# stagger threads\n-\n-\tprint settings['threads'], \"mining threads started\"\n-\n-\tprint time.asctime(), \"Miner Starts - %s:%s\" % (settings['host'], settings['port'])\n-\ttry:\n-\t\tfor thr_proc in thr_list:\n-\t\t\tthr_proc.join()\n-\texcept KeyboardInterrupt:\n-\t\tpass\n-\tprint time.asctime(), \"Miner Stops - %s:%s\" % (settings['host'], settings['port'])\n-"
      },
      {
        "sha": "5e0a975fc64ff27b67c62efdf5f6996a8ee12cc4",
        "filename": "contrib/qos/README.md",
        "status": "renamed",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,3 +1,5 @@\n+### Qos ###\n+\n This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN (defined as 192.168.x.x).\n \n This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.",
        "previous_filename": "contrib/qos/README"
      },
      {
        "sha": "f9a0c277e2e7f63276a4f5a3a4f27763aab9cd25",
        "filename": "contrib/seeds/README.md",
        "status": "renamed",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,9 +1,11 @@\n+### Seeds ###\n+\n Utility to generate the pnSeed[] array that is compiled into the client\n-(see src/net.cpp).\n+(see [src/net.cpp](/src/net.cpp)).\n \n The 600 seeds compiled into the 0.8 release were created from sipa's DNS seed data, like this:\n \n-curl -s http://bitcoin.sipa.be/seeds.txt | head -1000 | makeseeds.py\n+\tcurl -s http://bitcoin.sipa.be/seeds.txt | head -1000 | makeseeds.py\n \n The input to makeseeds.py is assumed to be approximately sorted from most-reliable to least-reliable,\n with IP:port first on each line (lines that don't match IPv4:port are ignored).",
        "previous_filename": "contrib/seeds/README"
      },
      {
        "sha": "8a087a0c1e597d90bc135d43805307781fe8fcce",
        "filename": "contrib/spendfrom/README",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/spendfrom/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/spendfrom/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/README?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,32 +0,0 @@\n-Use the raw transactions API to send coins received on a particular\n-address (or addresses).\n-\n-Depends on jsonrpc\n-\n-Usage:\n-\n-spendfrom.py --from=FROMADDRESS1[,FROMADDRESS2] --to=TOADDRESS --amount=amount \\\n-             --fee=fee --datadir=/path/to/.bitcoin --testnet --dry_run\n-\n-With no arguments, outputs a list of amounts associated with addresses.\n-\n-With arguments, sends coins received by the FROMADDRESS addresses to the TOADDRESS.\n-\n-You may explictly specify how much fee to pay (a fee more than 1% of the amount\n-will fail,  though, to prevent bitcoin-losing accidents). Spendfrom may fail if\n-it thinks the transaction would never be confirmed (if the amount being sent is\n-too small, or if the transaction is too many bytes for the fee).\n-\n-If a change output needs to be created, the change will be sent to the last\n-FROMADDRESS (if you specify just one FROMADDRESS, change will go back to it).\n-\n-If --datadir is not specified, the default datadir is used.\n-\n-The --dry_run option will just create and sign the the transaction and print\n-the transaction data (as hexadecimal), instead of broadcasting it.\n-\n-If the transaction is created and broadcast successfully, a transaction id\n-is printed.\n-\n-If this was a tool for end-users and not programmers, it would have much friendlier\n-error-handling."
      },
      {
        "sha": "c0a9c9ccf93d335a7092e383ff8a59ae410e549d",
        "filename": "contrib/spendfrom/README.md",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/spendfrom/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/spendfrom/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,35 @@\n+### SpendFrom ###\n+\n+Use the raw transactions API to send coins received on a particular\n+address (or addresses). \n+\n+### Usage: ###\n+Depends on [jsonrpc](http://json-rpc.org/).\n+\n+\tspendfrom.py --from=FROMADDRESS1[,FROMADDRESS2] --to=TOADDRESS --amount=amount \\\n+\t             --fee=fee --datadir=/path/to/.bitcoin --testnet --dry_run\n+\n+With no arguments, outputs a list of amounts associated with addresses.\n+\n+With arguments, sends coins received by the `FROMADDRESS` addresses to the `TOADDRESS`.\n+\n+### Notes ###\n+\n+- You may explicitly specify how much fee to pay (a fee more than 1% of the amount\n+will fail,  though, to prevent bitcoin-losing accidents). Spendfrom may fail if\n+it thinks the transaction would never be confirmed (if the amount being sent is\n+too small, or if the transaction is too many bytes for the fee).\n+\n+- If a change output needs to be created, the change will be sent to the last\n+`FROMADDRESS` (if you specify just one `FROMADDRESS`, change will go back to it).\n+\n+- If `--datadir` is not specified, the default datadir is used.\n+\n+- The `--dry_run` option will just create and sign the transaction and print\n+the transaction data (as hexadecimal), instead of broadcasting it.\n+\n+- If the transaction is created and broadcast successfully, a transaction id\n+is printed.\n+\n+- If this was a tool for end-users and not programmers, it would have much friendlier\n+error-handling."
      },
      {
        "sha": "def40b0d6c2a5459ce26df10258a0485ecdb5bd1",
        "filename": "contrib/test-patches/README.md",
        "status": "renamed",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/test-patches/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/test-patches/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/test-patches/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,4 +1,7 @@\n+### Test Patches ###\n+\n These patches are applied when the automated pull-tester\n tests each pull and when master is tested using jenkins.\n You can find more information about the tests run at\n-http://jenkins.bluematt.me/pull-tester/files/\n+[http://jenkins.bluematt.me/pull-tester/files/\n+](http://jenkins.bluematt.me/pull-tester/files/)\n\\ No newline at end of file",
        "previous_filename": "contrib/test-patches/README"
      },
      {
        "sha": "02d6c4cdc250ede71dd682021218432015d1cc07",
        "filename": "contrib/testgen/README",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/testgen/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/testgen/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1 +0,0 @@\n-Utilities to generate test vectors for the data-driven Bitcoin tests"
      },
      {
        "sha": "83624f443a7f9f71ba2a1f1c2dbc3d3a8297bc7d",
        "filename": "contrib/testgen/README.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,8 @@\n+### TestGen ###\n+\n+Utilities to generate test vectors for the data-driven Bitcoin tests.\n+\n+Usage: \n+\n+    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n+    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n\\ No newline at end of file"
      },
      {
        "sha": "8c038865bdaff592aed1cd8757733b4a78e23507",
        "filename": "contrib/verifysfbinaries/README.md",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/verifysfbinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/verifysfbinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,6 @@\n+### Verify SF Binaries ###\n+This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n+\n+It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n+\n+The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2.\n\\ No newline at end of file"
      },
      {
        "sha": "3eb46938835cc3e8ad4fe1a6d9b73bad602fc5c0",
        "filename": "contrib/verifysfbinaries/verify.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/contrib/verifysfbinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/contrib/verifysfbinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/verify.sh?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,6 +1,6 @@\n #!/bin/bash\n \n-###   This script attempts to download the signature file SHA256SUMS.asc from SourceForge\n+###   This script attempts to download the signature file SHA256SUMS.asc from bitcoin.org\n ###   It first checks if the signature passes, and then downloads the files specified in\n ###   the file, and checks if the hashes of these files match those that are specified\n ###   in the signature file.\n@@ -18,11 +18,11 @@ WORKINGDIR=\"/tmp/bitcoin\"\n TMPFILE=\"hashes.tmp\"\n \n #this URL is used if a version number is not specified as an argument to the script\n-SIGNATUREFILE=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/bitcoin-0.8.2/SHA256SUMS.asc\"\n+SIGNATUREFILE=\"https://bitcoin.org/bin/0.9.2.1/SHA256SUMS.asc\"\n \n SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n RCSUBDIR=\"test/\"\n-BASEDIR=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/\"\n+BASEDIR=\"https://bitcoin.org/bin/\"\n VERSIONPREFIX=\"bitcoin-\"\n RCVERSIONSTRING=\"rc\"\n \n@@ -62,7 +62,7 @@ WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n #and then see if wget completed successfully\n if [ $? -ne 0 ]; then\n    echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n-   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)\"\n+   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.9.2-rc1)\"\n    echo \"wget output:\"\n    echo \"$WGETOUT\"|sed 's/^/\\t/g'\n    exit 2"
      },
      {
        "sha": "30f3f5b26a14a4bcee3ec79d958fd58d8ed00fff",
        "filename": "contrib/wallettools/walletchangepass.py",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/wallettools/walletchangepass.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/wallettools/walletchangepass.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletchangepass.py?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,5 +0,0 @@\n-from jsonrpc import ServiceProxy\n-access = ServiceProxy(\"http://127.0.0.1:8332\")\n-pwd = raw_input(\"Enter old wallet passphrase: \")\n-pwd2 = raw_input(\"Enter new wallet passphrase: \")\n-access.walletpassphrasechange(pwd, pwd2)\n\\ No newline at end of file"
      },
      {
        "sha": "f847c6fe61a931d6a3a1cf2c36d8a37080957317",
        "filename": "contrib/wallettools/walletunlock.py",
        "status": "removed",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/contrib/wallettools/walletunlock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/contrib/wallettools/walletunlock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletunlock.py?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,4 +0,0 @@\n-from jsonrpc import ServiceProxy\n-access = ServiceProxy(\"http://127.0.0.1:8332\")\n-pwd = raw_input(\"Enter wallet passphrase: \")\n-access.walletpassphrase(pwd, 60)\n\\ No newline at end of file"
      },
      {
        "sha": "82c48638b0085ab27f46e771a5805116b2db6b90",
        "filename": "depends/.gitignore",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,5 @@\n+SDKs/\n+work/\n+built/\n+sources/\n+config.site"
      },
      {
        "sha": "fc763bedeb5f24258efff5a8dbdea9f59a962ff1",
        "filename": "depends/Makefile",
        "status": "added",
        "additions": 125,
        "deletions": 0,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,125 @@\n+.NOTPARALLEL :\n+\n+SOURCES_PATH ?= $(BASEDIR)/sources\n+BASE_CACHE ?= $(BASEDIR)/built\n+SDK_PATH ?= $(BASEDIR)/SDKs\n+NO_QT ?=\n+NO_WALLET ?=\n+NO_UPNP ?=\n+FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n+\n+BUILD = $(shell ./config.guess)\n+HOST ?= $(BUILD)\n+PATCHES_PATH = $(BASEDIR)/patches\n+BASEDIR = $(CURDIR)\n+HASH_LENGTH:=11\n+DOWNLOAD_CONNECT_TIMEOUT:=10\n+DOWNLOAD_RETRIES:=3\n+\n+host:=$(BUILD)\n+ifneq ($(HOST),)\n+host:=$(HOST)\n+host_toolchain:=$(HOST)-\n+endif\n+\n+ifneq ($(DEBUG),)\n+release_type=debug\n+else\n+release_type=release\n+endif\n+\n+base_build_dir=$(BASEDIR)/work/build\n+base_staging_dir=$(BASEDIR)/work/staging\n+canonical_host:=$(shell ./config.sub $(HOST))\n+build:=$(shell ./config.sub $(BUILD))\n+\n+build_arch =$(firstword $(subst -, ,$(build)))\n+build_vendor=$(word 2,$(subst -, ,$(build)))\n+full_build_os:=$(subst $(build_arch)-$(build_vendor)-,,$(build))\n+build_os:=$(findstring linux,$(full_build_os))\n+build_os+=$(findstring darwin,$(full_build_os))\n+build_os:=$(strip $(build_os))\n+ifeq ($(build_os),)\n+build_os=$(full_build_os)\n+endif\n+\n+host_arch=$(firstword $(subst -, ,$(canonical_host)))\n+host_vendor=$(word 2,$(subst -, ,$(canonical_host)))\n+full_host_os:=$(subst $(host_arch)-$(host_vendor)-,,$(canonical_host))\n+host_os:=$(findstring linux,$(full_host_os))\n+host_os+=$(findstring darwin,$(full_host_os))\n+host_os+=$(findstring mingw32,$(full_host_os))\n+host_os:=$(strip $(host_os))\n+ifeq ($(host_os),)\n+host_os=$(full_host_os)\n+endif\n+\n+$(host_arch)_$(host_os)_prefix=$(BASEDIR)/$(host)\n+$(host_arch)_$(host_os)_host=$(host)\n+host_prefix=$($(host_arch)_$(host_os)_prefix)\n+build_prefix=$(host_prefix)/native\n+build_host=$(build)\n+\n+AT_$(V):=\n+AT_:=@\n+AT:=$(AT_$(V))\n+\n+all: install\n+\n+include hosts/$(host_os).mk\n+include hosts/default.mk\n+include builders/$(build_os).mk\n+include builders/default.mk\n+include packages/packages.mk\n+\n+qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages)\n+qt_native_packages_$(NO_QT) = $(qt_native_packages)\n+wallet_packages_$(NO_WALLET) = $(wallet_packages)\n+upnp_packages_$(NO_UPNP) = $(upnp_packages)\n+\n+packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_)\n+native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages) $(qt_native_packages_)\n+all_packages = $(packages) $(native_packages)\n+\n+meta_depends = Makefile funcs.mk builders/default.mk hosts/default.mk hosts/$(host_os).mk builders/$(build_os).mk\n+\n+$(host_arch)_$(host_os)_native_toolchain?=$($(host_os)_native_toolchain)\n+\n+include funcs.mk\n+\n+toolchain_path=$($($(host_arch)_$(host_os)_native_toolchain)_prefixbin)\n+final_build_id_long+=$(shell $(build_SHA256SUM) config.site.in)\n+final_build_id+=$(shell echo -n $(final_build_id_long) | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH))\n+$(host_prefix)/.stamp_$(final_build_id): | $(native_packages) $(packages)\n+\t$(AT)rm -rf $(@D)\n+\t$(AT)mkdir -p $(@D)\n+\t$(AT)echo copying packages: $|\n+\t$(AT)echo to: $(@D)\n+\t$(AT)cd $(@D); $(foreach package,$|, tar xf $($(package)_cached); )\n+\t$(AT)touch $@\n+\n+$(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_build_id)\n+\t$(AT)@mkdir -p $(@D)\n+\t$(AT)sed -e 's|@HOST@|$(host)|' \\\n+            -e 's|@CC@|$(toolchain_path)$(host_CC)|' \\\n+            -e 's|@CXX@|$(toolchain_path)$(host_CXX)|' \\\n+            -e 's|@AR@|$(toolchain_path)$(host_AR)|' \\\n+            -e 's|@RANLIB@|$(toolchain_path)$(host_RANLIB)|' \\\n+            -e 's|@NM@|$(toolchain_path)$(host_NM)|' \\\n+            -e 's|@STRIP@|$(toolchain_path)$(host_STRIP)|' \\\n+            -e 's|@build_os@|$(build_os)|' \\\n+            -e 's|@host_os@|$(host_os)|' \\\n+            -e 's|@CFLAGS@|$(strip $(host_CFLAGS) $(host_$(release_type)_CFLAGS))|' \\\n+            -e 's|@CXXFLAGS@|$(strip $(host_CXXFLAGS) $(host_$(release_type)_CXXFLAGS))|' \\\n+            -e 's|@CPPFLAGS@|$(strip $(host_CPPFLAGS) $(host_$(release_type)_CPPFLAGS))|' \\\n+            -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n+            -e 's|@no_qt@|$(NO_QT)|' \\\n+            -e 's|@no_wallet@|$(NO_WALLET)|' \\\n+            -e 's|@no_upnp@|$(NO_UPNP)|' \\\n+            -e 's|@debug@|$(DEBUG)|' \\\n+            $< > $@\n+\t$(AT)touch $@\n+\n+install: $(host_prefix)/share/config.site\n+download: $(all_sources)\n+.PHONY: install cached"
      },
      {
        "sha": "fed2f9b5ab9f3ad4127a35c6bd57ae3b9e547f31",
        "filename": "depends/README",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,55 @@\n+This is a system of building and caching dependencies necessary for building\n+Bitcoin.\n+\n+There are several features that make it different from most similar systems:\n+\n+- It is designed to be builder and host agnostic\n+\n+In theory, binaries for any target OS/architecture can be created, from a\n+builder running any OS/architecture. In practice, build-side tools must be\n+specified when the defaults don't fit, and packages must be ammended to work\n+on new hosts. For now, a build architecture of x86_64 is assumed, either on\n+Linux or OSX.\n+\n+- No reliance on timestamps\n+\n+File presence is used to determine what needs to be built. This makes the\n+results distributable and easily digestable by automated builders.\n+\n+- Each build only has its specified dependencies available at build-time.\n+\n+For each build, the sysroot is wiped and the (recursive) dependencies are\n+installed. This makes each build deterministic, since there will never be any\n+unknown files available to cause side-effects.\n+\n+- Each package is cached and only rebuilt as needed.\n+\n+Before building, a unique build-id is generated for each package. This id\n+consists of a hash of all files used to build the package (Makefiles, packages,\n+etc), and as well as a hash of the same data for each recursive dependency. If\n+any portion of a package's build recipe changes, it will be rebuilt as well as\n+any other package that depends on it. If any of the main makefiles (Makefile, \n+funcs.mk, etc) are changed, all packages will be rebuilt. After building, the\n+results are cached into a tarball that can be re-used and distributed.\n+\n+- Package build results are (relatively) deterministic.\n+\n+Each package is configured and patched so that it will yield the same\n+build-results with each consequent build, within a reasonable set of\n+constraints. Some things like timestamp insertion are unavoidable, and are\n+beyond the scope of this system. Additionally, the toolchain itself must be\n+capable of deterministic results. When revisions are properly bumped, a cached\n+build should represent an exact single payload.\n+\n+- Sources are fetched and verified automatically\n+\n+Each package must define its source location and checksum. The build will fail\n+if the fetched source does not match. Sources may be pre-seeded and/or cached\n+as desired.\n+\n+- Self-cleaning\n+\n+Build and staging dirs are wiped after use, and any previous version of a\n+cached result is removed following a successful build. Automated builders\n+should be able to build each revision and store the results with no further\n+intervention."
      },
      {
        "sha": "5ab7ed7dee0063888e4c042dc5946e363178b030",
        "filename": "depends/README.packages",
        "status": "added",
        "additions": 128,
        "deletions": 0,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/README.packages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/README.packages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.packages?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,128 @@\n+Each recipe consists of 3 main parts: defining identifiers, setting build\n+variables, and defining build commands.\n+\n+The package \"mylib\" will be used here as an example\n+\n+General tips:\n+mylib_foo is written as $(package)_foo in order to make recipes more similar.\n+\n+Identifiers:\n+Each package is required to define at least these variables:\n+  $(package)_version:\n+    Version of the upstream library or program. If there is no version, a\n+    placeholder such as 1.0 can be used.\n+  $(package)_download_path:\n+    Location of the upstream source, without the file-name. Usually http or\n+    ftp.\n+  $(package)_file_name:\n+    The upstream source filename available at the download path.\n+  $(package)_sha256_hash:\n+    The sha256 hash of the upstream file\n+\n+These variables are optional:\n+  $(package)_build_subdir:\n+    cd to this dir before running configure/build/stage commands.\n+  $(package)_download_file:\n+    The file-name of the upstream source if it differs from how it should be\n+    stored locally. This can be used to avoid storing file-names with strange\n+    characters.\n+  $(package)_dependencies:\n+    Names of any other packages that this one depends on.\n+  $(package)_patches:\n+    Filenames of any patches needed to build the package\n+\n+\n+Build Variables:\n+After defining the main identifiers, build variables may be added or customized\n+before running the build commands. They should be added to a function called\n+$(package)_set_vars. For example:\n+\n+define $(package)_set_vars\n+...\n+endef\n+\n+Most variables can be prefixed with the host, architecture, or both, to make\n+the modifications specific to that case. For example:\n+\n+  Universal:         $(package)_cc=gcc\n+  Linux only:        $(package)_linux_cc=gcc\n+  x86_64 only:       $(package)_x86_64_cc = gcc\n+  x86_64 linux only: $(package)_x86_64_linux_cc = gcc\n+\n+These variables may be set to override or append their default values.\n+  $(package)_cc\n+  $(package)_cxx\n+  $(package)_objc\n+  $(package)_objcxx\n+  $(package)_ar\n+  $(package)_ranlib\n+  $(package)_libtool\n+  $(package)_nm\n+  $(package)_cflags\n+  $(package)_cxxflags\n+  $(package)_ldflags\n+  $(package)_cppflags\n+  $(package)_config_env\n+  $(package)_build_env\n+  $(package)_stage_env\n+  $(package)_build_opts\n+  $(package)_config_opts\n+\n+The *_env variables are used to add environment variables to the respective\n+commands.\n+\n+Many variables respect a debug/release suffix as well, in order to use them for\n+only the appropriate build config. For example:\n+  $(package)_cflags_release = -O3\n+  $(package)_cflags_i686_debug = -g\n+  $(package)_config_opts_release = --disable-debug\n+\n+These will be used in addition to the options that do not specify\n+debug/release. All builds are considered to be release unless DEBUG=1 is set by\n+the user.\n+\n+Other variables may be defined as needed.\n+\n+Build commands:\n+\n+  For each build, a unique build dir and staging dir are created. For example,\n+  work/build/mylib/1.0-1adac830f6e and work/staging/mylib/1.0-1adac830f6e.\n+\n+  The following build commands are available for each recipe:\n+\n+  $(package)_fetch_cmds:\n+    Runs from: build dir\n+    Fetch the source file. If undefined, it will be fetched and verified\n+    against its hash.\n+  $(package)_extract_cmds:\n+    Runs from: build dir\n+    Verify the source file against its hash and extract it. If undefined, the\n+    source is assumed to be a tarball.\n+  $(package)_preprocess_cmds:\n+    Runs from: build dir/$(package)_build_subdir\n+    Preprocess the source as necessary. If undefined, does nothing.\n+  $(package)_config_cmds:\n+    Runs from: build dir/$(package)_build_subdir\n+    Configure the source. If undefined, does nothing.\n+  $(package)_build_cmds:\n+    Runs from: build dir/$(package)_build_subdir\n+    Build the source. If undefined, does nothing.\n+  $(package)_stage_cmds:\n+    Runs from: build dir/$(package)_build_subdir\n+    Stage the build results. If undefined, does nothing.\n+\n+  The following variables are available for each recipe:\n+  $(1)_staging_dir: package's destination sysroot path\n+  $(1)_staging_prefix_dir: prefix path inside of the package's staging dir\n+  $(1)_extract_dir: path to the package's extracted sources\n+  $(1)_build_dir: path where configure/build/stage commands will be run\n+  $(1)_patch_dir: path where the package's patches (if any) are found\n+\n+Notes on build commands:\n+\n+For packages built with autotools, $($(package)_autoconf) can be used in the\n+configure step to (usually) correctly configure automatically. Any\n+$($(package)_config_opts) will be appended.\n+\n+Most autotools projects can be properly staged using:\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install"
      },
      {
        "sha": "d3c57956f19e8ccc0dca629bb62a3ea4128f27d6",
        "filename": "depends/README.usage",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/README.usage",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/README.usage",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.usage?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,31 @@\n+To build dependencies for the current arch+OS:\n+    make\n+To build for another arch/OS:\n+  make HOST=host-platform-triplet && make HOST=host-platform-triplet\n+  (For example: make HOST=i686-w64-mingw32 -j4)\n+\n+A prefix will be generated that's suitable for plugging into Bitcoin's\n+configure. In the above example, a dir named i686-w64-mingw32 will be\n+created. To use it for Bitcoin:\n+\n+./configure --prefix=`pwd`/depends/i686-w64-mingw32\n+\n+No other options are needed, the paths are automatically configured.\n+\n+Dependency Options:\n+The following can be set when running make: make FOO=bar\n+\n+SOURCES_PATH: downloaded sources will be placed here\n+BASE_CACHE: built packages will be placed here\n+SDK_PATH: Path where sdk's can be found (used by OSX)\n+FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n+NO_QT: Don't download/build/cache qt and its dependencies\n+NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n+NO_UPNP: Don't download/build/cache packages needed for enabling upnp\n+DEBUG: disable some optimizations and enable more runtime checking\n+\n+If some packages are not built, for example 'make NO_WALLET=1', the appropriate\n+options will be passed to bitcoin's configure. In this case, --disable-wallet.\n+\n+Additional targets:\n+download: run 'make download' to fetch sources without building them"
      },
      {
        "sha": "b366460e64bc14e4971f5006e4cdfde7de3237a4",
        "filename": "depends/builders/darwin.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,22 @@\n+build_darwin_CC: = $(shell xcrun -f clang)\n+build_darwin_CXX: = $(shell xcrun -f clang++)\n+build_darwin_AR: = $(shell xcrun -f ar)\n+build_darwin_RANLIB: = $(shell xcrun -f ranlib)\n+build_darwin_STRIP: = $(shell xcrun -f strip)\n+build_darwin_OTOOL: = $(shell xcrun -f otool)\n+build_darwin_NM: = $(shell xcrun -f nm)\n+build_darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n+build_darwin_SHA256SUM = shasum -a 256\n+build_darwin_DOWNLOAD = curl --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -L -o\n+\n+#darwin host on darwin builder. overrides darwin host preferences.\n+darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION)\n+darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION)\n+darwin_AR:=$(shell xcrun -f ar)\n+darwin_RANLIB:=$(shell xcrun -f ranlib)\n+darwin_STRIP:=$(shell xcrun -f strip)\n+darwin_LIBTOOL:=$(shell xcrun -f libtool)\n+darwin_OTOOL:=$(shell xcrun -f otool)\n+darwin_NM:=$(shell xcrun -f nm)\n+darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n+darwin_native_toolchain="
      },
      {
        "sha": "f097db65d603d596c5ceabeadfe32fa3a296a91d",
        "filename": "depends/builders/default.mk",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/builders/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/builders/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/default.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,20 @@\n+default_build_CC = gcc\n+default_build_CXX = g++\n+default_build_AR = ar\n+default_build_RANLIB = ranlib\n+default_build_STRIP = strip\n+default_build_NM = nm\n+default_build_OTOOL = otool\n+default_build_INSTALL_NAME_TOOL = install_name_tool\n+\n+define add_build_tool_func\n+build_$(build_os)_$1 ?= $$(default_build_$1)\n+build_$(build_arch)_$(build_os)_$1 ?= $$(build_$(build_os)_$1)\n+build_$1=$$(build_$(build_arch)_$(build_os)_$1)\n+endef\n+$(foreach var,CC CXX AR RANLIB NM STRIP SHA256SUM DOWNLOAD OTOOL INSTALL_NAME_TOOL,$(eval $(call add_build_tool_func,$(var))))\n+define add_build_flags_func\n+build_$(build_arch)_$(build_os)_$1 += $(build_$(build_os)_$1)\n+build_$1=$$(build_$(build_arch)_$(build_os)_$1)\n+endef\n+$(foreach flags, CFLAGS CXXFLAGS LDFLAGS, $(eval $(call add_build_flags_func,$(flags))))"
      },
      {
        "sha": "98d0e9de348fc860dbfb215c60f9d419d0f15005",
        "filename": "depends/builders/linux.mk",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/builders/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/builders/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/linux.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,2 @@\n+build_linux_SHA256SUM = sha256sum\n+build_linux_DOWNLOAD = wget --timeout=$(DOWNLOAD_CONNECT_TIMEOUT) --tries=$(DOWNLOAD_RETRIES) -nv -O"
      },
      {
        "sha": "1f5c50c0d1529d50b94dc3533ca72a47f0fa5849",
        "filename": "depends/config.guess",
        "status": "added",
        "additions": 1420,
        "deletions": 0,
        "changes": 1420,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,1420 @@\n+#! /bin/sh\n+# Attempt to guess a canonical system name.\n+#   Copyright 1992-2014 Free Software Foundation, Inc.\n+\n+timestamp='2014-03-23'\n+\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, see <http://www.gnu.org/licenses/>.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that\n+# program.  This Exception is an additional permission under section 7\n+# of the GNU General Public License, version 3 (\"GPLv3\").\n+#\n+# Originally written by Per Bothner.\n+#\n+# You can get the latest version of this script from:\n+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\n+#\n+# Please send patches with a ChangeLog entry to config-patches@gnu.org.\n+\n+\n+me=`echo \"$0\" | sed -e 's,.*/,,'`\n+\n+usage=\"\\\n+Usage: $0 [OPTION]\n+\n+Output the configuration name of the system \\`$me' is run on.\n+\n+Operation modes:\n+  -h, --help         print this help, then exit\n+  -t, --time-stamp   print date of last modification, then exit\n+  -v, --version      print version number, then exit\n+\n+Report bugs and patches to <config-patches@gnu.org>.\"\n+\n+version=\"\\\n+GNU config.guess ($timestamp)\n+\n+Originally written by Per Bothner.\n+Copyright 1992-2014 Free Software Foundation, Inc.\n+\n+This is free software; see the source for copying conditions.  There is NO\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n+\n+help=\"\n+Try \\`$me --help' for more information.\"\n+\n+# Parse command line\n+while test $# -gt 0 ; do\n+  case $1 in\n+    --time-stamp | --time* | -t )\n+       echo \"$timestamp\" ; exit ;;\n+    --version | -v )\n+       echo \"$version\" ; exit ;;\n+    --help | --h* | -h )\n+       echo \"$usage\"; exit ;;\n+    -- )     # Stop option processing\n+       shift; break ;;\n+    - )\t# Use stdin as input.\n+       break ;;\n+    -* )\n+       echo \"$me: invalid option $1$help\" >&2\n+       exit 1 ;;\n+    * )\n+       break ;;\n+  esac\n+done\n+\n+if test $# != 0; then\n+  echo \"$me: too many arguments$help\" >&2\n+  exit 1\n+fi\n+\n+trap 'exit 1' 1 2 15\n+\n+# CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n+# compiler to aid in system detection is discouraged as it requires\n+# temporary files to be created and, as you can see below, it is a\n+# headache to deal with in a portable fashion.\n+\n+# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still\n+# use `HOST_CC' if defined, but it is deprecated.\n+\n+# Portable tmp directory creation inspired by the Autoconf team.\n+\n+set_cc_for_build='\n+trap \"exitcode=\\$?; (rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null) && exit \\$exitcode\" 0 ;\n+trap \"rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null; exit 1\" 1 2 13 15 ;\n+: ${TMPDIR=/tmp} ;\n+ { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n+ { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||\n+ { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n+ { echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; } ;\n+dummy=$tmp/dummy ;\n+tmpfiles=\"$dummy.c $dummy.o $dummy.rel $dummy\" ;\n+case $CC_FOR_BUILD,$HOST_CC,$CC in\n+ ,,)    echo \"int x;\" > $dummy.c ;\n+\tfor c in cc gcc c89 c99 ; do\n+\t  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then\n+\t     CC_FOR_BUILD=\"$c\"; break ;\n+\t  fi ;\n+\tdone ;\n+\tif test x\"$CC_FOR_BUILD\" = x ; then\n+\t  CC_FOR_BUILD=no_compiler_found ;\n+\tfi\n+\t;;\n+ ,,*)   CC_FOR_BUILD=$CC ;;\n+ ,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n+esac ; set_cc_for_build= ;'\n+\n+# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n+# (ghazi@noc.rutgers.edu 1994-08-24)\n+if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n+\tPATH=$PATH:/.attbin ; export PATH\n+fi\n+\n+UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\n+UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n+UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\n+UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n+\n+case \"${UNAME_SYSTEM}\" in\n+Linux|GNU|GNU/*)\n+\t# If the system lacks a compiler, then just pick glibc.\n+\t# We could probably try harder.\n+\tLIBC=gnu\n+\n+\teval $set_cc_for_build\n+\tcat <<-EOF > $dummy.c\n+\t#include <features.h>\n+\t#if defined(__UCLIBC__)\n+\tLIBC=uclibc\n+\t#elif defined(__dietlibc__)\n+\tLIBC=dietlibc\n+\t#else\n+\tLIBC=gnu\n+\t#endif\n+\tEOF\n+\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n+\t;;\n+esac\n+\n+# Note: order is significant - the case branches are not exclusive.\n+\n+case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n+    *:NetBSD:*:*)\n+\t# NetBSD (nbsd) targets should (where applicable) match one or\n+\t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n+\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n+\t# switched to ELF, *-*-netbsd* would select the old\n+\t# object file format.  This provides both forward\n+\t# compatibility and a consistent mechanism for selecting the\n+\t# object file format.\n+\t#\n+\t# Note: NetBSD doesn't particularly care about the vendor\n+\t# portion of the name.  We always set it to \"unknown\".\n+\tsysctl=\"sysctl -n hw.machine_arch\"\n+\tUNAME_MACHINE_ARCH=`(/sbin/$sysctl 2>/dev/null || \\\n+\t    /usr/sbin/$sysctl 2>/dev/null || echo unknown)`\n+\tcase \"${UNAME_MACHINE_ARCH}\" in\n+\t    armeb) machine=armeb-unknown ;;\n+\t    arm*) machine=arm-unknown ;;\n+\t    sh3el) machine=shl-unknown ;;\n+\t    sh3eb) machine=sh-unknown ;;\n+\t    sh5el) machine=sh5le-unknown ;;\n+\t    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;\n+\tesac\n+\t# The Operating System including object format, if it has switched\n+\t# to ELF recently, or will in the future.\n+\tcase \"${UNAME_MACHINE_ARCH}\" in\n+\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n+\t\teval $set_cc_for_build\n+\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t\t\t| grep -q __ELF__\n+\t\tthen\n+\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n+\t\t    # Return netbsd for either.  FIX?\n+\t\t    os=netbsd\n+\t\telse\n+\t\t    os=netbsdelf\n+\t\tfi\n+\t\t;;\n+\t    *)\n+\t\tos=netbsd\n+\t\t;;\n+\tesac\n+\t# The OS release\n+\t# Debian GNU/NetBSD machines have a different userland, and\n+\t# thus, need a distinct triplet. However, they do not need\n+\t# kernel version information, so it can be replaced with a\n+\t# suitable tag, in the style of linux-gnu.\n+\tcase \"${UNAME_VERSION}\" in\n+\t    Debian*)\n+\t\trelease='-gnu'\n+\t\t;;\n+\t    *)\n+\t\trelease=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n+\t\t;;\n+\tesac\n+\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n+\t# contains redundant information, the shorter form:\n+\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n+\techo \"${machine}-${os}${release}\"\n+\texit ;;\n+    *:Bitrig:*:*)\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n+\techo ${UNAME_MACHINE_ARCH}-unknown-bitrig${UNAME_RELEASE}\n+\texit ;;\n+    *:OpenBSD:*:*)\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n+\techo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}\n+\texit ;;\n+    *:ekkoBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}\n+\texit ;;\n+    *:SolidBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}\n+\texit ;;\n+    macppc:MirBSD:*:*)\n+\techo powerpc-unknown-mirbsd${UNAME_RELEASE}\n+\texit ;;\n+    *:MirBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}\n+\texit ;;\n+    alpha:OSF1:*:*)\n+\tcase $UNAME_RELEASE in\n+\t*4.0)\n+\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n+\t\t;;\n+\t*5.*)\n+\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n+\t\t;;\n+\tesac\n+\t# According to Compaq, /usr/sbin/psrinfo has been available on\n+\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n+\t# covers most systems running today.  This code pipes the CPU\n+\t# types through head -n 1, so we only detect the type of CPU 0.\n+\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n+\tcase \"$ALPHA_CPU_TYPE\" in\n+\t    \"EV4 (21064)\")\n+\t\tUNAME_MACHINE=\"alpha\" ;;\n+\t    \"EV4.5 (21064)\")\n+\t\tUNAME_MACHINE=\"alpha\" ;;\n+\t    \"LCA4 (21066/21068)\")\n+\t\tUNAME_MACHINE=\"alpha\" ;;\n+\t    \"EV5 (21164)\")\n+\t\tUNAME_MACHINE=\"alphaev5\" ;;\n+\t    \"EV5.6 (21164A)\")\n+\t\tUNAME_MACHINE=\"alphaev56\" ;;\n+\t    \"EV5.6 (21164PC)\")\n+\t\tUNAME_MACHINE=\"alphapca56\" ;;\n+\t    \"EV5.7 (21164PC)\")\n+\t\tUNAME_MACHINE=\"alphapca57\" ;;\n+\t    \"EV6 (21264)\")\n+\t\tUNAME_MACHINE=\"alphaev6\" ;;\n+\t    \"EV6.7 (21264A)\")\n+\t\tUNAME_MACHINE=\"alphaev67\" ;;\n+\t    \"EV6.8CB (21264C)\")\n+\t\tUNAME_MACHINE=\"alphaev68\" ;;\n+\t    \"EV6.8AL (21264B)\")\n+\t\tUNAME_MACHINE=\"alphaev68\" ;;\n+\t    \"EV6.8CX (21264D)\")\n+\t\tUNAME_MACHINE=\"alphaev68\" ;;\n+\t    \"EV6.9A (21264/EV69A)\")\n+\t\tUNAME_MACHINE=\"alphaev69\" ;;\n+\t    \"EV7 (21364)\")\n+\t\tUNAME_MACHINE=\"alphaev7\" ;;\n+\t    \"EV7.9 (21364A)\")\n+\t\tUNAME_MACHINE=\"alphaev79\" ;;\n+\tesac\n+\t# A Pn.n version is a patched version.\n+\t# A Vn.n version is a released version.\n+\t# A Tn.n version is a released field test version.\n+\t# A Xn.n version is an unreleased experimental baselevel.\n+\t# 1.2 uses \"1.2\" for uname -r.\n+\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n+\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n+\texitcode=$?\n+\ttrap '' 0\n+\texit $exitcode ;;\n+    Alpha\\ *:Windows_NT*:*)\n+\t# How do we know it's Interix rather than the generic POSIX subsystem?\n+\t# Should we change UNAME_MACHINE based on the output of uname instead\n+\t# of the specific Alpha model?\n+\techo alpha-pc-interix\n+\texit ;;\n+    21064:Windows_NT:50:3)\n+\techo alpha-dec-winnt3.5\n+\texit ;;\n+    Amiga*:UNIX_System_V:4.0:*)\n+\techo m68k-unknown-sysv4\n+\texit ;;\n+    *:[Aa]miga[Oo][Ss]:*:*)\n+\techo ${UNAME_MACHINE}-unknown-amigaos\n+\texit ;;\n+    *:[Mm]orph[Oo][Ss]:*:*)\n+\techo ${UNAME_MACHINE}-unknown-morphos\n+\texit ;;\n+    *:OS/390:*:*)\n+\techo i370-ibm-openedition\n+\texit ;;\n+    *:z/VM:*:*)\n+\techo s390-ibm-zvmoe\n+\texit ;;\n+    *:OS400:*:*)\n+\techo powerpc-ibm-os400\n+\texit ;;\n+    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n+\techo arm-acorn-riscix${UNAME_RELEASE}\n+\texit ;;\n+    arm*:riscos:*:*|arm*:RISCOS:*:*)\n+\techo arm-unknown-riscos\n+\texit ;;\n+    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n+\techo hppa1.1-hitachi-hiuxmpp\n+\texit ;;\n+    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n+\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n+\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n+\t\techo pyramid-pyramid-sysv3\n+\telse\n+\t\techo pyramid-pyramid-bsd\n+\tfi\n+\texit ;;\n+    NILE*:*:*:dcosx)\n+\techo pyramid-pyramid-svr4\n+\texit ;;\n+    DRS?6000:unix:4.0:6*)\n+\techo sparc-icl-nx6\n+\texit ;;\n+    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n+\tcase `/usr/bin/uname -p` in\n+\t    sparc) echo sparc-icl-nx7; exit ;;\n+\tesac ;;\n+    s390x:SunOS:*:*)\n+\techo ${UNAME_MACHINE}-ibm-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    sun4H:SunOS:5.*:*)\n+\techo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n+\techo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n+\techo i386-pc-auroraux${UNAME_RELEASE}\n+\texit ;;\n+    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n+\teval $set_cc_for_build\n+\tSUN_ARCH=\"i386\"\n+\t# If there is a compiler, see if it is configured for 64-bit objects.\n+\t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n+\t# This test works for both compilers.\n+\tif [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n+\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\tgrep IS_64BIT_ARCH >/dev/null\n+\t    then\n+\t\tSUN_ARCH=\"x86_64\"\n+\t    fi\n+\tfi\n+\techo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    sun4*:SunOS:6*:*)\n+\t# According to config.sub, this is the proper way to canonicalize\n+\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n+\t# it's likely to be more like Solaris than SunOS4.\n+\techo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    sun4*:SunOS:*:*)\n+\tcase \"`/usr/bin/arch -k`\" in\n+\t    Series*|S4*)\n+\t\tUNAME_RELEASE=`uname -v`\n+\t\t;;\n+\tesac\n+\t# Japanese Language versions have a version number like `4.1.3-JL'.\n+\techo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`\n+\texit ;;\n+    sun3*:SunOS:*:*)\n+\techo m68k-sun-sunos${UNAME_RELEASE}\n+\texit ;;\n+    sun*:*:4.2BSD:*)\n+\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n+\ttest \"x${UNAME_RELEASE}\" = \"x\" && UNAME_RELEASE=3\n+\tcase \"`/bin/arch`\" in\n+\t    sun3)\n+\t\techo m68k-sun-sunos${UNAME_RELEASE}\n+\t\t;;\n+\t    sun4)\n+\t\techo sparc-sun-sunos${UNAME_RELEASE}\n+\t\t;;\n+\tesac\n+\texit ;;\n+    aushp:SunOS:*:*)\n+\techo sparc-auspex-sunos${UNAME_RELEASE}\n+\texit ;;\n+    # The situation for MiNT is a little confusing.  The machine name\n+    # can be virtually everything (everything which is not\n+    # \"atarist\" or \"atariste\" at least should have a processor\n+    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n+    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n+    # the system name \"TOS\" denotes a system which is actually not\n+    # MiNT.  But MiNT is downward compatible to TOS, so this should\n+    # be no problem.\n+    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n+\techo m68k-atari-mint${UNAME_RELEASE}\n+\texit ;;\n+    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n+\techo m68k-atari-mint${UNAME_RELEASE}\n+\texit ;;\n+    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n+\techo m68k-atari-mint${UNAME_RELEASE}\n+\texit ;;\n+    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n+\techo m68k-milan-mint${UNAME_RELEASE}\n+\texit ;;\n+    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n+\techo m68k-hades-mint${UNAME_RELEASE}\n+\texit ;;\n+    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n+\techo m68k-unknown-mint${UNAME_RELEASE}\n+\texit ;;\n+    m68k:machten:*:*)\n+\techo m68k-apple-machten${UNAME_RELEASE}\n+\texit ;;\n+    powerpc:machten:*:*)\n+\techo powerpc-apple-machten${UNAME_RELEASE}\n+\texit ;;\n+    RISC*:Mach:*:*)\n+\techo mips-dec-mach_bsd4.3\n+\texit ;;\n+    RISC*:ULTRIX:*:*)\n+\techo mips-dec-ultrix${UNAME_RELEASE}\n+\texit ;;\n+    VAX*:ULTRIX*:*:*)\n+\techo vax-dec-ultrix${UNAME_RELEASE}\n+\texit ;;\n+    2020:CLIX:*:* | 2430:CLIX:*:*)\n+\techo clipper-intergraph-clix${UNAME_RELEASE}\n+\texit ;;\n+    mips:*:*:UMIPS | mips:*:*:RISCos)\n+\teval $set_cc_for_build\n+\tsed 's/^\t//' << EOF >$dummy.c\n+#ifdef __cplusplus\n+#include <stdio.h>  /* for printf() prototype */\n+\tint main (int argc, char *argv[]) {\n+#else\n+\tint main (argc, argv) int argc; char *argv[]; {\n+#endif\n+\t#if defined (host_mips) && defined (MIPSEB)\n+\t#if defined (SYSTYPE_SYSV)\n+\t  printf (\"mips-mips-riscos%ssysv\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#if defined (SYSTYPE_SVR4)\n+\t  printf (\"mips-mips-riscos%ssvr4\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n+\t  printf (\"mips-mips-riscos%sbsd\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#endif\n+\t  exit (-1);\n+\t}\n+EOF\n+\t$CC_FOR_BUILD -o $dummy $dummy.c &&\n+\t  dummyarg=`echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n+\t  SYSTEM_NAME=`$dummy $dummyarg` &&\n+\t    { echo \"$SYSTEM_NAME\"; exit; }\n+\techo mips-mips-riscos${UNAME_RELEASE}\n+\texit ;;\n+    Motorola:PowerMAX_OS:*:*)\n+\techo powerpc-motorola-powermax\n+\texit ;;\n+    Motorola:*:4.3:PL8-*)\n+\techo powerpc-harris-powermax\n+\texit ;;\n+    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)\n+\techo powerpc-harris-powermax\n+\texit ;;\n+    Night_Hawk:Power_UNIX:*:*)\n+\techo powerpc-harris-powerunix\n+\texit ;;\n+    m88k:CX/UX:7*:*)\n+\techo m88k-harris-cxux7\n+\texit ;;\n+    m88k:*:4*:R4*)\n+\techo m88k-motorola-sysv4\n+\texit ;;\n+    m88k:*:3*:R3*)\n+\techo m88k-motorola-sysv3\n+\texit ;;\n+    AViiON:dgux:*:*)\n+\t# DG/UX returns AViiON for all architectures\n+\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n+\tif [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]\n+\tthen\n+\t    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \\\n+\t       [ ${TARGET_BINARY_INTERFACE}x = x ]\n+\t    then\n+\t\techo m88k-dg-dgux${UNAME_RELEASE}\n+\t    else\n+\t\techo m88k-dg-dguxbcs${UNAME_RELEASE}\n+\t    fi\n+\telse\n+\t    echo i586-dg-dgux${UNAME_RELEASE}\n+\tfi\n+\texit ;;\n+    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n+\techo m88k-dolphin-sysv3\n+\texit ;;\n+    M88*:*:R3*:*)\n+\t# Delta 88k system running SVR3\n+\techo m88k-motorola-sysv3\n+\texit ;;\n+    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n+\techo m88k-tektronix-sysv3\n+\texit ;;\n+    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n+\techo m68k-tektronix-bsd\n+\texit ;;\n+    *:IRIX*:*:*)\n+\techo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`\n+\texit ;;\n+    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n+\techo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id\n+\texit ;;               # Note that: echo \"'`uname -s`'\" gives 'AIX '\n+    i*86:AIX:*:*)\n+\techo i386-ibm-aix\n+\texit ;;\n+    ia64:AIX:*:*)\n+\tif [ -x /usr/bin/oslevel ] ; then\n+\t\tIBM_REV=`/usr/bin/oslevel`\n+\telse\n+\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n+\tfi\n+\techo ${UNAME_MACHINE}-ibm-aix${IBM_REV}\n+\texit ;;\n+    *:AIX:2:3)\n+\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\teval $set_cc_for_build\n+\t\tsed 's/^\t\t//' << EOF >$dummy.c\n+\t\t#include <sys/systemcfg.h>\n+\n+\t\tmain()\n+\t\t\t{\n+\t\t\tif (!__power_pc())\n+\t\t\t\texit(1);\n+\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n+\t\t\texit(0);\n+\t\t\t}\n+EOF\n+\t\tif $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`\n+\t\tthen\n+\t\t\techo \"$SYSTEM_NAME\"\n+\t\telse\n+\t\t\techo rs6000-ibm-aix3.2.5\n+\t\tfi\n+\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\techo rs6000-ibm-aix3.2.4\n+\telse\n+\t\techo rs6000-ibm-aix3.2\n+\tfi\n+\texit ;;\n+    *:AIX:*:[4567])\n+\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n+\tif /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then\n+\t\tIBM_ARCH=rs6000\n+\telse\n+\t\tIBM_ARCH=powerpc\n+\tfi\n+\tif [ -x /usr/bin/oslevel ] ; then\n+\t\tIBM_REV=`/usr/bin/oslevel`\n+\telse\n+\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n+\tfi\n+\techo ${IBM_ARCH}-ibm-aix${IBM_REV}\n+\texit ;;\n+    *:AIX:*:*)\n+\techo rs6000-ibm-aix\n+\texit ;;\n+    ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n+\techo romp-ibm-bsd4.4\n+\texit ;;\n+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n+\techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n+\texit ;;                             # report: romp-ibm BSD 4.3\n+    *:BOSX:*:*)\n+\techo rs6000-bull-bosx\n+\texit ;;\n+    DPX/2?00:B.O.S.:*:*)\n+\techo m68k-bull-sysv3\n+\texit ;;\n+    9000/[34]??:4.3bsd:1.*:*)\n+\techo m68k-hp-bsd\n+\texit ;;\n+    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n+\techo m68k-hp-bsd4.4\n+\texit ;;\n+    9000/[34678]??:HP-UX:*:*)\n+\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n+\tcase \"${UNAME_MACHINE}\" in\n+\t    9000/31? )            HP_ARCH=m68000 ;;\n+\t    9000/[34]?? )         HP_ARCH=m68k ;;\n+\t    9000/[678][0-9][0-9])\n+\t\tif [ -x /usr/bin/getconf ]; then\n+\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n+\t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n+\t\t    case \"${sc_cpu_version}\" in\n+\t\t      523) HP_ARCH=\"hppa1.0\" ;; # CPU_PA_RISC1_0\n+\t\t      528) HP_ARCH=\"hppa1.1\" ;; # CPU_PA_RISC1_1\n+\t\t      532)                      # CPU_PA_RISC2_0\n+\t\t\tcase \"${sc_kernel_bits}\" in\n+\t\t\t  32) HP_ARCH=\"hppa2.0n\" ;;\n+\t\t\t  64) HP_ARCH=\"hppa2.0w\" ;;\n+\t\t\t  '') HP_ARCH=\"hppa2.0\" ;;   # HP-UX 10.20\n+\t\t\tesac ;;\n+\t\t    esac\n+\t\tfi\n+\t\tif [ \"${HP_ARCH}\" = \"\" ]; then\n+\t\t    eval $set_cc_for_build\n+\t\t    sed 's/^\t\t//' << EOF >$dummy.c\n+\n+\t\t#define _HPUX_SOURCE\n+\t\t#include <stdlib.h>\n+\t\t#include <unistd.h>\n+\n+\t\tint main ()\n+\t\t{\n+\t\t#if defined(_SC_KERNEL_BITS)\n+\t\t    long bits = sysconf(_SC_KERNEL_BITS);\n+\t\t#endif\n+\t\t    long cpu  = sysconf (_SC_CPU_VERSION);\n+\n+\t\t    switch (cpu)\n+\t\t\t{\n+\t\t\tcase CPU_PA_RISC1_0: puts (\"hppa1.0\"); break;\n+\t\t\tcase CPU_PA_RISC1_1: puts (\"hppa1.1\"); break;\n+\t\t\tcase CPU_PA_RISC2_0:\n+\t\t#if defined(_SC_KERNEL_BITS)\n+\t\t\t    switch (bits)\n+\t\t\t\t{\n+\t\t\t\tcase 64: puts (\"hppa2.0w\"); break;\n+\t\t\t\tcase 32: puts (\"hppa2.0n\"); break;\n+\t\t\t\tdefault: puts (\"hppa2.0\"); break;\n+\t\t\t\t} break;\n+\t\t#else  /* !defined(_SC_KERNEL_BITS) */\n+\t\t\t    puts (\"hppa2.0\"); break;\n+\t\t#endif\n+\t\t\tdefault: puts (\"hppa1.0\"); break;\n+\t\t\t}\n+\t\t    exit (0);\n+\t\t}\n+EOF\n+\t\t    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`\n+\t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n+\t\tfi ;;\n+\tesac\n+\tif [ ${HP_ARCH} = \"hppa2.0w\" ]\n+\tthen\n+\t    eval $set_cc_for_build\n+\n+\t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n+\t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n+\t    # generating 64-bit code.  GNU and HP use different nomenclature:\n+\t    #\n+\t    # $ CC_FOR_BUILD=cc ./config.guess\n+\t    # => hppa2.0w-hp-hpux11.23\n+\t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n+\t    # => hppa64-hp-hpux11.23\n+\n+\t    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |\n+\t\tgrep -q __LP64__\n+\t    then\n+\t\tHP_ARCH=\"hppa2.0w\"\n+\t    else\n+\t\tHP_ARCH=\"hppa64\"\n+\t    fi\n+\tfi\n+\techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n+\texit ;;\n+    ia64:HP-UX:*:*)\n+\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n+\techo ia64-hp-hpux${HPUX_REV}\n+\texit ;;\n+    3050*:HI-UX:*:*)\n+\teval $set_cc_for_build\n+\tsed 's/^\t//' << EOF >$dummy.c\n+\t#include <unistd.h>\n+\tint\n+\tmain ()\n+\t{\n+\t  long cpu = sysconf (_SC_CPU_VERSION);\n+\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n+\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n+\t     results, however.  */\n+\t  if (CPU_IS_PA_RISC (cpu))\n+\t    {\n+\t      switch (cpu)\n+\t\t{\n+\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n+\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n+\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n+\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n+\t\t}\n+\t    }\n+\t  else if (CPU_IS_HP_MC68K (cpu))\n+\t    puts (\"m68k-hitachi-hiuxwe2\");\n+\t  else puts (\"unknown-hitachi-hiuxwe2\");\n+\t  exit (0);\n+\t}\n+EOF\n+\t$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&\n+\t\t{ echo \"$SYSTEM_NAME\"; exit; }\n+\techo unknown-hitachi-hiuxwe2\n+\texit ;;\n+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )\n+\techo hppa1.1-hp-bsd\n+\texit ;;\n+    9000/8??:4.3bsd:*:*)\n+\techo hppa1.0-hp-bsd\n+\texit ;;\n+    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n+\techo hppa1.0-hp-mpeix\n+\texit ;;\n+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n+\techo hppa1.1-hp-osf\n+\texit ;;\n+    hp8??:OSF1:*:*)\n+\techo hppa1.0-hp-osf\n+\texit ;;\n+    i*86:OSF1:*:*)\n+\tif [ -x /usr/sbin/sysversion ] ; then\n+\t    echo ${UNAME_MACHINE}-unknown-osf1mk\n+\telse\n+\t    echo ${UNAME_MACHINE}-unknown-osf1\n+\tfi\n+\texit ;;\n+    parisc*:Lites*:*:*)\n+\techo hppa1.1-hp-lites\n+\texit ;;\n+    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n+\techo c1-convex-bsd\n+\texit ;;\n+    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n+\tif getsysinfo -f scalar_acc\n+\tthen echo c32-convex-bsd\n+\telse echo c2-convex-bsd\n+\tfi\n+\texit ;;\n+    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n+\techo c34-convex-bsd\n+\texit ;;\n+    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n+\techo c38-convex-bsd\n+\texit ;;\n+    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n+\techo c4-convex-bsd\n+\texit ;;\n+    CRAY*Y-MP:*:*:*)\n+\techo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*[A-Z]90:*:*:*)\n+\techo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \\\n+\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n+\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n+\t      -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*TS:*:*:*)\n+\techo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*T3E:*:*:*)\n+\techo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*SV1:*:*:*)\n+\techo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    *:UNICOS/mp:*:*)\n+\techo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n+\tFUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n+\tFUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n+\tFUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n+\techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n+\texit ;;\n+    5000:UNIX_System_V:4.*:*)\n+\tFUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n+\tFUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`\n+\techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n+\texit ;;\n+    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n+\techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n+\texit ;;\n+    sparc*:BSD/OS:*:*)\n+\techo sparc-unknown-bsdi${UNAME_RELEASE}\n+\texit ;;\n+    *:BSD/OS:*:*)\n+\techo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}\n+\texit ;;\n+    *:FreeBSD:*:*)\n+\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n+\tcase ${UNAME_PROCESSOR} in\n+\t    amd64)\n+\t\techo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n+\t    *)\n+\t\techo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n+\tesac\n+\texit ;;\n+    i*:CYGWIN*:*)\n+\techo ${UNAME_MACHINE}-pc-cygwin\n+\texit ;;\n+    *:MINGW64*:*)\n+\techo ${UNAME_MACHINE}-pc-mingw64\n+\texit ;;\n+    *:MINGW*:*)\n+\techo ${UNAME_MACHINE}-pc-mingw32\n+\texit ;;\n+    *:MSYS*:*)\n+\techo ${UNAME_MACHINE}-pc-msys\n+\texit ;;\n+    i*:windows32*:*)\n+\t# uname -m includes \"-pc\" on this system.\n+\techo ${UNAME_MACHINE}-mingw32\n+\texit ;;\n+    i*:PW*:*)\n+\techo ${UNAME_MACHINE}-pc-pw32\n+\texit ;;\n+    *:Interix*:*)\n+\tcase ${UNAME_MACHINE} in\n+\t    x86)\n+\t\techo i586-pc-interix${UNAME_RELEASE}\n+\t\texit ;;\n+\t    authenticamd | genuineintel | EM64T)\n+\t\techo x86_64-unknown-interix${UNAME_RELEASE}\n+\t\texit ;;\n+\t    IA64)\n+\t\techo ia64-unknown-interix${UNAME_RELEASE}\n+\t\texit ;;\n+\tesac ;;\n+    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)\n+\techo i${UNAME_MACHINE}-pc-mks\n+\texit ;;\n+    8664:Windows_NT:*)\n+\techo x86_64-pc-mks\n+\texit ;;\n+    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)\n+\t# How do we know it's Interix rather than the generic POSIX subsystem?\n+\t# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we\n+\t# UNAME_MACHINE based on the output of uname instead of i386?\n+\techo i586-pc-interix\n+\texit ;;\n+    i*:UWIN*:*)\n+\techo ${UNAME_MACHINE}-pc-uwin\n+\texit ;;\n+    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n+\techo x86_64-unknown-cygwin\n+\texit ;;\n+    p*:CYGWIN*:*)\n+\techo powerpcle-unknown-cygwin\n+\texit ;;\n+    prep*:SunOS:5.*:*)\n+\techo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    *:GNU:*:*)\n+\t# the GNU system\n+\techo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-${LIBC}`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n+\texit ;;\n+    *:GNU/*:*:*)\n+\t# other systems with GNU libc and userland\n+\techo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}\n+\texit ;;\n+    i*86:Minix:*:*)\n+\techo ${UNAME_MACHINE}-pc-minix\n+\texit ;;\n+    aarch64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    aarch64_be:Linux:*:*)\n+\tUNAME_MACHINE=aarch64_be\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    alpha:Linux:*:*)\n+\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' < /proc/cpuinfo` in\n+\t  EV5)   UNAME_MACHINE=alphaev5 ;;\n+\t  EV56)  UNAME_MACHINE=alphaev56 ;;\n+\t  PCA56) UNAME_MACHINE=alphapca56 ;;\n+\t  PCA57) UNAME_MACHINE=alphapca56 ;;\n+\t  EV6)   UNAME_MACHINE=alphaev6 ;;\n+\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n+\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n+\tesac\n+\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n+\tif test \"$?\" = 0 ; then LIBC=\"gnulibc1\" ; fi\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    arc:Linux:*:* | arceb:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    arm*:Linux:*:*)\n+\teval $set_cc_for_build\n+\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t    | grep -q __ARM_EABI__\n+\tthen\n+\t    echo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\telse\n+\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t\t| grep -q __ARM_PCS_VFP\n+\t    then\n+\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabi\n+\t    else\n+\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabihf\n+\t    fi\n+\tfi\n+\texit ;;\n+    avr32*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    cris:Linux:*:*)\n+\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n+\texit ;;\n+    crisv32:Linux:*:*)\n+\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n+\texit ;;\n+    frv:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    hexagon:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    i*86:Linux:*:*)\n+\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n+\texit ;;\n+    ia64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    m32r*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    m68*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    mips:Linux:*:* | mips64:Linux:*:*)\n+\teval $set_cc_for_build\n+\tsed 's/^\t//' << EOF >$dummy.c\n+\t#undef CPU\n+\t#undef ${UNAME_MACHINE}\n+\t#undef ${UNAME_MACHINE}el\n+\t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n+\tCPU=${UNAME_MACHINE}el\n+\t#else\n+\t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n+\tCPU=${UNAME_MACHINE}\n+\t#else\n+\tCPU=\n+\t#endif\n+\t#endif\n+EOF\n+\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`\n+\ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-${LIBC}\"; exit; }\n+\t;;\n+    openrisc*:Linux:*:*)\n+\techo or1k-unknown-linux-${LIBC}\n+\texit ;;\n+    or32:Linux:*:* | or1k*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    padre:Linux:*:*)\n+\techo sparc-unknown-linux-${LIBC}\n+\texit ;;\n+    parisc64:Linux:*:* | hppa64:Linux:*:*)\n+\techo hppa64-unknown-linux-${LIBC}\n+\texit ;;\n+    parisc:Linux:*:* | hppa:Linux:*:*)\n+\t# Look for CPU level\n+\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n+\t  PA7*) echo hppa1.1-unknown-linux-${LIBC} ;;\n+\t  PA8*) echo hppa2.0-unknown-linux-${LIBC} ;;\n+\t  *)    echo hppa-unknown-linux-${LIBC} ;;\n+\tesac\n+\texit ;;\n+    ppc64:Linux:*:*)\n+\techo powerpc64-unknown-linux-${LIBC}\n+\texit ;;\n+    ppc:Linux:*:*)\n+\techo powerpc-unknown-linux-${LIBC}\n+\texit ;;\n+    ppc64le:Linux:*:*)\n+\techo powerpc64le-unknown-linux-${LIBC}\n+\texit ;;\n+    ppcle:Linux:*:*)\n+\techo powerpcle-unknown-linux-${LIBC}\n+\texit ;;\n+    s390:Linux:*:* | s390x:Linux:*:*)\n+\techo ${UNAME_MACHINE}-ibm-linux-${LIBC}\n+\texit ;;\n+    sh64*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    sh*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    sparc:Linux:*:* | sparc64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    tile*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    vax:Linux:*:*)\n+\techo ${UNAME_MACHINE}-dec-linux-${LIBC}\n+\texit ;;\n+    x86_64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    xtensa*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    i*86:DYNIX/ptx:4*:*)\n+\t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n+\t# earlier versions are messed up and put the nodename in both\n+\t# sysname and nodename.\n+\techo i386-sequent-sysv4\n+\texit ;;\n+    i*86:UNIX_SV:4.2MP:2.*)\n+\t# Unixware is an offshoot of SVR4, but it has its own version\n+\t# number series starting with 2...\n+\t# I am not positive that other SVR4 systems won't match this,\n+\t# I just have to hope.  -- rms.\n+\t# Use sysv4.2uw... so that sysv4* matches it.\n+\techo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}\n+\texit ;;\n+    i*86:OS/2:*:*)\n+\t# If we were able to find `uname', then EMX Unix compatibility\n+\t# is probably installed.\n+\techo ${UNAME_MACHINE}-pc-os2-emx\n+\texit ;;\n+    i*86:XTS-300:*:STOP)\n+\techo ${UNAME_MACHINE}-unknown-stop\n+\texit ;;\n+    i*86:atheos:*:*)\n+\techo ${UNAME_MACHINE}-unknown-atheos\n+\texit ;;\n+    i*86:syllable:*:*)\n+\techo ${UNAME_MACHINE}-pc-syllable\n+\texit ;;\n+    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)\n+\techo i386-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    i*86:*DOS:*:*)\n+\techo ${UNAME_MACHINE}-pc-msdosdjgpp\n+\texit ;;\n+    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)\n+\tUNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\\/MP$//'`\n+\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n+\t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}\n+\telse\n+\t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}\n+\tfi\n+\texit ;;\n+    i*86:*:5:[678]*)\n+\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n+\tcase `/bin/uname -X | grep \"^Machine\"` in\n+\t    *486*)\t     UNAME_MACHINE=i486 ;;\n+\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n+\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n+\tesac\n+\techo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\n+\texit ;;\n+    i*86:*:3.2:*)\n+\tif test -f /usr/options/cb.name; then\n+\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n+\t\techo ${UNAME_MACHINE}-pc-isc$UNAME_REL\n+\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n+\t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n+\t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n+\t\t(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i586\n+\t\t(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i686\n+\t\t(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i686\n+\t\techo ${UNAME_MACHINE}-pc-sco$UNAME_REL\n+\telse\n+\t\techo ${UNAME_MACHINE}-pc-sysv32\n+\tfi\n+\texit ;;\n+    pc:*:*:*)\n+\t# Left here for compatibility:\n+\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n+\t# the processor, so we play safe by assuming i586.\n+\t# Note: whatever this is, it MUST be the same as what config.sub\n+\t# prints for the \"djgpp\" host, or else GDB configury will decide that\n+\t# this is a cross-build.\n+\techo i586-pc-msdosdjgpp\n+\texit ;;\n+    Intel:Mach:3*:*)\n+\techo i386-pc-mach3\n+\texit ;;\n+    paragon:*:*:*)\n+\techo i860-intel-osf1\n+\texit ;;\n+    i860:*:4.*:*) # i860-SVR4\n+\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n+\t  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4\n+\telse # Add other i860-SVR4 vendors below as they are discovered.\n+\t  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4\n+\tfi\n+\texit ;;\n+    mini*:CTIX:SYS*5:*)\n+\t# \"miniframe\"\n+\techo m68010-convergent-sysv\n+\texit ;;\n+    mc68k:UNIX:SYSTEM5:3.51m)\n+\techo m68k-convergent-sysv\n+\texit ;;\n+    M680?0:D-NIX:5.3:*)\n+\techo m68k-diab-dnix\n+\texit ;;\n+    M68*:*:R3V[5678]*:*)\n+\ttest -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;\n+    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n+\tOS_REL=''\n+\ttest -r /etc/.relid \\\n+\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n+\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n+\t  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n+    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t  && { echo i486-ncr-sysv4; exit; } ;;\n+    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n+\tOS_REL='.3'\n+\ttest -r /etc/.relid \\\n+\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t    && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n+\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n+\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; }\n+\t/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \\\n+\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n+    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n+\techo m68k-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    mc68030:UNIX_System_V:4.*:*)\n+\techo m68k-atari-sysv4\n+\texit ;;\n+    TSUNAMI:LynxOS:2.*:*)\n+\techo sparc-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    rs6000:LynxOS:2.*:*)\n+\techo rs6000-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)\n+\techo powerpc-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    SM[BE]S:UNIX_SV:*:*)\n+\techo mips-dde-sysv${UNAME_RELEASE}\n+\texit ;;\n+    RM*:ReliantUNIX-*:*:*)\n+\techo mips-sni-sysv4\n+\texit ;;\n+    RM*:SINIX-*:*:*)\n+\techo mips-sni-sysv4\n+\texit ;;\n+    *:SINIX-*:*:*)\n+\tif uname -p 2>/dev/null >/dev/null ; then\n+\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n+\t\techo ${UNAME_MACHINE}-sni-sysv4\n+\telse\n+\t\techo ns32k-sni-sysv\n+\tfi\n+\texit ;;\n+    PENTIUM:*:4.0*:*)\t# Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n+\t\t\t# says <Richard.M.Bartel@ccMail.Census.GOV>\n+\techo i586-unisys-sysv4\n+\texit ;;\n+    *:UNIX_System_V:4*:FTX*)\n+\t# From Gerald Hewes <hewes@openmarket.com>.\n+\t# How about differentiating between stratus architectures? -djm\n+\techo hppa1.1-stratus-sysv4\n+\texit ;;\n+    *:*:*:FTX*)\n+\t# From seanf@swdc.stratus.com.\n+\techo i860-stratus-sysv4\n+\texit ;;\n+    i*86:VOS:*:*)\n+\t# From Paul.Green@stratus.com.\n+\techo ${UNAME_MACHINE}-stratus-vos\n+\texit ;;\n+    *:VOS:*:*)\n+\t# From Paul.Green@stratus.com.\n+\techo hppa1.1-stratus-vos\n+\texit ;;\n+    mc68*:A/UX:*:*)\n+\techo m68k-apple-aux${UNAME_RELEASE}\n+\texit ;;\n+    news*:NEWS-OS:6*:*)\n+\techo mips-sony-newsos6\n+\texit ;;\n+    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n+\tif [ -d /usr/nec ]; then\n+\t\techo mips-nec-sysv${UNAME_RELEASE}\n+\telse\n+\t\techo mips-unknown-sysv${UNAME_RELEASE}\n+\tfi\n+\texit ;;\n+    BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n+\techo powerpc-be-beos\n+\texit ;;\n+    BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n+\techo powerpc-apple-beos\n+\texit ;;\n+    BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n+\techo i586-pc-beos\n+\texit ;;\n+    BePC:Haiku:*:*)\t# Haiku running on Intel PC compatible.\n+\techo i586-pc-haiku\n+\texit ;;\n+    x86_64:Haiku:*:*)\n+\techo x86_64-unknown-haiku\n+\texit ;;\n+    SX-4:SUPER-UX:*:*)\n+\techo sx4-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-5:SUPER-UX:*:*)\n+\techo sx5-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-6:SUPER-UX:*:*)\n+\techo sx6-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-7:SUPER-UX:*:*)\n+\techo sx7-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-8:SUPER-UX:*:*)\n+\techo sx8-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-8R:SUPER-UX:*:*)\n+\techo sx8r-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    Power*:Rhapsody:*:*)\n+\techo powerpc-apple-rhapsody${UNAME_RELEASE}\n+\texit ;;\n+    *:Rhapsody:*:*)\n+\techo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}\n+\texit ;;\n+    *:Darwin:*:*)\n+\tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n+\teval $set_cc_for_build\n+\tif test \"$UNAME_PROCESSOR\" = unknown ; then\n+\t    UNAME_PROCESSOR=powerpc\n+\tfi\n+\tif test `echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'` -le 10 ; then\n+\t    if [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n+\t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t    (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t    grep IS_64BIT_ARCH >/dev/null\n+\t\tthen\n+\t\t    case $UNAME_PROCESSOR in\n+\t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n+\t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n+\t\t    esac\n+\t\tfi\n+\t    fi\n+\telif test \"$UNAME_PROCESSOR\" = i386 ; then\n+\t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n+\t    # that puts up a graphical alert prompting to install\n+\t    # developer tools.  Any system running Mac OS X 10.7 or\n+\t    # later (Darwin 11 and later) is required to have a 64-bit\n+\t    # processor. This is not true of the ARM version of Darwin\n+\t    # that Apple uses in portable devices.\n+\t    UNAME_PROCESSOR=x86_64\n+\tfi\n+\techo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}\n+\texit ;;\n+    *:procnto*:*:* | *:QNX:[0123456789]*:*)\n+\tUNAME_PROCESSOR=`uname -p`\n+\tif test \"$UNAME_PROCESSOR\" = \"x86\"; then\n+\t\tUNAME_PROCESSOR=i386\n+\t\tUNAME_MACHINE=pc\n+\tfi\n+\techo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}\n+\texit ;;\n+    *:QNX:*:4*)\n+\techo i386-pc-qnx\n+\texit ;;\n+    NEO-?:NONSTOP_KERNEL:*:*)\n+\techo neo-tandem-nsk${UNAME_RELEASE}\n+\texit ;;\n+    NSE-*:NONSTOP_KERNEL:*:*)\n+\techo nse-tandem-nsk${UNAME_RELEASE}\n+\texit ;;\n+    NSR-?:NONSTOP_KERNEL:*:*)\n+\techo nsr-tandem-nsk${UNAME_RELEASE}\n+\texit ;;\n+    *:NonStop-UX:*:*)\n+\techo mips-compaq-nonstopux\n+\texit ;;\n+    BS2000:POSIX*:*:*)\n+\techo bs2000-siemens-sysv\n+\texit ;;\n+    DS/*:UNIX_System_V:*:*)\n+\techo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}\n+\texit ;;\n+    *:Plan9:*:*)\n+\t# \"uname -m\" is not consistent, so use $cputype instead. 386\n+\t# is converted to i386 for consistency with other x86\n+\t# operating systems.\n+\tif test \"$cputype\" = \"386\"; then\n+\t    UNAME_MACHINE=i386\n+\telse\n+\t    UNAME_MACHINE=\"$cputype\"\n+\tfi\n+\techo ${UNAME_MACHINE}-unknown-plan9\n+\texit ;;\n+    *:TOPS-10:*:*)\n+\techo pdp10-unknown-tops10\n+\texit ;;\n+    *:TENEX:*:*)\n+\techo pdp10-unknown-tenex\n+\texit ;;\n+    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n+\techo pdp10-dec-tops20\n+\texit ;;\n+    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n+\techo pdp10-xkl-tops20\n+\texit ;;\n+    *:TOPS-20:*:*)\n+\techo pdp10-unknown-tops20\n+\texit ;;\n+    *:ITS:*:*)\n+\techo pdp10-unknown-its\n+\texit ;;\n+    SEI:*:*:SEIUX)\n+\techo mips-sei-seiux${UNAME_RELEASE}\n+\texit ;;\n+    *:DragonFly:*:*)\n+\techo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n+\texit ;;\n+    *:*VMS:*:*)\n+\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n+\tcase \"${UNAME_MACHINE}\" in\n+\t    A*) echo alpha-dec-vms ; exit ;;\n+\t    I*) echo ia64-dec-vms ; exit ;;\n+\t    V*) echo vax-dec-vms ; exit ;;\n+\tesac ;;\n+    *:XENIX:*:SysV)\n+\techo i386-pc-xenix\n+\texit ;;\n+    i*86:skyos:*:*)\n+\techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'\n+\texit ;;\n+    i*86:rdos:*:*)\n+\techo ${UNAME_MACHINE}-pc-rdos\n+\texit ;;\n+    i*86:AROS:*:*)\n+\techo ${UNAME_MACHINE}-pc-aros\n+\texit ;;\n+    x86_64:VMkernel:*:*)\n+\techo ${UNAME_MACHINE}-unknown-esx\n+\texit ;;\n+esac\n+\n+cat >&2 <<EOF\n+$0: unable to guess system type\n+\n+This script, last modified $timestamp, has failed to recognize\n+the operating system you are using. It is advised that you\n+download the most up to date version of the config scripts from\n+\n+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\n+and\n+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n+\n+If the version you run ($0) is already up to date, please\n+send the following data and any information you think might be\n+pertinent to <config-patches@gnu.org> in order to provide the needed\n+information to handle your system.\n+\n+config.guess timestamp = $timestamp\n+\n+uname -m = `(uname -m) 2>/dev/null || echo unknown`\n+uname -r = `(uname -r) 2>/dev/null || echo unknown`\n+uname -s = `(uname -s) 2>/dev/null || echo unknown`\n+uname -v = `(uname -v) 2>/dev/null || echo unknown`\n+\n+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n+\n+hostinfo               = `(hostinfo) 2>/dev/null`\n+/bin/universe          = `(/bin/universe) 2>/dev/null`\n+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n+/bin/arch              = `(/bin/arch) 2>/dev/null`\n+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n+\n+UNAME_MACHINE = ${UNAME_MACHINE}\n+UNAME_RELEASE = ${UNAME_RELEASE}\n+UNAME_SYSTEM  = ${UNAME_SYSTEM}\n+UNAME_VERSION = ${UNAME_VERSION}\n+EOF\n+\n+exit 1\n+\n+# Local variables:\n+# eval: (add-hook 'write-file-hooks 'time-stamp)\n+# time-stamp-start: \"timestamp='\"\n+# time-stamp-format: \"%:y-%02m-%02d\"\n+# time-stamp-end: \"'\"\n+# End:"
      },
      {
        "sha": "873f66018d118ccbb6fcc6204b10e0be38400e7b",
        "filename": "depends/config.site.in",
        "status": "added",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,100 @@\n+cross_compiling=maybe\n+host_alias=@HOST@\n+ac_tool_prefix=${host_alias}-\n+\n+if test -z $with_boost; then\n+  with_boost=$prefix\n+fi\n+if test -z $with_qt_plugindir; then\n+  with_qt_plugindir=$prefix/plugins\n+fi\n+if test -z $with_qt_translationdir; then\n+  with_qt_translationdir=$prefix/translations\n+fi\n+if test -z $with_qt_bindir; then\n+  with_qt_bindir=$prefix/native/bin\n+fi\n+if test -z $with_protoc_bindir; then\n+  with_protoc_bindir=$prefix/native/bin\n+fi\n+if test -z $with_comparison_tool; then\n+  with_comparison_tool=$prefix/native/share/BitcoindComparisonTool_jar/BitcoindComparisonTool.jar\n+fi\n+\n+\n+if test -z $enable_wallet && test -n \"@no_wallet@\"; then\n+  enable_wallet=no\n+fi\n+\n+if test -z $with_miniupnpc && test -n \"@no_upnp@\"; then\n+  with_miniupnpc=no\n+fi\n+\n+if test -z $with_gui && test -n \"@no_qt@\"; then\n+  with_gui=no\n+fi\n+\n+if test x@host_os@ = xdarwin; then\n+  BREW=no\n+  PORT=no\n+fi\n+\n+if test x@host_os@ = xmingw32; then\n+  if test -z $with_qt_incdir; then\n+    with_qt_incdir=$prefix/include\n+  fi\n+  if test -z $with_qt_libdir; then\n+    with_qt_libdir=$prefix/lib\n+  fi\n+fi\n+\n+PATH=$prefix/native/bin:$PATH\n+PKG_CONFIG=\"`which pkg-config` --static\"\n+\n+# These two need to remain exported because pkg-config does not see them\n+# otherwise. That means they must be unexported at the end of configure.ac to\n+# avoid ruining the cache. Sigh.\n+\n+export PKG_CONFIG_LIBDIR=$prefix/lib/pkgconfig\n+export PKG_CONFIG_PATH=$prefix/share/pkgconfig\n+\n+CPPFLAGS=\"-I$prefix/include/ $CPPFLAGS\"\n+LDFLAGS=\"-L$prefix/lib $LDFLAGS\"\n+\n+CC=\"@CC@\"\n+CXX=\"@CXX@\"\n+OBJC=\"${CC}\"\n+OBJCXX=\"${CXX}\"\n+CCACHE=$prefix/native/bin/ccache\n+\n+if test -n \"@AR@\"; then\n+  AR=@AR@\n+  ac_cv_path_ac_pt_AR=${AR}\n+fi\n+\n+if test -n \"@RANLIB@\"; then\n+  RANLIB=@RANLIB@\n+  ac_cv_path_ac_pt_RANLIB=${RANLIB}\n+fi\n+\n+if test -n \"@NM@\"; then\n+  NM=@NM@\n+  ac_cv_path_ac_pt_NM=${NM}\n+fi\n+\n+if test -n \"@debug@\"; then\n+  enable_reduce_exports=no\n+fi\n+\n+if test -n \"@CFLAGS@\"; then\n+  CFLAGS=\"@CFLAGS@ $CFLAGS\"\n+fi\n+if test -n \"@CXXFLAGS@\"; then\n+  CXXFLAGS=\"@CXXFLAGS@ $CXXFLAGS\"\n+fi\n+if test -n \"@CPPFLAGS@\"; then\n+  CPPFLAGS=\"@CPPFLAGS@ $CPPFLAGS\"\n+fi\n+if test -n \"@LDFLAGS@\"; then\n+  LDFLAGS=\"@LDFLAGS@ $LDFLAGS\"\n+fi"
      },
      {
        "sha": "d654d03cdcd2226a5d7584890717e674a8122f4f",
        "filename": "depends/config.sub",
        "status": "added",
        "additions": 1794,
        "deletions": 0,
        "changes": 1794,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,1794 @@\n+#! /bin/sh\n+# Configuration validation subroutine script.\n+#   Copyright 1992-2014 Free Software Foundation, Inc.\n+\n+timestamp='2014-05-01'\n+\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, see <http://www.gnu.org/licenses/>.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that\n+# program.  This Exception is an additional permission under section 7\n+# of the GNU General Public License, version 3 (\"GPLv3\").\n+\n+\n+# Please send patches with a ChangeLog entry to config-patches@gnu.org.\n+#\n+# Configuration subroutine to validate and canonicalize a configuration type.\n+# Supply the specified configuration type as an argument.\n+# If it is invalid, we print an error message on stderr and exit with code 1.\n+# Otherwise, we print the canonical config type on stdout and succeed.\n+\n+# You can get the latest version of this script from:\n+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n+\n+# This file is supposed to be the same for all GNU packages\n+# and recognize all the CPU types, system types and aliases\n+# that are meaningful with *any* GNU software.\n+# Each package is responsible for reporting which valid configurations\n+# it does not support.  The user should be able to distinguish\n+# a failure to support a valid configuration from a meaningless\n+# configuration.\n+\n+# The goal of this file is to map all the various variations of a given\n+# machine specification into a single specification in the form:\n+#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n+# or in some cases, the newer four-part form:\n+#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n+# It is wrong to echo any other type of specification.\n+\n+me=`echo \"$0\" | sed -e 's,.*/,,'`\n+\n+usage=\"\\\n+Usage: $0 [OPTION] CPU-MFR-OPSYS\n+       $0 [OPTION] ALIAS\n+\n+Canonicalize a configuration name.\n+\n+Operation modes:\n+  -h, --help         print this help, then exit\n+  -t, --time-stamp   print date of last modification, then exit\n+  -v, --version      print version number, then exit\n+\n+Report bugs and patches to <config-patches@gnu.org>.\"\n+\n+version=\"\\\n+GNU config.sub ($timestamp)\n+\n+Copyright 1992-2014 Free Software Foundation, Inc.\n+\n+This is free software; see the source for copying conditions.  There is NO\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n+\n+help=\"\n+Try \\`$me --help' for more information.\"\n+\n+# Parse command line\n+while test $# -gt 0 ; do\n+  case $1 in\n+    --time-stamp | --time* | -t )\n+       echo \"$timestamp\" ; exit ;;\n+    --version | -v )\n+       echo \"$version\" ; exit ;;\n+    --help | --h* | -h )\n+       echo \"$usage\"; exit ;;\n+    -- )     # Stop option processing\n+       shift; break ;;\n+    - )\t# Use stdin as input.\n+       break ;;\n+    -* )\n+       echo \"$me: invalid option $1$help\"\n+       exit 1 ;;\n+\n+    *local*)\n+       # First pass through any local machine types.\n+       echo $1\n+       exit ;;\n+\n+    * )\n+       break ;;\n+  esac\n+done\n+\n+case $# in\n+ 0) echo \"$me: missing argument$help\" >&2\n+    exit 1;;\n+ 1) ;;\n+ *) echo \"$me: too many arguments$help\" >&2\n+    exit 1;;\n+esac\n+\n+# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).\n+# Here we must recognize all the valid KERNEL-OS combinations.\n+maybe_os=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\2/'`\n+case $maybe_os in\n+  nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \\\n+  linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \\\n+  knetbsd*-gnu* | netbsd*-gnu* | \\\n+  kopensolaris*-gnu* | \\\n+  storm-chaos* | os2-emx* | rtmk-nova*)\n+    os=-$maybe_os\n+    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n+    ;;\n+  android-linux)\n+    os=-linux-android\n+    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`-unknown\n+    ;;\n+  *)\n+    basic_machine=`echo $1 | sed 's/-[^-]*$//'`\n+    if [ $basic_machine != $1 ]\n+    then os=`echo $1 | sed 's/.*-/-/'`\n+    else os=; fi\n+    ;;\n+esac\n+\n+### Let's recognize common machines as not being operating systems so\n+### that things like config.sub decstation-3100 work.  We also\n+### recognize some manufacturers as not being operating systems, so we\n+### can provide default operating systems below.\n+case $os in\n+\t-sun*os*)\n+\t\t# Prevent following clause from handling this invalid input.\n+\t\t;;\n+\t-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \\\n+\t-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \\\n+\t-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \\\n+\t-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\\\n+\t-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \\\n+\t-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \\\n+\t-apple | -axis | -knuth | -cray | -microblaze*)\n+\t\tos=\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-bluegene*)\n+\t\tos=-cnk\n+\t\t;;\n+\t-sim | -cisco | -oki | -wec | -winbond)\n+\t\tos=\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-scout)\n+\t\t;;\n+\t-wrs)\n+\t\tos=-vxworks\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-chorusos*)\n+\t\tos=-chorusos\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-chorusrdb)\n+\t\tos=-chorusrdb\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-hiux*)\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\t-sco6)\n+\t\tos=-sco5v6\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco5)\n+\t\tos=-sco3.2v5\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco4)\n+\t\tos=-sco3.2v4\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco3.2.[4-9]*)\n+\t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco3.2v[4-9]*)\n+\t\t# Don't forget version if it is 3.2v4 or newer.\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco5v6*)\n+\t\t# Don't forget version if it is 3.2v4 or newer.\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco*)\n+\t\tos=-sco3.2v2\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-udk*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-isc)\n+\t\tos=-isc2.2\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-clix*)\n+\t\tbasic_machine=clipper-intergraph\n+\t\t;;\n+\t-isc*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-lynx*178)\n+\t\tos=-lynxos178\n+\t\t;;\n+\t-lynx*5)\n+\t\tos=-lynxos5\n+\t\t;;\n+\t-lynx*)\n+\t\tos=-lynxos\n+\t\t;;\n+\t-ptx*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`\n+\t\t;;\n+\t-windowsnt*)\n+\t\tos=`echo $os | sed -e 's/windowsnt/winnt/'`\n+\t\t;;\n+\t-psos*)\n+\t\tos=-psos\n+\t\t;;\n+\t-mint | -mint[0-9]*)\n+\t\tbasic_machine=m68k-atari\n+\t\tos=-mint\n+\t\t;;\n+esac\n+\n+# Decode aliases for certain CPU-COMPANY combinations.\n+case $basic_machine in\n+\t# Recognize the basic CPU types without company name.\n+\t# Some are omitted here because they have special meanings below.\n+\t1750a | 580 \\\n+\t| a29k \\\n+\t| aarch64 | aarch64_be \\\n+\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \\\n+\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \\\n+\t| am33_2.0 \\\n+\t| arc | arceb \\\n+\t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv7[arm] \\\n+\t| avr | avr32 \\\n+\t| be32 | be64 \\\n+\t| bfin \\\n+\t| c4x | c8051 | clipper \\\n+\t| d10v | d30v | dlx | dsp16xx \\\n+\t| epiphany \\\n+\t| fido | fr30 | frv \\\n+\t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n+\t| hexagon \\\n+\t| i370 | i860 | i960 | ia64 \\\n+\t| ip2k | iq2000 \\\n+\t| k1om \\\n+\t| le32 | le64 \\\n+\t| lm32 \\\n+\t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n+\t| maxq | mb | microblaze | microblazeel | mcore | mep | metag \\\n+\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n+\t| mips16 \\\n+\t| mips64 | mips64el \\\n+\t| mips64octeon | mips64octeonel \\\n+\t| mips64orion | mips64orionel \\\n+\t| mips64r5900 | mips64r5900el \\\n+\t| mips64vr | mips64vrel \\\n+\t| mips64vr4100 | mips64vr4100el \\\n+\t| mips64vr4300 | mips64vr4300el \\\n+\t| mips64vr5000 | mips64vr5000el \\\n+\t| mips64vr5900 | mips64vr5900el \\\n+\t| mipsisa32 | mipsisa32el \\\n+\t| mipsisa32r2 | mipsisa32r2el \\\n+\t| mipsisa32r6 | mipsisa32r6el \\\n+\t| mipsisa64 | mipsisa64el \\\n+\t| mipsisa64r2 | mipsisa64r2el \\\n+\t| mipsisa64r6 | mipsisa64r6el \\\n+\t| mipsisa64sb1 | mipsisa64sb1el \\\n+\t| mipsisa64sr71k | mipsisa64sr71kel \\\n+\t| mipsr5900 | mipsr5900el \\\n+\t| mipstx39 | mipstx39el \\\n+\t| mn10200 | mn10300 \\\n+\t| moxie \\\n+\t| mt \\\n+\t| msp430 \\\n+\t| nds32 | nds32le | nds32be \\\n+\t| nios | nios2 | nios2eb | nios2el \\\n+\t| ns16k | ns32k \\\n+\t| open8 | or1k | or1knd | or32 \\\n+\t| pdp10 | pdp11 | pj | pjl \\\n+\t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n+\t| pyramid \\\n+\t| rl78 | rx \\\n+\t| score \\\n+\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n+\t| sh64 | sh64le \\\n+\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n+\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n+\t| spu \\\n+\t| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \\\n+\t| ubicom32 \\\n+\t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n+\t| we32k \\\n+\t| x86 | xc16x | xstormy16 | xtensa \\\n+\t| z8k | z80)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\t;;\n+\tc54x)\n+\t\tbasic_machine=tic54x-unknown\n+\t\t;;\n+\tc55x)\n+\t\tbasic_machine=tic55x-unknown\n+\t\t;;\n+\tc6x)\n+\t\tbasic_machine=tic6x-unknown\n+\t\t;;\n+\tm6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-none\n+\t\t;;\n+\tm88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)\n+\t\t;;\n+\tms1)\n+\t\tbasic_machine=mt-unknown\n+\t\t;;\n+\n+\tstrongarm | thumb | xscale)\n+\t\tbasic_machine=arm-unknown\n+\t\t;;\n+\txgate)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-none\n+\t\t;;\n+\txscaleeb)\n+\t\tbasic_machine=armeb-unknown\n+\t\t;;\n+\n+\txscaleel)\n+\t\tbasic_machine=armel-unknown\n+\t\t;;\n+\n+\t# We use `pc' rather than `unknown'\n+\t# because (1) that's what they normally are, and\n+\t# (2) the word \"unknown\" tends to confuse beginning users.\n+\ti*86 | x86_64)\n+\t  basic_machine=$basic_machine-pc\n+\t  ;;\n+\t# Object if more than one company name word.\n+\t*-*-*)\n+\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+\t# Recognize the basic CPU types with company name.\n+\t580-* \\\n+\t| a29k-* \\\n+\t| aarch64-* | aarch64_be-* \\\n+\t| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \\\n+\t| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \\\n+\t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n+\t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n+\t| avr-* | avr32-* \\\n+\t| be32-* | be64-* \\\n+\t| bfin-* | bs2000-* \\\n+\t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n+\t| c8051-* | clipper-* | craynv-* | cydra-* \\\n+\t| d10v-* | d30v-* | dlx-* \\\n+\t| elxsi-* \\\n+\t| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \\\n+\t| h8300-* | h8500-* \\\n+\t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n+\t| hexagon-* \\\n+\t| i*86-* | i860-* | i960-* | ia64-* \\\n+\t| ip2k-* | iq2000-* \\\n+\t| k1om-* \\\n+\t| le32-* | le64-* \\\n+\t| lm32-* \\\n+\t| m32c-* | m32r-* | m32rle-* \\\n+\t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n+\t| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \\\n+\t| microblaze-* | microblazeel-* \\\n+\t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n+\t| mips16-* \\\n+\t| mips64-* | mips64el-* \\\n+\t| mips64octeon-* | mips64octeonel-* \\\n+\t| mips64orion-* | mips64orionel-* \\\n+\t| mips64r5900-* | mips64r5900el-* \\\n+\t| mips64vr-* | mips64vrel-* \\\n+\t| mips64vr4100-* | mips64vr4100el-* \\\n+\t| mips64vr4300-* | mips64vr4300el-* \\\n+\t| mips64vr5000-* | mips64vr5000el-* \\\n+\t| mips64vr5900-* | mips64vr5900el-* \\\n+\t| mipsisa32-* | mipsisa32el-* \\\n+\t| mipsisa32r2-* | mipsisa32r2el-* \\\n+\t| mipsisa32r6-* | mipsisa32r6el-* \\\n+\t| mipsisa64-* | mipsisa64el-* \\\n+\t| mipsisa64r2-* | mipsisa64r2el-* \\\n+\t| mipsisa64r6-* | mipsisa64r6el-* \\\n+\t| mipsisa64sb1-* | mipsisa64sb1el-* \\\n+\t| mipsisa64sr71k-* | mipsisa64sr71kel-* \\\n+\t| mipsr5900-* | mipsr5900el-* \\\n+\t| mipstx39-* | mipstx39el-* \\\n+\t| mmix-* \\\n+\t| mt-* \\\n+\t| msp430-* \\\n+\t| nds32-* | nds32le-* | nds32be-* \\\n+\t| nios-* | nios2-* | nios2eb-* | nios2el-* \\\n+\t| none-* | np1-* | ns16k-* | ns32k-* \\\n+\t| open8-* \\\n+\t| or1k*-* \\\n+\t| orion-* \\\n+\t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n+\t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n+\t| pyramid-* \\\n+\t| rl78-* | romp-* | rs6000-* | rx-* \\\n+\t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n+\t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n+\t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n+\t| sparclite-* \\\n+\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx?-* \\\n+\t| tahoe-* \\\n+\t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n+\t| tile*-* \\\n+\t| tron-* \\\n+\t| ubicom32-* \\\n+\t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n+\t| vax-* \\\n+\t| we32k-* \\\n+\t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n+\t| xstormy16-* | xtensa*-* \\\n+\t| ymp-* \\\n+\t| z8k-* | z80-*)\n+\t\t;;\n+\t# Recognize the basic CPU types without company name, with glob match.\n+\txtensa*)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\t;;\n+\t# Recognize the various machine names and aliases which stand\n+\t# for a CPU type and a company and sometimes even an OS.\n+\t386bsd)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-bsd\n+\t\t;;\n+\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n+\t\tbasic_machine=m68000-att\n+\t\t;;\n+\t3b*)\n+\t\tbasic_machine=we32k-att\n+\t\t;;\n+\ta29khif)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tabacus)\n+\t\tbasic_machine=abacus-unknown\n+\t\t;;\n+\tadobe68k)\n+\t\tbasic_machine=m68010-adobe\n+\t\tos=-scout\n+\t\t;;\n+\talliant | fx80)\n+\t\tbasic_machine=fx80-alliant\n+\t\t;;\n+\taltos | altos3068)\n+\t\tbasic_machine=m68k-altos\n+\t\t;;\n+\tam29k)\n+\t\tbasic_machine=a29k-none\n+\t\tos=-bsd\n+\t\t;;\n+\tamd64)\n+\t\tbasic_machine=x86_64-pc\n+\t\t;;\n+\tamd64-*)\n+\t\tbasic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tamdahl)\n+\t\tbasic_machine=580-amdahl\n+\t\tos=-sysv\n+\t\t;;\n+\tamiga | amiga-*)\n+\t\tbasic_machine=m68k-unknown\n+\t\t;;\n+\tamigaos | amigados)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-amigaos\n+\t\t;;\n+\tamigaunix | amix)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-sysv4\n+\t\t;;\n+\tapollo68)\n+\t\tbasic_machine=m68k-apollo\n+\t\tos=-sysv\n+\t\t;;\n+\tapollo68bsd)\n+\t\tbasic_machine=m68k-apollo\n+\t\tos=-bsd\n+\t\t;;\n+\taros)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-aros\n+\t\t;;\n+\taux)\n+\t\tbasic_machine=m68k-apple\n+\t\tos=-aux\n+\t\t;;\n+\tbalance)\n+\t\tbasic_machine=ns32k-sequent\n+\t\tos=-dynix\n+\t\t;;\n+\tblackfin)\n+\t\tbasic_machine=bfin-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tblackfin-*)\n+\t\tbasic_machine=bfin-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n+\tbluegene*)\n+\t\tbasic_machine=powerpc-ibm\n+\t\tos=-cnk\n+\t\t;;\n+\tc54x-*)\n+\t\tbasic_machine=tic54x-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tc55x-*)\n+\t\tbasic_machine=tic55x-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tc6x-*)\n+\t\tbasic_machine=tic6x-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tc90)\n+\t\tbasic_machine=c90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tcegcc)\n+\t\tbasic_machine=arm-unknown\n+\t\tos=-cegcc\n+\t\t;;\n+\tconvex-c1)\n+\t\tbasic_machine=c1-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c2)\n+\t\tbasic_machine=c2-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c32)\n+\t\tbasic_machine=c32-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c34)\n+\t\tbasic_machine=c34-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c38)\n+\t\tbasic_machine=c38-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tcray | j90)\n+\t\tbasic_machine=j90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tcraynv)\n+\t\tbasic_machine=craynv-cray\n+\t\tos=-unicosmp\n+\t\t;;\n+\tcr16 | cr16-*)\n+\t\tbasic_machine=cr16-unknown\n+\t\tos=-elf\n+\t\t;;\n+\tcrds | unos)\n+\t\tbasic_machine=m68k-crds\n+\t\t;;\n+\tcrisv32 | crisv32-* | etraxfs*)\n+\t\tbasic_machine=crisv32-axis\n+\t\t;;\n+\tcris | cris-* | etrax*)\n+\t\tbasic_machine=cris-axis\n+\t\t;;\n+\tcrx)\n+\t\tbasic_machine=crx-unknown\n+\t\tos=-elf\n+\t\t;;\n+\tda30 | da30-*)\n+\t\tbasic_machine=m68k-da30\n+\t\t;;\n+\tdecstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)\n+\t\tbasic_machine=mips-dec\n+\t\t;;\n+\tdecsystem10* | dec10*)\n+\t\tbasic_machine=pdp10-dec\n+\t\tos=-tops10\n+\t\t;;\n+\tdecsystem20* | dec20*)\n+\t\tbasic_machine=pdp10-dec\n+\t\tos=-tops20\n+\t\t;;\n+\tdelta | 3300 | motorola-3300 | motorola-delta \\\n+\t      | 3300-motorola | delta-motorola)\n+\t\tbasic_machine=m68k-motorola\n+\t\t;;\n+\tdelta88)\n+\t\tbasic_machine=m88k-motorola\n+\t\tos=-sysv3\n+\t\t;;\n+\tdicos)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-dicos\n+\t\t;;\n+\tdjgpp)\n+\t\tbasic_machine=i586-pc\n+\t\tos=-msdosdjgpp\n+\t\t;;\n+\tdpx20 | dpx20-*)\n+\t\tbasic_machine=rs6000-bull\n+\t\tos=-bosx\n+\t\t;;\n+\tdpx2* | dpx2*-bull)\n+\t\tbasic_machine=m68k-bull\n+\t\tos=-sysv3\n+\t\t;;\n+\tebmon29k)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-ebmon\n+\t\t;;\n+\telxsi)\n+\t\tbasic_machine=elxsi-elxsi\n+\t\tos=-bsd\n+\t\t;;\n+\tencore | umax | mmax)\n+\t\tbasic_machine=ns32k-encore\n+\t\t;;\n+\tes1800 | OSE68k | ose68k | ose | OSE)\n+\t\tbasic_machine=m68k-ericsson\n+\t\tos=-ose\n+\t\t;;\n+\tfx2800)\n+\t\tbasic_machine=i860-alliant\n+\t\t;;\n+\tgenix)\n+\t\tbasic_machine=ns32k-ns\n+\t\t;;\n+\tgmicro)\n+\t\tbasic_machine=tron-gmicro\n+\t\tos=-sysv\n+\t\t;;\n+\tgo32)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-go32\n+\t\t;;\n+\th3050r* | hiux*)\n+\t\tbasic_machine=hppa1.1-hitachi\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\th8300hms)\n+\t\tbasic_machine=h8300-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\th8300xray)\n+\t\tbasic_machine=h8300-hitachi\n+\t\tos=-xray\n+\t\t;;\n+\th8500hms)\n+\t\tbasic_machine=h8500-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\tharris)\n+\t\tbasic_machine=m88k-harris\n+\t\tos=-sysv3\n+\t\t;;\n+\thp300-*)\n+\t\tbasic_machine=m68k-hp\n+\t\t;;\n+\thp300bsd)\n+\t\tbasic_machine=m68k-hp\n+\t\tos=-bsd\n+\t\t;;\n+\thp300hpux)\n+\t\tbasic_machine=m68k-hp\n+\t\tos=-hpux\n+\t\t;;\n+\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thp9k2[0-9][0-9] | hp9k31[0-9])\n+\t\tbasic_machine=m68000-hp\n+\t\t;;\n+\thp9k3[2-9][0-9])\n+\t\tbasic_machine=m68k-hp\n+\t\t;;\n+\thp9k6[0-9][0-9] | hp6[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thp9k7[0-79][0-9] | hp7[0-79][0-9])\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k78[0-9] | hp78[0-9])\n+\t\t# FIXME: really hppa2.0-hp\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n+\t\t# FIXME: really hppa2.0-hp\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[0-9][13679] | hp8[0-9][13679])\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thppa-next)\n+\t\tos=-nextstep3\n+\t\t;;\n+\thppaosf)\n+\t\tbasic_machine=hppa1.1-hp\n+\t\tos=-osf\n+\t\t;;\n+\thppro)\n+\t\tbasic_machine=hppa1.1-hp\n+\t\tos=-proelf\n+\t\t;;\n+\ti370-ibm* | ibm*)\n+\t\tbasic_machine=i370-ibm\n+\t\t;;\n+\ti*86v32)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv32\n+\t\t;;\n+\ti*86v4*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv4\n+\t\t;;\n+\ti*86v)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv\n+\t\t;;\n+\ti*86sol2)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-solaris2\n+\t\t;;\n+\ti386mach)\n+\t\tbasic_machine=i386-mach\n+\t\tos=-mach\n+\t\t;;\n+\ti386-vsta | vsta)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-vsta\n+\t\t;;\n+\tiris | iris4d)\n+\t\tbasic_machine=mips-sgi\n+\t\tcase $os in\n+\t\t    -irix*)\n+\t\t\t;;\n+\t\t    *)\n+\t\t\tos=-irix4\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\tisi68 | isi)\n+\t\tbasic_machine=m68k-isi\n+\t\tos=-sysv\n+\t\t;;\n+\tm68knommu)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tm68knommu-*)\n+\t\tbasic_machine=m68k-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n+\tm88k-omron*)\n+\t\tbasic_machine=m88k-omron\n+\t\t;;\n+\tmagnum | m3230)\n+\t\tbasic_machine=mips-mips\n+\t\tos=-sysv\n+\t\t;;\n+\tmerlin)\n+\t\tbasic_machine=ns32k-utek\n+\t\tos=-sysv\n+\t\t;;\n+\tmicroblaze*)\n+\t\tbasic_machine=microblaze-xilinx\n+\t\t;;\n+\tmingw64)\n+\t\tbasic_machine=x86_64-pc\n+\t\tos=-mingw64\n+\t\t;;\n+\tmingw32)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-mingw32\n+\t\t;;\n+\tmingw32ce)\n+\t\tbasic_machine=arm-unknown\n+\t\tos=-mingw32ce\n+\t\t;;\n+\tminiframe)\n+\t\tbasic_machine=m68000-convergent\n+\t\t;;\n+\t*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)\n+\t\tbasic_machine=m68k-atari\n+\t\tos=-mint\n+\t\t;;\n+\tmips3*-*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`\n+\t\t;;\n+\tmips3*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown\n+\t\t;;\n+\tmonitor)\n+\t\tbasic_machine=m68k-rom68k\n+\t\tos=-coff\n+\t\t;;\n+\tmorphos)\n+\t\tbasic_machine=powerpc-unknown\n+\t\tos=-morphos\n+\t\t;;\n+\tmsdos)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-msdos\n+\t\t;;\n+\tms1-*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`\n+\t\t;;\n+\tmsys)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-msys\n+\t\t;;\n+\tmvs)\n+\t\tbasic_machine=i370-ibm\n+\t\tos=-mvs\n+\t\t;;\n+\tnacl)\n+\t\tbasic_machine=le32-unknown\n+\t\tos=-nacl\n+\t\t;;\n+\tncr3000)\n+\t\tbasic_machine=i486-ncr\n+\t\tos=-sysv4\n+\t\t;;\n+\tnetbsd386)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-netbsd\n+\t\t;;\n+\tnetwinder)\n+\t\tbasic_machine=armv4l-rebel\n+\t\tos=-linux\n+\t\t;;\n+\tnews | news700 | news800 | news900)\n+\t\tbasic_machine=m68k-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnews1000)\n+\t\tbasic_machine=m68030-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnews-3600 | risc-news)\n+\t\tbasic_machine=mips-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnecv70)\n+\t\tbasic_machine=v70-nec\n+\t\tos=-sysv\n+\t\t;;\n+\tnext | m*-next )\n+\t\tbasic_machine=m68k-next\n+\t\tcase $os in\n+\t\t    -nextstep* )\n+\t\t\t;;\n+\t\t    -ns2*)\n+\t\t      os=-nextstep2\n+\t\t\t;;\n+\t\t    *)\n+\t\t      os=-nextstep3\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\tnh3000)\n+\t\tbasic_machine=m68k-harris\n+\t\tos=-cxux\n+\t\t;;\n+\tnh[45]000)\n+\t\tbasic_machine=m88k-harris\n+\t\tos=-cxux\n+\t\t;;\n+\tnindy960)\n+\t\tbasic_machine=i960-intel\n+\t\tos=-nindy\n+\t\t;;\n+\tmon960)\n+\t\tbasic_machine=i960-intel\n+\t\tos=-mon960\n+\t\t;;\n+\tnonstopux)\n+\t\tbasic_machine=mips-compaq\n+\t\tos=-nonstopux\n+\t\t;;\n+\tnp1)\n+\t\tbasic_machine=np1-gould\n+\t\t;;\n+\tneo-tandem)\n+\t\tbasic_machine=neo-tandem\n+\t\t;;\n+\tnse-tandem)\n+\t\tbasic_machine=nse-tandem\n+\t\t;;\n+\tnsr-tandem)\n+\t\tbasic_machine=nsr-tandem\n+\t\t;;\n+\top50n-* | op60c-*)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\tos=-proelf\n+\t\t;;\n+\topenrisc | openrisc-*)\n+\t\tbasic_machine=or32-unknown\n+\t\t;;\n+\tos400)\n+\t\tbasic_machine=powerpc-ibm\n+\t\tos=-os400\n+\t\t;;\n+\tOSE68000 | ose68000)\n+\t\tbasic_machine=m68000-ericsson\n+\t\tos=-ose\n+\t\t;;\n+\tos68k)\n+\t\tbasic_machine=m68k-none\n+\t\tos=-os68k\n+\t\t;;\n+\tpa-hitachi)\n+\t\tbasic_machine=hppa1.1-hitachi\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\tparagon)\n+\t\tbasic_machine=i860-intel\n+\t\tos=-osf\n+\t\t;;\n+\tparisc)\n+\t\tbasic_machine=hppa-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tparisc-*)\n+\t\tbasic_machine=hppa-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n+\tpbd)\n+\t\tbasic_machine=sparc-tti\n+\t\t;;\n+\tpbb)\n+\t\tbasic_machine=m68k-tti\n+\t\t;;\n+\tpc532 | pc532-*)\n+\t\tbasic_machine=ns32k-pc532\n+\t\t;;\n+\tpc98)\n+\t\tbasic_machine=i386-pc\n+\t\t;;\n+\tpc98-*)\n+\t\tbasic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentium | p5 | k5 | k6 | nexgen | viac3)\n+\t\tbasic_machine=i586-pc\n+\t\t;;\n+\tpentiumpro | p6 | 6x86 | athlon | athlon_*)\n+\t\tbasic_machine=i686-pc\n+\t\t;;\n+\tpentiumii | pentium2 | pentiumiii | pentium3)\n+\t\tbasic_machine=i686-pc\n+\t\t;;\n+\tpentium4)\n+\t\tbasic_machine=i786-pc\n+\t\t;;\n+\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n+\t\tbasic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentiumpro-* | p6-* | 6x86-* | athlon-*)\n+\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n+\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentium4-*)\n+\t\tbasic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpn)\n+\t\tbasic_machine=pn-gould\n+\t\t;;\n+\tpower)\tbasic_machine=power-ibm\n+\t\t;;\n+\tppc | ppcbe)\tbasic_machine=powerpc-unknown\n+\t\t;;\n+\tppc-* | ppcbe-*)\n+\t\tbasic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppcle | powerpclittle | ppc-le | powerpc-little)\n+\t\tbasic_machine=powerpcle-unknown\n+\t\t;;\n+\tppcle-* | powerpclittle-*)\n+\t\tbasic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppc64)\tbasic_machine=powerpc64-unknown\n+\t\t;;\n+\tppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppc64le | powerpc64little | ppc64-le | powerpc64-little)\n+\t\tbasic_machine=powerpc64le-unknown\n+\t\t;;\n+\tppc64le-* | powerpc64little-*)\n+\t\tbasic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tps2)\n+\t\tbasic_machine=i386-ibm\n+\t\t;;\n+\tpw32)\n+\t\tbasic_machine=i586-unknown\n+\t\tos=-pw32\n+\t\t;;\n+\trdos | rdos64)\n+\t\tbasic_machine=x86_64-pc\n+\t\tos=-rdos\n+\t\t;;\n+\trdos32)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-rdos\n+\t\t;;\n+\trom68k)\n+\t\tbasic_machine=m68k-rom68k\n+\t\tos=-coff\n+\t\t;;\n+\trm[46]00)\n+\t\tbasic_machine=mips-siemens\n+\t\t;;\n+\trtpc | rtpc-*)\n+\t\tbasic_machine=romp-ibm\n+\t\t;;\n+\ts390 | s390-*)\n+\t\tbasic_machine=s390-ibm\n+\t\t;;\n+\ts390x | s390x-*)\n+\t\tbasic_machine=s390x-ibm\n+\t\t;;\n+\tsa29200)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tsb1)\n+\t\tbasic_machine=mipsisa64sb1-unknown\n+\t\t;;\n+\tsb1el)\n+\t\tbasic_machine=mipsisa64sb1el-unknown\n+\t\t;;\n+\tsde)\n+\t\tbasic_machine=mipsisa32-sde\n+\t\tos=-elf\n+\t\t;;\n+\tsei)\n+\t\tbasic_machine=mips-sei\n+\t\tos=-seiux\n+\t\t;;\n+\tsequent)\n+\t\tbasic_machine=i386-sequent\n+\t\t;;\n+\tsh)\n+\t\tbasic_machine=sh-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\tsh5el)\n+\t\tbasic_machine=sh5le-unknown\n+\t\t;;\n+\tsh64)\n+\t\tbasic_machine=sh64-unknown\n+\t\t;;\n+\tsparclite-wrs | simso-wrs)\n+\t\tbasic_machine=sparclite-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tsps7)\n+\t\tbasic_machine=m68k-bull\n+\t\tos=-sysv2\n+\t\t;;\n+\tspur)\n+\t\tbasic_machine=spur-unknown\n+\t\t;;\n+\tst2000)\n+\t\tbasic_machine=m68k-tandem\n+\t\t;;\n+\tstratus)\n+\t\tbasic_machine=i860-stratus\n+\t\tos=-sysv4\n+\t\t;;\n+\tstrongarm-* | thumb-*)\n+\t\tbasic_machine=arm-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tsun2)\n+\t\tbasic_machine=m68000-sun\n+\t\t;;\n+\tsun2os3)\n+\t\tbasic_machine=m68000-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun2os4)\n+\t\tbasic_machine=m68000-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun3os3)\n+\t\tbasic_machine=m68k-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun3os4)\n+\t\tbasic_machine=m68k-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun4os3)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun4os4)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun4sol2)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-solaris2\n+\t\t;;\n+\tsun3 | sun3-*)\n+\t\tbasic_machine=m68k-sun\n+\t\t;;\n+\tsun4)\n+\t\tbasic_machine=sparc-sun\n+\t\t;;\n+\tsun386 | sun386i | roadrunner)\n+\t\tbasic_machine=i386-sun\n+\t\t;;\n+\tsv1)\n+\t\tbasic_machine=sv1-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tsymmetry)\n+\t\tbasic_machine=i386-sequent\n+\t\tos=-dynix\n+\t\t;;\n+\tt3e)\n+\t\tbasic_machine=alphaev5-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tt90)\n+\t\tbasic_machine=t90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\ttile*)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-linux-gnu\n+\t\t;;\n+\ttx39)\n+\t\tbasic_machine=mipstx39-unknown\n+\t\t;;\n+\ttx39el)\n+\t\tbasic_machine=mipstx39el-unknown\n+\t\t;;\n+\ttoad1)\n+\t\tbasic_machine=pdp10-xkl\n+\t\tos=-tops20\n+\t\t;;\n+\ttower | tower-32)\n+\t\tbasic_machine=m68k-ncr\n+\t\t;;\n+\ttpf)\n+\t\tbasic_machine=s390x-ibm\n+\t\tos=-tpf\n+\t\t;;\n+\tudi29k)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tultra3)\n+\t\tbasic_machine=a29k-nyu\n+\t\tos=-sym1\n+\t\t;;\n+\tv810 | necv810)\n+\t\tbasic_machine=v810-nec\n+\t\tos=-none\n+\t\t;;\n+\tvaxv)\n+\t\tbasic_machine=vax-dec\n+\t\tos=-sysv\n+\t\t;;\n+\tvms)\n+\t\tbasic_machine=vax-dec\n+\t\tos=-vms\n+\t\t;;\n+\tvpp*|vx|vx-*)\n+\t\tbasic_machine=f301-fujitsu\n+\t\t;;\n+\tvxworks960)\n+\t\tbasic_machine=i960-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tvxworks68)\n+\t\tbasic_machine=m68k-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tvxworks29k)\n+\t\tbasic_machine=a29k-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tw65*)\n+\t\tbasic_machine=w65-wdc\n+\t\tos=-none\n+\t\t;;\n+\tw89k-*)\n+\t\tbasic_machine=hppa1.1-winbond\n+\t\tos=-proelf\n+\t\t;;\n+\txbox)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-mingw32\n+\t\t;;\n+\txps | xps100)\n+\t\tbasic_machine=xps100-honeywell\n+\t\t;;\n+\txscale-* | xscalee[bl]-*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/^xscale/arm/'`\n+\t\t;;\n+\tymp)\n+\t\tbasic_machine=ymp-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tz8k-*-coff)\n+\t\tbasic_machine=z8k-unknown\n+\t\tos=-sim\n+\t\t;;\n+\tz80-*-coff)\n+\t\tbasic_machine=z80-unknown\n+\t\tos=-sim\n+\t\t;;\n+\tnone)\n+\t\tbasic_machine=none-none\n+\t\tos=-none\n+\t\t;;\n+\n+# Here we handle the default manufacturer of certain CPU types.  It is in\n+# some cases the only manufacturer, in others, it is the most popular.\n+\tw89k)\n+\t\tbasic_machine=hppa1.1-winbond\n+\t\t;;\n+\top50n)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\t;;\n+\top60c)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\t;;\n+\tromp)\n+\t\tbasic_machine=romp-ibm\n+\t\t;;\n+\tmmix)\n+\t\tbasic_machine=mmix-knuth\n+\t\t;;\n+\trs6000)\n+\t\tbasic_machine=rs6000-ibm\n+\t\t;;\n+\tvax)\n+\t\tbasic_machine=vax-dec\n+\t\t;;\n+\tpdp10)\n+\t\t# there are many clones, so DEC is not a safe bet\n+\t\tbasic_machine=pdp10-unknown\n+\t\t;;\n+\tpdp11)\n+\t\tbasic_machine=pdp11-dec\n+\t\t;;\n+\twe32k)\n+\t\tbasic_machine=we32k-att\n+\t\t;;\n+\tsh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)\n+\t\tbasic_machine=sh-unknown\n+\t\t;;\n+\tsparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)\n+\t\tbasic_machine=sparc-sun\n+\t\t;;\n+\tcydra)\n+\t\tbasic_machine=cydra-cydrome\n+\t\t;;\n+\torion)\n+\t\tbasic_machine=orion-highlevel\n+\t\t;;\n+\torion105)\n+\t\tbasic_machine=clipper-highlevel\n+\t\t;;\n+\tmac | mpw | mac-mpw)\n+\t\tbasic_machine=m68k-apple\n+\t\t;;\n+\tpmac | pmac-mpw)\n+\t\tbasic_machine=powerpc-apple\n+\t\t;;\n+\t*-unknown)\n+\t\t# Make sure to match an already-canonicalized machine name.\n+\t\t;;\n+\t*)\n+\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+\n+# Here we canonicalize certain aliases for manufacturers.\n+case $basic_machine in\n+\t*-digital*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`\n+\t\t;;\n+\t*-commodore*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`\n+\t\t;;\n+\t*)\n+\t\t;;\n+esac\n+\n+# Decode manufacturer-specific aliases for certain operating systems.\n+\n+if [ x\"$os\" != x\"\" ]\n+then\n+case $os in\n+\t# First match some system type aliases\n+\t# that might get confused with valid system types.\n+\t# -solaris* is a basic system type, with this one exception.\n+\t-auroraux)\n+\t\tos=-auroraux\n+\t\t;;\n+\t-solaris1 | -solaris1.*)\n+\t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n+\t\t;;\n+\t-solaris)\n+\t\tos=-solaris2\n+\t\t;;\n+\t-svr4*)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-unixware*)\n+\t\tos=-sysv4.2uw\n+\t\t;;\n+\t-gnu/linux*)\n+\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n+\t\t;;\n+\t# First accept the basic system types.\n+\t# The portable systems comes first.\n+\t# Each alternative MUST END IN A *, to match a version number.\n+\t# -sysv* is not here because it comes later, after sysvr4.\n+\t-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \\\n+\t      | -*vms* | -sco* | -esix* | -isc* | -aix* | -cnk* | -sunos | -sunos[34]*\\\n+\t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \\\n+\t      | -sym* | -kopensolaris* | -plan9* \\\n+\t      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \\\n+\t      | -aos* | -aros* \\\n+\t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n+\t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n+\t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \\\n+\t      | -bitrig* | -openbsd* | -solidbsd* \\\n+\t      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \\\n+\t      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n+\t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n+\t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n+\t      | -chorusos* | -chorusrdb* | -cegcc* \\\n+\t      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n+\t      | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \\\n+\t      | -linux-newlib* | -linux-musl* | -linux-uclibc* \\\n+\t      | -uxpv* | -beos* | -mpeix* | -udk* \\\n+\t      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \\\n+\t      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \\\n+\t      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \\\n+\t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n+\t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n+\t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n+\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* | -tirtos*)\n+\t# Remember, each alternative MUST END IN *, to match a version number.\n+\t\t;;\n+\t-qnx*)\n+\t\tcase $basic_machine in\n+\t\t    x86-* | i*86-*)\n+\t\t\t;;\n+\t\t    *)\n+\t\t\tos=-nto$os\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\t-nto-qnx*)\n+\t\t;;\n+\t-nto*)\n+\t\tos=`echo $os | sed -e 's|nto|nto-qnx|'`\n+\t\t;;\n+\t-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \\\n+\t      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \\\n+\t      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)\n+\t\t;;\n+\t-mac*)\n+\t\tos=`echo $os | sed -e 's|mac|macos|'`\n+\t\t;;\n+\t-linux-dietlibc)\n+\t\tos=-linux-dietlibc\n+\t\t;;\n+\t-linux*)\n+\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n+\t\t;;\n+\t-sunos5*)\n+\t\tos=`echo $os | sed -e 's|sunos5|solaris2|'`\n+\t\t;;\n+\t-sunos6*)\n+\t\tos=`echo $os | sed -e 's|sunos6|solaris3|'`\n+\t\t;;\n+\t-opened*)\n+\t\tos=-openedition\n+\t\t;;\n+\t-os400*)\n+\t\tos=-os400\n+\t\t;;\n+\t-wince*)\n+\t\tos=-wince\n+\t\t;;\n+\t-osfrose*)\n+\t\tos=-osfrose\n+\t\t;;\n+\t-osf*)\n+\t\tos=-osf\n+\t\t;;\n+\t-utek*)\n+\t\tos=-bsd\n+\t\t;;\n+\t-dynix*)\n+\t\tos=-bsd\n+\t\t;;\n+\t-acis*)\n+\t\tos=-aos\n+\t\t;;\n+\t-atheos*)\n+\t\tos=-atheos\n+\t\t;;\n+\t-syllable*)\n+\t\tos=-syllable\n+\t\t;;\n+\t-386bsd)\n+\t\tos=-bsd\n+\t\t;;\n+\t-ctix* | -uts*)\n+\t\tos=-sysv\n+\t\t;;\n+\t-nova*)\n+\t\tos=-rtmk-nova\n+\t\t;;\n+\t-ns2 )\n+\t\tos=-nextstep2\n+\t\t;;\n+\t-nsk*)\n+\t\tos=-nsk\n+\t\t;;\n+\t# Preserve the version number of sinix5.\n+\t-sinix5.*)\n+\t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n+\t\t;;\n+\t-sinix*)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-tpf*)\n+\t\tos=-tpf\n+\t\t;;\n+\t-triton*)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-oss*)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-svr4)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-svr3)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-sysvr4)\n+\t\tos=-sysv4\n+\t\t;;\n+\t# This must come after -sysvr4.\n+\t-sysv*)\n+\t\t;;\n+\t-ose*)\n+\t\tos=-ose\n+\t\t;;\n+\t-es1800*)\n+\t\tos=-ose\n+\t\t;;\n+\t-xenix)\n+\t\tos=-xenix\n+\t\t;;\n+\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n+\t\tos=-mint\n+\t\t;;\n+\t-aros*)\n+\t\tos=-aros\n+\t\t;;\n+\t-zvmoe)\n+\t\tos=-zvmoe\n+\t\t;;\n+\t-dicos*)\n+\t\tos=-dicos\n+\t\t;;\n+\t-nacl*)\n+\t\t;;\n+\t-none)\n+\t\t;;\n+\t*)\n+\t\t# Get rid of the `-' at the beginning of $os.\n+\t\tos=`echo $os | sed 's/[^-]*-//'`\n+\t\techo Invalid configuration \\`$1\\': system \\`$os\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+else\n+\n+# Here we handle the default operating systems that come with various machines.\n+# The value should be what the vendor currently ships out the door with their\n+# machine or put another way, the most popular os provided with the machine.\n+\n+# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n+# \"-sun\"), then you have to tell the case statement up towards the top\n+# that MANUFACTURER isn't an operating system.  Otherwise, code above\n+# will signal an error saying that MANUFACTURER isn't an operating\n+# system, and we'll never get to this point.\n+\n+case $basic_machine in\n+\tscore-*)\n+\t\tos=-elf\n+\t\t;;\n+\tspu-*)\n+\t\tos=-elf\n+\t\t;;\n+\t*-acorn)\n+\t\tos=-riscix1.2\n+\t\t;;\n+\tarm*-rebel)\n+\t\tos=-linux\n+\t\t;;\n+\tarm*-semi)\n+\t\tos=-aout\n+\t\t;;\n+\tc4x-* | tic4x-*)\n+\t\tos=-coff\n+\t\t;;\n+\tc8051-*)\n+\t\tos=-elf\n+\t\t;;\n+\thexagon-*)\n+\t\tos=-elf\n+\t\t;;\n+\ttic54x-*)\n+\t\tos=-coff\n+\t\t;;\n+\ttic55x-*)\n+\t\tos=-coff\n+\t\t;;\n+\ttic6x-*)\n+\t\tos=-coff\n+\t\t;;\n+\t# This must come before the *-dec entry.\n+\tpdp10-*)\n+\t\tos=-tops20\n+\t\t;;\n+\tpdp11-*)\n+\t\tos=-none\n+\t\t;;\n+\t*-dec | vax-*)\n+\t\tos=-ultrix4.2\n+\t\t;;\n+\tm68*-apollo)\n+\t\tos=-domain\n+\t\t;;\n+\ti386-sun)\n+\t\tos=-sunos4.0.2\n+\t\t;;\n+\tm68000-sun)\n+\t\tos=-sunos3\n+\t\t;;\n+\tm68*-cisco)\n+\t\tos=-aout\n+\t\t;;\n+\tmep-*)\n+\t\tos=-elf\n+\t\t;;\n+\tmips*-cisco)\n+\t\tos=-elf\n+\t\t;;\n+\tmips*-*)\n+\t\tos=-elf\n+\t\t;;\n+\tor32-*)\n+\t\tos=-coff\n+\t\t;;\n+\t*-tti)\t# must be before sparc entry or we get the wrong os.\n+\t\tos=-sysv3\n+\t\t;;\n+\tsparc-* | *-sun)\n+\t\tos=-sunos4.1.1\n+\t\t;;\n+\t*-be)\n+\t\tos=-beos\n+\t\t;;\n+\t*-haiku)\n+\t\tos=-haiku\n+\t\t;;\n+\t*-ibm)\n+\t\tos=-aix\n+\t\t;;\n+\t*-knuth)\n+\t\tos=-mmixware\n+\t\t;;\n+\t*-wec)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-winbond)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-oki)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-hp)\n+\t\tos=-hpux\n+\t\t;;\n+\t*-hitachi)\n+\t\tos=-hiux\n+\t\t;;\n+\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n+\t\tos=-sysv\n+\t\t;;\n+\t*-cbm)\n+\t\tos=-amigaos\n+\t\t;;\n+\t*-dg)\n+\t\tos=-dgux\n+\t\t;;\n+\t*-dolphin)\n+\t\tos=-sysv3\n+\t\t;;\n+\tm68k-ccur)\n+\t\tos=-rtu\n+\t\t;;\n+\tm88k-omron*)\n+\t\tos=-luna\n+\t\t;;\n+\t*-next )\n+\t\tos=-nextstep\n+\t\t;;\n+\t*-sequent)\n+\t\tos=-ptx\n+\t\t;;\n+\t*-crds)\n+\t\tos=-unos\n+\t\t;;\n+\t*-ns)\n+\t\tos=-genix\n+\t\t;;\n+\ti370-*)\n+\t\tos=-mvs\n+\t\t;;\n+\t*-next)\n+\t\tos=-nextstep3\n+\t\t;;\n+\t*-gould)\n+\t\tos=-sysv\n+\t\t;;\n+\t*-highlevel)\n+\t\tos=-bsd\n+\t\t;;\n+\t*-encore)\n+\t\tos=-bsd\n+\t\t;;\n+\t*-sgi)\n+\t\tos=-irix\n+\t\t;;\n+\t*-siemens)\n+\t\tos=-sysv4\n+\t\t;;\n+\t*-masscomp)\n+\t\tos=-rtu\n+\t\t;;\n+\tf30[01]-fujitsu | f700-fujitsu)\n+\t\tos=-uxpv\n+\t\t;;\n+\t*-rom68k)\n+\t\tos=-coff\n+\t\t;;\n+\t*-*bug)\n+\t\tos=-coff\n+\t\t;;\n+\t*-apple)\n+\t\tos=-macos\n+\t\t;;\n+\t*-atari*)\n+\t\tos=-mint\n+\t\t;;\n+\t*)\n+\t\tos=-none\n+\t\t;;\n+esac\n+fi\n+\n+# Here we handle the case where we know the os, and the CPU type, but not the\n+# manufacturer.  We pick the logical manufacturer.\n+vendor=unknown\n+case $basic_machine in\n+\t*-unknown)\n+\t\tcase $os in\n+\t\t\t-riscix*)\n+\t\t\t\tvendor=acorn\n+\t\t\t\t;;\n+\t\t\t-sunos*)\n+\t\t\t\tvendor=sun\n+\t\t\t\t;;\n+\t\t\t-cnk*|-aix*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-beos*)\n+\t\t\t\tvendor=be\n+\t\t\t\t;;\n+\t\t\t-hpux*)\n+\t\t\t\tvendor=hp\n+\t\t\t\t;;\n+\t\t\t-mpeix*)\n+\t\t\t\tvendor=hp\n+\t\t\t\t;;\n+\t\t\t-hiux*)\n+\t\t\t\tvendor=hitachi\n+\t\t\t\t;;\n+\t\t\t-unos*)\n+\t\t\t\tvendor=crds\n+\t\t\t\t;;\n+\t\t\t-dgux*)\n+\t\t\t\tvendor=dg\n+\t\t\t\t;;\n+\t\t\t-luna*)\n+\t\t\t\tvendor=omron\n+\t\t\t\t;;\n+\t\t\t-genix*)\n+\t\t\t\tvendor=ns\n+\t\t\t\t;;\n+\t\t\t-mvs* | -opened*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-os400*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-ptx*)\n+\t\t\t\tvendor=sequent\n+\t\t\t\t;;\n+\t\t\t-tpf*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-vxsim* | -vxworks* | -windiss*)\n+\t\t\t\tvendor=wrs\n+\t\t\t\t;;\n+\t\t\t-aux*)\n+\t\t\t\tvendor=apple\n+\t\t\t\t;;\n+\t\t\t-hms*)\n+\t\t\t\tvendor=hitachi\n+\t\t\t\t;;\n+\t\t\t-mpw* | -macos*)\n+\t\t\t\tvendor=apple\n+\t\t\t\t;;\n+\t\t\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n+\t\t\t\tvendor=atari\n+\t\t\t\t;;\n+\t\t\t-vos*)\n+\t\t\t\tvendor=stratus\n+\t\t\t\t;;\n+\t\tesac\n+\t\tbasic_machine=`echo $basic_machine | sed \"s/unknown/$vendor/\"`\n+\t\t;;\n+esac\n+\n+echo $basic_machine$os\n+exit\n+\n+# Local variables:\n+# eval: (add-hook 'write-file-hooks 'time-stamp)\n+# time-stamp-start: \"timestamp='\"\n+# time-stamp-format: \"%:y-%02m-%02d\"\n+# time-stamp-end: \"'\"\n+# End:"
      },
      {
        "sha": "c1fc0a0e33169a34e9f25f59b673d1405470193c",
        "filename": "depends/funcs.mk",
        "status": "added",
        "additions": 232,
        "deletions": 0,
        "changes": 232,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,232 @@\n+define int_vars\n+#Set defaults for vars which may be overridden per-package\n+$(1)_cc=$($($(1)_type)_CC)\n+$(1)_cxx=$($($(1)_type)_CXX)\n+$(1)_objc=$($($(1)_type)_OBJC)\n+$(1)_objcxx=$($($(1)_type)_OBJCXX)\n+$(1)_ar=$($($(1)_type)_AR)\n+$(1)_ranlib=$($($(1)_type)_RANLIB)\n+$(1)_libtool=$($($(1)_type)_LIBTOOL)\n+$(1)_nm=$($($(1)_type)_NM)\n+$(1)_cflags=$($($(1)_type)_CFLAGS) $($($(1)_type)_$(release_type)_CFLAGS)\n+$(1)_cxxflags=$($($(1)_type)_CXXFLAGS) $($($(1)_type)_$(release_type)_CXXFLAGS)\n+$(1)_ldflags=$($($(1)_type)_LDFLAGS) $($($(1)_type)_$(release_type)_LDFLAGS) -L$($($(1)_type)_prefix)/lib\n+$(1)_cppflags=$($($(1)_type)_CPPFLAGS) $($($(1)_type)_$(release_type)_CPPFLAGS) -I$($($(1)_type)_prefix)/include\n+$(1)_recipe_hash:=\n+endef\n+\n+define int_get_all_dependencies\n+$(sort $(foreach dep,$(2),$(2) $(call int_get_all_dependencies,$(1),$($(dep)_dependencies))))\n+endef\n+\n+define fetch_file\n+(test -f $(SOURCES_PATH)/$(4) || \\\n+  ( mkdir -p $$($(1)_extract_dir) && \\\n+  ( $(build_DOWNLOAD) \"$$($(1)_extract_dir)/$(4).temp\" \"$(2)/$(3)\" || \\\n+    $(build_DOWNLOAD) \"$$($(1)_extract_dir)/$(4).temp\" \"$(FALLBACK_DOWNLOAD_PATH)/$(3)\" ) && \\\n+    echo \"$(5)  $$($(1)_extract_dir)/$(4).temp\" > $$($(1)_extract_dir)/.$(4).hash && \\\n+    $(build_SHA256SUM) -c $$($(1)_extract_dir)/.$(4).hash && \\\n+    mv $$($(1)_extract_dir)/$(4).temp $(SOURCES_PATH)/$(4) ))\n+endef\n+\n+define int_get_build_recipe_hash\n+$(eval $(1)_all_file_checksums:=$(shell $(build_SHA256SUM) $(meta_depends) packages/$(1).mk $(addprefix $(PATCHES_PATH)/$(1)/,$($(1)_patches))))\n+$(eval $(1)_recipe_hash:=$(shell echo -n \"$($(1)_all_file_checksums)\" | $(build_SHA256SUM)))\n+endef\n+\n+define int_get_build_id\n+$(eval $(1)_dependencies += $($(1)_$(host_arch)_$(host_os)_dependencies) $($(1)_$(host_os)_dependencies))\n+$(eval $(1)_all_dependencies:=$(call int_get_all_dependencies,$(1),$($($(1)_type)_native_toolchain) $($(1)_dependencies)))\n+$(foreach dep,$($(1)_all_dependencies),$(eval $(1)_build_id_deps+=$(dep)-$($(dep)_version)-$($(dep)_recipe_hash)))\n+$(eval $(1)_build_id_long:=$(1)-$($(1)_version)-$($(1)_recipe_hash)-$(release_type) $($(1)_build_id_deps))\n+$(eval $(1)_build_id:=$(shell echo -n \"$($(1)_build_id_long)\" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH)))\n+final_build_id_long+=$($(package)_build_id_long)\n+\n+#compute package-specific paths\n+$(1)_build_subdir?=.\n+$(1)_download_file?=$($(1)_file_name)\n+$(1)_source:=$(SOURCES_PATH)/$($(1)_file_name)\n+$(1)_staging_dir=$(base_staging_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)\n+$(1)_staging_prefix_dir:=$$($(1)_staging_dir)$($($(1)_type)_prefix)\n+$(1)_extract_dir:=$(base_build_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)\n+$(1)_build_dir:=$$($(1)_extract_dir)/$$($(1)_build_subdir)\n+$(1)_patch_dir:=$(base_build_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)/.patches-$($(1)_build_id)\n+$(1)_prefixbin:=$($($(1)_type)_prefix)/bin/\n+$(1)_cached:=$(BASE_CACHE)/$(host)/$(1)/$(1)-$($(1)_version)-$($(1)_build_id).tar.gz\n+\n+#stamps\n+$(1)_fetched=$$($(1)_extract_dir)/.stamp_fetched\n+$(1)_extracted=$$($(1)_extract_dir)/.stamp_extracted\n+$(1)_preprocessed=$$($(1)_extract_dir)/.stamp_preprocessed\n+$(1)_cleaned=$$($(1)_extract_dir)/.stamp_cleaned\n+$(1)_built=$$($(1)_build_dir)/.stamp_built\n+$(1)_configured=$$($(1)_build_dir)/.stamp_configured\n+$(1)_staged=$$($(1)_staging_dir)/.stamp_staged\n+$(1)_postprocessed=$$($(1)_staging_prefix_dir)/.stamp_postprocessed\n+$(1)_download_path_fixed=$(subst :,\\:,$$($(1)_download_path))\n+\n+\n+#default commands\n+$(1)_fetch_cmds ?= $(call fetch_file,$(1),$(subst \\:,:,$$($(1)_download_path_fixed)),$$($(1)_download_file),$($(1)_file_name),$($(1)_sha256_hash))\n+$(1)_extract_cmds ?= mkdir -p $$($(1)_extract_dir) && echo \"$$($(1)_sha256_hash)  $$($(1)_source)\" > $$($(1)_extract_dir)/.$$($(1)_file_name).hash &&  $(build_SHA256SUM) -c $$($(1)_extract_dir)/.$$($(1)_file_name).hash && tar --strip-components=1 -xf $$($(1)_source)\n+$(1)_preprocess_cmds ?=\n+$(1)_build_cmds ?=\n+$(1)_config_cmds ?=\n+$(1)_stage_cmds ?=\n+$(1)_set_vars ?=\n+\n+\n+all_sources+=$$($(1)_fetched)\n+endef\n+#$(foreach dep_target,$($(1)_all_dependencies),$(eval $(1)_dependency_targets=$($(dep_target)_cached)))\n+\n+\n+define int_config_attach_build_config\n+$(eval $(call $(1)_set_vars,$(1)))\n+$(1)_cflags+=$($(1)_cflags_$(release_type))\n+$(1)_cflags+=$($(1)_cflags_$(host_arch)) $($(1)_cflags_$(host_arch)_$(release_type))\n+$(1)_cflags+=$($(1)_cflags_$(host_os)) $($(1)_cflags_$(host_os)_$(release_type))\n+$(1)_cflags+=$($(1)_cflags_$(host_arch)_$(host_os)) $($(1)_cflags_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_cxxflags+=$($(1)_cxxflags_$(release_type))\n+$(1)_cxxflags+=$($(1)_cxxflags_$(host_arch)) $($(1)_cxxflags_$(host_arch)_$(release_type))\n+$(1)_cxxflags+=$($(1)_cxxflags_$(host_os)) $($(1)_cxxflags_$(host_os)_$(release_type))\n+$(1)_cxxflags+=$($(1)_cxxflags_$(host_arch)_$(host_os)) $($(1)_cxxflags_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_cppflags+=$($(1)_cppflags_$(release_type))\n+$(1)_cppflags+=$($(1)_cppflags_$(host_arch)) $($(1)_cppflags_$(host_arch)_$(release_type))\n+$(1)_cppflags+=$($(1)_cppflags_$(host_os)) $($(1)_cppflags_$(host_os)_$(release_type))\n+$(1)_cppflags+=$($(1)_cppflags_$(host_arch)_$(host_os)) $($(1)_cppflags_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_ldflags+=$($(1)_ldflags_$(release_type))\n+$(1)_ldflags+=$($(1)_ldflags_$(host_arch)) $($(1)_ldflags_$(host_arch)_$(release_type))\n+$(1)_ldflags+=$($(1)_ldflags_$(host_os)) $($(1)_ldflags_$(host_os)_$(release_type))\n+$(1)_ldflags+=$($(1)_ldflags_$(host_arch)_$(host_os)) $($(1)_ldflags_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_build_opts+=$$($(1)_build_opts_$(release_type))\n+$(1)_build_opts+=$$($(1)_build_opts_$(host_arch)) $$($(1)_build_opts_$(host_arch)_$(release_type))\n+$(1)_build_opts+=$$($(1)_build_opts_$(host_os)) $$($(1)_build_opts_$(host_os)_$(release_type))\n+$(1)_build_opts+=$$($(1)_build_opts_$(host_arch)_$(host_os)) $$($(1)_build_opts_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_config_opts+=$$($(1)_config_opts_$(release_type))\n+$(1)_config_opts+=$$($(1)_config_opts_$(host_arch)) $$($(1)_config_opts_$(host_arch)_$(release_type))\n+$(1)_config_opts+=$$($(1)_config_opts_$(host_os)) $$($(1)_config_opts_$(host_os)_$(release_type))\n+$(1)_config_opts+=$$($(1)_config_opts_$(host_arch)_$(host_os)) $$($(1)_config_opts_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_config_env+=$$($(1)_config_env_$(release_type))\n+$(1)_config_env+=$($(1)_config_env_$(host_arch)) $($(1)_config_env_$(host_arch)_$(release_type))\n+$(1)_config_env+=$($(1)_config_env_$(host_os)) $($(1)_config_env_$(host_os)_$(release_type))\n+$(1)_config_env+=$($(1)_config_env_$(host_arch)_$(host_os)) $($(1)_config_env_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_config_env+=PKG_CONFIG_LIBDIR=$($($(1)_type)_prefix)/lib/pkgconfig\n+$(1)_config_env+=PKG_CONFIG_PATH=$($($(1)_type)_prefix)/share/pkgconfig\n+$(1)_config_env+=PATH=$(build_prefix)/bin:$(PATH)\n+$(1)_build_env+=PATH=$(build_prefix)/bin:$(PATH)\n+$(1)_stage_env+=PATH=$(build_prefix)/bin:$(PATH)\n+$(1)_autoconf=./configure --host=$($($(1)_type)_host) --disable-dependency-tracking --prefix=$($($(1)_type)_prefix) $$($(1)_config_opts) CC=\"$$($(1)_cc)\" CXX=\"$$($(1)_cxx)\"\n+\n+ifneq ($($(1)_nm),)\n+$(1)_autoconf += NM=\"$$($(1)_nm)\"\n+endif\n+ifneq ($($(1)_ranlib),)\n+$(1)_autoconf += RANLIB=\"$$($(1)_ranlib)\"\n+endif\n+ifneq ($($(1)_ar),)\n+$(1)_autoconf += AR=\"$$($(1)_ar)\"\n+endif\n+ifneq ($($(1)_cflags),)\n+$(1)_autoconf += CFLAGS=\"$$($(1)_cflags)\"\n+endif\n+ifneq ($($(1)_cxxflags),)\n+$(1)_autoconf += CXXFLAGS=\"$$($(1)_cxxflags)\"\n+endif\n+ifneq ($($(1)_cppflags),)\n+$(1)_autoconf += CPPFLAGS=\"$$($(1)_cppflags)\"\n+endif\n+ifneq ($($(1)_ldflags),)\n+$(1)_autoconf += LDFLAGS=\"$$($(1)_ldflags)\"\n+endif\n+endef\n+\n+define int_add_cmds\n+$($(1)_fetched):\n+\t$(AT)echo Fetching $(1)...\n+\t$(AT)mkdir -p $$(@D) $(SOURCES_PATH)\n+\t$(AT)cd $$(@D); $(call $(1)_fetch_cmds,$(1))\n+\t$(AT)touch $$@\n+$($(1)_extracted): | $($(1)_fetched)\n+\t$(AT)echo Extracting $(1)...\n+\t$(AT)mkdir -p $$(@D)\n+\t$(AT)cd $$(@D); $(call $(1)_extract_cmds,$(1))\n+\t$(AT)touch $$@\n+$($(1)_preprocessed): | $($(1)_dependencies) $($(1)_extracted)\n+\t$(AT)echo Preprocessing $(1)...\n+\t$(AT)mkdir -p $$(@D) $($(1)_patch_dir)\n+\t$(AT)$(foreach patch,$($(1)_patches),cd $(PATCHES_PATH)/$(1); cp $(patch) $($(1)_patch_dir) ;)\n+\t$(AT)cd $$(@D); $(call $(1)_preprocess_cmds, $(1))\n+\t$(AT)touch $$@\n+$($(1)_configured): | $($(1)_preprocessed)\n+\t$(AT)echo Configuring $(1)...\n+\t$(AT)rm -rf $(host_prefix); mkdir -p $(host_prefix)/lib; cd $(host_prefix); $(foreach package,$($(1)_all_dependencies), tar xf $($(package)_cached); )\n+\t$(AT)mkdir -p $$(@D)\n+\t$(AT)+cd $$(@D); $($(1)_config_env) $(call $(1)_config_cmds, $(1))\n+\t$(AT)touch $$@\n+$($(1)_built): | $($(1)_configured)\n+\t$(AT)echo Building $(1)...\n+\t$(AT)mkdir -p $$(@D)\n+\t$(AT)+cd $$(@D); $($(1)_build_env) $(call $(1)_build_cmds, $(1))\n+\t$(AT)touch $$@\n+$($(1)_staged): | $($(1)_built)\n+\t$(AT)echo Staging $(1)...\n+\t$(AT)mkdir -p $($(1)_staging_dir)/$(host_prefix)\n+\t$(AT)cd $($(1)_build_dir); $($(1)_stage_env) $(call $(1)_stage_cmds, $(1))\n+\t$(AT)rm -rf $($(1)_extract_dir)\n+\t$(AT)touch $$@\n+$($(1)_postprocessed): | $($(1)_staged)\n+\t$(AT)echo Postprocessing $(1)...\n+\t$(AT)cd $($(1)_staging_prefix_dir); $(call $(1)_postprocess_cmds)\n+\t$(AT)touch $$@\n+$($(1)_cached): | $($(1)_dependencies) $($(1)_postprocessed)\n+\t$(AT)echo Caching $(1)...\n+\t$(AT)cd $$($(1)_staging_dir)/$(host_prefix); find . | sort | tar --no-recursion -czf $$($(1)_staging_dir)/$$(@F) -T -\n+\t$(AT)mkdir -p $$(@D)\n+\t$(AT)rm -rf $$(@D) && mkdir -p $$(@D)\n+\t$(AT)mv $$($(1)_staging_dir)/$$(@F) $$(@)\n+\t$(AT)rm -rf $($(1)_staging_dir)\n+\n+.PHONY: $(1)\n+$(1): | $($(1)_cached)\n+.SECONDARY: $($(1)_postprocessed) $($(1)_staged) $($(1)_built) $($(1)_configured) $($(1)_preprocessed) $($(1)_extracted) $($(1)_fetched)\n+\n+endef\n+\n+# These functions create the build targets for each package. They must be\n+# broken down into small steps so that each part is done for all packages\n+# before moving on to the next step. Otherwise, a package's info\n+# (build-id for example) would only be avilable to another package if it\n+# happened to be computed already.\n+\n+#set the type for host/build packages.\n+$(foreach native_package,$(native_packages),$(eval $(native_package)_type=build))\n+$(foreach package,$(packages),$(eval $(package)_type=$(host_arch)_$(host_os)))\n+\n+#set overridable defaults\n+$(foreach package,$(all_packages),$(eval $(call int_vars,$(package))))\n+\n+#include package files\n+$(foreach package,$(all_packages),$(eval include packages/$(package).mk))\n+\n+#compute a hash of all files that comprise this package's build recipe\n+$(foreach package,$(all_packages),$(eval $(call int_get_build_recipe_hash,$(package))))\n+\n+#generate a unique id for this package, incorporating its dependencies as well\n+$(foreach package,$(all_packages),$(eval $(call int_get_build_id,$(package))))\n+\n+#compute final vars after reading package vars\n+$(foreach package,$(all_packages),$(eval $(call int_config_attach_build_config,$(package))))\n+\n+#create build targets\n+$(foreach package,$(all_packages),$(eval $(call int_add_cmds,$(package))))\n+\n+#special exception: if a toolchain package exists, all non-native packages depend on it\n+$(foreach package,$(packages),$(eval $($(package)_unpacked): |$($($(host_arch)_$(host_os)_native_toolchain)_cached) ))"
      },
      {
        "sha": "8d718eba17be837c91e492ad5b911933e5a69774",
        "filename": "depends/hosts/darwin.mk",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,16 @@\n+OSX_MIN_VERSION=10.6\n+OSX_SDK_VERSION=10.7\n+OSX_SDK=$(SDK_PATH)/MacOSX$(OSX_SDK_VERSION).sdk\n+darwin_CC=clang -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK)\n+darwin_CXX=clang++ -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK)\n+\n+darwin_CFLAGS=-pipe\n+darwin_CXXFLAGS=$(darwin_CFLAGS)\n+\n+darwin_release_CFLAGS=-O2\n+darwin_release_CXXFLAGS=$(darwin_release_CFLAGS)\n+\n+darwin_debug_CFLAGS=-O1\n+darwin_debug_CXXFLAGS=$(darwin_debug_CFLAGS)\n+\n+darwin_native_toolchain=native_cctools"
      },
      {
        "sha": "6f60d6b3fd004e9317db4717bf7dcb68b9dd43eb",
        "filename": "depends/hosts/default.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/hosts/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/hosts/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/default.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,26 @@\n+default_host_CC = $(host_toolchain)gcc\n+default_host_CXX = $(host_toolchain)g++\n+default_host_AR = $(host_toolchain)ar\n+default_host_RANLIB = $(host_toolchain)ranlib\n+default_host_STRIP = $(host_toolchain)strip\n+default_host_LIBTOOL = $(host_toolchain)libtool\n+default_host_INSTALL_NAME_TOOL = $(host_toolchain)install_name_tool\n+default_host_OTOOL = $(host_toolchain)otool\n+default_host_NM = $(host_toolchain)nm\n+\n+define add_host_tool_func\n+$(host_os)_$1?=$$(default_host_$1)\n+$(host_arch)_$(host_os)_$1?=$$($(host_os)_$1)\n+$(host_arch)_$(host_os)_$(release_type)_$1?=$$($(host_os)_$1)\n+host_$1=$$($(host_arch)_$(host_os)_$1)\n+endef\n+\n+define add_host_flags_func\n+$(host_arch)_$(host_os)_$1 += $($(host_os)_$1)\n+$(host_arch)_$(host_os)_$(release_type)_$1 += $($(host_os)_$(release_type)_$1)\n+host_$1 = $$($(host_arch)_$(host_os)_$1)\n+host_$(release_type)_$1 = $$($(host_arch)_$(host_os)_$(release_type)_$1)\n+endef\n+\n+$(foreach tool,CC CXX AR RANLIB STRIP NM LIBTOOL OTOOL INSTALL_NAME_TOOL,$(eval $(call add_host_tool_func,$(tool))))\n+$(foreach flags,CFLAGS CXXFLAGS CPPFLAGS LDFLAGS, $(eval $(call add_host_flags_func,$(flags))))"
      },
      {
        "sha": "b13a0f1ad714ae19ec7fc4b68d162095b9c62255",
        "filename": "depends/hosts/linux.mk",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/hosts/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/hosts/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/linux.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,31 @@\n+linux_CFLAGS=-pipe\n+linux_CXXFLAGS=$(linux_CFLAGS)\n+\n+linux_release_CFLAGS=-O2\n+linux_release_CXXFLAGS=$(linux_release_CFLAGS)\n+\n+linux_debug_CFLAGS=-O1\n+linux_debug_CXXFLAGS=$(linux_debug_CFLAGS)\n+\n+linux_debug_CPPFLAGS=-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC\n+\n+ifeq (86,$(findstring 86,$(build_arch)))\n+i686_linux_CC=gcc -m32\n+i686_linux_CXX=g++ -m32\n+i686_linux_AR=ar\n+i686_linux_RANLIB=ranlib\n+i686_linux_NM=nm\n+i686_linux_STRIP=strip\n+\n+x86_64_linux_CC=gcc -m64\n+x86_64_linux_CXX=g++ -m64\n+x86_64_linux_AR=ar\n+x86_64_linux_RANLIB=ranlib\n+x86_64_linux_NM=nm\n+x86_64_linux_STRIP=strip\n+else\n+i686_linux_CC=$(default_host_CC) -m32\n+i686_linux_CXX=$(default_host_CXX) -m32\n+x86_64_linux_CC=$(default_host_CC) -m64\n+x86_64_linux_CXX=$(default_host_CXX) -m64\n+endif"
      },
      {
        "sha": "dbfb62fdcf98695d515e56897ee488703e002054",
        "filename": "depends/hosts/mingw32.mk",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/hosts/mingw32.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/hosts/mingw32.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/mingw32.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,10 @@\n+mingw32_CFLAGS=-pipe\n+mingw32_CXXFLAGS=$(mingw32_CFLAGS)\n+\n+mingw32_release_CFLAGS=-O2\n+mingw32_release_CXXFLAGS=$(mingw32_release_CFLAGS)\n+\n+mingw32_debug_CFLAGS=-O1\n+mingw32_debug_CXXFLAGS=$(mingw32_debug_CFLAGS)\n+\n+mingw32_debug_CPPFLAGS=-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC"
      },
      {
        "sha": "f39925723b5aa2bd9ce4a88362ad7457d9e5d22d",
        "filename": "depends/packages/bdb.mk",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,29 @@\n+package=bdb\n+$(package)_version=4.8.30\n+$(package)_download_path=http://download.oracle.com/berkeley-db\n+$(package)_file_name=db-$($(package)_version).NC.tar.gz\n+$(package)_sha256_hash=12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef\n+$(package)_build_subdir=build_unix\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared --enable-cxx --disable-replication\n+$(package)_config_opts_mingw32=--enable-mingw\n+$(package)_config_opts_x86_64_linux=--with-pic\n+$(package)_config_opts_arm_linux=--with-pic\n+endef\n+\n+define $(package)_preprocess_cmds\n+  sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' dbinc/atomic.h\n+endef\n+\n+define $(package)_config_cmds\n+  ../dist/$($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) libdb_cxx-4.8.a libdb-4.8.a\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install_lib install_include\n+endef"
      },
      {
        "sha": "53c4c3c74e10661d687127460c56d14e26dc8d67",
        "filename": "depends/packages/boost.mk",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,45 @@\n+package=boost\n+$(package)_version=1_55_0\n+$(package)_download_path=http://sourceforge.net/projects/boost/files/boost/1.55.0\n+$(package)_file_name=$(package)_$($(package)_version).tar.bz2\n+$(package)_sha256_hash=fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52\n+$(package)_patches=darwin_boost_atomic-1.patch darwin_boost_atomic-2.patch\n+\n+define $(package)_set_vars\n+$(package)_config_opts_release=variant=release\n+$(package)_config_opts_debug=variant=debug\n+$(package)_config_opts=--layout=tagged --build-type=complete --user-config=user-config.jam\n+$(package)_config_opts+=threading=multi link=static -sNO_BZIP2=1 -sNO_ZLIB=1\n+$(package)_config_opts_linux=threadapi=pthread runtime-link=shared\n+$(package)_config_opts_darwin=--toolset=darwin-4.2.1 runtime-link=shared\n+$(package)_config_opts_mingw32=binary-format=pe target-os=windows threadapi=win32 runtime-link=static\n+$(package)_config_opts_x86_64_mingw32=address-model=64\n+$(package)_config_opts_i686_mingw32=address-model=32\n+$(package)_config_opts_i686_linux=address-model=32 architecture=x86\n+$(package)_toolset_$(host_os)=gcc\n+$(package)_archiver_$(host_os)=$($(package)_ar)\n+$(package)_toolset_darwin=darwin\n+$(package)_archiver_darwin=$($(package)_libtool)\n+$(package)_config_libraries=chrono,filesystem,program_options,system,thread,test\n+$(package)_cxxflags=-fvisibility=hidden\n+$(package)_cxxflags_x86_64_linux=-fPIC\n+$(package)_cxxflags_arm_linux=-fPIC\n+endef\n+\n+define $(package)_preprocess_cmds\n+  patch -p2 < $($(package)_patch_dir)/darwin_boost_atomic-1.patch && \\\n+  patch -p2 < $($(package)_patch_dir)/darwin_boost_atomic-2.patch && \\\n+  echo \"using $(boost_toolset_$(host_os)) : : $($(package)_cxx) : <cxxflags>\\\"$($(package)_cxxflags) $($(package)_cppflags)\\\" <linkflags>\\\"$($(package)_ldflags)\\\" <archiver>\\\"$(boost_archiver_$(host_os))\\\" <striper>\\\"$(host_STRIP)\\\"  <ranlib>\\\"$(host_RANLIB)\\\" <rc>\\\"$(host_WINDRES)\\\" : ;\" > user-config.jam\n+endef\n+\n+define $(package)_config_cmds\n+  ./bootstrap.sh --without-icu --with-libraries=$(boost_config_libraries)\n+endef\n+\n+define $(package)_build_cmds\n+  ./b2 -d2 -j2 -d1 --prefix=$($(package)_staging_prefix_dir) $($(package)_config_opts) stage\n+endef\n+\n+define $(package)_stage_cmds\n+  ./b2 -d0 -j4 --prefix=$($(package)_staging_prefix_dir) $($(package)_config_opts) install\n+endef"
      },
      {
        "sha": "8ac9ab742bfe48ca5b57f7dde876fc817a268c65",
        "filename": "depends/packages/dbus.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/dbus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/dbus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/dbus.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,23 @@\n+package=dbus\n+$(package)_version=1.8.6\n+$(package)_download_path=http://dbus.freedesktop.org/releases/dbus\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=eded83ca007b719f32761e60fd8b9ffd0f5796a4caf455b01b5a5ef740ebd23f\n+$(package)_dependencies=expat\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-tests --disable-doxygen-docs --disable-xml-docs --disable-static --without-x\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C dbus libdbus-1.la\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C dbus DESTDIR=$($(package)_staging_dir) install-libLTLIBRARIES install-dbusincludeHEADERS install-nodist_dbusarchincludeHEADERS && \\\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-pkgconfigDATA\n+endef"
      },
      {
        "sha": "1ac443537420bf29838496a17c2078b5a6ed70d0",
        "filename": "depends/packages/expat.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,21 @@\n+package=expat\n+$(package)_version=2.1.0\n+$(package)_download_path=http://sourceforge.net/projects/expat/files/expat/$($(package)_version)\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=823705472f816df21c8f6aa026dd162b280806838bb55b3432b0fb1fcca7eb86\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-static\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "2cf553ed9657b4e9ec88bfcd7cf437c36200f57a",
        "filename": "depends/packages/fontconfig.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,22 @@\n+package=fontconfig\n+$(package)_version=2.11.1\n+$(package)_download_path=http://www.freedesktop.org/software/fontconfig/release/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=dc62447533bca844463a3c3fd4083b57c90f18a70506e7a9f4936b5a1e516a99\n+$(package)_dependencies=freetype expat\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-docs --disable-static\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "b83cbd93eafea9e046aa0b8864322016e355a3d5",
        "filename": "depends/packages/freetype.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,22 @@\n+package=freetype\n+$(package)_version=2.5.3\n+$(package)_download_path=http://downloads.sourceforge.net/$(package)\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=c0848b29d52ef3ca27ad92e08351f023c5e24ce8cea7d8fe69fc96358e65f75e\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--without-zlib --without-png --disable-static\n+  $(package)_config_opts_x86_64_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "bcbf50ceaede69f70a3f28092207605d4bc55009",
        "filename": "depends/packages/gmp.mk",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/gmp.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/gmp.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/gmp.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,30 @@\n+package=gmp\n+$(package)_version=6.0.0a\n+$(package)_download_path=https://gmplib.org/download/gmp\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=7f8e9a804b9c6d07164cf754207be838ece1219425d64e28cfa3e70d5c759aaf\n+$(package)_patches=arm_gmp_build_fix.patch darwin_gmp_build_fix.patch\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/arm_gmp_build_fix.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/darwin_gmp_build_fix.patch\n+endef\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared CC_FOR_BUILD=$(build_CC)\n+  $(package)_config_opts_x86_64_darwin=--with-pic\n+  $(package)_config_opts_x86_64_linux=--with-pic\n+  $(package)_config_opts_arm_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "144021e34b041089da3b9e2654bf297ec237a921",
        "filename": "depends/packages/libX11.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/libX11.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/libX11.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libX11.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,23 @@\n+package=libX11\n+$(package)_version=1.6.2\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=2aa027e837231d2eeea90f3a4afe19948a6eb4c8b2bec0241eba7dbc8106bd16\n+$(package)_dependencies=libxcb xtrans xextproto xproto\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-xkb --disable-static\n+$(package)_config_opts_x86_64_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "8c9b21846b262a2e8c5eede8a11a5625427dd14c",
        "filename": "depends/packages/libXau.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,23 @@\n+package=libXau\n+$(package)_version=1.0.8\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=fdd477320aeb5cdd67272838722d6b7d544887dfe7de46e1e7cc0c27c2bea4f2\n+$(package)_dependencies=xproto\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared\n+  $(package)_config_opts_x86_64_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "4db836066f96e37cf7834fcf10de4da331b1fbe1",
        "filename": "depends/packages/libXext.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/libXext.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/libXext.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXext.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,22 @@\n+package=libXext\n+$(package)_version=1.3.2\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=f829075bc646cdc085fa25d98d5885d83b1759ceb355933127c257e8e50432e0\n+$(package)_dependencies=xproto xextproto libX11 libXau\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-static\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "f29b577f8acabf26cf290c70e2178bc5aec5beb4",
        "filename": "depends/packages/libxcb.mk",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,30 @@\n+package=libxcb\n+$(package)_version=1.10\n+$(package)_download_path=http://xcb.freedesktop.org/dist\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=98d9ab05b636dd088603b64229dd1ab2d2cc02ab807892e107d674f9c3f2d5b5\n+$(package)_dependencies=xcb_proto libXau xproto\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-static\n+endef\n+\n+define $(package)_preprocess_cmds\n+  sed \"s/pthread-stubs//\" -i configure\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf share/man share/doc\n+endef"
      },
      {
        "sha": "00101f1b91af4ed074dc8dfd9179afeb53689bb1",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,28 @@\n+package=miniupnpc\n+$(package)_version=1.9.20140701\n+$(package)_download_path=http://miniupnp.free.fr/files\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=26f3985bad7768b8483b793448ae49414cdc4451d0ec83e7c1944367e15f9f07\n+\n+define $(package)_set_vars\n+$(package)_build_opts=CC=\"$($(package)_cc)\"\n+$(package)_build_opts_darwin=OS=Darwin\n+$(package)_build_opts_mingw32=-f Makefile.mingw\n+$(package)_build_env+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags)\" AR=\"$($(package)_ar)\"\n+endef\n+\n+define $(package)_preprocess_cmds\n+  mkdir dll && \\\n+  sed -e 's|MINIUPNPC_VERSION_STRING \\\"version\\\"|MINIUPNPC_VERSION_STRING \\\"$($(package)_version)\\\"|' -e 's|OS/version|$(host)|' miniupnpcstrings.h.in > miniupnpcstrings.h && \\\n+  sed -i.old \"s|miniupnpcstrings.h: miniupnpcstrings.h.in wingenminiupnpcstrings|miniupnpcstrings.h: miniupnpcstrings.h.in|\" Makefile.mingw\n+endef\n+\n+define $(package)_build_cmds\n+\t$(MAKE) libminiupnpc.a $($(package)_build_opts)\n+endef\n+\n+define $(package)_stage_cmds\n+\tmkdir -p $($(package)_staging_prefix_dir)/include/miniupnpc $($(package)_staging_prefix_dir)/lib &&\\\n+\tinstall *.h $($(package)_staging_prefix_dir)/include/miniupnpc &&\\\n+\tinstall libminiupnpc.a $($(package)_staging_prefix_dir)/lib\n+endef"
      },
      {
        "sha": "3226e89a63eae9dd1aefece2db885580f4fa5d56",
        "filename": "depends/packages/native_ccache.mk",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,25 @@\n+package=native_ccache\n+$(package)_version=3.1.9\n+$(package)_download_path=http://samba.org/ftp/ccache\n+$(package)_file_name=ccache-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=04d3e2e438ac8d4cc4b110b68cdd61bd59226c6588739a4a386869467f5ced7c\n+\n+define $(package)_set_vars\n+$(package)_config_opts=\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf lib include\n+endef"
      },
      {
        "sha": "ad989cb544bec4cf6c731ee3e11f3e846d3a55b0",
        "filename": "depends/packages/native_cctools.mk",
        "status": "added",
        "additions": 80,
        "deletions": 0,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,80 @@\n+package=native_cctools\n+$(package)_version=809\n+$(package)_download_path=http://www.opensource.apple.com/tarballs/cctools\n+$(package)_file_name=cctools-$($(package)_version).tar.gz\n+$(package)_sha256_hash=03ba62749b843b131c7304a044a98c6ffacd65b1399b921d69add0375f79d8ad\n+$(package)_build_subdir=cctools2odcctools/odcctools-$($(package)_version)\n+$(package)_dependencies=native_libuuid native_openssl\n+$(package)_ld64_download_file=ld64-127.2.tar.gz\n+$(package)_ld64_download_path=http://www.opensource.apple.com/tarballs/ld64\n+$(package)_ld64_file_name=$($(package)_ld64_download_file)\n+$(package)_ld64_sha256_hash=97b75547b2bd761306ab3e15ae297f01e7ab9760b922bc657f4ef72e4e052142\n+$(package)_dyld_download_file=dyld-195.5.tar.gz\n+$(package)_dyld_download_path=http://www.opensource.apple.com/tarballs/dyld\n+$(package)_dyld_file_name=$($(package)_dyld_download_file)\n+$(package)_dyld_sha256_hash=2cf0484c87cf79b606b351a7055a247dae84093ae92c747a74e0cde2c8c8f83c\n+$(package)_toolchain4_download_file=10cc648683617cca8bcbeae507888099b41b530c.tar.gz\n+$(package)_toolchain4_download_path=https://github.com/mingwandroid/toolchain4/archive\n+$(package)_toolchain4_file_name=toolchain4-1.tar.gz\n+$(package)_toolchain4_sha256_hash=18406961fd4a1ec5c7ea35c91d6a80a2f8bb797a2bd243a610bd75e13eff9aca\n+$(package)_clang_download_file=clang+llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n+$(package)_clang_download_path=http://llvm.org/releases/3.2\n+$(package)_clang_file_name=clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz\n+$(package)_clang_sha256_hash=b9d57a88f9514fa1f327a1a703756d0c1c960f4c58494a5bd80313245d13ffff\n+\n+define $(package)_fetch_cmds\n+$(call fetch_file,$(package),$($(package)_download_path),$($(package)_download_file),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_ld64_download_path),$($(package)_ld64_download_file),$($(package)_ld64_file_name),$($(package)_ld64_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_dyld_download_path),$($(package)_dyld_download_file),$($(package)_dyld_file_name),$($(package)_dyld_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_clang_download_path),$($(package)_clang_download_file),$($(package)_clang_file_name),$($(package)_clang_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_toolchain4_download_path),$($(package)_toolchain4_download_file),$($(package)_toolchain4_file_name),$($(package)_toolchain4_sha256_hash))\n+endef\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--target=$(host) --with-sysroot=$(OSX_SDK)\n+$(package)_cflags+=-m32\n+$(package)_cxxflags+=-m32\n+$(package)_cppflags+=-D__DARWIN_UNIX03 -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS\n+$(package)_ldflags+=-m32 -Wl,-rpath=\\\\$$$$$$$$\\$$$$$$$$ORIGIN/../lib\n+$(package)_ldflags+=-L$$(native_cctools_extract_dir)/clang+llvm-3.2-x86-linux-ubuntu-12.04/lib\n+endef\n+define $(package)_extract_cmds\n+  tar --strip-components=1 -xf $(SOURCES_PATH)/$($(package)_toolchain4_file_name) && \\\n+  ln -sf $($(package)_source) cctools2odcctools/$($(package)_file_name) && \\\n+  ln -sf $(SOURCES_PATH)/$($(package)_ld64_file_name) cctools2odcctools/$($(package)_ld64_file_name) && \\\n+  ln -sf $(SOURCES_PATH)/$($(package)_dyld_file_name) cctools2odcctools/$($(package)_dyld_file_name) && \\\n+  tar xf $(SOURCES_PATH)/$($(package)_clang_file_name) && \\\n+  mkdir -p $(SDK_PATH) sdks &&\\\n+  cd sdks; ln -sf $(OSX_SDK) MacOSX$(OSX_SDK_VERSION).sdk\n+endef\n+\n+define $(package)_preprocess_cmds\n+  sed -i \"s|GCC_DIR|LLVM_CLANG_DIR|g\" cctools2odcctools/extract.sh && \\\n+  sed -i \"s|llvmgcc42-2336.1|clang+llvm-3.2-x86-linux-ubuntu-12.04|g\" cctools2odcctools/extract.sh && \\\n+  sed -i \"s|/llvmCore/include/llvm-c|/include/llvm-c \\$$$${LLVM_CLANG_DIR}/include/llvm |\" cctools2odcctools/extract.sh && \\\n+  sed -i \"s|fAC_INIT|AC_INIT|\" cctools2odcctools/files/configure.ac && \\\n+  sed -i 's/\\# Dynamically linked LTO/\\t ;\\&\\n\\t linux*)\\n# Dynamically linked LTO/' cctools2odcctools/files/configure.ac && \\\n+  cd cctools2odcctools; ./extract.sh --osxver $(OSX_SDK_VERSION) && \\\n+  sed -i \"s|define\\tPC|define\\tPC_|\" odcctools-809/include/architecture/sparc/reg.h\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install && \\\n+  cd ../../clang+llvm-3.2-x86-linux-ubuntu-12.04 && \\\n+  mkdir -p $($(package)_staging_prefix_dir)/lib/clang/3.2/include && \\\n+  mkdir -p $($(package)_staging_prefix_dir)/bin && \\\n+  cp -P bin/clang bin/clang++ $($(package)_staging_prefix_dir)/bin/ &&\\\n+  cp lib/libLTO.so $($(package)_staging_prefix_dir)/lib/ && \\\n+  cp lib/clang/3.2/include/* $($(package)_staging_prefix_dir)/lib/clang/3.2/include/ && \\\n+  echo \"#!/bin/sh\" > $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil && \\\n+  echo \"exit 0\" >> $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil && \\\n+  chmod +x $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil\n+endef"
      },
      {
        "sha": "2cc388b4b30c3b953463f3840539e97410d79463",
        "filename": "depends/packages/native_cdrkit.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_cdrkit.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_cdrkit.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cdrkit.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,26 @@\n+package=native_cdrkit\n+$(package)_version=1.1.11\n+$(package)_download_path=http://distro.ibiblio.org/fatdog/source/c\n+$(package)_file_name=cdrkit-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=b50d64c214a65b1a79afe3a964c691931a4233e2ba605d793eb85d0ac3652564\n+$(package)_patches=cdrkit-deterministic.patch\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/cdrkit-deterministic.patch\n+endef\n+\n+define $(package)_config_cmds\n+  cmake -DCMAKE_INSTALL_PREFIX=$(build_prefix)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) genisoimage\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) -C genisoimage install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm bin/isovfy bin/isoinfo bin/isodump bin/isodebug bin/devdump\n+endef"
      },
      {
        "sha": "3d430d4306a586f05f78facfe023b80cc4d27791",
        "filename": "depends/packages/native_comparisontool.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_comparisontool.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_comparisontool.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_comparisontool.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,21 @@\n+package=native_comparisontool\n+$(package)_version=0f7b5d8\n+$(package)_download_path=https://github.com/TheBlueMatt/test-scripts/raw/38b490a2599d422b12d5ce8f165792f63fd8f54f\n+$(package)_file_name=pull-tests-$($(package)_version).jar\n+$(package)_sha256_hash=ecd43b988a8b673b483e4f69f931596360a5e90fc415c75c4c259faa690df198\n+$(package)_install_dirname=BitcoindComparisonTool_jar\n+$(package)_install_filename=BitcoindComparisonTool.jar\n+\n+define $(package)_extract_cmds\n+endef\n+\n+define $(package)_configure_cmds\n+endef\n+\n+define $(package)_build_cmds\n+endef\n+\n+define $(package)_stage_cmds\n+  mkdir -p $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname) && \\\n+  mv $(SOURCES_PATH)/$($(package)_file_name) $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname)/$($(package)_install_filename)\n+endef"
      },
      {
        "sha": "a4ffb6046ccc4b50d7bded21207337a718ba70df",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,22 @@\n+package=native_libdmg-hfsplus\n+$(package)_version=0.1\n+$(package)_download_path=https://github.com/theuni/libdmg-hfsplus/archive\n+$(package)_file_name=libdmg-hfsplus-v$($(package)_version).tar.gz\n+$(package)_sha256_hash=6569a02eb31c2827080d7d59001869ea14484c281efab0ae7f2b86af5c3120b3\n+$(package)_build_subdir=build\n+\n+define $(package)_preprocess_cmds\n+  mkdir build\n+endef\n+\n+define $(package)_config_cmds\n+  cmake -DCMAKE_INSTALL_PREFIX:PATH=$(build_prefix)/bin ..\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C dmg\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) -C dmg install\n+endef"
      },
      {
        "sha": "b25540f80dfab25087062ea064fb9cb6d31a5679",
        "filename": "depends/packages/native_libuuid.mk",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_libuuid.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_libuuid.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libuuid.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,24 @@\n+package:=native_libuuid\n+$(package)_version=1.41.14\n+$(package)_download_path=http://downloads.sourceforge.net/e2fsprogs\n+$(package)_file_name=e2fsprogs-libs-$($(package)_version).tar.gz\n+$(package)_sha256_hash=dbc7a138a3218d9b80a0626b5b692d76934d6746d8cbb762751be33785d8d9f5\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-elf-shlibs --disable-uuidd\n+$(package)_cflags+=-m32\n+$(package)_ldflags+=-m32\n+$(package)_cxxflags+=-m32\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C lib/uuid\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) -C lib/uuid install\n+endef"
      },
      {
        "sha": "1f25d6afccd600956caf1db9322d8c5240e5472d",
        "filename": "depends/packages/native_openssl.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_openssl.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,21 @@\n+package=native_openssl\n+$(package)_version=1.0.1h\n+$(package)_download_path=https://www.openssl.org/source\n+$(package)_file_name=openssl-$($(package)_version).tar.gz\n+$(package)_sha256_hash=9d1c8a9836aa63e2c6adb684186cbd4371c9e9dcc01d6e3bb447abf2d4d3d093\n+define $(package)_set_vars\n+$(package)_build_config_opts= --prefix=$(build_prefix) no-zlib no-shared no-krb5C linux-generic32 -m32\n+endef\n+\n+define $(package)_config_cmds\n+  ./Configure $($(package)_build_config_opts) &&\\\n+  sed -i \"s|engines apps test|engines|\" Makefile\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -j1\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) INSTALL_PREFIX=$($(package)_staging_dir) -j1 install_sw\n+endef"
      },
      {
        "sha": "ed1a771f0d5eeb755f1fbda066f624e89c2ec3a1",
        "filename": "depends/packages/native_protobuf.mk",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/native_protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_protobuf.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,25 @@\n+package=native_protobuf\n+$(package)_version=2.5.0\n+$(package)_download_path=https://protobuf.googlecode.com/files\n+$(package)_file_name=protobuf-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C src protoc\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C src DESTDIR=$($(package)_staging_dir) install-strip\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf lib include\n+endef"
      },
      {
        "sha": "70b0b8d39f20eb28a04c0eb917c8bd69a46e4192",
        "filename": "depends/packages/openssl.mk",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,40 @@\n+package=openssl\n+$(package)_version=1.0.1j\n+$(package)_download_path=https://www.openssl.org/source\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=1b60ca8789ba6f03e8ef20da2293b8dc131c39d83814e775069f02d26354edf3\n+\n+define $(package)_set_vars\n+$(package)_config_env=AR=\"$($(package)_ar)\" RANLIB=\"$($(package)_ranlib)\" CC=\"$($(package)_cc)\"\n+$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl no-zlib no-shared no-dso\n+$(package)_config_opts+=no-krb5 no-camellia no-capieng no-cast no-cms no-dtls1 no-gost no-gmp no-heartbeats no-idea no-jpake no-md2\n+$(package)_config_opts+=no-mdc2 no-rc5 no-rdrand no-rfc3779 no-rsax no-sctp no-seed no-sha0 no-static_engine no-whirlpool no-rc2 no-rc4 no-ssl2 no-ssl3\n+$(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n+$(package)_config_opts_x86_64_linux=-fPIC linux-x86_64\n+$(package)_config_opts_arm_linux=-fPIC linux-generic32\n+$(package)_config_opts_x86_64_darwin=darwin64-x86_64-cc\n+$(package)_config_opts_x86_64_mingw32=mingw64\n+$(package)_config_opts_i686_mingw32=mingw\n+$(package)_config_opts_i686_linux=linux-generic32 -fPIC\n+endef\n+\n+define $(package)_preprocess_cmds\n+  sed -i.old \"/define DATE/d\" crypto/Makefile && \\\n+  sed -i.old \"s|engines apps test|engines|\" Makefile.org\n+endef\n+\n+define $(package)_config_cmds\n+  ./Configure $($(package)_config_opts)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -j1 build_libs libcrypto.pc libssl.pc openssl.pc\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) INSTALL_PREFIX=$($(package)_staging_dir) -j1 install_sw\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf share bin etc\n+endef"
      },
      {
        "sha": "0e1fbeffaae4f21a1520d0a57d864b6282bcc851",
        "filename": "depends/packages/packages.mk",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,14 @@\n+packages:=boost openssl gmp\n+native_packages := native_ccache native_comparisontool\n+\n+qt_native_packages = native_protobuf\n+qt_packages = qt qrencode protobuf\n+qt_linux_packages=expat dbus libxcb xcb_proto libXau xproto freetype fontconfig libX11 xextproto libXext xtrans\n+\n+wallet_packages=bdb\n+\n+upnp_packages=miniupnpc\n+\n+ifneq ($(build_os),darwin)\n+darwin_native_packages=native_libuuid native_openssl native_cctools native_cdrkit native_libdmg-hfsplus\n+endif"
      },
      {
        "sha": "716f837853b52c06f058799efd37e5d909375030",
        "filename": "depends/packages/protobuf.mk",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,28 @@\n+package=protobuf\n+$(package)_version=$(native_$(package)_version)\n+$(package)_download_path=$(native_$(package)_download_path)\n+$(package)_file_name=$(native_$(package)_file_name)\n+$(package)_sha256_hash=$(native_$(package)_sha256_hash)\n+$(package)_dependencies=native_$(package)\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared --with-protoc=$(build_prefix)/bin/protoc\n+  $(package)_config_opts_x86_64_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C src libprotobuf.la\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) -C src install-libLTLIBRARIES install-nobase_includeHEADERS &&\\\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-pkgconfigDATA\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm lib/libprotoc.a\n+endef"
      },
      {
        "sha": "69d2982cbcb915e3e27c3e669a9b5fbfdffbf95d",
        "filename": "depends/packages/qrencode.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,22 @@\n+package=qrencode\n+$(package)_version=3.4.3\n+$(package)_download_path=https://fukuchi.org/works/qrencode/\n+$(package)_file_name=qrencode-$(qrencode_version).tar.bz2\n+$(package)_sha256_hash=dfd71487513c871bad485806bfd1fdb304dedc84d2b01a8fb8e0940b50597a98\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared -without-tools --disable-sdltest\n+$(package)_config_opts_x86_64_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "51f2ea663ba908c530ef218581ce81889eb48ba8",
        "filename": "depends/packages/qt.mk",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,97 @@\n+PACKAGE=qt\n+$(package)_version=5.2.1\n+$(package)_download_path=http://download.qt-project.org/official_releases/qt/5.2/$($(package)_version)/single\n+$(package)_file_name=$(package)-everywhere-opensource-src-$($(package)_version).tar.gz\n+$(package)_sha256_hash=84e924181d4ad6db00239d87250cc89868484a14841f77fb85ab1f1dbdcd7da1\n+$(package)_dependencies=openssl\n+$(package)_linux_dependencies=freetype fontconfig dbus libxcb libX11 xproto libXext\n+$(package)_build_subdir=qtbase\n+$(package)_qt_libs=corelib network widgets gui plugins testlib\n+$(package)_patches=mac-qmake.conf fix-xcb-include-order.patch qt5-tablet-osx.patch\n+\n+define $(package)_set_vars\n+$(package)_config_opts_release = -release\n+$(package)_config_opts_debug   = -debug\n+$(package)_config_opts += -opensource -confirm-license -no-audio-backend -no-sql-tds -no-glib -no-icu\n+$(package)_config_opts += -no-cups -no-iconv -no-gif -no-audio-backend -no-freetype\n+$(package)_config_opts += -no-sql-sqlite -no-nis -no-cups -no-iconv -no-pch\n+$(package)_config_opts += -no-gif -no-feature-style-plastique\n+$(package)_config_opts += -no-qml-debug -no-pch -no-nis -nomake examples -nomake tests\n+$(package)_config_opts += -no-feature-style-cde -no-feature-style-s60 -no-feature-style-motif\n+$(package)_config_opts += -no-feature-style-windowsmobile -no-feature-style-windowsce\n+$(package)_config_opts += -no-feature-style-cleanlooks\n+$(package)_config_opts += -no-sql-db2 -no-sql-ibase -no-sql-oci -no-sql-tds -no-sql-mysql\n+$(package)_config_opts += -no-sql-odbc -no-sql-psql -no-sql-sqlite -no-sql-sqlite2\n+$(package)_config_opts += -skip qtsvg -skip qtwebkit -skip qtwebkit-examples -skip qtserialport\n+$(package)_config_opts += -skip qtdeclarative -skip qtmultimedia -skip qtimageformats -skip qtx11extras\n+$(package)_config_opts += -skip qtlocation -skip qtsensors -skip qtquick1 -skip qtxmlpatterns\n+$(package)_config_opts += -skip qtquickcontrols -skip qtactiveqt -skip qtconnectivity -skip qtmacextras\n+$(package)_config_opts += -skip qtwinextras -skip qtxmlpatterns -skip qtscript -skip qtdoc\n+\n+$(package)_config_opts += -prefix $(host_prefix) -bindir $(build_prefix)/bin\n+$(package)_config_opts += -no-c++11 -openssl-linked  -v -static -silent -pkg-config\n+$(package)_config_opts += -qt-libpng -qt-libjpeg -qt-zlib -qt-pcre\n+\n+ifneq ($(build_os),darwin)\n+$(package)_config_opts_darwin = -xplatform macx-clang-linux -device-option MAC_SDK_PATH=$(OSX_SDK) -device-option CROSS_COMPILE=\"$(host)-\"\n+$(package)_config_opts_darwin += -device-option MAC_MIN_VERSION=$(OSX_MIN_VERSION) -device-option MAC_TARGET=$(host)\n+endif\n+\n+$(package)_config_opts_linux  = -qt-xkbcommon -qt-xcb  -no-eglfs -no-linuxfb -system-freetype -no-sm -fontconfig -no-xinput2 -no-libudev -no-egl -no-opengl\n+$(package)_config_opts_arm_linux  = -platform linux-g++ -xplatform $(host)\n+$(package)_config_opts_i686_linux  = -xplatform linux-g++-32\n+$(package)_config_opts_mingw32  = -no-opengl -xplatform win32-g++ -device-option CROSS_COMPILE=\"$(host)-\"\n+$(package)_build_env  = QT_RCC_TEST=1\n+endef\n+\n+define $(package)_preprocess_cmds\n+  sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n+  sed -i.old \"s/src_plugins.depends = src_sql src_xml src_network/src_plugins.depends = src_xml src_network/\" qtbase/src/src.pro && \\\n+  sed -i.old \"/XIproto.h/d\" qtbase/src/plugins/platforms/xcb/qxcbxsettings.cpp && \\\n+  mkdir -p qtbase/mkspecs/macx-clang-linux &&\\\n+  cp -f qtbase/mkspecs/macx-clang/Info.plist.lib qtbase/mkspecs/macx-clang-linux/ &&\\\n+  cp -f qtbase/mkspecs/macx-clang/Info.plist.app qtbase/mkspecs/macx-clang-linux/ &&\\\n+  cp -f qtbase/mkspecs/macx-clang/qplatformdefs.h qtbase/mkspecs/macx-clang-linux/ &&\\\n+  cp -f $($(package)_patch_dir)/mac-qmake.conf qtbase/mkspecs/macx-clang-linux/qmake.conf && \\\n+  patch -p1 < $($(package)_patch_dir)/fix-xcb-include-order.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/qt5-tablet-osx.patch && \\\n+  echo \"QMAKE_CFLAGS     += $($(package)_cflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n+  echo \"QMAKE_CXXFLAGS   += $($(package)_cxxflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n+  echo \"QMAKE_LFLAGS     += $($(package)_ldflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n+  sed -i.old \"s|QMAKE_CFLAGS            = |QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_LFLAGS            = |QMAKE_LFLAGS            = $($(package)_ldflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_CXXFLAGS          = |QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf\n+endef\n+\n+define $(package)_config_cmds\n+  export PKG_CONFIG_SYSROOT_DIR=/ && \\\n+  export PKG_CONFIG_LIBDIR=$(host_prefix)/lib/pkgconfig && \\\n+  export PKG_CONFIG_PATH=$(host_prefix)/share/pkgconfig  && \\\n+  export CPATH=$(host_prefix)/include && \\\n+  ./configure $($(package)_config_opts) && \\\n+  $(MAKE) sub-src-clean && \\\n+  cd ../qttranslations && ../qtbase/bin/qmake qttranslations.pro -o Makefile && \\\n+  cd translations && ../../qtbase/bin/qmake translations.pro -o Makefile && cd ../.. &&\\\n+  cd qttools/src/linguist/lrelease/ && ../../../../qtbase/bin/qmake lrelease.pro -o Makefile\n+endef\n+\n+define $(package)_build_cmds\n+  export CPATH=$(host_prefix)/include && \\\n+  $(MAKE) -C src $(addprefix sub-,$($(package)_qt_libs)) && \\\n+  $(MAKE) -C ../qttools/src/linguist/lrelease && \\\n+  $(MAKE) -C ../qttranslations\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C src INSTALL_ROOT=$($(package)_staging_dir) $(addsuffix -install_subtargets,$(addprefix sub-,$($(package)_qt_libs))) && cd .. &&\\\n+  $(MAKE) -C qttools/src/linguist/lrelease INSTALL_ROOT=$($(package)_staging_dir) install_target && \\\n+  $(MAKE) -C qttranslations INSTALL_ROOT=$($(package)_staging_dir) install_subtargets && \\\n+  if `test -f qtbase/src/plugins/platforms/xcb/xcb-static/libxcb-static.a`; then \\\n+    cp qtbase/src/plugins/platforms/xcb/xcb-static/libxcb-static.a $($(package)_staging_prefix_dir)/lib; \\\n+  fi\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf mkspecs/ lib/cmake/ && \\\n+  rm lib/libQt5Bootstrap.a lib/lib*.la lib/*.prl plugins/*/*.prl\n+endef"
      },
      {
        "sha": "726e3048c30c07401991d6a9a8e7fb50a75df03c",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,27 @@\n+package=xcb_proto\n+$(package)_version=1.10\n+$(package)_download_path=http://xcb.freedesktop.org/dist\n+$(package)_file_name=xcb-proto-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=7ef40ddd855b750bc597d2a435da21e55e502a0fefa85b274f2c922800baaf05\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared\n+  $(package)_config_opts_x86_64_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  find -name \"*.pyc\" -delete && \\\n+  find -name \"*.pyo\" -delete\n+endef"
      },
      {
        "sha": "98a11eb4974f8b25bf0f8c75ca1b0f0de4d5d1b9",
        "filename": "depends/packages/xextproto.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/xextproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/xextproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xextproto.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,21 @@\n+package=xextproto\n+$(package)_version=7.3.0\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/proto\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=f3f4b23ac8db9c3a9e0d8edb591713f3d70ef9c3b175970dd8823dfc92aa5bb0\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "50a90b26850ac87de0c74d2822a6590d9a9b9e8e",
        "filename": "depends/packages/xproto.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,21 @@\n+package=xproto\n+$(package)_version=7.0.26\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/proto\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=636162c1759805a5a0114a369dffdeccb8af8c859ef6e1445f26a4e6e046514f\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "b973149797f4d34430b66208c925b64192d81270",
        "filename": "depends/packages/xtrans.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/xtrans.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/packages/xtrans.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xtrans.mk?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,22 @@\n+package=xtrans\n+$(package)_version=1.3.4\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=054d4ee3efd52508c753e9f7bc655ef185a29bd2850dd9e2fc2ccc33544f583a\n+$(package)_dependencies=\n+\n+define $(package)_set_vars\n+$(package)_config_opts_x86_64_linux=--with-pic --disable-static\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "97f59cb7e4eea0575cf684936c7087d784a39437",
        "filename": "depends/patches/boost/darwin_boost_atomic-1.patch",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/boost/darwin_boost_atomic-1.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/boost/darwin_boost_atomic-1.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/darwin_boost_atomic-1.patch?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,35 @@\n+diff --git a/include/boost/atomic/detail/cas128strong.hpp b/include/boost/atomic/detail/cas128strong.hpp\n+index 906c13e..dcb4d7d 100644\n+--- a/include/boost/atomic/detail/cas128strong.hpp\n++++ b/include/boost/atomic/detail/cas128strong.hpp\n+@@ -196,15 +196,17 @@ class base_atomic<T, void, 16, Sign>\n+ \n+ public:\n+     BOOST_DEFAULTED_FUNCTION(base_atomic(void), {})\n+-    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT : v_(0)\n++    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT\n+     {\n++        memset(&v_, 0, sizeof(v_));\n+         memcpy(&v_, &v, sizeof(value_type));\n+     }\n+ \n+     void\n+     store(value_type const& value, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n+     {\n+-        storage_type value_s = 0;\n++        storage_type value_s;\n++        memset(&value_s, 0, sizeof(value_s));\n+         memcpy(&value_s, &value, sizeof(value_type));\n+         platform_fence_before_store(order);\n+         platform_store128(value_s, &v_);\n+@@ -247,7 +249,9 @@ class base_atomic<T, void, 16, Sign>\n+         memory_order success_order,\n+         memory_order failure_order) volatile BOOST_NOEXCEPT\n+     {\n+-        storage_type expected_s = 0, desired_s = 0;\n++        storage_type expected_s, desired_s;\n++        memset(&expected_s, 0, sizeof(expected_s));\n++        memset(&desired_s, 0, sizeof(desired_s));\n+         memcpy(&expected_s, &expected, sizeof(value_type));\n+         memcpy(&desired_s, &desired, sizeof(value_type));\n+ "
      },
      {
        "sha": "ca50765200ec86d6b5591446326afc91b6d389e7",
        "filename": "depends/patches/boost/darwin_boost_atomic-2.patch",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/boost/darwin_boost_atomic-2.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/boost/darwin_boost_atomic-2.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/darwin_boost_atomic-2.patch?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,55 @@\n+diff --git a/include/boost/atomic/detail/gcc-atomic.hpp b/include/boost/atomic/detail/gcc-atomic.hpp\n+index a130590..4af99a1 100644\n+--- a/include/boost/atomic/detail/gcc-atomic.hpp\n++++ b/include/boost/atomic/detail/gcc-atomic.hpp\n+@@ -958,14 +958,16 @@ class base_atomic<T, void, 16, Sign>\n+ \n+ public:\n+     BOOST_DEFAULTED_FUNCTION(base_atomic(void), {})\n+-    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT : v_(0)\n++    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT\n+     {\n++        memset(&v_, 0, sizeof(v_));\n+         memcpy(&v_, &v, sizeof(value_type));\n+     }\n+ \n+     void store(value_type const& v, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n+     {\n+-        storage_type tmp = 0;\n++        storage_type tmp;\n++        memset(&tmp, 0, sizeof(tmp));\n+         memcpy(&tmp, &v, sizeof(value_type));\n+         __atomic_store_n(&v_, tmp, atomics::detail::convert_memory_order_to_gcc(order));\n+     }\n+@@ -980,7 +982,8 @@ class base_atomic<T, void, 16, Sign>\n+ \n+     value_type exchange(value_type const& v, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n+     {\n+-        storage_type tmp = 0;\n++        storage_type tmp;\n++        memset(&tmp, 0, sizeof(tmp));\n+         memcpy(&tmp, &v, sizeof(value_type));\n+         tmp = __atomic_exchange_n(&v_, tmp, atomics::detail::convert_memory_order_to_gcc(order));\n+         value_type res;\n+@@ -994,7 +997,9 @@ class base_atomic<T, void, 16, Sign>\n+         memory_order success_order,\n+         memory_order failure_order) volatile BOOST_NOEXCEPT\n+     {\n+-        storage_type expected_s = 0, desired_s = 0;\n++        storage_type expected_s, desired_s;\n++        memset(&expected_s, 0, sizeof(expected_s));\n++        memset(&desired_s, 0, sizeof(desired_s));\n+         memcpy(&expected_s, &expected, sizeof(value_type));\n+         memcpy(&desired_s, &desired, sizeof(value_type));\n+         const bool success = __atomic_compare_exchange_n(&v_, &expected_s, desired_s, false,\n+@@ -1010,7 +1015,9 @@ class base_atomic<T, void, 16, Sign>\n+         memory_order success_order,\n+         memory_order failure_order) volatile BOOST_NOEXCEPT\n+     {\n+-        storage_type expected_s = 0, desired_s = 0;\n++        storage_type expected_s, desired_s;\n++        memset(&expected_s, 0, sizeof(expected_s));\n++        memset(&desired_s, 0, sizeof(desired_s));\n+         memcpy(&expected_s, &expected, sizeof(value_type));\n+         memcpy(&desired_s, &desired, sizeof(value_type));\n+         const bool success = __atomic_compare_exchange_n(&v_, &expected_s, desired_s, true,"
      },
      {
        "sha": "666cf58cf69c34c39014be8a7b220922c0f52192",
        "filename": "depends/patches/gmp/arm_gmp_build_fix.patch",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/gmp/arm_gmp_build_fix.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/gmp/arm_gmp_build_fix.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/gmp/arm_gmp_build_fix.patch?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,21 @@\n+\n+# HG changeset patch\n+# User Torbjorn Granlund <tege@gmplib.org>\n+# Date 1396602422 -7200\n+# Node ID 676e2d0f0e4dd301a7066079d2c9326c25c34a40\n+# Parent  0194a75b56b21a9196626430af86c5bd9110c42d\n+Conditionalise ARM asm on !__thumb__.\n+\n+diff -r 0194a75b56b2 -r 676e2d0f0e4d mpn/generic/div_qr_1n_pi1.c\n+--- a/mpn/generic/div_qr_1n_pi1.c\tThu Apr 03 23:58:51 2014 +0200\n++++ b/mpn/generic/div_qr_1n_pi1.c\tFri Apr 04 11:07:02 2014 +0200\n+@@ -130,7 +130,7 @@\n+ \t     \"%2\" ((UDItype)(a0)), \"r\" ((UDItype)(b0)) __CLOBBER_CC)\n+ #endif\n+ \n+-#if defined (__arm__) && W_TYPE_SIZE == 32\n++#if defined (__arm__) && !defined (__thumb__) && W_TYPE_SIZE == 32\n+ #define add_mssaaaa(m, sh, sl, ah, al, bh, bl)\t\t\t\t\\\n+   __asm__ (  \"adds\t%2, %5, %6\\n\\t\"\t\t\t\t\t\\\n+ \t     \"adcs\t%1, %3, %4\\n\\t\"\t\t\t\t\t\\\n+"
      },
      {
        "sha": "b9cfd80e778ae4a7d09795ce3780065b993f519b",
        "filename": "depends/patches/gmp/darwin_gmp_build_fix.patch",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/gmp/darwin_gmp_build_fix.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/gmp/darwin_gmp_build_fix.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/gmp/darwin_gmp_build_fix.patch?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,29 @@\n+\n+# HG changeset patch\n+# User Torbjorn Granlund <tege@gmplib.org>\n+# Date 1396470504 -7200\n+# Node ID 1fab0adc5ff7d9ecddcbda96f407da58347bb49c\n+# Parent  db645603dcdb41afcf78b19b551ecd5a01c3841c\n+Workaround for Darwin assembler quirk.\n+\n+diff -r db645603dcdb -r 1fab0adc5ff7 mpn/x86_64/k8/redc_1.asm\n+--- a/mpn/x86_64/k8/redc_1.asm\tMon Mar 31 23:04:32 2014 +0200\n++++ b/mpn/x86_64/k8/redc_1.asm\tWed Apr 02 22:28:24 2014 +0200\n+@@ -114,7 +114,7 @@\n+ \n+ \tJUMPTABSECT\n+ \tALIGN(8)\n+-L(tab):\tJMPENT(\tL(0m4), L(tab))\n++L(tab):\tJMPENT(\tL(0), L(tab))\n+ \tJMPENT(\tL(1), L(tab))\n+ \tJMPENT(\tL(2), L(tab))\n+ \tJMPENT(\tL(3), L(tab))\n+@@ -397,6 +397,7 @@\n+ \n+ \n+ \tALIGN(16)\n++L(0):\n+ L(0m4):\n+ L(lo0):\tmov\t(mp,nneg,8), %rax\n+ \tmov\tnneg, i\n+"
      },
      {
        "sha": "8ab0993dc4de142ab7766a500640be92540fe80f",
        "filename": "depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cdrkit/cdrkit-deterministic.patch?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,86 @@\n+--- cdrkit-1.1.11.old/genisoimage/tree.c\t2008-10-21 19:57:47.000000000 -0400\n++++ cdrkit-1.1.11/genisoimage/tree.c\t2013-12-06 00:23:18.489622668 -0500\n+@@ -1139,8 +1139,9 @@\n+ scan_directory_tree(struct directory *this_dir, char *path, \n+ \t\t\t\t\t\t  struct directory_entry *de)\n+ {\n+-\tDIR\t\t*current_dir;\n++        int             current_file;\n+ \tchar\t\twhole_path[PATH_MAX];\n++        struct dirent  **d_list;\n+ \tstruct dirent\t*d_entry;\n+ \tstruct directory *parent;\n+ \tint\t\tdflag;\n+@@ -1164,7 +1165,8 @@\n+ \tthis_dir->dir_flags |= DIR_WAS_SCANNED;\n+ \n+ \terrno = 0;\t/* Paranoia */\n+-\tcurrent_dir = opendir(path);\n++\t//current_dir = opendir(path);\n++        current_file = scandir(path, &d_list, NULL, alphasort);\n+ \td_entry = NULL;\n+ \n+ \t/*\n+@@ -1173,12 +1175,12 @@\n+ \t */\n+ \told_path = path;\n+ \n+-\tif (current_dir) {\n++\tif (current_file >= 0) {\n+ \t\terrno = 0;\n+-\t\td_entry = readdir(current_dir);\n++\t\td_entry = d_list[0];\n+ \t}\n+ \n+-\tif (!current_dir || !d_entry) {\n++\tif (current_file < 0 || !d_entry) {\n+ \t\tint\tret = 1;\n+ \n+ #ifdef\tUSE_LIBSCHILY\n+@@ -1191,8 +1193,8 @@\n+ \t\t\tde->isorec.flags[0] &= ~ISO_DIRECTORY;\n+ \t\t\tret = 0;\n+ \t\t}\n+-\t\tif (current_dir)\n+-\t\t\tclosedir(current_dir);\n++\t\tif(d_list)\n++\t\t\tfree(d_list);\n+ \t\treturn (ret);\n+ \t}\n+ #ifdef\tABORT_DEEP_ISO_ONLY\n+@@ -1208,7 +1210,7 @@\n+ \t\t\terrmsgno(EX_BAD, \"use Rock Ridge extensions via -R or -r,\\n\");\n+ \t\t\terrmsgno(EX_BAD, \"or allow deep ISO9660 directory nesting via -D.\\n\");\n+ \t\t}\n+-\t\tclosedir(current_dir);\n++\t\tfree(d_list);\n+ \t\treturn (1);\n+ \t}\n+ #endif\n+@@ -1250,13 +1252,13 @@\n+ \t\t * The first time through, skip this, since we already asked\n+ \t\t * for the first entry when we opened the directory.\n+ \t\t */\n+-\t\tif (dflag)\n+-\t\t\td_entry = readdir(current_dir);\n++\t\tif (dflag && current_file >= 0)\n++\t\t\td_entry = d_list[current_file];\n+ \t\tdflag++;\n+ \n+-\t\tif (!d_entry)\n++\t\tif (current_file < 0)\n+ \t\t\tbreak;\n+-\n++                current_file--;\n+ \t\t/* OK, got a valid entry */\n+ \n+ \t\t/* If we do not want all files, then pitch the backups. */\n+@@ -1348,7 +1350,7 @@\n+ \t\tinsert_file_entry(this_dir, whole_path, d_entry->d_name);\n+ #endif\t/* APPLE_HYB */\n+ \t}\n+-\tclosedir(current_dir);\n++\tfree(d_list);\n+ \n+ #ifdef APPLE_HYB\n+ \t/*"
      },
      {
        "sha": "bf6c6dca36cf863a6ef2c63dc91247c5c663715e",
        "filename": "depends/patches/qt/fix-xcb-include-order.patch",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/qt/fix-xcb-include-order.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/qt/fix-xcb-include-order.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix-xcb-include-order.patch?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,21 @@\n+--- old/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\t2014-07-30 18:17:27.384458441 -0400\n++++ new/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\t2014-07-30 18:18:28.620459303 -0400\n+@@ -101,10 +101,6 @@\n+     }\n+ }\n+ \n+-DEFINES += $$QMAKE_DEFINES_XCB\n+-LIBS += $$QMAKE_LIBS_XCB\n+-QMAKE_CXXFLAGS += $$QMAKE_CFLAGS_XCB\n+-\n+ CONFIG += qpa/genericunixfontdatabase\n+ \n+ contains(QT_CONFIG, dbus) {\n+@@ -141,3 +137,7 @@\n+         INCLUDEPATH += ../../../3rdparty/xkbcommon/xkbcommon/\n+     }\n+ }\n++\n++DEFINES += $$QMAKE_DEFINES_XCB\n++LIBS += $$QMAKE_LIBS_XCB\n++INCLUDEPATH += $$QMAKE_CFLAGS_XCB"
      },
      {
        "sha": "f7302265bcd992b51466d8571f06169fd0aed5b1",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,23 @@\n+MAKEFILE_GENERATOR = UNIX\n+CONFIG += app_bundle incremental global_init_link_order lib_version_first plugin_no_soname absolute_library_soname\n+QMAKE_INCREMENTAL_STYLE = sublib\n+include(../common/macx.conf)\n+include(../common/gcc-base-mac.conf)\n+include(../common/clang.conf)\n+include(../common/clang-mac.conf)\n+QMAKE_MAC_SDK_PATH=$${MAC_SDK_PATH}\n+QMAKE_XCODE_VERSION=4.3\n+QMAKE_XCODE_DEVELOPER_PATH=/Developer\n+QMAKE_MACOSX_DEPLOYMENT_TARGET = $${MAC_MIN_VERSION}\n+QMAKE_MAC_SDK=macosx\n+QMAKE_MAC_SDK.macosx.path = $$QMAKE_MAC_SDK_PATH\n+QMAKE_MAC_SDK.macosx.platform_name = macosx\n+QMAKE_CFLAGS += -target $${MAC_TARGET}\n+QMAKE_OBJECTIVE_CFLAGS += $$QMAKE_CFLAGS\n+QMAKE_CXXFLAGS += $$QMAKE_CFLAGS\n+QMAKE_LFLAGS += -target $${MAC_TARGET}\n+QMAKE_AR = $${CROSS_COMPILE}ar cq\n+QMAKE_RANLIB=$${CROSS_COMPILE}ranlib\n+QMAKE_LIBTOOL=$${CROSS_COMPILE}libtool\n+QMAKE_INSTALL_NAME_TOOL=$${CROSS_COMPILE}install_name_tool\n+load(qt_config)"
      },
      {
        "sha": "7deabf8d4e04262c3870e9adbc6eb4b4a185d29f",
        "filename": "depends/patches/qt/qt5-tablet-osx.patch",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/qt/qt5-tablet-osx.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/depends/patches/qt/qt5-tablet-osx.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/qt5-tablet-osx.patch?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,20 @@\n+--- old/qtbase/src/widgets/kernel/qwidgetwindow.cpp\t2014-09-05 20:45:18.717570370 -0400\n++++ new/qtbase/src/widgets/kernel/qwidgetwindow.cpp\t2014-09-05 20:52:38.653576561 -0400\n+@@ -57,7 +57,7 @@\n+ Q_WIDGETS_EXPORT extern bool qt_tab_all_widgets();\n+ \n+ QWidget *qt_button_down = 0; // widget got last button-down\n+-static QWidget *qt_tablet_target = 0;\n++static QPointer<QWidget> qt_tablet_target = 0;\n+ \n+ // popup control\n+ QWidget *qt_popup_down = 0; // popup that contains the pressed widget\n+@@ -96,8 +96,6 @@\n+ \n+ QWidgetWindow::~QWidgetWindow()\n+ {\n+-    if (m_widget == qt_tablet_target)\n+-        qt_tablet_target = 0;\n+ }\n+ \n+ #ifndef QT_NO_ACCESSIBILITY"
      },
      {
        "sha": "e0339e652eb0757b6052ad5217ab7590b3c93772",
        "filename": "doc/Doxyfile",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -34,7 +34,7 @@ PROJECT_NAME           = Bitcoin\n # This could be handy for archiving the generated documentation or \n # if some version control system is used.\n \n-PROJECT_NUMBER         = 0.5.0\n+PROJECT_NUMBER         = 0.9.99\n \n # Using the PROJECT_BRIEF tag one can provide an optional one line description \n # for a project that appears at the top of each page and should give viewer \n@@ -683,7 +683,7 @@ RECURSIVE              = YES\n # excluded from the INPUT source files. This way you can easily exclude a \n # subdirectory from a directory tree whose root is specified with the INPUT tag.\n \n-EXCLUDE                = \n+EXCLUDE                = src/leveldb src/json src/test /src/qt/test\n \n # The EXCLUDE_SYMLINKS tag can be used select whether or not files or \n # directories that are symbolic links (a Unix file system feature) are excluded \n@@ -705,7 +705,7 @@ EXCLUDE_PATTERNS       =\n # wildcard * is used, a substring. Examples: ANamespace, AClass, \n # AClass::ANamespace, ANamespace::*Test\n \n-EXCLUDE_SYMBOLS        = \n+EXCLUDE_SYMBOLS        = boost google\n \n # The EXAMPLE_PATH tag can be used to specify one or more files or \n # directories that contain example code fragments that are included (see \n@@ -1577,7 +1577,7 @@ HIDE_UNDOC_RELATIONS   = YES\n # toolkit from AT&T and Lucent Bell Labs. The other options in this section \n # have no effect if this option is set to NO (the default)\n \n-HAVE_DOT               = NO\n+HAVE_DOT               = YES\n \n # The DOT_NUM_THREADS specifies the number of dot invocations doxygen is \n # allowed to run in parallel. When set to 0 (the default) doxygen will \n@@ -1659,15 +1659,15 @@ INCLUDED_BY_GRAPH      = YES\n # the time of a run. So in most cases it will be better to enable call graphs \n # for selected functions only using the \\callgraph command.\n \n-CALL_GRAPH             = NO\n+CALL_GRAPH             = YES\n \n # If the CALLER_GRAPH and HAVE_DOT tags are set to YES then \n # doxygen will generate a caller dependency graph for every global function \n # or class method. Note that enabling this option will significantly increase \n # the time of a run. So in most cases it will be better to enable caller \n # graphs for selected functions only using the \\callergraph command.\n \n-CALLER_GRAPH           = NO\n+CALLER_GRAPH           = YES\n \n # If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen \n # will generate a graphical hierarchy of all classes instead of a textual one.\n@@ -1685,7 +1685,7 @@ DIRECTORY_GRAPH        = YES\n # generated by dot. Possible values are svg, png, jpg, or gif. \n # If left blank png will be used.\n \n-DOT_IMAGE_FORMAT       = png\n+DOT_IMAGE_FORMAT       = svg\n \n # The tag DOT_PATH can be used to specify the path where the dot tool can be \n # found. If left blank, it is assumed the dot tool can be found in the path."
      },
      {
        "sha": "d5d61738e87cec39975dad32eb878d44c332abc1",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 32,
        "deletions": 26,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,24 +1,16 @@\n-Bitcoin 0.8.2 BETA \n-====================\n+Bitcoin 0.9.99 BETA\n+=====================\n \n-Copyright (c) 2009-2013 Bitcoin Developers\n+Copyright (c) 2009-2014 Bitcoin Developers\n \n-Distributed under the [MIT/X11 software license](http://www.opensource.org/licenses/mit-license.php).\n-This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](http://www.openssl.org/). This product includes\n-cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard.\n \n-\n-Intro\n+Setup\n ---------------------\n-Bitcoin is a free open source peer-to-peer electronic cash system that is\n-completely decentralized, without the need for a central server or trusted\n-parties.  Users hold the crypto keys to their own money and transact directly\n-with each other, with the help of a P2P network to check for double-spending.\n+[Bitcoin Core](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more. Thankfully you only have to do this once. If you would like the process to go faster you can [download the blockchain directly](bootstrap.md).\n \n-\n-Setup\n+Running\n ---------------------\n-[Bitcoin-Qt](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions; depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n+The following are some helpful notes on how to run Bitcoin on your native platform. \n \n ### Unix\n \n@@ -28,33 +20,37 @@ You need the Qt4 run-time libraries to run Bitcoin-Qt. On Debian or Ubuntu:\n \n Unpack the files into a directory and run:\n \n-- bin/32/bitcoin-qt (GUI, 32-bit)\n-- bin/32/bitcoind (headless, 32-bit)\n-- bin/64/bitcoin-qt (GUI, 64-bit)\n-- bin/64/bitcoind (headless, 64-bit)\n+- bin/32/bitcoin-qt (GUI, 32-bit) or bin/32/bitcoind (headless, 32-bit)\n+- bin/64/bitcoin-qt (GUI, 64-bit) or bin/64/bitcoind (headless, 64-bit)\n \n \n \n ### Windows\n \n-Unpack the files into a directory and run bitcoin-qt.exe.\n+Unpack the files into a directory, and then run bitcoin-qt.exe.\n+\n+### OSX\n+\n+Drag Bitcoin-Qt to your applications folder, and then run Bitcoin-Qt.\n \n ### Need Help?\n \n * See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n for help and more information.\n * Ask for help on [#bitcoin](http://webchat.freenode.net?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=bitcoin).\n-* Ask for help on the [BitcoinTalk](https://bitcointalk.org/) forums.\n+* Ask for help on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Technical Support board](https://bitcointalk.org/index.php?board=4.0).\n \n Building\n ---------------------\n-- [Bitcoin-Qt Readme](readme-qt.md)\n+The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n+\n - [OSX Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n-- [Windows Build Notes](build-msw.md)\n \n Development\n ---------------------\n+The Bitcoin repo's [root README](https://github.com/bitcoin/bitcoin/blob/master/README.md) contains relevant information on the development process and automated testing.\n+\n - [Coding Guidelines](coding.md)\n - [Multiwallet Qt Development](multiwallet-qt.md)\n - [Release Notes](release-notes.md)\n@@ -63,8 +59,18 @@ Development\n - [Translation Process](translation_process.md)\n - [Unit Tests](unit-tests.md)\n \n-Other Pages\n----------------------\n+### Resources\n+* Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n+* Discuss on [#bitcoin-dev](http://webchat.freenode.net/?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+\n+### Miscellaneous\n - [Assets Attribution](assets-attribution.md)\n - [Files](files.md)\n-- [Tor Support](tor.md)\n\\ No newline at end of file\n+- [Tor Support](tor.md)\n+- [Init Scripts (systemd/upstart/openrc)](init.md)\n+\n+License\n+---------------------\n+Distributed under the [MIT/X11 software license](http://www.opensource.org/licenses/mit-license.php).\n+This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](https://www.openssl.org/). This product includes\n+cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "8831649bd8cdd485c033b2e83d0d50213f3e6c5a",
        "filename": "doc/README_osx.txt",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/README_osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/README_osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.txt?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,67 @@\n+Deterministic OSX Dmg Notes.\n+\n+Working OSX DMG's are created in Linux by combining a recent clang,\n+the Apple's binutils (ld, ar, etc), and DMG authoring tools.\n+\n+Apple uses clang extensively for development and has upstreamed the necessary\n+functionality so that a vanilla clang can take advantage. It supports the use\n+of -F, -target, -mmacosx-version-min, and --sysroot, which are all necessary\n+when building for OSX. A pre-compiled version of 3.2 is used because it was not\n+available in the Precise repositories at the time this work was started. In the\n+future, it can be switched to use system packages instead.\n+\n+Apple's version of binutils (called cctools) contains lots of functionality\n+missing in the FSF's binutils. In addition to extra linker options for\n+frameworks and sysroots, several other tools are needed as well such as\n+install_name_tool, lipo, and nmedit. These do not build under linux, so they\n+have been patched to do so. The work here was used as a starting point:\n+https://github.com/mingwandroid/toolchain4\n+\n+In order to build a working toolchain, the following source packages are needed\n+from Apple: cctools, dyld, and ld64.\n+\n+These tools inject timestamps by default, which produce non-deterministic\n+binaries. The ZERO_AR_DATE environment variable is used to disable that.\n+\n+This version of cctools has been patched to use the current version of clang's\n+headers and and its libLTO.so rather than those from llvmgcc, as it was\n+originally done in toolchain4.\n+\n+To complicate things further, all builds must target an Apple SDK. These SDKs\n+are free to download, but not redistributable.\n+To obtain it, register for a developer account, then download xcode4630916281a.dmg:\n+https://developer.apple.com/downloads/download.action?path=Developer_Tools/xcode_4.6.3/xcode4630916281a.dmg\n+This file is several gigabytes in size, but only a single directory inside is\n+needed: Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk\n+\n+Unfortunately, the usual linux tools (7zip, hpmount, loopback mount) are incapable of opening this file.\n+To create a tarball suitable for gitian input, mount the dmg in OSX, then create it with:\n+  $ tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.7.sdk.tar.gz MacOSX10.7.sdk\n+\n+\n+The gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\n+which are created using these tools. The build process has been designed to\n+avoid including the SDK's files in Gitian's outputs. All interim tarballs are\n+fully deterministic and may be freely redistributed.\n+\n+genisoimage is used to create the initial DMG. It is not deterministic as-is,\n+so it has been patched. A system genisoimage will work fine, but it will not\n+be deterministic because the file-order will change between invocations.\n+The patch can be seen here:\n+https://raw.githubusercontent.com/theuni/osx-cross-depends/master/patches/cdrtools/genisoimage.diff\n+No effort was made to fix this cleanly, so it likely leaks memory badly. But\n+it's only used for a single invocation, so that's no real concern.\n+\n+genisoimage cannot compress DMGs, so afterwards, the 'dmg' tool from the\n+libdmg-hfsplus project is used to compress it. There are several bugs in this\n+tool and its maintainer has seemingly abandoned the project. It has been forked\n+and is available (with fixes) here: https://github.com/theuni/libdmg-hfsplus .\n+\n+The 'dmg' tool has the ability to create DMG's from scratch as well, but this\n+functionality is broken. Only the compression feature is currently used.\n+Ideally, the creation could be fixed and genisoimage would no longer be necessary.\n+\n+Background images and other features can be added to DMG files by inserting a\n+.DS_Store before creation. The easiest way to create this file is to build a\n+DMG without one, move it to a device running OSX, customize the layout, then\n+grab the .DS_Store file for later use. That is the approach taken here."
      },
      {
        "sha": "368f2b45e1fbcae64e1758b6fa56d24af0e56410",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,10 +1,11 @@\n-Bitcoin 0.8.2 BETA\r\n+Bitcoin 0.9.99 BETA\r\n+\r\n+Copyright (c) 2009-2014 Bitcoin Core Developers\r\n \r\n-Copyright (c) 2009-2013 Bitcoin Developers\r\n Distributed under the MIT/X11 software license, see the accompanying\r\n file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n This product includes software developed by the OpenSSL Project for use in\r\n-the OpenSSL Toolkit (http://www.openssl.org/).  This product includes\r\n+the OpenSSL Toolkit (https://www.openssl.org/).  This product includes\r\n cryptographic software written by Eric Young (eay@cryptsoft.com).\r\n \r\n \r\n@@ -20,7 +21,7 @@ Setup\n -----\r\n Unpack the files into a directory and run bitcoin-qt.exe.\r\n \r\n-Bitcoin-Qt is the original Bitcoin client and it builds the backbone of the network.\r\n+Bitcoin Core is the original Bitcoin client and it builds the backbone of the network.\r\n However, it downloads and stores the entire history of Bitcoin transactions;\r\n depending on the speed of your computer and network connection, the synchronization\r\n process can take anywhere from a few hours to a day or more.\r"
      },
      {
        "sha": "386e3b54666ccd1e2262ae2d28d96bcb9fcccbc6",
        "filename": "doc/Tor.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/doc/Tor.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/doc/Tor.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Tor.txt?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,92 +0,0 @@\n-TOR SUPPORT IN BITCOIN\n-======================\n-\n-It is possible to run Bitcoin as a Tor hidden service, and connect to such services.\n-\n-The following directions assume you have a Tor proxy running on port 9050. Many distributions\n-default to having a SOCKS proxy listening on port 9050, but others may not.\n-In particular, the Tor Browser Bundle defaults to listening on a random port. See\n-https://www.torproject.org/docs/faq.html.en#TBBSocksPort for how to properly\n-configure Tor.\n-\n-\n-1. Run bitcoin behind a Tor proxy\n----------------------------------\n-\n-The first step is running Bitcoin behind a Tor proxy. This will already make all\n-outgoing connections be anonimized, but more is possible.\n-\n--socks=5        SOCKS5 supports connecting-to-hostname, which can be used instead\n-                of doing a (leaking) local DNS lookup. SOCKS5 is the default,\n-                but SOCKS4 does not support this. (SOCKS4a does, but isn't\n-                implemented).\n-\n--proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n-                server will be used to try to reach .onion addresses as well.\n-\n--tor=ip:port    Set the proxy server to use for tor hidden services. You do not\n-                need to set this if it's the same as -proxy. You can use -notor\n-                to explicitly disable access to hidden service.\n-\n--listen         When using -proxy, listening is disabled by default. If you want\n-                to run a hidden service (see next section), you'll need to enable\n-                it explicitly.\n-\n--connect=X      When behind a Tor proxy, you can specify .onion addresses instead\n--addnode=X      of IP addresses or hostnames in these parameters. It requires\n--seednode=X     SOCKS5. In Tor mode, such addresses can also be exchanged with\n-                other P2P nodes.\n-\n-In a typical situation, this suffices to run behind a Tor proxy:\n-\n-  ./bitcoin -proxy=127.0.0.1:9050\n-\n-\n-2. Run a bitcoin hidden server\n-------------------------------\n-\n-If you configure your Tor system accordingly, it is possible to make your node also\n-reachable from the Tor network. Add these lines to your /etc/tor/torrc (or equivalent\n-config file):\n-\n-  HiddenServiceDir /var/lib/tor/bitcoin-service/\n-  HiddenServicePort 8333 127.0.0.1:8333\n-\n-The directory can be different of course, but (both) port numbers should be equal to\n-your bitcoind's P2P listen port (8333 by default).\n-\n--externalip=X   You can tell bitcoin about its publicly reachable address using\n-                this option, and this can be a .onion address. Given the above\n-                configuration, you can find your onion address in\n-                /var/lib/tor/bitcoin-service/hostname. Onion addresses are given\n-                preference for your node to advertize itself with, for connections\n-                coming from unroutable addresses (such as 127.0.0.1, where the\n-                Tor proxy typically runs).\n-\n--listen         You'll need to enable listening for incoming connections, as this\n-                is off by default behind a proxy.\n-\n--discover       When -externalip is specified, no attempt is made to discover local\n-                IPv4 or IPv6 addresses. If you want to run a dual stack, reachable\n-                from both Tor and IPv4 (or IPv6), you'll need to either pass your\n-                other addresses using -externalip, or explicitly enable -discover.\n-                Note that both addresses of a dual-stack system may be easily\n-                linkable using traffic analysis.\n-\n-In a typical situation, where you're only reachable via Tor, this should suffice:\n-\n-  ./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n-\n-(obviously, replace the Onion address with your own). If you don't care too much\n-about hiding your node, and want to be reachable on IPv4 as well, additionally\n-specify:\n-\n-  ./bitcoind ... -discover\n-\n-and open port 8333 on your firewall (or use -upnp).\n-\n-If you only want to use Tor to reach onion addresses, but not use it as a proxy\n-for normal IPv4/IPv6 communication, use:\n-\n-  ./bitcoin -tor=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n-"
      },
      {
        "sha": "cd864f254d783de25acd7cb6bdbe6f4b4ec576e9",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 25,
        "deletions": 26,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -4,29 +4,29 @@ The following is a list of assets used in the bitcoin source and their proper at\n -----------------------\n #### Info\n * License: MIT\n-### Assets Used\n \n-\t\tsrc/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n-\t\tsrc/qt/res/src/clock_green.svg, src/qt/res/src/clock1.svg,\n-\t\tsrc/qt/res/src/clock2.svg, src/qt/res/src/clock3.svg,\n-\t\tsrc/qt/res/src/clock4.svg, src/qt/res/src/clock5.svg,\n-\t\tsrc/qt/res/src/inout.svg, src/qt/res/src/questionmark.svg\n+### Assets Used\n+\tsrc/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n+\tsrc/qt/res/src/clock_green.svg, src/qt/res/src/clock1.svg,\n+\tsrc/qt/res/src/clock2.svg, src/qt/res/src/clock3.svg,\n+\tsrc/qt/res/src/clock4.svg, src/qt/res/src/clock5.svg,\n+\tsrc/qt/res/src/inout.svg, src/qt/res/src/questionmark.svg\n \n-[David Vignoni](www.icon-king.com)\n+[David Vignoni](http://www.icon-king.com)\n -----------------------\n \n ### Info\n * Icon Pack: NUVOLA ICON THEME for KDE 3.x\n * Designer: David Vignoni (david@icon-king.com)\n * License: LGPL\n-* Site: [http://www.icon-king.com/projects/nuvola/](http://www.icon-king.com/projects/nuvola/)\n+* Site: [http://www.icon-king.com/projects/nuvola](http://www.icon-king.com/projects/nuvola)\n \n ### Assets Used\n-\t  src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n-      src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n-      src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n-      src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n-      src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n+\tsrc/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n+\tsrc/qt/res/icons/history.png, src/qt/res/icons/key.png,\n+\tsrc/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n+\tsrc/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n+\tsrc/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n \n schollidesign\n -----------------------\n@@ -38,17 +38,16 @@ schollidesign\n * Site: [http://findicons.com/icon/93743/blocks_gnome_netstatus_0](http://findicons.com/icon/93743/blocks_gnome_netstatus_0)\n \n ### Assets Used\n-\t src/qt/res/icons/connect*.png\n+\tsrc/qt/res/icons/connect*.png\n \n md2k7\n -----------------------\n \n ### Info\n * Designer: md2k7\n-* Site: https://bitcointalk.org/index.php?topic=15276.0\n-* License: You are free to do with these icons as you wish, including selling,\n- copying, modifying etc.\n+* License: You are free to do with these icons as you wish, including selling, copying, modifying etc.\n * License: MIT\n+* Site: [https://bitcointalk.org/index.php?topic=15276.0](https://bitcointalk.org/index.php?topic=15276.0)\n \n ### Assets Used\n \tsrc/qt/res/icons/transaction*.png\n@@ -57,15 +56,15 @@ md2k7\n -----------------------\n \n ### Info\n-* Designer: [http://www.everaldo.com](http://www.everaldo.com)\n * Icon Pack: Crystal SVG\n+* Designer: [http://www.everaldo.com](http://www.everaldo.com)\n * License: LGPL\n \n ### Assets Used\n \tsrc/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n-    src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n-    src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n-    src/qt/res/icons/remove.png (edited)\n+\tsrc/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n+\tsrc/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n+\tsrc/qt/res/icons/remove.png (edited)\n \n Everaldo (Everaldo Coelho)\n -----------------------\n@@ -75,16 +74,17 @@ Everaldo (Everaldo Coelho)\n * Designer: Everaldo (Everaldo Coelho)\n * License: GNU/GPL \n * Site: [http://findicons.com/icon/17102/reload?id=17102](http://findicons.com/icon/17102/reload?id=17102)\n+\n ### Assets Used\n-\tscripts/img/reload.xcf (modified), src/qt/res/movies/update_spinner.mng\n+\tscripts/img/reload.xcf (modified), src/qt/res/movies/*.png\n \n-[Vignoni David](http://www.oxygen-icons.org/)\n+[Vignoni David](http://techbase.kde.org/Projects/Oxygen)\n -----------------------\n \n ### Info\n * Designer: Vignoni David\n-* Site: http://www.oxygen-icons.org/\n * License: Oxygen icon theme is dual licensed. You may copy it under the Creative Common Attribution-ShareAlike 3.0 License or the GNU Library General Public License.\n+* Site: [http://techbase.kde.org/Projects/Oxygen](http://techbase.kde.org/Projects/Oxygen)\n \n ### Assets Used\n \tsrc/qt/res/icons/debugwindow.png\n@@ -100,5 +100,4 @@ Jonas Schnelli\n \tsrc/qt/res/icons/bitcoin.icns, src/qt/res/src/bitcoin.svg,\n \tsrc/qt/res/src/bitcoin.ico, src/qt/res/src/bitcoin.png,\n \tsrc/qt/res/src/bitcoin_testnet.png, docs/bitcoin_logo_doxygen.png,\n-\tsrc/qt/res/icons/toolbar.png, src/qt/res/icons/toolbar_testnet.png,\n-\tsrc/qt/res/images/splash.png, src/qt/res/images/splash_testnet.png\n\\ No newline at end of file\n+\tsrc/qt/res/images/splash.png, src/qt/res/images/splash_testnet.png"
      },
      {
        "sha": "2069c5d6e0418bf0a3e3175f57f41a4815bd8dac",
        "filename": "doc/assets-attribution.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 58,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/doc/assets-attribution.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/doc/assets-attribution.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.txt?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,58 +0,0 @@\n-Icon: src/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n-      src/qt/res/src/clock_green.svg, src/qt/res/src/clock1.svg,\n-      src/qt/res/src/clock2.svg, src/qt/res/src/clock3.svg,\n-      src/qt/res/src/clock4.svg, src/qt/res/src/clock5.svg,\n-      src/qt/res/src/inout.svg, src/qt/res/src/questionmark.svg\n-Designer: Wladimir van der Laan\n-License: MIT\n-\n-Icon: src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n-      src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n-      src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n-      src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n-      src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n-Icon Pack: NUVOLA ICON THEME for KDE 3.x\n-Designer: David Vignoni (david@icon-king.com)\n-          ICON KING - www.icon-king.com\n-License: LGPL\n-Site: http://www.icon-king.com/projects/nuvola/\n-\n-Icon: src/qt/res/icons/connect*.png\n-Icon Pack: Human-O2\n-Designer: schollidesign\n-License: GNU/GPL\n-Site: http://findicons.com/icon/93743/blocks_gnome_netstatus_0\n-\n-Icon: src/qt/res/icons/transaction*.png\n-Designer: md2k7\n-Site: https://bitcointalk.org/index.php?topic=15276.0\n-License: You are free to do with these icons as you wish, including selling,\n- copying, modifying etc.\n-License: MIT\n-\n-Icon: src/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n-      src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n-      src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n-      src/qt/res/icons/remove.png (edited)\n-Designer: http://www.everaldo.com\n-Icon Pack: Crystal SVG\n-License: LGPL\n-\n-Icon:  scripts/img/reload.xcf (modified), src/qt/res/movies/update_spinner.mng\n-Icon Pack: Kids\n-Designer: Everaldo (Everaldo Coelho)\n-License: GNU/GPL \n-Site: http://findicons.com/icon/17102/reload?id=17102\n-\n-Icon: src/qt/res/icons/debugwindow.png\n-Designer: Vignoni David\n-Site: http://www.oxygen-icons.org/\n-License: Oxygen icon theme is dual licensed. You may copy it under the Creative Common Attribution-ShareAlike 3.0 License or the GNU Library General Public License.\n-\n-Icon: src/qt/res/icons/bitcoin.icns, src/qt/res/src/bitcoin.svg,\n-      src/qt/res/src/bitcoin.ico, src/qt/res/src/bitcoin.png,\n-      src/qt/res/src/bitcoin_testnet.png, docs/bitcoin_logo_doxygen.png,\n-      src/qt/res/icons/toolbar.png, src/qt/res/icons/toolbar_testnet.png,\n-      src/qt/res/images/splash.png, src/qt/res/images/splash_testnet.png\n-Designer: Jonas Schnelli (based on the original bitcoin logo from Bitboy)\n-License: MIT"
      },
      {
        "sha": "258be86edee2372033763742c513309761248f1b",
        "filename": "doc/bitcoin_logo_doxygen.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/bitcoin_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/bitcoin_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin_logo_doxygen.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "b84fd24b11d9270a5c3b23dfdb2b2e77ede2ecbd",
        "filename": "doc/bootstrap.md",
        "status": "added",
        "additions": 56,
        "deletions": 0,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/bootstrap.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/bootstrap.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bootstrap.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,56 @@\n+### Bootstrap the Blockchain Synchronization\n+\n+Normally the Bitcoin client will download the transaction and network information, called the blockchain, from the network by syncing with the other clients. This process can take quite some time as the [Bitcoin blockchain](https://blockchain.info/charts/blocks-size) is growing bigger and bigger for each day. Luckily there is a safe and fast way to speed up this process. We'll show you how to bootstrap your blockchain to bring your client up to speed in just a few simple steps.\n+\n+### Requirements\n+\n+- A fresh install of the Bitcoin client software.\n+\n+### Download the blockchain via BitTorrent\n+\n+Jeff Garzik, Bitcoin Core developer, offers an [torrent file](https://bitcointalk.org/index.php?topic=145386.0) for bootstrapping purposes that is updated often. BitTorrent is a protocol that speeds up the downloading of large files by using the other clients in the network. Examples of free and safe open source clients are [Deluge](http://deluge-torrent.org/) or [qBittorrent](http://www.qbittorrent.org/). A guide to installing and configuring the torrent clients can be found [here](http://dev.deluge-torrent.org/wiki/UserGuide) for Deluge and [here](http://qbforums.shiki.hu/) for qBittorrent. A further in-depth tutorial on BitTorrent can be found [here](http://www.howtogeek.com/howto/31846/bittorrent-for-beginners-how-get-started-downloading-torrents/).\n+\n+With the client installed we'll proceed to download the blockchain torrent file. Use the following magnet link:\n+\n+\tmagnet:?xt=urn:btih:2d4e6c1f96c5d5fb260dff92aea4e600227f1aea&dn=bootstrap.dat&tr=udp://tracker.openbittorrent.com:80&tr=udp://tracker.publicbt.com:80&tr=udp://tracker.ccc.de:80&tr=udp://tracker.istole.it:80\n+\t\n+ or go to [Jeff Garzik's topic](https://bitcointalk.org/index.php?topic=145386.0) for a signed magnet link. Alternatively you can use the [.torrent file](http://sourceforge.net/projects/bitcoin/files/Bitcoin/blockchain/bootstrap.dat.torrent/download) found on SourceForge.\n+     \n+![Fig1](img/bootstrap1.png)\n+\n+The download page should look like this, with a countdown to the download. If it does not work click the direct download link.\n+\n+The torrent client installed will recognize the download of the torrent file. Save the bootstrap.dat file to the folder you use for downloads. The image below shows the torrent download in qBittorrent, with current speed and ETA highlighted.\n+\n+![Fig2](img/bootstrap2.png)\n+\n+### Importing the blockchain\n+Exit the Bitcoin client software if you have it running. Be sure not to have an actively used wallet in use. We are going to copy the download of the blockchain to the Bitcoin client data directory. You should run the client software at least once so it can generate the data directory. Copy the downloaded bootstrap.dat file into the Bitcoin data folder.\n+\n+**For Windows users:**\n+Open explorer, and type into the address bar:\n+\n+\t%APPDATA%\\Bitcoin\n+    \n+This will open up the data folder. It should look like the image below. Copy over the bootstrap.dat from your download folder to this directory.\n+![Fig4](img/bootstrap4.png)\n+\n+**For OSX users:**\n+Open Finder by pressing Press [shift] + [cmd] + [g] and enter:\n+\n+\t~/Library/Application Support/Bitcoin/\n+    \n+**For Linux users:**\n+The directory is hidden in your User folder. Go to:\n+\n+\t~/.bitcoin/\n+    \n+### Importing the blockchain\n+Now start the Bitcoin client software. It should show \"Importing blocks from disk\" like the image below. \n+![Fig5](img/bootstrap5.png)\n+\n+Wait until the import finishes. The client will download the last days not covered by the import. Congratulations you have successfully imported the blockchain!\n+\n+### Is this safe?\n+\n+Yes, the above method is safe. The download contains only raw blockchain data and the client verifies this on import. Do not download the blockchain from unofficial sources, especially if they provide `*.rev` and `*.sst` files. These files are not verified and can contain malicious edits."
      },
      {
        "sha": "6976c6a5605d3549e7b16ba9d1148fb7e9457183",
        "filename": "doc/build-msw.md",
        "status": "removed",
        "additions": 0,
        "deletions": 83,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/doc/build-msw.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/doc/build-msw.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.md?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,83 +0,0 @@\n-WINDOWS BUILD NOTES\n-===================\n-\n-See [readme-qt.rst](readme-qt.rst) for instructions on building Bitcoin-Qt, the\n-graphical user interface.\n-\n-Compilers Supported\n--------------------\n-TODO: What works?\n-Note: releases are cross-compiled using mingw running on Linux.\n-\n-\n-Dependencies\n-------------\n-Libraries you need to download separately and build:\n-\n-\tname            default path               download\n-\t--------------------------------------------------------------------------------------------------------------------\n-\tOpenSSL         \\openssl-1.0.1c-mgw        http://www.openssl.org/source/\n-\tBerkeley DB     \\db-4.8.30.NC-mgw          http://www.oracle.com/technology/software/products/berkeley-db/index.html\n-\tBoost           \\boost-1.50.0-mgw          http://www.boost.org/users/download/\n-\tminiupnpc       \\miniupnpc-1.6-mgw         http://miniupnp.tuxfamily.org/files/\n-\n-Their licenses:\n-\n-\tOpenSSL        Old BSD license with the problematic advertising requirement\n-\tBerkeley DB    New BSD license with additional requirement that linked software must be free open source\n-\tBoost          MIT-like license\n-\tminiupnpc      New (3-clause) BSD license\n-\n-Versions used in this release:\n-\n-\tOpenSSL      1.0.1c\n-\tBerkeley DB  4.8.30.NC\n-\tBoost        1.50.0\n-\tminiupnpc    1.6\n-\n-\n-OpenSSL\n--------\n-MSYS shell:\n-\n-un-tar sources with MSYS 'tar xfz' to avoid issue with symlinks (OpenSSL ticket 2377)\n-change 'MAKE' env. variable from 'C:\\MinGW32\\bin\\mingw32-make.exe' to '/c/MinGW32/bin/mingw32-make.exe'\n-\n-\tcd /c/openssl-1.0.1c-mgw\n-\t./config\n-\tmake\n-\n-Berkeley DB\n------------\n-MSYS shell:\n-\n-\tcd /c/db-4.8.30.NC-mgw/build_unix\n-\tsh ../dist/configure --enable-mingw --enable-cxx\n-\tmake\n-\n-Boost\n------\n-DOS prompt:\n-\n-\tdownloaded boost jam 3.1.18\n-\tcd \\boost-1.50.0-mgw\n-\tbjam toolset=gcc --build-type=complete stage\n-\n-MiniUPnPc\n----------\n-UPnP support is optional, make with `USE_UPNP=` to disable it.\n-\n-MSYS shell:\n-\n-\tcd /c/miniupnpc-1.6-mgw\n-\tmake -f Makefile.mingw\n-\tmkdir miniupnpc\n-\tcp *.h miniupnpc/\n-\n-Bitcoin\n--------\n-DOS prompt:\n-\n-\tcd \\bitcoin\\src\n-\tmingw32-make -f makefile.mingw\n-\tstrip bitcoind.exe"
      },
      {
        "sha": "491c5c4683aff0c403d1bbf66a751148240e9fe5",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 65,
        "deletions": 83,
        "changes": 148,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -5,10 +5,8 @@ This guide will show you how to build bitcoind(headless client) for OSX.\n Notes\n -----\n \n-* See [readme-qt.rst](readme-qt.rst) for instructions on building Bitcoin-Qt, the\n-graphical user interface.\n-* Tested on OS X 10.5 through 10.8 on Intel processors only. PPC is not\n-supported because it is big-endian.\n+* Tested on OS X 10.7 through 10.10 on 64-bit Intel processors only.\n+\n * All of the commands should be executed in a Terminal application. The\n built-in one is located in `/Applications/Utilities`.\n \n@@ -23,122 +21,102 @@ Xcode 4.3 or later, you'll need to install its command line tools. This can\n be done in `Xcode > Preferences > Downloads > Components` and generally must\n be re-done or updated every time Xcode is updated.\n \n-There's an assumption that you already have `git` installed, as well. If\n+There's also an assumption that you already have `git` installed. If\n not, it's the path of least resistance to install [Github for Mac](https://mac.github.com/)\n (OS X 10.7+) or\n [Git for OS X](https://code.google.com/p/git-osx-installer/). It is also\n-available via Homebrew or MacPorts.\n+available via Homebrew.\n \n-You will also need to install [Homebrew](http://mxcl.github.io/homebrew/)\n-or [MacPorts](https://www.macports.org/) in order to install library\n-dependencies. It's largely a religious decision which to choose, but, as of\n-December 2012, MacPorts is a little easier because you can just install the\n-dependencies immediately - no other work required. If you're unsure, read\n-the instructions through first in order to assess what you want to do.\n-Homebrew is a little more popular among those newer to OS X.\n+You will also need to install [Homebrew](http://brew.sh) in order to install library\n+dependencies.\n \n The installation of the actual dependencies is covered in the Instructions\n sections below.\n \n-Instructions: MacPorts\n-----------------------\n-\n-### Install dependencies\n-\n-Installing the dependencies using MacPorts is very straightforward.\n-\n-    sudo port install boost db48@+no_java openssl miniupnpc\n-\n-### Building `bitcoind`\n-\n-1. Clone the github tree to get the source code and go into the directory.\n-\n-        git clone git@github.com:bitcoin/bitcoin.git bitcoin\n-        cd bitcoin\n-\n-2.  Build bitcoind:\n-\n-        cd src\n-        make -f makefile.osx\n-\n-3.  It is a good idea to build and run the unit tests, too:\n-\n-        make -f makefile.osx test\n-\n-Instructions: HomeBrew\n+Instructions: Homebrew\n ----------------------\n \n #### Install dependencies using Homebrew\n \n-        brew install boost miniupnpc openssl berkeley-db4\n+        brew install autoconf automake libtool boost miniupnpc openssl pkg-config protobuf qt gmp\n+\n+#### Installing berkeley-db4 using Homebrew\n \n-Note: After you have installed the dependencies, you should check that the Brew installed version of OpenSSL is the one available for compilation. You can check this by typing\n+The homebrew package for berkeley-db4 has been broken for some time.  It will install without Java though.\n \n-        openssl version\n+Running this command takes you into brew's interactive mode, which allows you to configure, make, and install by hand:\n+```\n+$ brew install https://raw.github.com/mxcl/homebrew/master/Library/Formula/berkeley-db4.rb -\u2013without-java \n+```\n \n-into Terminal. You should see OpenSSL 1.0.1e 11 Feb 2013.\n+The rest of these commands are run inside brew interactive mode:\n+```\n+/private/tmp/berkeley-db4-UGpd0O/db-4.8.30 $ cd ..\n+/private/tmp/berkeley-db4-UGpd0O $ db-4.8.30/dist/configure --prefix=/usr/local/Cellar/berkeley-db4/4.8.30 --mandir=/usr/local/Cellar/berkeley-db4/4.8.30/share/man --enable-cxx\n+/private/tmp/berkeley-db4-UGpd0O $ make\n+/private/tmp/berkeley-db4-UGpd0O $ make install\n+/private/tmp/berkeley-db4-UGpd0O $ exit\n+```\n \n-If not, you can ensure that the Brew OpenSSL is correctly linked by running\n+After exiting, you'll get a warning that the install is keg-only, which means it wasn't symlinked to `/usr/local`.  You don't need it to link it to build bitcoin, but if you want to, here's how:\n \n-        brew link openssl --force\n+    $ brew link --force berkeley-db4\n \n-Rerunning \"openssl version\" should now return the correct version.\n \n ### Building `bitcoind`\n \n 1. Clone the github tree to get the source code and go into the directory.\n \n-        git clone git@github.com:bitcoin/bitcoin.git bitcoin\n+        git clone https://github.com/bitcoin/bitcoin.git\n         cd bitcoin\n \n-2.  Modify source in order to pick up the `openssl` library.\n+2.  Build bitcoind:\n \n-    Edit `makefile.osx` to account for library location differences. There's a\n-    diff in `contrib/homebrew/makefile.osx.patch` that shows what you need to\n-    change, or you can just patch by doing\n+        ./autogen.sh\n+        ./configure\n+        make\n \n-        patch -p1 < contrib/homebrew/makefile.osx.patch\n+3.  It is also a good idea to build and run the unit tests:\n \n-3.  Build bitcoind:\n+        make check\n \n-        cd src\n-        make -f makefile.osx\n+4.  (Optional) You can also install bitcoind to your path:\n \n-4.  It is a good idea to build and run the unit tests, too:\n+        make install\n \n-        make -f makefile.osx test\n+Use Qt Creator as IDE\n+------------------------\n+You can use Qt Creator as IDE, for debugging and for manipulating forms, etc.\n+Download Qt Creator from http://www.qt.io/download/. Download the \"community edition\" and only install Qt Creator (uncheck the rest during the installation process).\n+\n+1. Make sure you installed everything through homebrew mentioned above \n+2. Do a proper ./configure --with-gui=qt5 --enable-debug\n+3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n+4. Enter \"bitcoin-qt\" as project name, enter src/qt as location\n+5. Leave the file selection as it is\n+6. Confirm the \"summary page\"\n+7. In the \"Projects\" tab select \"Manage Kits...\"\n+8. Select the default \"Desktop\" kit and select \"Clang (x86 64bit in /usr/bin)\" as compiler\n+9. Select LLDB as debugger (you might need to set the path to your installtion)\n+10. Start debugging with Qt Creator\n \n Creating a release build\n ------------------------\n+You can ignore this section if you are building `bitcoind` for your own use.\n \n-A bitcoind binary is not included in the Bitcoin-Qt.app bundle. You can ignore\n-this section if you are building `bitcoind` for your own use.\n+bitcoind/bitcoin-cli binaries are not included in the Bitcoin-Qt.app bundle.\n \n-If you are building `bitcoind` for others, your build machine should be set up\n+If you are building `bitcoind` or `Bitcoin-Qt` for others, your build machine should be set up\n as follows for maximum compatibility:\n \n All dependencies should be compiled with these flags:\n \n-    -mmacosx-version-min=10.5 -arch i386 -isysroot /Developer/SDKs/MacOSX10.5.sdk\n-\n-For MacPorts, that means editing your macports.conf and setting\n-`macosx_deployment_target` and `build_arch`:\n+ -mmacosx-version-min=10.7\n+ -arch x86_64\n+ -isysroot $(xcode-select --print-path)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk\n \n-    macosx_deployment_target=10.5\n-    build_arch=i386\n-\n-... and then uninstalling and re-installing, or simply rebuilding, all ports.\n-\n-As of December 2012, the `boost` port does not obey `macosx_deployment_target`.\n-Download `http://gavinandresen-bitcoin.s3.amazonaws.com/boost_macports_fix.zip`\n-for a fix. Some ports also seem to obey either `build_arch` or\n-`macosx_deployment_target`, but not both at the same time. For example, building\n-on an OS X 10.6 64-bit machine fails. Official release builds of Bitcoin-Qt are\n-compiled on an OS X 10.6 32-bit machine to workaround that problem.\n-\n-Once dependencies are compiled, creating `Bitcoin-Qt.app` is easy:\n-\n-    make -f Makefile.osx RELEASE=1\n+Once dependencies are compiled, see release-process.md for how the Bitcoin-Qt.app\n+bundle is packaged and signed to create the .dmg disk image that is distributed.\n \n Running\n -------\n@@ -152,11 +130,15 @@ commands:\n     echo -e \"rpcuser=bitcoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n     chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n \n-When next you run it, it will start downloading the blockchain, but it won't\n-output anything while it's doing this. This process may take several hours.\n+The next time you run it, it will start downloading the blockchain, but it won't\n+output anything while it's doing this. This process may take several hours;\n+you can monitor its process by looking at the debug.log file, like this:\n+\n+    tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n \n Other commands:\n+-------\n \n-    ./bitcoind --help  # for a list of command-line options.\n     ./bitcoind -daemon # to start the bitcoin daemon.\n-    ./bitcoind help    # When the daemon is running, to get a list of RPC commands\n+    ./bitcoin-cli --help  # for a list of command-line options.\n+    ./bitcoin-cli help    # When the daemon is running, to get a list of RPC commands"
      },
      {
        "sha": "e03dc8181a2b54194cc0ed6b386da946881b8317",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 134,
        "deletions": 56,
        "changes": 190,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -2,91 +2,118 @@ UNIX BUILD NOTES\n ====================\n Some notes on how to build Bitcoin in Unix. \n \n+Note\n+---------------------\n+Always use absolute paths to configure and compile bitcoin and the dependencies,\n+for example, when specifying the the path of the dependency:\n+\n+\t../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n+\n+Here BDB_PREFIX must absolute path - it is defined using $(pwd) which ensures\n+the usage of the absolute path.\n+\n To Build\n ---------------------\n \n-\tcd src/\n-\tmake -f makefile.unix\t\t# Headless bitcoin\n+```bash\n+./autogen.sh\n+./configure\n+make\n+make install # optional\n+```\n \n-See readme-qt.rst for instructions on building Bitcoin-Qt, the graphical user interface.\n+This will build bitcoin-qt as well if the dependencies are met.\n \n Dependencies\n ---------------------\n \n- Library     Purpose           Description\n- -------     -------           -----------\n- libssl      SSL Support       Secure communications\n- libdb4.8    Berkeley DB       Blockchain & wallet storage\n- libboost    Boost             C++ Library\n- miniupnpc   UPnP Support      Optional firewall-jumping support\n+These dependencies are required:\n \n-[miniupnpc](http://miniupnp.free.fr/) may be used for UPnP port mapping.  It can be downloaded from [here](\n-http://miniupnp.tuxfamily.org/files/).  UPnP support is compiled in and\n-turned off by default.  Set USE_UPNP to a different value to control this:\n+ Library     | Purpose          | Description\n+ ------------|------------------|----------------------\n+ libssl      | SSL Support      | Secure communications\n+ libboost    | Boost            | C++ Library\n+ libgmp      | secp256k1        | Arbitrary-precision arithmetic (version >= 3.1)\n \n-\tUSE_UPNP=     No UPnP support miniupnp not required\n-\tUSE_UPNP=0    (the default) UPnP support turned off by default at runtime\n-\tUSE_UPNP=1    UPnP support turned on by default at runtime\n+Optional dependencies:\n \n-IPv6 support may be disabled by setting:\n+ Library     | Purpose          | Description\n+ ------------|------------------|----------------------\n+ miniupnpc   | UPnP Support     | Firewall-jumping support\n+ libdb4.8    | Berkeley DB      | Wallet storage (only needed when wallet enabled)\n+ qt          | GUI              | GUI toolkit (only needed when GUI enabled)\n+ protobuf    | Payments in GUI  | Data interchange format used for payment protocol (only needed when GUI enabled)\n+ libqrencode | QR codes in GUI  | Optional for generating QR codes (only needed when GUI enabled)\n \n-\tUSE_IPV6=0    Disable IPv6 support\n+For the versions used in the release, see [release-process.md](release-process.md) under *Fetch and build inputs*.\n \n-Licenses of statically linked libraries:\n- Berkeley DB   New BSD license with additional requirement that linked\n-               software must be free open source\n- Boost         MIT-like license\n- miniupnpc     New (3-clause) BSD license\n+System requirements\n+--------------------\n \n-- Versions used in this release:\n--  GCC           4.3.3\n--  OpenSSL       1.0.1c\n--  Berkeley DB   4.8.30.NC\n--  Boost         1.37\n--  miniupnpc     1.6\n+C++ compilers are memory-hungry. It is recommended to have at least 1 GB of\n+memory available when compiling Bitcoin Core. With 512MB of memory or less\n+compilation will take much longer due to swap thrashing.\n \n Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-\tsudo apt-get install build-essential\n-\tsudo apt-get install libssl-dev\n-\n-for Ubuntu 12.04:\n+\tsudo apt-get install build-essential libtool autotools-dev autoconf pkg-config libssl-dev libgmp-dev\n+\t\n+for Ubuntu 12.04 and later or Debian 7 and later libboost-all-dev has to be installed:\n \n \tsudo apt-get install libboost-all-dev\n \n  db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n+ You can add the repository using the following command:\n \n- Ubuntu precise has packages for libdb5.1-dev and libdb5.1++-dev,\n+        sudo add-apt-repository ppa:bitcoin/bitcoin\n+        sudo apt-get update\n+\n+ Ubuntu 12.04 and later have packages for libdb5.1-dev and libdb5.1++-dev,\n  but using these will break binary wallet compatibility, and is not recommended.\n \n-for other Ubuntu & Debian:\n+for Debian 7 (Wheezy) and later:\n+ The oldstable repository contains db4.8 packages.\n+ Add the following line to /etc/apt/sources.list,\n+ replacing [mirror] with any official debian mirror.\n+\n+\tdeb http://[mirror]/debian/ oldstable main\n \n-\tsudo apt-get install libdb4.8-dev\n-\tsudo apt-get install libdb4.8++-dev\n-\tsudo apt-get install libboost1.37-dev\n- (If using Boost 1.37, append -mt to the boost libraries in the makefile)\n+To enable the change run\n+\n+\tsudo apt-get update\n+\n+for other Debian & Ubuntu (with ppa):\n+\n+\tsudo apt-get install libdb4.8-dev libdb4.8++-dev\n \n Optional:\n \n-\tsudo apt-get install libminiupnpc-dev (see USE_UPNP compile flag)\n+\tsudo apt-get install libminiupnpc-dev (see --with-miniupnpc and --enable-upnp-default)\n+\n+Dependencies for the GUI: Ubuntu & Debian\n+-----------------------------------------\n+\n+If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n+are installed. Either Qt 4 or Qt 5 are necessary to build the GUI.\n+If both Qt 4 and Qt 5 are installed, Qt 4 will be used. Pass `--with-gui=qt5` to configure to choose Qt5.\n+To build without GUI pass `--without-gui`.\n \n+To build with Qt 4 you need the following:\n \n-Dependency Build Instructions: Gentoo\n--------------------------------------\n+    sudo apt-get install libqt4-dev libprotobuf-dev protobuf-compiler\n \n-Note: If you just want to install bitcoind on Gentoo, you can add the Bitcoin overlay and use your package manager:\n+For Qt 5 you need the following:\n \n-\tlayman -a bitcoin && emerge bitcoind\n-\temerge -av1 --noreplace boost glib openssl sys-libs/db:4.8\n+    sudo apt-get install libqt5gui5 libqt5core5 libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler\n \n-Take the following steps to build (no UPnP support):\n+libqrencode (optional) can be installed with:\n \n-\tcd ${BITCOIN_DIR}/src\n-\tmake -f makefile.unix USE_UPNP= USE_IPV6=1 BDB_INCLUDE_PATH='/usr/include/db4.8'\n-\tstrip bitcoind\n+    sudo apt-get install libqrencode-dev\n \n+Once these are installed, they will be found by configure and a bitcoin-qt executable will be\n+built by default.\n \n Notes\n -----\n@@ -96,6 +123,17 @@ symbols, which reduces the executable size by about 90%.\n \n miniupnpc\n ---------\n+\n+[miniupnpc](http://miniupnp.free.fr/) may be used for UPnP port mapping.  It can be downloaded from [here](\n+http://miniupnp.tuxfamily.org/files/).  UPnP support is compiled in and\n+turned off by default.  See the configure options for upnp behavior desired:\n+\n+\t--without-miniupnpc      No UPnP support miniupnp not required\n+\t--disable-upnp-default   (the default) UPnP support turned off by default at runtime\n+\t--enable-upnp-default    UPnP support turned on by default at runtime\n+\n+To build:\n+\n \ttar -xzvf miniupnpc-1.6.tar.gz\n \tcd miniupnpc-1.6\n \tmake\n@@ -105,11 +143,33 @@ miniupnpc\n \n Berkeley DB\n -----------\n-You need Berkeley DB 4.8.  If you have to build Berkeley DB yourself:\n+It is recommended to use Berkeley DB 4.8. If you have to build it yourself:\n \n-\t../dist/configure --enable-cxx\n-\tmake\n+```bash\n+BITCOIN_ROOT=$(pwd)\n+\n+# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n+BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+mkdir -p $BDB_PREFIX\n+\n+# Fetch the source and verify that it is not tampered with\n+wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n+echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz' | sha256sum -c\n+# -> db-4.8.30.NC.tar.gz: OK\n+tar -xzvf db-4.8.30.NC.tar.gz\n \n+# Build the library and install to our prefix\n+cd db-4.8.30.NC/build_unix/\n+#  Note: Do a static build so that it can be embedded into the exectuable, instead of having to find a .so at runtime\n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n+make install\n+\n+# Configure Bitcoin Core to use our own-built instance of BDB\n+cd $BITCOIN_ROOT\n+./configure (other args...) LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\"\n+```\n+\n+**Note**: You only need Berkeley DB if the wallet is enabled (see the section *Disable-Wallet mode* below).\n \n Boost\n -----\n@@ -123,7 +183,16 @@ If you need to build Boost yourself:\n Security\n --------\n To help make your bitcoin installation more secure by making certain attacks impossible to\n-exploit even if a vulnerability is found, you can take the following measures:\n+exploit even if a vulnerability is found, binaries are hardened by default.\n+This can be disabled with:\n+\n+Hardening Flags:\n+\n+\t./configure --enable-hardening\n+\t./configure --disable-hardening\n+\n+\n+Hardening enables the following features:\n \n * Position Independent Executable\n     Build position independent code to take advantage of Address Space Layout Randomization\n@@ -135,10 +204,6 @@ exploit even if a vulnerability is found, you can take the following measures:\n     On an Amd64 processor where a library was not compiled with -fPIC, this will cause an error\n     such as: \"relocation R_X86_64_32 against `......' can not be used when making a shared object;\"\n \n-    To build with PIE, use:\n-\n-    \tmake -f makefile.unix ... -e PIE=1\n-\n     To test that you have built PIE executable, install scanelf, part of paxutils, and use:\n \n     \tscanelf -e ./bitcoin\n@@ -162,3 +227,16 @@ exploit even if a vulnerability is found, you can take the following measures:\n \tRW- R-- RW-\n \n     The STK RW- means that the stack is readable and writeable but not executable.\n+\n+Disable-wallet mode\n+--------------------\n+When the intention is to run only a P2P node without a wallet, bitcoin may be compiled in\n+disable-wallet mode with:\n+\n+    ./configure --disable-wallet\n+\n+In this case there is no dependency on Berkeley DB 4.8.\n+\n+Mining is also possible in disable-wallet mode, but only using the `getblocktemplate` RPC\n+call not `getwork`.\n+"
      },
      {
        "sha": "b9d2006e3c1736dcde719c38ed343e5c357043de",
        "filename": "doc/coding.md",
        "status": "modified",
        "additions": 109,
        "deletions": 63,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/coding.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/coding.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/coding.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,50 +1,96 @@\n Coding\n ====================\n \n-Please be consistent with the existing coding style.\n-\n-Block style:\n-\n-\tbool Function(char* psz, int n)\n-\t{\n-\t    // Comment summarising what this section of code does\n-\t    for (int i = 0; i < n; i++)\n-\t    {\n-\t        // When something fails, return early\n-\t        if (!Something())\n-\t            return false;\n-\t        ...\n-\t    }\n-\t\n-\t    // Success return is usually at the end\n-\t    return true;\n-\t}\n-\n-- ANSI/Allman block style\n-- 4 space indenting, no tabs\n-- No extra spaces inside parenthesis; please don't do ( this )\n-- No space after function names, one space after if, for and while\n-\n-Variable names begin with the type in lowercase, like nSomeVariable.\n-Please don't put the first word of the variable name in lowercase like\n-someVariable.\n-\n-Common types:\n-\n-\tn       integer number: short, unsigned short, int, unsigned int, int64, uint64, sometimes char if used as a number\n-\td       double, float\n-\tf       flag\n-\thash    uint256\n-\tp       pointer or array, one p for each level of indirection\n-\tpsz     pointer to null terminated string\n-\tstr     string object\n-\tv       vector or similar list objects\n-\tmap     map or multimap\n-\tset     set or multiset\n-\tbn      CBigNum\n+Various coding styles have been used during the history of the codebase,\n+and the result is not very consistent. However, we're now trying to converge to\n+a single style, so please use it in new code. Old code will be converted\n+gradually.\n+- Basic rules specified in src/.clang-format. Use a recent clang-format-3.5 to format automatically.\n+  - Braces on new lines for namespaces, classes, functions, methods.\n+  - Braces on the same line for everything else.\n+  - 4 space indentation (no tabs) for every block except namespaces.\n+  - No indentation for public/protected/private or for namespaces.\n+  - No extra spaces inside parenthesis; don't do ( this )\n+  - No space after function names; one space after if, for and while.\n+\n+Block style example:\n+```c++\n+namespace foo\n+{\n+class Class\n+{\n+    bool Function(char* psz, int n)\n+    {\n+        // Comment summarising what this section of code does\n+        for (int i = 0; i < n; i++) {\n+            // When something fails, return early\n+            if (!Something())\n+                return false;\n+            ...\n+        }\n+\n+        // Success return is usually at the end\n+        return true;\n+    }\n+}\n+}\n+```\n+\n+Doxygen comments\n+-----------------\n+\n+To facilitate the generation of documentation, use doxygen-compatible comment blocks for functions, methods and fields.\n+\n+For example, to describe a function use:\n+```c++\n+/**\n+ * ... text ...\n+ * @param[in] arg1    A description\n+ * @param[in] arg2    Another argument description\n+ * @pre Precondition for function...\n+ */\n+bool function(int arg1, const char *arg2)\n+```\n+A complete list of `@xxx` commands can be found at http://www.stack.nl/~dimitri/doxygen/manual/commands.html.\n+As Doxygen recognizes the comments by the delimiters (`/**` and `*/` in this case), you don't\n+*need* to provide any commands for a comment to be valid, just a description text is fine. \n+\n+To describe a class use the same construct above the class definition:\n+```c++\n+/** \n+ * Alerts are for notifying old versions if they become too obsolete and\n+ * need to upgrade. The message is displayed in the status bar.\n+ * @see GetWarnings()\n+ */\n+class CAlert\n+{\n+```\n+\n+To describe a member or variable use:\n+```c++\n+int var; //!< Detailed description after the member\n+```\n+\n+Also OK:\n+```c++\n+///\n+/// ... text ...\n+///\n+bool function2(int arg1, const char *arg2)\n+```\n+\n+Not OK (used plenty in the current source, but not picked up):\n+```c++\n+//\n+// ... text ...\n+//\n+```\n+\n+A full list of comment syntaxes picked up by doxygen can be found at http://www.stack.nl/~dimitri/doxygen/manual/docblocks.html,\n+but if possible use one of the above styles.\n \n--------------------------\n Locking/mutex usage notes\n+-------------------------\n \n The code is multi-threaded, and uses mutexes and the\n LOCK/TRY_LOCK macros to protect data structures.\n@@ -60,35 +106,35 @@ between the various components is a goal, with any necessary locking\n done by the components (e.g. see the self-contained CKeyStore class\n and its cs_KeyStore lock for example).\n \n--------\n Threads\n+-------\n+\n+- ThreadScriptCheck : Verifies block scripts.\n+\n+- ThreadImport : Loads blocks from blk*.dat files or bootstrap.dat.\n \n - StartNode : Starts other threads.\n \n-- ThreadGetMyExternalIP : Determines outside-the-firewall IP address, sends addr message to connected peers when it determines it. \n+- ThreadGetMyExternalIP : Determines outside-the-firewall IP address, sends addr message to connected peers when it determines it.\n+\n+- ThreadDNSAddressSeed : Loads addresses of peers from the DNS.\n+\n+- ThreadMapPort : Universal plug-and-play startup/shutdown\n \n - ThreadSocketHandler : Sends/Receives data from peers on port 8333.\n- \n-- ThreadMessageHandler : Higher-level message handling (sending and receiving).\n- \n+\n+- ThreadOpenAddedConnections : Opens network connections to added nodes.\n+\n - ThreadOpenConnections : Initiates new connections to peers.\n \n-- ThreadTopUpKeyPool : replenishes the keystore's keypool.\n- \n-- ThreadCleanWalletPassphrase : re-locks an encrypted wallet after user has unlocked it for a period of time. \n- \n-- SendingDialogStartTransfer : used by pay-via-ip-address code (obsolete)\n- \n-- ThreadDelayedRepaint : repaint the gui \n+- ThreadMessageHandler : Higher-level message handling (sending and receiving).\n+\n+- DumpAddresses : Dumps IP addresses of nodes to peers.dat.\n \n - ThreadFlushWalletDB : Close the wallet.dat file if it hasn't been used in 500ms.\n- \n+\n - ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n- \n-- ThreadBitcoinMiner : Generates bitcoins\n-  \n-- ThreadMapPort : Universal plug-and-play startup/shutdown\n- \n-- Shutdown : Does an orderly shutdown of everything\n- \n-- ExitTimeout : Windows-only, sleeps 5 seconds then exits application\n+\n+- BitcoinMiner : Generates bitcoins (if wallet is enabled).\n+\n+- Shutdown : Does an orderly shutdown of everything."
      },
      {
        "sha": "66a1757ac5e760716a7ef2ff6e096689dc0254a2",
        "filename": "doc/dnsseed-policy.md",
        "status": "added",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,55 @@\n+Expectations for DNS Seed operators\n+====================================\n+\n+Bitcoin Core attempts to minimize the level of trust in DNS seeds,\n+but DNS seeds still pose a small amount of risk for the network.\n+As such, DNS seeds must be run by entities which have some minimum\n+level of trust within the Bitcoin community.\n+\n+Other implementations of Bitcoin software may also use the same\n+seeds and may be more exposed. In light of this exposure this\n+document establishes some basic expectations for the expectations\n+for the operation of dnsseeds.\n+\n+0. A DNS seed operating organization or person is expected\n+to follow good host security practices and maintain control of\n+their serving infrastructure and not sell or transfer control of their\n+DNS seed. Any hosting services contracted by the operator are\n+equally expected to uphold these expectations.\n+\n+1. The DNS seed results must consist exclusively of fairly selected and\n+functioning Bitcoin nodes from the public network to the best of the\n+operators understanding and capability.\n+\n+2. For the avoidance of doubt, the results may be randomized but must not\n+single-out any group of hosts to receive different results unless due to an\n+urgent technical necessity and disclosed.\n+\n+3. The results may not be served with a DNS TTL of less than one minute.\n+\n+4. Any logging of DNS queries should be only that which is necessary\n+for the operation of the service or urgent health of the Bitcoin\n+network and must not be retained longer than necessary or disclosed\n+to any third party.\n+\n+5. Information gathered as a result of the operators node-spidering\n+(not from DNS queries) may be freely published or retained, but only\n+if this data was not made more complete by biasing node connectivity\n+(a violation of expectation (1)).\n+\n+6. Operators are encouraged, but not required, to publicly document the\n+details of their operating practices.\n+\n+7. A reachable email contact address must be published for inquiries\n+related to the DNS seed operation.\n+\n+If these expectations cannot be satisfied the operator should\n+discontinue providing services and contact the active Bitcoin\n+Core development team as well as posting on bitcoin-development.\n+\n+Behavior outside of these expectations may be reasonable in some\n+situations but should be discussed in public in advance.\n+\n+See also\n+----------\n+- [bitcoin-seeder](https://github.com/sipa/bitcoin-seeder) is a reference implementation of a DNS seed."
      },
      {
        "sha": "5d4cdabf8d1e32962672a94532446ebeef5b62e3",
        "filename": "doc/files.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/doc/files.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/doc/files.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.txt?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,19 +0,0 @@\n-Used in 0.8.0:\n-* wallet.dat: personal wallet (BDB) with keys and transactions\n-* peers.dat: peer IP address database (custom format); since 0.7.0\n-* blocks/blk000??.dat: block data (custom, 128 MiB per file); since 0.8.0\n-* blocks/rev000??.dat; block undo data (custom); since 0.8.0 (format changed since pre-0.8)\n-* blocks/index/*; block index (LevelDB); since 0.8.0\n-* chainstate/*; block chain state database (LevelDB); since 0.8.0\n-* database/*: BDB database environment; only used for wallet since 0.8.0\n-\n-Only used in pre-0.8.0:\n-* blktree/*; block chain index (LevelDB); since pre-0.8, replaced by blocks/index/* in 0.8.0\n-* coins/*; unspent transaction output database (LevelDB); since pre-0.8, replaced by chainstate/* in 0.8.0\n-\n-Only used before 0.8.0:\n-* blkindex.dat: block chain index database (BDB); replaced by {chainstate/*,blocks/index/*,blocks/rev000??.dat} in 0.8.0\n-* blk000?.dat: block data (custom, 2 GiB per file); replaced by blocks/blk000??.dat in 0.8.0\n-\n-Only used before 0.7.0:\n-* addr.dat: peer IP address database (BDB); replaced by peers.dat in 0.7.0"
      },
      {
        "sha": "b356a5d88d8d28bae1f683b8c17448e409ee162f",
        "filename": "doc/gitian-building.md",
        "status": "added",
        "additions": 410,
        "deletions": 0,
        "changes": 410,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,410 @@\n+Gitian building\n+================\n+\n+*Setup instructions for a gitian build of Bitcoin using a Debian VM or physical system.*\n+\n+Gitian is the deterministic build process that is used to build the Bitcoin\n+Core executables. It provides a way to be reasonably sure that the\n+executables are really built from source on GitHub. It also makes sure that\n+the same, tested dependencies are used and statically built into the executable.\n+\n+Multiple developers build the source code by following a specific descriptor\n+(\"recipe\"), cryptographically sign the result, and upload the resulting signature.\n+These results are compared and only if they match, the build is accepted and uploaded\n+to bitcoin.org.\n+\n+More independent gitian builders are needed, which is why I wrote this\n+guide. It is preferred to follow these steps yourself instead of using someone else's\n+VM image to avoid 'contaminating' the build.\n+\n+Table of Contents\n+------------------\n+\n+- [Create a new VirtualBox VM](#create-a-new-virtualbox-vm)\n+- [Connecting to the VM](#connecting-to-the-vm)\n+- [Setting up Debian for gitian building](#setting-up-debian-for-gitian-building)\n+- [Installing gitian](#installing-gitian)\n+- [Setting up gitian images](#setting-up-gitian-images)\n+- [Getting and building the inputs](#getting-and-building-the-inputs)\n+- [Building Bitcoin](#building-bitcoin)\n+- [Building an alternative repository](#building-an-alternative-repository)\n+- [Signing externally](#signing-externally)\n+- [Uploading signatures](#uploading-signatures)\n+\n+Preparing the Gitian builder host\n+---------------------------------\n+\n+The first step is to prepare the host environment that will be used to perform the Gitian builds.\n+This guide explains how to set up the environment, and how to start the builds.\n+\n+Debian Linux was chosen as the host distribution because it has a lightweight install (in contrast to Ubuntu) and is readily available.\n+Any kind of virtualization can be used, for example:\n+- [VirtualBox](https://www.virtualbox.org/), covered by this guide\n+- [KVM](http://www.linux-kvm.org/page/Main_Page)\n+- [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n+\n+You can also install on actual hardware instead of using virtualization.\n+\n+Create a new VirtualBox VM\n+---------------------------\n+In the VirtualBox GUI click \"Create\" and choose the following parameters in the wizard:\n+\n+![](gitian-building/create_vm_page1.png)\n+\n+- Type: Linux, Debian (64 bit)\n+\n+![](gitian-building/create_vm_memsize.png)\n+\n+- Memory Size: at least 1024MB, anything lower will really slow the build down\n+\n+![](gitian-building/create_vm_hard_drive.png)\n+\n+- Hard Drive: Create a virtual hard drive now\n+    \n+![](gitian-building/create_vm_hard_drive_file_type.png)\n+\n+- Hard Drive file type: Use the default, VDI (VirtualBox Disk Image) \n+\n+![](gitian-building/create_vm_storage_physical_hard_drive.png)\n+    \n+- Storage on Physical hard drive: Dynamically Allocated \n+    \n+![](gitian-building/create_vm_file_location_size.png)\n+\n+- Disk size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side \n+- Push the `Create` button\n+\n+Get the [Debian 7.4 net installer](http://ftp.at.debian.org/debian-jigdo/current/amd64/iso-cd/debian-7.4.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n+This DVD image can be validated using a SHA256 hashing tool, for example on\n+Unixy OSes by entering the following in a terminal:\n+\n+    echo \"b712a141bc60269db217d3b3e456179bd6b181645f90e4aac9c42ed63de492e9  debian-7.4.0-amd64-netinst.iso\" | sha256sum -c\n+    # (must return OK)\n+\n+After creating the VM, we need to configure it. \n+\n+- Click the `Settings` button, then go to the `Network` tab. Adapter 1 should be attacked to `NAT`.\n+\n+![](gitian-building/network_settings.png)\n+\n+- Click `Advanced`, then `Port Forwarding`. We want to set up a port through where we can reach the VM to get files in and out.\n+- Create a new rule by clicking the plus icon.\n+\n+![](gitian-building/port_forwarding_rules.png)\n+\n+- Set up the new rule the following way:\n+  - Name: `SSH`\n+  - Protocol: `TCP`\n+  - Leave Host IP empty\n+  - Host Port: `22222`\n+  - Leave Guest IP empty\n+  - Guest Port: `22`\n+\n+- Click `Ok` twice to save.\n+\n+Then start the VM. On the first launch you will be asked for a CD or DVD image. Choose the downloaded iso.\n+\n+![](gitian-building/select_startup_disk.png)\n+\n+Installing Debian\n+------------------\n+\n+In this section it will be explained how to install Debian on the newly created VM.\n+\n+- Choose the non-graphical installer.  We do not need the graphical environment, it will only increase installation time and disk usage.\n+\n+![](gitian-building/debian_install_1_boot_menu.png)\n+\n+**Note**: Navigation in the Debian installer: To keep a setting at the default\n+and proceed, just press `Enter`. To select a different button, press `Tab`.\n+\n+- Choose locale and keyboard settings (doesn't matter, you can just go with the defaults or select your own information)\n+\n+![](gitian-building/debian_install_2_select_a_language.png)\n+![](gitian-building/debian_install_3_select_location.png)\n+![](gitian-building/debian_install_4_configure_keyboard.png)\n+\n+- The VM will detect network settings using DHCP, this should all proceed automatically\n+- Configure the network: \n+  - System name `debian`.\n+  - Leave domain name empty.\n+\n+![](gitian-building/debian_install_5_configure_the_network.png)\n+\n+- Choose a root password and enter it twice (remember it for later) \n+\n+![](gitian-building/debian_install_6a_set_up_root_password.png)\n+\n+- Name the new user `debian` (the full name doesn't matter, you can leave it empty) \n+\n+![](gitian-building/debian_install_7_set_up_user_fullname.png)\n+![](gitian-building/debian_install_8_set_up_username.png)\n+\n+- Choose a user password and enter it twice (remember it for later) \n+\n+![](gitian-building/debian_install_9_user_password.png)\n+\n+- The installer will set up the clock using a time server, this process should be automatic\n+- Set up the clock: choose a time zone (depends on the locale settings that you picked earlier; specifics don't matter)  \n+\n+![](gitian-building/debian_install_10_configure_clock.png)\n+\n+- Disk setup\n+  - Partitioning method: Guided - Use the entire disk \n+  \n+![](gitian-building/debian_install_11_partition_disks.png)\n+\n+  - Select disk to partition: SCSI1 (0,0,0) \n+\n+![](gitian-building/debian_install_12_choose_disk.png)\n+\n+  - Partitioning scheme: All files in one partition \n+  \n+![](gitian-building/debian_install_13_partition_scheme.png)\n+\n+  - Finish partitioning and write changes to disk -> *Yes* (`Tab`, `Enter` to select the `Yes` button)\n+\n+![](gitian-building/debian_install_14_finish.png) \n+![](gitian-building/debian_install_15_write_changes.png)\n+\n+- The base system will be installed, this will take a minute or so\n+- Choose a mirror (any will do) \n+\n+![](gitian-building/debian_install_16_choose_a_mirror.png)\n+\n+- Enter proxy information (unless you are on an intranet, you can leave this empty)\n+\n+![](gitian-building/debian_install_18_proxy_settings.png)\n+\n+- Wait a bit while 'Select and install software' runs\n+- Participate in popularity contest -> *No*\n+- Choose software to install. We need just the base system. \n+\n+![](gitian-building/debian_install_19_software_selection.png)\n+\n+- Make sure only 'SSH server' and 'Standard System Utilities' are checked\n+- Uncheck 'Debian Desktop Environment' and 'Print Server'\n+\n+![](gitian-building/debian_install_20_install_grub.png)\n+\n+- Install the GRUB boot loader to the master boot record? -> Yes \n+\n+![](gitian-building/debian_install_21_finish_installation.png)\n+\n+- Installation Complete -> *Continue*\n+- After installation, the VM will reboot and you will have a working Debian VM. Congratulations!\n+\n+Connecting to the VM\n+----------------------\n+\n+After the VM has booted you can connect to it using SSH, and files can be copied from and to the VM using a SFTP utility.\n+Connect to `localhost`, port `22222` (or the port configured when installing the VM).\n+On Windows you can use putty[1] and WinSCP[2].\n+\n+For example to connect as `root` from a Linux command prompt use\n+\n+    $ ssh root@localhost -p 22222\n+    The authenticity of host '[localhost]:22222 ([127.0.0.1]:22222)' can't be established.\n+    ECDSA key fingerprint is 8e:71:f9:5b:62:46:de:44:01:da:fb:5f:34:b5:f2:18.\n+    Are you sure you want to continue connecting (yes/no)? yes\n+    Warning: Permanently added '[localhost]:22222' (ECDSA) to the list of known hosts.\n+    root@localhost's password: (enter root password configured during install)\n+    Linux debian 3.2.0-4-amd64 #1 SMP Debian 3.2.54-2 x86_64\n+    root@debian:~#\n+\n+Replace `root` with `debian` to log in as user.\n+\n+[1] http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html\n+[2] http://winscp.net/eng/index.php\n+\n+Setting up Debian for gitian building\n+--------------------------------------\n+\n+In this section we will be setting up the Debian installation for Gitian building.\n+\n+First we need to log in as `root` to set up dependencies and make sure that our\n+user can use the sudo command. Type/paste the following in the terminal:\n+\n+```bash\n+apt-get install git ruby sudo apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils\n+adduser debian sudo\n+```\n+\n+When you get a colorful screen with a question about the 'LXC directory', just\n+go with the default (`/var/lib/lxc`).\n+\n+Then set up LXC and the rest with the following, which is a complex jumble of settings and workarounds:\n+\n+```bash\n+# the version of lxc-start in Debian 7.4 needs to run as root, so make sure\n+# that the build script can exectute it without providing a password\n+echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-start\" > /etc/sudoers.d/gitian-lxc\n+# add cgroup for LXC\n+echo \"cgroup  /sys/fs/cgroup  cgroup  defaults  0   0\" >> /etc/fstab\n+# make /etc/rc.local script that sets up bridge between guest and host\n+echo '#!/bin/sh -e' > /etc/rc.local\n+echo 'brctl addbr br0' >> /etc/rc.local\n+echo 'ifconfig br0 10.0.3.2/24 up' >> /etc/rc.local\n+echo 'exit 0' >> /etc/rc.local\n+# make sure that USE_LXC is always set when logging in as debian,\n+# and configure LXC IP addresses\n+echo 'export USE_LXC=1' >> /home/debian/.profile\n+echo 'export GITIAN_HOST_IP=10.0.3.2' >> /home/debian/.profile\n+echo 'export LXC_GUEST_IP=10.0.3.5' >> /home/debian/.profile\n+reboot\n+```\n+\n+At the end the VM is rebooted to make sure that the changes take effect. The steps in this\n+section need only to be performed once.\n+\n+Installing gitian\n+------------------\n+\n+Re-login as the user `debian` that was created during installation.\n+The rest of the steps in this guide will be performed as that user.\n+\n+There is no `python-vm-builder` package in Debian, so we need to install it from source ourselves,\n+\n+```bash\n+wget http://archive.ubuntu.com/ubuntu/pool/universe/v/vm-builder/vm-builder_0.12.4+bzr489.orig.tar.gz\n+echo \"ec12e0070a007989561bfee5862c89a32c301992dd2771c4d5078ef1b3014f03  vm-builder_0.12.4+bzr489.orig.tar.gz\" | sha256sum -c\n+# (verification -- must return OK)\n+tar -zxvf vm-builder_0.12.4+bzr489.orig.tar.gz\n+cd vm-builder-0.12.4+bzr489\n+sudo python setup.py install\n+cd ..\n+```\n+\n+**Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n+\n+Clone the git repositories for bitcoin and gitian and then checkout the bitcoin version that you want to build.\n+\n+```bash\n+git clone https://github.com/devrandom/gitian-builder.git\n+git clone https://github.com/bitcoin/bitcoin\n+cd bitcoin\n+git checkout v${VERSION}\n+cd ..\n+```\n+\n+Setting up gitian images\n+-------------------------\n+\n+Gitian needs virtual images of the operating system to build in.\n+Currently this is Ubuntu Precise for both x86 architectures.\n+These images will be copied and used every time that a build is started to\n+make sure that the build is deterministic.\n+Creating the images will take a while, but only has to be done once.\n+\n+Execute the following as user `debian`:\n+\n+```bash\n+cd gitian-builder\n+bin/make-base-vm --lxc --arch i386 --suite precise\n+bin/make-base-vm --lxc --arch amd64 --suite precise\n+```\n+\n+There will be a lot of warnings printed during build of the images. These can be ignored.\n+\n+**Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n+\n+Getting and building the inputs\n+--------------------------------\n+\n+In [doc/release-process.md](release-process.md) in the bitcoin repository under 'Fetch and build inputs'.\n+you will find a list of `wget` commands that can be executed to get the dependencies.\n+\n+I needed to add `--no-check-certificate` to the OpenSSL wget line to make it work.\n+Likely this is because the ca-certificates in Debian 7.4 is fairly old. This does not create a \n+security issue as the gitian descriptors check the integrity of the input archives and refuse to work\n+if any one is corrupted.\n+\n+After downloading the archives, execute the `gbuild` commands to build the dependencies.\n+This can take a long time, but only has to be done when the dependencies change, for example\n+to upgrade the used version.\n+\n+**Note**: Do not forget to copy the result from `build/out` to `inputs` after every gbuild command! This will save\n+you a lot of time.\n+\n+At any time you can check the package installation and build progress with\n+\n+```bash\n+tail -f var/install.log\n+tail -f var/build.log\n+```\n+\n+Building Bitcoin\n+----------------\n+\n+To build Bitcoin (for Linux, OSX and Windows) just follow the steps under 'perform\n+gitian builds' in [doc/release-process.md](release-process.md) in the bitcoin repository.\n+\n+Output from `gbuild` will look something like\n+\n+    Initialized empty Git repository in /home/debian/gitian-builder/inputs/bitcoin/.git/\n+    remote: Reusing existing pack: 35606, done.\n+    remote: Total 35606 (delta 0), reused 0 (delta 0)\n+    Receiving objects: 100% (35606/35606), 26.52 MiB | 4.28 MiB/s, done.\n+    Resolving deltas: 100% (25724/25724), done.\n+    From https://github.com/bitcoin/bitcoin\n+    ... (new tags, new branch etc)\n+    --- Building for precise i386 ---\n+    Stopping target if it is up\n+    Making a new image copy\n+    stdin: is not a tty\n+    Starting target\n+    Checking if target is up\n+    Preparing build environment\n+    Updating apt-get repository (log in var/install.log)\n+    Installing additional packages (log in var/install.log)\n+    Grabbing package manifest\n+    stdin: is not a tty\n+    Creating build script (var/build-script)\n+    lxc-start: Connection refused - inotify event with no name (mask 32768)\n+    Running build script (log in var/build.log)\n+\n+As when building the dependencies, the progress of package installation and building\n+can be inspected in `var/install.log` and `var/build.log`.\n+\n+Building an alternative repository\n+-----------------------------------\n+\n+If you want to do a test build of a pull on GitHub it can be useful to point\n+the gitian builder at an alternative repository, using the same descriptors\n+and inputs.\n+\n+For example:\n+```bash\n+URL=https://github.com/laanwj/bitcoin.git\n+COMMIT=2014_03_windows_unicode_path\n+./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+```\n+\n+Signing externally\n+-------------------\n+\n+If you want to do the PGP signing on another device that's also possible; just define `SIGNER` as mentioned\n+and follow the steps in the build process as normal.\n+\n+    gpg: skipped \"laanwj\": secret key not available\n+\n+When you execute `gsign` you will get an error from GPG, which can be ignored. Copy the resulting `.assert` files\n+in `gitian.sigs` to your signing machine and do\n+\n+```bash\n+    gpg --detach-sign ${VERSION}-linux/${SIGNER}/bitcoin-build.assert\n+    gpg --detach-sign ${VERSION}-win/${SIGNER}/bitcoin-build.assert\n+    gpg --detach-sign ${VERSION}-osx/${SIGNER}/bitcoin-build.assert\n+```\n+\n+This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n+gitian build.\n+\n+Uploading signatures\n+---------------------\n+\n+After building and signing you can push your signatures (both the `.assert` and `.assert.sig` files) to the\n+[bitcoin/gitian.sigs](https://github.com/bitcoin/gitian.sigs/) repository, or if that's not possible create a pull\n+request. You can also mail the files to me (laanwj@gmail.com) and I'll commit them."
      },
      {
        "sha": "14aef5abaea8d94a5d9ab6cc7e449f7efe4e9f97",
        "filename": "doc/gitian-building/create_vm_file_location_size.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/create_vm_file_location_size.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/create_vm_file_location_size.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_file_location_size.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "a1706e14fda1488dbc180a4f619e5c3de98fae2b",
        "filename": "doc/gitian-building/create_vm_hard_drive.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/create_vm_hard_drive.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/create_vm_hard_drive.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_drive.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "251b8ee3e2757a090a8fd045cd3ba76354459915",
        "filename": "doc/gitian-building/create_vm_hard_drive_file_type.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/create_vm_hard_drive_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/create_vm_hard_drive_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_drive_file_type.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "33717867a5807b56774a2b704e228687d3416ae4",
        "filename": "doc/gitian-building/create_vm_memsize.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/create_vm_memsize.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/create_vm_memsize.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_memsize.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "edaebc6223708e1473d893dd480a5ef439a39473",
        "filename": "doc/gitian-building/create_vm_page1.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/create_vm_page1.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/create_vm_page1.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_page1.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "987efaa40c2e3c57ef7fb6c64fee8efa0e63241e",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_drive.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/create_vm_storage_physical_hard_drive.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/create_vm_storage_physical_hard_drive.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_drive.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "467c79018ec79006e08413be354cbd349304a284",
        "filename": "doc/gitian-building/debian_install_10_configure_clock.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_10_configure_clock.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_10_configure_clock.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_10_configure_clock.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "18110734df1a5a709f8f2a9811bc3afaaf9314f4",
        "filename": "doc/gitian-building/debian_install_11_partition_disks.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_11_partition_disks.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_11_partition_disks.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_11_partition_disks.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "a00d4abf175febcdf6b32b270a88a7bce0389f2c",
        "filename": "doc/gitian-building/debian_install_12_choose_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_12_choose_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_12_choose_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_12_choose_disk.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "2f80f19b631c0cbf7ebeddc71c309aca8cf86eed",
        "filename": "doc/gitian-building/debian_install_13_partition_scheme.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_13_partition_scheme.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_13_partition_scheme.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_13_partition_scheme.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "411d457e95e5ec0e2907cd92a92b2c54f21de943",
        "filename": "doc/gitian-building/debian_install_14_finish.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_14_finish.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_14_finish.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_14_finish.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "f26093982c438682d4bc193dc5e0b8838abba258",
        "filename": "doc/gitian-building/debian_install_15_write_changes.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_15_write_changes.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_15_write_changes.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_15_write_changes.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "d2c2e9523b71d00e33575976f75b8fc859c828ff",
        "filename": "doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_16_choose_a_mirror.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "cef2db07815451cf16099e063f94bb40202ee822",
        "filename": "doc/gitian-building/debian_install_17_choose_a_mirror2.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_17_choose_a_mirror2.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_17_choose_a_mirror2.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_17_choose_a_mirror2.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "24ba25c109f3136daf0116db9344e05d446687fc",
        "filename": "doc/gitian-building/debian_install_18_proxy_settings.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_18_proxy_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_18_proxy_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_18_proxy_settings.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "d462757aff24ee45e883a002f88121162f3a4ae3",
        "filename": "doc/gitian-building/debian_install_19_software_selection.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_19_software_selection.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_19_software_selection.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_19_software_selection.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "27fd849b4fa3a5dc2b6db76de734f1027d886beb",
        "filename": "doc/gitian-building/debian_install_1_boot_menu.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_1_boot_menu.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_1_boot_menu.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_1_boot_menu.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "de4f9be0c9a57e58465391669044d47b5400dddc",
        "filename": "doc/gitian-building/debian_install_20_install_grub.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_20_install_grub.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_20_install_grub.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_20_install_grub.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "b967c3550df596a659097082c3acb74ec8087628",
        "filename": "doc/gitian-building/debian_install_21_finish_installation.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_21_finish_installation.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_21_finish_installation.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_21_finish_installation.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "1c9e0bcfc1345913a3ba4120462253b1198607e2",
        "filename": "doc/gitian-building/debian_install_2_select_a_language.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_2_select_a_language.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_2_select_a_language.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_2_select_a_language.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "005c395656a4040cfa6eabd041a0f969af7eec70",
        "filename": "doc/gitian-building/debian_install_3_select_location.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_3_select_location.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_3_select_location.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_3_select_location.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "580c8af7c5310c59ad373c183337d771c94def48",
        "filename": "doc/gitian-building/debian_install_4_configure_keyboard.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_4_configure_keyboard.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "a7fdffc66b8b20d011580cf40e0d425a7aa559cb",
        "filename": "doc/gitian-building/debian_install_5_configure_the_network.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_5_configure_the_network.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_5_configure_the_network.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_5_configure_the_network.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "7a986d92f48ca3755e37993d098053321109751d",
        "filename": "doc/gitian-building/debian_install_6_domain_name.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_6_domain_name.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_6_domain_name.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6_domain_name.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "31bd210f382d11a0f904ae393a744a6a1771e390",
        "filename": "doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6a_set_up_root_password.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "bffc6ccd7a8ca4d1288cee5f9298e80baf83b852",
        "filename": "doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_7_set_up_user_fullname.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "9e2750ad4ea3fe11f4d8d27dd0e5c05ca34f864a",
        "filename": "doc/gitian-building/debian_install_8_set_up_username.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_8_set_up_username.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_8_set_up_username.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_8_set_up_username.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "a26d30cba569fdf1c8740c97abaa99f82b074ce0",
        "filename": "doc/gitian-building/debian_install_9_user_password.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_9_user_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/debian_install_9_user_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_9_user_password.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "1d9b6428a74e3d6672e17a088b1e5286678cf15f",
        "filename": "doc/gitian-building/network_settings.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/network_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/network_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/network_settings.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "e45c9efffc96ec17048395994a1678a4f389f53c",
        "filename": "doc/gitian-building/port_forwarding_rules.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/port_forwarding_rules.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/port_forwarding_rules.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/port_forwarding_rules.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "729b368fd1176b08bd1010682c77a3784aadf3d5",
        "filename": "doc/gitian-building/select_startup_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/select_startup_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/gitian-building/select_startup_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/select_startup_disk.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "075930791b6e7adfa28671acf2768adaff400bb3",
        "filename": "doc/img/bootstrap1.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/img/bootstrap1.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/img/bootstrap1.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/img/bootstrap1.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "6461f818107f733391fc14443f07d6c9e4444358",
        "filename": "doc/img/bootstrap2.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/img/bootstrap2.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/img/bootstrap2.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/img/bootstrap2.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "ad69737922e6fe1e61990f9a00ed0494e90479af",
        "filename": "doc/img/bootstrap4.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/img/bootstrap4.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/img/bootstrap4.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/img/bootstrap4.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "d8d9baaf37acf58203b5c51857fb049ac894a310",
        "filename": "doc/img/bootstrap5.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/img/bootstrap5.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/img/bootstrap5.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/img/bootstrap5.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "1f0559d80643ccb209654567b9ca13eb9473cb47",
        "filename": "doc/init.md",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,92 @@\n+Sample init scripts and service configuration for bitcoind\n+==========================================================\n+\n+Sample scripts and configuration files for systemd, Upstart and OpenRC\n+can be found in the contrib/init folder.\n+\n+    contrib/init/bitcoind.service:    systemd service unit configuration\n+    contrib/init/bitcoind.openrc:     OpenRC compatible SysV style init script\n+    contrib/init/bitcoind.openrcconf: OpenRC conf.d file\n+    contrib/init/bitcoind.conf:       Upstart service configuration file\n+\n+1. Service User\n+---------------------------------\n+\n+All three startup configurations assume the existence of a \"bitcoin\" user\n+and group.  They must be created before attempting to use these scripts.\n+\n+2. Configuration\n+---------------------------------\n+\n+At a bare minimum, bitcoind requires that the rpcpassword setting be set\n+when running as a daemon.  If the configuration file does not exist or this\n+setting is not set, bitcoind will shutdown promptly after startup.\n+\n+This password does not have to be remembered or typed as it is mostly used\n+as a fixed token that bitcoind and client programs read from the configuration\n+file, however it is recommended that a strong and secure password be used\n+as this password is security critical to securing the wallet should the\n+wallet be enabled.\n+\n+If bitcoind is run with \"-daemon\" flag, and no rpcpassword is set, it will\n+print a randomly generated suitable password to stderr.  You can also\n+generate one from the shell yourself like this:\n+\n+bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\n+\n+Once you have a password in hand, set rpcpassword= in /etc/bitcoin/bitcoin.conf\n+\n+For an example configuration file that describes the configuration settings, \n+see contrib/debian/examples/bitcoin.conf.\n+\n+3. Paths\n+---------------------------------\n+\n+All three configurations assume several paths that might need to be adjusted.\n+\n+Binary:              /usr/bin/bitcoind\n+Configuration file:  /etc/bitcoin/bitcoin.conf\n+Data directory:      /var/lib/bitcoind\n+PID file:            /var/run/bitcoind/bitcoind.pid (OpenRC and Upstart)\n+                     /var/lib/bitcoind/bitcoind.pid (systemd)\n+\n+The configuration file, PID directory (if applicable) and data directory\n+should all be owned by the bitcoin user and group.  It is advised for security\n+reasons to make the configuration file and data directory only readable by the\n+bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n+can then be controlled by group membership.\n+\n+4. Installing Service Configuration\n+-----------------------------------\n+\n+4a) systemd\n+\n+Installing this .service file consists on just copying it to\n+/usr/lib/systemd/system directory, followed by the command\n+\"systemctl daemon-reload\" in order to update running systemd configuration.\n+\n+To test, run \"systemctl start bitcoind\" and to enable for system startup run\n+\"systemctl enable bitcoind\"\n+\n+4b) OpenRC\n+\n+Rename bitcoind.openrc to bitcoind and drop it in /etc/init.d.  Double\n+check ownership and permissions and make it executable.  Test it with\n+\"/etc/init.d/bitcoind start\" and configure it to run on startup with\n+\"rc-update add bitcoind\"\n+\n+4c) Upstart (for Debian/Ubuntu based distributions)\n+\n+Drop bitcoind.conf in /etc/init.  Test by running \"service bitcoind start\"\n+it will automatically start on reboot.\n+\n+NOTE: This script is incompatible with CentOS 5 and Amazon Linux 2014 as they\n+use old versions of Upstart and do not supply the start-stop-daemon uitility.\n+\n+5. Auto-respawn\n+-----------------------------------\n+\n+Auto respawning is currently only configured for Upstart and systemd.\n+Reasonable defaults have been chosen but YMMV.\n+\n+"
      },
      {
        "sha": "3caab818076b88f54e1da3d9cd25a809b9352ca9",
        "filename": "doc/multiwallet-qt.md",
        "status": "modified",
        "additions": 5,
        "deletions": 9,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/multiwallet-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/multiwallet-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/multiwallet-qt.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -4,15 +4,15 @@ Multiwallet Qt Development and Integration Strategy\n In order to support loading of multiple wallets in bitcoin-qt, a few changes in the UI architecture will be needed.\n Fortunately, only four of the files in the existing project are affected by this change.\n \n-Three new classes have been implemented in three new .h/.cpp file pairs, with much of the functionality that was previously\n+Two new classes have been implemented in two new .h/.cpp file pairs, with much of the functionality that was previously\n implemented in the BitcoinGUI class moved over to these new classes.\n \n The two existing files most affected, by far, are bitcoingui.h and bitcoingui.cpp, as the BitcoinGUI class will require\n some major retrofitting.\n \n Only requiring some minor changes is bitcoin.cpp.\n \n-Finally, three new headers and source files will have to be added to bitcoin-qt.pro.\n+Finally, two new headers and source files will have to be added to bitcoin-qt.pro.\n \n Changes to class BitcoinGUI\n ---------------------------\n@@ -23,13 +23,9 @@ A new class called *WalletView* inheriting from QStackedWidget has been written\n these page views. In addition to owning these five page views, a WalletView also has a pointer to a WalletModel instance.\n This allows the construction of multiple WalletView objects, each rendering a distinct wallet.\n \n-A second class called *WalletStack*, also inheriting from QStackedWidget, has been written to handle switching focus between\n-different loaded wallets. In its current implementation, as a QStackedWidget, only one wallet can be viewed at a time -\n-but this can be changed later.\n-\n-A third class called *WalletFrame* inheriting from QFrame has been written as a container for embedding all wallet-related\n-controls into BitcoinGUI. At present it just contains a WalletStack instance and does little more than passing on messages\n-from BitcoinGUI to the WalletStack, which in turn passes them to the individual WalletViews. It is a WalletFrame instance\n+A second class called *WalletFrame* inheriting from QFrame has been written as a container for embedding all wallet-related\n+controls into BitcoinGUI. At present it contains the WalletView instances for the wallets and does little more than passing on messages\n+from BitcoinGUI to the currently selected WalletView. It is a WalletFrame instance\n that takes the place of what used to be centralWidget in BitcoinGUI. The purpose of this class is to allow future\n refinements of the wallet controls with minimal need for further modifications to BitcoinGUI, thus greatly simplifying\n merges while reducing the risk of breaking top-level stuff."
      },
      {
        "sha": "083db32794d387cd1329989d5a1bcb17af22f927",
        "filename": "doc/readme-qt.md",
        "status": "removed",
        "additions": 0,
        "deletions": 128,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/doc/readme-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/doc/readme-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-qt.md?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,128 +0,0 @@\n-Bitcoin-Qt Readme\n-===============================\n-Contains build and configuration instructions for Bitcoin-Qt (Qt4 GUI for Bitcoin).\n-\n-Build Instructions\n----------------------\n-\n-### Debian\n-\n-\n-First, make sure that the required packages for Qt4 development of your\n-distribution are installed, these are\n-\n-\n-\n-for Debian and Ubuntu  <= 11.10 :\n-\n-\n-    apt-get install qt4-qmake libqt4-dev build-essential libboost-dev libboost-system-dev \\\n-        libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev \\\n-        libssl-dev libdb4.8++-dev\n-\n-for Ubuntu >= 12.04 (please read the 'Berkely DB version warning' below):\n-\n-    apt-get install qt4-qmake libqt4-dev build-essential libboost-dev libboost-system-dev \\\n-        libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev \\\n-        libssl-dev libdb++-dev libminiupnpc-dev\n-\n-For Qt 5 you need the following, otherwise you get an error with lrelease when running qmake:\n-\n-\n-    apt-get install qt5-qmake libqt5gui5 libqt5core5 libqt5dbus5 qttools5-dev-tools\n-\n-then execute the following:\n-\n-    qmake\n-    make\n-\n-Alternatively, install [Qt Creator](http://qt-project.org/downloads/) and open the `bitcoin-qt.pro` file. \n-An executable named `bitcoin-qt` will be built.\n-\n-\n-\n-### Mac OS X\n-\n-* Download and install the [Qt Mac OS X SDK](https://qt-project.org/downloads). It is recommended to also install Apple's Xcode with UNIX tools.\n-* Download and install either [MacPorts](https://www.macports.org/) or [HomeBrew](http://mxcl.github.io/homebrew/).\n-* Execute the following commands in a terminal to get the dependencies using MacPorts\n-\n-\t\tsudo port selfupdate\n-\t\tsudo port install boost db48 miniupnpc\n-\n-* Execute the following commands in a terminal to get the dependencies using HomeBrew:\n-\n-\t\tbrew update\n-\t\tbrew install boost miniupnpc openssl berkeley-db4\n-\n-- If using HomeBrew,  edit `bitcoin-qt.pro` to account for library location differences. There's a diff in `contrib/homebrew/bitcoin-qt-pro.patch` that shows what you need to change, or you can just patch by doing\n-\n-        patch -p1 < contrib/homebrew/bitcoin.qt.pro.patch\n-\n-- Open the bitcoin-qt.pro file in Qt Creator and build as normal (cmd+B)\n-\n-\n-Build Configuration Options\n----------------------\n-\n-### UPnP port forwarding\n-\n-To use UPnP for port forwarding behind a NAT router (recommended, as more connections overall allow for a faster and more stable bitcoin experience), pass the following argument to qmake:\n-\n-\n-\n-    qmake \"USE_UPNP=1\"\n-\n-(in **Qt Creator**, you can find the setting for additional qmake arguments under \"Projects\" -> \"Build Settings\" -> \"Build Steps\", then click \"Details\" next to **qmake**)\n-\n-This requires miniupnpc for UPnP port mapping.  It can be downloaded from [here](\n-http://miniupnp.tuxfamily.org/files/).  UPnP support is not compiled in by default.\n-\n-Set USE_UPNP to a different value to control this:\n-\n-\n-\tUSE_UPNP=-\tno UPnP support, miniupnpc not required;                                 \n-\tUSE_UPNP=0  (the default) built with UPnP, support turned off by default at runtime; \n-\tUSE_UPNP=1  build with UPnP support turned on by default at runtime.                 \n-\n-### Notification support for recent (k)ubuntu versions\n-\n-To see desktop notifications on (k)ubuntu versions starting from 10.04, enable usage of the\n-FreeDesktop notification interface through DBUS using the following qmake option:\n-\n-\n-\n-    qmake \"USE_DBUS=1\"\n-\n-### Generation of QR codes\n-\n-[libqrencode](http://fukuchi.org/works/qrencode/) may be used to generate QRCode images for payment requests. Pass the USE_QRCODE flag to qmake to control this:\n-\n-\n-\tUSE_QRCODE=0 \t(the default) No QRCode support - libarcode not required                 \n-\tUSE_QRCODE=1 \tQRCode support enabled                                                   \n-\n-Warnings\n----------------------\n-\n-### Berkely DB Version Warning\n-\n-\n-A warning for people using the *static binary* version of Bitcoin on a Linux/UNIX-ish system (tl;dr: **Berkely DB databases are not forward compatible**).\n-\n-The static binary version of Bitcoin is linked against libdb4.8 (see also [this Debian issue](http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=621425)).\n-\n-Now the nasty thing is that databases from 5.X are not compatible with 4.X.\n-\n-If the globally installed development package of Berkely DB installed on your system is 5.X, any source you build yourself will be linked against that. The first time you run with a 5.X version the database will be upgraded, and 4.X cannot open the new format. This means that you cannot go back to the old statically linked version without significant hassle!\n-\n-###  Ubuntu 11.10 Warning\n-\n-\n-Ubuntu 11.10 has a package called 'qt-at-spi' installed by default.  At the time of writing, having that package installed causes bitcoin-qt to crash intermittently.  The issue has been reported as [launchpad bug 857790](https://bugs.launchpad.net/ubuntu/+source/qt-at-spi/+bug/857790), but\n-isn't yet fixed.\n-\n-Until the bug is fixed, you can remove the qt-at-spi package to work around the problem, though this will presumably disable screen reader functionality for Qt apps:\n-\n-    sudo apt-get remove qt-at-spi\n-"
      },
      {
        "sha": "95cb33650f62ecff7e98c2c7918514a675b2353e",
        "filename": "doc/readme-qt.rst",
        "status": "removed",
        "additions": 0,
        "deletions": 163,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/doc/readme-qt.rst",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/doc/readme-qt.rst",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-qt.rst?ref=7f912f2161e1e46461e08968a4160687b3213a63",
        "patch": "@@ -1,163 +0,0 @@\n-Bitcoin-Qt: Qt4 GUI for Bitcoin\n-===============================\n-\n-Build instructions\n-===================\n-\n-Debian\n--------\n-\n-First, make sure that the required packages for Qt4 development of your\n-distribution are installed, these are\n-\n-::\n-\n-for Debian and Ubuntu  <= 11.10 :\n-\n-::\n-\n-    apt-get install qt4-qmake libqt4-dev build-essential libboost-dev libboost-system-dev \\\n-        libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev \\\n-        libssl-dev libdb4.8++-dev\n-\n-for Ubuntu >= 12.04 (please read the 'Berkely DB version warning' below):\n-\n-::\n-\n-    apt-get install qt4-qmake libqt4-dev build-essential libboost-dev libboost-system-dev \\\n-        libboost-filesystem-dev libboost-program-options-dev libboost-thread-dev \\\n-        libssl-dev libdb++-dev libminiupnpc-dev\n-\n-For Qt 5 you need the following, otherwise you get an error with lrelease when running qmake:\n-\n-::\n-\n-    apt-get install qt5-qmake libqt5gui5 libqt5core5 libqt5dbus5 qttools5-dev-tools\n-\n-then execute the following:\n-\n-::\n-\n-    qmake\n-    make\n-\n-Alternatively, install `Qt Creator`_ and open the `bitcoin-qt.pro` file.\n-\n-An executable named `bitcoin-qt` will be built.\n-\n-.. _`Qt Creator`: http://qt-project.org/downloads/\n-\n-Mac OS X\n---------\n-\n-- Download and install the `Qt Mac OS X SDK`_. It is recommended to also install Apple's Xcode with UNIX tools.\n-\n-- Download and install either `MacPorts`_ or `HomeBrew`_.\n-\n-- Execute the following commands in a terminal to get the dependencies using MacPorts:\n-\n-::\n-\n-\tsudo port selfupdate\n-\tsudo port install boost db48 miniupnpc\n-\n-- Execute the following commands in a terminal to get the dependencies using HomeBrew:\n-\n-::\n-\n-\tbrew update\n-\tbrew install boost miniupnpc openssl berkeley-db4\n-\n-- If using HomeBrew,  edit `bitcoin-qt.pro` to account for library location differences. There's a diff in `contrib/homebrew/bitcoin-qt-pro.patch` that shows what you need to change, or you can just patch by doing\n-\n-        patch -p1 < contrib/homebrew/bitcoin.qt.pro.patch\n-\n-- Open the bitcoin-qt.pro file in Qt Creator and build as normal (cmd-B)\n-\n-.. _`Qt Mac OS X SDK`: http://qt-project.org/downloads/\n-.. _`MacPorts`: http://www.macports.org/install.php\n-.. _`HomeBrew`: http://mxcl.github.io/homebrew/\n-\n-\n-Build configuration options\n-============================\n-\n-UPnP port forwarding\n----------------------\n-\n-To use UPnP for port forwarding behind a NAT router (recommended, as more connections overall allow for a faster and more stable bitcoin experience), pass the following argument to qmake:\n-\n-::\n-\n-    qmake \"USE_UPNP=1\"\n-\n-(in **Qt Creator**, you can find the setting for additional qmake arguments under \"Projects\" -> \"Build Settings\" -> \"Build Steps\", then click \"Details\" next to **qmake**)\n-\n-This requires miniupnpc for UPnP port mapping.  It can be downloaded from\n-http://miniupnp.tuxfamily.org/files/.  UPnP support is not compiled in by default.\n-\n-Set USE_UPNP to a different value to control this:\n-\n-+------------+--------------------------------------------------------------------------+\n-| USE_UPNP=- | no UPnP support, miniupnpc not required;                                 |\n-+------------+--------------------------------------------------------------------------+\n-| USE_UPNP=0 | (the default) built with UPnP, support turned off by default at runtime; |\n-+------------+--------------------------------------------------------------------------+\n-| USE_UPNP=1 | build with UPnP support turned on by default at runtime.                 |\n-+------------+--------------------------------------------------------------------------+\n-\n-Notification support for recent (k)ubuntu versions\n----------------------------------------------------\n-\n-To see desktop notifications on (k)ubuntu versions starting from 10.04, enable usage of the\n-FreeDesktop notification interface through DBUS using the following qmake option:\n-\n-::\n-\n-    qmake \"USE_DBUS=1\"\n-\n-Generation of QR codes\n------------------------\n-\n-libqrencode may be used to generate QRCode images for payment requests.\n-It can be downloaded from http://fukuchi.org/works/qrencode/index.html.en, or installed via your package manager. Pass the USE_QRCODE\n-flag to qmake to control this:\n-\n-+--------------+--------------------------------------------------------------------------+\n-| USE_QRCODE=0 | (the default) No QRCode support - libarcode not required                 |\n-+--------------+--------------------------------------------------------------------------+\n-| USE_QRCODE=1 | QRCode support enabled                                                   |\n-+--------------+--------------------------------------------------------------------------+\n-\n-\n-Berkely DB version warning\n-==========================\n-\n-A warning for people using the *static binary* version of Bitcoin on a Linux/UNIX-ish system (tl;dr: **Berkely DB databases are not forward compatible**).\n-\n-The static binary version of Bitcoin is linked against libdb4.8 (see also `this Debian issue`_).\n-\n-Now the nasty thing is that databases from 5.X are not compatible with 4.X.\n-\n-If the globally installed development package of Berkely DB installed on your system is 5.X, any source you\n-build yourself will be linked against that. The first time you run with a 5.X version the database will be upgraded,\n-and 4.X cannot open the new format. This means that you cannot go back to the old statically linked version without\n-significant hassle!\n-\n-.. _`this Debian issue`: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=621425\n-\n-Ubuntu 11.10 warning\n-====================\n-\n-Ubuntu 11.10 has a package called 'qt-at-spi' installed by default.  At the time of writing, having that package\n-installed causes bitcoin-qt to crash intermittently.  The issue has been reported as `launchpad bug 857790`_, but\n-isn't yet fixed.\n-\n-Until the bug is fixed, you can remove the qt-at-spi package to work around the problem, though this will presumably\n-disable screen reader functionality for Qt apps:\n-\n-::\n-\n-    sudo apt-get remove qt-at-spi\n-\n-.. _`launchpad bug 857790`: https://bugs.launchpad.net/ubuntu/+source/qt-at-spi/+bug/857790"
      },
      {
        "sha": "6aaea677901aec25149bcde891400daff4c82f04",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 96,
        "deletions": 2,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -1,3 +1,97 @@\n-(note: this is a temporary file, to be added-to by anybody, and deleted at\n-release time)\n+(note: this is a temporary file, to be added-to by anybody, and moved to\n+release-notes at release time)\n \n+Block file backwards-compatibility warning\n+===========================================\n+\n+Because release 0.10.0 makes use of headers-first synchronization and parallel\n+block download, the block files and databases are not backwards-compatible\n+with older versions of Bitcoin Core:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards.\n+\n+This does not affect wallet forward or backward compatibility.\n+\n+Transaction fee changes\n+=======================\n+\n+This release automatically estimates how high a transaction fee (or how\n+high a priority) transactions require to be confirmed quickly. The default\n+settings will create transactions that confirm quickly; see the new\n+'txconfirmtarget' setting to control the tradeoff between fees and\n+confirmation times.\n+\n+Prior releases used hard-coded fees (and priorities), and would\n+sometimes create transactions that took a very long time to confirm.\n+\n+Statistics used to estimate fees and priorities are saved in the\n+data directory in the `fee_estimates.dat` file just before\n+program shutdown, and are read in at startup.\n+\n+New Command Line Options\n+---------------------------\n+\n+- `-txconfirmtarget=n` : create transactions that have enough fees (or priority)\n+so they are likely to confirm within n blocks (default: 1). This setting\n+is over-ridden by the -paytxfee option.\n+\n+New RPC methods\n+----------------\n+\n+- `estimatefee nblocks` : Returns approximate fee-per-1,000-bytes needed for\n+a transaction to be confirmed within nblocks. Returns -1 if not enough\n+transactions have been observed to compute a good estimate.\n+\n+- `estimatepriority nblocks` : Returns approximate priority needed for\n+a zero-fee transaction to confirm within nblocks. Returns -1 if not\n+enough free transactions have been observed to compute a good\n+estimate.\n+\n+RPC access control changes\n+==========================================\n+\n+Subnet matching for the purpose of access control is now done\n+by matching the binary network address, instead of with string wildcard matching.\n+For the user this means that `-rpcallowip` takes a subnet specification, which can be\n+\n+- a single IP address (e.g. `1.2.3.4` or `fe80::0012:3456:789a:bcde`)\n+- a network/CIDR (e.g. `1.2.3.0/24` or `fe80::0000/64`)\n+- a network/netmask (e.g. `1.2.3.4/255.255.255.0` or `fe80::0012:3456:789a:bcde/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff`)\n+\n+An arbitrary number of `-rpcallow` arguments can be given. An incoming connection will be accepted if its origin address\n+matches one of them.\n+\n+For example:\n+\n+| 0.9.x and before                           | 0.10.x                                |\n+|--------------------------------------------|---------------------------------------|\n+| `-rpcallowip=192.168.1.1`                  | `-rpcallowip=192.168.1.1` (unchanged) |\n+| `-rpcallowip=192.168.1.*`                  | `-rpcallowip=192.168.1.0/24`          |\n+| `-rpcallowip=192.168.*`                    | `-rpcallowip=192.168.0.0/16`          |\n+| `-rpcallowip=*` (dangerous!)               | `-rpcallowip=::/0`                    |\n+\n+Using wildcards will result in the rule being rejected with the following error in debug.log:\n+\n+    Error: Invalid -rpcallowip subnet specification: *. Valid are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).\n+\n+RPC Server \"Warm-Up\" Mode\n+=========================\n+\n+The RPC server is started earlier now, before most of the expensive\n+intialisations like loading the block index.  It is available now almost\n+immediately after starting the process.  However, until all initialisations\n+are done, it always returns an immediate error with code -28 to all calls.\n+\n+This new behaviour can be useful for clients to know that a server is already\n+started and will be available soon (for instance, so that they do not\n+have to start it themselves)."
      },
      {
        "sha": "38715bc75fe27a48c253ee43474f926df7065593",
        "filename": "doc/release-notes/release-notes-0.3.12.md",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.12.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.12.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.12.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,13 @@\n+Version 0.3.12 is now available.\n+\n+Features:\n+* json-rpc errors return a more standard error object. (thanks to Gavin Andresen)\n+* json-rpc command line returns exit codes.\n+* json-rpc \"backupwallet\" command.\n+* Recovers and continues if an exception is caused by a message you received.  Other nodes shouldn't be able to cause an exception, and it hasn't happened before, but if a way is found to cause an exception, this would keep it from being used to stop network nodes.\n+\n+If you have json-rpc code that checks the contents of the error string, you need to change it to expect error objects of the form {\"code\":<number>,\"message\":<string>}, which is the standard.  See this thread:\n+http://www.bitcoin.org/smf/index.php?topic=969.0\n+\n+Download:\n+http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.12/"
      },
      {
        "sha": "2b95ff233d4c2810f9a2fd58b63d528ba65bd108",
        "filename": "doc/release-notes/release-notes-0.3.13.md",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.13.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.13.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.13.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,26 @@\n+Version 0.3.13 is now available.  You should upgrade to prevent potential problems with 0/unconfirmed transactions.  Note: 0.3.13 prevents problems if you haven't already spent a 0/unconfirmed transaction, but if that already happened, you need 0.3.13.2.\n+\n+Changes:\n+* Don't count or spend payments until they have 1 confirmation.\n+* Internal version number from 312 to 31300.\n+* Only accept transactions sent by IP address if -allowreceivebyip is specified.\n+* Dropped DB_PRIVATE Berkeley DB flag.\n+* Fix problem sending the last cent with sub-cent fractional change.\n+* Auto-detect whether to use 128-bit 4-way SSE2 on Linux.\n+Gavin Andresen:\n+* Option -rpcallowip= to accept json-rpc connections from another machine.\n+* Clean shutdown on SIGTERM on Linux.\n+\n+Download:\n+http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.13/\n+\n+(Thanks Laszlo for the Mac OSX build!)\n+\n+Note:\n+The SSE2 auto-detect in the Linux 64-bit version doesn't work with AMD in 64-bit mode.  Please try this instead and let me know if it gets it right:\n+http://www.bitcoin.org/download/bitcoin-0.3.13.1-specialbuild-linux64.tar.gz\n+\n+You can still control the SSE2 use manually with -4way and -4way=0.\n+\n+Version 0.3.13.2 (SVN rev 161) has improvements for the case where you already had 0/unconfirmed transactions that you might have already spent.  Here's a Windows build of it:\n+http://www.bitcoin.org/download/bitcoin-0.3.13.2-win32-setup.exe"
      },
      {
        "sha": "e73052ed9bf0ba3b9dc59f8218d2eb69ea950cac",
        "filename": "doc/release-notes/release-notes-0.3.14.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.14.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.14.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.14.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,11 @@\n+Version 0.3.14 is now available\n+http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.14/\n+\n+Changes:\n+* Key pool feature for safer wallet backup\n+Gavin Andresen:\n+* TEST network mode with switch -testnet\n+* Option to use SSL for JSON-RPC connections on unix/osx\n+* validateaddress RPC command\n+eurekafag:\n+* Russian translation"
      },
      {
        "sha": "b98052ef5934de489f2f527d50abb51be95244d6",
        "filename": "doc/release-notes/release-notes-0.3.15.md",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.15.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.15.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.15.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,6 @@\n+* paytxfee switch is now per KB, so it adds the correct fee for large transactions\n+* sending avoids using coins with less than 6 confirmations if it can\n+* BitcoinMiner processes transactions in priority order based on age of dependencies\n+* make sure generation doesn't start before block 74000 downloaded\n+* bugfixes by Dean Gores\n+* testnet, keypoololdest and paytxfee added to getinfo"
      },
      {
        "sha": "743f84f30e9c2ad96251f433cad3468f3e591662",
        "filename": "doc/release-notes/release-notes-0.3.16.md",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.16.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.16.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.16.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1 @@\n+Never released."
      },
      {
        "sha": "d3604b8f8867f1a2629d9daf971f463b291f0a5c",
        "filename": "doc/release-notes/release-notes-0.3.17.md",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.17.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.17.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.17.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,12 @@\n+Version 0.3.17 is now available.\n+\n+Changes:\n+* new getwork, thanks m0mchil\n+* added transaction fee setting in UI options menu\n+* free transaction limits\n+* sendtoaddress returns transaction id instead of \"sent\"\n+* getaccountaddress <account>\n+\n+The UI transaction fee setting was easy since it was still there from 0.1.5 and all I had to do was re-enable it.\n+\n+The accounts-based commands: move, sendfrom and getbalance <account> will be in the next release.  We still have some more changes to make first."
      },
      {
        "sha": "ab1c2e0692ffba94d66a5201ac2675c83cc60f11",
        "filename": "doc/release-notes/release-notes-0.3.18.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.18.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.18.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.18.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,11 @@\n+Changes:\n+* Fixed a wallet.dat compatibility problem if you downgraded from 0.3.17 and then upgraded again\n+* IsStandard() check to only include known transaction types in blocks\n+* Jgarzik's optimisation to speed up the initial block download a little\n+\n+The main addition in this release is the Accounts-Based JSON-RPC commands that Gavin's been working on (more details at http://www.bitcoin.org/smf/index.php?topic=1886.0).  \n+* getaccountaddress\n+* sendfrom\n+* move\n+* getbalance\n+* listtransactions"
      },
      {
        "sha": "fcd867561d62341eef06d84cee4edec1e1894fed",
        "filename": "doc/release-notes/release-notes-0.3.19.md",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.19.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.19.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.19.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,9 @@\n+There's more work to do on DoS, but I'm doing a quick build of what I have so far in case it's needed, before venturing into more complex ideas.  The build for this is version 0.3.19.\n+\n+- Added some DoS controls\n+As Gavin and I have said clearly before, the software is not at all resistant to DoS attack.  This is one improvement, but there are still more ways to attack than I can count.  \n+\n+I'm leaving the -limitfreerelay part as a switch for now and it's there if you need it.\n+\n+- Removed \"safe mode\" alerts\n+\"safe mode\" alerts was a temporary measure after the 0.3.9 overflow bug.  We can say all we want that users can just run with \"-disablesafemode\", but it's better just not to have it for the sake of appearances.  It was never intended as a long term feature.  Safe mode can still be triggered by seeing a longer (greater total PoW) invalid block chain."
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.3.20.1.md",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.20.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.20.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.1.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1 @@\n+Never released or release notes were lost."
      },
      {
        "sha": "09ecb736bdb3f808a5d59ce3bf851c6c159ca6ce",
        "filename": "doc/release-notes/release-notes-0.3.20.2.md",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.20.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.20.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.2.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,17 @@\n+The maxsendbuffer bug (0.3.20.1 clients not being able to download the block chain from other 0.3.20.1 clients) was only going to get\n+worse as people upgraded, so I cherry-picked the bug fix and created a minor release yesterday.\n+\n+The Amazon Machine Images I used to do the builds are available:\n+\n+  ami-38a05251   Bitcoin-v0.3.20.2 Mingw    (Windows; Administrator password 'bitcoin development')\n+  ami-30a05259   Bitcoin_0.3.20.2 Linux32\n+  ami-8abc4ee3   Bitcoin_0.3.20.2 Linux64\n+\n+(mac build will be done soon)\n+\n+If you have already downloaded version 0.3.20.1, please either add this to your bitcoin.conf file:\n+\n+  maxsendbuffer=10000\n+  maxreceivebuffer=10000\n+\n+... or download the new version."
      },
      {
        "sha": "9ae21802ee89b6587f006c73838ccbd34deb882e",
        "filename": "doc/release-notes/release-notes-0.3.20.md",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.20.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.20.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,22 @@\n+Please checkout the git integration branch from:\n+\n+https://github.com/bitcoin/bitcoin\n+\n+... and help test.  The new features that need testing are:\n+\n+* -nolisten : https://github.com/bitcoin/bitcoin/pull/11\n+* -rescan : scan block chain for missing wallet transactions\n+* -printtoconsole : https://github.com/bitcoin/bitcoin/pull/37\n+* RPC gettransaction details : https://github.com/bitcoin/bitcoin/pull/24\n+* listtransactions new features : https://github.com/bitcoin/bitcoin/pull/10\n+\n+Bug fixes that also need testing:\n+\n+* -maxconnections= : https://github.com/bitcoin/bitcoin/pull/42\n+* RPC listaccounts minconf : https://github.com/bitcoin/bitcoin/pull/27\n+* RPC move, add time to output : https://github.com/bitcoin/bitcoin/pull/21\n+* ...and several improvements to --help output.\n+\n+This needs more testing on Windows!  Please drop me a quick private message, email, or IRC message if you are able to do some testing.  If you find bugs, please open an issue at:\n+\n+https://github.com/bitcoin/bitcoin/issues"
      },
      {
        "sha": "f3b6bc426470d4137edc1b477ef9c3b400e0073e",
        "filename": "doc/release-notes/release-notes-0.3.21.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.21.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.21.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.21.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,20 @@\n+Binaries for Bitcoin version 0.3.21 are available at:\n+  https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.21/\n+\n+Changes and new features from the 0.3.20 release include:\n+\n+* Universal Plug and Play support.  Enable automatic opening of a port for incoming connections by running bitcoin or bitcoind with the - -upnp=1 command line switch or using the Options dialog box.\n+\n+* Support for full-precision bitcoin amounts.  You can now send, and bitcoin will display, bitcoin amounts smaller than 0.01.  However, sending fewer than 0.01 bitcoins still requires a 0.01 bitcoin fee (so you can send 1.0001 bitcoins without a fee, but you will be asked to pay a fee if you try to send 0.0001).\n+\n+* A new method of finding bitcoin nodes to connect with, via DNS A records. Use the -dnsseed option to enable.\n+\n+For developers, changes to bitcoin's remote-procedure-call API:\n+\n+* New rpc command \"sendmany\" to send bitcoins to more than one address in a single transaction.\n+\n+* Several bug fixes, including a serious intermittent bug that would sometimes cause bitcoind to stop accepting rpc requests. \n+\n+* -logtimestamps option, to add a timestamp to each line in debug.log.\n+\n+* Immature blocks (newly generated, under 120 confirmations) are now shown in listtransactions."
      },
      {
        "sha": "4c05e3e5e78e309770aed4974be1707a8d44d255",
        "filename": "doc/release-notes/release-notes-0.3.22.md",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.22.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.22.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.22.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,16 @@\n+Download URL: https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.22/\n+\n+This is largely a bugfix and TX fee schedule release.  We also hope to make 0.3.23 a quick release, to fix problems that the network has seen due to explosive growth in the past week.\n+\n+Notable changes:\n+* Client will accept and relay TX's with 0.0005 BTC fee schedule (users still pay 0.01 BTC per kb, until next version)\n+* Non-standard transactions accepted on testnet\n+* Source code tree reorganized (prep for autotools build)\n+* Remove \"Generate Coins\" option from GUI, and remove 4way SSE miner.  Internal reference CPU miner remains available, but users are directed to external miners for best hash production.\n+* IRC is overflowing.  Client now bootstraps to channels #bitcoin00 - #bitcoin99\n+* DNS names now may be used with -addnode, -connect (requires -dns to enable)\n+\n+RPC changes:\n+* 'listtransactions' adds 'from' param, for range queries\n+* 'move' may take account balances negative\n+* 'settxfee' added, to manually set TX fee"
      },
      {
        "sha": "c1d520e4925d6c57ed72f0c8a34f29a250f71efe",
        "filename": "doc/release-notes/release-notes-0.3.23.md",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.23.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.23.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.23.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,10 @@\n+Win32, Linux, MacOSX and source releases for bitcoin v0.3.23 have been uploaded to\n+https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.23/\n+\n+This is another quick bugfix release, trying to deal with the influx of new bitcoin users.\n+\n+Main items of note:\n+\n+* P2P connect-to-node logic changed to reduce timeout a bit.  The network saw a huge influx of new users, who do not permit incoming connections.  This change is a short-term hack, to more quickly hunt for useful P2P connections.  Better \"leaf node\" logic is in the works, but this should let us limp along until then.  One may use -upnp to properly forward ports, and help the network.\n+* Transaction fee reduced to 0.0005 for new transactions\n+* Client will relay transactions with fees as low as 0.0001 BTC"
      },
      {
        "sha": "d35ac66f2c8a07e8912426c10e2e4c158680ad21",
        "filename": "doc/release-notes/release-notes-0.3.24.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.24.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.3.24.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.24.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,20 @@\n+Bitcoin v0.3.24 is now available for download at\n+https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.24/\n+\n+This is another bug fix release.  We had hoped to have wallet encryption ready for release, but more urgent fixes for existing clients were needed -- most notably block download problems were getting severe.  Wallet encryption is ready for testing at https://github.com/bitcoin/bitcoin/pull/352 for the git-savvy, and hopefully will follow shortly in the next release, v0.4.\n+\n+Notable fixes in v0.3.24, and the main reasons for this release:\n+\n+F1) Block downloads were failing or taking unreasonable amounts of time to complete, because the increased size of the block chain was bumping up against some earlier buffer-size DoS limits.\n+\n+F2) Fix crash caused by loss/lack of network connection.\n+\n+Notable changes in v0.3.24:\n+\n+C1) DNS seeding enabled by default.\n+\n+C2) UPNP enabled by default in the GUI client.  The percentage of bitcoin clients that accept incoming connections is quite small, and that is a problem.  This should help.  bitcoind, and unofficial builds, are unchanged (though we encourage use of \"-upnp\" to help the network!)\n+\n+C3) Initial unit testing framework.  Bitcoin sorely needs automated tests, and this is a beginning.  Contributions welcome.\n+\n+C4) Internal wallet code cleanup.  While invisible to an end user, this change provides the basis for v0.4's wallet encryption."
      },
      {
        "sha": "145072a369d85a83b312100cf4d7089a591c1bfc",
        "filename": "doc/release-notes/release-notes-0.4.0.md",
        "status": "added",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.0.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,70 @@\n+Bitcoin version 0.4.0 is now available for download at:\n+http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.0/\n+\n+The main feature in this release is wallet private key encryption;\n+you can set a passphrase that must be entered before sending coins.\n+See below for more information; if you decide to encrypt your wallet,\n+WRITE DOWN YOUR PASSPHRASE AND PUT IT IN A SECURE LOCATION. If you\n+forget or lose your wallet passphrase, you lose your bitcoins.\n+Previous versions of bitcoin are unable to read encrypted wallets,\n+and will crash on startup if the wallet is encrypted.\n+\n+Also note: bitcoin version 0.4 uses a newer version of Berkeley DB\n+(bdb version 4.8) than previous versions (bdb 4.7). If you upgrade\n+to version 0.4 and then revert back to an earlier version of bitcoin\n+the it may be unable to start because bdb 4.7 cannot read bdb 4.8\n+\"log\" files.\n+\n+\n+Notable bug fixes from version 0.3.24:\n+\n+Fix several bitcoin-becomes-unresponsive bugs due to multithreading\n+deadlocks.\n+\n+Optimize database writes for large (lots of inputs) transactions\n+(fixes a potential denial-of-service attack)\n+\n+\n+Wallet Encryption\n+\n+Bitcoin supports native wallet encryption so that people who steal your\n+wallet file don't automatically get access to all of your Bitcoins.\n+In order to enable this feature, choose \"Encrypt Wallet\" from the\n+Options menu.  You will be prompted to enter a passphrase, which\n+will be used as the key to encrypt your wallet and will be needed\n+every time you wish to send Bitcoins.  If you lose this passphrase,\n+you will lose access to spend all of the bitcoins in your wallet,\n+no one, not even the Bitcoin developers can recover your Bitcoins.\n+This means you are responsible for your own security, store your\n+passphrase in a secure location and do not forget it.\n+\n+Remember that the encryption built into bitcoin only encrypts the\n+actual keys which are required to send your bitcoins, not the full\n+wallet.  This means that someone who steals your wallet file will\n+be able to see all the addresses which belong to you, as well as the\n+relevant transactions, you are only protected from someone spending\n+your coins.\n+\n+It is recommended that you backup your wallet file before you\n+encrypt your wallet.  To do this, close the Bitcoin client and\n+copy the wallet.dat file from ~/.bitcoin/ on Linux, /Users/(user\n+name)/Application Support/Bitcoin/ on Mac OSX, and %APPDATA%/Bitcoin/\n+on Windows (that is /Users/(user name)/AppData/Roaming/Bitcoin on\n+Windows Vista and 7 and /Documents and Settings/(user name)/Application\n+Data/Bitcoin on Windows XP).  Once you have copied that file to a\n+safe location, reopen the Bitcoin client and Encrypt your wallet.\n+If everything goes fine, delete the backup and enjoy your encrypted\n+wallet.  Note that once you encrypt your wallet, you will never be\n+able to go back to a version of the Bitcoin client older than 0.4.\n+\n+Keep in mind that you are always responsible for your own security.\n+All it takes is a slightly more advanced wallet-stealing trojan which\n+installs a keylogger to steal your wallet passphrase as you enter it\n+in addition to your wallet file and you have lost all your Bitcoins.\n+Wallet encryption cannot keep you safe if you do not practice\n+good security, such as running up-to-date antivirus software, only\n+entering your wallet passphrase in the Bitcoin client and using the\n+same passphrase only as your wallet passphrase.\n+\n+See the doc/README file in the bitcoin source for technical details\n+of wallet encryption."
      },
      {
        "sha": "ac471a8d7feddfd3235a1a1b7973cb06f2e768ed",
        "filename": "doc/release-notes/release-notes-0.4.1.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.1.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,38 @@\n+Bitcoin version 0.4.1 is now available for download at:\n+http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.1/\n+\n+This is a bugfix only release based on 0.4.0.\n+\n+Please report bugs by replying to this forum thread.\n+\n+MAJOR BUG FIX  (CVE-2011-4447)\n+\n+The wallet encryption feature introduced in Bitcoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n+managed to get a copy of your encrypted wallet.dat file might be able to recover some or all of the unencrypted keys and steal the\n+associated coins.\n+\n+If you have a previously encrypted wallet.dat, the first time you run wxbitcoin or bitcoind the wallet will be rewritten, Bitcoin will\n+shut down, and you will be prompted to restart it to run with the new, properly encrypted file.\n+\n+If you had a previously encrypted wallet.dat that might have been copied or stolen (for example, you backed it up to a public\n+location) you should send all of your bitcoins to yourself using a new bitcoin address and stop using any previously generated addresses.\n+\n+Wallets encrypted with this version of Bitcoin are written properly.\n+\n+Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new bitcoin address; to be certain that the\n+new private keys are properly backed up you should:\n+\n+1. Run Bitcoin and let it rewrite the wallet.dat file\n+\n+2. Run it again, then ask it for a new bitcoin address.\n+wxBitcoin: new address visible on main window\n+bitcoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n+\n+3. If your encrypted wallet.dat may have been copied or stolen, send all of your bitcoins to the new bitcoin address.\n+\n+4. Shut down Bitcoin, then backup the wallet.dat file.\n+IMPORTANT: be sure to request a new bitcoin address before backing up, so that the 'keypool' is regenerated and backed up.\n+\n+\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your bitcoins.\n+\n+Thanks to Alan Reiner (etotheipi) for finding and reporting this bug."
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.4.2.md",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.2.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1 @@\n+Never released or release notes were lost."
      },
      {
        "sha": "fea1ae75b5e829cf38271ad529262d806d314303",
        "filename": "doc/release-notes/release-notes-0.4.3.md",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.3.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,21 @@\n+bitcoind version 0.4.3 is now available for download at:\n+http://luke.dashjr.org/programs/bitcoin/files/bitcoind-0.4.3/ (until Gavin uploads to SourceForge)\n+\n+This is a bugfix-only release based on 0.4.0.\n+\n+Please note that the wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+\n+Please report bugs for the daemon only using the issue tracker at github:\n+https://github.com/bitcoin/bitcoin/issues\n+\n+Stable source code is hosted at Gitorious:\n+http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.4.3#.tar.gz\n+\n+BUG FIXES\n+\n+Cease locking memory used by non-sensitive information (this caused a huge performance hit on some platforms, especially noticable during initial blockchain download).\n+Fixed some address-handling deadlocks (client freezes).\n+No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).\n+Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).\n+Add new DNS seeds (maintained by Pieter Wuille and Luke Dashjr).\n+"
      },
      {
        "sha": "f435ba71604df49ca4cc6dbcd67fcd512498f186",
        "filename": "doc/release-notes/release-notes-0.4.4.md",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.4.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,30 @@\n+Bitcoin version 0.4.4 is now available for download at:\n+http://luke.dashjr.org/programs/bitcoin/files/bitcoind-0.4.4/\n+\n+This is a bugfix-only release based on 0.4.0.\n+\n+Please note that the wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+\n+Please report bugs for the daemon only using the issue tracker at github:\n+https://github.com/bitcoin/bitcoin/issues\n+\n+Stable source code is hosted at Gitorious:\n+http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.4.4#.tar.gz\n+\n+BUG FIXES\n+\n+Limit the number of orphan transactions stored in memory, to prevent a potential denial-of-service attack by flooding orphan transactions. Also never store invalid transactions at all.\n+Fix possible buffer overflow on systems with very long application data paths. This is not exploitable.\n+Resolved multiple bugs preventing long-term unlocking of encrypted wallets (issue #922).\n+Only send local IP in \"version\" messages if it is globally routable (ie, not private), and try to get such an IP from UPnP if applicable.\n+Reannounce UPnP port forwards every 20 minutes, to workaround routers expiring old entries, and allow the -upnp option to override any stored setting.\n+Various memory leaks and potential null pointer deferences have been\n+fixed.\n+Several shutdown issues have been fixed.\n+Check that keys stored in the wallet are valid at startup, and if not,\n+report corruption.\n+Various build fixes.\n+If no password is specified to bitcoind, recommend a secure password.\n+Update hard-coded fallback seed nodes, choosing recent ones with long uptime and versions at least 0.4.0.\n+Add checkpoint at block 168,000.\n+"
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.4.5.md",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.5.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1 @@\n+Never released or release notes were lost."
      },
      {
        "sha": "07c5e4b6948a5da619c6e82277d9aa4e0a629109",
        "filename": "doc/release-notes/release-notes-0.4.6.md",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.4.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.6.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,37 @@\n+bitcoind version 0.4.6 is now available for download at:\n+Windows: installer | zip (sig)\n+Source: tar.gz\n+bitcoind and Bitcoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n+\n+These are bugfix-only releases.\n+\n+Please report bugs by replying to this forum thread. Note that the 0.4.x wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+\n+BUG FIXES\n+\n+Version 0.6.0 allowed importing invalid \"private keys\", which would be unspendable; 0.6.0.7 will now verify the private key is valid, and refuse to import an invalid one\n+Verify status of encrypt/decrypt calls to detect failed padding\n+Check blocks for duplicate transactions earlier. Fixes #1167\n+Upgrade Windows builds to OpenSSL 1.0.1b\n+Set label when selecting an address that already has a label. Fixes #1080 (Bitcoin-Qt)\n+JSON-RPC listtransactions's from/count handling is now fixed\n+Optimize and fix multithreaded access, when checking whether we already know about transactions\n+Fix potential networking deadlock\n+Proper support for Growl 1.3 notifications\n+Display an error, rather than crashing, if encoding a QR Code failed (0.6.0.7)\n+Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Bitcoin-Qt)\n+Some non-ASCII input in JSON-RPC expecting hexadecimal may have been misinterpreted rather than rejected\n+Missing error condition checking added\n+Do not show green tick unless all known blocks are downloaded. Fixes #921 (Bitcoin-Qt)\n+Increase time ago of last block for \"up to date\" status from 30 to 90 minutes\n+Show a message box when runaway exception happens (Bitcoin-Qt)\n+Use a messagebox to display the error when -server is provided without providing a rpc password\n+Show error message instead of exception crash when unable to bind RPC port (Bitcoin-Qt)\n+Correct sign message bitcoin address tooltip. Fixes #1050 (Bitcoin-Qt)\n+Removed \"(no label)\" from QR Code dialog titlebar if we have no label (0.6.0.7)\n+Removed an ugly line break in tooltip for mature transactions (0.6.0.7)\n+Add missing tooltip and key shortcut in settings dialog (part of #1088) (Bitcoin-Qt)\n+Work around issue in boost::program_options that prevents from compiling in clang\n+Fixed bugs occurring only on platforms with unsigned characters (such as ARM).\n+Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Bitcoin-Qt)\n+Various trivial internal corrections to types used for counting/size loops and warnings"
      },
      {
        "sha": "baa409b5f2fc97464ffb2087a12bbd77e67f6e01",
        "filename": "doc/release-notes/release-notes-0.5.0.md",
        "status": "added",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.5.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.5.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.0.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,70 @@\n+Bitcoin version 0.5.0 is now available for download at:\n+http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.0/\n+\n+The major change for this release is a completely new graphical interface that uses the Qt user interface toolkit.\n+\n+This release include German, Spanish, Spanish-Castilian, Norwegian and Dutch translations. More translations are welcome; join the project at Transifex if you can help:\n+https://www.transifex.net/projects/p/bitcoin/\n+\n+Please report bugs using the issue tracker at github:\n+https://github.com/bitcoin/bitcoin/issues\n+\n+For Ubuntu users, there is a new ppa maintained by Matt Corallo which you can add to your system so that it will automatically keep bitcoin up-to-date.  Just type \"sudo apt-add-repository ppa:bitcoin/bitcoin\" in your terminal, then install the bitcoin-qt package.\n+\n+MAJOR BUG FIX  (CVE-2011-4447)\n+\n+The wallet encryption feature introduced in Bitcoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n+managed to get a copy of your encrypted wallet.dat file might be able to recover some or all of the unencrypted keys and steal the\n+associated coins.\n+\n+If you have a previously encrypted wallet.dat, the first time you run bitcoin-qt or bitcoind the wallet will be rewritten, Bitcoin will\n+shut down, and you will be prompted to restart it to run with the new, properly encrypted file.\n+\n+If you had a previously encrypted wallet.dat that might have been copied or stolen (for example, you backed it up to a public\n+location) you should send all of your bitcoins to yourself using a new bitcoin address and stop using any previously generated addresses.\n+\n+Wallets encrypted with this version of Bitcoin are written properly.\n+\n+Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new bitcoin address; to be certain that the\n+new private keys are properly backed up you should:\n+\n+1. Run Bitcoin and let it rewrite the wallet.dat file\n+\n+2. Run it again, then ask it for a new bitcoin address.\n+Bitcoin-Qt: Address Book, then New Address...\n+bitcoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n+\n+3. If your encrypted wallet.dat may have been copied or stolen, send  all of your bitcoins to the new bitcoin address.\n+\n+4. Shut down Bitcoin, then backup the wallet.dat file.\n+IMPORTANT: be sure to request a new bitcoin address before backing up, so that the 'keypool' is regenerated and backed up.\n+\n+\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your bitcoins.\n+\n+Thanks to Alan Reiner (etotheipi) for finding and reporting this bug.\n+\n+MAJOR GUI CHANGES\n+\n+\"Splash\" graphics at startup that show address/wallet/blockchain loading progress.\n+\n+\"Synchronizing with network\" progress bar to show block-chain download progress.\n+\n+Icons at the bottom of the window that show how well connected you are to the network, with tooltips to display details.\n+\n+Drag and drop support for bitcoin: URIs on web pages.\n+\n+Export transactions as a .csv file.\n+\n+Many other GUI improvements, large and small.\n+\n+RPC CHANGES\n+\n+getmemorypool : new RPC command, provides everything needed to construct a block with a custom generation transaction and submit a solution\n+\n+listsinceblock : new RPC command, list transactions since given block\n+\n+signmessage/verifymessage : new RPC commands to sign a message with one of your private keys or verify that a message signed by the private key associated with a bitcoin address.\n+\n+GENERAL CHANGES\n+\n+Faster initial block download."
      },
      {
        "sha": "d56bff6d956bc65b55a13da46d3525dc4cefd26f",
        "filename": "doc/release-notes/release-notes-0.5.1.md",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.5.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.5.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.1.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,43 @@\n+Bitcoin version 0.5.1 is now available for download at:\n+http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.1/\n+\n+This is a bugfix-only release.\n+\n+This release includes 13 translations, including 5 new translations:\n+Italian, Hungarian, Ukranian, Portuguese (Brazilian) and Simplified Chinese.\n+More translations are welcome; join the project at Transifex if you can help:\n+https://www.transifex.net/projects/p/bitcoin/\n+\n+Please report bugs using the issue tracker at github:\n+https://github.com/bitcoin/bitcoin/issues\n+\n+Project source code is hosted at github; we are no longer\n+distributing .tar.gz files here, you can get them\n+directly from github:\n+https://github.com/bitcoin/bitcoin/tarball/v0.5.1  # .tar.gz\n+https://github.com/bitcoin/bitcoin/zipball/v0.5.1  # .zip\n+\n+For Ubuntu users, there is a new ppa maintained by Matt Corallo which\n+you can add to your system so that it will automatically keep\n+bitcoin up-to-date.  Just type\n+sudo apt-add-repository ppa:bitcoin/bitcoin\n+in your terminal, then install the bitcoin-qt package.\n+\n+\n+BUG FIXES\n+\n+Re-enable SSL support for the JSON-RPC interface (it was unintentionally\n+disabled for the 0.5.0 release binaries).\n+\n+The code that finds peers via \"dns seeds\" no longer stops bitcoin startup\n+if one of the dns seed machines is down.\n+\n+Tooltips on the transaction list view were rendering incorrectly (as black boxes\n+or with a transparent background).\n+\n+Prevent a denial-of-service attack involving flooding a bitcoin node with\n+orphan blocks.\n+\n+The wallet passphrase dialog now warns you if the caps lock key was pressed.\n+\n+Improved searching in addresses and labels in bitcoin-qt."
      },
      {
        "sha": "f79816668d8ccd9e379a8e98713e298d86c7079d",
        "filename": "doc/release-notes/release-notes-0.5.2.md",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.5.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.5.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.2.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,22 @@\n+Bitcoin version 0.5.2 is now available for download at:\n+http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.2/\n+\n+This is a bugfix-only release based on 0.5.1.\n+\n+Please report bugs using the issue tracker at github:\n+https://github.com/bitcoin/bitcoin/issues\n+\n+Stable source code is hosted at Gitorious:\n+http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.2#.tar.gz\n+\n+BUG FIXES\n+\n+Check all transactions in blocks after the last checkpoint (0.5.0 and 0.5.1 skipped checking ECDSA signatures during initial blockchain download).\n+Cease locking memory used by non-sensitive information (this caused a huge performance hit on some platforms, especially noticable during initial blockchain download; this was\n+not a security vulnerability).\n+Fixed some address-handling deadlocks (client freezes).\n+No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).\n+Re-enable SSL support for the JSON-RPC interface (it was unintentionally disabled for the 0.5.0 and 0.5.1 release Linux binaries).\n+Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).\n+Don't show \"IP\" for transactions which are not necessarily IP transactions.\n+Add new DNS seeds (maintained by Pieter Wuille and Luke Dashjr)."
      },
      {
        "sha": "7c84c53325c8f638b309771c3c6df1dfa79743d1",
        "filename": "doc/release-notes/release-notes-0.5.3.md",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.5.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.5.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.3.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,42 @@\n+Bitcoin version 0.5.3 is now available for download at:\n+http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.3/\n+\n+This is a bugfix-only release based on 0.5.1.\n+It also includes a few protocol updates.\n+\n+Please report bugs using the issue tracker at github:\n+https://github.com/bitcoin/bitcoin/issues\n+\n+Stable source code is hosted at Gitorious:\n+http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.3#.tar.gz\n+\n+PROTOCOL UPDATES\n+\n+BIP 30: Introduce a new network rule: \"a block is not valid if it contains a transaction whose hash already exists in the block chain, unless all that transaction's outputs were already spent before said block\" beginning on March 15, 2012, 00:00 UTC.\n+On testnet, allow mining of min-difficulty blocks if 20 minutes have gone by without mining a regular-difficulty block. This is to make testing Bitcoin easier, and will not affect normal mode.\n+\n+BUG FIXES\n+\n+Limit the number of orphan transactions stored in memory, to prevent a potential denial-of-service attack by flooding orphan transactions. Also never store invalid transactions at all.\n+Fix possible buffer overflow on systems with very long application data paths. This is not exploitable.\n+Resolved multiple bugs preventing long-term unlocking of encrypted wallets\n+(issue #922).\n+Only send local IP in \"version\" messages if it is globally routable (ie, not private), and try to get such an IP from UPnP if applicable.\n+Reannounce UPnP port forwards every 20 minutes, to workaround routers expiring old entries, and allow the -upnp option to override any stored setting.\n+Skip splash screen when -min is used, and fix Minimize to Tray function.\n+Do not blank \"label\" in Bitcoin-Qt \"Send\" tab, if the user has already entered something.\n+Correct various labels and messages.\n+Various memory leaks and potential null pointer deferences have been fixed.\n+Handle invalid Bitcoin URIs using \"bitcoin://\" instead of \"bitcoin:\".\n+Several shutdown issues have been fixed.\n+Revert to \"global progress indication\", as starting from zero every time was considered too confusing for many users.\n+Check that keys stored in the wallet are valid at startup, and if not, report corruption.\n+Enable accessible widgets on Windows, so that people with screen readers such as NVDA can make sense of it.\n+Various build fixes.\n+If no password is specified to bitcoind, recommend a secure password.\n+Automatically focus and scroll to new \"Send coins\" entries in Bitcoin-Qt.\n+Show a message box for --help on Windows, for Bitcoin-Qt.\n+Add missing \"About Qt\" menu option to show built-in Qt About dialog.\n+Don't show \"-daemon\" as an option for Bitcoin-Qt, since it isn't available.\n+Update hard-coded fallback seed nodes, choosing recent ones with long uptime and versions at least 0.4.0.\n+Add checkpoint at block 168,000."
      },
      {
        "sha": "fcde3ac4e3a1b1e09fa6c3a72cf17c923cfa20b3",
        "filename": "doc/release-notes/release-notes-0.5.4.md",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.5.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.5.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.4.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,39 @@\n+Bitcoin version 0.5.4 is now available for download at:\n+http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.4/\n+NOTE: 0.5.4rc3 is being renamed to 0.5.4 final with no changes.\n+\n+This is a bugfix-only release in the 0.5.x series, plus a few protocol updates.\n+\n+Please report bugs using the issue tracker at github:\n+https://github.com/bitcoin/bitcoin/issues\n+\n+Stable source code is hosted at Gitorious:\n+http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.4#.tar.gz\n+\n+PROTOCOL UPDATES\n+\n+BIP 16: Special-case \"pay to script hash\" logic to enable minimal validation of new transactions.\n+Support for validating message signatures produced with compressed public keys.\n+\n+BUG FIXES\n+\n+Build with thread-safe MingW libraries for Windows, fixing a dangerous memory corruption scenario when exceptions are thrown.\n+Fix broken testnet mining.\n+Stop excess inventory relay during initial block download.\n+When disconnecting a node, clear the received buffer so that we do not process any already received messages.\n+Yet another attempt at implementing \"minimize to tray\" that works on all operating systems.\n+Fix Bitcoin-Qt notifications under Growl 1.3.\n+Increase required age of Bitcoin-Qt's \"not up to date\" status from 30 to 90 minutes.\n+Implemented missing verifications that led to crash on entering some wrong passphrases for encrypted wallets.\n+Fix default filename suffixes in GNOME save dialog.\n+Make the \"Send coins\" tab use the configured unit type, even on the first attempt.\n+Print detailed wallet loading errors to debug.log when it is corrupt.\n+Allocate exactly the amount of space needed for signing transactions, instead of a fixed 10k buffer.\n+Workaround for improbable memory access violation.\n+Check wallet's minimum version before trying to load it.\n+Remove wxBitcoin properly when installing Bitcoin-Qt over it. (Windows)\n+Detail reorganization information better in debug log.\n+Use a messagebox to display the error when -server is provided without configuring a RPC password.\n+Testing suite build now honours provided CXXFLAGS.\n+Removed an extraneous line-break in mature transaction tooltips.\n+Fix some grammatical errors in translation process documentation."
      },
      {
        "sha": "75ebc3e6b62269aff03d48828913807eabca071a",
        "filename": "doc/release-notes/release-notes-0.5.5.md",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.5.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.5.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.5.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,37 @@\n+bitcoind and Bitcoin-Qt version 0.5.5 are now available for download at:\n+Windows: installer | zip (sig)\n+Source: tar.gz\n+bitcoind and Bitcoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n+\n+These are bugfix-only releases.\n+\n+Please report bugs by replying to this forum thread. Note that the 0.4.x wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+\n+BUG FIXES\n+\n+Version 0.6.0 allowed importing invalid \"private keys\", which would be unspendable; 0.6.0.7 will now verify the private key is valid, and refuse to import an invalid one\n+Verify status of encrypt/decrypt calls to detect failed padding\n+Check blocks for duplicate transactions earlier. Fixes #1167\n+Upgrade Windows builds to OpenSSL 1.0.1b\n+Set label when selecting an address that already has a label. Fixes #1080 (Bitcoin-Qt)\n+JSON-RPC listtransactions's from/count handling is now fixed\n+Optimize and fix multithreaded access, when checking whether we already know about transactions\n+Fix potential networking deadlock\n+Proper support for Growl 1.3 notifications\n+Display an error, rather than crashing, if encoding a QR Code failed (0.6.0.7)\n+Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Bitcoin-Qt)\n+Some non-ASCII input in JSON-RPC expecting hexadecimal may have been misinterpreted rather than rejected\n+Missing error condition checking added\n+Do not show green tick unless all known blocks are downloaded. Fixes #921 (Bitcoin-Qt)\n+Increase time ago of last block for \"up to date\" status from 30 to 90 minutes\n+Show a message box when runaway exception happens (Bitcoin-Qt)\n+Use a messagebox to display the error when -server is provided without providing a rpc password\n+Show error message instead of exception crash when unable to bind RPC port (Bitcoin-Qt)\n+Correct sign message bitcoin address tooltip. Fixes #1050 (Bitcoin-Qt)\n+Removed \"(no label)\" from QR Code dialog titlebar if we have no label (0.6.0.7)\n+Removed an ugly line break in tooltip for mature transactions (0.6.0.7)\n+Add missing tooltip and key shortcut in settings dialog (part of #1088) (Bitcoin-Qt)\n+Work around issue in boost::program_options that prevents from compiling in clang\n+Fixed bugs occurring only on platforms with unsigned characters (such as ARM).\n+Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Bitcoin-Qt)\n+Various trivial internal corrections to types used for counting/size loops and warnings"
      },
      {
        "sha": "1963a362591566d6aadd24b8634dbfe589e68eb9",
        "filename": "doc/release-notes/release-notes-0.6.0.md",
        "status": "added",
        "additions": 138,
        "deletions": 0,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.6.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.6.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.0.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,138 @@\n+Bitcoin version 0.6.0 is now available for download at:\n+http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.0/test/\n+\n+This release includes more than 20 language localizations.\n+More translations are welcome; join the\n+project at Transifex to help:\n+https://www.transifex.net/projects/p/bitcoin/\n+\n+Please report bugs using the issue tracker at github:\n+https://github.com/bitcoin/bitcoin/issues\n+\n+Project source code is hosted at github; we are no longer\n+distributing .tar.gz files here, you can get them\n+directly from github:\n+https://github.com/bitcoin/bitcoin/tarball/v0.6.0  # .tar.gz\n+https://github.com/bitcoin/bitcoin/zipball/v0.6.0  # .zip\n+\n+For Ubuntu users, there is a ppa maintained by Matt Corallo which\n+you can add to your system so that it will automatically keep\n+bitcoin up-to-date.  Just type\n+sudo apt-add-repository ppa:bitcoin/bitcoin\n+in your terminal, then install the bitcoin-qt package.\n+\n+\n+KNOWN ISSUES\n+\n+Shutting down while synchronizing with the network\n+(downloading the blockchain) can take more than a minute,\n+because database writes are queued to speed up download\n+time.\n+\n+\n+NEW FEATURES SINCE BITCOIN VERSION 0.5\n+\n+Initial network synchronization should be much faster\n+(one or two hours on a typical machine instead of ten or more\n+hours).\n+\n+Backup Wallet menu option.\n+\n+Bitcoin-Qt can display and save QR codes for sending\n+and receiving addresses.\n+\n+New context menu on addresses to copy/edit/delete them.\n+\n+New Sign Message dialog that allows you to prove that you\n+own a bitcoin address by creating a digital\n+signature.\n+\n+New wallets created with this version will\n+use 33-byte 'compressed' public keys instead of\n+65-byte public keys, resulting in smaller\n+transactions and less traffic on the bitcoin\n+network. The shorter keys are already supported\n+by the network but wallet.dat files containing\n+short keys are not compatible with earlier\n+versions of Bitcoin-Qt/bitcoind.\n+\n+New command-line argument -blocknotify=<command>\n+that will spawn a shell process to run <command> \n+when a new block is accepted.\n+\n+New command-line argument -splash=0 to disable\n+Bitcoin-Qt's initial splash screen\n+\n+validateaddress JSON-RPC api command output includes\n+two new fields for addresses in the wallet:\n+pubkey : hexadecimal public key\n+iscompressed : true if pubkey is a short 33-byte key\n+\n+New JSON-RPC api commands for dumping/importing\n+private keys from the wallet (dumprivkey, importprivkey).\n+\n+New JSON-RPC api command for getting information about\n+blocks (getblock, getblockhash).\n+\n+New JSON-RPC api command (getmininginfo) for getting\n+extra information related to mining. The getinfo\n+JSON-RPC command no longer includes mining-related\n+information (generate/genproclimit/hashespersec).\n+\n+\n+\n+NOTABLE CHANGES\n+\n+BIP30 implemented (security fix for an attack involving\n+duplicate \"coinbase transactions\").\n+\n+The -nolisten, -noupnp and -nodnsseed command-line\n+options were renamed to -listen, -upnp and -dnsseed,\n+with a default value of 1. The old names are still\n+supported for compatibility (so specifying -nolisten\n+is automatically interpreted as -listen=0; every\n+boolean argument can now be specified as either\n+-foo or -nofoo).\n+\n+The -noirc command-line options was renamed to\n+-irc, with a default value of 0. Run -irc=1 to\n+get the old behavior.\n+\n+Three fill-up-available-memory denial-of-service\n+attacks were fixed.\n+\n+\n+NOT YET IMPLEMENTED FEATURES\n+\n+Support for clicking on bitcoin: URIs and\n+opening/launching Bitcoin-Qt is available only on Linux,\n+and only if you configure your desktop to launch\n+Bitcoin-Qt. All platforms support dragging and dropping\n+bitcoin: URIs onto the Bitcoin-Qt window to start\n+payment.\n+\n+\n+PRELIMINARY SUPPORT FOR MULTISIGNATURE TRANSACTIONS\n+\n+This release has preliminary support for multisignature\n+transactions-- transactions that require authorization\n+from more than one person or device before they\n+will be accepted by the bitcoin network.\n+\n+Prior to this release, multisignature transactions\n+were considered 'non-standard' and were ignored;\n+with this release multisignature transactions are\n+considered standard and will start to be relayed\n+and accepted into blocks.\n+\n+It is expected that future releases of Bitcoin-Qt\n+will support the creation of multisignature transactions,\n+once enough of the network has upgraded so relaying\n+and validating them is robust.\n+\n+For this release, creation and testing of multisignature\n+transactions is limited to the bitcoin test network using\n+the \"addmultisigaddress\" JSON-RPC api call.\n+\n+Short multisignature address support is included in this\n+release, as specified in BIP 13 and BIP 16."
      },
      {
        "sha": "ef7966ecd6809ec3a0805bfca30b9a52ab8e33c7",
        "filename": "doc/release-notes/release-notes-0.6.1.md",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.6.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.6.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.1.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,2 @@\n+Never released\n+"
      },
      {
        "sha": "bb85fb23a0414b84a75bec16cf8f26b06f8d3777",
        "filename": "doc/release-notes/release-notes-0.6.2.md",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.6.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.6.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.2.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,50 @@\n+Bitcoin version 0.6.2 is now available for download at:\n+http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.2/\n+\n+This is a bug-fix and code-cleanup release, with no major new features.\n+\n+Please report bugs using the github issue tracker at:\n+https://github.com/bitcoin/bitcoin/issues\n+\n+\n+NOTABLE CHANGES\n+\n+Much faster shutdowns. However, the blkindex.dat file is no longer\n+portable to different data directories by default. If you need a\n+portable blkindex.dat file then run with the new -detachdb=1 option\n+or the \"Detach databases at shutdown\" GUI preference.\n+\n+Fixed https://github.com/bitcoin/bitcoin/issues/1065, a bug that\n+could cause long-running nodes to crash.\n+\n+Mac and Windows binaries are compiled against OpenSSL 1.0.1b (Linux\n+binaries are dynamically linked to the version of OpenSSL on the system).\n+\n+\n+CHANGE SUMMARY\n+\n+Use 'git shortlog --no-merges v0.6.0..' for a summary of this release.\n+\n+Source codebase changes:\n+- Many source code cleanups and warnings fixes.  Close to building with -Wall\n+- Locking overhaul, and several minor locking fixes\n+- Several source code portability fixes, e.g. FreeBSD\n+\n+JSON-RPC interface changes:\n+- addmultisigaddress enabled for mainnet (previously only enabled for testnet)\n+\n+Network protocol changes:\n+- protocol version 60001\n+- added nonce value to \"ping\" message (BIP 31)\n+- added new \"pong\" message (BIP 31)\n+\n+Backend storage changes:\n+- Less redundant database flushing, especially during initial block download\n+- Shutdown improvements (see above)\n+\n+Qt user interface:\n+- minor URI handling improvements\n+- progressbar improvements\n+- error handling improvements (show message box rather than console exception,\n+etc.)\n+- by popular request, make 4th bar of connection icon green"
      },
      {
        "sha": "28bb20e1049ac0735dc29d8554f54a39138abead",
        "filename": "doc/release-notes/release-notes-0.6.3.md",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.6.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.6.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.3.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,29 @@\n+Bitcoin version 0.6.3 is now available for download at:\n+  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.3/\n+\n+This is a bug-fix release, with no new features.\n+\n+Please report bugs using the issue tracker at github:\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+CHANGE SUMMARY\n+\n+Fixed a serious denial-of-service attack that could cause the\n+bitcoin process to become unresponsive. Thanks to Sergio Lerner\n+for finding and responsibly reporting the problem. (CVE-2012-3789)\n+\n+Optimized the process of checking transaction signatures, to\n+speed up processing of new block messages and make propagating\n+blocks across the network faster.\n+\n+Fixed an obscure bug that could cause the bitcoin process to get\n+stuck on an invalid block-chain, if the invalid chain was\n+hundreds of blocks long.\n+\n+Bitcoin-Qt no longer automatically selects the first address\n+in the address book (Issue #1384).\n+\n+Fixed minimize-to-dock behavior of Bitcon-Qt on the Mac.\n+\n+Added a block checkpoint at block 185,333 to speed up initial\n+blockchain download."
      },
      {
        "sha": "d33a58f99ffea8145816480f24a7bada55cdd574",
        "filename": "doc/release-notes/release-notes-0.7.0.md",
        "status": "added",
        "additions": 169,
        "deletions": 0,
        "changes": 169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.7.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.7.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.0.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,169 @@\n+Bitcoin version 0.7.0 is now available for download at:\n+  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.0/\n+\n+We recommend that everybody running prior versions of bitcoind/Bitcoin-Qt\n+upgrade to this release, except for users running Mac OSX 10.5.\n+\n+Please report bugs using the issue tracker at github:\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+Project source code is hosted at github; you can get\n+source-only tarballs/zipballs directly from there:\n+  https://github.com/bitcoin/bitcoin/tarball/v0.7.0  # .tar.gz\n+  https://github.com/bitcoin/bitcoin/zipball/v0.7.0  # .zip\n+\n+Ubuntu Linux users can use the \"Personal Package Archive\" (PPA)\n+maintained by Matt Corallo to automatically keep \n+bitcoin up-to-date.  Just type\n+  sudo apt-add-repository ppa:bitcoin/bitcoin\n+  sudo apt-get update\n+in your terminal, then install the bitcoin-qt package:\n+  sudo apt-get install bitcoin-qt\n+\n+\n+How to Upgrade\n+\n+If you are running an older version, shut it down. Wait\n+until it has completely shut down (which might take a few minutes for older\n+versions), then run the installer (on Windows) or just copy over\n+Code:\n+/Applications/Bitcoin-Qt\n+(on Mac) or\n+Code:\n+bitcoind/bitcoin-qt\n+(on Linux).\n+\n+If you were running on Linux with a version that might have been compiled\n+with a different version of Berkeley DB (for example, if you were using the\n+PPA and are switching to the binary release), then run the old version again\n+with the -detachdb argument and shut it down; if you do not, then the new\n+version will not be able to read the database files and will exit with an error.\n+\n+Incompatible Changes\n+\n+* Replaced the 'getmemorypool' RPC command with 'getblocktemplate/submitblock'\n+  and 'getrawmempool' commands.\n+* Remove deprecated RPC 'getblocknumber'\n+\n+Bitcoin Improvement Proposals implemented\n+\n+BIP 22 - 'getblocktemplate', 'submitblock' RPCs\n+BIP 34 - block version 2, height in coinbase\n+BIP 35 - 'mempool' message, extended 'getdata' message behavior\n+\n+\n+Core bitcoin handling and blockchain database\n+\n+* Reduced CPU usage, by eliminating some redundant hash calculations\n+* Cache signature verifications, to eliminate redundant signature checks\n+* Transactions with zero-value outputs are considered non-standard\n+* Mining: when creating new blocks, sort 'paid' area by fee-per-kb\n+* Database: better validation of on-disk stored data\n+* Database: minor optimizations and reliability improvements\n+* -loadblock=FILE will import an external block file\n+* Additional DoS (denial-of-service) prevention measures\n+* New blockchain checkpoint at block 193,000\n+\n+\n+JSON-RPC API\n+\n+* Internal HTTP server is now thread-per-connection, rather than\n+  a single-threaded queue that would stall on network I/O.\n+* Internal HTTP server supports HTTP/1.1, pipelined requests and\n+  connection keep-alive.\n+* Support JSON-RPC 2.0 batches, to encapsulate multiple JSON-RPC requests\n+  within a single HTTP request.\n+* IPv6 support\n+* Added raw transaction API.  See https://gist.github.com/2839617\n+* Added 'getrawmempool', to list contents of TX memory pool\n+* Added 'getpeerinfo', to list data about each connected network peer\n+* Added 'listaddressgroupings' for better coin control\n+* Rework getblock call.\n+* Remove deprecated RPC 'getblocknumber'\n+* Remove superceded RPC 'getmemorypool' (see BIP 22, above)\n+* listtransactions output now displays \"smart\" times for transactions,\n+  and 'blocktime' and 'timereceived' fields were added\n+\n+\n+P2P networking\n+\n+* IPv6 support\n+* Tor hidden service support (see doc/Tor.txt)\n+* Attempts to fix \"stuck blockchain download\" problems\n+* Replace BDB database \"addr.dat\" with internally-managed \"peers.dat\"\n+  file containing peer address data.\n+* Lower default send buffer from 10MB to 1MB\n+* proxy: SOCKS5 by default\n+* Support connecting by hostnames passed to proxy\n+* Add -seednode connections, and use this instead of DNS seeds when proxied\n+* Added -externalip and -discover\n+* Add -onlynet to connect only to a given network (IPv4, IPv6, or Tor)\n+* Separate listening sockets, -bind=<addr>\n+\n+\n+Qt GUI\n+\n+* Add UI RPC console / debug window\n+* Re-Enable URI handling on Windows, add safety checks and tray-notifications\n+* Harmonize the use of ellipsis (\"...\") to be used in menus, but not on buttons\n+* Add 2 labels to the overviewpage that display Wallet and Transaction status (obsolete or current)\n+* Extend the optionsdialog (e.g. language selection) and re-work it to a tabbed UI\n+* Merge sign/verify message into a single window with tabbed UI\n+* Ensure a changed bitcoin unit immediately updates all GUI elements that use units\n+* Update QR Code dialog\n+* Improve error reporting at startup\n+* Fine-grained UI updates for a much smoother UI during block downloads\n+* Remove autocorrection of 0/i in addresses in UI\n+* Reorganize tray icon menu into more logical order\n+* Persistently poll for balance change when number of blocks changed\n+* Much better translations\n+* Override progress bar design on platforms with segmented progress bars to assist with readability\n+* Added 'immature balance' display on the overview page\n+* (Windows only): enable ASLR and DEP for bitcoin-qt.exe\n+* (Windows only): add meta-data to bitcoin-qt.exe (e.g. description)\n+\n+Internal codebase\n+\n+* Additional unit tests\n+* Compile warning fixes\n+\n+\n+Miscellaneous\n+\n+* Reopen debug.log upon SIGHUP\n+* Bash programmable completion for bitcoind(1)\n+* On supported OS's, each thread is given a useful name\n+\n+\n+Thanks to everybody who contributed to this release:\n+\n+Chris Moore\n+Christian von Roques\n+David Joel Schwartz\n+Douglas Huff\n+Fordy\n+Gavin Andresen\n+Giel van Schijndel\n+Gregory Maxwell\n+Jeff Garzik\n+Luke Dashjr\n+Matt Corallo\n+Michael Ford\n+Michael Hendricks\n+Peter Todd\n+Philip Kaufmann\n+Pieter Wuille\n+R E Broadley\n+Ricardo M. Correia\n+Rune K. Svendsen\n+Scott Ellis\n+Stephane Glondu\n+Wladimir J. van der Laan\n+cardpuncher\n+coderrr\n+fanquake\n+grimd34th\n+sje397\n+xanatos\n+\n+Thanks to Sergio Lerner for reporting denial-of-service vulnerabilities fixed in this release."
      },
      {
        "sha": "22e910c09fdf5959931d28bdbabf43fd1aebce81",
        "filename": "doc/release-notes/release-notes-0.7.1.md",
        "status": "added",
        "additions": 110,
        "deletions": 0,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.7.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.7.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.1.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,110 @@\n+Bitcoin version 0.7.1 is now available from:\n+  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/\n+\n+This is a bug-fix minor release.\n+\n+Please report bugs using the issue tracker at github:\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+Project source code is hosted at github; you can get\n+source-only tarballs/zipballs directly from there:\n+  https://github.com/bitcoin/bitcoin/tarball/v0.7.1  # .tar.gz\n+  https://github.com/bitcoin/bitcoin/zipball/v0.7.1  # .zip\n+\n+Ubuntu Linux users can use the \"Personal Package Archive\" (PPA)\n+maintained by Matt Corallo to automatically keep \n+up-to-date.  Just type:\n+  sudo apt-add-repository ppa:bitcoin/bitcoin\n+  sudo apt-get update\n+in your terminal, then install the bitcoin-qt package:\n+  sudo apt-get install bitcoin-qt\n+\n+KNOWN ISSUES\n+------------\n+\n+Mac OSX 10.5 is no longer supported.\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait\n+until it has completely shut down (which might take a few minutes for older\n+versions), then run the installer (on Windows) or just copy over\n+/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+\n+If you were running on Linux with a version that might have been compiled\n+with a different version of Berkeley DB (for example, if you were using an\n+Ubuntu PPA version), then run the old version again with the -detachdb\n+argument and shut it down; if you do not, then the new version will not\n+be able to read the database files and will exit with an error.\n+\n+Explanation of -detachdb (and the new \"stop true\" RPC command):\n+The Berkeley DB database library stores data in both \".dat\" and\n+\"log\" files, so the database is always in a consistent state,\n+even in case of power failure or other sudden shutdown. The\n+format of the \".dat\" files is portable between different\n+versions of Berkeley DB, but the \"log\" files are not-- even minor\n+version differences may have incompatible \"log\" files. The\n+-detachdb option moves any pending changes from the \"log\" files\n+to the \"blkindex.dat\" file for maximum compatibility, but makes\n+shutdown much slower. Note that the \"wallet.dat\" file is always\n+detached, and versions prior to 0.6.0 detached all databases\n+at shutdown.\n+\n+New features\n+------------\n+\n+* Added a boolean argument to the RPC 'stop' command, if true sets\n+  -detachdb to create standalone database .dat files before shutting down.\n+\n+* -salvagewallet command-line option, which moves any existing wallet.dat\n+  to wallet.{timestamp}.dat and then attempts to salvage public/private\n+  keys and master encryption keys (if the wallet is encrypted) into\n+  a new wallet.dat. This should only be used if your wallet becomes\n+  corrupted, and is not intended to replace regular wallet backups.\n+\n+* Import $DataDir/bootstrap.dat automatically, if it exists.\n+\n+Dependency changes\n+------------------\n+\n+* Qt 4.8.2 for Windows builds\n+\n+* openssl 1.0.1c\n+\n+Bug fixes\n+---------\n+\n+* Clicking on a bitcoin: URI on Windows should now launch Bitcoin-Qt properly.\n+\n+* When running -testnet, use RPC port 18332 by default.\n+\n+* Better detection and handling of corrupt wallet.dat and blkindex.dat files.\n+  Previous versions would crash with a DB_RUNRECOVERY exception, this\n+  version detects most problems and tells you how to recover if it\n+  cannot recover itself.\n+\n+* Fixed an uninitialized variable bug that could cause transactions to\n+  be reported out of order.\n+\n+* Fixed a bug that could cause occasional crashes on exit.\n+\n+* Warn the user that they need to create fresh wallet backups after they\n+  encrypt their wallet.\n+\n+----------------------------------------------------\n+Thanks to everybody who contributed to this release:\n+\n+Gavin Andresen\n+Jeff Garzik\n+Luke Dashjr\n+Mark Friedenbach\n+Matt Corallo\n+Philip Kaufmann\n+Pieter Wuille\n+Rune K. Svendsen\n+Virgil Dupras\n+Wladimir J. van der Laan\n+fanquake\n+kjj2\n+xanatos"
      },
      {
        "sha": "40af34962bd9c91478dc2eda9bb853a39bd8d436",
        "filename": "doc/release-notes/release-notes-0.7.2.md",
        "status": "added",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.7.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.7.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.2.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,68 @@\n+Bitcoin version 0.7.2 is now available from:\n+  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.2\n+\n+This is a bug-fix minor release.\n+\n+Please report bugs using the issue tracker at github:\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait\n+until it has completely shut down (which might take a few minutes for older\n+versions), then run the installer (on Windows) or just copy over\n+/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+\n+If you were running on Linux with a version that might have been compiled\n+with a different version of Berkeley DB (for example, if you were using an\n+Ubuntu PPA version), then run the old version again with the -detachdb\n+argument and shut it down; if you do not, then the new version will not\n+be able to read the database files and will exit with an error.\n+\n+Explanation of -detachdb (and the new \"stop true\" RPC command):\n+The Berkeley DB database library stores data in both \".dat\" and\n+\"log\" files, so the database is always in a consistent state,\n+even in case of power failure or other sudden shutdown. The\n+format of the \".dat\" files is portable between different\n+versions of Berkeley DB, but the \"log\" files are not-- even minor\n+version differences may have incompatible \"log\" files. The\n+-detachdb option moves any pending changes from the \"log\" files\n+to the \"blkindex.dat\" file for maximum compatibility, but makes\n+shutdown much slower. Note that the \"wallet.dat\" file is always\n+detached, and versions prior to 0.6.0 detached all databases\n+at shutdown.\n+\n+Bug fixes\n+---------\n+\n+* Prevent RPC 'move' from deadlocking. This was caused by trying to lock the\n+  database twice.\n+\n+* Fix use-after-free problems in initialization and shutdown, the latter of\n+  which caused Bitcoin-Qt to crash on Windows when exiting.\n+\n+* Correct library linking so building on Windows natively works.\n+\n+* Avoid a race condition and out-of-bounds read in block creation/mining code.\n+\n+* Improve platform compatibility quirks, including fix for 100% CPU utilization\n+  on FreeBSD 9.\n+\n+* A few minor corrections to error handling, and updated translations.\n+\n+* OSX 10.5 supported again\n+\n+----------------------------------------------------\n+Thanks to everybody who contributed to this release:\n+\n+Alex\n+dansmith\n+Gavin Andresen\n+Gregory Maxwell\n+Jeff Garzik\n+Luke Dashjr\n+Philip Kaufmann\n+Pieter Wuille\n+Wladimir J. van der Laan\n+grimd34th"
      },
      {
        "sha": "4e98a7740fc2522bfa96c0b1d76133ce88e8113a",
        "filename": "doc/release-notes/release-notes-0.8.0.md",
        "status": "added",
        "additions": 139,
        "deletions": 0,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.0.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,139 @@\n+Bitcoin-Qt version 0.8.0 is now available from:\n+  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.0/\n+\n+This is a major release designed to improve performance and handle the\n+increasing volume of transactions on the network.\n+\n+Please report bugs using the issue tracker at github:\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait\n+until it has completely shut down (which might take a few minutes for older\n+versions), then run the installer (on Windows) or just copy over\n+/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+\n+The first time you run after the upgrade a re-indexing process will be\n+started that will take anywhere from 30 minutes to several hours,\n+depending on the speed of your machine.\n+\n+Incompatible Changes\n+--------------------\n+\n+This release no longer maintains a full index of historical transaction ids\n+by default, so looking up an arbitrary transaction using the getrawtransaction\n+RPC call will not work. If you need that functionality, you must run once\n+with -txindex=1 -reindex=1 to rebuild block-chain indices (see below for more\n+details).\n+\n+Improvements\n+------------\n+\n+Mac and Windows binaries are signed with certificates owned by the Bitcoin\n+Foundation, to be compatible with the new security features in OSX 10.8 and\n+Windows 8.\n+\n+LevelDB, a fast, open-source, non-relational database from Google, is\n+now used to store transaction and block indices.  LevelDB works much better\n+on machines with slow I/O and is faster in general. Berkeley DB is now only\n+used for the wallet.dat file (public and private wallet keys and transactions\n+relevant to you).\n+\n+Pieter Wuille implemented many optimizations to the way transactions are\n+verified, so a running, synchronized node uses less working memory and does\n+much less I/O. He also implemented parallel signature checking, so if you\n+have a multi-CPU machine all CPUs will be used to verify transactions.\n+\n+New Features\n+------------\n+\n+\"Bloom filter\" support in the network protocol for sending only relevant transactions to\n+lightweight clients.\n+\n+contrib/verifysfbinaries is a shell-script to verify that the binary downloads\n+at sourceforge have not been tampered with. If you are able, you can help make\n+everybody's downloads more secure by running this occasionally to check PGP\n+signatures against download file checksums.\n+\n+contrib/spendfrom is a python-language command-line utility that demonstrates\n+how to use the \"raw transactions\" JSON-RPC api to send coins received from particular\n+addresses (also known as \"coin control\").\n+\n+New/changed settings (command-line or bitcoin.conf file)\n+--------------------------------------------------------\n+\n+dbcache : controls LevelDB memory usage.\n+\n+par : controls how many threads to use to validate transactions. Defaults to the number\n+of CPUs on your machine, use -par=1 to limit to a single CPU.\n+\n+txindex : maintains an extra index of old, spent transaction ids so they will be found\n+by the getrawtransaction JSON-RPC method.\n+\n+reindex : rebuild block and transaction indices from the downloaded block data.\n+\n+New JSON-RPC API Features\n+-------------------------\n+\n+lockunspent / listlockunspent allow locking transaction outputs for a period of time so\n+they will not be spent by other processes that might be accessing the same wallet.\n+\n+addnode / getaddednodeinfo methods, to connect to specific peers without restarting.\n+\n+importprivkey now takes an optional boolean parameter (default true) to control whether\n+or not to rescan the blockchain for transactions after importing a new private key.\n+\n+Important Bug Fixes\n+-------------------\n+\n+Privacy leak: the position of the \"change\" output in most transactions was not being\n+properly randomized, making network analysis of the transaction graph to identify\n+users' wallets easier. \n+\n+Zero-confirmation transaction vulnerability: accepting zero-confirmation transactions\n+(transactions that have not yet been included in a block) from somebody you do not\n+trust is still not recommended, because there will always be ways for attackers to\n+double-spend zero-confirmation transactions. However, this release includes a bug\n+fix that makes it a little bit more difficult for attackers to double-spend a\n+certain type (\"lockTime in the future\") of zero-confirmation transaction.\n+\n+Dependency Changes\n+------------------\n+\n+Qt 4.8.3 (compiling against older versions of Qt 4 should continue to work)\n+\n+\n+Thanks to everybody who contributed to this release:\n+----------------------------------------------------\n+\n+Alexander Kjeldaas\n+Andrey Alekseenko\n+Arnav Singh\n+Christian von Roques\n+Eric Lombrozo\n+Forrest Voight\n+Gavin Andresen\n+Gregory Maxwell\n+Jeff Garzik\n+Luke Dashjr\n+Matt Corallo\n+Mike Cassano\n+Mike Hearn\n+Peter Todd\n+Philip Kaufmann\n+Pieter Wuille\n+Richard Schwab\n+Robert Backhaus\n+Rune K. Svendsen\n+Sergio Demian Lerner\n+Wladimir J. van der Laan\n+burger2\n+default\n+fanquake\n+grimd34th\n+justmoon\n+redshark1802\n+tucenaber\n+xanatos"
      },
      {
        "sha": "4fd546bee00f9e78541190dd1ceb22cff35c3f09",
        "filename": "doc/release-notes/release-notes-0.8.1.md",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.1.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,22 @@\n+Bitcoin-Qt/bitcoind version 0.8.1 is now available from:\n+  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.1/\n+\n+This is a maintenance release that adds a new network rule to avoid\n+a chain-forking incompatibility with versions 0.7.2 and earlier.\n+\n+Please report bugs using the issue tracker at github:\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait\n+until it has completely shut down (which might take a few minutes for older\n+versions), then run the installer (on Windows) or just copy over\n+/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you\n+run 0.8.1 your blockchain files will be re-indexed, which will take\n+anywhere from 30 minutes to several hours, depending on the speed of\n+your machine."
      },
      {
        "sha": "eea9ba2a2c3c88b7fa5ac3b8f138f8ae39a59b75",
        "filename": "doc/release-notes/release-notes-0.8.2.md",
        "status": "added",
        "additions": 137,
        "deletions": 0,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.2.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,137 @@\n+Bitcoin-Qt version 0.8.2 is now available from:\n+  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.2/\n+\n+This is a maintenance release that fixes many bugs and includes\n+a few small new features.\n+\n+Please report bugs using the issue tracker at github:\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+\n+How to Upgrade\n+\n+If you are running an older version, shut it down. Wait\n+until it has completely shut down (which might take a few minutes for older\n+versions), then run the installer (on Windows) or just copy over\n+/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you\n+run 0.8.2 your blockchain files will be re-indexed, which will take\n+anywhere from 30 minutes to several hours, depending on the speed of\n+your machine.\n+\n+0.8.2 Release notes\n+\n+Fee Policy changes\n+\n+The default fee for low-priority transactions is lowered from 0.0005 BTC \n+(for each 1,000 bytes in the transaction; an average transaction is\n+about 500 bytes) to 0.0001 BTC.\n+\n+Payments (transaction outputs) of 0.543 times the minimum relay fee\n+(0.00005430 BTC) are now considered 'non-standard', because storing them\n+costs the network more than they are worth and spending them will usually\n+cost their owner more in transaction fees than they are worth.\n+\n+Non-standard transactions are not relayed across the network, are not included\n+in blocks by most miners, and will not show up in your wallet until they are\n+included in a block.\n+\n+The default fee policy can be overridden using the -mintxfee and -minrelaytxfee\n+command-line options, but note that we intend to replace the hard-coded fees\n+with code that automatically calculates and suggests appropriate fees in the\n+0.9 release and note that if you set a fee policy significantly different from\n+the rest of the network your transactions may never confirm.\n+\n+Bitcoin-Qt changes\n+\n+* New icon and splash screen\n+* Improve reporting of synchronization process\n+* Remove hardcoded fee recommendations\n+* Improve metadata of executable on MacOSX and Windows\n+* Move export button to individual tabs instead of toolbar\n+* Add \"send coins\" command to context menu in address book\n+* Add \"copy txid\" command to copy transaction IDs from transaction overview\n+* Save & restore window size and position when showing & hiding window\n+* New translations: Arabic (ar), Bosnian (bs), Catalan (ca), Welsh (cy),\n+  Esperanto (eo), Interlingua (la), Latvian (lv) and many improvements\n+  to current translations\n+\n+MacOSX:\n+* OSX support for click-to-pay (bitcoin:) links\n+* Fix GUI disappearing problem on MacOSX (issue #1522)\n+\n+Linux/Unix:\n+* Copy addresses to middle-mouse-button clipboard\n+\n+\n+Command-line options\n+\n+* -walletnotify will call a command on receiving transactions that affect the wallet.\n+* -alertnotify will call a command on receiving an alert from the network.\n+* -par now takes a negative number, to leave a certain amount of cores free.\n+\n+JSON-RPC API changes\n+\n+* fixed a getblocktemplate bug that caused excessive CPU creating blocks.\n+* listunspent now lists account and address information.\n+* getinfo now also returns the time adjustment estimated from your peers.\n+* getpeerinfo now returns bytessent, bytesrecv and syncnode.\n+* gettxoutsetinfo returns statistics about the unspent transaction output database.\n+* gettxout returns information about a specific unspent transaction output.\n+\n+\n+Networking changes\n+\n+* Significant changes to the networking code, reducing latency and memory consumption.\n+* Avoid initial block download stalling.\n+* Remove IRC seeding support.\n+* Performance tweaks.\n+* Added testnet DNS seeds.\n+\n+Wallet compatibility/rescuing\n+\n+* Cases where wallets cannot be opened in another version/installation should be reduced.\n+* -salvagewallet now works for encrypted wallets.\n+\n+\n+Known Bugs\n+\n+* Entering the 'getblocktemplate' or 'getwork' RPC commands into the Bitcoin-Qt debug\n+console will cause Bitcoin-Qt to crash. Run Bitcoin-Qt with the -server command-line\n+option to workaround.\n+\n+Thanks to everybody who contributed to the 0.8.2 release!\n+\n+APerson241\n+Andrew Poelstra\n+Calvin Owens\n+Chuck LeDuc D\u00edaz\n+Colin Dean\n+David Griffith\n+David Serrano\n+Eric Lombrozo\n+Gavin Andresen\n+Gregory Maxwell\n+Jeff Garzik\n+Jonas Schnelli\n+Larry Gilbert\n+Luke Dashjr\n+Matt Corallo\n+Michael Ford\n+Mike Hearn\n+Patrick Brown\n+Peter Todd\n+Philip Kaufmann\n+Pieter Wuille\n+Richard Schwab\n+Roman Mindalev\n+Scott Howard\n+Tariq Bashir\n+Warren Togami\n+Wladimir J. van der Laan\n+freewil\n+gladoscc\n+kjj2\n+mb300sd\n+super3"
      },
      {
        "sha": "856c20aa33d5d82ed189ed6e90a4a32b40673f15",
        "filename": "doc/release-notes/release-notes-0.8.3.md",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.3.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,18 @@\n+Bitcoin-Qt version 0.8.3 is now available from:\n+  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.3/\n+\n+This is a maintenance release to fix a denial-of-service attack that\n+can cause nodes to crash.\n+\n+Please report bugs using the issue tracker at github:\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+0.8.3 Release notes\n+\n+Truncate over-size messages to prevent a memory exhaustion attack.\n+\n+Fix a regression that causes excessive re-writing of the 'peers.dat' file.\n+\n+\n+Thanks to Peter Todd for responsibly disclosing the vulnerability\n+( CVE-2013-4627 ) and creating a fix."
      },
      {
        "sha": "c6f31f1fa4a58040ca94bb23dbb9ae5bf5a24798",
        "filename": "doc/release-notes/release-notes-0.8.4.md",
        "status": "added",
        "additions": 83,
        "deletions": 0,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.4.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,83 @@\n+Bitcoin-Qt version 0.8.4 is now available from:\n+  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.4/\n+\n+This is a maintenance release to fix a critical bug and three\n+security issues; we urge all users to upgrade.\n+\n+Please report bugs using the issue tracker at github:\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait\n+until it has completely shut down (which might take a few minutes for older\n+versions), then run the installer (on Windows) or just copy over\n+/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you\n+run 0.8.4 your blockchain files will be re-indexed, which will take\n+anywhere from 30 minutes to several hours, depending on the speed of\n+your machine.\n+\n+0.8.4 Release notes\n+===================\n+\n+Security issues\n+---------------\n+\n+An attacker could send a series of messages that resulted in\n+an integer division-by-zero error in the Bloom Filter handling\n+code, causing the Bitcoin-Qt or bitcoind process to crash.\n+Bloom filters were introduced with version 0.8, so versions 0.8.0\n+through 0.8.3 are vulnerable to this critical denial-of-service attack.\n+\n+A constant-time algorithm is now used to check RPC password\n+guess attempts; fixes https://github.com/bitcoin/bitcoin/issues/2838\n+(CVE-2013-4165)\n+\n+Implement a better fix for the fill-memory-with-orphan-transactions\n+attack that was fixed in 0.8.3. See\n+https://bitslog.wordpress.com/2013/07/18/buggy-cve-2013-4627-patch-open-new-vectors-of-attack/\n+for a description of the weaknesses of the previous fix.\n+(CVE-2013-4627)\n+\n+Bugs fixed\n+----------\n+\n+Fix multi-block reorg transaction resurrection.\n+\n+Fix non-standard disconnected transactions causing mempool orphans.\n+This bug could cause nodes running with the -debug flag to crash.\n+\n+OSX: use 'FD_FULLSYNC' with LevelDB, which will (hopefully!)\n+prevent the database corruption issues many people have\n+experienced on OSX.\n+\n+Linux: clicking on bitcoin: links was broken if you were using\n+a Gnome-based desktop.\n+\n+Fix a hang-at-shutdown bug that only affects users that compile\n+their own version of Bitcoin against Boost versions 1.50-1.52.\n+\n+Other changes\n+-------------\n+\n+Checkpoint at block 250,000 to speed up initial block downloads\n+and make the progress indicator when downloading more accurate.\n+\n+\n+Thanks to everybody who contributed to the 0.8.4 releases!\n+----------------------------------------------------------\n+\n+Pieter Wuille\n+Warren Togami\n+Patrick Strateman\n+pakt\n+Gregory Maxwell\n+Sergio Demian Lerner\n+grayleonard\n+Cory Fields\n+Matt Corallo\n+Gavin Andresen"
      },
      {
        "sha": "aa93fe7c715c23c967fd01e8af9a9337a34291a4",
        "filename": "doc/release-notes/release-notes-0.8.5.md",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.5.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,44 @@\n+Bitcoin-Qt version 0.8.5 is now available from:\n+  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.5/\n+\n+This is a maintenance release to fix a critical bug;\n+we urge all users to upgrade.\n+\n+Please report bugs using the issue tracker at github:\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait\n+until it has completely shut down (which might take a few minutes for older\n+versions), then run the installer (on Windows) or just copy over\n+/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you\n+run 0.8.5 your blockchain files will be re-indexed, which will take\n+anywhere from 30 minutes to several hours, depending on the speed of\n+your machine.\n+\n+0.8.5 Release notes\n+===================\n+\n+Bugs fixed\n+----------\n+\n+Transactions with version numbers larger than 0x7fffffff were\n+incorrectly being relayed and included in blocks.\n+\n+Blocks containing transactions with version numbers larger\n+than 0x7fffffff caused the code that checks for LevelDB database\n+inconsistencies at startup to erroneously report database\n+corruption and suggest that you reindex your database.\n+\n+This release also contains a non-critical fix to the code that\n+enforces BIP 34 (block height in the coinbase transaction).\n+\n+--\n+\n+Thanks to Gregory Maxwell and Pieter Wuille for quickly\n+identifying and fixing the transaction version number bug."
      },
      {
        "sha": "39a45e0db565713a2bb06c1761f17e44c83f6fdd",
        "filename": "doc/release-notes/release-notes-0.8.6.md",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.8.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.6.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,66 @@\n+Bitcoin-Qt version 0.8.6 final is now available from:\n+\n+  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.6/\n+\n+This is a maintenance release to fix a critical bug; we urge all users to upgrade.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+--------------\n+\n+If you already downloaded 0.8.6rc1 you do not need to re-download. This release is exactly the same.\n+\n+If you are running an older version, shut it down. Wait\n+until it has completely shut down (which might take a few minutes for older\n+versions), then run the installer (on Windows) or just copy over\n+/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you\n+run 0.8.6 your blockchain files will be re-indexed, which will take\n+anywhere from 30 minutes to several hours, depending on the speed of\n+your machine.\n+\n+0.8.6 Release notes\n+===================\n+\n+- Default block size increase for miners.\n+  (see https://gist.github.com/gavinandresen/7670433#086-accept-into-block)\n+\n+- Remove the all-outputs-must-be-greater-than-CENT-to-qualify-as-free rule for relaying\n+  (see https://gist.github.com/gavinandresen/7670433#086-relaying)\n+\n+- Lower maximum size for free transaction creation\n+  (see https://gist.github.com/gavinandresen/7670433#086-wallet)\n+\n+- OSX block chain database corruption fixes\n+  - Update leveldb to 1.13\n+  - Use fcntl with `F_FULLSYNC` instead of fsync on OSX\n+  - Use native Darwin memory barriers\n+  - Replace use of mmap in leveldb for improved reliability (only on OSX)\n+\n+- Fix nodes forwarding transactions with empty vins and getting banned\n+\n+- Network code performance and robustness improvements\n+\n+- Additional debug.log logging for diagnosis of network problems, log timestamps by default\n+\n+- Fix Bitcoin-Qt startup crash when clicking dock icon on OSX \n+\n+- Fix memory leaks in CKey::SetCompactSignature() and Key::SignCompact()\n+\n+- Fix rare GUI crash on send\n+\n+- Various small GUI, documentation and build fixes\n+\n+Warning\n+-------\n+\n+- There have been frequent reports of users running out of virtual memory on 32-bit systems\n+  during the initial sync.\n+  Hence it is recommended to use a 64-bit executable if possible.\n+  A 64-bit executable for Windows is planned for 0.9.\n+\n+Note: Gavin Andresen's GPG signing key for SHA256SUMS.asc has been changed from  key id 1FC730C1 to sub key 7BF6E212 (see https://github.com/bitcoin/bitcoin.org/pull/279)."
      },
      {
        "sha": "170410ca40a3bd1bb059f02a7102d88e0ab95e27",
        "filename": "doc/release-notes/release-notes-0.9.0.md",
        "status": "added",
        "additions": 411,
        "deletions": 0,
        "changes": 411,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.9.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.9.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.0.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,411 @@\n+Bitcoin Core version 0.9.0 is now available from:\n+\n+  https://bitcoin.org/bin/0.9.0/\n+\n+This is a new major version release, bringing both new features and\n+bug fixes.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), uninstall all\n+earlier versions of Bitcoin, then run the installer (on Windows) or just copy\n+over /Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you run\n+0.9.0 your blockchain files will be re-indexed, which will take anywhere from \n+30 minutes to several hours, depending on the speed of your machine.\n+\n+On Windows, do not forget to uninstall all earlier versions of the Bitcoin\n+client first, especially if you are switching to the 64-bit version.\n+\n+Windows 64-bit installer\n+-------------------------\n+\n+New in 0.9.0 is the Windows 64-bit version of the client. There have been\n+frequent reports of users running out of virtual memory on 32-bit systems\n+during the initial sync. Because of this it is recommended to install the\n+64-bit version if your system supports it.\n+\n+NOTE: Release candidate 2 Windows binaries are not code-signed; use PGP\n+and the SHA256SUMS.asc file to make sure your binaries are correct.\n+In the final 0.9.0 release, Windows setup.exe binaries will be code-signed.\n+\n+OSX 10.5 / 32-bit no longer supported\n+-------------------------------------\n+\n+0.9.0 drops support for older Macs. The minimum requirements are now:\n+* A 64-bit-capable CPU (see http://support.apple.com/kb/ht3696);\n+* Mac OS 10.6 or later (see https://support.apple.com/kb/ht1633).\n+\n+Downgrading warnings\n+--------------------\n+\n+The 'chainstate' for this release is not always compatible with previous\n+releases, so if you run 0.9 and then decide to switch back to a\n+0.8.x release you might get a blockchain validation error when starting the\n+old release (due to 'pruned outputs' being omitted from the index of\n+unspent transaction outputs).\n+\n+Running the old release with the -reindex option will rebuild the chainstate\n+data structures and correct the problem.\n+\n+Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n+the blockchain for missing spent coins, which will take a long time (tens\n+of minutes on a typical machine).\n+\n+Rebranding to Bitcoin Core\n+---------------------------\n+\n+To reduce confusion between Bitcoin-the-network and Bitcoin-the-software we\n+have renamed the reference client to Bitcoin Core.\n+\n+\n+OP_RETURN and data in the block chain\n+-------------------------------------\n+On OP_RETURN:  There was been some confusion and misunderstanding in\n+the community, regarding the OP_RETURN feature in 0.9 and data in the\n+blockchain.  This change is not an endorsement of storing data in the\n+blockchain.  The OP_RETURN change creates a provably-prunable output,\n+to avoid data storage schemes -- some of which were already deployed --\n+that were storing arbitrary data such as images as forever-unspendable\n+TX outputs, bloating bitcoin's UTXO database.\n+\n+Storing arbitrary data in the blockchain is still a bad idea; it is less\n+costly and far more efficient to store non-currency data elsewhere.\n+\n+Autotools build system\n+-----------------------\n+\n+For 0.9.0 we switched to an autotools-based build system instead of individual\n+(q)makefiles.\n+\n+Using the standard \"./autogen.sh; ./configure; make\" to build Bitcoin-Qt and\n+bitcoind makes it easier for experienced open source developers to contribute \n+to the project.\n+\n+Be sure to check doc/build-*.md for your platform before building from source.\n+\n+Bitcoin-cli\n+-------------\n+\n+Another change in the 0.9 release is moving away from the bitcoind executable\n+functioning both as a server and as a RPC client. The RPC client functionality\n+(\"tell the running bitcoin daemon to do THIS\") was split into a separate\n+executable, 'bitcoin-cli'. The RPC client code will eventually be removed from\n+bitcoind, but will be kept for backwards compatibility for a release or two.\n+\n+`walletpassphrase` RPC\n+-----------------------\n+\n+The behavior of the `walletpassphrase` RPC when the wallet is already unlocked\n+has changed between 0.8 and 0.9.\n+\n+The 0.8 behavior of `walletpassphrase` is to fail when the wallet is already unlocked:\n+\n+    > walletpassphrase 1000\n+    walletunlocktime = now + 1000\n+    > walletpassphrase 10\n+    Error: Wallet is already unlocked (old unlock time stays)\n+\n+The new behavior of `walletpassphrase` is to set a new unlock time overriding\n+the old one:\n+\n+    > walletpassphrase 1000\n+    walletunlocktime = now + 1000\n+    > walletpassphrase 10\n+    walletunlocktime = now + 10 (overriding the old unlock time)\n+\n+Transaction malleability-related fixes\n+--------------------------------------\n+\n+This release contains a few fixes for transaction ID (TXID) malleability \n+issues:\n+\n+- -nospendzeroconfchange command-line option, to avoid spending\n+  zero-confirmation change\n+- IsStandard() transaction rules tightened to prevent relaying and mining of\n+  mutated transactions\n+- Additional information in listtransactions/gettransaction output to\n+  report wallet transactions that conflict with each other because\n+  they spend the same outputs.\n+- Bug fixes to the getbalance/listaccounts RPC commands, which would report\n+  incorrect balances for double-spent (or mutated) transactions.\n+- New option: -zapwallettxes to rebuild the wallet's transaction information\n+\n+Transaction Fees\n+----------------\n+\n+This release drops the default fee required to relay transactions across the\n+network and for miners to consider the transaction in their blocks to\n+0.01mBTC per kilobyte.\n+\n+Note that getting a transaction relayed across the network does NOT guarantee\n+that the transaction will be accepted by a miner; by default, miners fill\n+their blocks with 50 kilobytes of high-priority transactions, and then with\n+700 kilobytes of the highest-fee-per-kilobyte transactions.\n+\n+The minimum relay/mining fee-per-kilobyte may be changed with the\n+minrelaytxfee option. Note that previous releases incorrectly used\n+the mintxfee setting to determine which low-priority transactions should\n+be considered for inclusion in blocks.\n+\n+The wallet code still uses a default fee for low-priority transactions of\n+0.1mBTC per kilobyte. During periods of heavy transaction volume, even this\n+fee may not be enough to get transactions confirmed quickly; the mintxfee\n+option may be used to override the default.\n+\n+0.9.0 Release notes\n+=======================\n+\n+RPC:\n+\n+- New notion of 'conflicted' transactions, reported as confirmations: -1\n+- 'listreceivedbyaddress' now provides tx ids\n+- Add raw transaction hex to 'gettransaction' output\n+- Updated help and tests for 'getreceivedby(account|address)'\n+- In 'getblock', accept 2nd 'verbose' parameter, similar to getrawtransaction,\n+  but defaulting to 1 for backward compatibility\n+- Add 'verifychain', to verify chain database at runtime\n+- Add 'dumpwallet' and 'importwallet' RPCs\n+- 'keypoolrefill' gains optional size parameter\n+- Add 'getbestblockhash', to return tip of best chain\n+- Add 'chainwork' (the total work done by all blocks since the genesis block)\n+  to 'getblock' output\n+- Make RPC password resistant to timing attacks\n+- Clarify help messages and add examples\n+- Add 'getrawchangeaddress' call for raw transaction change destinations\n+- Reject insanely high fees by default in 'sendrawtransaction'\n+- Add RPC call 'decodescript' to decode a hex-encoded transaction script\n+- Make 'validateaddress' provide redeemScript\n+- Add 'getnetworkhashps' to get the calculated network hashrate\n+- New RPC 'ping' command to request ping, new 'pingtime' and 'pingwait' fields\n+  in 'getpeerinfo' output\n+- Adding new 'addrlocal' field to 'getpeerinfo' output\n+- Add verbose boolean to 'getrawmempool'\n+- Add rpc command 'getunconfirmedbalance' to obtain total unconfirmed balance\n+- Explicitly ensure that wallet is unlocked in `importprivkey`\n+- Add check for valid keys in `importprivkey`\n+\n+Command-line options:\n+\n+- New option: -nospendzeroconfchange to never spend unconfirmed change outputs\n+- New option: -zapwallettxes to rebuild the wallet's transaction information\n+- Rename option '-tor' to '-onion' to better reflect what it does\n+- Add '-disablewallet' mode to let bitcoind run entirely without wallet (when\n+  built with wallet)\n+- Update default '-rpcsslciphers' to include TLSv1.2\n+- make '-logtimestamps' default on and rework help-message\n+- RPC client option: '-rpcwait', to wait for server start\n+- Remove '-logtodebugger'\n+- Allow `-noserver` with bitcoind\n+\n+Block-chain handling and storage:\n+\n+- Update leveldb to 1.15\n+- Check for correct genesis (prevent cases where a datadir from the wrong\n+  network is accidentally loaded)\n+- Allow txindex to be removed and add a reindex dialog\n+- Log aborted block database rebuilds\n+- Store orphan blocks in serialized form, to save memory\n+- Limit the number of orphan blocks in memory to 750\n+- Fix non-standard disconnected transactions causing mempool orphans\n+- Add a new checkpoint at block 279,000\n+\n+Wallet:\n+\n+- Bug fixes and new regression tests to correctly compute\n+  the balance of wallets containing double-spent (or mutated) transactions\n+- Store key creation time. Calculate whole-wallet birthday.\n+- Optimize rescan to skip blocks prior to birthday\n+- Let user select wallet file with -wallet=foo.dat\n+- Consider generated coins mature at 101 instead of 120 blocks\n+- Improve wallet load time\n+- Don't count txins for priority to encourage sweeping\n+- Don't create empty transactions when reading a corrupted wallet\n+- Fix rescan to start from beginning after importprivkey\n+- Only create signatures with low S values\n+\n+Mining:\n+\n+- Increase default -blockmaxsize/prioritysize to 750K/50K\n+- 'getblocktemplate' does not require a key to create a block template\n+- Mining code fee policy now matches relay fee policy\n+\n+Protocol and network:\n+\n+- Drop the fee required to relay a transaction to 0.01mBTC per kilobyte\n+- Send tx relay flag with version\n+- New 'reject' P2P message (BIP 0061, see\n+  https://gist.github.com/gavinandresen/7079034 for draft)\n+- Dump addresses every 15 minutes instead of 10 seconds\n+- Relay OP_RETURN data TxOut as standard transaction type\n+- Remove CENT-output free transaction rule when relaying\n+- Lower maximum size for free transaction creation\n+- Send multiple inv messages if mempool.size > MAX_INV_SZ\n+- Split MIN_PROTO_VERSION into INIT_PROTO_VERSION and MIN_PEER_PROTO_VERSION\n+- Do not treat fFromMe transaction differently when broadcasting\n+- Process received messages one at a time without sleeping between messages\n+- Improve logging of failed connections\n+- Bump protocol version to 70002\n+- Add some additional logging to give extra network insight\n+- Added new DNS seed from bitcoinstats.com\n+\n+Validation:\n+\n+- Log reason for non-standard transaction rejection\n+- Prune provably-unspendable outputs, and adapt consistency check for it.\n+- Detect any sufficiently long fork and add a warning\n+- Call the -alertnotify script when we see a long or invalid fork\n+- Fix multi-block reorg transaction resurrection\n+- Reject non-canonically-encoded serialization sizes\n+- Reject dust amounts during validation\n+- Accept nLockTime transactions that finalize in the next block\n+\n+Build system:\n+\n+- Switch to autotools-based build system\n+- Build without wallet by passing `--disable-wallet` to configure, this \n+  removes the BerkeleyDB dependency\n+- Upgrade gitian dependencies (libpng, libz, libupnpc, boost, openssl) to more\n+  recent versions\n+- Windows 64-bit build support\n+- Solaris compatibility fixes\n+- Check integrity of gitian input source tarballs\n+- Enable full GCC Stack-smashing protection for all OSes\n+\n+GUI:\n+\n+- Switch to Qt 5.2.0 for Windows build\n+- Add payment request (BIP 0070) support\n+- Improve options dialog\n+- Show transaction fee in new send confirmation dialog\n+- Add total balance in overview page\n+- Allow user to choose data directory on first start, when data directory is\n+  missing, or when the -choosedatadir option is passed\n+- Save and restore window positions\n+- Add vout index to transaction id in transactions details dialog\n+- Add network traffic graph in debug window\n+- Add open URI dialog\n+- Add Coin Control Features\n+- Improve receive coins workflow: make the 'Receive' tab into a form to request\n+  payments, and move historical address list functionality to File menu.\n+- Rebrand to `Bitcoin Core`\n+- Move initialization/shutdown to a thread. This prevents \"Not responding\"\n+  messages during startup. Also show a window during shutdown.\n+- Don't regenerate autostart link on every client startup\n+- Show and store message of normal bitcoin:URI\n+- Fix richtext detection hang issue on very old Qt versions\n+- OS X: Make use of the 10.8+ user notification center to display Growl-like \n+  notifications\n+- OS X: Added NSHighResolutionCapable flag to Info.plist for better font\n+  rendering on Retina displays.\n+- OS X: Fix bitcoin-qt startup crash when clicking dock icon\n+- Linux: Fix Gnome bitcoin: URI handler\n+\n+Miscellaneous:\n+\n+- Add Linux script (contrib/qos/tc.sh) to limit outgoing bandwidth\n+- Add '-regtest' mode, similar to testnet but private with instant block\n+  generation with 'setgenerate' RPC.\n+- Add 'linearize.py' script to contrib, for creating bootstrap.dat\n+- Add separate bitcoin-cli client\n+\n+Credits\n+--------\n+\n+Thanks to everyone who contributed to this release:\n+\n+- Andrey\n+- Ashley Holman\n+- b6393ce9-d324-4fe1-996b-acf82dbc3d53\n+- bitsofproof\n+- Brandon Dahler\n+- Calvin Tam\n+- Christian Decker\n+- Christian von Roques\n+- Christopher Latham\n+- Chuck\n+- coblee\n+- constantined\n+- Cory Fields\n+- Cozz Lovan\n+- daniel\n+- Daniel Larimer\n+- David Hill\n+- Dmitry Smirnov\n+- Drak\n+- Eric Lombrozo\n+- fanquake\n+- fcicq\n+- Florin\n+- frewil\n+- Gavin Andresen\n+- Gregory Maxwell\n+- gubatron\n+- Guillermo C\u00e9spedes Tab\u00e1rez\n+- Haakon Nilsen\n+- HaltingState\n+- Han Lin Yap\n+- harry\n+- Ian Kelling\n+- Jeff Garzik\n+- Johnathan Corgan\n+- Jonas Schnelli\n+- Josh Lehan\n+- Josh Triplett\n+- Julian Langschaedel\n+- Kangmo\n+- Lake Denman\n+- Luke Dashjr\n+- Mark Friedenbach\n+- Matt Corallo\n+- Michael Bauer\n+- Michael Ford\n+- Michagogo\n+- Midnight Magic\n+- Mike Hearn\n+- Nils Schneider\n+- Noel Tiernan\n+- Olivier Langlois\n+- patrick s\n+- Patrick Strateman\n+- paveljanik\n+- Peter Todd\n+- phantomcircuit\n+- phelixbtc\n+- Philip Kaufmann\n+- Pieter Wuille\n+- Rav3nPL\n+- R E Broadley\n+- regergregregerrge\n+- Robert Backhaus\n+- Roman Mindalev\n+- Rune K. Svendsen\n+- Ryan Niebur\n+- Scott Ellis\n+- Scott Willeke\n+- Sergey Kazenyuk\n+- Shawn Wilkinson\n+- Sined\n+- sje\n+- Subo1978\n+- super3\n+- Tamas Blummer\n+- theuni\n+- Thomas Holenstein\n+- Timon Rapp\n+- Timothy Stranex\n+- Tom Geller\n+- Torstein Huseb\u00f8\n+- Vaclav Vobornik\n+- vhf / victor felder\n+- Vinnie Falco\n+- Warren Togami\n+- Wil Bown\n+- Wladimir J. van der Laan"
      },
      {
        "sha": "0552053d27b8f76e9f5a80cdfcfb0420d64afc86",
        "filename": "doc/release-notes/release-notes-0.9.1.md",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.9.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.9.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.1.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,53 @@\n+Bitcoin Core version 0.9.1 is now available from:\n+\n+  https://bitcoin.org/bin/0.9.1/\n+\n+This is a security update. It is recommended to upgrade to this release\n+as soon as possible.\n+\n+It is especially important to upgrade if you currently have version\n+0.9.0 installed and are using the graphical interface OR you are using\n+bitcoind from any pre-0.9.1 version, and have enabled SSL for RPC and\n+have configured allowip to allow rpc connections from potentially\n+hostile hosts.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you run\n+0.9.1 your blockchain files will be re-indexed, which will take anywhere from \n+30 minutes to several hours, depending on the speed of your machine.\n+\n+0.9.1 Release notes\n+=======================\n+\n+No code changes were made between 0.9.0 and 0.9.1. Only the dependencies were changed.\n+\n+- Upgrade OpenSSL to 1.0.1g. This release fixes the following vulnerabilities which can\n+  affect the Bitcoin Core software:\n+\n+  - CVE-2014-0160 (\"heartbleed\")\n+    A missing bounds check in the handling of the TLS heartbeat extension can\n+    be used to reveal up to 64k of memory to a connected client or server.\n+\n+  - CVE-2014-0076\n+    The Montgomery ladder implementation in OpenSSL does not ensure that\n+    certain swap operations have a constant-time behavior, which makes it\n+    easier for local users to obtain ECDSA nonces via a FLUSH+RELOAD cache\n+    side-channel attack.\n+\n+- Add statically built executables to Linux build\n+\n+Credits\n+--------\n+\n+Credits go to the OpenSSL team for fixing the vulnerabilities quickly."
      },
      {
        "sha": "3168ad1a5ad79a7d9ea5dcbf35b8e924dcaaa752",
        "filename": "doc/release-notes/release-notes-0.9.2.1.md",
        "status": "added",
        "additions": 207,
        "deletions": 0,
        "changes": 207,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.9.2.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.9.2.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.1.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,207 @@\n+Bitcoin Core version 0.9.2.1 is now available from:\n+\n+  https://bitcoin.org/bin/0.9.2.1/\n+\n+This is a new minor version release, bringing mostly bug fixes and some minor\n+improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n+Upgrading to this release is recommended.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you run\n+0.9.2.1 your blockchain files will be re-indexed, which will take anywhere from \n+30 minutes to several hours, depending on the speed of your machine.\n+\n+Downgrading warnings\n+--------------------\n+\n+The 'chainstate' for this release is not always compatible with previous\n+releases, so if you run 0.9.x and then decide to switch back to a\n+0.8.x release you might get a blockchain validation error when starting the\n+old release (due to 'pruned outputs' being omitted from the index of\n+unspent transaction outputs).\n+\n+Running the old release with the -reindex option will rebuild the chainstate\n+data structures and correct the problem.\n+\n+Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n+the blockchain for missing spent coins, which will take a long time (tens\n+of minutes on a typical machine).\n+\n+Important changes\n+==================\n+\n+Gitian OSX build\n+-----------------\n+\n+The deterministic build system that was already used for Windows and Linux\n+builds is now used for OSX as well. Although the resulting executables have\n+been tested quite a bit, there could be possible regressions. Be sure to report\n+these on the Github bug tracker mentioned above.\n+\n+Compatibility of Linux build\n+-----------------------------\n+\n+For Linux we now build against Qt 4.6, and filter the symbols for libstdc++ and glibc.\n+This brings back compatibility with\n+\n+- Debian 6+ / Tails\n+- Ubuntu 10.04\n+- CentOS 6.5\n+\n+0.9.2 - 0.9.2.1 Release notes\n+=======================\n+\n+The OpenSSL dependency in the gitian builds has been upgraded to 1.0.1h because of CVE-2014-0224.\n+\n+RPC:\n+\n+- Add `getwalletinfo`, `getblockchaininfo` and `getnetworkinfo` calls (will replace hodge-podge `getinfo` at some point)\n+- Add a `relayfee` field to `getnetworkinfo`\n+- Fix RPC related shutdown hangs and leaks\n+- Always show syncnode in `getpeerinfo`\n+- `sendrawtransaction`: report the reject code and reason, and make it possible to re-send transactions that are already in the mempool\n+- `getmininginfo` show right genproclimit\n+\n+Command-line options:\n+\n+- Fix `-printblocktree` output\n+- Show error message if ReadConfigFile fails\n+\n+Block-chain handling and storage:\n+\n+- Fix for GetBlockValue() after block 13,440,000 (BIP42)\n+- Upgrade leveldb to 1.17\n+\n+Protocol and network code:\n+\n+- Per-peer block download tracking and stalled download detection\n+- Add new DNS seed from bitnodes.io\n+- Prevent socket leak in ThreadSocketHandler and correct some proxy related socket leaks\n+- Use pnode->nLastRecv as sync score (was the wrong way around)\n+\n+Wallet:\n+\n+- Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)\n+- Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC\n+- Fix importwallet nTimeFirstKey (trigger necessary rescans)\n+- Log BerkeleyDB version at startup\n+- CWallet init fix\n+\n+Build system:\n+\n+- Add OSX build descriptors to gitian\n+- Fix explicit --disable-qt-dbus\n+- Don't require db_cxx.h when compiling with wallet disabled and GUI enabled\n+- Improve missing boost error reporting\n+- Upgrade miniupnpc version to 1.9\n+- gitian-linux: --enable-glibc-back-compat for binary compatibility with old distributions\n+- gitian: don't export any symbols from executable\n+- gitian: build against Qt 4.6\n+- devtools: add script to check symbols from Linux gitian executables\n+- Remove build-time no-IPv6 setting\n+\n+GUI:\n+\n+- Fix various coin control visual issues\n+- Show number of in/out connections in debug console\n+- Show weeks as well as years behind for long timespans behind\n+- Enable and disable the Show and Remove buttons for requested payments history based on whether any entry is selected.\n+- Show also value for options overridden on command line in options dialog\n+- Fill in label from address book also for URIs\n+- Fixes feel when resizing the last column on tables (issue #2862)\n+- Fix ESC in disablewallet mode\n+- Add expert section to wallet tab in optionsdialog\n+- Do proper boost::path conversion (fixes unicode in datadir)\n+- Only override -datadir if different from the default (fixes -datadir in config file)\n+- Show rescan progress at start-up\n+- Show importwallet progress\n+- Get required locks upfront in polling functions (avoids hanging on locks)\n+- Catch Windows shutdown events while client is running\n+- Optionally add third party links to transaction context menu\n+- Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n+- Fix \"Start bitcoin on system login\"\n+\n+Miscellaneous:\n+\n+- Replace non-threadsafe C functions (gmtime, strerror and setlocale)\n+- Add missing cs_main and wallet locks\n+- Avoid exception at startup when system locale not recognized\n+- Changed bitrpc.py's raw_input to getpass for passwords to conceal characters during command line input\n+- devtools: add a script to fetch and postprocess translations\n+\n+Credits\n+--------\n+\n+Thanks to everyone who contributed to this release:\n+\n+- Addy Yeow\n+- Altoidnerd\n+- Andrea D'Amore\n+- Andreas Schildbach\n+- Bardi Harborow\n+- Brandon Dahler\n+- Bryan Bishop\n+- Chris Beams\n+- Christian von Roques\n+- Cory Fields\n+- Cozz Lovan\n+- daniel\n+- Daniel Newton\n+- David A. Harding\n+- ditto-b\n+- duanemoody\n+- Eric S. Bullington\n+- Fabian Raetz\n+- Gavin Andresen\n+- Gregory Maxwell\n+- gubatron\n+- Haakon Nilsen\n+- harry\n+- Hector Jusforgues\n+- Isidoro Ghezzi\n+- Jeff Garzik\n+- Johnathan Corgan\n+- jtimon\n+- Kamil Domanski\n+- langerhans\n+- Luke Dashjr\n+- Manuel Araoz\n+- Mark Friedenbach\n+- Matt Corallo\n+- Matthew Bogosian\n+- Meeh\n+- Michael Ford\n+- Michagogo\n+- Mikael Wikman\n+- Mike Hearn\n+- olalonde\n+- paveljanik\n+- peryaudo\n+- Philip Kaufmann\n+- philsong\n+- Pieter Wuille\n+- R E Broadley\n+- richierichrawr\n+- Rune K. Svendsen\n+- rxl\n+- shshshsh\n+- Simon de la Rouviere\n+- Stuart Cardall\n+- super3\n+- Telepatheic\n+- Thomas Zander\n+- Torstein Huseb\u00f8\n+- Warren Togami\n+- Wladimir J. van der Laan\n+- Yoichi Hirai"
      },
      {
        "sha": "a2749e549f7663f674d496da600c0bf282a851d2",
        "filename": "doc/release-notes/release-notes-0.9.2.md",
        "status": "added",
        "additions": 207,
        "deletions": 0,
        "changes": 207,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.9.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.9.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,207 @@\n+Bitcoin Core version 0.9.2 is now available from:\n+\n+  https://bitcoin.org/bin/0.9.2/\n+\n+This is a new minor version release, bringing mostly bug fixes and some minor\n+improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n+Upgrading to this release is recommended.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you run\n+0.9.2 your blockchain files will be re-indexed, which will take anywhere from \n+30 minutes to several hours, depending on the speed of your machine.\n+\n+Downgrading warnings\n+--------------------\n+\n+The 'chainstate' for this release is not always compatible with previous\n+releases, so if you run 0.9.x and then decide to switch back to a\n+0.8.x release you might get a blockchain validation error when starting the\n+old release (due to 'pruned outputs' being omitted from the index of\n+unspent transaction outputs).\n+\n+Running the old release with the -reindex option will rebuild the chainstate\n+data structures and correct the problem.\n+\n+Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n+the blockchain for missing spent coins, which will take a long time (tens\n+of minutes on a typical machine).\n+\n+Important changes\n+==================\n+\n+Gitian OSX build\n+-----------------\n+\n+The deterministic build system that was already used for Windows and Linux\n+builds is now used for OSX as well. Although the resulting executables have\n+been tested quite a bit, there could be possible regressions. Be sure to report\n+these on the Github bug tracker mentioned above.\n+\n+Compatibility of Linux build\n+-----------------------------\n+\n+For Linux we now build against Qt 4.6, and filter the symbols for libstdc++ and glibc.\n+This brings back compatibility with\n+\n+- Debian 6+ / Tails\n+- Ubuntu 10.04\n+- CentOS 6.5\n+\n+0.9.2 Release notes\n+=======================\n+\n+The OpenSSL dependency in the gitian builds has been upgraded to 1.0.1h because of CVE-2014-0224.\n+\n+RPC:\n+\n+- Add `getwalletinfo`, `getblockchaininfo` and `getnetworkinfo` calls (will replace hodge-podge `getinfo` at some point)\n+- Add a `relayfee` field to `getnetworkinfo`\n+- Fix RPC related shutdown hangs and leaks\n+- Always show syncnode in `getpeerinfo`\n+- `sendrawtransaction`: report the reject code and reason, and make it possible to re-send transactions that are already in the mempool\n+- `getmininginfo` show right genproclimit\n+\n+Command-line options:\n+\n+- Fix `-printblocktree` output\n+- Show error message if ReadConfigFile fails\n+\n+Block-chain handling and storage:\n+\n+- Fix for GetBlockValue() after block 13,440,000 (BIP42)\n+- Upgrade leveldb to 1.17\n+\n+Protocol and network code:\n+\n+- Per-peer block download tracking and stalled download detection\n+- Add new DNS seed from bitnodes.io\n+- Prevent socket leak in ThreadSocketHandler and correct some proxy related socket leaks\n+- Use pnode->nLastRecv as sync score (was the wrong way around)\n+\n+Wallet:\n+\n+- Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)\n+- Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC\n+- Fix importwallet nTimeFirstKey (trigger necessary rescans)\n+- Log BerkeleyDB version at startup\n+- CWallet init fix\n+\n+Build system:\n+\n+- Add OSX build descriptors to gitian\n+- Fix explicit --disable-qt-dbus\n+- Don't require db_cxx.h when compiling with wallet disabled and GUI enabled\n+- Improve missing boost error reporting\n+- Upgrade miniupnpc version to 1.9\n+- gitian-linux: --enable-glibc-back-compat for binary compatibility with old distributions\n+- gitian: don't export any symbols from executable\n+- gitian: build against Qt 4.6\n+- devtools: add script to check symbols from Linux gitian executables\n+- Remove build-time no-IPv6 setting\n+\n+GUI:\n+\n+- Fix various coin control visual issues\n+- Show number of in/out connections in debug console\n+- Show weeks as well as years behind for long timespans behind\n+- Enable and disable the Show and Remove buttons for requested payments history based on whether any entry is selected.\n+- Show also value for options overridden on command line in options dialog\n+- Fill in label from address book also for URIs\n+- Fixes feel when resizing the last column on tables (issue #2862)\n+- Fix ESC in disablewallet mode\n+- Add expert section to wallet tab in optionsdialog\n+- Do proper boost::path conversion (fixes unicode in datadir)\n+- Only override -datadir if different from the default (fixes -datadir in config file)\n+- Show rescan progress at start-up\n+- Show importwallet progress\n+- Get required locks upfront in polling functions (avoids hanging on locks)\n+- Catch Windows shutdown events while client is running\n+- Optionally add third party links to transaction context menu\n+- Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n+- Fix \"Start bitcoin on system login\"\n+\n+Miscellaneous:\n+\n+- Replace non-threadsafe C functions (gmtime, strerror and setlocale)\n+- Add missing cs_main and wallet locks\n+- Avoid exception at startup when system locale not recognized\n+- Changed bitrpc.py's raw_input to getpass for passwords to conceal characters during command line input\n+- devtools: add a script to fetch and postprocess translations\n+\n+Credits\n+--------\n+\n+Thanks to everyone who contributed to this release:\n+\n+- Addy Yeow\n+- Altoidnerd\n+- Andrea D'Amore\n+- Andreas Schildbach\n+- Bardi Harborow\n+- Brandon Dahler\n+- Bryan Bishop\n+- Chris Beams\n+- Christian von Roques\n+- Cory Fields\n+- Cozz Lovan\n+- daniel\n+- Daniel Newton\n+- David A. Harding\n+- ditto-b\n+- duanemoody\n+- Eric S. Bullington\n+- Fabian Raetz\n+- Gavin Andresen\n+- Gregory Maxwell\n+- gubatron\n+- Haakon Nilsen\n+- harry\n+- Hector Jusforgues\n+- Isidoro Ghezzi\n+- Jeff Garzik\n+- Johnathan Corgan\n+- jtimon\n+- Kamil Domanski\n+- langerhans\n+- Luke Dashjr\n+- Manuel Araoz\n+- Mark Friedenbach\n+- Matt Corallo\n+- Matthew Bogosian\n+- Meeh\n+- Michael Ford\n+- Michagogo\n+- Mikael Wikman\n+- Mike Hearn\n+- olalonde\n+- paveljanik\n+- peryaudo\n+- Philip Kaufmann\n+- philsong\n+- Pieter Wuille\n+- R E Broadley\n+- richierichrawr\n+- Rune K. Svendsen\n+- rxl\n+- shshshsh\n+- Simon de la Rouviere\n+- Stuart Cardall\n+- super3\n+- Telepatheic\n+- Thomas Zander\n+- Torstein Huseb\u00f8\n+- Warren Togami\n+- Wladimir J. van der Laan\n+- Yoichi Hirai"
      },
      {
        "sha": "0765a360b29dab1fbfbcf30f4f8ebcf6979f42bd",
        "filename": "doc/release-notes/release-notes-0.9.3.md",
        "status": "added",
        "additions": 101,
        "deletions": 0,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.9.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-notes/release-notes-0.9.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.3.md?ref=02082bb9029feefe1d289efcd2184f7752445e84",
        "patch": "@@ -0,0 +1,101 @@\n+Bitcoin Core version 0.9.3 is now available from:\n+\n+  https://bitcoin.org/bin/0.9.3/\n+\n+This is a new minor version release, bringing only bug fixes and updated\n+translations. Upgrading to this release is recommended.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  https://github.com/bitcoin/bitcoin/issues\n+\n+Upgrading and downgrading\n+==========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+If you are upgrading from version 0.7.2 or earlier, the first time you run\n+0.9.3 your blockchain files will be re-indexed, which will take anywhere from \n+30 minutes to several hours, depending on the speed of your machine.\n+\n+Downgrading warnings\n+--------------------\n+\n+The 'chainstate' for this release is not always compatible with previous\n+releases, so if you run 0.9.x and then decide to switch back to a\n+0.8.x release you might get a blockchain validation error when starting the\n+old release (due to 'pruned outputs' being omitted from the index of\n+unspent transaction outputs).\n+\n+Running the old release with the -reindex option will rebuild the chainstate\n+data structures and correct the problem.\n+\n+Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n+the blockchain for missing spent coins, which will take a long time (tens\n+of minutes on a typical machine).\n+\n+0.9.3 Release notes\n+=======================\n+\n+RPC:\n+- Avoid a segfault on getblock if it can't read a block from disk\n+- Add paranoid return value checks in base58\n+\n+Protocol and network code:\n+- Don't poll showmyip.com, it doesn't exist anymore\n+- Add a way to limit deserialized string lengths and use it\n+- Add a new checkpoint at block 295,000\n+- Increase IsStandard() scriptSig length\n+- Avoid querying DNS seeds, if we have open connections\n+- Remove a useless millisleep in socket handler\n+- Stricter memory limits on CNode\n+- Better orphan transaction handling\n+- Add `-maxorphantx=<n>` and `-maxorphanblocks=<n>` options for control over the maximum orphan transactions and blocks\n+\n+Wallet:\n+- Check redeemScript size does not exceed 520 byte limit\n+- Ignore (and warn about) too-long redeemScripts while loading wallet\n+\n+GUI:\n+- fix 'opens in testnet mode when presented with a BIP-72 link with no fallback'\n+- AvailableCoins: acquire cs_main mutex\n+- Fix unicode character display on MacOSX\n+\n+Miscellaneous:\n+- key.cpp: fail with a friendlier message on missing ssl EC support\n+- Remove bignum dependency for scripts\n+- Upgrade OpenSSL to 1.0.1i (see https://www.openssl.org/news/secadv_20140806.txt - just to be sure, no critical issues for Bitcoin Core)\n+- Upgrade miniupnpc to 1.9.20140701\n+- Fix boost detection in build system on some platforms\n+\n+Credits\n+--------\n+\n+Thanks to everyone who contributed to this release:\n+\n+- Andrew Poelstra\n+- Cory Fields\n+- Gavin Andresen\n+- Jeff Garzik\n+- Johnathan Corgan\n+- Julian Haight\n+- Michael Ford\n+- Pavel Vasin\n+- Peter Todd\n+- phantomcircuit\n+- Pieter Wuille\n+- Rose Toomey\n+- Ruben Dario Ponticelli\n+- shshshsh\n+- Trevin Hofmann\n+- Warren Togami\n+- Wladimir J. van der Laan\n+- Zak Wilcox\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "7699af90bdd87b5dd9cc5311cce60d0a893d21d8",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "560f71fa27c3965c41f7ed4dcb0679c8bf30e288",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 5,
        "deletions": 9,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "9475b1dc721122320955dcf978b3a3949d800a08",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 22,
        "deletions": 38,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "01f7d02a86a2f558e388cdaa5fc25fae04fb0f3f",
        "filename": "doc/travis-ci.txt",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/travis-ci.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/travis-ci.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/travis-ci.txt?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "f1d3a8bc50646bebb7762f51234bdd1501ae83fd",
        "filename": "doc/unit-tests.md",
        "status": "modified",
        "additions": 10,
        "deletions": 27,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/doc/unit-tests.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/doc/unit-tests.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/unit-tests.md?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "c5b26b52e6cdb5891332f7e87addae9306ba7107",
        "filename": "pkg.m4",
        "status": "added",
        "additions": 214,
        "deletions": 0,
        "changes": 214,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/pkg.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/pkg.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/pkg.m4?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "0b5ad2064261d81988dc8313cd291f5bd8d807c7",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "93c25bb9fca29e20e4b3b75718978e303268fac1",
        "filename": "qa/pull-tester/run-bitcoin-cli",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/pull-tester/run-bitcoin-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/pull-tester/run-bitcoin-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-bitcoin-cli?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "42d8ad52e8866ecfa013220d79ba8fc087a1fbf2",
        "filename": "qa/pull-tester/run-bitcoind-for-test.sh.in",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/pull-tester/run-bitcoind-for-test.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/run-bitcoind-for-test.sh.in?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "10f4d33e47cf0a633c34eae270406a67cac7226e",
        "filename": "qa/pull-tester/tests-config.sh.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/pull-tester/tests-config.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/pull-tester/tests-config.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests-config.sh.in?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "cb41d94423e46d410462a6d1edb686a7e62a8e97",
        "filename": "qa/rpc-tests/.gitignore",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/.gitignore?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "3e916a7688d34c01f7a73a00e85f033de1bd4887",
        "filename": "qa/rpc-tests/README.md",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "a112244c744e61cbd3ba7d540f278cdb6ad2d757",
        "filename": "qa/rpc-tests/conflictedbalance.sh",
        "status": "added",
        "additions": 147,
        "deletions": 0,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/conflictedbalance.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/conflictedbalance.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/conflictedbalance.sh?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "1d2c4a996635659f4748faab308df2adb8ec3f37",
        "filename": "qa/rpc-tests/forknotify.py",
        "status": "added",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/forknotify.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/forknotify.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/forknotify.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "500662bf87f1883c7f1417591d0241bcc82ccf64",
        "filename": "qa/rpc-tests/getblocktemplate.py",
        "status": "added",
        "additions": 94,
        "deletions": 0,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/getblocktemplate.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/getblocktemplate.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getblocktemplate.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "dda3450eb64cc455d8899c891ad35279512e0f08",
        "filename": "qa/rpc-tests/getchaintips.py",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/getchaintips.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/getchaintips.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/getchaintips.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "354ee0822ca5c814f02d4450e680632757eac24d",
        "filename": "qa/rpc-tests/keypool.py",
        "status": "added",
        "additions": 132,
        "deletions": 0,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/keypool.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "530b00db8fe6cddf35d133405a96bb7e9759e88a",
        "filename": "qa/rpc-tests/listtransactions.py",
        "status": "added",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/listtransactions.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "b740ee0f98427610285c4f367605aa05ac7c77d8",
        "filename": "qa/rpc-tests/netutil.py",
        "status": "added",
        "additions": 139,
        "deletions": 0,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/netutil.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/netutil.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/netutil.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "0d20b6487c61e7d1bde93acf4a14b7a89083a16d",
        "filename": "qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/.gitignore",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/.gitignore?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/__init__.py",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/__init__.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/__init__.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/__init__.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "bc7d655fdfe97c912d945c5d534948dc6848623c",
        "filename": "qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/authproxy.py",
        "status": "added",
        "additions": 156,
        "deletions": 0,
        "changes": 156,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/authproxy.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/authproxy.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/python-bitcoinrpc/bitcoinrpc/authproxy.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "b5a217bf93e4678075b605ae3ffabd0d6019c15f",
        "filename": "qa/rpc-tests/python-bitcoinrpc/setup.py",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/python-bitcoinrpc/setup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/python-bitcoinrpc/setup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/python-bitcoinrpc/setup.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "9fc661fe80d1a5d9cb3b412076b83cc2b1d6f04d",
        "filename": "qa/rpc-tests/receivedby.py",
        "status": "added",
        "additions": 166,
        "deletions": 0,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/receivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/receivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/receivedby.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "5e476e2505bb33b0e39d841894410a94de3d4670",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "added",
        "additions": 154,
        "deletions": 0,
        "changes": 154,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "2d54cc6ded4233af6ddf89f80d9de9bb24e96a32",
        "filename": "qa/rpc-tests/send.sh",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/send.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/send.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/send.sh?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "57a72dd96b4d24fe98478d7529da2c1d779c34ce",
        "filename": "qa/rpc-tests/smartfees.py",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/smartfees.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/smartfees.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/smartfees.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "9591c024fb3448b630ed9f5c09d27cb096c67a87",
        "filename": "qa/rpc-tests/test_framework.py",
        "status": "added",
        "additions": 139,
        "deletions": 0,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "1296d54d92d7c6f0bd61aabe285aab9b4d43132b",
        "filename": "qa/rpc-tests/txnmall.sh",
        "status": "added",
        "additions": 152,
        "deletions": 0,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/txnmall.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/txnmall.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/txnmall.sh?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "c6d918a81cb06773c2798920c7469a8db10d9116",
        "filename": "qa/rpc-tests/util.py",
        "status": "added",
        "additions": 319,
        "deletions": 0,
        "changes": 319,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.py?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "c2b7004308094ce0362fa61ae8f81250753ce20a",
        "filename": "qa/rpc-tests/util.sh",
        "status": "added",
        "additions": 103,
        "deletions": 0,
        "changes": 103,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/util.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/util.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.sh?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "c9ad0f2a7872c07688405193d2ad883f614c8bbb",
        "filename": "qa/rpc-tests/wallet.sh",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/wallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/wallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.sh?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "4af3d97f351d346f4625868a21776a46fa324273",
        "filename": "qa/rpc-tests/walletbackup.sh",
        "status": "added",
        "additions": 297,
        "deletions": 0,
        "changes": 297,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/walletbackup.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/walletbackup.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/walletbackup.sh?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "4312d84e944623fa54af1e48824c808f51b1b2ae",
        "filename": "qa/rpc-tests/zapwallettxes.sh",
        "status": "added",
        "additions": 165,
        "deletions": 0,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/zapwallettxes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/qa/rpc-tests/zapwallettxes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zapwallettxes.sh?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "ffa89ca6e47b2c4764d17b1fed97742228552552",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 23,
        "deletions": 7,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "55039b1c920d2c73de7384ece75f0a7b3d147676",
        "filename": "share/pixmaps/bitcoin128.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/share/pixmaps/bitcoin128.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/share/pixmaps/bitcoin128.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin128.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "5537479095c62d1fd4ab69ea7cf90b6596dacd39",
        "filename": "share/pixmaps/bitcoin16.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/share/pixmaps/bitcoin16.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/share/pixmaps/bitcoin16.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin16.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "1d42116ef1199d86749d17f1740121a659262f4a",
        "filename": "share/pixmaps/bitcoin256.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/share/pixmaps/bitcoin256.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/share/pixmaps/bitcoin256.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin256.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "367abfcc8e0f48779b51a99d03f3389f216c6c8c",
        "filename": "share/pixmaps/bitcoin32.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/share/pixmaps/bitcoin32.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/share/pixmaps/bitcoin32.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin32.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "08c676ae4afe56ca8baf2a517ef3b598e82a79f3",
        "filename": "share/pixmaps/bitcoin64.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02082bb9029feefe1d289efcd2184f7752445e84/share/pixmaps/bitcoin64.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02082bb9029feefe1d289efcd2184f7752445e84/share/pixmaps/bitcoin64.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin64.png?ref=02082bb9029feefe1d289efcd2184f7752445e84"
      },
      {
        "sha": "6f64c3164b191686c2f3a2fc64c9f5b1e68bbdf3",
        "filename": "share/qt/Info.plist",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f912f2161e1e46461e08968a4160687b3213a63/share/qt/Info.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f912f2161e1e46461e08968a4160687b3213a63/share/qt/Info.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist?ref=7f912f2161e1e46461e08968a4160687b3213a63"
      }
    ]
  },
  {
    "sha": "01c8d2d0e9168dfa1bbbe39701df987a6b45f3d0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMWM4ZDJkMGU5MTY4ZGZhMWJiYmUzOTcwMWRmOTg3YTZiNDVmM2Qw",
    "commit": {
      "author": {
        "name": "Janosch Gr\u00e4f",
        "email": "graef@st.cs.uni-saarland.de",
        "date": "2014-11-20T03:09:32Z"
      },
      "committer": {
        "name": "Janosch Gr\u00e4f",
        "email": "graef@st.cs.uni-saarland.de",
        "date": "2014-11-20T03:09:32Z"
      },
      "message": "forgot to merge something",
      "tree": {
        "sha": "9c26cff8ce3a5c75acc93959e9ccb0b66d77046e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9c26cff8ce3a5c75acc93959e9ccb0b66d77046e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01c8d2d0e9168dfa1bbbe39701df987a6b45f3d0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01c8d2d0e9168dfa1bbbe39701df987a6b45f3d0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/01c8d2d0e9168dfa1bbbe39701df987a6b45f3d0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01c8d2d0e9168dfa1bbbe39701df987a6b45f3d0/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "02082bb9029feefe1d289efcd2184f7752445e84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02082bb9029feefe1d289efcd2184f7752445e84",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02082bb9029feefe1d289efcd2184f7752445e84"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 5,
      "deletions": 55
    },
    "files": [
      {
        "sha": "96ea6af7f6852e8336b9a175f4a30d76f77bc793",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 55,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01c8d2d0e9168dfa1bbbe39701df987a6b45f3d0/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01c8d2d0e9168dfa1bbbe39701df987a6b45f3d0/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=01c8d2d0e9168dfa1bbbe39701df987a6b45f3d0",
        "patch": "@@ -360,71 +360,21 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"  -rpcbind=<addr>        \" + _(\"Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6. This option can be specified multiple times (default: bind to all interfaces)\") + \"\\n\";\n     strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n-<<<<<<< HEAD\n-    strUsage += \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n-    strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\";\n-    if (!fHaveGUI)\n-        strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n-    strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n-    strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n-    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n-    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received (%s in cmd is replaced by message)\") + \"\\n\";\n-    strUsage += \"  -txnotify=<cmd>        \" + _(\"Execute command when a (unconfirmed) transaction is received (%s in cmd is replaced by TxID)\") + \"\\n\";\n-    strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n-    strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n-    strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n-    strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n-    strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n-    strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification is (0-4, default: 3)\") + \"\\n\";\n-    strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n-    strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \"\\n\";\n-    strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \"\\n\";\n-    strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n-\n-    strUsage += \"\\n\"; _(\"Block creation options:\") + \"\\n\";\n-    strUsage += \"  -blockminsize=<n>      \"   + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n-    strUsage += \"  -blockmaxsize=<n>      \"   + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n-    strUsage += \"  -blockprioritysize=<n> \"   + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n-\n-    strUsage += \"\\n\"; _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n-||||||| merged common ancestors\n-    strUsage += \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n-    strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\";\n-    if (!fHaveGUI)\n-        strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n-    strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n-    strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n-    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n-    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received (%s in cmd is replaced by message)\") + \"\\n\";\n-    strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n-    strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n-    strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n-    strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n-    strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n-    strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification is (0-4, default: 3)\") + \"\\n\";\n-    strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n-    strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \"\\n\";\n-    strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \"\\n\";\n-    strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n-\n-    strUsage += \"\\n\"; _(\"Block creation options:\") + \"\\n\";\n-    strUsage += \"  -blockminsize=<n>      \"   + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n-    strUsage += \"  -blockmaxsize=<n>      \"   + _(\"Set maximum block size in bytes (default: 250000)\") + \"\\n\";\n-    strUsage += \"  -blockprioritysize=<n> \"   + _(\"Set maximum size of high-priority/low-fee transactions in bytes (default: 27000)\") + \"\\n\";\n-\n-    strUsage += \"\\n\"; _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n-=======\n     strUsage += \"  -rpcport=<port>        \" + strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), 8332, 18332) + \"\\n\";\n     strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\") + \"\\n\";\n     strUsage += \"  -rpcthreads=<n>        \" + strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), 4) + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n->>>>>>> upstream/master\n     strUsage += \"  -rpcssl                                  \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcsslcertificatechainfile=<file.cert>  \" + strprintf(_(\"Server certificate file (default: %s)\"), \"server.cert\") + \"\\n\";\n     strUsage += \"  -rpcsslprivatekeyfile=<file.pem>         \" + strprintf(_(\"Server private key (default: %s)\"), \"server.pem\") + \"\\n\";\n     strUsage += \"  -rpcsslciphers=<ciphers>                 \" + strprintf(_(\"Acceptable ciphers (default: %s)\"), \"TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH\") + \"\\n\";\n \n+    strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n+    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n+    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received (%s in cmd is replaced by message)\") + \"\\n\";\n+    strUsage += \"  -txnotify=<cmd>        \" + _(\"Execute command when a (unconfirmed) transaction is received (%s in cmd is replaced by TxID)\") + \"\\n\";\n+\n     return strUsage;\n }\n "
      }
    ]
  },
  {
    "sha": "7b593cd4f61fc5b6262f397ef13840601b738487",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YjU5M2NkNGY2MWZjNWI2MjYyZjM5N2VmMTM4NDA2MDFiNzM4NDg3",
    "commit": {
      "author": {
        "name": "Janosch Gr\u00e4f",
        "email": "graef@st.cs.uni-saarland.de",
        "date": "2014-11-20T03:16:07Z"
      },
      "committer": {
        "name": "Janosch Gr\u00e4f",
        "email": "graef@st.cs.uni-saarland.de",
        "date": "2014-11-20T03:16:07Z"
      },
      "message": "fixed usage",
      "tree": {
        "sha": "0556464840c201a000f977b521f6e16c3130e2a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0556464840c201a000f977b521f6e16c3130e2a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b593cd4f61fc5b6262f397ef13840601b738487",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b593cd4f61fc5b6262f397ef13840601b738487",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7b593cd4f61fc5b6262f397ef13840601b738487",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b593cd4f61fc5b6262f397ef13840601b738487/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "01c8d2d0e9168dfa1bbbe39701df987a6b45f3d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01c8d2d0e9168dfa1bbbe39701df987a6b45f3d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/01c8d2d0e9168dfa1bbbe39701df987a6b45f3d0"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 1,
      "deletions": 6
    },
    "files": [
      {
        "sha": "fd998018c9011263ee1386cdb63fcfb7691a3564",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b593cd4f61fc5b6262f397ef13840601b738487/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b593cd4f61fc5b6262f397ef13840601b738487/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7b593cd4f61fc5b6262f397ef13840601b738487",
        "patch": "@@ -247,6 +247,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"  -sysperms              \" + _(\"Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)\") + \"\\n\";\n #endif\n     strUsage += \"  -txindex               \" + strprintf(_(\"Maintain a full transaction index, used by the getrawtransaction rpc call (default: %u)\"), 0) + \"\\n\";\n+    strUsage += \"  -txnotify=<cmd>        \" + _(\"Execute command when a (unconfirmed) transaction is received (%s in cmd is replaced by TxID)\") + \"\\n\";\n \n     strUsage += \"\\n\" + _(\"Connection options:\") + \"\\n\";\n     strUsage += \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\";\n@@ -369,12 +370,6 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += \"  -rpcsslcertificatechainfile=<file.cert>  \" + strprintf(_(\"Server certificate file (default: %s)\"), \"server.cert\") + \"\\n\";\n     strUsage += \"  -rpcsslprivatekeyfile=<file.pem>         \" + strprintf(_(\"Server private key (default: %s)\"), \"server.pem\") + \"\\n\";\n     strUsage += \"  -rpcsslciphers=<ciphers>                 \" + strprintf(_(\"Acceptable ciphers (default: %s)\"), \"TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH\") + \"\\n\";\n-\n-    strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n-    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n-    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received (%s in cmd is replaced by message)\") + \"\\n\";\n-    strUsage += \"  -txnotify=<cmd>        \" + _(\"Execute command when a (unconfirmed) transaction is received (%s in cmd is replaced by TxID)\") + \"\\n\";\n-\n     return strUsage;\n }\n "
      }
    ]
  }
]