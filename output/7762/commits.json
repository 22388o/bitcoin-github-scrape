[
  {
    "sha": "de821d56e1f458fbe580520c77ac066107f4d77c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTgyMWQ1NmUxZjQ1OGZiZTU4MDUyMGM3N2FjMDY2MTA3ZjRkNzdj",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-03-29T09:34:25Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-15T11:23:16Z"
      },
      "message": "[ZMQ] refactor message string",
      "tree": {
        "sha": "d453258e315978f45f439dd9f82241a2a2e71788",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d453258e315978f45f439dd9f82241a2a2e71788"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de821d56e1f458fbe580520c77ac066107f4d77c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXEM8kAAoJECnUvLZBb1PsHsgP/204fFIUB72VZYvDqFLSBuJI\nfuY2cwl3Ze4q++pSxRvX+sMn9gT2fhjWCe1Jy5FUafzMaeN+jhRZzmFeqc5W5RzC\n8cMmdDnOJCLsIRwRr5KXMiZSVf5eZPpnR3W0hlifPmVz0vHjD98xcnZA+J1IJwM8\nI37bGUIcROC7ox8mTaAfiNKFBdByV7wVCwL8+GHgDeoM8WQwy+gz1ruLiCXjw6/Y\nYElxGxqLGLHNo3H8eWJ3lXCbdyZReQdUlIDzSZPhFxgBuVuDNpkt1Xv+40Yn6QOs\neVrXUGHrThGLVfV52oyfibwJChYtYRvGVGfbHtTT6e0/2lD5B1E58WnN/elOSEdY\nYSaLRNLdCuAFM6tks++GpEA+eeGCzbEW1sywq3i/aIsU1x9cZgC0fmQfV5l1pUsI\nmrRzttPA8f625rIXff2qr3Bukp0loSNFQ4TPJMCxSsfxn3Af8n1nTqhVv0lRIZkE\nLkCaXciw5hoH/mDl/sxqNyiH6TakrQG85uQe/GypIYXZ7wfcDsuz1q8dakA3O1Ne\ngYLRsWBStn+48U1/m0vKP1z7ZJQHk8yJQ8nIQ0UDfvKiqoHJglGXKE0i1C/kgwzc\nt8Gw+LETP8gPBz/PB/v9Bl+q/XZs/4ybT5+E4RU6ytMuABcqrWA4Am9si6Nvnqpj\n5A00SDR5N9QNjv9t1knu\n=un8l\n-----END PGP SIGNATURE-----",
        "payload": "tree d453258e315978f45f439dd9f82241a2a2e71788\nparent 64e71b37210a1131de98efbbcbf2392f3e3696ac\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1459244065 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1460719396 +0200\n\n[ZMQ] refactor message string\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de821d56e1f458fbe580520c77ac066107f4d77c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de821d56e1f458fbe580520c77ac066107f4d77c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de821d56e1f458fbe580520c77ac066107f4d77c/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64e71b37210a1131de98efbbcbf2392f3e3696ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64e71b37210a1131de98efbbcbf2392f3e3696ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64e71b37210a1131de98efbbcbf2392f3e3696ac"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 9,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a9ce9c48c4b555cad51fe39da8e70cde957c3b9a",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de821d56e1f458fbe580520c77ac066107f4d77c/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de821d56e1f458fbe580520c77ac066107f4d77c/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=de821d56e1f458fbe580520c77ac066107f4d77c",
        "patch": "@@ -9,6 +9,11 @@\n \n static std::multimap<std::string, CZMQAbstractPublishNotifier*> mapPublishNotifiers;\n \n+static const char *MSG_HASHBLOCK = \"hashblock\";\n+static const char *MSG_HASHTX    = \"hashtx\";\n+static const char *MSG_RAWBLOCK  = \"rawblock\";\n+static const char *MSG_RAWTX     = \"rawtx\";\n+\n // Internal function to send multipart message\n static int zmq_send_multipart(void *sock, const void* data, size_t size, ...)\n {\n@@ -125,7 +130,7 @@ bool CZMQPublishHashBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n     char data[32];\n     for (unsigned int i = 0; i < 32; i++)\n         data[31 - i] = hash.begin()[i];\n-    int rc = zmq_send_multipart(psocket, \"hashblock\", 9, data, 32, 0);\n+    int rc = zmq_send_multipart(psocket, MSG_HASHBLOCK, 9, data, 32, 0);\n     return rc == 0;\n }\n \n@@ -136,7 +141,7 @@ bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &t\n     char data[32];\n     for (unsigned int i = 0; i < 32; i++)\n         data[31 - i] = hash.begin()[i];\n-    int rc = zmq_send_multipart(psocket, \"hashtx\", 6, data, 32, 0);\n+    int rc = zmq_send_multipart(psocket, MSG_HASHTX, 6, data, 32, 0);\n     return rc == 0;\n }\n \n@@ -158,7 +163,7 @@ bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n         ss << block;\n     }\n \n-    int rc = zmq_send_multipart(psocket, \"rawblock\", 8, &(*ss.begin()), ss.size(), 0);\n+    int rc = zmq_send_multipart(psocket, MSG_RAWBLOCK, 8, &(*ss.begin()), ss.size(), 0);\n     return rc == 0;\n }\n \n@@ -168,6 +173,6 @@ bool CZMQPublishRawTransactionNotifier::NotifyTransaction(const CTransaction &tr\n     LogPrint(\"zmq\", \"zmq: Publish rawtx %s\\n\", hash.GetHex());\n     CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n     ss << transaction;\n-    int rc = zmq_send_multipart(psocket, \"rawtx\", 5, &(*ss.begin()), ss.size(), 0);\n+    int rc = zmq_send_multipart(psocket, MSG_RAWTX, 5, &(*ss.begin()), ss.size(), 0);\n     return rc == 0;\n }"
      }
    ]
  },
  {
    "sha": "0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjI1YTlmYjQyZDVkZjU0ZWEzNWRkYjJiYjQ4MzdlMWUyOTM1NWZk",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-03-29T12:30:02Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-04-19T13:32:11Z"
      },
      "message": "[ZMQ] append a message sequence number to every ZMQ notification",
      "tree": {
        "sha": "429fe7843fbb85f3d46653381d0f82a39a4be595",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/429fe7843fbb85f3d46653381d0f82a39a4be595"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXFjNfAAoJECnUvLZBb1PseUYQAID4Phr3AHr/op9Np1eHgZPN\npAnp4nh45GyLRaqO/JwGy2D3f4OYb3puAz3lOwp6Qd0pKWW7yrbVgTRG2QFshu1Y\nEJ8v+cS9QbzECoGlzdkeaIKVTsJYWjWBUaaJmL49jiEXDau4YzGsOEvUWA9tOus2\nfeY4d6gF5ZSFB9NE/jZKm7oNIRnQ9+Q3TSekkSaVOmEGHIwqRMHWXqoAuEtRwAhu\nsFBQbgHKjpy+UMFBGPl4+aYJ3RbB7VMmU4kXv3D20swPWFIJW0aPN7dvbPhz4wIl\nMXzTFxU8non1908gnuu8G+nrFFRJ0lLiRpckMBw22Si9sLYtyXvY7tWpwROhIjur\nbKFUHBZEspbHu223pnhXTDNuWw+G0Y6p8JZ854w/VHxxMXOV6WUEQl7M1S1dz7+m\ndoQyO+wZoRuyaEWB3NtriWxFmX+Zu11Tk94PLaj8pHjat236D4UEwOWOrq7mmDDq\nHcSN/i5pFxexLaAHnwd1U0Yh3iqGby++EXTbhVfO5uFBuJ4KHVf0irhVgmx2yXjm\nuXamvvOvEhj7hIIkC9qJS2Xr2T4an8Erajz1XjQ9dgIuUW9mIoOagN321svtEpST\nB/vAlZJeEXFfZ1BFBXsl06qPIFYwcPe8hgLIS1q+La4X47x7ptYuVWSSU5OG9tam\no15r7raeyZmyiQ+/sZmS\n=V/TZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 429fe7843fbb85f3d46653381d0f82a39a4be595\nparent de821d56e1f458fbe580520c77ac066107f4d77c\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1459254602 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1461072731 +0200\n\n[ZMQ] append a message sequence number to every ZMQ notification\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de821d56e1f458fbe580520c77ac066107f4d77c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de821d56e1f458fbe580520c77ac066107f4d77c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de821d56e1f458fbe580520c77ac066107f4d77c"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 69,
      "deletions": 13
    },
    "files": [
      {
        "sha": "6268123dd8e5302917ce1d7e2bc7de8efd2c9b5d",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd",
        "patch": "@@ -3,6 +3,7 @@\n import array\n import binascii\n import zmq\n+import struct\n \n port = 28332\n \n@@ -19,18 +20,21 @@\n         msg = zmqSubSocket.recv_multipart()\n         topic = str(msg[0])\n         body = msg[1]\n-\n+        sequence = \"Unknown\";\n+        if len(msg[-1]) == 4:\n+          msgSequence = struct.unpack('<I', msg[-1])[-1]\n+          sequence = str(msgSequence)\n         if topic == \"hashblock\":\n-            print \"- HASH BLOCK -\"\n+            print '- HASH BLOCK ('+sequence+') -'\n             print binascii.hexlify(body)\n         elif topic == \"hashtx\":\n-            print '- HASH TX -'\n+            print '- HASH TX  ('+sequence+') -'\n             print binascii.hexlify(body)\n         elif topic == \"rawblock\":\n-            print \"- RAW BLOCK HEADER -\"\n+            print '- RAW BLOCK HEADER ('+sequence+') -'\n             print binascii.hexlify(body[:80])\n         elif topic == \"rawtx\":\n-            print '- RAW TX -'\n+            print '- RAW TX ('+sequence+') -'\n             print binascii.hexlify(body)\n \n except KeyboardInterrupt:"
      },
      {
        "sha": "9fb1a1307228d9ff2c5312493b0388b0d7f63cee",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd",
        "patch": "@@ -45,6 +45,15 @@ The following outputs are affected by this change:\n - REST `/rest/block/` (JSON format when including extended tx details)\n - `bitcoin-tx -json`\n \n+### ZMQ\n+\n+Each ZMQ notification now contains an up-counting sequence number that allows\n+listeners to detect lost notifications.\n+The sequence number is always the last element in a multi-part ZMQ notification and\n+therefore backward compatible.\n+Each message type has its own counter.\n+(https://github.com/bitcoin/bitcoin/pull/7762)\n+\n ### Configuration and command-line options\n \n ### Block and transaction handling"
      },
      {
        "sha": "8d795a388a9b4dc127678103e99b6a484ca625a7",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd",
        "patch": "@@ -99,3 +99,8 @@ using other means such as firewalling.\n Note that when the block chain tip changes, a reorganisation may occur\n and just the tip will be notified. It is up to the subscriber to\n retrieve the chain from the last known block to the new tip.\n+\n+There are several possibilities that ZMQ notification can get lost\n+during transmission depending on the communication type your are\n+using. Bitcoind appends an up-counting sequence number to each\n+notification which allows listeners to detect lost notifications."
      },
      {
        "sha": "97850bea3c0220a690831f11cd747628463de7d6",
        "filename": "qa/rpc-tests/zmq_test.py",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/qa/rpc-tests/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/qa/rpc-tests/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/zmq_test.py?ref=0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd",
        "patch": "@@ -11,6 +11,7 @@\n from test_framework.util import *\n import zmq\n import binascii\n+import struct\n \n try:\n     import http.client as httplib\n@@ -47,11 +48,17 @@ def run_test(self):\n         print \"listen...\"\n         msg = self.zmqSubSocket.recv_multipart()\n         topic = msg[0]\n+        assert_equal(topic, b\"hashtx\")\n         body = msg[1]\n+        nseq = msg[2]\n+        msgSequence = struct.unpack('<I', msg[-1])[-1]\n+        assert_equal(msgSequence, 0) #must be sequence 0 on hashtx\n \n         msg = self.zmqSubSocket.recv_multipart()\n         topic = msg[0]\n         body = msg[1]\n+        msgSequence = struct.unpack('<I', msg[-1])[-1]\n+        assert_equal(msgSequence, 0) #must be sequence 0 on hashblock\n         blkhash = bytes_to_hex_str(body)\n \n         assert_equal(genhashes[0], blkhash) #blockhash from generate must be equal to the hash received over zmq\n@@ -61,12 +68,16 @@ def run_test(self):\n         self.sync_all()\n \n         zmqHashes = []\n+        blockcount = 0\n         for x in range(0,n*2):\n             msg = self.zmqSubSocket.recv_multipart()\n             topic = msg[0]\n             body = msg[1]\n             if topic == b\"hashblock\":\n                 zmqHashes.append(bytes_to_hex_str(body))\n+                msgSequence = struct.unpack('<I', msg[-1])[-1]\n+                assert_equal(msgSequence, blockcount+1)\n+                blockcount += 1\n \n         for x in range(0,n):\n             assert_equal(genhashes[x], zmqHashes[x]) #blockhash from generate must be equal to the hash received over zmq\n@@ -82,6 +93,8 @@ def run_test(self):\n         hashZMQ = \"\"\n         if topic == b\"hashtx\":\n             hashZMQ = bytes_to_hex_str(body)\n+            msgSequence = struct.unpack('<I', msg[-1])[-1]\n+            assert_equal(msgSequence, blockcount+1)\n \n         assert_equal(hashRPC, hashZMQ) #blockhash from generate must be equal to the hash received over zmq\n "
      },
      {
        "sha": "b6c907980f0c30ed12849a7c8f7f4ab5c3e05b31",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 8,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd",
        "patch": "@@ -123,15 +123,31 @@ void CZMQAbstractPublishNotifier::Shutdown()\n     psocket = 0;\n }\n \n+bool CZMQAbstractPublishNotifier::SendMessage(const char *command, const void* data, size_t size)\n+{\n+    assert(psocket);\n+\n+    /* send three parts, command & data & a LE 4byte sequence number */\n+    unsigned char msgseq[sizeof(uint32_t)];\n+    WriteLE32(&msgseq[0], nSequence);\n+    int rc = zmq_send_multipart(psocket, command, strlen(command), data, size, msgseq, (size_t)sizeof(uint32_t), (void*)0);\n+    if (rc == -1)\n+        return false;\n+\n+    /* increment memory only sequence number after sending */\n+    nSequence++;\n+\n+    return true;\n+}\n+\n bool CZMQPublishHashBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n {\n     uint256 hash = pindex->GetBlockHash();\n     LogPrint(\"zmq\", \"zmq: Publish hashblock %s\\n\", hash.GetHex());\n     char data[32];\n     for (unsigned int i = 0; i < 32; i++)\n         data[31 - i] = hash.begin()[i];\n-    int rc = zmq_send_multipart(psocket, MSG_HASHBLOCK, 9, data, 32, 0);\n-    return rc == 0;\n+    return SendMessage(MSG_HASHBLOCK, data, 32);\n }\n \n bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &transaction)\n@@ -141,8 +157,7 @@ bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &t\n     char data[32];\n     for (unsigned int i = 0; i < 32; i++)\n         data[31 - i] = hash.begin()[i];\n-    int rc = zmq_send_multipart(psocket, MSG_HASHTX, 6, data, 32, 0);\n-    return rc == 0;\n+    return SendMessage(MSG_HASHTX, data, 32);\n }\n \n bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n@@ -163,8 +178,7 @@ bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n         ss << block;\n     }\n \n-    int rc = zmq_send_multipart(psocket, MSG_RAWBLOCK, 8, &(*ss.begin()), ss.size(), 0);\n-    return rc == 0;\n+    return SendMessage(MSG_RAWBLOCK, &(*ss.begin()), ss.size());\n }\n \n bool CZMQPublishRawTransactionNotifier::NotifyTransaction(const CTransaction &transaction)\n@@ -173,6 +187,5 @@ bool CZMQPublishRawTransactionNotifier::NotifyTransaction(const CTransaction &tr\n     LogPrint(\"zmq\", \"zmq: Publish rawtx %s\\n\", hash.GetHex());\n     CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n     ss << transaction;\n-    int rc = zmq_send_multipart(psocket, MSG_RAWTX, 5, &(*ss.begin()), ss.size(), 0);\n-    return rc == 0;\n+    return SendMessage(MSG_RAWTX, &(*ss.begin()), ss.size());\n }"
      },
      {
        "sha": "22f02a3d0dbb8bf53e09814008a886e842dd802e",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=0b25a9fb42d5df54ea35ddb2bb4837e1e29355fd",
        "patch": "@@ -11,7 +11,19 @@ class CBlockIndex;\n \n class CZMQAbstractPublishNotifier : public CZMQAbstractNotifier\n {\n+private:\n+    uint32_t nSequence; //! upcounting per message sequence number\n+\n public:\n+\n+    /* send zmq multipart message\n+       parts:\n+          * command\n+          * data\n+          * message sequence number\n+    */\n+    bool SendMessage(const char *command, const void* data, size_t size);\n+\n     bool Initialize(void *pcontext);\n     void Shutdown();\n };"
      }
    ]
  }
]