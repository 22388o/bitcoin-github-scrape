[
  {
    "sha": "e0d459264fa9330eea99d33208fbddb8c8362be4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMGQ0NTkyNjRmYTkzMzBlZWE5OWQzMzIwOGZiZGRiOGM4MzYyYmU0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-18T13:11:18Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-18T13:54:38Z"
      },
      "message": "Avoid redundant redeclaration of GetWarnings(const string&)\n\nstd::string GetWarnings(const std::string& strFor) is declared in\nwarnings.h and defined in warnings.cpp.",
      "tree": {
        "sha": "5a8bc23b4ef11691f0421485466d670650bbeb8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a8bc23b4ef11691f0421485466d670650bbeb8b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0d459264fa9330eea99d33208fbddb8c8362be4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0d459264fa9330eea99d33208fbddb8c8362be4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e0d459264fa9330eea99d33208fbddb8c8362be4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0d459264fa9330eea99d33208fbddb8c8362be4/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7b6e8bc4424006119dc537699c8b3b3121e0b3c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b6e8bc4424006119dc537699c8b3b3121e0b3c3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7b6e8bc4424006119dc537699c8b3b3121e0b3c3"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 11,
      "deletions": 9
    },
    "files": [
      {
        "sha": "52ce11cefd277df49601a617da143b108512d3a4",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0d459264fa9330eea99d33208fbddb8c8362be4/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0d459264fa9330eea99d33208fbddb8c8362be4/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=e0d459264fa9330eea99d33208fbddb8c8362be4",
        "patch": "@@ -18,6 +18,7 @@\n #include \"txmempool.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#include \"warnings.h\"\n \n #include <stdint.h>\n "
      },
      {
        "sha": "daca32d25115390ae11e7f58fb452907811803d3",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0d459264fa9330eea99d33208fbddb8c8362be4/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0d459264fa9330eea99d33208fbddb8c8362be4/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=e0d459264fa9330eea99d33208fbddb8c8362be4",
        "patch": "@@ -24,6 +24,7 @@\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n #include \"validationinterface.h\"\n+#include \"warnings.h\"\n \n #include <memory>\n #include <stdint.h>"
      },
      {
        "sha": "3c4f071fcf04b11fac95bef72bee4e47bc29ac6b",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0d459264fa9330eea99d33208fbddb8c8362be4/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0d459264fa9330eea99d33208fbddb8c8362be4/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=e0d459264fa9330eea99d33208fbddb8c8362be4",
        "patch": "@@ -21,6 +21,7 @@\n #include \"wallet/wallet.h\"\n #include \"wallet/walletdb.h\"\n #endif\n+#include \"warnings.h\"\n \n #include <stdint.h>\n #ifdef HAVE_MALLOC_INFO"
      },
      {
        "sha": "090d9e448e86e837adcfbb4993ac8a5f40660873",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0d459264fa9330eea99d33208fbddb8c8362be4/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0d459264fa9330eea99d33208fbddb8c8362be4/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=e0d459264fa9330eea99d33208fbddb8c8362be4",
        "patch": "@@ -18,7 +18,7 @@\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n #include \"version.h\"\n-\n+#include \"warnings.h\"\n \n #include <univalue.h>\n "
      },
      {
        "sha": "95c8e5b93e36bad8cf0f4b9cc22b479b6ded1b92",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0d459264fa9330eea99d33208fbddb8c8362be4/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0d459264fa9330eea99d33208fbddb8c8362be4/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=e0d459264fa9330eea99d33208fbddb8c8362be4",
        "patch": "@@ -268,14 +268,6 @@ void UnloadBlockIndex();\n void ThreadScriptCheck();\n /** Check whether we are doing an initial block download (synchronizing from disk or network) */\n bool IsInitialBlockDownload();\n-/** Format a string that describes several potential problems detected by the core.\n- * strFor can have three values:\n- * - \"rpc\": get critical warnings, which should put the client in safe mode if non-empty\n- * - \"statusbar\": get all warnings\n- * - \"gui\": get all warnings, translated (where possible) for GUI\n- * This function only returns the highest priority warning of the set selected by strFor.\n- */\n-std::string GetWarnings(const std::string& strFor);\n /** Retrieve a transaction (from memory pool, or from disk, if possible) */\n bool GetTransaction(const uint256 &hash, CTransactionRef &tx, const Consensus::Params& params, uint256 &hashBlock, bool fAllowSlow = false);\n /** Find the best known block, and make it the tip of the block chain */"
      },
      {
        "sha": "fd0ca5394233c92fbaeab10a5f80a75edf63a835",
        "filename": "src/warnings.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0d459264fa9330eea99d33208fbddb8c8362be4/src/warnings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0d459264fa9330eea99d33208fbddb8c8362be4/src/warnings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.h?ref=e0d459264fa9330eea99d33208fbddb8c8362be4",
        "patch": "@@ -14,6 +14,13 @@ void SetfLargeWorkForkFound(bool flag);\n bool GetfLargeWorkForkFound();\n void SetfLargeWorkInvalidChainFound(bool flag);\n bool GetfLargeWorkInvalidChainFound();\n+/** Format a string that describes several potential problems detected by the core.\n+ * strFor can have three values:\n+ * - \"rpc\": get critical warnings, which should put the client in safe mode if non-empty\n+ * - \"statusbar\": get all warnings\n+ * - \"gui\": get all warnings, translated (where possible) for GUI\n+ * This function only returns the highest priority warning of the set selected by strFor.\n+ */\n std::string GetWarnings(const std::string& strFor);\n \n static const bool DEFAULT_TESTSAFEMODE = false;"
      }
    ]
  }
]