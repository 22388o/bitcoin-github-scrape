[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/299994877",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-299994877",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 299994877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk5NDg3Nw==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T21:22:45Z",
    "updated_at": "2017-05-08T21:22:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yea, sure, conceptack as a hidden setting.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/299994877/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300141728",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-300141728",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 300141728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDE0MTcyOA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-09T11:59:10Z",
    "updated_at": "2017-05-09T11:59:10Z",
    "author_association": "MEMBER",
    "body": "I just realized this doesn't quite work cleanly with #10345; closing for now.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/300141728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308257212",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-308257212",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 308257212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODI1NzIxMg==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-13T21:42:04Z",
    "updated_at": "2017-06-13T21:42:04Z",
    "author_association": "MEMBER",
    "body": "This needed a rebase.\r\n\r\n@jnewbery Thanks for the review.  I addressed or responded to most of your comments.  I think the only thing I didn't do was require that the `-minimumchainwork` command line value start with \"0x\", mostly because I struggled to (a) figure out how to concisely explain that to the user in the help message, and (b) I noticed that GetHex() already doesn't print a \"0x\", so it would be extra confusing that the defaults don't match the specification if we required \"0x.\" ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308257212/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308513984",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-308513984",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 308513984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODUxMzk4NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-14T18:11:15Z",
    "updated_at": "2017-06-14T18:11:15Z",
    "author_association": "MEMBER",
    "body": "tested ACK https://github.com/bitcoin/bitcoin/pull/10357/commits/f1041efca442dd0b56dbfdd99dedcef333a90e75. Very nice work with the test coverage for the new `IsHexNumber()` util function.\r\n\r\nAs for not requiring a leading `0x`, I think that's fine. The only minor problem I could see is someone entering a decimal number and the parser interpreting it as hex. That's now mitigated by:\r\n- the help text saying the number should be hex\r\n- the log message always printing out the minimum chain work in hex",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308513984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311047480",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-311047480",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 311047480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTA0NzQ4MA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T12:40:22Z",
    "updated_at": "2017-06-26T12:40:22Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.\r\nMy only remark on this is that it's unfortunate that after all the work we did to move things into a consensus parameters structure and pass it around, this moves `nMinimumChainWork` back to a global :(\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/311047480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312041113",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-312041113",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 312041113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjA0MTExMw==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-29T17:42:50Z",
    "updated_at": "2017-06-29T17:42:50Z",
    "author_association": "MEMBER",
    "body": "> My only remark on this is that it's unfortunate that after all the work we did to move things into a consensus parameters structure and pass it around, this moves nMinimumChainWork back to a global :(\r\n\r\nI agree -- any suggestions for a better paradigm for user-configurable, chain-specific parameters?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312041113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/320053988",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-320053988",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 320053988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDA1Mzk4OA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-03T18:35:25Z",
    "updated_at": "2017-08-03T18:35:25Z",
    "author_association": "MEMBER",
    "body": "Perhaps this is too late for 0.15, but just wanted to mention that 0.15 will include another usage of nMinimumChainWork (#10345) that advanced users may sometimes want to work around.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/320053988/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323929689",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-323929689",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 323929689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzkyOTY4OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-22T06:16:00Z",
    "updated_at": "2017-08-22T06:16:34Z",
    "author_association": "MEMBER",
    "body": "> I agree -- any suggestions for a better paradigm for user-configurable, chain-specific parameters?\r\n\r\nI wish we'd left some of the chain parameters mutable, at least during the init process, so they don't have to migrate back to globals to override their value.\r\n\r\n> Perhaps this is too late for 0.15\r\n\r\nYes, needs rebase though.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/323929689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326362670",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-326362670",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 326362670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjM2MjY3MA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-31T17:14:17Z",
    "updated_at": "2017-08-31T17:14:17Z",
    "author_association": "MEMBER",
    "body": "Rebased.  \r\n\r\n@laanwj I'd prefer to not refactor the chain parameters here, and leave that work for a future PR -- it seems that there are other PRs in progress (eg #8994) separately addressing how that code is organized; let me know if you disagree.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326362670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326401803",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-326401803",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 326401803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjQwMTgwMw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-31T19:47:33Z",
    "updated_at": "2017-08-31T19:47:33Z",
    "author_association": "MEMBER",
    "body": "@sdaftuar Sure, I was just expressing my sadness there that the idea of\nwell-encapsulated chain parameters didn't work out. I certainly did not\nmean it as a blocker.\n\nOn Aug 31, 2017 10:14 AM, \"Suhas Daftuar\" <notifications@github.com> wrote:\n\n> Rebased.\n>\n> @laanwj <https://github.com/laanwj> I'd prefer to not refactor the chain\n> parameters here, and leave that work for a future PR -- it seems that there\n> are other PRs in progress (eg #8994\n> <https://github.com/bitcoin/bitcoin/pull/8994>) separately addressing how\n> that code is organized; let me know if you disagree.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-326362670>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAHutm05tOxNXegFru5ddPKZWIiV3T90ks5sdunugaJpZM4NT_9J>\n> .\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326401803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326860269",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-326860269",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 326860269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjg2MDI2OQ==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-04T03:50:28Z",
    "updated_at": "2017-09-04T03:50:28Z",
    "author_association": "MEMBER",
    "body": "utACK https://github.com/bitcoin/bitcoin/commit/317cc116a7c64e66525936927baba1bfdb4bfaf7",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326860269/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327238023",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-327238023",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 327238023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzIzODAyMw==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T16:55:12Z",
    "updated_at": "2017-09-05T16:55:12Z",
    "author_association": "MEMBER",
    "body": "@jnewbery Mostly addressed your nits I think (just renamed the confusing `it` variable to `c`, and added a comment).  Previous version is here for comparison: https://github.com/sdaftuar/bitcoin/commit/317cc116a7c64e66525936927baba1bfdb4bfaf7\r\n\r\nI think you're totally right that we could simplify this (and possibly other) tests by just adding a way to know if a node is in IBD.  I'd like to do that, but I'm not sure it makes sense to complicate this PR with discussion over how that information should be made available.  Eg it's not clear to me that the notion of being in IBD is worth exposing to the casual user, versus a hidden rpc call or something, since the definition has changed over time, and may continue to change in the future.  But I still do agree that at least for testing purposes it would be far simpler to expose the field somehow...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327238023/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327273715",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-327273715",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 327273715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzI3MzcxNQ==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T19:10:03Z",
    "updated_at": "2017-09-05T19:10:03Z",
    "author_association": "MEMBER",
    "body": "Actually this needed a rebase due to the test framework changes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327273715/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327541365",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-327541365",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 327541365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzU0MTM2NQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T16:35:32Z",
    "updated_at": "2017-09-06T16:35:32Z",
    "author_association": "MEMBER",
    "body": "> I think you're totally right that we could simplify this (and possibly other) tests by just adding a way to know if a node is in IBD. I'd like to do that, but I'm not sure it makes sense to complicate this PR with discussion over how that information should be made available.\r\n\r\nYes, I think it makes sense to discuss (there's arguments for and against it re: proper testing), but let's not extend the scope of this PR with it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327541365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327547597",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-327547597",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 327547597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzU0NzU5Nw==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T16:57:06Z",
    "updated_at": "2017-09-06T16:57:06Z",
    "author_association": "MEMBER",
    "body": "utACK eac64bb",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327547597/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327607353",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-327607353",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 327607353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzYwNzM1Mw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T20:43:55Z",
    "updated_at": "2017-09-06T20:43:55Z",
    "author_association": "MEMBER",
    "body": "post merge utACK eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/327607353/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341488415",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#issuecomment-341488415",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10357",
    "id": 341488415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTQ4ODQxNQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T16:57:59Z",
    "updated_at": "2017-11-02T16:57:59Z",
    "author_association": "MEMBER",
    "body": "Tagging for backport, as the 0.15.0.2 tests rely on this.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/341488415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120998668",
    "pull_request_review_id": 43013428,
    "id": 120998668,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDk5ODY2OA==",
    "diff_hunk": "@@ -973,6 +976,11 @@ bool AppInitParameterInteraction()\n     else\n         LogPrintf(\"Validating signatures for all blocks.\\n\");\n \n+    nMinimumChainWork = UintToArith256(uint256S(GetArg(\"-minimumchainwork\", chainparams.GetConsensus().nMinimumChainWork.GetHex())));\n+    if (nMinimumChainWork != UintToArith256(chainparams.GetConsensus().nMinimumChainWork)) {\n+        LogPrintf(\"Setting nMinimumChainWork=%s (%s default value)\\n\", nMinimumChainWork.GetHex(), (nMinimumChainWork < UintToArith256(chainparams.GetConsensus().nMinimumChainWork)) ? \"below\" : \"above\");",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "original_commit_id": "87fb774569a61d3a9c5b774f438d4f342bc7554e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I suggest:\r\n- always log the nMinimumChainWork and default value (even if it hasn't been overwritten in config) \r\n- issue a stronger warning in the log if `-minimumchainwork` is set lower than the default value eg \"nMinimumChainWork is set below the default value. This node may sync to a chain which is not the known most-work blockchain.\"",
    "created_at": "2017-06-08T21:04:47Z",
    "updated_at": "2017-09-05T19:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r120998668",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120998668"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r120998668"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120998668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 981,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120998733",
    "pull_request_review_id": 43013428,
    "id": 120998733,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDk5ODczMw==",
    "diff_hunk": "@@ -355,6 +355,9 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n     strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep the transaction memory pool below <n> megabytes (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n+    if (showDebug) {\n+        strUsage += HelpMessageOpt(\"-minimumchainwork\", strprintf(\"Minimum work assumed to exist on a valid chain (default: %s, testnet: %s)\", Params(CBaseChainParams::MAIN).GetConsensus().nMinimumChainWork.GetHex(), Params(CBaseChainParams::TESTNET).GetConsensus().nMinimumChainWork.GetHex()));",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "original_commit_id": "87fb774569a61d3a9c5b774f438d4f342bc7554e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "suggest \"Minimum work assumed to exist on a valid chain *in hex*\"",
    "created_at": "2017-06-08T21:05:10Z",
    "updated_at": "2017-09-05T19:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r120998733",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120998733"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r120998733"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/120998733/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 359,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121001613",
    "pull_request_review_id": 43013428,
    "id": 121001613,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTAwMTYxMw==",
    "diff_hunk": "@@ -0,0 +1,81 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test logic for setting nMinimumChainWork on command line.\n+\n+Nodes don't consider themselves out of \"initial block download\" until\n+their active chain has more work than nMinimumChainWork.\n+\n+While in initial block download, nodes won't relay blocks to their peers, so\n+test that this parameter functions as intended by verifying that block relay\n+only succeeds past a given node once its nMinimumChainWork has been exceeded.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import sync_blocks, connect_nodes\n+\n+# 2 hashes required per regtest block (with no difficulty adjustment)\n+REGTEST_WORK_PER_BLOCK = 2\n+\n+class MinimumChainWorkTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4",
    "path": "test/functional/minchainwork.py",
    "position": null,
    "original_position": 27,
    "commit_id": "eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "original_commit_id": "87fb774569a61d3a9c5b774f438d4f342bc7554e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "default number of nodes in the base class is 4, so you don't need to override this here.",
    "created_at": "2017-06-08T21:19:57Z",
    "updated_at": "2017-09-05T19:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121001613",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121001613"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121001613"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121001613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121002605",
    "pull_request_review_id": 43013428,
    "id": 121002605,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTAwMjYwNQ==",
    "diff_hunk": "@@ -0,0 +1,81 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test logic for setting nMinimumChainWork on command line.\n+\n+Nodes don't consider themselves out of \"initial block download\" until\n+their active chain has more work than nMinimumChainWork.\n+\n+While in initial block download, nodes won't relay blocks to their peers, so\n+test that this parameter functions as intended by verifying that block relay\n+only succeeds past a given node once its nMinimumChainWork has been exceeded.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import sync_blocks, connect_nodes\n+\n+# 2 hashes required per regtest block (with no difficulty adjustment)\n+REGTEST_WORK_PER_BLOCK = 2\n+\n+class MinimumChainWorkTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[], [\"-minimumchainwork=0x65\"], [\"-minimumchainwork=0xff\"], [\"-minimumchainwork=0x01ff\"]]\n+        self.node_min_work = [0, 101, 255, 511]\n+\n+    def setup_network(self):",
    "path": "test/functional/minchainwork.py",
    "position": null,
    "original_position": 31,
    "commit_id": "eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "original_commit_id": "87fb774569a61d3a9c5b774f438d4f342bc7554e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The default test topology is a chain node0 <-> node1 <-> node2 <-> node3, so you don't need to override this method. You may want to move the comment into the module docstring.",
    "created_at": "2017-06-08T21:25:10Z",
    "updated_at": "2017-09-05T19:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121002605",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121002605"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121002605"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121002605/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 33,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121002725",
    "pull_request_review_id": 43013428,
    "id": 121002725,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTAwMjcyNQ==",
    "diff_hunk": "@@ -0,0 +1,81 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test logic for setting nMinimumChainWork on command line.\n+\n+Nodes don't consider themselves out of \"initial block download\" until\n+their active chain has more work than nMinimumChainWork.\n+\n+While in initial block download, nodes won't relay blocks to their peers, so\n+test that this parameter functions as intended by verifying that block relay\n+only succeeds past a given node once its nMinimumChainWork has been exceeded.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import sync_blocks, connect_nodes\n+\n+# 2 hashes required per regtest block (with no difficulty adjustment)\n+REGTEST_WORK_PER_BLOCK = 2\n+\n+class MinimumChainWorkTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[], [\"-minimumchainwork=0x65\"], [\"-minimumchainwork=0xff\"], [\"-minimumchainwork=0x01ff\"]]\n+        self.node_min_work = [0, 101, 255, 511]\n+\n+    def setup_network(self):\n+        # This test relies on the chain setup being:\n+        # node0 <- node1 <- node2 <- node3\n+        # Before leaving IBD, nodes prefer to download blocks from outbound\n+        # peers, so ensure that we're mining on an outbound peer and testing\n+        # block relay to inbound peers.\n+        self.setup_nodes()\n+        for i in range(self.num_nodes-1):\n+            connect_nodes(self.nodes[i+1], i)\n+\n+    def run_test(self):\n+        # Start building a chain on node0.  node2 shouldn't be able to sync until node1's\n+        # minchainwork is exceeded; node3 shouldn't be able to sync until node2's minchainwork\n+        # is exceeded.\n+        cumulative_chain_work = 2 # Genesis block's work",
    "path": "test/functional/minchainwork.py",
    "position": null,
    "original_position": 45,
    "commit_id": "eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "original_commit_id": "87fb774569a61d3a9c5b774f438d4f342bc7554e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use `REGTEST_WORK_PER_BLOCK` instead of hardcoding this?",
    "created_at": "2017-06-08T21:25:43Z",
    "updated_at": "2017-09-05T19:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121002725",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121002725"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121002725"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121002725/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 45,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121002803",
    "pull_request_review_id": 43013428,
    "id": 121002803,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTAwMjgwMw==",
    "diff_hunk": "@@ -0,0 +1,81 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test logic for setting nMinimumChainWork on command line.\n+\n+Nodes don't consider themselves out of \"initial block download\" until\n+their active chain has more work than nMinimumChainWork.\n+\n+While in initial block download, nodes won't relay blocks to their peers, so\n+test that this parameter functions as intended by verifying that block relay\n+only succeeds past a given node once its nMinimumChainWork has been exceeded.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import sync_blocks, connect_nodes\n+\n+# 2 hashes required per regtest block (with no difficulty adjustment)\n+REGTEST_WORK_PER_BLOCK = 2\n+\n+class MinimumChainWorkTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        self.extra_args = [[], [\"-minimumchainwork=0x65\"], [\"-minimumchainwork=0xff\"], [\"-minimumchainwork=0x01ff\"]]\n+        self.node_min_work = [0, 101, 255, 511]\n+\n+    def setup_network(self):\n+        # This test relies on the chain setup being:\n+        # node0 <- node1 <- node2 <- node3\n+        # Before leaving IBD, nodes prefer to download blocks from outbound\n+        # peers, so ensure that we're mining on an outbound peer and testing\n+        # block relay to inbound peers.\n+        self.setup_nodes()\n+        for i in range(self.num_nodes-1):\n+            connect_nodes(self.nodes[i+1], i)\n+\n+    def run_test(self):\n+        # Start building a chain on node0.  node2 shouldn't be able to sync until node1's\n+        # minchainwork is exceeded; node3 shouldn't be able to sync until node2's minchainwork\n+        # is exceeded.\n+        cumulative_chain_work = 2 # Genesis block's work\n+        for i in [1,2]:\n+            self.log.info(\"Testing relay across node %d (minChainWork = %d)\", i, self.node_min_work[i])\n+\n+            starting_blockcount = self.nodes[i+1].getblockcount()\n+\n+            num_blocks_to_generate = int((self.node_min_work[i] - cumulative_chain_work) / 2)",
    "path": "test/functional/minchainwork.py",
    "position": null,
    "original_position": 51,
    "commit_id": "eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "original_commit_id": "87fb774569a61d3a9c5b774f438d4f342bc7554e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this `2` refers to work per block? In that case, replace with `REGTEST_WORK_PER_BLOCK`",
    "created_at": "2017-06-08T21:26:05Z",
    "updated_at": "2017-09-05T19:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121002803",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121002803"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121002803"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121002803/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 51,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121803599",
    "pull_request_review_id": 43862338,
    "id": 121803599,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTgwMzU5OQ==",
    "diff_hunk": "@@ -973,6 +976,11 @@ bool AppInitParameterInteraction()\n     else\n         LogPrintf(\"Validating signatures for all blocks.\\n\");\n \n+    nMinimumChainWork = UintToArith256(uint256S(GetArg(\"-minimumchainwork\", chainparams.GetConsensus().nMinimumChainWork.GetHex())));\n+    if (nMinimumChainWork != UintToArith256(chainparams.GetConsensus().nMinimumChainWork)) {\n+        LogPrintf(\"Setting nMinimumChainWork=%s (%s default value)\\n\", nMinimumChainWork.GetHex(), (nMinimumChainWork < UintToArith256(chainparams.GetConsensus().nMinimumChainWork)) ? \"below\" : \"above\");",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "original_commit_id": "87fb774569a61d3a9c5b774f438d4f342bc7554e",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Regarding the stronger warning: it's hard to exactly say what may happen if nMinimumChainWork is too low, as it's just an anti-DoS threshold.  There's no reason to think that we would then sync to something that's not the most-work blockchain, unless there were some other attack going on.\r\n\r\nI decided that since this is already a hidden option it's sufficient to just log a warning if the value is below the default, without specifying the risk.",
    "created_at": "2017-06-13T21:36:57Z",
    "updated_at": "2017-09-05T19:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121803599",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121803599"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121803599"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121803599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 981,
    "side": "RIGHT",
    "in_reply_to_id": 120998668
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121803608",
    "pull_request_review_id": 43862350,
    "id": 121803608,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTgwMzYwOA==",
    "diff_hunk": "@@ -0,0 +1,81 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test logic for setting nMinimumChainWork on command line.\n+\n+Nodes don't consider themselves out of \"initial block download\" until\n+their active chain has more work than nMinimumChainWork.\n+\n+While in initial block download, nodes won't relay blocks to their peers, so\n+test that this parameter functions as intended by verifying that block relay\n+only succeeds past a given node once its nMinimumChainWork has been exceeded.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import sync_blocks, connect_nodes\n+\n+# 2 hashes required per regtest block (with no difficulty adjustment)\n+REGTEST_WORK_PER_BLOCK = 2\n+\n+class MinimumChainWorkTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4",
    "path": "test/functional/minchainwork.py",
    "position": null,
    "original_position": 27,
    "commit_id": "eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "original_commit_id": "87fb774569a61d3a9c5b774f438d4f342bc7554e",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I ended up changing this test to use 3 nodes, but I wanted to fully specify the topology since the test depends on it -- eg if someone were to change the default I thought it would be unfortunate if the test then broke.",
    "created_at": "2017-06-13T21:36:59Z",
    "updated_at": "2017-09-05T19:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121803608",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121803608"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121803608"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121803608/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 121001613
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121938454",
    "pull_request_review_id": 44007718,
    "id": 121938454,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTkzODQ1NA==",
    "diff_hunk": "@@ -973,6 +976,11 @@ bool AppInitParameterInteraction()\n     else\n         LogPrintf(\"Validating signatures for all blocks.\\n\");\n \n+    nMinimumChainWork = UintToArith256(uint256S(GetArg(\"-minimumchainwork\", chainparams.GetConsensus().nMinimumChainWork.GetHex())));\n+    if (nMinimumChainWork != UintToArith256(chainparams.GetConsensus().nMinimumChainWork)) {\n+        LogPrintf(\"Setting nMinimumChainWork=%s (%s default value)\\n\", nMinimumChainWork.GetHex(), (nMinimumChainWork < UintToArith256(chainparams.GetConsensus().nMinimumChainWork)) ? \"below\" : \"above\");",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "original_commit_id": "87fb774569a61d3a9c5b774f438d4f342bc7554e",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "On further thought, perhaps I should add a warning if you set it above the default value?  Because that could actually prevent you from syncing.",
    "created_at": "2017-06-14T12:59:04Z",
    "updated_at": "2017-09-05T19:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121938454",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121938454"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r121938454"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121938454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 981,
    "side": "RIGHT",
    "in_reply_to_id": 120998668
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122022548",
    "pull_request_review_id": 44101175,
    "id": 122022548,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjAyMjU0OA==",
    "diff_hunk": "@@ -0,0 +1,81 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test logic for setting nMinimumChainWork on command line.\n+\n+Nodes don't consider themselves out of \"initial block download\" until\n+their active chain has more work than nMinimumChainWork.\n+\n+While in initial block download, nodes won't relay blocks to their peers, so\n+test that this parameter functions as intended by verifying that block relay\n+only succeeds past a given node once its nMinimumChainWork has been exceeded.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import sync_blocks, connect_nodes\n+\n+# 2 hashes required per regtest block (with no difficulty adjustment)\n+REGTEST_WORK_PER_BLOCK = 2\n+\n+class MinimumChainWorkTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4",
    "path": "test/functional/minchainwork.py",
    "position": null,
    "original_position": 27,
    "commit_id": "eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "original_commit_id": "87fb774569a61d3a9c5b774f438d4f342bc7554e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If someone changed the default topology, it'd be unfortunate if a lot of tests *didn't* break! (since the topology is fundamental assumption for how the test nodes should behave)\r\n\r\nAnyway, this was just a style nit - I have no objection to keeping the `setup_network()` override.",
    "created_at": "2017-06-14T18:07:33Z",
    "updated_at": "2017-09-05T19:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r122022548",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122022548"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r122022548"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122022548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 121001613
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136425531",
    "pull_request_review_id": 59963870,
    "id": 136425531,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjQyNTUzMQ==",
    "diff_hunk": "@@ -65,6 +65,18 @@ bool IsHex(const std::string& str)\n     return (str.size() > 0) && (str.size()%2 == 0);\n }\n \n+bool IsHexNumber(const std::string& str)\n+{\n+    size_t starting_location = 0;\n+    if (str.size() > 2 && *str.begin() == '0' && *(str.begin()+1) == 'x') {\n+        starting_location = 2;\n+    }\n+    for (auto it: str.substr(starting_location)) {",
    "path": "src/utilstrencodings.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "original_commit_id": "317cc116a7c64e66525936927baba1bfdb4bfaf7",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`auto it` is confusing for me since `it` isn't an iterator and `substr` is returning a string object. Obviously you can for loop over a string since it's a sequence of chars. Perhaps this would be clearer:\r\n\r\n```\r\nfor (const signed char c : str.substr(starting_location)) {\r\n    if (HexDigit(c) < 0) return false;\r\n```",
    "created_at": "2017-08-31T19:20:07Z",
    "updated_at": "2017-09-05T19:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r136425531",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136425531"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r136425531"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136425531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 74,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136425757",
    "pull_request_review_id": 59963870,
    "id": 136425757,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjQyNTc1Nw==",
    "diff_hunk": "@@ -65,6 +65,18 @@ bool IsHex(const std::string& str)\n     return (str.size() > 0) && (str.size()%2 == 0);\n }\n \n+bool IsHexNumber(const std::string& str)\n+{\n+    size_t starting_location = 0;\n+    if (str.size() > 2 && *str.begin() == '0' && *(str.begin()+1) == 'x') {\n+        starting_location = 2;\n+    }\n+    for (auto it: str.substr(starting_location)) {\n+        if (HexDigit(it) < 0) return false;\n+    }\n+    return (str.size() > starting_location);",
    "path": "src/utilstrencodings.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "eac64bb7a3b6aba747403b23b3b1d3609843f8db",
    "original_commit_id": "317cc116a7c64e66525936927baba1bfdb4bfaf7",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Perhaps add a comment. `Return false for empty string or \"0x\"`. It may also be clearer to place this at the top of the function.",
    "created_at": "2017-08-31T19:21:09Z",
    "updated_at": "2017-09-05T19:09:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r136425757",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136425757"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10357#discussion_r136425757"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10357"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/136425757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 78,
    "side": "RIGHT"
  }
]