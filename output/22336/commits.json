[
  {
    "sha": "97e537766f0ecdc083e9535c4dd43c938279c8ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5N2U1Mzc3NjZmMGVjZGMwODNlOTUzNWM0ZGQ0M2M5MzgyNzljOGVk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-12-21T13:46:18Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-06-24T10:42:33Z"
      },
      "message": "build: set OSX_MIN_VERSION to 10.15\n\nThis is required to use std::filesystem on macOS.",
      "tree": {
        "sha": "eea428af794b5b2b805385d8618fd5a6fc77fdfd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eea428af794b5b2b805385d8618fd5a6fc77fdfd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97e537766f0ecdc083e9535c4dd43c938279c8ed",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDUYZsACgkQLuufXMCV\nJsGjcQ/+OMoxxfFquHjf9BBq9Hu2HLyColWWMDFF7kErXNG0GkKEYb8IOzMytO4q\njKmIjADZx7xLmIyyY2pnCUWz2RO/gHIPTKyG0t+V7S7aqDqFUwNnTPG6xP2zW10a\nC9Zme5g9X4wRjyeZ7UizzWwhILBZC0BpkZcweO/wHyD9DCy+0OwD/7ukoPqpgNu7\nc0n1G85B0jFCY5SZeZNQkSIDiVhUQ2Dl55cNH1BU/DI1i9f8hiTd5goMroCdt50I\nqEkbZTi+6aVRckl8Jiu2LzCqPFz+4rJlatUUfKfxFfJm69RjcpfwbFLsmLN9QowO\nghTv7bmDlqvaI7DAgqg777eI0R7XagpJg37LWb1bRBwrm1puS3zx8LXuYSB0Wf1C\nroXadg31N4Utu+ZtyoReUtcT7iHnHVJ+/XSn/bjhI1iQIGf+QhgFPZf4s2nblhui\n5GzqregaLnY2sAbAc5do4CrsNqb1GdRMcie2KeosaXt+tD2ilngIbYDyo0yEGTLG\n2GzWAR3CXr957azmWcvTP0X9lT3vPBhExIlAeiXRo7CnoX669M3SRxfk9r5lgehV\nChWyRolkbBZKC/dEEaUD2EJ6vW3MsL6wrz+H3R2Yp9ozCh9hMZa9b+/ms+xPLs4p\nkWYDttOruV7gvrVQtFU6j+5ZSS2bPljiTVKknpp/fOPe98V+zEY=\n=qYqk\n-----END PGP SIGNATURE-----",
        "payload": "tree eea428af794b5b2b805385d8618fd5a6fc77fdfd\nparent c31161f4f79b6e1dc0f8bfc2a5e7815e8c55ed91\nauthor fanquake <fanquake@gmail.com> 1608558378 +0800\ncommitter fanquake <fanquake@gmail.com> 1624531353 +0800\n\nbuild: set OSX_MIN_VERSION to 10.15\n\nThis is required to use std::filesystem on macOS.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97e537766f0ecdc083e9535c4dd43c938279c8ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/97e537766f0ecdc083e9535c4dd43c938279c8ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97e537766f0ecdc083e9535c4dd43c938279c8ed/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c31161f4f79b6e1dc0f8bfc2a5e7815e8c55ed91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c31161f4f79b6e1dc0f8bfc2a5e7815e8c55ed91",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c31161f4f79b6e1dc0f8bfc2a5e7815e8c55ed91"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 45,
      "deletions": 9
    },
    "files": [
      {
        "sha": "6537f4b5d30aa69d70ec068e55d1e0bc617268e4",
        "filename": ".cirrus.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97e537766f0ecdc083e9535c4dd43c938279c8ed/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97e537766f0ecdc083e9535c4dd43c938279c8ed/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=97e537766f0ecdc083e9535c4dd43c938279c8ed",
        "patch": "@@ -185,7 +185,7 @@ task:\n     FILE_ENV: \"./ci/test/00_setup_env_native_nowallet.sh\"\n \n task:\n-  name: 'macOS 10.14 [gui, no tests] [focal]'\n+  name: 'macOS 10.15 [gui, no tests] [focal]'\n   << : *DEPENDS_SDK_CACHE_TEMPLATE\n   << : *GLOBAL_TASK_TEMPLATE\n   container:"
      },
      {
        "sha": "a7573a1992085e1a025d9d4fe3290687e26c75a1",
        "filename": "build-aux/m4/l_filesystem.m4",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97e537766f0ecdc083e9535c4dd43c938279c8ed/build-aux/m4/l_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97e537766f0ecdc083e9535c4dd43c938279c8ed/build-aux/m4/l_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/l_filesystem.m4?ref=97e537766f0ecdc083e9535c4dd43c938279c8ed",
        "patch": "@@ -0,0 +1,33 @@\n+m4_define([_CHECK_FILESYSTEM_testbody], [[\n+  #include <filesystem>\n+\n+  namespace fs = std::filesystem;\n+\n+  int main() {\n+    (void)fs::current_path().root_name();\n+    return 0;\n+  }\n+]])\n+\n+AC_DEFUN([CHECK_FILESYSTEM], [\n+\n+  AC_LANG_PUSH(C++)\n+\n+  AC_MSG_CHECKING([whether std::filesystem can be used without link library])\n+\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_FILESYSTEM_testbody])],[\n+      AC_MSG_RESULT([yes])\n+    ],[\n+      AC_MSG_RESULT([no])\n+      LIBS=\"$LIBS -lstdc++fs\"\n+      AC_MSG_CHECKING([whether std::filesystem needs -lstdc++fs])\n+      AC_LINK_IFELSE([AC_LANG_SOURCE([_CHECK_FILESYSTEM_testbody])],[\n+          AC_MSG_RESULT([yes])\n+        ],[\n+          AC_MSG_RESULT([no])\n+          AC_MSG_FAILURE([cannot figure out how to use std::filesystem])\n+        ])\n+    ])\n+\n+  AC_LANG_POP\n+])"
      },
      {
        "sha": "7cbbeb872bb0f364fdfa7c38fded3d8039bb4c06",
        "filename": "ci/test/00_setup_env_native_nowallet.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97e537766f0ecdc083e9535c4dd43c938279c8ed/ci/test/00_setup_env_native_nowallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97e537766f0ecdc083e9535c4dd43c938279c8ed/ci/test/00_setup_env_native_nowallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_nowallet.sh?ref=97e537766f0ecdc083e9535c4dd43c938279c8ed",
        "patch": "@@ -8,7 +8,7 @@ export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_nowallet\n export DOCKER_NAME_TAG=ubuntu:18.04  # Use bionic to have one config run the tests in python3.6, see doc/dependencies.md\n-export PACKAGES=\"python3-zmq clang-5.0 llvm-5.0\"  # Use clang-5 to test C++17 compatibility, see doc/dependencies.md\n+export PACKAGES=\"python3-zmq clang-7 llvm-7 libstdc++-8-dev\"  # Use clang-7 to test C++17 & std::filesystem compatibility, see doc/dependencies.md\n export DEP_OPTS=\"NO_WALLET=1\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CC=clang-5.0 CXX=clang++-5.0\"\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CC=clang-7 CXX=clang++-7\""
      },
      {
        "sha": "68fd6e0199448c87e5b2411690bb8a08280becc5",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97e537766f0ecdc083e9535c4dd43c938279c8ed/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97e537766f0ecdc083e9535c4dd43c938279c8ed/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=97e537766f0ecdc083e9535c4dd43c938279c8ed",
        "patch": "@@ -7,13 +7,13 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_qt5\n-export DOCKER_NAME_TAG=ubuntu:18.04  # Check that bionic gcc-7 can compile our c++17 and run our functional tests in python3, see doc/dependencies.md\n-export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev\"\n+export DOCKER_NAME_TAG=ubuntu:18.04  # Use bionic gcc-8 to test C++17 & std::filesystem compatibility and run our functional tests using python3.6, see doc/dependencies.md\n+export PACKAGES=\"gcc-8 g++-8 python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev\"\n export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 NO_NATPMP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n export TEST_RUNNER_EXTRA=\"--previous-releases --coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n export RUN_UNIT_TESTS_SEQUENTIAL=\"true\"\n export RUN_UNIT_TESTS=\"false\"\n export GOAL=\"install\"\n export PREVIOUS_RELEASES_TO_DOWNLOAD=\"v0.15.2 v0.16.3 v0.17.2 v0.18.1 v0.19.1\"\n export BITCOIN_CONFIG=\"--enable-zmq --with-libs=no --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports\n---enable-debug --disable-fuzz-binary  CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\"\"\n+--enable-debug --disable-fuzz-binary  CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CC=gcc-8 CXX=g++-8\""
      },
      {
        "sha": "c9f031f8360665ffda05fe375661b9732e9b4ce2",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97e537766f0ecdc083e9535c4dd43c938279c8ed/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97e537766f0ecdc083e9535c4dd43c938279c8ed/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=97e537766f0ecdc083e9535c4dd43c938279c8ed",
        "patch": "@@ -77,6 +77,9 @@ AX_CXX_COMPILE_STDCXX([17], [noext], [mandatory])\n dnl Check if -latomic is required for <std::atomic>\n CHECK_ATOMIC\n \n+dnl check if -lstdc++fs is required for std::filesystem\n+CHECK_FILESYSTEM\n+\n dnl Unless the user specified OBJCXX, force it to be the same as CXX. This ensures\n dnl that we get the same -std flags for both.\n m4_ifdef([AC_PROG_OBJCXX],["
      },
      {
        "sha": "ea92bb779337ee596f6996c6ccf5d4ceeb5ec91c",
        "filename": "depends/hosts/darwin.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97e537766f0ecdc083e9535c4dd43c938279c8ed/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97e537766f0ecdc083e9535c4dd43c938279c8ed/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=97e537766f0ecdc083e9535c4dd43c938279c8ed",
        "patch": "@@ -1,4 +1,4 @@\n-OSX_MIN_VERSION=10.14\n+OSX_MIN_VERSION=10.15\n OSX_SDK_VERSION=10.15.6\n XCODE_VERSION=12.1\n XCODE_BUILD_ID=12A7403"
      },
      {
        "sha": "45dc40acf772575e1ce2ad346ff5bac03c46276a",
        "filename": "doc/dependencies.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97e537766f0ecdc083e9535c4dd43c938279c8ed/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97e537766f0ecdc083e9535c4dd43c938279c8ed/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=97e537766f0ecdc083e9535c4dd43c938279c8ed",
        "patch": "@@ -7,11 +7,11 @@ These are the dependencies currently used by Bitcoin Core. You can find instruct\n | --- | --- | --- | --- | --- | --- |\n | Berkeley DB | [4.8.30](https://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html) | 4.8.x | No |  |  |\n | Boost | [1.71.0](https://www.boost.org/users/download/) | [1.64.0](https://github.com/bitcoin/bitcoin/pull/22320) | No |  |  |\n-| Clang |  | [5.0+](https://releases.llvm.org/download.html) (C++17 support) |  |  |  |\n+| Clang |  | [7.0+](https://releases.llvm.org/download.html) (C++17 & std::filesystem support) |  |  |  |\n | Expat | [2.2.7](https://libexpat.github.io/) |  | No | Yes |  |\n | fontconfig | [2.12.1](https://www.freedesktop.org/software/fontconfig/release/) |  | No | Yes |  |\n | FreeType | [2.7.1](https://download.savannah.gnu.org/releases/freetype) |  | No |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) (Android only) |\n-| GCC |  | [7+](https://gcc.gnu.org/) (C++17 support) |  |  |  |\n+| GCC |  | [8.1+](https://gcc.gnu.org/) (C++17 & std::filesystem support) |  |  |  |\n | HarfBuzz-NG |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n | libevent | [2.1.12-stable](https://github.com/libevent/libevent/releases) | [2.0.21](https://github.com/bitcoin/bitcoin/pull/18676) | No |  |  |\n | libnatpmp | git commit [4536032...](https://github.com/miniupnp/libnatpmp/tree/4536032ae32268a45c073a4d5e91bbab4534773a) |  | No |  |  |"
      }
    ]
  },
  {
    "sha": "1e12e9844671a042898a842840d7c7ef66ddf377",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTEyZTk4NDQ2NzFhMDQyODk4YTg0Mjg0MGQ3YzdlZjY2ZGRmMzc3",
    "commit": {
      "author": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2020-06-11T06:58:46Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-06-24T10:42:35Z"
      },
      "message": "refactor: replace boost::filesystem with std::filesystem\n\nWarning: Replacing fs::system_complete calls with fs::absolute calls\nin this commit may cuase minor changes in behaviour because fs::absolute\nno longer strips trailing slashes; however these changes are believed to\nbe safe.",
      "tree": {
        "sha": "10d2bdc4c5cdc7f798dbde61278fb71ad39f3557",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10d2bdc4c5cdc7f798dbde61278fb71ad39f3557"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e12e9844671a042898a842840d7c7ef66ddf377",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDUYZsACgkQLuufXMCV\nJsFvww//clYhtwKoYS+bmGj+bs0HRcds5yHky8DaejY+UwcWbyXdGVg3DfXQN8GW\nMIDU8B8zmO6o1pCSjHBPIIyd8igzZ5znbJpsJoUJ1Pk4ecZD7sIZ7hIigXlIyb34\nvGQMwECzEnGl0qdjqBHcP4tjtQWNZ3vRISbC7Fw4dO2fD0cgmuVhwbPi4DE1hahO\nFkTD1xlUoZwWayD50O3EQ7EGibJ9oUYC+uJmkowmpSaC5Jspoq06I0kZYvf0vSsu\nkHOfwlb2cLz4h5lAwJL5TJp7R8wg1KNTQsKdfpFxM7Ap+JbfbQEy+RnCZl5Li5iI\n1U2OXRrFZNQBxsLy1AbOqO5+4sclZ3uf320DikPtrXMp80RQ89/Ibhc00+FtxmUw\nS6m7StexvreZwkC3TCCsjnn7OD5nlWtyWYKYl0Tc6jA+0/Wks82euar1L4F1hHMN\nPBf8kaVYOoYkPiOZAyYE/ndk0siKrVEaN1RWir/eSCRNfBeinhd4yx55/ZA1seOO\n6ke/vd5L6E84hfN2pVk6lnnpllHkHLHIe8rVbGG0QH5uxoS6iur+lEteVDcRel7H\nK0EGlOMlBbgNe3IPiK8J0c7XEMCpLgzadvMmXf38rn4AoYUlXtyFJkSTPq2bCUnz\nMitktJtUXpjGCZXoKSVqlsC2ys8pD2mh+KwZnWocuLBAHRzIGHc=\n=raSB\n-----END PGP SIGNATURE-----",
        "payload": "tree 10d2bdc4c5cdc7f798dbde61278fb71ad39f3557\nparent 97e537766f0ecdc083e9535c4dd43c938279c8ed\nauthor Kiminuo <kiminuo@protonmail.com> 1591858726 +0200\ncommitter fanquake <fanquake@gmail.com> 1624531355 +0800\n\nrefactor: replace boost::filesystem with std::filesystem\n\nWarning: Replacing fs::system_complete calls with fs::absolute calls\nin this commit may cuase minor changes in behaviour because fs::absolute\nno longer strips trailing slashes; however these changes are believed to\nbe safe.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e12e9844671a042898a842840d7c7ef66ddf377",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e12e9844671a042898a842840d7c7ef66ddf377",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e12e9844671a042898a842840d7c7ef66ddf377/comments",
    "author": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97e537766f0ecdc083e9535c4dd43c938279c8ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97e537766f0ecdc083e9535c4dd43c938279c8ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97e537766f0ecdc083e9535c4dd43c938279c8ed"
      }
    ],
    "stats": {
      "total": 224,
      "additions": 35,
      "deletions": 189
    },
    "files": [
      {
        "sha": "c75be8ea7af5dc136d5bf59fae5513af11742ecf",
        "filename": "src/fs.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 105,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/fs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/fs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.cpp?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -2,6 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <cassert>\n+\n #include <fs.h>\n \n #ifndef WIN32\n@@ -34,7 +36,7 @@ FILE *fopen(const fs::path& p, const char *mode)\n fs::path AbsPathJoin(const fs::path& base, const fs::path& path)\n {\n     assert(base.is_absolute());\n-    return fs::absolute(path, base);\n+    return path.empty() ? base : base / path;\n }\n \n #ifndef WIN32\n@@ -150,108 +152,4 @@ std::string get_filesystem_error_message(const fs::filesystem_error& e)\n #endif\n }\n \n-#ifdef WIN32\n-#ifdef __GLIBCXX__\n-\n-// reference: https://github.com/gcc-mirror/gcc/blob/gcc-7_3_0-release/libstdc%2B%2B-v3/include/std/fstream#L270\n-\n-static std::string openmodeToStr(std::ios_base::openmode mode)\n-{\n-    switch (mode & ~std::ios_base::ate) {\n-    case std::ios_base::out:\n-    case std::ios_base::out | std::ios_base::trunc:\n-        return \"w\";\n-    case std::ios_base::out | std::ios_base::app:\n-    case std::ios_base::app:\n-        return \"a\";\n-    case std::ios_base::in:\n-        return \"r\";\n-    case std::ios_base::in | std::ios_base::out:\n-        return \"r+\";\n-    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc:\n-        return \"w+\";\n-    case std::ios_base::in | std::ios_base::out | std::ios_base::app:\n-    case std::ios_base::in | std::ios_base::app:\n-        return \"a+\";\n-    case std::ios_base::out | std::ios_base::binary:\n-    case std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n-        return \"wb\";\n-    case std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n-    case std::ios_base::app | std::ios_base::binary:\n-        return \"ab\";\n-    case std::ios_base::in | std::ios_base::binary:\n-        return \"rb\";\n-    case std::ios_base::in | std::ios_base::out | std::ios_base::binary:\n-        return \"r+b\";\n-    case std::ios_base::in | std::ios_base::out | std::ios_base::trunc | std::ios_base::binary:\n-        return \"w+b\";\n-    case std::ios_base::in | std::ios_base::out | std::ios_base::app | std::ios_base::binary:\n-    case std::ios_base::in | std::ios_base::app | std::ios_base::binary:\n-        return \"a+b\";\n-    default:\n-        return std::string();\n-    }\n-}\n-\n-void ifstream::open(const fs::path& p, std::ios_base::openmode mode)\n-{\n-    close();\n-    mode |= std::ios_base::in;\n-    m_file = fsbridge::fopen(p, openmodeToStr(mode).c_str());\n-    if (m_file == nullptr) {\n-        return;\n-    }\n-    m_filebuf = __gnu_cxx::stdio_filebuf<char>(m_file, mode);\n-    rdbuf(&m_filebuf);\n-    if (mode & std::ios_base::ate) {\n-        seekg(0, std::ios_base::end);\n-    }\n-}\n-\n-void ifstream::close()\n-{\n-    if (m_file != nullptr) {\n-        m_filebuf.close();\n-        fclose(m_file);\n-    }\n-    m_file = nullptr;\n-}\n-\n-void ofstream::open(const fs::path& p, std::ios_base::openmode mode)\n-{\n-    close();\n-    mode |= std::ios_base::out;\n-    m_file = fsbridge::fopen(p, openmodeToStr(mode).c_str());\n-    if (m_file == nullptr) {\n-        return;\n-    }\n-    m_filebuf = __gnu_cxx::stdio_filebuf<char>(m_file, mode);\n-    rdbuf(&m_filebuf);\n-    if (mode & std::ios_base::ate) {\n-        seekp(0, std::ios_base::end);\n-    }\n-}\n-\n-void ofstream::close()\n-{\n-    if (m_file != nullptr) {\n-        m_filebuf.close();\n-        fclose(m_file);\n-    }\n-    m_file = nullptr;\n-}\n-#else // __GLIBCXX__\n-\n-static_assert(sizeof(*fs::path().BOOST_FILESYSTEM_C_STR) == sizeof(wchar_t),\n-    \"Warning: This build is using boost::filesystem ofstream and ifstream \"\n-    \"implementations which will fail to open paths containing multibyte \"\n-    \"characters. You should delete this static_assert to ignore this warning, \"\n-    \"or switch to a different C++ standard library like the Microsoft C++ \"\n-    \"Standard Library (where boost uses non-standard extensions to construct \"\n-    \"stream objects with wide filenames), or the GNU libstdc++ library (where \"\n-    \"a more complicated workaround has been implemented above).\");\n-\n-#endif // __GLIBCXX__\n-#endif // WIN32\n-\n } // fsbridge"
      },
      {
        "sha": "0fc9706c1d4cdc91a1843a07c789de0627d04f76",
        "filename": "src/fs.h",
        "status": "modified",
        "additions": 5,
        "deletions": 50,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/fs.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/fs.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.h?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -11,11 +11,11 @@\n #include <ext/stdio_filebuf.h>\n #endif\n \n-#include <boost/filesystem.hpp>\n-#include <boost/filesystem/fstream.hpp>\n+#include <filesystem>\n+#include <fstream>\n \n /** Filesystem operations and types */\n-namespace fs = boost::filesystem;\n+namespace fs = std::filesystem;\n \n /** Bridge operations to C stdio */\n namespace fsbridge {\n@@ -54,53 +54,8 @@ namespace fsbridge {\n \n     std::string get_filesystem_error_message(const fs::filesystem_error& e);\n \n-    // GNU libstdc++ specific workaround for opening UTF-8 paths on Windows.\n-    //\n-    // On Windows, it is only possible to reliably access multibyte file paths through\n-    // `wchar_t` APIs, not `char` APIs. But because the C++ standard doesn't\n-    // require ifstream/ofstream `wchar_t` constructors, and the GNU library doesn't\n-    // provide them (in contrast to the Microsoft C++ library, see\n-    // https://stackoverflow.com/questions/821873/how-to-open-an-stdfstream-ofstream-or-ifstream-with-a-unicode-filename/822032#822032),\n-    // Boost is forced to fall back to `char` constructors which may not work properly.\n-    //\n-    // Work around this issue by creating stream objects with `_wfopen` in\n-    // combination with `__gnu_cxx::stdio_filebuf`. This workaround can be removed\n-    // with an upgrade to C++17, where streams can be constructed directly from\n-    // `std::filesystem::path` objects.\n-\n-#if defined WIN32 && defined __GLIBCXX__\n-    class ifstream : public std::istream\n-    {\n-    public:\n-        ifstream() = default;\n-        explicit ifstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in) { open(p, mode); }\n-        ~ifstream() { close(); }\n-        void open(const fs::path& p, std::ios_base::openmode mode = std::ios_base::in);\n-        bool is_open() { return m_filebuf.is_open(); }\n-        void close();\n-\n-    private:\n-        __gnu_cxx::stdio_filebuf<char> m_filebuf;\n-        FILE* m_file = nullptr;\n-    };\n-    class ofstream : public std::ostream\n-    {\n-    public:\n-        ofstream() = default;\n-        explicit ofstream(const fs::path& p, std::ios_base::openmode mode = std::ios_base::out) { open(p, mode); }\n-        ~ofstream() { close(); }\n-        void open(const fs::path& p, std::ios_base::openmode mode = std::ios_base::out);\n-        bool is_open() { return m_filebuf.is_open(); }\n-        void close();\n-\n-    private:\n-        __gnu_cxx::stdio_filebuf<char> m_filebuf;\n-        FILE* m_file = nullptr;\n-    };\n-#else  // !(WIN32 && __GLIBCXX__)\n-    typedef fs::ifstream ifstream;\n-    typedef fs::ofstream ofstream;\n-#endif // WIN32 && __GLIBCXX__\n+    typedef std::ifstream ifstream;\n+    typedef std::ofstream ofstream;\n };\n \n #endif // BITCOIN_FS_H"
      },
      {
        "sha": "41df77d45cdb2303eccef3a438395324460b1ab6",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -13,6 +13,7 @@\n \n #include <atomic>\n #include <cstdint>\n+#include <functional>\n #include <list>\n #include <mutex>\n #include <string>"
      },
      {
        "sha": "99963ea2e67e5380aa7c563ecf1abec6dddd4b68",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -1726,7 +1726,7 @@ BOOST_AUTO_TEST_CASE(script_assets_test)\n     bool exists = fs::exists(path);\n     BOOST_WARN_MESSAGE(exists, \"File $DIR_UNIT_TEST_DATA/script_assets_test.json not found, skipping script_assets_test\");\n     if (!exists) return;\n-    fs::ifstream file(path);\n+    fsbridge::ifstream file(path);\n     BOOST_CHECK(file.is_open());\n     file.seekg(0, std::ios::end);\n     size_t length = file.tellg();"
      },
      {
        "sha": "813d6e57797341a92a44f5d7e0d77b7426a55e6a",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 13,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -16,6 +16,7 @@\n #include <util/strencodings.h>\n #include <util/string.h>\n #include <util/translation.h>\n+#include <random.h>\n \n \n #if (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n@@ -399,7 +400,7 @@ const fs::path& ArgsManager::GetBlocksDirPath() const\n     if (!path.empty()) return path;\n \n     if (IsArgSet(\"-blocksdir\")) {\n-        path = fs::system_complete(GetArg(\"-blocksdir\", \"\"));\n+        path = fs::absolute(GetArg(\"-blocksdir\", \"\"));\n         if (!fs::is_directory(path)) {\n             path = \"\";\n             return path;\n@@ -426,7 +427,7 @@ const fs::path& ArgsManager::GetDataDir(bool net_specific) const\n \n     std::string datadir = GetArg(\"-datadir\", \"\");\n     if (!datadir.empty()) {\n-        path = fs::system_complete(datadir);\n+        path = fs::absolute(datadir);\n         if (!fs::is_directory(path)) {\n             path = \"\";\n             return path;\n@@ -806,7 +807,7 @@ fs::path GetDefaultDataDir()\n bool CheckDataDirOption()\n {\n     std::string datadir = gArgs.GetArg(\"-datadir\", \"\");\n-    return datadir.empty() || fs::is_directory(fs::system_complete(datadir));\n+    return datadir.empty() || fs::is_directory(fs::absolute(datadir));\n }\n \n fs::path GetConfigFile(const std::string& confPath)\n@@ -1306,16 +1307,6 @@ void SetupEnvironment()\n     // Set the default input/output charset is utf-8\n     SetConsoleCP(CP_UTF8);\n     SetConsoleOutputCP(CP_UTF8);\n-#endif\n-    // The path locale is lazy initialized and to avoid deinitialization errors\n-    // in multithreading environments, it is set explicitly by the main thread.\n-    // A dummy locale is used to extract the internal default locale, used by\n-    // fs::path, which is then used to explicitly imbue the path.\n-    std::locale loc = fs::path::imbue(std::locale::classic());\n-#ifndef WIN32\n-    fs::path::imbue(loc);\n-#else\n-    fs::path::imbue(std::locale(loc, new std::codecvt_utf8_utf16<wchar_t>()));\n #endif\n }\n "
      },
      {
        "sha": "0e6b6a363b305d1345f2f728603ffbdccb0a4fc3",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -619,12 +619,12 @@ bool BerkeleyDatabase::Backup(const std::string& strDest) const\n                     pathDest /= strFile;\n \n                 try {\n-                    if (fs::equivalent(pathSrc, pathDest)) {\n+                    if (fs::exists(pathDest) && fs::equivalent(pathSrc, pathDest)) {\n                         LogPrintf(\"cannot backup to wallet source file %s\\n\", pathDest.string());\n                         return false;\n                     }\n \n-                    fs::copy_file(pathSrc, pathDest, fs::copy_option::overwrite_if_exists);\n+                    fs::copy_file(pathSrc, pathDest, fs::copy_options::overwrite_existing);\n                     LogPrintf(\"copied %s to %s\\n\", strFile, pathDest.string());\n                     return true;\n                 } catch (const fs::filesystem_error& e) {"
      },
      {
        "sha": "66e6b87689751b2e37c6cd0a500feb9f7319c2f8",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -14,12 +14,12 @@ std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n {\n     const size_t offset = wallet_dir.string().size() + (wallet_dir == wallet_dir.root_name() ? 0 : 1);\n     std::vector<fs::path> paths;\n-    boost::system::error_code ec;\n+    std::error_code ec;\n \n     for (auto it = fs::recursive_directory_iterator(wallet_dir, ec); it != fs::recursive_directory_iterator(); it.increment(ec)) {\n         if (ec) {\n             if (fs::is_directory(*it)) {\n-                it.no_push();\n+                it.disable_recursion_pending();\n                 LogPrintf(\"%s: %s %s -- skipping.\\n\", __func__, ec.message(), it->path().string());\n             } else {\n                 LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), it->path().string());\n@@ -29,14 +29,13 @@ std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n \n         try {\n             // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-            // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n             const fs::path path = it->path().string().substr(offset);\n \n-            if (it->status().type() == fs::directory_file &&\n+            if (it->status().type() == fs::file_type::directory &&\n                 (IsBDBFile(BDBDataFile(it->path())) || IsSQLiteFile(SQLiteDataFile(it->path())))) {\n                 // Found a directory which contains wallet.dat btree file, add it as a wallet.\n                 paths.emplace_back(path);\n-            } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && IsBDBFile(it->path())) {\n+            } else if (it.depth() == 0 && it->symlink_status().type() == fs::file_type::regular && IsBDBFile(it->path())) {\n                 if (it->path().filename() == \"wallet.dat\") {\n                     // Found top-level wallet.dat btree file, add top level directory \"\"\n                     // as a wallet.\n@@ -51,7 +50,7 @@ std::vector<fs::path> ListDatabases(const fs::path& wallet_dir)\n             }\n         } catch (const std::exception& e) {\n             LogPrintf(\"%s: Error scanning %s: %s\\n\", __func__, it->path().string(), e.what());\n-            it.no_push();\n+            it.disable_recursion_pending();\n         }\n     }\n \n@@ -83,7 +82,7 @@ bool IsBDBFile(const fs::path& path)\n \n     // A Berkeley DB Btree file has at least 4K.\n     // This check also prevents opening lock files.\n-    boost::system::error_code ec;\n+    std::error_code ec;\n     auto size = fs::file_size(path, ec);\n     if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), path.string());\n     if (size < 4096) return false;\n@@ -107,7 +106,7 @@ bool IsSQLiteFile(const fs::path& path)\n     if (!fs::exists(path)) return false;\n \n     // A SQLite Database file is at least 512 bytes.\n-    boost::system::error_code ec;\n+    std::error_code ec;\n     auto size = fs::file_size(path, ec);\n     if (ec) LogPrintf(\"%s: %s %s\\n\", __func__, ec.message(), path.string());\n     if (size < 512) return false;"
      },
      {
        "sha": "a92aad2aa401b6b6c9bd46c78d700c99000fa25b",
        "filename": "src/wallet/dump.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/dump.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/dump.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/dump.h?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -5,6 +5,8 @@\n #ifndef BITCOIN_WALLET_DUMP_H\n #define BITCOIN_WALLET_DUMP_H\n \n+#include <vector>\n+\n #include <fs.h>\n \n class CWallet;"
      },
      {
        "sha": "5ea57102fa85185215bcea5f08e4d7e7ed498675",
        "filename": "src/wallet/load.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/load.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/load.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/load.cpp?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -20,7 +20,7 @@ bool VerifyWallets(interfaces::Chain& chain)\n {\n     if (gArgs.IsArgSet(\"-walletdir\")) {\n         fs::path wallet_dir = gArgs.GetArg(\"-walletdir\", \"\");\n-        boost::system::error_code error;\n+        std::error_code error;\n         // The canonical path cleans the path, preventing >1 Berkeley environment instances for the same directory\n         fs::path canonical_wallet_dir = fs::canonical(wallet_dir, error);\n         if (error || !fs::exists(wallet_dir)) {"
      },
      {
        "sha": "f24e3d1362f8cc53171323b9271fb970cc4920b4",
        "filename": "src/wallet/test/db_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/test/db_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/test/db_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/db_tests.cpp?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -25,7 +25,7 @@ BOOST_AUTO_TEST_CASE(getwalletenv_file)\n     std::string test_name = \"test_name.dat\";\n     const fs::path datadir = gArgs.GetDataDirNet();\n     fs::path file_path = datadir / test_name;\n-    std::ofstream f(file_path.BOOST_FILESYSTEM_C_STR);\n+    std::ofstream f(file_path);\n     f.close();\n \n     std::string filename;"
      },
      {
        "sha": "26784fb7e3c8664cb292cff240ada0d8a9bda701",
        "filename": "src/wallet/test/init_test_fixture.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/test/init_test_fixture.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/test/init_test_fixture.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/init_test_fixture.cpp?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -23,16 +23,16 @@ InitWalletDirTestingSetup::InitWalletDirTestingSetup(const std::string& chainNam\n     m_walletdir_path_cases[\"custom\"] = m_datadir / \"my_wallets\";\n     m_walletdir_path_cases[\"nonexistent\"] = m_datadir / \"path_does_not_exist\";\n     m_walletdir_path_cases[\"file\"] = m_datadir / \"not_a_directory.dat\";\n-    m_walletdir_path_cases[\"trailing\"] = m_datadir / \"wallets\" / sep;\n-    m_walletdir_path_cases[\"trailing2\"] = m_datadir / \"wallets\" / sep / sep;\n+    m_walletdir_path_cases[\"trailing\"] = m_datadir / (\"wallets\" + sep);\n+    m_walletdir_path_cases[\"trailing2\"] = m_datadir / (\"wallets\" + sep + sep);\n \n     fs::current_path(m_datadir);\n     m_walletdir_path_cases[\"relative\"] = \"wallets\";\n \n     fs::create_directories(m_walletdir_path_cases[\"default\"]);\n     fs::create_directories(m_walletdir_path_cases[\"custom\"]);\n     fs::create_directories(m_walletdir_path_cases[\"relative\"]);\n-    std::ofstream f(m_walletdir_path_cases[\"file\"].BOOST_FILESYSTEM_C_STR);\n+    std::ofstream f(m_walletdir_path_cases[\"file\"]);\n     f.close();\n }\n "
      },
      {
        "sha": "313ab45ba6b97eb1eb0634e46d35eefbfd5dffc6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -2458,9 +2458,9 @@ std::unique_ptr<WalletDatabase> MakeWalletDatabase(const std::string& name, cons\n     // 4. For backwards compatibility, the name of a data file in -walletdir.\n     const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), name);\n     fs::file_type path_type = fs::symlink_status(wallet_path).type();\n-    if (!(path_type == fs::file_not_found || path_type == fs::directory_file ||\n-          (path_type == fs::symlink_file && fs::is_directory(wallet_path)) ||\n-          (path_type == fs::regular_file && fs::path(name).filename() == name))) {\n+    if (!(path_type == fs::file_type::not_found || path_type == fs::file_type::directory ||\n+          (path_type == fs::file_type::symlink && fs::is_directory(wallet_path)) ||\n+          (path_type == fs::file_type::regular && fs::path(name).filename() == name))) {\n         error_string = Untranslated(strprintf(\n               \"Invalid -wallet path '%s'. -wallet path should point to a directory where wallet.dat and \"\n               \"database/log.?????????? files can be stored, a location where such a directory could be created, \""
      },
      {
        "sha": "8180ec9796c25ad2735b4b3f85e79414e579773a",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -1016,7 +1016,7 @@ std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const Databas\n {\n     bool exists;\n     try {\n-        exists = fs::symlink_status(path).type() != fs::file_not_found;\n+        exists = fs::symlink_status(path).type() != fs::file_type::not_found;\n     } catch (const fs::filesystem_error& e) {\n         error = Untranslated(strprintf(\"Failed to access database path '%s': %s\", path.string(), fsbridge::get_filesystem_error_message(e)));\n         status = DatabaseStatus::FAILED_BAD_PATH;"
      },
      {
        "sha": "0ff31fe669c0d204d69b2ffbb93a46cc3e43b9a1",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -141,7 +141,7 @@ def wallet_file(name):\n \n         # should raise rpc error if wallet path can't be created\n         err_code = -4 if self.options.descriptors else -1\n-        assert_raises_rpc_error(err_code, \"boost::filesystem::create_directory:\", self.nodes[0].createwallet, \"w8/bad\")\n+        assert_raises_rpc_error(err_code, \"filesystem error:\", self.nodes[0].createwallet, \"w8/bad\")\n \n         # check that all requested wallets were created\n         self.stop_node(0)"
      }
    ]
  },
  {
    "sha": "d2aff729222e788051dc453ae9d3ed51f8a37eaa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmFmZjcyOTIyMmU3ODgwNTFkYzQ1M2FlOWQzZWQ1MWY4YTM3ZWFh",
    "commit": {
      "author": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2020-06-11T08:04:33Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-06-24T10:42:49Z"
      },
      "message": "build: remove boost::filesystem usage",
      "tree": {
        "sha": "2791c4d16f4a7d97d8dfc7a0fbc7921beda8525a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2791c4d16f4a7d97d8dfc7a0fbc7921beda8525a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2aff729222e788051dc453ae9d3ed51f8a37eaa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDUYawACgkQLuufXMCV\nJsEk2hAAqxBNZWfLD3Sgw4C9m+27KwV2JXJsdQita/huSoBCtGiBAAMWyWedgb8o\nGOo4EcfU0IzE7DId+XNgpOJqy5wzDq18NhM5RQGWvp92Nt9wMFSkBcR7PuWnYS8t\n9R5iKj4A4lCfaurH6T9JFF+xKux/3jpuJ8o8i9i/uaHsaSg2RfY9WfgcQVnnNQD0\nyeTMLe/GbbeMujLLnXR0GgtIZvNxTVNYKYPQrIMR48IWxsm52JVxmNiGYqtklglI\nyctKM+GpCLZlox5p6mQjNFC/u5V2GVYSmLP5rKtcnc+e/YSW2faKKKE7ECDP59wo\nQWYIhWWgB+lb2qHTSkP7wz4iLvk/yhzrE9s7GJqZ3kKTKSyTUbYsqKIdu0rOPsLG\noM2jag/9drsDoD2CpHI0eXrIq/QiIe8oDh0na9sZTIHLt9aMU28nCpYmTiN23E6H\ncXVOXbqQ7nExSB1PnFbcFjKh4cRrs/PfJfVZVH0fUxM7mLVpqXzdDxFOGYjjdpje\nuDfpHWD+8RttzfgwH1OcHSgqqfCXVf/38FNbZJig9LfyPJlE4T+kX/JenZcvo05t\nxV9pmYd9wYgMCqF7puYqelVHriHX5OKNohGj1H86XELwf1nTsd1XrwfUZHd2IgDQ\nT2nZ60LckVpOmFyT+I05U6VFAHBbAWktwjpzB/RIVaoOPPrGytA=\n=czum\n-----END PGP SIGNATURE-----",
        "payload": "tree 2791c4d16f4a7d97d8dfc7a0fbc7921beda8525a\nparent 1e12e9844671a042898a842840d7c7ef66ddf377\nauthor Kiminuo <kiminuo@protonmail.com> 1591862673 +0200\ncommitter fanquake <fanquake@gmail.com> 1624531369 +0800\n\nbuild: remove boost::filesystem usage\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2aff729222e788051dc453ae9d3ed51f8a37eaa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2aff729222e788051dc453ae9d3ed51f8a37eaa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2aff729222e788051dc453ae9d3ed51f8a37eaa/comments",
    "author": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e12e9844671a042898a842840d7c7ef66ddf377",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e12e9844671a042898a842840d7c7ef66ddf377",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e12e9844671a042898a842840d7c7ef66ddf377"
      }
    ],
    "stats": {
      "total": 160,
      "additions": 7,
      "deletions": 153
    },
    "files": [
      {
        "sha": "12f7bc5e2ebc18f70537f3d271802e107bfacdad",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 118,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e12e9844671a042898a842840d7c7ef66ddf377/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e12e9844671a042898a842840d7c7ef66ddf377/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=1e12e9844671a042898a842840d7c7ef66ddf377",
        "patch": "@@ -1,118 +0,0 @@\n-# ===========================================================================\n-#   https://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_FILESYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for Filesystem library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_FILESYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 28\n-\n-AC_DEFUN([AX_BOOST_FILESYSTEM],\n-[\n-\tAC_ARG_WITH([boost-filesystem],\n-\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n-                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_filesystem_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_filesystem_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-\t\tLIBS_SAVED=$LIBS\n-\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n-\t\texport LIBS\n-\n-        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n-\t\t\t\t\t   ax_cv_boost_filesystem,\n-        [AC_LANG_PUSH([C++])\n-         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n-                                   [[using namespace boost::filesystem;\n-                                   path my_path( \"foo/bar/data.txt\" );\n-                                   return 0;]])],\n-\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_filesystem\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-\t\t    fi\n-            else\n-               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                   [link_filesystem=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::Filesystem library!)\n-            fi\n-\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\t\tLIBS=\"$LIBS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "730f8f8cc40f6bcc15bc4111b2d7c8da764e71c4",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2aff729222e788051dc453ae9d3ed51f8a37eaa/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2aff729222e788051dc453ae9d3ed51f8a37eaa/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "patch": "@@ -47,9 +47,6 @@\n /* define if the Boost library is available */\n #define HAVE_BOOST /**/\n \n-/* define if the Boost::Filesystem library is available */\n-#define HAVE_BOOST_FILESYSTEM /**/\n-\n /* define if external signer support is enabled (requires Boost::Process) */\n #define ENABLE_EXTERNAL_SIGNER /**/\n "
      },
      {
        "sha": "d8753ec21f4bfd95682e4f50be1c74e60b9456cf",
        "filename": "build_msvc/vcpkg.json",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2aff729222e788051dc453ae9d3ed51f8a37eaa/build_msvc/vcpkg.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2aff729222e788051dc453ae9d3ed51f8a37eaa/build_msvc/vcpkg.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg.json?ref=d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "patch": "@@ -3,7 +3,6 @@\n   \"version-string\": \"1\",\n   \"dependencies\": [\n     \"berkeleydb\",\n-    \"boost-filesystem\",\n     \"boost-multi-index\",\n     \"boost-process\",\n     \"boost-signals2\","
      },
      {
        "sha": "fdef30d703287cfecdccfa4eaa57068890e3a70f",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2aff729222e788051dc453ae9d3ed51f8a37eaa/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2aff729222e788051dc453ae9d3ed51f8a37eaa/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_asan\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-test-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n export DOCKER_NAME_TAG=ubuntu:hirsute\n export NO_DEPENDS=1\n export GOAL=\"install\""
      },
      {
        "sha": "96cc867341115d91abb996fb81f6614fbb7f54f5",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2aff729222e788051dc453ae9d3ed51f8a37eaa/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2aff729222e788051dc453ae9d3ed51f8a37eaa/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "patch": "@@ -8,7 +8,7 @@ export LC_ALL=C.UTF-8\n \n export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n export CONTAINER_NAME=ci_native_fuzz\n-export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev\"\n+export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-test-dev\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false"
      },
      {
        "sha": "97cfcae1aa4283c96bc93ecabd2f3c152bc6ae0b",
        "filename": "ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2aff729222e788051dc453ae9d3ed51f8a37eaa/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2aff729222e788051dc453ae9d3ed51f8a37eaa/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz_with_valgrind.sh?ref=d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "patch": "@@ -8,7 +8,7 @@ export LC_ALL=C.UTF-8\n \n export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n export CONTAINER_NAME=ci_native_fuzz_valgrind\n-export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev valgrind\"\n+export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-test-dev valgrind\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false"
      },
      {
        "sha": "74f52347da35f132018bcce9771691bebd47c21c",
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2aff729222e788051dc453ae9d3ed51f8a37eaa/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2aff729222e788051dc453ae9d3ed51f8a37eaa/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_valgrind\n-export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libsqlite3-dev\"\n+export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-test-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libsqlite3-dev\"\n export USE_VALGRIND=1\n export NO_DEPENDS=1\n export TEST_RUNNER_EXTRA=\"--exclude rpc_bind\"  # Excluded for now, see https://github.com/bitcoin/bitcoin/issues/17765#issuecomment-602068547"
      },
      {
        "sha": "a95c405335e0d4d4eec28f3034c88baf815282f0",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2aff729222e788051dc453ae9d3ed51f8a37eaa/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2aff729222e788051dc453ae9d3ed51f8a37eaa/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "patch": "@@ -1423,13 +1423,12 @@ if test x$use_boost = xyes; then\n     AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n   fi\n   AX_BOOST_SYSTEM\n-  AX_BOOST_FILESYSTEM\n \n   if test x$suppress_external_warnings != xno; then\n     BOOST_CPPFLAGS=SUPPRESS_WARNINGS($BOOST_CPPFLAGS)\n   fi\n \n-  BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB\"\n+  BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB\"\n fi\n \n if test \"x$use_external_signer\" != xno; then"
      },
      {
        "sha": "35f3d792ffd70bcdb6ba4b59be2e301aa8ee0a9d",
        "filename": "contrib/valgrind.supp",
        "status": "modified",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2aff729222e788051dc453ae9d3ed51f8a37eaa/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2aff729222e788051dc453ae9d3ed51f8a37eaa/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "patch": "@@ -118,12 +118,6 @@\n    fun:__wcsnlen_sse4_1\n    fun:wcsnrtombs\n }\n-{\n-   Suppress wcsnrtombs warning (remove after removing boost::fs)\n-   Memcheck:Cond\n-   ...\n-   fun:_ZN5boost10filesystem6detail11unique_pathERKNS0_4pathEPNS_6system10error_codeE\n-}\n {\n    Suppress boost warning\n    Memcheck:Leak\n@@ -134,21 +128,6 @@\n    fun:_ZN5boost9unit_test14unit_test_mainEPFbvEiPPc\n    fun:main\n }\n-{\n-   Suppress boost::filesystem warning (fixed in boost 1.70: https://github.com/boostorg/filesystem/commit/bbe9d1771e5d679b3f10c42a58fc81f7e8c024a9)\n-   Memcheck:Cond\n-   fun:_ZN5boost10filesystem6detail28directory_iterator_incrementERNS0_18directory_iteratorEPNS_6system10error_codeE\n-   ...\n-   obj:*/libboost_filesystem.so.*\n-}\n-{\n-   Suppress boost::filesystem warning (could be related: https://stackoverflow.com/questions/9830182/function-boostfilesystemcomplete-being-reported-as-possible-memory-leak-by-v)\n-   Memcheck:Leak\n-   match-leak-kinds: reachable\n-   fun:_Znwm\n-   ...\n-   fun:_ZN5boost10filesystem8absoluteERKNS0_4pathES3_\n-}\n {\n    Suppress boost still reachable memory warning\n    Memcheck:Leak"
      },
      {
        "sha": "6e7e4b6e4cbead29201f3c78a5a59031cd703379",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2aff729222e788051dc453ae9d3ed51f8a37eaa/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2aff729222e788051dc453ae9d3ed51f8a37eaa/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "patch": "@@ -22,7 +22,7 @@ $(package)_toolset_$(host_os)=clang\n else\n $(package)_toolset_$(host_os)=gcc\n endif\n-$(package)_config_libraries=filesystem,system,test\n+$(package)_config_libraries=system,test\n $(package)_cxxflags=-std=c++17 -fvisibility=hidden\n $(package)_cxxflags_linux=-fPIC\n $(package)_cxxflags_android=-fPIC"
      },
      {
        "sha": "21d65dd1d00490c8027302d3defe6f529970337f",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2aff729222e788051dc453ae9d3ed51f8a37eaa/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2aff729222e788051dc453ae9d3ed51f8a37eaa/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "patch": "@@ -82,7 +82,7 @@ Build requirements:\n \n Now, you can either build from self-compiled [depends](/depends/README.md) or install the required dependencies:\n \n-    sudo apt-get install libevent-dev libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev\n+    sudo apt-get install libevent-dev libboost-dev libboost-system-dev libboost-test-dev\n \n Berkeley DB is required for the wallet.\n "
      },
      {
        "sha": "06025c6539639c9aed2d52a4ece6c70656f5d8ad",
        "filename": "test/lint/lint-includes.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2aff729222e788051dc453ae9d3ed51f8a37eaa/test/lint/lint-includes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2aff729222e788051dc453ae9d3ed51f8a37eaa/test/lint/lint-includes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-includes.sh?ref=d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "patch": "@@ -54,8 +54,6 @@ EXPECTED_BOOST_INCLUDES=(\n     boost/algorithm/string/replace.hpp\n     boost/algorithm/string/split.hpp\n     boost/date_time/posix_time/posix_time.hpp\n-    boost/filesystem.hpp\n-    boost/filesystem/fstream.hpp\n     boost/multi_index/hashed_index.hpp\n     boost/multi_index/ordered_index.hpp\n     boost/multi_index/sequenced_index.hpp"
      }
    ]
  },
  {
    "sha": "9d296065b4b5124f357389f4447edefdeec5c4e3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDI5NjA2NWI0YjUxMjRmMzU3Mzg5ZjQ0NDdlZGVmZGVlYzVjNGUz",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-12-22T03:55:04Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-06-24T10:43:03Z"
      },
      "message": "build: remove Boost::system usage",
      "tree": {
        "sha": "41de3012e67f64d811b2b107b9c668c5dc4c089b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41de3012e67f64d811b2b107b9c668c5dc4c089b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d296065b4b5124f357389f4447edefdeec5c4e3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDUYbkACgkQLuufXMCV\nJsGMRxAAnuKrJof9Hv0u1JmjfznSMJdHWDpug2JqRoB6Adz4L7/zhV1KmINm/pXa\nmZMis8mXAfGV3o/CNCfg7EybmqsAztd+PV0IwIhHrRtIB3TWfibaY4rVaIJQ1SeB\n/GdmSo9ggiZCbLesk5afAycpLv04s5cSclVJ4vIUqxIqLjLOJYjkCtYsiz9pE9/5\n4/W1UXAZdaWc5zwB3WjUiq5IXcS+Y2JS5nW0cxrwyPUh/wpRYzO8s5zsKM1ShE86\n/vucqep/qFLcDPVoBYiP//u2cDGbtoaYXragDX/JDlcg1ticxygMth4qnNtFD+He\n9qdGRJA6u6MuHbj2fvrK+Y/81S7nm5CoucWz8lJ5PFugOieTeSZ7Typ7ju8rMmNl\nUEOi3xNVmA27XvtxHLcagtm95Yn9+a/wC28xhRKJtpRWHMka2anXXwoyIIU2usHx\n3nGsgREDgJnJGW95FMYtnVVR4wLl+IvOgjh0jaVRQUPmo/AgFnUAitdrMtdDDQxh\nnkEv5iiLhdy7oVd8leEdMu7TMfX4tSkzOZ7HMLI4txWz+wti7u+tBKSPiZaxVQFf\ncrTR/BzZ7fWuPd69swWkPlCJiYIRCyy6Y1LMqlsAHcwla1C/eQiJcqy0YWad1afj\nE+/oIg8uhPN+NO7mxyeSbkXpYMYTdc6kiSl9ksnOzM4w89oWxyo=\n=WlWe\n-----END PGP SIGNATURE-----",
        "payload": "tree 41de3012e67f64d811b2b107b9c668c5dc4c089b\nparent d2aff729222e788051dc453ae9d3ed51f8a37eaa\nauthor fanquake <fanquake@gmail.com> 1608609304 +0800\ncommitter fanquake <fanquake@gmail.com> 1624531383 +0800\n\nbuild: remove Boost::system usage\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d296065b4b5124f357389f4447edefdeec5c4e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d296065b4b5124f357389f4447edefdeec5c4e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d296065b4b5124f357389f4447edefdeec5c4e3/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2aff729222e788051dc453ae9d3ed51f8a37eaa"
      }
    ],
    "stats": {
      "total": 139,
      "additions": 7,
      "deletions": 132
    },
    "files": [
      {
        "sha": "323e2a676a8e0428008dd4563416ce141e278f33",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2aff729222e788051dc453ae9d3ed51f8a37eaa/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2aff729222e788051dc453ae9d3ed51f8a37eaa/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=d2aff729222e788051dc453ae9d3ed51f8a37eaa",
        "patch": "@@ -1,121 +0,0 @@\n-# ===========================================================================\n-#     https://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_SYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for System library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_SYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_SYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2008 Michael Tindal\n-#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 20\n-\n-AC_DEFUN([AX_BOOST_SYSTEM],\n-[\n-\tAC_ARG_WITH([boost-system],\n-\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n-                   [use the System library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_system_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_system_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::System library is available,\n-\t\t\t\t\t   ax_cv_boost_system,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\t\t\t CXXFLAGS=\n-\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n-\t\t\t\t    [[boost::system::error_category *a = 0;]])],\n-                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_system\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                   [link_system=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the Boost::System library!)\n-            fi\n-\t\t\tif test \"x$link_system\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "a201c57082398a7c3f341502ff6179d9f524aa1d",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d296065b4b5124f357389f4447edefdeec5c4e3/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d296065b4b5124f357389f4447edefdeec5c4e3/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=9d296065b4b5124f357389f4447edefdeec5c4e3",
        "patch": "@@ -50,9 +50,6 @@\n /* define if external signer support is enabled (requires Boost::Process) */\n #define ENABLE_EXTERNAL_SIGNER /**/\n \n-/* define if the Boost::System library is available */\n-#define HAVE_BOOST_SYSTEM /**/\n-\n /* define if the Boost::Unit_Test_Framework library is available */\n #define HAVE_BOOST_UNIT_TEST_FRAMEWORK /**/\n "
      },
      {
        "sha": "0a9355f2d66800ca180d63ed62882cf5cb8cf3f7",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d296065b4b5124f357389f4447edefdeec5c4e3/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d296065b4b5124f357389f4447edefdeec5c4e3/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=9d296065b4b5124f357389f4447edefdeec5c4e3",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_asan\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-test-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-dev libboost-test-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libqrencode-dev libsqlite3-dev\"\n export DOCKER_NAME_TAG=ubuntu:hirsute\n export NO_DEPENDS=1\n export GOAL=\"install\""
      },
      {
        "sha": "73dc20b35cb57580317c96f551129bc922fc05f8",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d296065b4b5124f357389f4447edefdeec5c4e3/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d296065b4b5124f357389f4447edefdeec5c4e3/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=9d296065b4b5124f357389f4447edefdeec5c4e3",
        "patch": "@@ -8,7 +8,7 @@ export LC_ALL=C.UTF-8\n \n export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n export CONTAINER_NAME=ci_native_fuzz\n-export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-test-dev\"\n+export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-dev libboost-test-dev\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false"
      },
      {
        "sha": "df1147eeb73293d6d84a71aac663b3c6321573aa",
        "filename": "ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d296065b4b5124f357389f4447edefdeec5c4e3/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d296065b4b5124f357389f4447edefdeec5c4e3/ci/test/00_setup_env_native_fuzz_with_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz_with_valgrind.sh?ref=9d296065b4b5124f357389f4447edefdeec5c4e3",
        "patch": "@@ -8,7 +8,7 @@ export LC_ALL=C.UTF-8\n \n export DOCKER_NAME_TAG=\"ubuntu:20.04\"\n export CONTAINER_NAME=ci_native_fuzz_valgrind\n-export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-test-dev valgrind\"\n+export PACKAGES=\"clang llvm python3 libevent-dev bsdmainutils libboost-dev libboost-test-dev valgrind\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false"
      },
      {
        "sha": "0f5e5ffb297c52ef1bfd12adbe8ec32ca321087a",
        "filename": "ci/test/00_setup_env_native_valgrind.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d296065b4b5124f357389f4447edefdeec5c4e3/ci/test/00_setup_env_native_valgrind.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d296065b4b5124f357389f4447edefdeec5c4e3/ci/test/00_setup_env_native_valgrind.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_valgrind.sh?ref=9d296065b4b5124f357389f4447edefdeec5c4e3",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export CONTAINER_NAME=ci_native_valgrind\n-export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-dev libboost-system-dev libboost-test-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libsqlite3-dev\"\n+export PACKAGES=\"valgrind clang llvm python3-zmq libevent-dev bsdmainutils libboost-dev libboost-test-dev libdb5.3++-dev libminiupnpc-dev libnatpmp-dev libzmq3-dev libsqlite3-dev\"\n export USE_VALGRIND=1\n export NO_DEPENDS=1\n export TEST_RUNNER_EXTRA=\"--exclude rpc_bind\"  # Excluded for now, see https://github.com/bitcoin/bitcoin/issues/17765#issuecomment-602068547"
      },
      {
        "sha": "e56312720dbe331d745c6371776f5214dadd4b2b",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d296065b4b5124f357389f4447edefdeec5c4e3/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d296065b4b5124f357389f4447edefdeec5c4e3/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9d296065b4b5124f357389f4447edefdeec5c4e3",
        "patch": "@@ -1422,13 +1422,12 @@ if test x$use_boost = xyes; then\n   if test x$want_boost = xno; then\n     AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n   fi\n-  AX_BOOST_SYSTEM\n \n   if test x$suppress_external_warnings != xno; then\n     BOOST_CPPFLAGS=SUPPRESS_WARNINGS($BOOST_CPPFLAGS)\n   fi\n \n-  BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB\"\n+  BOOST_LIBS=\"$BOOST_LDFLAGS\"\n fi\n \n if test \"x$use_external_signer\" != xno; then"
      },
      {
        "sha": "698ae448918c662172c2fa35378b960109630c4d",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d296065b4b5124f357389f4447edefdeec5c4e3/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d296065b4b5124f357389f4447edefdeec5c4e3/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=9d296065b4b5124f357389f4447edefdeec5c4e3",
        "patch": "@@ -22,7 +22,7 @@ $(package)_toolset_$(host_os)=clang\n else\n $(package)_toolset_$(host_os)=gcc\n endif\n-$(package)_config_libraries=system,test\n+$(package)_config_libraries=test\n $(package)_cxxflags=-std=c++17 -fvisibility=hidden\n $(package)_cxxflags_linux=-fPIC\n $(package)_cxxflags_android=-fPIC"
      },
      {
        "sha": "e73536146e667f8b99371b37756cef7a100296f9",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d296065b4b5124f357389f4447edefdeec5c4e3/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d296065b4b5124f357389f4447edefdeec5c4e3/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=9d296065b4b5124f357389f4447edefdeec5c4e3",
        "patch": "@@ -82,7 +82,7 @@ Build requirements:\n \n Now, you can either build from self-compiled [depends](/depends/README.md) or install the required dependencies:\n \n-    sudo apt-get install libevent-dev libboost-dev libboost-system-dev libboost-test-dev\n+    sudo apt-get install libevent-dev libboost-dev libboost-test-dev\n \n Berkeley DB is required for the wallet.\n "
      }
    ]
  },
  {
    "sha": "bc035d626d8361e19057659942d60806bd59ce4d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYzAzNWQ2MjZkODM2MWUxOTA1NzY1OTk0MmQ2MDgwNmJkNTljZTRk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-01T13:54:07Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-06-24T10:43:05Z"
      },
      "message": "[NO MERGE] ci: use Debian Bullseye in ARM CI",
      "tree": {
        "sha": "658f68a3ba434a845971092606ad0dc01e8275f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/658f68a3ba434a845971092606ad0dc01e8275f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc035d626d8361e19057659942d60806bd59ce4d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmDUYbkACgkQLuufXMCV\nJsHJXBAApVEWP3AqVww2tU5+HnzPds1dgiagIkkBGeBWpRVVYGGN4t330Ai1cC1c\nSNrlSS7DEf8+0dJYzamQGferjc9/vdgzvAFm6LHsSV2gZl/C5lZrIptQlthkkCpr\ninsW2YGZfkjRDijxpxrjWIVor0cJR97X3yE3hp24FCYAYyh1B2oVwGNm9rU28kl0\nL/iUlrtrCpYADZw4Ls3Uq5cA6l+gkTlypAIO1Ai4a+mdia6rwNg400Ya+KS8Rcrs\nBdBCuEIuPMlw6fAPkxon5acxD7nKekrUoVQ2WgSVH2gMJiuzSjqGLrgH/5DU4aMp\nG2OnsLXJKjJB5uUd6ZpWIiXl8renEhOkdhv3uzjR4lSHXbLxykZBvNMcTjAZc1q2\nsPI014GXECp5Q3W4y9xbbEcq85qUx9dlxsKmfv8MAfbokdZnQdpCRHyC7h656J4k\nqhnGZcPK7CCIgShvSG//OUZ8h5eKieKmo3lt4yTu6wpCpgNoMBnZEbVqQH+ov1i5\n6g6UKNuySxkIF4WQRG9qvSXlH4tzFdd+faF14c077sm8pjMqonUcggbgEPcR/5+L\n9mAFkv2DvKr6fGvyG2KshJ/ieRzfoWN269qvmmDZXGxZEZGQobBWLkVExuYe1O+A\nmwxxgm12SXh1qZ0BeBS7aqxHVTvE9o8vBM7FaIKx+5F+oGWU6b4=\n=Rmt4\n-----END PGP SIGNATURE-----",
        "payload": "tree 658f68a3ba434a845971092606ad0dc01e8275f5\nparent 9d296065b4b5124f357389f4447edefdeec5c4e3\nauthor fanquake <fanquake@gmail.com> 1617285247 +0800\ncommitter fanquake <fanquake@gmail.com> 1624531385 +0800\n\n[NO MERGE] ci: use Debian Bullseye in ARM CI\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc035d626d8361e19057659942d60806bd59ce4d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bc035d626d8361e19057659942d60806bd59ce4d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc035d626d8361e19057659942d60806bd59ce4d/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d296065b4b5124f357389f4447edefdeec5c4e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d296065b4b5124f357389f4447edefdeec5c4e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d296065b4b5124f357389f4447edefdeec5c4e3"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "de030dafea046318abef6e11599c37745b9c604a",
        "filename": ".cirrus.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc035d626d8361e19057659942d60806bd59ce4d/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc035d626d8361e19057659942d60806bd59ce4d/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=bc035d626d8361e19057659942d60806bd59ce4d",
        "patch": "@@ -84,10 +84,10 @@ task:\n     << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n \n task:\n-  name: 'ARM [unit tests, no functional tests] [buster]'\n+  name: 'ARM [unit tests, no functional tests] [bullseye]'\n   << : *GLOBAL_TASK_TEMPLATE\n   container:\n-    image: debian:buster\n+    image: debian:bullseye\n   env:\n     << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV\n     FILE_ENV: \"./ci/test/00_setup_env_arm.sh\""
      },
      {
        "sha": "93f8017d988adecac362bed88597bdee64066b6a",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc035d626d8361e19057659942d60806bd59ce4d/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc035d626d8361e19057659942d60806bd59ce4d/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=bc035d626d8361e19057659942d60806bd59ce4d",
        "patch": "@@ -18,7 +18,7 @@ if [ -n \"$QEMU_USER_CMD\" ]; then\n fi\n export CONTAINER_NAME=ci_arm_linux\n # Use debian to avoid 404 apt errors when cross compiling\n-export DOCKER_NAME_TAG=\"debian:buster\"\n+export DOCKER_NAME_TAG=\"debian:bullseye\"\n export USE_BUSY_BOX=true\n export RUN_UNIT_TESTS=true\n export RUN_FUNCTIONAL_TESTS=false"
      }
    ]
  },
  {
    "sha": "17eff90922f005e88cba33fba1d14225e0474f93",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxN2VmZjkwOTIyZjAwNWU4OGNiYTMzZmJhMWQxNDIyNWUwNDc0Zjkz",
    "commit": {
      "author": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2021-06-24T13:46:00Z"
      },
      "committer": {
        "name": "Kiminuo",
        "email": "kiminuo@protonmail.com",
        "date": "2021-06-24T13:46:00Z"
      },
      "message": "Use `fs::canonical(p)` and remove `StripRedundantLastElementsOfPath` helper function.",
      "tree": {
        "sha": "909d8fc929bb070aee2ab1cf7eceb71a2518a778",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/909d8fc929bb070aee2ab1cf7eceb71a2518a778"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17eff90922f005e88cba33fba1d14225e0474f93",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17eff90922f005e88cba33fba1d14225e0474f93",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17eff90922f005e88cba33fba1d14225e0474f93",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17eff90922f005e88cba33fba1d14225e0474f93/comments",
    "author": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bc035d626d8361e19057659942d60806bd59ce4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc035d626d8361e19057659942d60806bd59ce4d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc035d626d8361e19057659942d60806bd59ce4d"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 2,
      "deletions": 15
    },
    "files": [
      {
        "sha": "558a7670d8cbc42280e230003511a7d53693d4b7",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 15,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17eff90922f005e88cba33fba1d14225e0474f93/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17eff90922f005e88cba33fba1d14225e0474f93/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=17eff90922f005e88cba33fba1d14225e0474f93",
        "patch": "@@ -236,19 +236,6 @@ static bool CheckValid(const std::string& key, const util::SettingsValue& val, u\n     return true;\n }\n \n-namespace {\n-fs::path StripRedundantLastElementsOfPath(const fs::path& path)\n-{\n-    auto result = path;\n-    while (result.filename().string() == \".\") {\n-        result = result.parent_path();\n-    }\n-\n-    assert(fs::equivalent(result, path));\n-    return result;\n-}\n-} // namespace\n-\n // Define default constructor and destructor that are not inline, so code instantiating this class doesn't need to\n // #include class definitions for all members.\n // For example, m_settings has an internal dependency on univalue.\n@@ -412,7 +399,7 @@ const fs::path& ArgsManager::GetBlocksDirPath() const\n     path /= BaseParams().DataDir();\n     path /= \"blocks\";\n     fs::create_directories(path);\n-    path = StripRedundantLastElementsOfPath(path);\n+    path = fs::canonical(path);\n     return path;\n }\n \n@@ -443,7 +430,7 @@ const fs::path& ArgsManager::GetDataDir(bool net_specific) const\n         fs::create_directories(path / \"wallets\");\n     }\n \n-    path = StripRedundantLastElementsOfPath(path);\n+    path = fs::canonical(path);\n     return path;\n }\n "
      }
    ]
  }
]