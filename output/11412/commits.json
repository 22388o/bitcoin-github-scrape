[
  {
    "sha": "6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Y2FkODg3MWQxNmRlYmNjNGIzZDlhZDJmMTFlNzU0M2YwZTFiNWVm",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-09-28T03:32:29Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-09-28T03:38:42Z"
      },
      "message": "Simplify GetWarnings()",
      "tree": {
        "sha": "7f8d6acef9ede1712560dd8b6d1b0a41f0c48457",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f8d6acef9ede1712560dd8b6d1b0a41f0c48457"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAlnMbsQACgkQHrd2uwPH\nki2ZNA/+InEwdVlgXNJuD8LKWtUfJOeQJjPH/DnOPmfODjL+Pc9Zy2wfUBb7yljM\n7kc91E8Ui8rrnL/SOXPG3Dbb1i8m+VkX9eavBF4T5vrEWh9+9mbqxjMWK0DJuMjL\nahuGNKEnvZfHJB66TL4/AtrwQaZPCPT2riPSbxFfasmOdHm2Un9p1K25RYE37Pgw\nUdOtzROPX4kiDOu0X2kBgOT6Otbw19XTcOzDM0NpiD1XcccY4Iugiy0jLYyC5jcP\nG87DgP32yUB1IBA2/e27ahvW6z/G+1wGCSYiZos3tqTe8MucYrnJosl/1fwcebxx\nGDsF34h6GvN8my8oi8NfNw6lyp726QQuMrbtv2caVcL2TWByP6xj9eQiFPjyE4Bn\nSR4mIFRfmX5lA/JpP14eDcFvtayX3v4DJ/p9VajOq63dYIq6sDVFaItxzfyeD2z2\n8SngRErLSvZflWaTgImZgQ56yY4NwuwisiNYj8pPRPdqM0xULVfYgKAsJ7ju53ij\nmpIqJtkmxt6ESWFy8FLZj9UjMc6PRN9BnaVXakNT9lAkHFmKfR3PvKkMMJJf71bd\nPKfw145jFhNhrmlPhlae0muJFy67i21fRN9tloHK/JHk3AulmhMmv5/EuUKj+grY\nkJLjgnAgUgGvK093UGJEXSsuJmLoLZgC+B7MC+NzWJ3X1h9sCps=\n=MSfZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 7f8d6acef9ede1712560dd8b6d1b0a41f0c48457\nparent d90a00eabed0f3f1acea4834ad489484d0012372\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1506569549 -0700\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1506569922 -0700\n\nSimplify GetWarnings()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d90a00eabed0f3f1acea4834ad489484d0012372",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d90a00eabed0f3f1acea4834ad489484d0012372",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d90a00eabed0f3f1acea4834ad489484d0012372"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 23,
      "deletions": 34
    },
    "files": [
      {
        "sha": "22a448ff9783bfde29fef45a54be96428bfe857e",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef",
        "patch": "@@ -271,7 +271,7 @@ BitcoinCore::BitcoinCore():\n void BitcoinCore::handleRunawayException(const std::exception *e)\n {\n     PrintExceptionContinue(e, \"Runaway exception\");\n-    Q_EMIT runawayException(QString::fromStdString(GetWarnings(\"gui\")));\n+    Q_EMIT runawayException(QString::fromStdString(GetWarnings(true)));\n }\n \n bool BitcoinCore::baseInitialize()\n@@ -721,10 +721,10 @@ int main(int argc, char *argv[])\n         }\n     } catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"Runaway exception\");\n-        app.handleRunawayException(QString::fromStdString(GetWarnings(\"gui\")));\n+        app.handleRunawayException(QString::fromStdString(GetWarnings(true)));\n     } catch (...) {\n         PrintExceptionContinue(nullptr, \"Runaway exception\");\n-        app.handleRunawayException(QString::fromStdString(GetWarnings(\"gui\")));\n+        app.handleRunawayException(QString::fromStdString(GetWarnings(true)));\n     }\n     return rv;\n }"
      },
      {
        "sha": "e14db8aec743ca683dda1cbbbd9e392ea1a5c1d2",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef",
        "patch": "@@ -203,7 +203,7 @@ bool ClientModel::getNetworkActive() const\n \n QString ClientModel::getStatusBarWarnings() const\n {\n-    return QString::fromStdString(GetWarnings(\"gui\"));\n+    return QString::fromStdString(GetWarnings(true));\n }\n \n OptionsModel *ClientModel::getOptionsModel()"
      },
      {
        "sha": "7b44d2a06546b522448fe39c1906ab432b62e19d",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef",
        "patch": "@@ -217,7 +217,7 @@ UniValue getmininginfo(const JSONRPCRequest& request)\n     obj.push_back(Pair(\"currentblockweight\", (uint64_t)nLastBlockWeight));\n     obj.push_back(Pair(\"currentblocktx\",   (uint64_t)nLastBlockTx));\n     obj.push_back(Pair(\"difficulty\",       (double)GetDifficulty()));\n-    obj.push_back(Pair(\"errors\",           GetWarnings(\"statusbar\")));\n+    obj.push_back(Pair(\"errors\",           GetWarnings()));\n     obj.push_back(Pair(\"networkhashps\",    getnetworkhashps(request)));\n     obj.push_back(Pair(\"pooledtx\",         (uint64_t)mempool.size()));\n     obj.push_back(Pair(\"chain\",            Params().NetworkIDString()));"
      },
      {
        "sha": "c3dd42c5af8dc6df4f70eed50f5c9de6aa2d85a0",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef",
        "patch": "@@ -483,7 +483,7 @@ UniValue getnetworkinfo(const JSONRPCRequest& request)\n         }\n     }\n     obj.push_back(Pair(\"localaddresses\", localAddresses));\n-    obj.push_back(Pair(\"warnings\",       GetWarnings(\"statusbar\")));\n+    obj.push_back(Pair(\"warnings\",       GetWarnings()));\n     return obj;\n }\n "
      },
      {
        "sha": "9693086e6692e5385eab17de38f4d76b42accb5a",
        "filename": "src/warnings.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 21,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/src/warnings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/src/warnings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.cpp?ref=6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef",
        "patch": "@@ -37,47 +37,39 @@ void SetfLargeWorkInvalidChainFound(bool flag)\n     fLargeWorkInvalidChainFound = flag;\n }\n \n-std::string GetWarnings(const std::string& strFor)\n+std::string GetWarnings(bool htmlMultiline)\n {\n-    std::string strStatusBar;\n-    std::string strRPC;\n-    std::string strGUI;\n+    std::string strPlaintext;\n+    std::string strHTML;\n     const std::string uiAlertSeperator = \"<hr />\";\n \n     LOCK(cs_warnings);\n \n     if (!CLIENT_VERSION_IS_RELEASE) {\n-        strStatusBar = \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\";\n-        strGUI = _(\"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\");\n+        strPlaintext = \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\";\n+        strHTML = _(\"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\");\n     }\n \n     if (gArgs.GetBoolArg(\"-testsafemode\", DEFAULT_TESTSAFEMODE))\n-        strStatusBar = strRPC = strGUI = \"testsafemode enabled\";\n+        strPlaintext = strHTML = \"testsafemode enabled\";\n \n     // Misc warnings like out of disk space and clock is wrong\n     if (strMiscWarning != \"\")\n     {\n-        strStatusBar = strMiscWarning;\n-        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + strMiscWarning;\n+        strPlaintext = strMiscWarning;\n+        strHTML += (strHTML.empty() ? \"\" : uiAlertSeperator) + strMiscWarning;\n     }\n \n     if (fLargeWorkForkFound)\n     {\n-        strStatusBar = strRPC = \"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\";\n-        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\");\n+        strPlaintext = \"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\";\n+        strHTML += (strHTML.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\");\n     }\n     else if (fLargeWorkInvalidChainFound)\n     {\n-        strStatusBar = strRPC = \"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\";\n-        strGUI += (strGUI.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\");\n+        strPlaintext = \"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\";\n+        strHTML += (strHTML.empty() ? \"\" : uiAlertSeperator) + _(\"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\");\n     }\n \n-    if (strFor == \"gui\")\n-        return strGUI;\n-    else if (strFor == \"statusbar\")\n-        return strStatusBar;\n-    else if (strFor == \"rpc\")\n-        return strRPC;\n-    assert(!\"GetWarnings(): invalid parameter\");\n-    return \"error\";\n+    return (htmlMultiline ? strHTML : strPlaintext);\n }"
      },
      {
        "sha": "8547a7e82f2900ed33b36e75ab91048550d66159",
        "filename": "src/warnings.h",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/src/warnings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef/src/warnings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.h?ref=6cad8871d16debcc4b3d9ad2f11e7543f0e1b5ef",
        "patch": "@@ -13,14 +13,11 @@ void SetMiscWarning(const std::string& strWarning);\n void SetfLargeWorkForkFound(bool flag);\n bool GetfLargeWorkForkFound();\n void SetfLargeWorkInvalidChainFound(bool flag);\n-/** Format a string that describes several potential problems detected by the core.\n- * strFor can have three values:\n- * - \"rpc\": get critical warnings, which should put the client in safe mode if non-empty\n- * - \"statusbar\": get all warnings\n- * - \"gui\": get all warnings, translated (where possible) for GUI\n- * This function only returns the highest priority warning of the set selected by strFor.\n+/** Format a string that describes several potential detected problems.\n+ * If htmlMultiline is set to true, this functiomn returns multiple (and translated) warnings seperated by a <hr> tag.\n+ * Otherwise only the highest priority warning will be returned.\n  */\n-std::string GetWarnings(const std::string& strFor);\n+std::string GetWarnings(bool htmlMultiline = false);\n \n static const bool DEFAULT_TESTSAFEMODE = false;\n "
      }
    ]
  }
]