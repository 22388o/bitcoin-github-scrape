MarcoFalke,2016-10-25T18:38:17Z,Thanks!\n\nutACK 3df625f49911d0af512dc53d3b9b4a71f3dcd754\n,https://github.com/bitcoin/bitcoin/pull/9016#issuecomment-256132419,256132419,
instagibbs,2016-10-25T19:20:38Z,"On second thought, I might want to pass the error up through CommitTransaction. Right now it's only logged in debug.log in all the codepaths. Or I could change the error message to direct the user to check the debug log.\n",https://github.com/bitcoin/bitcoin/pull/9016#issuecomment-256148267,256148267,
laanwj,2016-10-26T08:09:11Z,> Or I could change the error message to direct the user to check the debug log.\n\nDoes this require enabling any debug flags?\n,https://github.com/bitcoin/bitcoin/pull/9016#issuecomment-256278363,256278363,
laanwj,2016-10-26T08:09:46Z,"Concept ACK, though I'd really prefer reporting the specific problem inline instead of directing the user at the debug log.\n",https://github.com/bitcoin/bitcoin/pull/9016#issuecomment-256278479,256278479,
instagibbs,2016-10-26T18:52:47Z,"@laanwj Done. This should show up during rpc test failures as well, \n",https://github.com/bitcoin/bitcoin/pull/9016#issuecomment-256443067,256443067,
jonasschnelli,2016-10-28T09:06:39Z,Nice.\nutACK 169bdabe14ef5988ff92a7370114edc85b070b27\nPossible GUI extension (in another PR) would be to pass the `state.GetRejectReason()` down to the error display logic and allow the user to get the rejection details in the dialog. But meh.\n,https://github.com/bitcoin/bitcoin/pull/9016#issuecomment-256872398,256872398,
laanwj,2016-10-28T11:49:31Z,utACK 169bdab\n,https://github.com/bitcoin/bitcoin/pull/9016#issuecomment-256900978,256900978,
MarcoFalke,2016-10-28T13:21:24Z,post merge re-utACK 169bdabe14ef5988ff92a7370114edc85b070b27\n,https://github.com/bitcoin/bitcoin/pull/9016#issuecomment-256918470,256918470,
MarcoFalke,2016-10-25T18:39:06Z,"Nit: I think you can just remove this comment, as it is outdated since at least 0.12.0\n",https://github.com/bitcoin/bitcoin/pull/9016#discussion_r84971670,84971670,src/wallet/wallet.cpp
instagibbs,2016-10-25T18:42:20Z,Could you explain how so?\n,https://github.com/bitcoin/bitcoin/pull/9016#discussion_r84972428,84972428,src/wallet/wallet.cpp
MarcoFalke,2016-10-25T18:50:33Z,"The [0.12.0 release notes](https://github.com/bitcoin/bitcoin/blob/9bdf5269f8860b41455df1c6d82dac0d9c858e8f/doc/release-notes/release-notes-0.12.0.md#memory-pool-limiting) says ""[...] limits [...] the length and size of unconfirmed transaction chains that are allowed in the mempool (generally limiting the length of unconfirmed chains to 25 transactions, with a total size of 101 KB).""\n\nSo claimin",https://github.com/bitcoin/bitcoin/pull/9016#discussion_r84974274,84974274,src/wallet/wallet.cpp
instagibbs,2016-10-25T18:53:27Z,"Oh, is ""must not"" being used in the descriptive sense rather than prescriptive? (I read it as ""oh it better not or there is trouble)If so, we should definitely re-write this.  \n\nAlso, I've encountered that specific error before so I'd agree with you.\n",https://github.com/bitcoin/bitcoin/pull/9016#discussion_r84974931,84974931,src/wallet/wallet.cpp
MarcoFalke,2016-10-25T19:03:27Z,"IIRC the trouble means that you end up with transactions in your wallet that may never reach the mempool or a block.\n\nBut consider my nit a Âµnit, it can be done in a later pull.\n",https://github.com/bitcoin/bitcoin/pull/9016#discussion_r84977092,84977092,src/wallet/wallet.cpp
