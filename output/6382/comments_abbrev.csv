jtimon,2015-07-21T17:39:01Z,Rebased after #6381. Also rebased back in time to 0.11: https://github.com/jtimon/bitcoin/tree/chainparams-sizetest-0.11\n,https://github.com/bitcoin/bitcoin/pull/6382#issuecomment-123411884,123411884,
JornC,2015-07-30T15:56:58Z,"Spun up a node and block explorer on top of this PR:\n\nhttp://sizenet.yogh.io/#json:getinfo\nhttp://sizenet.yogh.io/#json:getblockchaininfo\n\nAvailability subject to change, will jump back to the main chain when no longer needed - if needed at all.\n\n(still synching)\n",https://github.com/bitcoin/bitcoin/pull/6382#issuecomment-126379747,126379747,
jtimon,2015-08-21T23:58:17Z,Rebased and fixed (see https://github.com/bitcoin/bitcoin/pull/6077#issuecomment-133584041 ).\n,https://github.com/bitcoin/bitcoin/pull/6382#issuecomment-133592681,133592681,
jtimon,2015-09-04T19:18:49Z,This wasn't passing travis because of a small bug in https://github.com/jtimon/bitcoin/commit/989e37459b7c2f6505f7c98d7fe40e7eec5aba99 (#6625). I will wait for travis to approve this to force push #6625.\n,https://github.com/bitcoin/bitcoin/pull/6382#issuecomment-137830558,137830558,
TheBlueMatt,2015-10-02T07:38:26Z,"NACK. I think the code should exist for people to use for testing, but I dont think Bitcoin Core is the place to support a ton of test/benchmark chains. This is different from the regtest/testnet chains, which exist to create a bitcoin-in-a-box for testing, but which try to mimic Bitcoin where convinient for testing, not to test changes to Bitcoin itself.\n",https://github.com/bitcoin/bitcoin/pull/6382#issuecomment-144944653,144944653,
priestc,2015-10-20T03:40:43Z,"I think it might be a better idea to just make one testnet with unlimited blocksize, rather than multiple networks with all different size limits. What is the 20MB test chain going to teach us that the 50MB chain will? When testing scalability, it makes the most sense to have as many people working together than to have multiple people working on multiple chains. Take a look at the bip that I rece",https://github.com/bitcoin/bitcoin/pull/6382#issuecomment-149422929,149422929,
jtimon,2015-10-20T11:16:54Z,> I think it might be a better idea to just make one testnet with unlimited blocksize.\n\nYou can effectively do that as well (just set -blocksize to `std::numeric_limits<uint64_t>::max()`). But this also allows you to simulate networks with smaller sizes and to test schism forks scenarios.\n\n@TheBlueMatt what about the individual steps (to make things like this more maintainable on top of master,https://github.com/bitcoin/bitcoin/pull/6382#issuecomment-149530907,149530907,
jtimon,2015-10-21T11:38:09Z,Rebased \n,https://github.com/bitcoin/bitcoin/pull/6382#issuecomment-149861984,149861984,
laanwj,2015-10-27T08:08:18Z,"> NACK. I think the code should exist for people to use for testing, but I dont think Bitcoin Core is the place to support a ton of test/benchmark chain\n\nI tend to agree with @bluematt here. Let's not overcomplicate bitcoind with all kinds of specific purpose test code.\n",https://github.com/bitcoin/bitcoin/pull/6382#issuecomment-151408412,151408412,
jtimon,2015-10-29T21:39:10Z,Precisely this PR makes creating a new testchain easier by removing specific purpose code for different chains that is not always properly encapsulated. Then it prepares code for a future change in block size and then it adds a new testchain to test different block sizes. The last part only makes sense if it is a single extremely simple commit like  https://github.com/jtimon/bitcoin/commit/b7bce5c,https://github.com/bitcoin/bitcoin/pull/6382#issuecomment-152335936,152335936,
jtimon,2015-11-10T16:57:35Z,Rebased after #6908 has being merged.\n,https://github.com/bitcoin/bitcoin/pull/6382#issuecomment-155485797,155485797,
jtimon,2016-01-13T20:12:39Z,Closing. It will be eventually replaced with a similar one that doesn't use block size as an example.\n,https://github.com/bitcoin/bitcoin/pull/6382#issuecomment-171419383,171419383,
