[
  {
    "sha": "09eb201b1b3ed808e5167245149f5635d4eaf6f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOWViMjAxYjFiM2VkODA4ZTUxNjcyNDUxNDlmNTYzNWQ0ZWFmNmY5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-06-16T14:30:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-06-16T15:42:54Z"
      },
      "message": "Remove `using namespace std` from header file\n\nIt's considered bad form to import things into the global namespace in a\nheader. Put it in the cpp files where it is needed instead.",
      "tree": {
        "sha": "0fc95f43c7355321cbd2b79603edfdcea42e962d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0fc95f43c7355321cbd2b79603edfdcea42e962d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09eb201b1b3ed808e5167245149f5635d4eaf6f9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09eb201b1b3ed808e5167245149f5635d4eaf6f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/09eb201b1b3ed808e5167245149f5635d4eaf6f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09eb201b1b3ed808e5167245149f5635d4eaf6f9/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "807691ca96a1a4b0655f6ea80b721b940dd29a39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/807691ca96a1a4b0655f6ea80b721b940dd29a39",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/807691ca96a1a4b0655f6ea80b721b940dd29a39"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 21,
      "deletions": 13
    },
    "files": [
      {
        "sha": "40b45415c4c549a97b4af6072a845fae74661a16",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=09eb201b1b3ed808e5167245149f5635d4eaf6f9",
        "patch": "@@ -12,6 +12,7 @@\n \n #include <boost/filesystem/operations.hpp>\n \n+using namespace std;\n using namespace boost;\n using namespace boost::asio;\n using namespace json_spirit;"
      },
      {
        "sha": "6b2cfa1d1ff036a1835de21a48ddcff479ee9db6",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=09eb201b1b3ed808e5167245149f5635d4eaf6f9",
        "patch": "@@ -10,6 +10,7 @@\n \n #include <boost/assign/list_of.hpp>\n \n+using namespace std;\n using namespace boost::assign;\n \n //"
      },
      {
        "sha": "28a51cbb0c2ced3e85f97584945cadac50cc51ee",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 10,
        "deletions": 12,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=09eb201b1b3ed808e5167245149f5635d4eaf6f9",
        "patch": "@@ -12,13 +12,11 @@\n \n #include <vector>\n \n-using namespace std;\n-\n typedef unsigned char MessageStartChars[MESSAGE_START_SIZE];\n \n struct CDNSSeedData {\n-    string name, host;\n-    CDNSSeedData(const string &strName, const string &strHost) : name(strName), host(strHost) {}\n+    std::string name, host;\n+    CDNSSeedData(const std::string &strName, const std::string &strHost) : name(strName), host(strHost) {}\n };\n \n /**\n@@ -51,7 +49,7 @@ class CChainParams\n \n     const uint256& HashGenesisBlock() const { return hashGenesisBlock; }\n     const MessageStartChars& MessageStart() const { return pchMessageStart; }\n-    const vector<unsigned char>& AlertKey() const { return vAlertPubKey; }\n+    const std::vector<unsigned char>& AlertKey() const { return vAlertPubKey; }\n     int GetDefaultPort() const { return nDefaultPort; }\n     const uint256& ProofOfWorkLimit() const { return bnProofOfWorkLimit; }\n     int SubsidyHalvingInterval() const { return nSubsidyHalvingInterval; }\n@@ -74,39 +72,39 @@ class CChainParams\n     bool RequireStandard() const { return fRequireStandard; }\n     /* Make standard checks */\n     bool RPCisTestNet() const { return fRPCisTestNet; }\n-    const string& DataDir() const { return strDataDir; }\n+    const std::string& DataDir() const { return strDataDir; }\n     /* Make miner stop after a block is found. In RPC, don't return\n      * until nGenProcLimit blocks are generated */\n     bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n     Network NetworkID() const { return networkID; }\n     /* Return the BIP70 network string (main, test or regtest) */\n     std::string NetworkIDString() const { return strNetworkID; }\n-    const vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n+    const std::vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n     const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n-    const vector<CAddress>& FixedSeeds() const { return vFixedSeeds; }\n+    const std::vector<CAddress>& FixedSeeds() const { return vFixedSeeds; }\n     int RPCPort() const { return nRPCPort; }\n protected:\n     CChainParams() {}\n \n     uint256 hashGenesisBlock;\n     MessageStartChars pchMessageStart;\n     // Raw pub key bytes for the broadcast alert signing key.\n-    vector<unsigned char> vAlertPubKey;\n+    std::vector<unsigned char> vAlertPubKey;\n     int nDefaultPort;\n     int nRPCPort;\n     uint256 bnProofOfWorkLimit;\n     int nSubsidyHalvingInterval;\n     int nEnforceBlockUpgradeMajority;\n     int nRejectBlockOutdatedMajority;\n     int nToCheckBlockUpgradeMajority;\n-    string strDataDir;\n+    std::string strDataDir;\n     int nMinerThreads;\n-    vector<CDNSSeedData> vSeeds;\n+    std::vector<CDNSSeedData> vSeeds;\n     std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n     Network networkID;\n     std::string strNetworkID;\n     CBlock genesis;\n-    vector<CAddress> vFixedSeeds;\n+    std::vector<CAddress> vFixedSeeds;\n     bool fRequireRPCPassword;\n     bool fMiningRequiresPeers;\n     bool fDefaultCheckMemPool;"
      },
      {
        "sha": "87779efbbdd448f069b3939804d650b8a215a482",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=09eb201b1b3ed808e5167245149f5635d4eaf6f9",
        "patch": "@@ -11,6 +11,8 @@\n #ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #endif\n+\n+using namespace std;\n //////////////////////////////////////////////////////////////////////////////\n //\n // BitcoinMiner"
      },
      {
        "sha": "464f995eb63315b14a9bf9935203dd9d2e975abe",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=09eb201b1b3ed808e5167245149f5635d4eaf6f9",
        "patch": "@@ -17,6 +17,7 @@\n #include <QDebug>\n #include <QSslCertificate>\n \n+using namespace std;\n \n class SSLVerifyError : public std::runtime_error\n {"
      },
      {
        "sha": "3c4861a4d4bdb81ccdb1c82a637e4e68d7a39b94",
        "filename": "src/qt/paymentrequestplus.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/qt/paymentrequestplus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/qt/paymentrequestplus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.h?ref=09eb201b1b3ed808e5167245149f5635d4eaf6f9",
        "patch": "@@ -24,7 +24,7 @@ class PaymentRequestPlus\n     PaymentRequestPlus() { }\n \n     bool parse(const QByteArray& data);\n-    bool SerializeToString(string* output) const;\n+    bool SerializeToString(std::string* output) const;\n \n     bool IsInitialized() const;\n     QString getPKIType() const;"
      },
      {
        "sha": "49923a1afc7842791a7f653f4613e9eb22318c4d",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=09eb201b1b3ed808e5167245149f5635d4eaf6f9",
        "patch": "@@ -44,6 +44,7 @@\n #include <QUrlQuery>\n #endif\n \n+using namespace std;\n using namespace boost;\n \n const int BITCOIN_IPC_CONNECT_TIMEOUT = 1000; // milliseconds"
      },
      {
        "sha": "61da3373fddd3cdae63c9fb4c5e39fa6ce4a5b43",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=09eb201b1b3ed808e5167245149f5635d4eaf6f9",
        "patch": "@@ -18,6 +18,8 @@\n #include <stdint.h>\n #include <string>\n \n+using namespace std;\n+\n QString TransactionDesc::FormatTxStatus(const CWalletTx& wtx)\n {\n     AssertLockHeld(cs_main);"
      },
      {
        "sha": "2f633a26c86c2d074a28d89aa2cb9b68abcf8086",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09eb201b1b3ed808e5167245149f5635d4eaf6f9/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=09eb201b1b3ed808e5167245149f5635d4eaf6f9",
        "patch": "@@ -24,6 +24,8 @@\n #include <QSet>\n #include <QTimer>\n \n+using namespace std;\n+\n WalletModel::WalletModel(CWallet *wallet, OptionsModel *optionsModel, QObject *parent) :\n     QObject(parent), wallet(wallet), optionsModel(optionsModel), addressTableModel(0),\n     transactionTableModel(0),"
      }
    ]
  }
]