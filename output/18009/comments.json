[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578776222",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18009#issuecomment-578776222",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18009",
    "id": 578776222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODc3NjIyMg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-27T14:34:29Z",
    "updated_at": "2020-01-27T14:34:29Z",
    "author_association": "MEMBER",
    "body": "When updating FuzzedDataProvider, please include the exact commit id that it was updated to",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578776222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578783445",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18009#issuecomment-578783445",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18009",
    "id": 578783445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODc4MzQ0NQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-27T14:48:04Z",
    "updated_at": "2020-01-27T14:48:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MarcoFalke Good point! Done! :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578783445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578962830",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18009#issuecomment-578962830",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18009",
    "id": 578962830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODk2MjgzMA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-27T21:31:21Z",
    "updated_at": "2020-01-27T21:31:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MarcoFalke Thanks for reviewing! Feedback addressed. Please re-review :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578962830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580059989",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18009#issuecomment-580059989",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18009",
    "id": 580059989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDA1OTk4OQ==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-30T02:49:41Z",
    "updated_at": "2020-01-30T02:51:40Z",
    "author_association": "MEMBER",
    "body": "Would be helpful to comment on \"why\" in each commit message - e.g. I was curious to look into why the `FuzzedDataProvider.h` update was necessary and found that the `ConsumeFloatingPoint` was introduced [recently](https://github.com/llvm/llvm-project/commit/df3b465c9c4fed5045470d3eb5b65c14e6de71e6#diff-09bd829935aa18be3ed32f464a607c3bR211-R214). https://chris.beams.io/posts/git-commit/#why-not-how",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580059989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/371441873",
    "pull_request_review_id": 348923513,
    "id": 371441873,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ0MTg3Mw==",
    "diff_hunk": "@@ -0,0 +1,111 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <tinyformat.h>\n+#include <util/strencodings.h>\n+\n+#include <algorithm>\n+#include <cassert>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    const std::string format_string = fuzzed_data_provider.ConsumeRandomLengthString(64);\n+\n+    const int digits_in_format_specifier = std::count_if(format_string.begin(), format_string.end(), IsDigit);\n+\n+    // Avoid triggering the following crash bug:\n+    // * strprintf(\"%987654321000000:\", 1);\n+    //\n+    // Avoid triggering the following OOM bug:\n+    // * strprintf(\"%.222222200000000$\", 1.1);\n+    //\n+    // Upstream bug report: https://github.com/c42f/tinyformat/issues/70\n+    if (format_string.find(\"%\") != std::string::npos && digits_in_format_specifier >= 7) {\n+        return;\n+    }\n+\n+    // Avoid triggering the following crash bug:\n+    // * strprintf(\"%1$*1$*\", -11111111);\n+    //\n+    // Upstream bug report: https://github.com/c42f/tinyformat/issues/70\n+    if (format_string.find(\"%\") != std::string::npos && format_string.find(\"$\") != std::string::npos && format_string.find(\"*\") != std::string::npos && digits_in_format_specifier > 0) {\n+        return;\n+    }\n+\n+    try {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 14)) {\n+        case 0:\n+            (void)strprintf(format_string, fuzzed_data_provider.ConsumeRandomLengthString(32));\n+            break;\n+        case 1:\n+            (void)strprintf(format_string, fuzzed_data_provider.ConsumeRandomLengthString(32).c_str());",
    "path": "src/test/fuzz/strprintf.cpp",
    "position": 104,
    "original_position": 48,
    "commit_id": "cc668d06fb71463fd406df761b0e89e25d4de968",
    "original_commit_id": "4534f1ef16a5786034997167173707e3b8ce0397",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why can this not be run in `case 0`? Seems odd to require the fuzzer to pick a path, when both of them can be run subsequently",
    "created_at": "2020-01-27T19:38:43Z",
    "updated_at": "2020-01-27T21:32:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18009#discussion_r371441873",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/371441873"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18009#discussion_r371441873"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/371441873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 104,
    "original_line": 104,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/371443148",
    "pull_request_review_id": 348923513,
    "id": 371443148,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ0MzE0OA==",
    "diff_hunk": "@@ -0,0 +1,111 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <tinyformat.h>\n+#include <util/strencodings.h>\n+\n+#include <algorithm>\n+#include <cassert>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    const std::string format_string = fuzzed_data_provider.ConsumeRandomLengthString(64);\n+\n+    const int digits_in_format_specifier = std::count_if(format_string.begin(), format_string.end(), IsDigit);\n+\n+    // Avoid triggering the following crash bug:\n+    // * strprintf(\"%987654321000000:\", 1);\n+    //\n+    // Avoid triggering the following OOM bug:\n+    // * strprintf(\"%.222222200000000$\", 1.1);\n+    //\n+    // Upstream bug report: https://github.com/c42f/tinyformat/issues/70\n+    if (format_string.find(\"%\") != std::string::npos && digits_in_format_specifier >= 7) {\n+        return;\n+    }\n+\n+    // Avoid triggering the following crash bug:\n+    // * strprintf(\"%1$*1$*\", -11111111);\n+    //\n+    // Upstream bug report: https://github.com/c42f/tinyformat/issues/70\n+    if (format_string.find(\"%\") != std::string::npos && format_string.find(\"$\") != std::string::npos && format_string.find(\"*\") != std::string::npos && digits_in_format_specifier > 0) {\n+        return;\n+    }\n+\n+    try {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 14)) {\n+        case 0:\n+            (void)strprintf(format_string, fuzzed_data_provider.ConsumeRandomLengthString(32));\n+            break;\n+        case 1:\n+            (void)strprintf(format_string, fuzzed_data_provider.ConsumeRandomLengthString(32).c_str());\n+            break;\n+        case 2:\n+            (void)strprintf(format_string, fuzzed_data_provider.ConsumeIntegral<signed char>());\n+            (void)strprintf(format_string, (signed char*)nullptr);\n+            break;\n+        case 3:\n+            (void)strprintf(format_string, fuzzed_data_provider.ConsumeIntegral<unsigned char>());\n+            (void)strprintf(format_string, (unsigned char*)nullptr);",
    "path": "src/test/fuzz/strprintf.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "cc668d06fb71463fd406df761b0e89e25d4de968",
    "original_commit_id": "4534f1ef16a5786034997167173707e3b8ce0397",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why are the nullptr things under `case 2` and `case 3`? Seems odd to put them there, when nothing needs to be parsed. They can be executed outside of any `case`, no?",
    "created_at": "2020-01-27T19:41:22Z",
    "updated_at": "2020-01-27T21:32:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18009#discussion_r371443148",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/371443148"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18009#discussion_r371443148"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/371443148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 56,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/371443527",
    "pull_request_review_id": 348923513,
    "id": 371443527,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ0MzUyNw==",
    "diff_hunk": "@@ -0,0 +1,111 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <tinyformat.h>\n+#include <util/strencodings.h>\n+\n+#include <algorithm>\n+#include <cassert>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    const std::string format_string = fuzzed_data_provider.ConsumeRandomLengthString(64);\n+\n+    const int digits_in_format_specifier = std::count_if(format_string.begin(), format_string.end(), IsDigit);\n+\n+    // Avoid triggering the following crash bug:\n+    // * strprintf(\"%987654321000000:\", 1);\n+    //\n+    // Avoid triggering the following OOM bug:\n+    // * strprintf(\"%.222222200000000$\", 1.1);\n+    //\n+    // Upstream bug report: https://github.com/c42f/tinyformat/issues/70\n+    if (format_string.find(\"%\") != std::string::npos && digits_in_format_specifier >= 7) {\n+        return;\n+    }\n+\n+    // Avoid triggering the following crash bug:\n+    // * strprintf(\"%1$*1$*\", -11111111);\n+    //\n+    // Upstream bug report: https://github.com/c42f/tinyformat/issues/70\n+    if (format_string.find(\"%\") != std::string::npos && format_string.find(\"$\") != std::string::npos && format_string.find(\"*\") != std::string::npos && digits_in_format_specifier > 0) {\n+        return;\n+    }\n+\n+    try {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 14)) {\n+        case 0:\n+            (void)strprintf(format_string, fuzzed_data_provider.ConsumeRandomLengthString(32));\n+            break;\n+        case 1:\n+            (void)strprintf(format_string, fuzzed_data_provider.ConsumeRandomLengthString(32).c_str());\n+            break;\n+        case 2:\n+            (void)strprintf(format_string, fuzzed_data_provider.ConsumeIntegral<signed char>());\n+            (void)strprintf(format_string, (signed char*)nullptr);\n+            break;\n+        case 3:\n+            (void)strprintf(format_string, fuzzed_data_provider.ConsumeIntegral<unsigned char>());\n+            (void)strprintf(format_string, (unsigned char*)nullptr);\n+            break;\n+        case 4:\n+            (void)strprintf(format_string, fuzzed_data_provider.ConsumeIntegral<char>());\n+            // Avoid triggering the following crash bug:\n+            // * strprintf(\"%.1s\", (char*)nullptr);\n+            //\n+            // (void)strprintf(format_string, (char*)nullptr);",
    "path": "src/test/fuzz/strprintf.cpp",
    "position": null,
    "original_position": 63,
    "commit_id": "cc668d06fb71463fd406df761b0e89e25d4de968",
    "original_commit_id": "4534f1ef16a5786034997167173707e3b8ce0397",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Same here and for all cases below",
    "created_at": "2020-01-27T19:42:02Z",
    "updated_at": "2020-01-27T21:32:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18009#discussion_r371443527",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18009",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/371443527"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18009#discussion_r371443527"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18009"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/371443527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 63,
    "side": "RIGHT"
  }
]