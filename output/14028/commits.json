[
  {
    "sha": "1d9aa008d6e043c29c3c5b030a6d04278aea233b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDlhYTAwOGQ2ZTA0M2MyOWMzYzViMDMwYTZkMDQyNzhhZWEyMzNi",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-08-23T09:01:53Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-08-27T16:50:13Z"
      },
      "message": "Explicitly initialize prevector _union",
      "tree": {
        "sha": "218230d862bf07f8707ad68beb921a9149a42215",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/218230d862bf07f8707ad68beb921a9149a42215"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d9aa008d6e043c29c3c5b030a6d04278aea233b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbhCvGAAoJEG7l83hfeLNFUOoIAK1PR2EzkA2Jl6A3BI2aCwjq\nnsfOGSq720ZWYhjnRrSq552mvH0ZyWYQzGRcDBK1CxJGvgLFdzq5uLZirW4tS0qZ\nh0BLLaWzO6A6h085YzPSDPg56xHH9F2ZVYmEF/p1nmyAtT0niAUsM6McICWfUBf5\nHX24L1QOIxKlfyflZRwPEfM3ahINOZHVK63zoKtRiokCDWsG1b7tpu2165ZPXfbH\nLYTqf448fZ/TXd6g7cFKkLiASFCF/jOkt5AVU7TDgpJgj44hTopCosm36/1N03Fz\n9eoCFHv5xZzoQxT2rmnLmz2GlsuirJfFCdGRiYO3cnHwlKsJh3RwncGNsj0NYw4=\n=U3I2\n-----END PGP SIGNATURE-----",
        "payload": "tree 218230d862bf07f8707ad68beb921a9149a42215\nparent f180e81d5780805a28bcc71c2bb6b16076336c3c\nauthor Ben Woosley <ben.woosley@gmail.com> 1535014913 -0700\ncommitter Ben Woosley <ben.woosley@gmail.com> 1535388613 -0700\n\nExplicitly initialize prevector _union\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d9aa008d6e043c29c3c5b030a6d04278aea233b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d9aa008d6e043c29c3c5b030a6d04278aea233b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d9aa008d6e043c29c3c5b030a6d04278aea233b/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f180e81d5780805a28bcc71c2bb6b16076336c3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f180e81d5780805a28bcc71c2bb6b16076336c3c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f180e81d5780805a28bcc71c2bb6b16076336c3c"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6ddb6f321f69e14499d5fe829a44c5a5c5307196",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d9aa008d6e043c29c3c5b030a6d04278aea233b/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d9aa008d6e043c29c3c5b030a6d04278aea233b/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=1d9aa008d6e043c29c3c5b030a6d04278aea233b",
        "patch": "@@ -248,32 +248,32 @@ class prevector {\n \n     prevector() : _size(0), _union{{}} {}\n \n-    explicit prevector(size_type n) : _size(0) {\n+    explicit prevector(size_type n) : prevector() {\n         resize(n);\n     }\n \n-    explicit prevector(size_type n, const T& val) : _size(0) {\n+    explicit prevector(size_type n, const T& val) : prevector() {\n         change_capacity(n);\n         _size += n;\n         fill(item_ptr(0), n, val);\n     }\n \n     template<typename InputIterator>\n-    prevector(InputIterator first, InputIterator last) : _size(0) {\n+    prevector(InputIterator first, InputIterator last) : prevector() {\n         size_type n = last - first;\n         change_capacity(n);\n         _size += n;\n         fill(item_ptr(0), first, last);\n     }\n \n-    prevector(const prevector<N, T, Size, Diff>& other) : _size(0) {\n+    prevector(const prevector<N, T, Size, Diff>& other) : prevector() {\n         size_type n = other.size();\n         change_capacity(n);\n         _size += n;\n         fill(item_ptr(0), other.begin(),  other.end());\n     }\n \n-    prevector(prevector<N, T, Size, Diff>&& other) : _size(0) {\n+    prevector(prevector<N, T, Size, Diff>&& other) : prevector() {\n         swap(other);\n     }\n "
      }
    ]
  }
]