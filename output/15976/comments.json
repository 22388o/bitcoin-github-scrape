[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490282681",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-490282681",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15976",
    "id": 490282681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDI4MjY4MQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-07T22:50:22Z",
    "updated_at": "2019-05-28T07:26:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16092](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16092.html) (Don't use global (external) symbols for symbols that are used in only one translation unit by practicalswift)\n* [#15981](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15981.html) (Use __func__ for log messages by Bushstar)\n* [#15921](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15921.html) (Tidy up ValidationState interface by jnewbery)\n* [#15759](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15759.html) ([p2p] Add 2 outbound blocks-only connections by sdaftuar)\n* [#15192](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15192.html) (Add missing cs_main locks in ThreadImport(...)/Shutdown(...)/gettxoutsetinfo(...)/InitScriptExecutionCache(). Add missing locking annotations. by practicalswift)\n* [#15191](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15191.html) (validation: Add missing cs_{LastBlockFile,nBlockSequenceId} locks in PruneAndFlush() and UnloadBlockIndex(). Add missing locking annotations. by practicalswift)\n* [#14856](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14856.html) (net: remove more CConnman globals (theuni) by dongcarl)\n* [#14193](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14193.html) (validation: Add missing mempool locks by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490282681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490557315",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-490557315",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15976",
    "id": 490557315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDU1NzMxNQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-08T16:30:42Z",
    "updated_at": "2019-05-08T16:30:42Z",
    "author_association": "MEMBER",
    "body": "I dislike that member functions that previously could (and should) only be called in the validation module are now callable from anywhere. To make it worse, they are easily confused e.g. `::ActivateBestChain` vs `CChainState::ActivateBestChain`. The only solution I could think of is to mark the public methods that are not supposed to be called outside of validation with an underscore or something (similar to python).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490557315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490559432",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-490559432",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15976",
    "id": 490559432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDU1OTQzMg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-08T16:36:38Z",
    "updated_at": "2019-05-08T16:36:38Z",
    "author_association": "MEMBER",
    "body": "An alternative could be to remove the global methods (e.g. `::ActivateBestChain`) and inline them into the members?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490559432/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490572428",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-490572428",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15976",
    "id": 490572428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDU3MjQyOA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-08T17:15:01Z",
    "updated_at": "2019-05-08T17:15:01Z",
    "author_association": "MEMBER",
    "body": "> could (and should) only be called in the validation module are now callable from anywhere\r\n\r\nWould you say the root cause of that is that ::ChainstateActive is global? Maybe we can make that only available through interfaces? There's not that many places we access member functions from.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490572428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490576375",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-490576375",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15976",
    "id": 490576375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDU3NjM3NQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-08T17:26:31Z",
    "updated_at": "2019-05-08T17:26:31Z",
    "author_association": "MEMBER",
    "body": "> Would you say the root cause of that is that ::ChainstateActive is global?\r\n\r\nAlso, `chainActive`, `mapBlockIndex`, .... I fail to see how an interface could help here. Shouldn't `CChainState` be the interface?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490576375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490582434",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-490582434",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15976",
    "id": 490582434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDU4MjQzNA==",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-08T17:43:23Z",
    "updated_at": "2019-05-08T17:43:23Z",
    "author_association": "MEMBER",
    "body": "> An alternative could be to remove the global methods (e.g. ::ActivateBestChain) and inline them into the members?\r\n\r\nI like this idea but left it on the table in the interest of minimizing the diff.\r\n\r\nIn general, my preference would be to have anything outside of validation deal with the CChainState interface (`::ChainstateActive()` or other instances), and have anything only to be used by validation in a static function outside of the header file. I didn't initially do this (to keep the diff small), but I'm happy to add commits if that seems preferable.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/490582434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/492485689",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-492485689",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15976",
    "id": 492485689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQ4NTY4OQ==",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-15T03:04:22Z",
    "updated_at": "2019-05-15T03:04:22Z",
    "author_association": "MEMBER",
    "body": "Thanks for the good feedback @Sjors @MarcoFalke @ryanofsky. I agree with the comments so far and have incorporated all of them aside from those noted above. Initially I hadn't touched the global `Flush` functions because I thought it'd create an unnecessarily large diff, but it turns out that it's negligible.\r\n\r\nI took the liberty of renaming the global function equivalents for clarity, and in the process I did notice something sort of interesting. `PruneAndFlush()` doesn't seem to actually do any flushing, just pruning, and so I'm calling it `PruneBlockFiles()` accordingly. This might be worth more general investigation because other parts of the code seem to assume that call flushes chainstate (which doesn't seem correct).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/492485689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/492665786",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-492665786",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15976",
    "id": 492665786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjY2NTc4Ng==",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-15T13:57:09Z",
    "updated_at": "2019-05-15T13:57:09Z",
    "author_association": "MEMBER",
    "body": "> PruneAndFlush() doesn't seem to actually do any flushing\r\n\r\nMy mistake: flushes *do* happen when calling `PruneAndFlush()`. I've undone that particular rename and removed the comment I added. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/492665786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/495359473",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-495359473",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15976",
    "id": 495359473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTM1OTQ3Mw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T19:46:27Z",
    "updated_at": "2019-05-23T19:46:27Z",
    "author_association": "MEMBER",
    "body": "My comments are mostly meant to minimize the changed lines, so purely stylistic. I guess you shouldn't address them unless you need to invalidate the reviews for other reasons.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/495359473/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/496769376",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-496769376",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15976",
    "id": 496769376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Njc2OTM3Ng==",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?u=a1574ca2038ff1dfaa9a7764c59ea5ff4f305b5d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-29T03:27:20Z",
    "updated_at": "2019-05-29T03:53:37Z",
    "author_association": "MEMBER",
    "body": "utACK https://github.com/bitcoin/bitcoin/pull/15976/commits/403e677c9ebbf9744733010e6b0c2d1b182ee850 no need to address my nits herein",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/496769376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/497425233",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-497425233",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15976",
    "id": 497425233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzQyNTIzMw==",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-30T18:02:57Z",
    "updated_at": "2019-05-30T18:02:57Z",
    "author_association": "MEMBER",
    "body": "4 utACKs on this - is there anyone else who wants to give it a look before merge?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/497425233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499018489",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-499018489",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15976",
    "id": 499018489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTAxODQ4OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-05T09:54:55Z",
    "updated_at": "2019-06-05T09:54:55Z",
    "author_association": "MEMBER",
    "body": "utACK 403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/499018489/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/281782731",
    "pull_request_review_id": 234700228,
    "id": 281782731,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTc4MjczMQ==",
    "diff_hunk": "@@ -34,7 +35,6 @@\n #include <timedata.h>\n #include <tinyformat.h>\n #include <txdb.h>\n-#include <txmempool.h>",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "0f7a07c4a455be9bfe6197ae4fc3b5edaba7e277",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style-nit: Why shuffle the includes for no reason?",
    "created_at": "2019-05-07T18:53:19Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r281782731",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/281782731"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r281782731"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/281782731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 37,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/281783295",
    "pull_request_review_id": 234701028,
    "id": 281783295,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MTc4MzI5NQ==",
    "diff_hunk": "@@ -34,7 +35,6 @@\n #include <timedata.h>\n #include <tinyformat.h>\n #include <txdb.h>\n-#include <txmempool.h>",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "0f7a07c4a455be9bfe6197ae4fc3b5edaba7e277",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oops, will fix.",
    "created_at": "2019-05-07T18:54:52Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r281783295",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/281783295"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r281783295"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/281783295/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 37,
    "side": "LEFT",
    "in_reply_to_id": 281782731
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282111893",
    "pull_request_review_id": 235115884,
    "id": 282111893,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MjExMTg5Mw==",
    "diff_hunk": "@@ -422,6 +422,195 @@ inline CBlockIndex* LookupBlockIndex(const uint256& hash)\n /** Find the last common block between the parameter chain and a locator. */\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+enum DisconnectResult\n+{\n+    DISCONNECT_OK,      // All good.\n+    DISCONNECT_UNCLEAN, // Rolled back, but UTXO set was inconsistent with block.\n+    DISCONNECT_FAILED   // Something else went wrong.\n+};\n+\n+class ConnectTrace;\n+\n+/** @see CChainState::FlushStateToDisk */\n+enum class FlushStateMode {\n+    NONE,\n+    IF_NEEDED,\n+    PERIODIC,\n+    ALWAYS\n+};\n+\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(const CBlockIndex *pa, const CBlockIndex *pb) const {",
    "path": "src/validation.h",
    "position": null,
    "original_position": 60,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "65e22684281996ee49889642c745143e99736ae2",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Does this implementation really need to be in the header?",
    "created_at": "2019-05-08T15:09:48Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r282111893",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282111893"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r282111893"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282111893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 444,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282162424",
    "pull_request_review_id": 235180228,
    "id": 282162424,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MjE2MjQyNA==",
    "diff_hunk": "@@ -422,6 +422,195 @@ inline CBlockIndex* LookupBlockIndex(const uint256& hash)\n /** Find the last common block between the parameter chain and a locator. */\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+enum DisconnectResult\n+{\n+    DISCONNECT_OK,      // All good.\n+    DISCONNECT_UNCLEAN, // Rolled back, but UTXO set was inconsistent with block.\n+    DISCONNECT_FAILED   // Something else went wrong.\n+};\n+\n+class ConnectTrace;\n+\n+/** @see CChainState::FlushStateToDisk */\n+enum class FlushStateMode {\n+    NONE,\n+    IF_NEEDED,\n+    PERIODIC,\n+    ALWAYS\n+};\n+\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(const CBlockIndex *pa, const CBlockIndex *pb) const {",
    "path": "src/validation.h",
    "position": null,
    "original_position": 60,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "65e22684281996ee49889642c745143e99736ae2",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The method implementation doesn't, but the struct declaration does because it affects the layout of CChainState objects.",
    "created_at": "2019-05-08T17:11:53Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r282162424",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282162424"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r282162424"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/282162424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 444,
    "side": "RIGHT",
    "in_reply_to_id": 282111893
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283475344",
    "pull_request_review_id": 236841987,
    "id": 283475344,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQ3NTM0NA==",
    "diff_hunk": "@@ -422,6 +422,195 @@ inline CBlockIndex* LookupBlockIndex(const uint256& hash)\n /** Find the last common block between the parameter chain and a locator. */\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+enum DisconnectResult\n+{\n+    DISCONNECT_OK,      // All good.\n+    DISCONNECT_UNCLEAN, // Rolled back, but UTXO set was inconsistent with block.\n+    DISCONNECT_FAILED   // Something else went wrong.\n+};\n+\n+class ConnectTrace;\n+\n+/** @see CChainState::FlushStateToDisk */\n+enum class FlushStateMode {\n+    NONE,\n+    IF_NEEDED,\n+    PERIODIC,\n+    ALWAYS\n+};\n+\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(const CBlockIndex *pa, const CBlockIndex *pb) const {",
    "path": "src/validation.h",
    "position": null,
    "original_position": 60,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "65e22684281996ee49889642c745143e99736ae2",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit de39209d0c move-only: make the CChainState interface public\r\n\r\nCould keep this implementation in the cpp file? Only put the struct and declaration in the header?\r\n\r\nAlso, the commit description mentions a \"namespace\", which is no longer true, so should be removed?",
    "created_at": "2019-05-13T18:23:45Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r283475344",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283475344"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r283475344"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283475344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 444,
    "side": "RIGHT",
    "in_reply_to_id": 282111893
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283479959",
    "pull_request_review_id": 236841987,
    "id": 283479959,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQ3OTk1OQ==",
    "diff_hunk": "@@ -524,6 +533,21 @@ class CChainState {\n \n     bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Update the on-disk chain state.\n+     * The caches and indexes are flushed depending on the mode we're called with\n+     * if they're too large, if it's been a while since the last write,\n+     * or always and in all cases if we're in prune mode and are deleting files.\n+     *\n+     * If FlushStateMode::NONE is used, then FlushStateToDisk(...) won't do anything\n+     * besides checking if we need to prune.\n+     */\n+    bool FlushStateToDisk(",
    "path": "src/validation.h",
    "position": 150,
    "original_position": 48,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "9147f28ec03181d69fe46aa81dbe82086b2c684d",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit 9147f28ec0 refactoring: FlushStateToDisk -> CChainState\r\n\r\n\r\nIt seems weird to move a method that was `static` in validation.cpp to the header file as a public member function. At the very least it should be private. (However, I'd prefer if in the same commit the `FlushStateToDisk` and `PruneAndFlush` were moved to a public method in CChainState.)",
    "created_at": "2019-05-13T18:34:51Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r283479959",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283479959"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r283479959"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283479959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 531,
    "original_line": 531,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283481731",
    "pull_request_review_id": 236841987,
    "id": 283481731,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQ4MTczMQ==",
    "diff_hunk": "@@ -523,6 +521,14 @@ class CChainState {\n      */\n     CCriticalSection m_cs_chainstate;\n \n+    /**\n+     * Is this chainstate undergoing initial block download?",
    "path": "src/validation.h",
    "position": null,
    "original_position": 14,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "61fd34e24400b4cee07a379630331f37d2847588",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 61fd34e244  refactoring: IsInitialBlockDownload -> CChainState\r\n\r\n\r\nInstead of a question, say \"Whether this c...\"?",
    "created_at": "2019-05-13T18:39:46Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r283481731",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283481731"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r283481731"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283481731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 525,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283481944",
    "pull_request_review_id": 236841987,
    "id": 283481944,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4MzQ4MTk0NA==",
    "diff_hunk": "@@ -523,6 +521,14 @@ class CChainState {\n      */\n     CCriticalSection m_cs_chainstate;\n \n+    /**\n+     * Is this chainstate undergoing initial block download?\n+     *\n+     * Mutable because we need to be able to mark IsInitialBlockDownload()\n+     * const, which toggles this for caching purposes.",
    "path": "src/validation.h",
    "position": null,
    "original_position": 17,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "61fd34e24400b4cee07a379630331f37d2847588",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 61fd34e refactoring: IsInitialBlockDownload -> CChainState\r\n\r\nThis is only toggled once (aka latched)? So should keep that nomenclature? ",
    "created_at": "2019-05-13T18:40:24Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r283481944",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283481944"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r283481944"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/283481944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 528,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284016299",
    "pull_request_review_id": 237522242,
    "id": 284016299,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDAxNjI5OQ==",
    "diff_hunk": "@@ -278,9 +279,9 @@ void PruneOneBlockFile(const int fileNumber) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune);\n \n /** Flush all state, indexes and buffers to disk. */\n-void FlushStateToDisk();\n+void FlushStateToDisk(CChainState& chainstate);\n /** Prune block files and flush state to disk. */\n-void PruneAndFlush();\n+void PruneAndFlush(CChainState& chainstate);",
    "path": "src/validation.h",
    "position": null,
    "original_position": 16,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "9147f28ec03181d69fe46aa81dbe82086b2c684d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is there any particular reason why  `FlushStateToDisk` `PruneAndFlush` should not be ChainState members and `FlushStateToDisk` `IsInitialBlockDownload` should be? Curious how your comment in https://github.com/bitcoin/bitcoin/pull/15976#issuecomment-490582434 applies to these individual cases. Not that it really matters, but it'd be nice to have consistency, and maybe explicit rationale for why things are or aren't members in the commit messages.",
    "created_at": "2019-05-14T21:55:01Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284016299",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284016299"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284016299"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284016299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 284,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284070760",
    "pull_request_review_id": 237588704,
    "id": 284070760,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDA3MDc2MA==",
    "diff_hunk": "@@ -278,9 +279,9 @@ void PruneOneBlockFile(const int fileNumber) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune);\n \n /** Flush all state, indexes and buffers to disk. */\n-void FlushStateToDisk();\n+void FlushStateToDisk(CChainState& chainstate);\n /** Prune block files and flush state to disk. */\n-void PruneAndFlush();\n+void PruneAndFlush(CChainState& chainstate);",
    "path": "src/validation.h",
    "position": null,
    "original_position": 16,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "9147f28ec03181d69fe46aa81dbe82086b2c684d",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No good reason beyond the fact that `FlushStateToDisk` affects on-disk block files (which are shared across chainstates) - but that's a symptom of a more general issue (that FSTD handles pruning, which seems like a separate concern) so probably not worth worrying about here.\r\n\r\n",
    "created_at": "2019-05-15T02:55:50Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284070760",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284070760"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284070760"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284070760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 284,
    "side": "RIGHT",
    "in_reply_to_id": 284016299
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284071249",
    "pull_request_review_id": 237589247,
    "id": 284071249,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDA3MTI0OQ==",
    "diff_hunk": "@@ -524,6 +533,21 @@ class CChainState {\n \n     bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Update the on-disk chain state.\n+     * The caches and indexes are flushed depending on the mode we're called with\n+     * if they're too large, if it's been a while since the last write,\n+     * or always and in all cases if we're in prune mode and are deleting files.\n+     *\n+     * If FlushStateMode::NONE is used, then FlushStateToDisk(...) won't do anything\n+     * besides checking if we need to prune.\n+     */\n+    bool FlushStateToDisk(",
    "path": "src/validation.h",
    "position": 150,
    "original_position": 48,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "9147f28ec03181d69fe46aa81dbe82086b2c684d",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree with your general concern, but usage of `FlushStateToDisk` happens in places that won't work with `private` like `AcceptToMemoryPoolWithTime` and so if we made it private, we'd have to attach a bunch of `friend` statements which seems kind of gross.",
    "created_at": "2019-05-15T02:58:41Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284071249",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284071249"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284071249"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284071249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 531,
    "original_line": 531,
    "side": "RIGHT",
    "in_reply_to_id": 283479959
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284220451",
    "pull_request_review_id": 237776265,
    "id": 284220451,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDIyMDQ1MQ==",
    "diff_hunk": "@@ -524,6 +533,21 @@ class CChainState {\n \n     bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Update the on-disk chain state.\n+     * The caches and indexes are flushed depending on the mode we're called with\n+     * if they're too large, if it's been a while since the last write,\n+     * or always and in all cases if we're in prune mode and are deleting files.\n+     *\n+     * If FlushStateMode::NONE is used, then FlushStateToDisk(...) won't do anything\n+     * besides checking if we need to prune.\n+     */\n+    bool FlushStateToDisk(",
    "path": "src/validation.h",
    "position": 150,
    "original_position": 48,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "9147f28ec03181d69fe46aa81dbe82086b2c684d",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hmm, makes sense",
    "created_at": "2019-05-15T12:04:53Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284220451",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284220451"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284220451"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284220451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 531,
    "original_line": 531,
    "side": "RIGHT",
    "in_reply_to_id": 283479959
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284223105",
    "pull_request_review_id": 237779586,
    "id": 284223105,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDIyMzEwNQ==",
    "diff_hunk": "@@ -4916,3 +4760,21 @@ class CMainCleanup\n         mapBlockIndex.clear();\n     }\n } instance_of_cmaincleanup;\n+\n+bool CBlockIndexWorkComparator::operator()(const CBlockIndex *pa, const CBlockIndex *pb) const {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 545,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "5fe4eb3a1a8ca7da24a451360a7d38c768e12b10",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit a8930a66b1 move-only: make the CChainState interface public\r\n\r\n\r\nWhy is this moved to the end of the cpp file instead of keeping it at the top? This breaks both `git blame` and git diff with `--color-moved=dimmed-zebra --ignore-all-space`",
    "created_at": "2019-05-15T12:12:22Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284223105",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284223105"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284223105"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284223105/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4761,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284224235",
    "pull_request_review_id": 237779586,
    "id": 284224235,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDIyNDIzNQ==",
    "diff_hunk": "@@ -435,6 +610,9 @@ bool InvalidateBlock(CValidationState& state, const CChainParams& chainparams, C\n /** Remove invalidity status from a block and its descendants. */\n void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+/** @returns the most-work chainstate. */",
    "path": "src/validation.h",
    "position": null,
    "original_position": 226,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "5fe4eb3a1a8ca7da24a451360a7d38c768e12b10",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n/** @returns the most-work valid chainstate. */\r\n```\r\n\r\nin commit 7794d41a58 refactoring: introduce ChainstateActive()\r\n\r\n\r\nCould clarify that this the chainstate is fully validated (as opposed to a pow header chain)",
    "created_at": "2019-05-15T12:15:48Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284224235",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284224235"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284224235"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284224235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 613,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284226967",
    "pull_request_review_id": 237779586,
    "id": 284226967,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDIyNjk2Nw==",
    "diff_hunk": "@@ -2196,27 +2035,31 @@ bool static FlushStateToDisk(const CChainParams& chainparams, CValidationState &\n     }\n     if (full_flush_completed) {\n         // Update best block in wallet (so we can detect restored wallets).\n-        GetMainSignals().ChainStateFlushed(::ChainActive().GetLocator());\n+        GetMainSignals().ChainStateFlushed(m_chain.GetLocator());\n     }\n     } catch (const std::runtime_error& e) {\n         return AbortNode(state, std::string(\"System error while flushing: \") + e.what());\n     }\n     return true;\n }\n \n-void FlushStateToDisk() {\n+void CChainState::ForceFlushStateToDisk() {\n     CValidationState state;\n     const CChainParams& chainparams = Params();\n-    if (!FlushStateToDisk(chainparams, state, FlushStateMode::ALWAYS)) {\n+    if (!this->FlushStateToDisk(chainparams, state, FlushStateMode::ALWAYS)) {",
    "path": "src/validation.cpp",
    "position": 330,
    "original_position": 313,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "5fe4eb3a1a8ca7da24a451360a7d38c768e12b10",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 7ab9e339a8 refactoring: FlushStateToDisk -> CChainState\r\n\r\n\r\nstyle-question: You remove the global with the same name in this commit, so the `this->` is not required?",
    "created_at": "2019-05-15T12:23:21Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284226967",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284226967"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284226967"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284226967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2063,
    "original_line": 2063,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284229049",
    "pull_request_review_id": 237779586,
    "id": 284229049,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDIyOTA0OQ==",
    "diff_hunk": "@@ -2196,27 +2035,31 @@ bool static FlushStateToDisk(const CChainParams& chainparams, CValidationState &\n     }\n     if (full_flush_completed) {\n         // Update best block in wallet (so we can detect restored wallets).\n-        GetMainSignals().ChainStateFlushed(::ChainActive().GetLocator());\n+        GetMainSignals().ChainStateFlushed(m_chain.GetLocator());\n     }\n     } catch (const std::runtime_error& e) {\n         return AbortNode(state, std::string(\"System error while flushing: \") + e.what());\n     }\n     return true;\n }\n \n-void FlushStateToDisk() {\n+void CChainState::ForceFlushStateToDisk() {\n     CValidationState state;\n     const CChainParams& chainparams = Params();\n-    if (!FlushStateToDisk(chainparams, state, FlushStateMode::ALWAYS)) {\n+    if (!this->FlushStateToDisk(chainparams, state, FlushStateMode::ALWAYS)) {\n         LogPrintf(\"%s: failed to flush state (%s)\\n\", __func__, FormatStateMessage(state));\n     }\n }\n \n-void PruneAndFlush() {\n+void CChainState::PruneBlockFiles() {\n     CValidationState state;\n     fCheckForPruning = true;\n     const CChainParams& chainparams = Params();\n-    if (!FlushStateToDisk(chainparams, state, FlushStateMode::NONE)) {\n+\n+    // Confusingly, nothing is actually flushed to disk due to\n+    // FlushStateMode::NONE; the only effect of this call is to prune\n+    // block files if necessary.",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 327,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "5fe4eb3a1a8ca7da24a451360a7d38c768e12b10",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 7ab9e339a8 refactoring: FlushStateToDisk -> CChainState\r\n\r\n\r\nI'd rather not add a comment that starts with \"confusingly\". You renamed the function and removed the confusion.",
    "created_at": "2019-05-15T12:28:58Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284229049",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284229049"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284229049"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284229049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2061,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284264160",
    "pull_request_review_id": 237832831,
    "id": 284264160,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDI2NDE2MA==",
    "diff_hunk": "@@ -2196,27 +2035,31 @@ bool static FlushStateToDisk(const CChainParams& chainparams, CValidationState &\n     }\n     if (full_flush_completed) {\n         // Update best block in wallet (so we can detect restored wallets).\n-        GetMainSignals().ChainStateFlushed(::ChainActive().GetLocator());\n+        GetMainSignals().ChainStateFlushed(m_chain.GetLocator());\n     }\n     } catch (const std::runtime_error& e) {\n         return AbortNode(state, std::string(\"System error while flushing: \") + e.what());\n     }\n     return true;\n }\n \n-void FlushStateToDisk() {\n+void CChainState::ForceFlushStateToDisk() {\n     CValidationState state;\n     const CChainParams& chainparams = Params();\n-    if (!FlushStateToDisk(chainparams, state, FlushStateMode::ALWAYS)) {\n+    if (!this->FlushStateToDisk(chainparams, state, FlushStateMode::ALWAYS)) {",
    "path": "src/validation.cpp",
    "position": 330,
    "original_position": 313,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "5fe4eb3a1a8ca7da24a451360a7d38c768e12b10",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I like prefixing with `this->` for methods because it makes it obvious we're calling a method, sort of like `m_`. See the IRC discussion: http://www.erisian.com.au/bitcoin-core-dev/log-2019-05-06.html#l-572\r\n\r\nHappy to undo it if it's controversial though.",
    "created_at": "2019-05-15T13:48:32Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284264160",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284264160"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284264160"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284264160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2063,
    "original_line": 2063,
    "side": "RIGHT",
    "in_reply_to_id": 284226967
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284266146",
    "pull_request_review_id": 237835367,
    "id": 284266146,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDI2NjE0Ng==",
    "diff_hunk": "@@ -4916,3 +4760,21 @@ class CMainCleanup\n         mapBlockIndex.clear();\n     }\n } instance_of_cmaincleanup;\n+\n+bool CBlockIndexWorkComparator::operator()(const CBlockIndex *pa, const CBlockIndex *pb) const {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 545,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "5fe4eb3a1a8ca7da24a451360a7d38c768e12b10",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It'd be in an awkward place at the top of the file - right below the \"global state\" comment. Happy to move it back if you think the diff convenience is worth it though.",
    "created_at": "2019-05-15T13:52:23Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284266146",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284266146"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284266146"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284266146/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4761,
    "side": "RIGHT",
    "in_reply_to_id": 284223105
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284266408",
    "pull_request_review_id": 237835732,
    "id": 284266408,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDI2NjQwOA==",
    "diff_hunk": "@@ -435,6 +610,9 @@ bool InvalidateBlock(CValidationState& state, const CChainParams& chainparams, C\n /** Remove invalidity status from a block and its descendants. */\n void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+/** @returns the most-work chainstate. */",
    "path": "src/validation.h",
    "position": null,
    "original_position": 226,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "5fe4eb3a1a8ca7da24a451360a7d38c768e12b10",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah good point! Thanks.",
    "created_at": "2019-05-15T13:52:54Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284266408",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284266408"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284266408"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284266408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 613,
    "side": "RIGHT",
    "in_reply_to_id": 284224235
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284290728",
    "pull_request_review_id": 237866934,
    "id": 284290728,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDI5MDcyOA==",
    "diff_hunk": "@@ -4916,3 +4760,21 @@ class CMainCleanup\n         mapBlockIndex.clear();\n     }\n } instance_of_cmaincleanup;\n+\n+bool CBlockIndexWorkComparator::operator()(const CBlockIndex *pa, const CBlockIndex *pb) const {",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 545,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "5fe4eb3a1a8ca7da24a451360a7d38c768e12b10",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't understand what the \"global state\" comment should convey. If a symbol is global and not const, we prefix it with `g_`. Might want to remove it?",
    "created_at": "2019-05-15T14:38:31Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284290728",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284290728"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284290728"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284290728/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4761,
    "side": "RIGHT",
    "in_reply_to_id": 284223105
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284291087",
    "pull_request_review_id": 237867411,
    "id": 284291087,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDI5MTA4Nw==",
    "diff_hunk": "@@ -2196,27 +2035,31 @@ bool static FlushStateToDisk(const CChainParams& chainparams, CValidationState &\n     }\n     if (full_flush_completed) {\n         // Update best block in wallet (so we can detect restored wallets).\n-        GetMainSignals().ChainStateFlushed(::ChainActive().GetLocator());\n+        GetMainSignals().ChainStateFlushed(m_chain.GetLocator());\n     }\n     } catch (const std::runtime_error& e) {\n         return AbortNode(state, std::string(\"System error while flushing: \") + e.what());\n     }\n     return true;\n }\n \n-void FlushStateToDisk() {\n+void CChainState::ForceFlushStateToDisk() {\n     CValidationState state;\n     const CChainParams& chainparams = Params();\n-    if (!FlushStateToDisk(chainparams, state, FlushStateMode::ALWAYS)) {\n+    if (!this->FlushStateToDisk(chainparams, state, FlushStateMode::ALWAYS)) {",
    "path": "src/validation.cpp",
    "position": 330,
    "original_position": 313,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "5fe4eb3a1a8ca7da24a451360a7d38c768e12b10",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Asked because we don't do this elsewhere. You can pick whatever you prefer ofc",
    "created_at": "2019-05-15T14:39:12Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284291087",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284291087"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284291087"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284291087/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2063,
    "original_line": 2063,
    "side": "RIGHT",
    "in_reply_to_id": 284226967
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284330177",
    "pull_request_review_id": 237918090,
    "id": 284330177,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDMzMDE3Nw==",
    "diff_hunk": "@@ -2196,27 +2035,31 @@ bool static FlushStateToDisk(const CChainParams& chainparams, CValidationState &\n     }\n     if (full_flush_completed) {\n         // Update best block in wallet (so we can detect restored wallets).\n-        GetMainSignals().ChainStateFlushed(::ChainActive().GetLocator());\n+        GetMainSignals().ChainStateFlushed(m_chain.GetLocator());\n     }\n     } catch (const std::runtime_error& e) {\n         return AbortNode(state, std::string(\"System error while flushing: \") + e.what());\n     }\n     return true;\n }\n \n-void FlushStateToDisk() {\n+void CChainState::ForceFlushStateToDisk() {\n     CValidationState state;\n     const CChainParams& chainparams = Params();\n-    if (!FlushStateToDisk(chainparams, state, FlushStateMode::ALWAYS)) {\n+    if (!this->FlushStateToDisk(chainparams, state, FlushStateMode::ALWAYS)) {",
    "path": "src/validation.cpp",
    "position": 330,
    "original_position": 313,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "5fe4eb3a1a8ca7da24a451360a7d38c768e12b10",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> I like prefixing with this-> for methods because it makes it obvious we're calling a method, sort of like m_\r\n\r\nFWIW, I still think https://github.com/bitcoin/bitcoin/pull/14635 is a good solution that would improve readability in these cases",
    "created_at": "2019-05-15T15:56:13Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284330177",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284330177"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284330177"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284330177/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2063,
    "original_line": 2063,
    "side": "RIGHT",
    "in_reply_to_id": 284226967
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284441906",
    "pull_request_review_id": 238059557,
    "id": 284441906,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDQ0MTkwNg==",
    "diff_hunk": "@@ -63,162 +63,10 @@\n /**\n  * Global state",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 2,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "64d0f872fcf6b61de9e4e62ce13dbbe3b00cbb6c",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, in commit a8930a66b1 move-only: make the CChainState interface public\r\n\r\n\r\nThis comment wasn't accurate before the commit, nor is it accurate after the commit. And it made you move the code block below all the way down in the file.\r\n\r\nCould instead remove this comment and keep the code block below in place? This also makes `git blame` and `git diff` work on the commit without workarounds.",
    "created_at": "2019-05-15T20:41:46Z",
    "updated_at": "2019-05-16T13:07:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284441906",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284441906"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284441906"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284441906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 64,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284696473",
    "pull_request_review_id": 238379350,
    "id": 284696473,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDY5NjQ3Mw==",
    "diff_hunk": "@@ -63,162 +63,10 @@\n /**\n  * Global state",
    "path": "src/validation.cpp",
    "position": null,
    "original_position": 2,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "64d0f872fcf6b61de9e4e62ce13dbbe3b00cbb6c",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yep, agree. Not sure how much it helps the diff, but that comment should be removed. I've pushed [the change](https://github.com/bitcoin/bitcoin/compare/64d0f872fcf6b61de9e4e62ce13dbbe3b00cbb6c..403e677c9ebbf9744733010e6b0c2d1b182ee850).",
    "created_at": "2019-05-16T13:08:38Z",
    "updated_at": "2019-05-16T13:08:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284696473",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284696473"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284696473"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284696473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 64,
    "side": "RIGHT",
    "in_reply_to_id": 284441906
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284716026",
    "pull_request_review_id": 238404463,
    "id": 284716026,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDcxNjAyNg==",
    "diff_hunk": "@@ -508,6 +513,28 @@ class CChainState {\n \n     bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Update the on-disk chain state.\n+     * The caches and indexes are flushed depending on the mode we're called with",
    "path": "src/validation.h",
    "position": 143,
    "original_position": 40,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "3ccbc376dd313fb7666471f24f6d9370914d00f3",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: might as well improve this comment while you're moving it, by using more sentences...\r\n\r\n```\r\n* Consider flushing caches and indexes for the on-disk chain state.\r\n* If we're in prune mode and about to delete block files, we flush.\r\n* Otherwise we check FlushStateMode:\r\n* IF_NEEDED: if the chainstate is too large compared to -dbcache (plus -mempoolsize in IBD)\r\n* PERIODIC: it's been a while since the last write\r\n* ALWAYS: e.g. during shutdown or RPC queries about the chain state\r\n* NONE: only flush if a manual prune height provided and it is above the current prune height\r\n```\r\n\r\nThis clarification also makes it pretty obvious that this method needs to be split, but that can wait.",
    "created_at": "2019-05-16T13:49:59Z",
    "updated_at": "2019-05-16T14:30:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284716026",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284716026"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284716026"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284716026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 524,
    "original_line": 518,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284732394",
    "pull_request_review_id": 238404463,
    "id": 284732394,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDczMjM5NA==",
    "diff_hunk": "@@ -508,6 +513,28 @@ class CChainState {\n \n     bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Update the on-disk chain state.\n+     * The caches and indexes are flushed depending on the mode we're called with\n+     * if they're too large, if it's been a while since the last write,\n+     * or always and in all cases if we're in prune mode and are deleting files.\n+     *\n+     * If FlushStateMode::NONE is used, then FlushStateToDisk(...) won't do anything\n+     * besides checking if we need to prune.\n+     */\n+    bool FlushStateToDisk(\n+        const CChainParams& chainparams,\n+        CValidationState &state,\n+        FlushStateMode mode,\n+        int nManualPruneHeight = 0);\n+\n+    //! Unconditionally flush all changes to disk.\n+    void ForceFlushStateToDisk();\n+\n+    //! Prune blockfiles from the disk if necessary and then flush chainstate changes",
    "path": "src/validation.h",
    "position": 159,
    "original_position": 56,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "3ccbc376dd313fb7666471f24f6d9370914d00f3",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: flushing is done _before_ pruning. Rename to `FlushAndPrune()`?",
    "created_at": "2019-05-16T14:22:18Z",
    "updated_at": "2019-05-16T14:30:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284732394",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284732394"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284732394"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284732394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 540,
    "original_line": 534,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284733657",
    "pull_request_review_id": 238404463,
    "id": 284733657,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDczMzY1Nw==",
    "diff_hunk": "@@ -2058,27 +2046,28 @@ bool static FlushStateToDisk(const CChainParams& chainparams, CValidationState &\n     }\n     if (full_flush_completed) {\n         // Update best block in wallet (so we can detect restored wallets).\n-        GetMainSignals().ChainStateFlushed(::ChainActive().GetLocator());\n+        GetMainSignals().ChainStateFlushed(m_chain.GetLocator());\n     }\n     } catch (const std::runtime_error& e) {\n         return AbortNode(state, std::string(\"System error while flushing: \") + e.what());\n     }\n     return true;\n }\n \n-void FlushStateToDisk() {\n+void CChainState::ForceFlushStateToDisk() {\n     CValidationState state;\n     const CChainParams& chainparams = Params();\n-    if (!FlushStateToDisk(chainparams, state, FlushStateMode::ALWAYS)) {\n+    if (!this->FlushStateToDisk(chainparams, state, FlushStateMode::ALWAYS)) {\n         LogPrintf(\"%s: failed to flush state (%s)\\n\", __func__, FormatStateMessage(state));\n     }\n }\n \n-void PruneAndFlush() {\n+void CChainState::PruneAndFlush() {\n     CValidationState state;\n     fCheckForPruning = true;",
    "path": "src/validation.cpp",
    "position": 338,
    "original_position": 74,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "3ccbc376dd313fb7666471f24f6d9370914d00f3",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yuck (but out of scope)",
    "created_at": "2019-05-16T14:24:41Z",
    "updated_at": "2019-05-16T14:30:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284733657",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284733657"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284733657"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284733657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2070,
    "original_line": 2067,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284742646",
    "pull_request_review_id": 238439543,
    "id": 284742646,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDc0MjY0Ng==",
    "diff_hunk": "@@ -508,6 +513,28 @@ class CChainState {\n \n     bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Update the on-disk chain state.\n+     * The caches and indexes are flushed depending on the mode we're called with\n+     * if they're too large, if it's been a while since the last write,\n+     * or always and in all cases if we're in prune mode and are deleting files.\n+     *\n+     * If FlushStateMode::NONE is used, then FlushStateToDisk(...) won't do anything\n+     * besides checking if we need to prune.\n+     */\n+    bool FlushStateToDisk(\n+        const CChainParams& chainparams,\n+        CValidationState &state,\n+        FlushStateMode mode,\n+        int nManualPruneHeight = 0);\n+\n+    //! Unconditionally flush all changes to disk.\n+    void ForceFlushStateToDisk();\n+\n+    //! Prune blockfiles from the disk if necessary and then flush chainstate changes",
    "path": "src/validation.h",
    "position": 159,
    "original_position": 56,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "3ccbc376dd313fb7666471f24f6d9370914d00f3",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ehh, well it depends on what you're talking about being flushed - i.e. `pcoinsTip` get flushed [after](https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L2191) the prune happens.",
    "created_at": "2019-05-16T14:41:37Z",
    "updated_at": "2019-05-16T14:41:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284742646",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284742646"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284742646"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284742646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 540,
    "original_line": 534,
    "side": "RIGHT",
    "in_reply_to_id": 284732394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284753199",
    "pull_request_review_id": 238453339,
    "id": 284753199,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDc1MzE5OQ==",
    "diff_hunk": "@@ -508,6 +513,28 @@ class CChainState {\n \n     bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Update the on-disk chain state.\n+     * The caches and indexes are flushed depending on the mode we're called with\n+     * if they're too large, if it's been a while since the last write,\n+     * or always and in all cases if we're in prune mode and are deleting files.\n+     *\n+     * If FlushStateMode::NONE is used, then FlushStateToDisk(...) won't do anything\n+     * besides checking if we need to prune.\n+     */\n+    bool FlushStateToDisk(\n+        const CChainParams& chainparams,\n+        CValidationState &state,\n+        FlushStateMode mode,\n+        int nManualPruneHeight = 0);\n+\n+    //! Unconditionally flush all changes to disk.\n+    void ForceFlushStateToDisk();\n+\n+    //! Prune blockfiles from the disk if necessary and then flush chainstate changes",
    "path": "src/validation.h",
    "position": 159,
    "original_position": 56,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "3ccbc376dd313fb7666471f24f6d9370914d00f3",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I was talking about the chain state, which is the biggest thing :-) ",
    "created_at": "2019-05-16T15:01:37Z",
    "updated_at": "2019-05-16T15:01:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284753199",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284753199"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284753199"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284753199/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 540,
    "original_line": 534,
    "side": "RIGHT",
    "in_reply_to_id": 284732394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284755131",
    "pull_request_review_id": 238455958,
    "id": 284755131,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDc1NTEzMQ==",
    "diff_hunk": "@@ -508,6 +513,28 @@ class CChainState {\n \n     bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Update the on-disk chain state.\n+     * The caches and indexes are flushed depending on the mode we're called with\n+     * if they're too large, if it's been a while since the last write,\n+     * or always and in all cases if we're in prune mode and are deleting files.\n+     *\n+     * If FlushStateMode::NONE is used, then FlushStateToDisk(...) won't do anything\n+     * besides checking if we need to prune.\n+     */\n+    bool FlushStateToDisk(\n+        const CChainParams& chainparams,\n+        CValidationState &state,\n+        FlushStateMode mode,\n+        int nManualPruneHeight = 0);\n+\n+    //! Unconditionally flush all changes to disk.\n+    void ForceFlushStateToDisk();\n+\n+    //! Prune blockfiles from the disk if necessary and then flush chainstate changes",
    "path": "src/validation.h",
    "position": 159,
    "original_position": 56,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "3ccbc376dd313fb7666471f24f6d9370914d00f3",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, `pcoinsTip` (chainstate) is flushed *after* pruning.",
    "created_at": "2019-05-16T15:05:21Z",
    "updated_at": "2019-05-16T15:05:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284755131",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284755131"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284755131"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284755131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 540,
    "original_line": 534,
    "side": "RIGHT",
    "in_reply_to_id": 284732394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284773736",
    "pull_request_review_id": 238479601,
    "id": 284773736,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NDc3MzczNg==",
    "diff_hunk": "@@ -508,6 +513,28 @@ class CChainState {\n \n     bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Update the on-disk chain state.\n+     * The caches and indexes are flushed depending on the mode we're called with\n+     * if they're too large, if it's been a while since the last write,\n+     * or always and in all cases if we're in prune mode and are deleting files.\n+     *\n+     * If FlushStateMode::NONE is used, then FlushStateToDisk(...) won't do anything\n+     * besides checking if we need to prune.\n+     */\n+    bool FlushStateToDisk(\n+        const CChainParams& chainparams,\n+        CValidationState &state,\n+        FlushStateMode mode,\n+        int nManualPruneHeight = 0);\n+\n+    //! Unconditionally flush all changes to disk.\n+    void ForceFlushStateToDisk();\n+\n+    //! Prune blockfiles from the disk if necessary and then flush chainstate changes",
    "path": "src/validation.h",
    "position": 159,
    "original_position": 56,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "3ccbc376dd313fb7666471f24f6d9370914d00f3",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah wait, never mind, you're right. Why do we flush the chainstate cache after pruning? Is that in order to minimize the chances of running out of disk space?",
    "created_at": "2019-05-16T15:42:15Z",
    "updated_at": "2019-05-16T15:42:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284773736",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284773736"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r284773736"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/284773736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 540,
    "original_line": 534,
    "side": "RIGHT",
    "in_reply_to_id": 284732394
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285154179",
    "pull_request_review_id": 238962331,
    "id": 285154179,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTE1NDE3OQ==",
    "diff_hunk": "@@ -4414,7 +4269,7 @@ bool CChainState::LoadGenesisBlock(const CChainParams& chainparams)\n \n bool LoadGenesisBlock(const CChainParams& chainparams)\n {\n-    return g_chainstate.LoadGenesisBlock(chainparams);\n+    return ::ChainstateActive().LoadGenesisBlock(chainparams);",
    "path": "src/validation.cpp",
    "position": 532,
    "original_position": 532,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 4d6688603b refactoring: introduce ChainstateActive()\r\n\r\n\r\nWhy is this changed? It seems this method will go away anyway. See https://github.com/bitcoin/bitcoin/pull/15606/files#diff-24efdb00bfbe56b140fb006b562cc70bL4415",
    "created_at": "2019-05-17T14:37:21Z",
    "updated_at": "2019-05-17T14:46:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r285154179",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285154179"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r285154179"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285154179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4272,
    "original_line": 4272,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285154734",
    "pull_request_review_id": 238962331,
    "id": 285154734,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTE1NDczNA==",
    "diff_hunk": "@@ -4312,7 +4167,7 @@ bool CChainState::RewindBlockIndex(const CChainParams& params)\n }\n \n bool RewindBlockIndex(const CChainParams& params) {\n-    if (!g_chainstate.RewindBlockIndex(params)) {\n+    if (!::ChainstateActive().RewindBlockIndex(params)) {",
    "path": "src/validation.cpp",
    "position": 505,
    "original_position": 505,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 4d66886 refactoring: introduce ChainstateActive()\r\n\r\n\r\nWhy is this changed? It seems that eventually you'll pass in the chainstate, see https://github.com/bitcoin/bitcoin/pull/15606/files#diff-24efdb00bfbe56b140fb006b562cc70bR4324\r\n\r\nSo why would you change the same line twice?",
    "created_at": "2019-05-17T14:38:44Z",
    "updated_at": "2019-05-17T14:46:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r285154734",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285154734"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r285154734"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285154734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4170,
    "original_line": 4170,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285154989",
    "pull_request_review_id": 238962331,
    "id": 285154989,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTE1NDk4OQ==",
    "diff_hunk": "@@ -4179,7 +4034,7 @@ bool CChainState::ReplayBlocks(const CChainParams& params, CCoinsView* view)\n }\n \n bool ReplayBlocks(const CChainParams& params, CCoinsView* view) {\n-    return g_chainstate.ReplayBlocks(params, view);\n+    return ::ChainstateActive().ReplayBlocks(params, view);",
    "path": "src/validation.cpp",
    "position": 496,
    "original_position": 496,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 4d66886 refactoring: introduce ChainstateActive()\r\n\r\nSame here (and all other changes in this commit)",
    "created_at": "2019-05-17T14:39:20Z",
    "updated_at": "2019-05-17T14:46:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r285154989",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285154989"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r285154989"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285154989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4037,
    "original_line": 4037,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285155670",
    "pull_request_review_id": 238962331,
    "id": 285155670,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NTE1NTY3MA==",
    "diff_hunk": "@@ -60,165 +60,27 @@\n #define MICRO 0.000001\n #define MILLI 0.001\n \n-/**\n- * Global state\n- */\n-namespace {\n-    struct CBlockIndexWorkComparator\n-    {\n-        bool operator()(const CBlockIndex *pa, const CBlockIndex *pb) const {\n-            // First sort by most total work, ...",
    "path": "src/validation.cpp",
    "position": 11,
    "original_position": 11,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "git-style-nit in commit d7c97edeea move-only: make the CChainState interface public\r\n\r\n\r\nCould keep the previous indentation to preserve the `git blame` and minimize the diff line count? No strong opinion, though.\r\nPlease don't address my nit if you don't have to touch the patches for other reasons.",
    "created_at": "2019-05-17T14:40:44Z",
    "updated_at": "2019-05-17T14:46:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r285155670",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285155670"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r285155670"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/285155670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 70,
    "original_line": 70,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287094923",
    "pull_request_review_id": 241399575,
    "id": 287094923,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzA5NDkyMw==",
    "diff_hunk": "@@ -60,165 +60,27 @@\n #define MICRO 0.000001\n #define MILLI 0.001\n \n-/**\n- * Global state\n- */\n-namespace {\n-    struct CBlockIndexWorkComparator\n-    {\n-        bool operator()(const CBlockIndex *pa, const CBlockIndex *pb) const {\n-            // First sort by most total work, ...",
    "path": "src/validation.cpp",
    "position": 11,
    "original_position": 11,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't know that we should maintain a weird indentation just for ease-of-diff, but if other reviewers disagree, I'll make the change.",
    "created_at": "2019-05-23T19:16:47Z",
    "updated_at": "2019-05-23T19:16:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r287094923",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287094923"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r287094923"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287094923/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 70,
    "original_line": 70,
    "side": "LEFT",
    "in_reply_to_id": 285155670
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287097288",
    "pull_request_review_id": 241402718,
    "id": 287097288,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4NzA5NzI4OA==",
    "diff_hunk": "@@ -4312,7 +4167,7 @@ bool CChainState::RewindBlockIndex(const CChainParams& params)\n }\n \n bool RewindBlockIndex(const CChainParams& params) {\n-    if (!g_chainstate.RewindBlockIndex(params)) {\n+    if (!::ChainstateActive().RewindBlockIndex(params)) {",
    "path": "src/validation.cpp",
    "position": 505,
    "original_position": 505,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Even before that change, we remove the `g_chainstate` symbol (https://github.com/bitcoin/bitcoin/pull/15606/commits/4c4b9ce2f310a519f1579f6a2892c590c1b96c6a) which means that this change would have to happen at some point anyway.",
    "created_at": "2019-05-23T19:23:37Z",
    "updated_at": "2019-05-23T19:23:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r287097288",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287097288"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r287097288"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/287097288/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 4170,
    "original_line": 4170,
    "side": "RIGHT",
    "in_reply_to_id": 285154734
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288378134",
    "pull_request_review_id": 243020635,
    "id": 288378134,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4ODM3ODEzNA==",
    "diff_hunk": "@@ -422,6 +423,145 @@ inline CBlockIndex* LookupBlockIndex(const uint256& hash)\n /** Find the last common block between the parameter chain and a locator. */\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+enum DisconnectResult\n+{\n+    DISCONNECT_OK,      // All good.\n+    DISCONNECT_UNCLEAN, // Rolled back, but UTXO set was inconsistent with block.\n+    DISCONNECT_FAILED   // Something else went wrong.\n+};\n+\n+class ConnectTrace;\n+\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(const CBlockIndex *pa, const CBlockIndex *pb) const;\n+};",
    "path": "src/validation.h",
    "position": 60,
    "original_position": 24,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "d7c97edeea8cee10ad9da1f940d39d5073ac142d",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit in commit d7c97ed move-only: make the CChainState interface public\r\n\r\nHow about defining `CBlockIndexWorkComparator` privately within `CChainState`, given it is not used outside the class?",
    "created_at": "2019-05-29T03:13:23Z",
    "updated_at": "2019-05-29T03:13:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r288378134",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288378134"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r288378134"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288378134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 441,
    "original_line": 438,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288378773",
    "pull_request_review_id": 243021426,
    "id": 288378773,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4ODM3ODc3Mw==",
    "diff_hunk": "@@ -80,6 +80,8 @@ bool CBlockIndexWorkComparator::operator()(const CBlockIndex *pa, const CBlockIn\n \n CChainState g_chainstate;\n \n+CChainState& ChainstateActive() { return g_chainstate; }",
    "path": "src/validation.cpp",
    "position": 178,
    "original_position": 4,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "4d6688603b8c8df854d52df464e157d0a6e7bde6",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit in commit 4d66886 refactoring: introduce ChainstateActive()\r\n\r\nHow about making `g_chainstate` static?",
    "created_at": "2019-05-29T03:17:33Z",
    "updated_at": "2019-05-29T03:33:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r288378773",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288378773"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r288378773"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288378773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 83,
    "original_line": 83,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288380488",
    "pull_request_review_id": 243023504,
    "id": 288380488,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4ODM4MDQ4OA==",
    "diff_hunk": "@@ -422,6 +418,186 @@ inline CBlockIndex* LookupBlockIndex(const uint256& hash)\n /** Find the last common block between the parameter chain and a locator. */\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+enum DisconnectResult\n+{\n+    DISCONNECT_OK,      // All good.\n+    DISCONNECT_UNCLEAN, // Rolled back, but UTXO set was inconsistent with block.\n+    DISCONNECT_FAILED   // Something else went wrong.\n+};\n+\n+class ConnectTrace;\n+\n+/** @see CChainState::FlushStateToDisk */\n+enum class FlushStateMode {\n+    NONE,\n+    IF_NEEDED,\n+    PERIODIC,\n+    ALWAYS\n+};\n+\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(const CBlockIndex *pa, const CBlockIndex *pb) const;\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local knowledge of the\n+ * current best chain and header tree.\n+ *\n+ * It generally provides access to the current block tree, as well as functions\n+ * to provide new data, which it will appropriately validate and incorporate in\n+ * its state as necessary.\n+ *\n+ * Eventually, the API here is targeted at being exposed externally as a\n+ * consumable libconsensus library, so any functions added must only call\n+ * other class member functions, pure functions in other parts of the consensus\n+ * library, callbacks via the validation interface, or read/write-to-disk\n+ * functions (eventually this will also be via callbacks).\n+ */\n+class CChainState {\n+private:\n+    /**\n+     * The set of all CBlockIndex entries with BLOCK_VALID_TRANSACTIONS (for itself and all ancestors) and\n+     * as good as our current tip or better. Entries may be failed, though, and pruning nodes may be\n+     * missing the data for the block.\n+     */\n+    std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n+\n+    /**\n+     * Every received block is assigned a unique and increasing identifier, so we\n+     * know which one to give priority in case of a fork.\n+     */\n+    CCriticalSection cs_nBlockSequenceId;\n+    /** Blocks loaded from disk are assigned id 0, so start the counter at 1. */\n+    int32_t nBlockSequenceId = 1;\n+    /** Decreasing counter (used by subsequent preciousblock calls). */\n+    int32_t nBlockReverseSequenceId = -1;\n+    /** chainwork for the last block that preciousblock has been applied to. */\n+    arith_uint256 nLastPreciousChainwork = 0;\n+\n+    /** In order to efficiently track invalidity of headers, we keep the set of\n+      * blocks which we tried to connect and found to be invalid here (ie which\n+      * were set to BLOCK_FAILED_VALID since the last restart). We can then\n+      * walk this set and check if a new header is a descendant of something in\n+      * this set, preventing us from having to walk mapBlockIndex when we try\n+      * to connect a bad block and fail.\n+      *\n+      * While this is more complicated than marking everything which descends\n+      * from an invalid block as invalid at the time we discover it to be\n+      * invalid, doing so would require walking all of mapBlockIndex to find all\n+      * descendants. Since this case should be very rare, keeping track of all\n+      * BLOCK_FAILED_VALID blocks in a set should be just fine and work just as\n+      * well.\n+      *\n+      * Because we already walk mapBlockIndex in height-order at startup, we go\n+      * ahead and mark descendants of invalid blocks as FAILED_CHILD at that time,\n+      * instead of putting things in this set.\n+      */\n+    std::set<CBlockIndex*> m_failed_blocks;\n+\n+    /**\n+     * the ChainState CriticalSection\n+     * A lock that must be held when modifying this ChainState - held in ActivateBestChain()\n+     */\n+    CCriticalSection m_cs_chainstate;\n+\n+    /**\n+     * Whether this chainstate is undergoing initial block download.\n+     *\n+     * Mutable because we need to be able to mark IsInitialBlockDownload()\n+     * const, which latches this for caching purposes.\n+     */\n+    mutable std::atomic<bool> m_cached_finished_ibd{false};\n+\n+public:\n+    //! The current chain of blockheaders we consult and build on.\n+    //! @see CChain, CBlockIndex.\n+    CChain m_chain;\n+    BlockMap mapBlockIndex GUARDED_BY(cs_main);\n+    std::multimap<CBlockIndex*, CBlockIndex*> mapBlocksUnlinked;\n+    CBlockIndex *pindexBestInvalid = nullptr;\n+\n+    bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /**\n+     * Update the on-disk chain state.\n+     * The caches and indexes are flushed depending on the mode we're called with\n+     * if they're too large, if it's been a while since the last write,\n+     * or always and in all cases if we're in prune mode and are deleting files.\n+     *\n+     * If FlushStateMode::NONE is used, then FlushStateToDisk(...) won't do anything\n+     * besides checking if we need to prune.\n+     */\n+    bool FlushStateToDisk(\n+        const CChainParams& chainparams,\n+        CValidationState &state,\n+        FlushStateMode mode,\n+        int nManualPruneHeight = 0);\n+\n+    //! Unconditionally flush all changes to disk.\n+    void ForceFlushStateToDisk();",
    "path": "src/validation.h",
    "position": 157,
    "original_position": 157,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: given context, this could be renamed `ForceFlushToDisk`",
    "created_at": "2019-05-29T03:28:48Z",
    "updated_at": "2019-05-29T03:28:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r288380488",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288380488"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r288380488"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288380488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 538,
    "original_line": 538,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288380573",
    "pull_request_review_id": 243023606,
    "id": 288380573,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4ODM4MDU3Mw==",
    "diff_hunk": "@@ -422,6 +418,186 @@ inline CBlockIndex* LookupBlockIndex(const uint256& hash)\n /** Find the last common block between the parameter chain and a locator. */\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+enum DisconnectResult\n+{\n+    DISCONNECT_OK,      // All good.\n+    DISCONNECT_UNCLEAN, // Rolled back, but UTXO set was inconsistent with block.\n+    DISCONNECT_FAILED   // Something else went wrong.\n+};\n+\n+class ConnectTrace;\n+\n+/** @see CChainState::FlushStateToDisk */\n+enum class FlushStateMode {\n+    NONE,\n+    IF_NEEDED,\n+    PERIODIC,\n+    ALWAYS\n+};\n+\n+struct CBlockIndexWorkComparator\n+{\n+    bool operator()(const CBlockIndex *pa, const CBlockIndex *pb) const;\n+};\n+\n+/**\n+ * CChainState stores and provides an API to update our local knowledge of the\n+ * current best chain and header tree.\n+ *\n+ * It generally provides access to the current block tree, as well as functions\n+ * to provide new data, which it will appropriately validate and incorporate in\n+ * its state as necessary.\n+ *\n+ * Eventually, the API here is targeted at being exposed externally as a\n+ * consumable libconsensus library, so any functions added must only call\n+ * other class member functions, pure functions in other parts of the consensus\n+ * library, callbacks via the validation interface, or read/write-to-disk\n+ * functions (eventually this will also be via callbacks).\n+ */\n+class CChainState {\n+private:\n+    /**\n+     * The set of all CBlockIndex entries with BLOCK_VALID_TRANSACTIONS (for itself and all ancestors) and\n+     * as good as our current tip or better. Entries may be failed, though, and pruning nodes may be\n+     * missing the data for the block.\n+     */\n+    std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n+\n+    /**\n+     * Every received block is assigned a unique and increasing identifier, so we\n+     * know which one to give priority in case of a fork.\n+     */\n+    CCriticalSection cs_nBlockSequenceId;\n+    /** Blocks loaded from disk are assigned id 0, so start the counter at 1. */\n+    int32_t nBlockSequenceId = 1;\n+    /** Decreasing counter (used by subsequent preciousblock calls). */\n+    int32_t nBlockReverseSequenceId = -1;\n+    /** chainwork for the last block that preciousblock has been applied to. */\n+    arith_uint256 nLastPreciousChainwork = 0;\n+\n+    /** In order to efficiently track invalidity of headers, we keep the set of\n+      * blocks which we tried to connect and found to be invalid here (ie which\n+      * were set to BLOCK_FAILED_VALID since the last restart). We can then\n+      * walk this set and check if a new header is a descendant of something in\n+      * this set, preventing us from having to walk mapBlockIndex when we try\n+      * to connect a bad block and fail.\n+      *\n+      * While this is more complicated than marking everything which descends\n+      * from an invalid block as invalid at the time we discover it to be\n+      * invalid, doing so would require walking all of mapBlockIndex to find all\n+      * descendants. Since this case should be very rare, keeping track of all\n+      * BLOCK_FAILED_VALID blocks in a set should be just fine and work just as\n+      * well.\n+      *\n+      * Because we already walk mapBlockIndex in height-order at startup, we go\n+      * ahead and mark descendants of invalid blocks as FAILED_CHILD at that time,\n+      * instead of putting things in this set.\n+      */\n+    std::set<CBlockIndex*> m_failed_blocks;\n+\n+    /**\n+     * the ChainState CriticalSection\n+     * A lock that must be held when modifying this ChainState - held in ActivateBestChain()\n+     */\n+    CCriticalSection m_cs_chainstate;\n+\n+    /**\n+     * Whether this chainstate is undergoing initial block download.\n+     *\n+     * Mutable because we need to be able to mark IsInitialBlockDownload()\n+     * const, which latches this for caching purposes.\n+     */\n+    mutable std::atomic<bool> m_cached_finished_ibd{false};\n+\n+public:\n+    //! The current chain of blockheaders we consult and build on.\n+    //! @see CChain, CBlockIndex.\n+    CChain m_chain;\n+    BlockMap mapBlockIndex GUARDED_BY(cs_main);\n+    std::multimap<CBlockIndex*, CBlockIndex*> mapBlocksUnlinked;\n+    CBlockIndex *pindexBestInvalid = nullptr;\n+\n+    bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /**\n+     * Update the on-disk chain state.\n+     * The caches and indexes are flushed depending on the mode we're called with\n+     * if they're too large, if it's been a while since the last write,\n+     * or always and in all cases if we're in prune mode and are deleting files.\n+     *\n+     * If FlushStateMode::NONE is used, then FlushStateToDisk(...) won't do anything\n+     * besides checking if we need to prune.\n+     */\n+    bool FlushStateToDisk(",
    "path": "src/validation.h",
    "position": 150,
    "original_position": 150,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: given context, this could be renamed `FlushToDisk`",
    "created_at": "2019-05-29T03:29:24Z",
    "updated_at": "2019-05-29T03:29:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r288380573",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288380573"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r288380573"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288380573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 531,
    "original_line": 531,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288380744",
    "pull_request_review_id": 243023804,
    "id": 288380744,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4ODM4MDc0NA==",
    "diff_hunk": "@@ -422,6 +418,186 @@ inline CBlockIndex* LookupBlockIndex(const uint256& hash)\n /** Find the last common block between the parameter chain and a locator. */\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+enum DisconnectResult\n+{\n+    DISCONNECT_OK,      // All good.\n+    DISCONNECT_UNCLEAN, // Rolled back, but UTXO set was inconsistent with block.\n+    DISCONNECT_FAILED   // Something else went wrong.\n+};\n+\n+class ConnectTrace;\n+\n+/** @see CChainState::FlushStateToDisk */\n+enum class FlushStateMode {\n+    NONE,\n+    IF_NEEDED,\n+    PERIODIC,\n+    ALWAYS\n+};",
    "path": "src/validation.h",
    "position": 55,
    "original_position": 55,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "user": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: this could be moved to `CChainState::FlushMode`",
    "created_at": "2019-05-29T03:30:35Z",
    "updated_at": "2019-05-29T03:30:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r288380744",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288380744"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r288380744"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/288380744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 436,
    "original_line": 436,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289119702",
    "pull_request_review_id": 243961682,
    "id": 289119702,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTExOTcwMg==",
    "diff_hunk": "@@ -508,6 +513,28 @@ class CChainState {\n \n     bool LoadBlockIndex(const Consensus::Params& consensus_params, CBlockTreeDB& blocktree) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Update the on-disk chain state.\n+     * The caches and indexes are flushed depending on the mode we're called with",
    "path": "src/validation.h",
    "position": 143,
    "original_position": 40,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "3ccbc376dd313fb7666471f24f6d9370914d00f3",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I very much like the idea of clarifying this comment, but in my experience doc changes sometimes generate a surprising amount of feedback. I don't want to expand this PR beyond its current size (or delay it more than necessary), but will definitely be happy to review follow-up PRs making the change you suggest. ",
    "created_at": "2019-05-30T18:41:21Z",
    "updated_at": "2019-05-30T18:41:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r289119702",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289119702"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r289119702"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289119702/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 524,
    "original_line": 518,
    "side": "RIGHT",
    "in_reply_to_id": 284716026
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289658222",
    "pull_request_review_id": 244642736,
    "id": 289658222,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI4OTY1ODIyMg==",
    "diff_hunk": "@@ -60,165 +60,27 @@\n #define MICRO 0.000001\n #define MILLI 0.001\n \n-/**\n- * Global state\n- */\n-namespace {\n-    struct CBlockIndexWorkComparator\n-    {\n-        bool operator()(const CBlockIndex *pa, const CBlockIndex *pb) const {\n-            // First sort by most total work, ...",
    "path": "src/validation.cpp",
    "position": 11,
    "original_position": 11,
    "commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "original_commit_id": "403e677c9ebbf9744733010e6b0c2d1b182ee850",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't mind the indentation `git show --color-moved=dimmed_zebra --color-moved-ws=ignore-all-space d7c97edeea8cee10ad9da1f940d39d5073ac142d`.\r\n\r\nI think this operator was inlined? Does it make sense to declare it `inline`?",
    "created_at": "2019-06-02T21:15:58Z",
    "updated_at": "2019-06-02T21:17:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r289658222",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289658222"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15976#discussion_r289658222"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15976"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/289658222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 70,
    "original_line": 70,
    "side": "LEFT",
    "in_reply_to_id": 285155670
  }
]