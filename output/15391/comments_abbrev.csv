gmaxwell,2019-02-12T20:17:53Z,"It would be useful for it to get compiled, at least AFAICT adding a false assumption here won't make it fail. :)   Concept ACK.   Maybe also the #if defined(NDEBUG)? check?  Probably every other primitive type we depend on the size of, including the unsigned ones.",https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-462917775,462917775,
MarcoFalke,2019-02-12T20:20:11Z,You are only adding a header. Does this need to be included in a cpp file to get compiled?,https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-462918596,462918596,
practicalswift,2019-02-12T20:27:44Z,"@gmaxwell @MarcoFalke Yes, obviously it needs to be included :-)  The inclusion somehow got lost during my latest `git commit --amend` fixup. Fixing!",https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-462921241,462921241,
practicalswift,2019-02-12T20:33:14Z,"Now including from `src/util/system.h` which also is the most included file FWIW :-)\n\n```\n$ git grep -E ""^#include "" -- ""*.cpp"" | cut -f2 -d'<' | cut -f1 -d'>' | sort | uniq -c | \\n      sort -n | tail -1\n     99 util/system.h\n```\n\nLet me know if you can think of a more appropriate file for the include.",https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-462923112,462923112,
practicalswift,2019-02-13T10:02:45Z,"Added a couple of assumptions and listed important ""non-assumptions"".\n\nPlease help me identify further assumptions and corresponding examples of where we are relying on said assumptions :-)",https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463136620,463136620,
jb55,2019-02-14T11:39:04Z,utACK 8add86e2b4a62535e2109d9d3119b4bbb8555d48,https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463596366,463596366,
practicalswift,2019-02-14T11:53:47Z,@jb55 Thanks for the review! Can you think of any further assumptions and examples of where we rely on them being true? :-),https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463600110,463600110,
practicalswift,2019-02-14T14:49:32Z,Moved to `src/compat/` and added an explicit non-assumption regarding `size_t` :-),https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463654483,463654483,
jb55,2019-02-14T14:52:11Z,re-utACK 7548e6e6ebcf430bf8be0fb7684882b40692f657,https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463655437,463655437,
laanwj,2019-02-14T14:54:14Z,"utACK 7548e6e6ebcf430bf8be0fb7684882b40692f657\nI'm not 100% sure we make the `int=32 bit` assumption (more like ""int is at least 32 bit"" I think? otherwise we use explicitly sized types like `int32_t`), but I doubt anyone ever tested the code on an architecture with a different integer size so I'm fine with making the assumption.",https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463656217,463656217,
practicalswift,2019-02-14T15:06:31Z,"@laanwj If I'm reading `GetSizeOfCompactSize`, `WriteCompactSize` and `ReadCompactSize` correctly we're assuming that `int` has a width of exactly 32 bits, no?\n\nExample:\n\n```\n/**\n * Compact Size\n * size <  253        -- 1 byte\n * size <= USHRT_MAX  -- 3 bytes  (253 + 2 bytes)\n * size <= UINT_MAX   -- 5 bytes  (254 + 4 bytes)\n * size >  UINT_MAX   -- 9 bytes  (255 + 8 bytes)\n ",https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463660801,463660801,
practicalswift,2019-02-14T15:10:56Z,@jb55 @laanwj Please re-review after `s/BITCOIN_ASSUMPTIONS_H/BITCOIN_COMPAT_ASSUMPTIONS_H/g`,https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463662480,463662480,
laanwj,2019-02-14T15:13:02Z,"> @laanwj If I'm reading `GetSizeOfCompactSize`, `WriteCompactSize` and `ReadCompactSize` correctly we're assuming that `int` has a width of exactly 32 bits?\n\nYou're right, thanks for giving an example.",https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463663321,463663321,
MarcoFalke,2019-02-14T15:37:17Z,"Would it make sense to refer to an example for each assumption. That way, we know of at least one example. An alternative would be to just inline the assumptions where they are needed.",https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463673060,463673060,
practicalswift,2019-02-14T15:39:18Z,"@MarcoFalke I'm not sure I follow: the examples have been there since this PR first was submitted? :-)\n\nIn this specific case the following has been in there all along:\n\n```\n// Assumption: We assume integer widths.\n// Example(s): GetSizeOfCompactSize and WriteCompactSize in the serialization\n//             code.\nstatic_assert(sizeof(short) == 2, ""16-bit short assumed"");\nstatic_as",https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463673900,463673900,
MarcoFalke,2019-02-14T15:41:43Z,"Ok, my bad. I must have missed them when I last looked at it a few days ago.",https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463674890,463674890,
MarcoFalke,2019-02-14T15:44:01Z,ACK 7cee85807c4db679003c6659d247a2fe74c2464a,https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463675813,463675813,
DrahtBot,2019-02-14T16:20:30Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15146](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15146.html) (Solve SmartOS FD_ZERO build issue by Empact",https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463690722,463690722,
sipa,2019-02-14T23:54:01Z,utACK 7cee85807c4db679003c6659d247a2fe74c2464a,https://github.com/bitcoin/bitcoin/pull/15391#issuecomment-463850851,463850851,
laanwj,2019-02-14T14:14:15Z,Should this file be in one of the sub directories? `compat` maybe?,https://github.com/bitcoin/bitcoin/pull/15391#discussion_r256849019,256849019,src/assumptions.h
