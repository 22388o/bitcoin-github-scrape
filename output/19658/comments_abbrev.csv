jnewbery,2020-08-04 11:49:15,cc @naumenkogs ,https://github.com/bitcoin/bitcoin/pull/19658#issuecomment-668548928,668548928,
naumenkogs,2020-08-04 13:41:18,"I think this is a move in the right direction: GetAddr() should be more dynamic.\nIt also seems to be useful for testing.\n\nConcept ACK.",https://github.com/bitcoin/bitcoin/pull/19658#issuecomment-668603501,668603501,
DrahtBot,2020-08-04 17:31:02,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19238 (refactor: Replace RecursiveMutex with Mutex in CAddrMan by hebasto)\n* #17428 (p2p: Try to preserve outbound block",https://github.com/bitcoin/bitcoin/pull/19658#issuecomment-668728080,668728080,
laanwj,2020-08-05 14:50:17,"Concept ACK, I think more control over addrman via RPC is a good thing.",https://github.com/bitcoin/bitcoin/pull/19658#issuecomment-669238375,669238375,
jnewbery,2020-08-11 09:04:27,Thanks for the review @mzumsande . All comments have been addressed.,https://github.com/bitcoin/bitcoin/pull/19658#issuecomment-671825875,671825875,
jnewbery,2020-08-12 08:24:01,Thanks for the review @luke-jr . I've addressed all of your comments.,https://github.com/bitcoin/bitcoin/pull/19658#issuecomment-672727849,672727849,
naumenkogs,2020-08-12 10:05:24,"utACK 37a480e0cd94895b6051abef12d984ff74bdc4a3\nI think both methods would be useful.\n\nYou updated rpc_net.py test, but there's also p2p_getaddr_cache.py and p2p_addr_relay.py which may benefit from new methods?",https://github.com/bitcoin/bitcoin/pull/19658#issuecomment-672780220,672780220,
jnewbery,2020-08-12 10:13:46,"> there's also p2p_getaddr_cache.py and p2p_addr_relay.py which may benefit from new methods?\n\nOf course. Those can be done in a follow-up.",https://github.com/bitcoin/bitcoin/pull/19658#issuecomment-672784083,672784083,
laanwj,2020-08-12 10:44:47,"Code review and lightly manually tested ACK 37a480e0cd94895b6051abef12d984ff74bdc4a3\nI found the default of 1 a bit confusing (because the RPC name is plural), but it's well documented so also no real problem with it.",https://github.com/bitcoin/bitcoin/pull/19658#issuecomment-672797660,672797660,
jnewbery,2020-08-12 11:19:13,"Thanks @laanwj \n\n> I found the default of 1 a bit confusing (because the RPC name is plural), but it's well documented so also no real problem with it.\n\nYeah, I agree it's a bit confusing, but I didn't want to change the default in this PR.",https://github.com/bitcoin/bitcoin/pull/19658#issuecomment-672811680,672811680,
mzumsande,2020-08-08 17:59:43,This doesn't compile since `addrman` is not a member of `NodeContext`.,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r467489148,467489148,src/rpc/net.cpp
jnewbery,2020-08-08 22:06:05,oops. This was from a previous version of the branch. Should be fixed now.,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r467508938,467508938,src/rpc/net.cpp
mzumsande,2020-08-09 18:03:33,Should add `addpeeraddress` to `vRPCConvertParams` (`rpc/client.cpp`).,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r467611673,467611673,src/rpc/net.cpp
mzumsande,2020-08-09 18:03:49,"typo, getnodeaddresses->addpeeraddress",https://github.com/bitcoin/bitcoin/pull/19658#discussion_r467611696,467611696,src/rpc/net.cpp
mzumsande,2020-08-09 18:04:34,typo: waas -> was,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r467611771,467611771,src/rpc/net.cpp
mzumsande,2020-08-09 18:18:27,"""call"" still sounds like rpc, maybe ""return in response to a getaddr message"".",https://github.com/bitcoin/bitcoin/pull/19658#discussion_r467613055,467613055,src/net.h
mzumsande,2020-08-09 18:19:30,"as for ""call"", see above",https://github.com/bitcoin/bitcoin/pull/19658#discussion_r467613151,467613151,src/net_processing.cpp
mzumsande,2020-08-09 18:34:04,This comment became outdated.,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r467614541,467614541,test/functional/rpc_net.py
jnewbery,2020-08-11 08:56:18,done,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468429728,468429728,src/rpc/net.cpp
jnewbery,2020-08-11 08:56:24,fixed,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468429788,468429788,src/rpc/net.cpp
jnewbery,2020-08-11 08:56:44,fixed,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468429999,468429999,src/rpc/net.cpp
jnewbery,2020-08-11 09:00:08,fixed,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468432099,468432099,src/net.h
jnewbery,2020-08-11 09:00:15,fixed,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468432161,468432161,src/net_processing.cpp
jnewbery,2020-08-11 09:02:07,fixed,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468433266,468433266,test/functional/rpc_net.py
luke-jr,2020-08-11 21:30:35,Seems more logical to use `>= 100` here?,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468876270,468876270,src/addrman.cpp
luke-jr,2020-08-11 21:31:38,Maybe just `std::numeric_limits<int>::max()`,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468876741,468876741,src/addrman.cpp
luke-jr,2020-08-11 21:32:04,`size_t` might be more appropriate for `max_addresses`,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468876980,468876980,src/addrman.h
luke-jr,2020-08-11 21:33:10,This comment is confusing. I assume it's supposed to mean the original values thereof?,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468877498,468877498,src/bench/addrman.cpp
luke-jr,2020-08-11 21:34:42,"""maximum""",https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468878124,468878124,src/rpc/net.cpp
luke-jr,2020-08-11 21:34:59,Would prefer -1 rather than 0 for no limit,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468878263,468878263,src/rpc/net.cpp
luke-jr,2020-08-11 21:37:04,"IMO this should be moved to a separate PR, so not reviewing here.",https://github.com/bitcoin/bitcoin/pull/19658#discussion_r468879149,468879149,src/rpc/net.cpp
jnewbery,2020-08-12 07:58:21,I think both are fine. Calling with 0 to indicate no max seems fine to me too.,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r469076013,469076013,src/addrman.cpp
jnewbery,2020-08-12 07:58:28,as above,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r469076062,469076062,src/addrman.cpp
jnewbery,2020-08-12 08:16:58,"ok, changed all of these to size_t",https://github.com/bitcoin/bitcoin/pull/19658#discussion_r469085897,469085897,src/addrman.h
jnewbery,2020-08-12 08:20:04,"Yes, so the values used in the bench stay the same. I've removed the comment since it's confusing.",https://github.com/bitcoin/bitcoin/pull/19658#discussion_r469087624,469087624,src/bench/addrman.cpp
jnewbery,2020-08-12 08:20:55,done,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r469088140,469088140,src/rpc/net.cpp
jnewbery,2020-08-12 08:21:06,as above,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r469088229,469088229,src/rpc/net.cpp
jnewbery,2020-08-12 08:21:54,I'm keeping it in this PR since it already has reviews and concept ACKs.,https://github.com/bitcoin/bitcoin/pull/19658#discussion_r469088712,469088712,src/rpc/net.cpp
