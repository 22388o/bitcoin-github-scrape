[
  {
    "sha": "50605f0c343daa3f93c7740af202b6778a378f1a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDYwNWYwYzM0M2RhYTNmOTNjNzc0MGFmMjAyYjY3NzhhMzc4ZjFh",
    "commit": {
      "author": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2019-01-01T17:57:45Z"
      },
      "committer": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2019-01-01T17:57:45Z"
      },
      "message": "Improve CScriptNum error reporting",
      "tree": {
        "sha": "e8e6f0b9bc4927fe58c4778a9c9e2c44ba1ae430",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8e6f0b9bc4927fe58c4778a9c9e2c44ba1ae430"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50605f0c343daa3f93c7740af202b6778a378f1a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50605f0c343daa3f93c7740af202b6778a378f1a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50605f0c343daa3f93c7740af202b6778a378f1a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50605f0c343daa3f93c7740af202b6778a378f1a/comments",
    "author": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f5a70d1462592a23bbad4aa150e6b2beaeec7c42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5a70d1462592a23bbad4aa150e6b2beaeec7c42",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f5a70d1462592a23bbad4aa150e6b2beaeec7c42"
      }
    ],
    "stats": {
      "total": 167,
      "additions": 88,
      "deletions": 79
    },
    "files": [
      {
        "sha": "865a5ee0eb23f321766091f7431b9abfec78df58",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50605f0c343daa3f93c7740af202b6778a378f1a/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50605f0c343daa3f93c7740af202b6778a378f1a/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=50605f0c343daa3f93c7740af202b6778a378f1a",
        "patch": "@@ -1072,6 +1072,11 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                 return set_error(serror, SCRIPT_ERR_STACK_SIZE);\n         }\n     }\n+    catch (ScriptError runtime_error)\n+    {\n+        return set_error(serror, runtime_error);\n+\n+    }\n     catch (...)\n     {\n         return set_error(serror, SCRIPT_ERR_UNKNOWN_ERROR);"
      },
      {
        "sha": "877b053dac724a9541fd95ec54464d1f424d87a9",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 4,
        "deletions": 10,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50605f0c343daa3f93c7740af202b6778a378f1a/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50605f0c343daa3f93c7740af202b6778a378f1a/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=50605f0c343daa3f93c7740af202b6778a378f1a",
        "patch": "@@ -9,6 +9,7 @@\n #include <crypto/common.h>\n #include <prevector.h>\n #include <serialize.h>\n+#include <script/script_error.h>\n \n #include <assert.h>\n #include <climits>\n@@ -195,12 +196,6 @@ static const unsigned int MAX_OPCODE = OP_NOP10;\n \n const char* GetOpName(opcodetype opcode);\n \n-class scriptnum_error : public std::runtime_error\n-{\n-public:\n-    explicit scriptnum_error(const std::string& str) : std::runtime_error(str) {}\n-};\n-\n class CScriptNum\n {\n /**\n@@ -224,7 +219,7 @@ class CScriptNum\n                         const size_t nMaxNumSize = nDefaultMaxNumSize)\n     {\n         if (vch.size() > nMaxNumSize) {\n-            throw scriptnum_error(\"script number overflow\");\n+            throw SCRIPT_ERR_NUMOVERFLOW;\n         }\n         if (fRequireMinimal && vch.size() > 0) {\n             // Check that the number is encoded with the minimum possible\n@@ -240,7 +235,7 @@ class CScriptNum\n                 // is +-255, which encode to 0xff00 and 0xff80 respectively.\n                 // (big-endian).\n                 if (vch.size() <= 1 || (vch[vch.size() - 2] & 0x80) == 0) {\n-                    throw scriptnum_error(\"non-minimally encoded script number\");\n+                    throw SCRIPT_ERR_MINIMALNUM;\n                 }\n             }\n         }\n@@ -444,8 +439,7 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(opcodetype opcode)\n     {\n-        if (opcode < 0 || opcode > 0xff)\n-            throw std::runtime_error(\"CScript::operator<<(): invalid opcode\");\n+        assert(opcode >= 0 && opcode <= 0xff);\n         insert(end(), (unsigned char)opcode);\n         return *this;\n     }"
      },
      {
        "sha": "8fdea2e297c1cce47d934cdefa523101c59b275b",
        "filename": "src/script/script_error.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50605f0c343daa3f93c7740af202b6778a378f1a/src/script/script_error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50605f0c343daa3f93c7740af202b6778a378f1a/src/script/script_error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.cpp?ref=50605f0c343daa3f93c7740af202b6778a378f1a",
        "patch": "@@ -93,6 +93,10 @@ const char* ScriptErrorString(const ScriptError serror)\n             return \"Using OP_CODESEPARATOR in non-witness script\";\n         case SCRIPT_ERR_SIG_FINDANDDELETE:\n             return \"Signature is found in scriptCode\";\n+        case SCRIPT_ERR_NUMOVERFLOW:\n+            return \"Script number overflow\";\n+        case SCRIPT_ERR_MINIMALNUM:\n+            return \"Non-minimally encoded script number\";\n         case SCRIPT_ERR_UNKNOWN_ERROR:\n         case SCRIPT_ERR_ERROR_COUNT:\n         default: break;"
      },
      {
        "sha": "beedfb21b15a4d211165e175ad30f7bd4d1bca52",
        "filename": "src/script/script_error.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50605f0c343daa3f93c7740af202b6778a378f1a/src/script/script_error.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50605f0c343daa3f93c7740af202b6778a378f1a/src/script/script_error.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.h?ref=50605f0c343daa3f93c7740af202b6778a378f1a",
        "patch": "@@ -68,6 +68,10 @@ typedef enum ScriptError_t\n     SCRIPT_ERR_OP_CODESEPARATOR,\n     SCRIPT_ERR_SIG_FINDANDDELETE,\n \n+    /* Script Num */\n+    SCRIPT_ERR_NUMOVERFLOW,\n+    SCRIPT_ERR_MINIMALNUM,\n+\n     SCRIPT_ERR_ERROR_COUNT\n } ScriptError;\n "
      },
      {
        "sha": "a1e277bc6278d4842869a285f44b1bed481487fa",
        "filename": "src/test/data/script_tests.json",
        "status": "modified",
        "additions": 69,
        "deletions": 69,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50605f0c343daa3f93c7740af202b6778a378f1a/src/test/data/script_tests.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50605f0c343daa3f93c7740af202b6778a378f1a/src/test/data/script_tests.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_tests.json?ref=50605f0c343daa3f93c7740af202b6778a378f1a",
        "patch": "@@ -856,10 +856,10 @@\n [\"1 1 ADD\", \"0 EQUAL\", \"P2SH,STRICTENC\", \"EVAL_FALSE\"],\n [\"11 1 ADD 12 SUB\", \"11 EQUAL\", \"P2SH,STRICTENC\", \"EVAL_FALSE\"],\n \n-[\"2147483648 0 ADD\", \"NOP\", \"P2SH,STRICTENC\", \"UNKNOWN_ERROR\", \"arithmetic operands must be in range [-2^31...2^31] \"],\n-[\"-2147483648 0 ADD\", \"NOP\", \"P2SH,STRICTENC\", \"UNKNOWN_ERROR\", \"arithmetic operands must be in range [-2^31...2^31] \"],\n-[\"2147483647 DUP ADD\", \"4294967294 NUMEQUAL\", \"P2SH,STRICTENC\", \"UNKNOWN_ERROR\", \"NUMEQUAL must be in numeric range\"],\n-[\"'abcdef' NOT\", \"0 EQUAL\", \"P2SH,STRICTENC\", \"UNKNOWN_ERROR\", \"NOT is an arithmetic operand\"],\n+[\"2147483648 0 ADD\", \"NOP\", \"P2SH,STRICTENC\", \"NUMOVERFLOW\", \"arithmetic operands must be in range [-2^31...2^31] \"],\n+[\"-2147483648 0 ADD\", \"NOP\", \"P2SH,STRICTENC\", \"NUMOVERFLOW\", \"arithmetic operands must be in range [-2^31...2^31] \"],\n+[\"2147483647 DUP ADD\", \"4294967294 NUMEQUAL\", \"P2SH,STRICTENC\", \"NUMOVERFLOW\", \"NUMEQUAL must be in numeric range\"],\n+[\"'abcdef' NOT\", \"0 EQUAL\", \"P2SH,STRICTENC\", \"NUMOVERFLOW\", \"NOT is an arithmetic operand\"],\n \n [\"2 DUP MUL\", \"4 EQUAL\", \"P2SH,STRICTENC\", \"DISABLED_OPCODE\", \"disabled\"],\n [\"2 DUP DIV\", \"1 EQUAL\", \"P2SH,STRICTENC\", \"DISABLED_OPCODE\", \"disabled\"],\n@@ -1013,14 +1013,14 @@\n [\"1\",\"RESERVED2\", \"P2SH,STRICTENC\", \"BAD_OPCODE\", \"OP_RESERVED2 is reserved\"],\n [\"1\",\"0xba\", \"P2SH,STRICTENC\", \"BAD_OPCODE\", \"0xba == MAX_OPCODE + 1\"],\n \n-[\"2147483648\", \"1ADD 1\", \"P2SH,STRICTENC\", \"UNKNOWN_ERROR\", \"We cannot do math on 5-byte integers\"],\n-[\"2147483648\", \"NEGATE 1\", \"P2SH,STRICTENC\", \"UNKNOWN_ERROR\", \"We cannot do math on 5-byte integers\"],\n-[\"-2147483648\", \"1ADD 1\", \"P2SH,STRICTENC\", \"UNKNOWN_ERROR\", \"Because we use a sign bit, -2147483648 is also 5 bytes\"],\n-[\"2147483647\", \"1ADD 1SUB 1\", \"P2SH,STRICTENC\", \"UNKNOWN_ERROR\", \"We cannot do math on 5-byte integers, even if the result is 4-bytes\"],\n-[\"2147483648\", \"1SUB 1\", \"P2SH,STRICTENC\", \"UNKNOWN_ERROR\", \"We cannot do math on 5-byte integers, even if the result is 4-bytes\"],\n+[\"2147483648\", \"1ADD 1\", \"P2SH,STRICTENC\", \"NUMOVERFLOW\", \"We cannot do math on 5-byte integers\"],\n+[\"2147483648\", \"NEGATE 1\", \"P2SH,STRICTENC\", \"NUMOVERFLOW\", \"We cannot do math on 5-byte integers\"],\n+[\"-2147483648\", \"1ADD 1\", \"P2SH,STRICTENC\", \"NUMOVERFLOW\", \"Because we use a sign bit, -2147483648 is also 5 bytes\"],\n+[\"2147483647\", \"1ADD 1SUB 1\", \"P2SH,STRICTENC\", \"NUMOVERFLOW\", \"We cannot do math on 5-byte integers, even if the result is 4-bytes\"],\n+[\"2147483648\", \"1SUB 1\", \"P2SH,STRICTENC\", \"NUMOVERFLOW\", \"We cannot do math on 5-byte integers, even if the result is 4-bytes\"],\n \n-[\"2147483648 1\", \"BOOLOR 1\", \"P2SH,STRICTENC\", \"UNKNOWN_ERROR\", \"We cannot do BOOLOR on 5-byte integers (but we can still do IF etc)\"],\n-[\"2147483648 1\", \"BOOLAND 1\", \"P2SH,STRICTENC\", \"UNKNOWN_ERROR\", \"We cannot do BOOLAND on 5-byte integers\"],\n+[\"2147483648 1\", \"BOOLOR 1\", \"P2SH,STRICTENC\", \"NUMOVERFLOW\", \"We cannot do BOOLOR on 5-byte integers (but we can still do IF etc)\"],\n+[\"2147483648 1\", \"BOOLAND 1\", \"P2SH,STRICTENC\", \"NUMOVERFLOW\", \"We cannot do BOOLAND on 5-byte integers\"],\n \n [\"1\", \"1 ENDIF\", \"P2SH,STRICTENC\", \"UNBALANCED_CONDITIONAL\", \"ENDIF without IF\"],\n [\"1\", \"IF 1\", \"P2SH,STRICTENC\", \"UNBALANCED_CONDITIONAL\", \"IF without ENDIF\"],\n@@ -1166,66 +1166,66 @@\n \n [\"MINIMALDATA enforcement for numeric arguments\"],\n \n-[\"0x01 0x00\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\", \"numequals 0\"],\n-[\"0x02 0x0000\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\", \"numequals 0\"],\n-[\"0x01 0x80\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\", \"0x80 (negative zero) numequals 0\"],\n-[\"0x02 0x0080\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\", \"numequals 0\"],\n-[\"0x02 0x0500\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\", \"numequals 5\"],\n-[\"0x03 0x050000\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\", \"numequals 5\"],\n-[\"0x02 0x0580\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\", \"numequals -5\"],\n-[\"0x03 0x050080\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\", \"numequals -5\"],\n-[\"0x03 0xff7f80\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\", \"Minimal encoding is 0xffff\"],\n-[\"0x03 0xff7f00\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\", \"Minimal encoding is 0xff7f\"],\n-[\"0x04 0xffff7f80\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\", \"Minimal encoding is 0xffffff\"],\n-[\"0x04 0xffff7f00\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\", \"Minimal encoding is 0xffff7f\"],\n+[\"0x01 0x00\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\", \"numequals 0\"],\n+[\"0x02 0x0000\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\", \"numequals 0\"],\n+[\"0x01 0x80\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\", \"0x80 (negative zero) numequals 0\"],\n+[\"0x02 0x0080\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\", \"numequals 0\"],\n+[\"0x02 0x0500\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\", \"numequals 5\"],\n+[\"0x03 0x050000\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\", \"numequals 5\"],\n+[\"0x02 0x0580\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\", \"numequals -5\"],\n+[\"0x03 0x050080\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\", \"numequals -5\"],\n+[\"0x03 0xff7f80\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\", \"Minimal encoding is 0xffff\"],\n+[\"0x03 0xff7f00\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\", \"Minimal encoding is 0xff7f\"],\n+[\"0x04 0xffff7f80\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\", \"Minimal encoding is 0xffffff\"],\n+[\"0x04 0xffff7f00\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\", \"Minimal encoding is 0xffff7f\"],\n \n [\"Test every numeric-accepting opcode for correct handling of the numeric minimal encoding rule\"],\n \n-[\"1 0x02 0x0000\", \"PICK DROP\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"1 0x02 0x0000\", \"ROLL DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000\", \"1ADD DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000\", \"1SUB DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000\", \"NEGATE DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000\", \"ABS DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000\", \"NOT DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000\", \"0NOTEQUAL DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-\n-[\"0 0x02 0x0000\", \"ADD DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 0\", \"ADD DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000\", \"SUB DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 0\", \"SUB DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000\", \"BOOLAND DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 0\", \"BOOLAND DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000\", \"BOOLOR DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 0\", \"BOOLOR DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000\", \"NUMEQUAL DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 1\", \"NUMEQUAL DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000\", \"NUMEQUALVERIFY 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 0\", \"NUMEQUALVERIFY 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000\", \"NUMNOTEQUAL DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 0\", \"NUMNOTEQUAL DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000\", \"LESSTHAN DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 0\", \"LESSTHAN DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000\", \"GREATERTHAN DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 0\", \"GREATERTHAN DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000\", \"LESSTHANOREQUAL DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 0\", \"LESSTHANOREQUAL DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000\", \"GREATERTHANOREQUAL DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 0\", \"GREATERTHANOREQUAL DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000\", \"MIN DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 0\", \"MIN DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000\", \"MAX DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0x02 0x0000 0\", \"MAX DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-\n-[\"0x02 0x0000 0 0\", \"WITHIN DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000 0\", \"WITHIN DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0 0x02 0x0000\", \"WITHIN DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-\n-[\"0 0 0x02 0x0000\", \"CHECKMULTISIG DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000 0\", \"CHECKMULTISIG DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000 0 1\", \"CHECKMULTISIG DROP 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0 0x02 0x0000\", \"CHECKMULTISIGVERIFY 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n-[\"0 0x02 0x0000 0\", \"CHECKMULTISIGVERIFY 1\", \"MINIMALDATA\", \"UNKNOWN_ERROR\"],\n+[\"1 0x02 0x0000\", \"PICK DROP\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"1 0x02 0x0000\", \"ROLL DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000\", \"1ADD DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000\", \"1SUB DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000\", \"NEGATE DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000\", \"ABS DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000\", \"NOT DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000\", \"0NOTEQUAL DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+\n+[\"0 0x02 0x0000\", \"ADD DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 0\", \"ADD DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000\", \"SUB DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 0\", \"SUB DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000\", \"BOOLAND DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 0\", \"BOOLAND DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000\", \"BOOLOR DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 0\", \"BOOLOR DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000\", \"NUMEQUAL DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 1\", \"NUMEQUAL DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000\", \"NUMEQUALVERIFY 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 0\", \"NUMEQUALVERIFY 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000\", \"NUMNOTEQUAL DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 0\", \"NUMNOTEQUAL DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000\", \"LESSTHAN DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 0\", \"LESSTHAN DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000\", \"GREATERTHAN DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 0\", \"GREATERTHAN DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000\", \"LESSTHANOREQUAL DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 0\", \"LESSTHANOREQUAL DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000\", \"GREATERTHANOREQUAL DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 0\", \"GREATERTHANOREQUAL DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000\", \"MIN DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 0\", \"MIN DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000\", \"MAX DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0x02 0x0000 0\", \"MAX DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+\n+[\"0x02 0x0000 0 0\", \"WITHIN DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000 0\", \"WITHIN DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0 0x02 0x0000\", \"WITHIN DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+\n+[\"0 0 0x02 0x0000\", \"CHECKMULTISIG DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000 0\", \"CHECKMULTISIG DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000 0 1\", \"CHECKMULTISIG DROP 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0 0x02 0x0000\", \"CHECKMULTISIGVERIFY 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n+[\"0 0x02 0x0000 0\", \"CHECKMULTISIGVERIFY 1\", \"MINIMALDATA\", \"MINIMALNUM\"],\n \n \n [\"Order of CHECKMULTISIG evaluation tests, inverted by swapping the order of\"],\n@@ -2518,7 +2518,7 @@\n [\"CHECKSEQUENCEVERIFY tests\"],\n [\"\", \"CHECKSEQUENCEVERIFY\", \"CHECKSEQUENCEVERIFY\", \"INVALID_STACK_OPERATION\", \"CSV automatically fails on an empty stack\"],\n [\"-1\", \"CHECKSEQUENCEVERIFY\", \"CHECKSEQUENCEVERIFY\", \"NEGATIVE_LOCKTIME\", \"CSV automatically fails if stack top is negative\"],\n-[\"0x0100\", \"CHECKSEQUENCEVERIFY\", \"CHECKSEQUENCEVERIFY,MINIMALDATA\", \"UNKNOWN_ERROR\", \"CSV fails if stack top is not minimally encoded\"],\n+[\"0x0100\", \"CHECKSEQUENCEVERIFY\", \"CHECKSEQUENCEVERIFY,MINIMALDATA\", \"MINIMALNUM\", \"CSV fails if stack top is not minimally encoded\"],\n [\"0\", \"CHECKSEQUENCEVERIFY\", \"CHECKSEQUENCEVERIFY\", \"UNSATISFIED_LOCKTIME\", \"CSV fails if stack top bit 1 << 31 is set and the tx version < 2\"],\n [\"4294967296\", \"CHECKSEQUENCEVERIFY\", \"CHECKSEQUENCEVERIFY\", \"UNSATISFIED_LOCKTIME\",\n   \"CSV fails if stack top bit 1 << 31 is not set, and tx version < 2\"],"
      },
      {
        "sha": "d4701e16e5b1e279cd5f1f5f6bd39819cb0e9809",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50605f0c343daa3f93c7740af202b6778a378f1a/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50605f0c343daa3f93c7740af202b6778a378f1a/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=50605f0c343daa3f93c7740af202b6778a378f1a",
        "patch": "@@ -99,6 +99,8 @@ static ScriptErrorDesc script_errors[]={\n     {SCRIPT_ERR_WITNESS_PUBKEYTYPE, \"WITNESS_PUBKEYTYPE\"},\n     {SCRIPT_ERR_OP_CODESEPARATOR, \"OP_CODESEPARATOR\"},\n     {SCRIPT_ERR_SIG_FINDANDDELETE, \"SIG_FINDANDDELETE\"},\n+    {SCRIPT_ERR_NUMOVERFLOW, \"NUMOVERFLOW\"},\n+    {SCRIPT_ERR_MINIMALNUM, \"MINIMALNUM\"},\n };\n \n static const char *FormatScriptError(ScriptError_t err)"
      }
    ]
  }
]