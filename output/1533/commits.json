[
  {
    "sha": "e8a02b8b08b769dea6cdf52805d1283d78cbdc84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOGEwMmI4YjA4Yjc2OWRlYTZjZGY1MjgwNWQxMjgzZDc4Y2JkYzg0",
    "commit": {
      "author": {
        "name": "Matthew Redmond",
        "email": "matthew.holt.redmond@gmail.com",
        "date": "2012-06-29T05:07:57Z"
      },
      "committer": {
        "name": "Matthew Redmond",
        "email": "matthew.holt.redmond@gmail.com",
        "date": "2012-06-29T05:07:57Z"
      },
      "message": "CTXOut::nValue encapsulation -- the long term goal is to get rid of\nSetPresentValue function",
      "tree": {
        "sha": "a79dcfc1c1b4f2bbb43619c9ec3c0582063650b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a79dcfc1c1b4f2bbb43619c9ec3c0582063650b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8a02b8b08b769dea6cdf52805d1283d78cbdc84",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8a02b8b08b769dea6cdf52805d1283d78cbdc84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8a02b8b08b769dea6cdf52805d1283d78cbdc84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/comments",
    "author": {
      "login": "mhredmond21",
      "id": 1870248,
      "node_id": "MDQ6VXNlcjE4NzAyNDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1870248?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhredmond21",
      "html_url": "https://github.com/mhredmond21",
      "followers_url": "https://api.github.com/users/mhredmond21/followers",
      "following_url": "https://api.github.com/users/mhredmond21/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhredmond21/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhredmond21/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhredmond21/subscriptions",
      "organizations_url": "https://api.github.com/users/mhredmond21/orgs",
      "repos_url": "https://api.github.com/users/mhredmond21/repos",
      "events_url": "https://api.github.com/users/mhredmond21/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhredmond21/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mhredmond21",
      "id": 1870248,
      "node_id": "MDQ6VXNlcjE4NzAyNDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1870248?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mhredmond21",
      "html_url": "https://github.com/mhredmond21",
      "followers_url": "https://api.github.com/users/mhredmond21/followers",
      "following_url": "https://api.github.com/users/mhredmond21/following{/other_user}",
      "gists_url": "https://api.github.com/users/mhredmond21/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mhredmond21/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mhredmond21/subscriptions",
      "organizations_url": "https://api.github.com/users/mhredmond21/orgs",
      "repos_url": "https://api.github.com/users/mhredmond21/repos",
      "events_url": "https://api.github.com/users/mhredmond21/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mhredmond21/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e75acc006e8bc5c44d1d6e6c3b027fe28d8c743b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e75acc006e8bc5c44d1d6e6c3b027fe28d8c743b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e75acc006e8bc5c44d1d6e6c3b027fe28d8c743b"
      }
    ],
    "stats": {
      "total": 85,
      "additions": 49,
      "deletions": 36
    },
    "files": [
      {
        "sha": "7b128c871866654fd8cd8a7b82e197e5745cefdf",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=e8a02b8b08b769dea6cdf52805d1283d78cbdc84",
        "patch": "@@ -285,7 +285,7 @@ void TxToJSON(const CTransaction &tx, Object& entry, const Object& decomposition\n     BOOST_FOREACH(const CTxOut& txout, tx.vout)\n     {\n         Object out;\n-        out.push_back(Pair(\"value\", ValueFromAmount(txout.nValue)));\n+        out.push_back(Pair(\"value\", ValueFromAmount(txout.GetPresentValue())));\n         switch (decomposeScript) {\n         case DM_NONE:\n             break;\n@@ -888,7 +888,7 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n         BOOST_FOREACH(const CTxOut& txout, wtx.vout)\n             if (txout.scriptPubKey == scriptPubKey)\n                 if (wtx.GetDepthInMainChain() >= nMinDepth)\n-                    nAmount += txout.nValue;\n+                    nAmount += txout.GetPresentValue();\n     }\n \n     return  ValueFromAmount(nAmount);\n@@ -936,7 +936,7 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n             CTxDestination address;\n             if (ExtractDestination(txout.scriptPubKey, address) && IsMine(*pwalletMain, address) && setAddress.count(address))\n                 if (wtx.GetDepthInMainChain() >= nMinDepth)\n-                    nAmount += txout.nValue;\n+                    nAmount += txout.GetPresentValue();\n         }\n     }\n \n@@ -1294,7 +1294,7 @@ Value ListReceived(const Array& params, bool fByAccounts)\n                 continue;\n \n             tallyitem& item = mapTally[address];\n-            item.nAmount += txout.nValue;\n+            item.nAmount += txout.GetPresentValue();\n             item.nConf = min(item.nConf, nDepth);\n         }\n     }\n@@ -2178,7 +2178,7 @@ Value getmemorypool(const Array& params, bool fHelp)\n         result.push_back(Pair(\"version\", pblock->nVersion));\n         result.push_back(Pair(\"previousblockhash\", pblock->hashPrevBlock.GetHex()));\n         result.push_back(Pair(\"transactions\", transactions));\n-        result.push_back(Pair(\"coinbasevalue\", (int64_t)pblock->vtx[0].vout[0].nValue));\n+        result.push_back(Pair(\"coinbasevalue\", (int64_t)pblock->vtx[0].vout[0].GetPresentValue()));\n         result.push_back(Pair(\"coinbaseflags\", HexStr(COINBASE_FLAGS.begin(), COINBASE_FLAGS.end())));\n         result.push_back(Pair(\"time\", (int64_t)pblock->nTime));\n         result.push_back(Pair(\"mintime\", (int64_t)pindexPrev->GetMedianTimePast()+1));"
      },
      {
        "sha": "47f8adca5118187a747f5e04045199efc973eac8",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e8a02b8b08b769dea6cdf52805d1283d78cbdc84",
        "patch": "@@ -437,11 +437,11 @@ bool CTransaction::CheckTransaction() const\n     int64 nValueOut = 0;\n     BOOST_FOREACH(const CTxOut& txout, vout)\n     {\n-        if (txout.nValue < 0)\n+        if (txout.GetPresentValue() < 0)\n             return DoS(100, error(\"CTransaction::CheckTransaction() : txout.nValue negative\"));\n-        if (txout.nValue > MAX_MONEY)\n+        if (txout.GetPresentValue() > MAX_MONEY)\n             return DoS(100, error(\"CTransaction::CheckTransaction() : txout.nValue too high\"));\n-        nValueOut += txout.nValue;\n+        nValueOut += txout.GetPresentValue();\n         if (!MoneyRange(nValueOut))\n             return DoS(100, error(\"CTransaction::CheckTransaction() : txout total out of range\"));\n     }\n@@ -1127,7 +1127,7 @@ int64 CTransaction::GetValueIn(const MapPrevTx& inputs) const\n     int64 nResult = 0;\n     for (unsigned int i = 0; i < vin.size(); i++)\n     {\n-        nResult += GetOutputFor(vin[i], inputs).nValue;\n+        nResult += GetOutputFor(vin[i], inputs).GetPresentValue();\n     }\n     return nResult;\n \n@@ -1177,8 +1177,8 @@ bool CTransaction::ConnectInputs(MapPrevTx inputs,\n                         return error(\"ConnectInputs() : tried to spend coinbase at depth %d\", pindexBlock->nHeight - pindex->nHeight);\n \n             // Check for negative or overflow input values\n-            nValueIn += txPrev.vout[prevout.n].nValue;\n-            if (!MoneyRange(txPrev.vout[prevout.n].nValue) || !MoneyRange(nValueIn))\n+            nValueIn += txPrev.vout[prevout.n].GetPresentValue();\n+            if (!MoneyRange(txPrev.vout[prevout.n].GetPresentValue()) || !MoneyRange(nValueIn))\n                 return DoS(100, error(\"ConnectInputs() : txin values out of range\"));\n \n         }\n@@ -1275,9 +1275,9 @@ bool CTransaction::ClientConnectInputs()\n             // // Flag outpoints as used\n             // txPrev.vout[prevout.n].posNext = posThisTx;\n \n-            nValueIn += txPrev.vout[prevout.n].nValue;\n+            nValueIn += txPrev.vout[prevout.n].GetPresentValue();\n \n-            if (!MoneyRange(txPrev.vout[prevout.n].nValue) || !MoneyRange(nValueIn))\n+            if (!MoneyRange(txPrev.vout[prevout.n].GetPresentValue()) || !MoneyRange(nValueIn))\n                 return error(\"ClientConnectInputs() : txin values out of range\");\n         }\n         if (GetValueOut() > nValueIn)\n@@ -1969,7 +1969,7 @@ bool LoadBlockIndex(bool fAllowNew)\n         txNew.vin.resize(1);\n         txNew.vout.resize(1);\n         txNew.vin[0].scriptSig = CScript() << 486604799 << CBigNum(4) << vector<unsigned char>((const unsigned char*)pszTimestamp, (const unsigned char*)pszTimestamp + strlen(pszTimestamp));\n-        txNew.vout[0].nValue = 50 * COIN;\n+        txNew.vout[0].SetPresentValue(50 * COIN);\n         txNew.vout[0].scriptPubKey = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n         CBlock block;\n         block.vtx.push_back(txNew);\n@@ -3341,7 +3341,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n                     porphan->setDependsOn.insert(txin.prevout.hash);\n                     continue;\n                 }\n-                int64 nValueIn = txPrev.vout[txin.prevout.n].nValue;\n+                int64 nValueIn = txPrev.vout[txin.prevout.n].GetPresentValue();\n \n                 // Read block header\n                 int nConf = txindex.GetDepthInMainChain();\n@@ -3444,7 +3444,7 @@ CBlock* CreateNewBlock(CReserveKey& reservekey)\n         printf(\"CreateNewBlock(): total size %lu\\n\", nBlockSize);\n \n     }\n-    pblock->vtx[0].vout[0].nValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n+    pblock->vtx[0].vout[0].SetPresentValue(GetBlockValue(pindexPrev->nHeight+1, nFees));\n \n     // Fill in header\n     pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n@@ -3532,7 +3532,7 @@ bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)\n     printf(\"BitcoinMiner:\\n\");\n     printf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex().c_str(), hashTarget.GetHex().c_str());\n     pblock->print();\n-    printf(\"generated %s\\n\", FormatMoney(pblock->vtx[0].vout[0].nValue).c_str());\n+    printf(\"generated %s\\n\", FormatMoney(pblock->vtx[0].vout[0].GetPresentValue()).c_str());\n \n     // Found a solution\n     {"
      },
      {
        "sha": "f7a5ed0b1515c9494c00cafb9af9dabb00febb89",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 17,
        "deletions": 4,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=e8a02b8b08b769dea6cdf52805d1283d78cbdc84",
        "patch": "@@ -307,8 +307,11 @@ class CTxIn\n  */\n class CTxOut\n {\n+\n+private:\n+\tint64 nValue;\n+\n public:\n-    int64 nValue;\n     CScript scriptPubKey;\n \n     CTxOut()\n@@ -366,6 +369,16 @@ class CTxOut\n     {\n         printf(\"%s\\n\", ToString().c_str());\n     }\n+\n+    int64 GetPresentValue() const\n+    {\n+    \treturn nValue;\n+    }\n+\n+    void SetPresentValue(int64 presentValue)\n+    {\n+    \tnValue = presentValue;\n+    }\n };\n \n \n@@ -513,8 +526,8 @@ class CTransaction\n         int64 nValueOut = 0;\n         BOOST_FOREACH(const CTxOut& txout, vout)\n         {\n-            nValueOut += txout.nValue;\n-            if (!MoneyRange(txout.nValue) || !MoneyRange(nValueOut))\n+            nValueOut += txout.GetPresentValue();\n+            if (!MoneyRange(txout.GetPresentValue()) || !MoneyRange(nValueOut))\n                 throw std::runtime_error(\"CTransaction::GetValueOut() : value out of range\");\n         }\n         return nValueOut;\n@@ -567,7 +580,7 @@ class CTransaction\n         if (nMinFee < nBaseFee)\n         {\n             BOOST_FOREACH(const CTxOut& txout, vout)\n-                if (txout.nValue < CENT)\n+                if (txout.GetPresentValue() < CENT)\n                     nMinFee = nBaseFee;\n         }\n "
      },
      {
        "sha": "0c97c623e8c1c4b2e156b54c6a2101390d4ddd53",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=e8a02b8b08b769dea6cdf52805d1283d78cbdc84",
        "patch": "@@ -183,7 +183,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n                         }\n                     }\n \n-                    strHTML += tr(\"<b>Debit:</b> \") + BitcoinUnits::formatWithUnit(BitcoinUnits::BTC, -txout.nValue) + \"<br>\";\n+                    strHTML += tr(\"<b>Debit:</b> \") + BitcoinUnits::formatWithUnit(BitcoinUnits::BTC, -txout.GetPresentValue()) + \"<br>\";\n                 }\n \n                 if (fAllToMe)\n@@ -269,7 +269,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n                                     strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[address]) + \" \";\n                                 strHTML += QString::fromStdString(CBitcoinAddress(address).ToString());\n                             }\n-                            strHTML = strHTML + \" Amount=\" + BitcoinUnits::formatWithUnit(BitcoinUnits::BTC,vout.nValue);\n+                            strHTML = strHTML + \" Amount=\" + BitcoinUnits::formatWithUnit(BitcoinUnits::BTC,vout.GetPresentValue());\n                             strHTML = strHTML + \" IsMine=\" + (wallet->IsMine(vout) ? \"true\" : \"false\") + \"</li>\";\n                         }\n                     }"
      },
      {
        "sha": "222a2840b3e215b208ec8bda9412ae4608252e84",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=e8a02b8b08b769dea6cdf52805d1283d78cbdc84",
        "patch": "@@ -53,7 +53,7 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n                 TransactionRecord sub(hash, nTime);\n                 CTxDestination address;\n                 sub.idx = parts.size(); // sequence number\n-                sub.credit = txout.nValue;\n+                sub.credit = txout.GetPresentValue();\n                 if (wtx.IsCoinBase())\n                 {\n                     // Generated\n@@ -128,7 +128,7 @@ QList<TransactionRecord> TransactionRecord::decomposeTransaction(const CWallet *\n                     sub.address = mapValue[\"to\"];\n                 }\n \n-                int64 nValue = txout.nValue;\n+                int64 nValue = txout.GetPresentValue();\n                 /* Add fee to first output */\n                 if (nTxFee > 0)\n                 {"
      },
      {
        "sha": "f33ee81bfd4e1a5ab3673849b71063c97ee9baf5",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=e8a02b8b08b769dea6cdf52805d1283d78cbdc84",
        "patch": "@@ -457,7 +457,7 @@ int64 CWallet::GetDebit(const CTxIn &txin) const\n             const CWalletTx& prev = (*mi).second;\n             if (txin.prevout.n < prev.vout.size())\n                 if (IsMine(prev.vout[txin.prevout.n]))\n-                    return prev.vout[txin.prevout.n].nValue;\n+                    return prev.vout[txin.prevout.n].GetPresentValue();\n         }\n     }\n     return 0;\n@@ -568,10 +568,10 @@ void CWalletTx::GetAmounts(int64& nGeneratedImmature, int64& nGeneratedMature, l\n             continue;\n \n         if (nDebit > 0)\n-            listSent.push_back(make_pair(address, txout.nValue));\n+            listSent.push_back(make_pair(address, txout.GetPresentValue()));\n \n         if (pwallet->IsMine(txout))\n-            listReceived.push_back(make_pair(address, txout.nValue));\n+            listReceived.push_back(make_pair(address, txout.GetPresentValue()));\n     }\n \n }\n@@ -916,7 +916,7 @@ void CWallet::AvailableCoins(vector<COutput>& vCoins) const\n                 continue;\n \n             for (unsigned int i = 0; i < pcoin->vout.size(); i++)\n-                if (!(pcoin->IsSpent(i)) && IsMine(pcoin->vout[i]) && pcoin->vout[i].nValue > 0)\n+                if (!(pcoin->IsSpent(i)) && IsMine(pcoin->vout[i]) && pcoin->vout[i].GetPresentValue() > 0)\n                     vCoins.push_back(COutput(pcoin, i, pcoin->GetDepthInMainChain()));\n         }\n     }\n@@ -983,7 +983,7 @@ bool CWallet::SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfThe\n             continue;\n \n         int i = output.i;\n-        int64 n = pcoin->vout[i].nValue;\n+        int64 n = pcoin->vout[i].GetPresentValue();\n \n         pair<int64,pair<const CWalletTx*,unsigned int> > coin = make_pair(n,make_pair(pcoin, i));\n \n@@ -1111,7 +1111,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend, CW\n                     return false;\n                 BOOST_FOREACH(PAIRTYPE(const CWalletTx*, unsigned int) pcoin, setCoins)\n                 {\n-                    int64 nCredit = pcoin.first->vout[pcoin.second].nValue;\n+                    int64 nCredit = pcoin.first->vout[pcoin.second].GetPresentValue();\n                     dPriority += (double)nCredit * pcoin.first->GetDepthInMainChain();\n                 }\n "
      },
      {
        "sha": "d581f855c6ee8809c5d2ea91c3b0ddfd6ce3493b",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8a02b8b08b769dea6cdf52805d1283d78cbdc84/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=e8a02b8b08b769dea6cdf52805d1283d78cbdc84",
        "patch": "@@ -172,16 +172,16 @@ class CWallet : public CCryptoKeyStore\n     }\n     int64 GetCredit(const CTxOut& txout) const\n     {\n-        if (!MoneyRange(txout.nValue))\n+        if (!MoneyRange(txout.GetPresentValue()))\n             throw std::runtime_error(\"CWallet::GetCredit() : value out of range\");\n-        return (IsMine(txout) ? txout.nValue : 0);\n+        return (IsMine(txout) ? txout.GetPresentValue() : 0);\n     }\n     bool IsChange(const CTxOut& txout) const;\n     int64 GetChange(const CTxOut& txout) const\n     {\n-        if (!MoneyRange(txout.nValue))\n+        if (!MoneyRange(txout.GetPresentValue()))\n             throw std::runtime_error(\"CWallet::GetChange() : value out of range\");\n-        return (IsChange(txout) ? txout.nValue : 0);\n+        return (IsChange(txout) ? txout.GetPresentValue() : 0);\n     }\n     bool IsMine(const CTransaction& tx) const\n     {\n@@ -621,7 +621,7 @@ class COutput\n \n     std::string ToString() const\n     {\n-        return strprintf(\"COutput(%s, %d, %d) [%s]\", tx->GetHash().ToString().substr(0,10).c_str(), i, nDepth, FormatMoney(tx->vout[i].nValue).c_str());\n+        return strprintf(\"COutput(%s, %d, %d) [%s]\", tx->GetHash().ToString().substr(0,10).c_str(), i, nDepth, FormatMoney(tx->vout[i].GetPresentValue()).c_str());\n     }\n \n     void print() const"
      }
    ]
  }
]