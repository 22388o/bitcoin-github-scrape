[
  {
    "sha": "f4beb4996d27f2cdaf4f0a63e7dc044bf17decce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNGJlYjQ5OTZkMjdmMmNkYWY0ZjBhNjNlN2RjMDQ0YmYxN2RlY2Nl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-09-25T09:10:37Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-09-25T09:16:09Z"
      },
      "message": "test: Remove python dead code linter\n\nPrimarily I'd like to remove this because it is very imprecise, due to\nPython's dynamic nature, giving it a large list of false positives that\nneed to be listed as exceptions. See for example #16906.\n\nIt's also a frequent source of complaints. I'm doubtful of the\nusefulness of checking for dead code in a linter in the first place.\nHaving some dead code in the test framework for a while is not a\ndisaster.",
      "tree": {
        "sha": "cf06c98c4caeab222b16e44bbf874910b48d8df7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cf06c98c4caeab222b16e44bbf874910b48d8df7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4beb4996d27f2cdaf4f0a63e7dc044bf17decce",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4beb4996d27f2cdaf4f0a63e7dc044bf17decce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4beb4996d27f2cdaf4f0a63e7dc044bf17decce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4beb4996d27f2cdaf4f0a63e7dc044bf17decce/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "36604b4ef568aaf131f11c2b10e8c39e7a04b464",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36604b4ef568aaf131f11c2b10e8c39e7a04b464",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/36604b4ef568aaf131f11c2b10e8c39e7a04b464"
      }
    ],
    "stats": {
      "total": 70,
      "additions": 0,
      "deletions": 70
    },
    "files": [
      {
        "sha": "12c3bfce451c88f049724e1eea67bf8dd6180605",
        "filename": "ci/lint/04_install.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4beb4996d27f2cdaf4f0a63e7dc044bf17decce/ci/lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4beb4996d27f2cdaf4f0a63e7dc044bf17decce/ci/lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/04_install.sh?ref=f4beb4996d27f2cdaf4f0a63e7dc044bf17decce",
        "patch": "@@ -8,7 +8,6 @@ export LC_ALL=C\n \n travis_retry pip3 install codespell==1.15.0\n travis_retry pip3 install flake8==3.7.8\n-travis_retry pip3 install vulture==1.0\n \n SHELLCHECK_VERSION=v0.6.0\n curl -s \"https://storage.googleapis.com/shellcheck/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" | tar --xz -xf - --directory /tmp/"
      },
      {
        "sha": "33bb7b44faab2a2e1208e3b36bce145198ffc247",
        "filename": "test/lint/lint-python-dead-code-whitelist",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36604b4ef568aaf131f11c2b10e8c39e7a04b464/test/lint/lint-python-dead-code-whitelist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36604b4ef568aaf131f11c2b10e8c39e7a04b464/test/lint/lint-python-dead-code-whitelist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-python-dead-code-whitelist?ref=36604b4ef568aaf131f11c2b10e8c39e7a04b464",
        "patch": "@@ -1,46 +0,0 @@\n-BadInputOutpointIndex  # unused class (test/functional/data/invalid_txs.py)\n-_.carbon_path  # unused attribute (contrib/macdeploy/custom_dsstore.py)\n-connection_lost  # unused function (test/functional/test_framework/mininode.py)\n-connection_made  # unused function (test/functional/test_framework/mininode.py)\n-_.converter  # unused attribute (test/functional/test_framework/test_framework.py)\n-_.daemon  # unused attribute (test/functional/test_framework/socks5.py)\n-data_received  # unused function (test/functional/test_framework/mininode.py)\n-DuplicateInput  # unused class (test/functional/data/invalid_txs.py)\n-DisabledOpcodeTemplates  # unused class (test/functional/data/invalid_txs.py)\n-_.filename  # unused attribute (contrib/macdeploy/custom_dsstore.py)\n-InvalidOPIFConstruction  # unused class (test/functional/data/invalid_txs.py)\n-_.is_compressed  # unused property (test/functional/test_framework/key.py)\n-legacy  # unused variable (test/functional/test_framework/address.py)\n-msg_generic  # unused class (test/functional/test_framework/messages.py)\n-NonexistentInput  # unused class (test/functional/data/invalid_txs.py)\n-on_addr  # unused function (test/functional/test_framework/mininode.py)\n-on_blocktxn  # unused function (test/functional/test_framework/mininode.py)\n-on_block  # unused function (test/functional/test_framework/mininode.py)\n-on_cmpctblock  # unused function (test/functional/test_framework/mininode.py)\n-on_feefilter  # unused function (test/functional/test_framework/mininode.py)\n-on_getaddr  # unused function (test/functional/test_framework/mininode.py)\n-on_getblocks  # unused function (test/functional/test_framework/mininode.py)\n-on_getblocktxn  # unused function (test/functional/test_framework/mininode.py)\n-on_getdata  # unused function (test/functional/test_framework/mininode.py)\n-on_getheaders  # unused function (test/functional/test_framework/mininode.py)\n-on_headers  # unused function (test/functional/test_framework/mininode.py)\n-on_inv  # unused function (test/functional/test_framework/mininode.py)\n-on_mempool  # unused function (test/functional/test_framework/mininode.py)\n-on_notfound  # unused function (test/functional/test_framework/mininode.py)\n-on_ping  # unused function (test/functional/test_framework/mininode.py)\n-on_pong  # unused function (test/functional/test_framework/mininode.py)\n-on_reject  # unused function (test/functional/test_framework/mininode.py)\n-on_sendcmpct  # unused function (test/functional/test_framework/mininode.py)\n-on_sendheaders  # unused function (test/functional/test_framework/mininode.py)\n-on_tx  # unused function (test/functional/test_framework/mininode.py)\n-on_verack  # unused function (test/functional/test_framework/mininode.py)\n-on_version  # unused function (test/functional/test_framework/mininode.py)\n-_.optionxform  # unused attribute (test/util/bitcoin-util-test.py)\n-OutputMissing  # unused class (test/functional/data/invalid_txs.py)\n-_.posix_path  # unused attribute (contrib/macdeploy/custom_dsstore.py)\n-profile_with_perf  # unused function (test/functional/test_framework/test_node.py)\n-SizeTooSmall  # unused class (test/functional/data/invalid_txs.py)\n-SpendNegative  # unused class (test/functional/data/invalid_txs.py)\n-SpendTooMuch  # unused class (test/functional/data/invalid_txs.py)\n-TooManySigops  # unused class (test/functional/data/invalid_txs.py)\n-verify_ecdsa  # unused function (test/functional/test_framework/key.py)"
      },
      {
        "sha": "af37d393e8814a0e8213a6acf4613bafb6ad4608",
        "filename": "test/lint/lint-python-dead-code.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36604b4ef568aaf131f11c2b10e8c39e7a04b464/test/lint/lint-python-dead-code.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36604b4ef568aaf131f11c2b10e8c39e7a04b464/test/lint/lint-python-dead-code.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-python-dead-code.sh?ref=36604b4ef568aaf131f11c2b10e8c39e7a04b464",
        "patch": "@@ -1,23 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-# Find dead Python code.\n-\n-export LC_ALL=C\n-\n-if ! command -v vulture > /dev/null; then\n-    echo \"Skipping Python dead code linting since vulture is not installed. Install by running \\\"pip3 install vulture\\\"\"\n-    exit 0\n-fi\n-\n-VULTURE_SUPPRESSIONS=$(dirname \"${BASH_SOURCE[0]}\")/lint-python-dead-code-whitelist\n-if ! vulture \\\n-    --min-confidence 60 \\\n-    $(git rev-parse --show-toplevel) \\\n-    \"${VULTURE_SUPPRESSIONS}\"; then\n-    echo \"False positives? Suppressions can be added to ${VULTURE_SUPPRESSIONS}\"\n-    exit 1\n-fi"
      }
    ]
  }
]