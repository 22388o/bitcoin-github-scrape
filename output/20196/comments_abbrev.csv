DrahtBot,2020-10-20 14:37:33,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23561](https://github.com/bitcoin/bitcoin/pull/23561) (BIP324: Handshake prerequisites by dhruv)\n* [#23233](https://git",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-712900844,712900844,
vasild,2020-10-22 11:25:21,Addressed review suggestions and added a test to cover case `4.` from https://github.com/bitcoin/bitcoin/issues/20184.,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-714427142,714427142,
vasild,2020-10-22 12:34:37,Addressed review suggestions.,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-714462655,714462655,
vasild,2020-10-22 16:32:54,Fixed linter error `feature_bind_port_discover.py:25:18: E703 statement ends with a semicolon` :facepalm: ,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-714613601,714613601,
vasild,2020-12-17 17:34:13,Rebased and changed port numbers used in the functional tests.,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-747587485,747587485,
vasild,2021-01-14 13:04:41,3e55fbfe3...5647ca32e: rebased due to conflicts + address a [suggestion](https://github.com/bitcoin/bitcoin/pull/20196#discussion_r556430946).,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-760184250,760184250,
vasild,2021-01-17 12:33:33,"5647ca32e...58755690a: rebase, what's up with appveyor?",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-761805075,761805075,
hebasto,2021-01-17 13:13:43,"@vasild \n> what's up with appveyor?\n\nWhat do you mean?",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-761810859,761810859,
vasild,2021-01-17 13:15:51,@hebasto https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/37305037,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-761811157,761811157,
vasild,2021-01-18 13:49:34,"58755690a...d8c6dc0b6: undo the effects of `AddTimeData()` called indirectly by the newly added test `net_tests/initial_advertise_from_version_message` so that `timedata_tests/addtimedata` is not confused. Thanks, @MarcoFalke!",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-762262711,762262711,
vasild,2021-01-19 10:57:34,d8c6dc0b6...70cd1eaef: address [suggestion](https://github.com/bitcoin/bitcoin/pull/20196#discussion_r559688334),https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-762766676,762766676,
vasild,2021-02-10 15:57:45,70cd1eaef...698590c57: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-776812456,776812456,
vasild,2021-02-24 13:37:57,`698590c57...400cbd480`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-785081112,785081112,
vasild,2021-03-15 15:36:16,`400cbd480...b6fb4b928`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-799517957,799517957,
jonatack,2021-03-15 17:09:41,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-799589570,799589570,
vasild,2021-03-17 13:28:22,`b6fb4b928...0c24971f9`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-801079743,801079743,
vasild,2021-03-26 09:47:24,`0c24971f9...4977c0fdb`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-808079560,808079560,
vasild,2021-03-26 13:22:33,`4977c0fdb...7d5d2416e`: address review suggestions,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-808210718,808210718,
vasild,2021-04-09 12:53:39,"> ...a test that accepts the ""wrong"" option\n\nThat must be some ""feature"" in the testing framework - it also accepts `--ihave11`.",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-816660759,816660759,
vasild,2021-04-09 13:30:43,`7d5d2416e...3501180d3`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-816683688,816683688,
vasild,2021-04-09 13:31:39,`3501180d3...33b0a79df`: address suggestions,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-816684259,816684259,
vasild,2021-04-13 16:29:57,"`33b0a79df...a5590dcf9`: use `NetPermissions::HasFlag()` to check if `PF_NOBAN` is set, thanks @jonatack!",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-818873660,818873660,
jonatack,2021-04-13 18:19:17,"ACK a5590dcf9dccd82bb0784349d2a3c91dec263380\n\nHappy to re-ack if you add the `NetPermissionFlags::` scope mentioned in https://github.com/bitcoin/bitcoin/pull/20196#discussion_r612676028.",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-818955338,818955338,
vasild,2021-04-14 06:42:03,`a5590dcf9...7126e12fa`: use `NetPermissionFlags::PF_NOBAN` instead of `PF_NOBAN`,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-819270856,819270856,
jonatack,2021-04-14 08:39:16,"re-ACK  7126e12fab1eff95efeaab349a49e4f1f714ed4f  per `git diff a5590dc 7126e12`\n",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-819342877,819342877,
jonatack,2021-05-19 11:29:17,Bump. This could use a review by someone!,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-844012726,844012726,
vasild,2021-05-19 11:43:14,`7126e12fab...9c15f204e5`: conflictless rebase to get green CI,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-844022157,844022157,
vasild,2021-05-19 12:19:14,`9c15f204e5...2519696300`: fix silent merge conflict,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-844049274,844049274,
vasild,2021-05-19 16:30:23,`2519696300...b962cbc22c`: address review suggestion,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-844269202,844269202,
jonatack,2021-05-19 16:41:19,"Thanks!\n\nCode review re-ACK  b962cbc22cd35a6f7c5b42a0f3a113c109b4cee2 per `git range-diff d4c409c 2519696 b962cbc`\n",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-844277942,844277942,
vasild,2021-07-20 10:36:37,`b962cbc22c...4ea0a60f75`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-883287873,883287873,
jonatack,2021-07-20 14:34:29,"Build:\n```\ntest/net_tests.cpp:964:34: error: no member named 'vAddrToSend' in 'CNode'\n    BOOST_CHECK(std::any_of(peer.vAddrToSend.begin(), peer.vAddrToSend.end(),\n                            ~~~~ ^\n\ntest/net_tests.cpp:964:60: error: no member named 'vAddrToSend' in 'CNode'\n    BOOST_CHECK(std::any_of(peer.vAddrToSend.begin(), peer.vAddrToSend.end(),\n                               ",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-883444294,883444294,
vasild,2021-07-20 15:08:32,"Yes :sob: after recent changes `CNode::vAddrToSend` has been moved to `Peer::m_addrs_to_send` (`Peer` is defined only in `net_processing.cpp`, not exposed outside). So this is now nearly untestable. I am considering how to resolve this. Would hate to drop the test.",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-883470756,883470756,
vasild,2021-07-22 16:43:54,`4ea0a60f75...6813052724`: rewrite the test `net_tests/initial_advertise_from_version_message` so that it works with latest `master`,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-885058188,885058188,
vasild,2021-07-23 06:11:20,"`6813052724...2aee1b92c5`: fix `net_tests/get_local_addr_for_peer_port`: compare `CService` instead of `CAddress` - ""time"" and ""services"" (part of `CAddress`) are irrelevant and should not be compared (they differ).",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-885423256,885423256,
vasild,2021-07-29 16:04:24,`2aee1b92c5...ad6c1fbe8f`: address suggestions,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-889272310,889272310,
vasild,2021-07-29 16:28:14,`ad6c1fbe8f...e4474f66d9`: change forgotten argument to pass `Span` by value,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-889290175,889290175,
jonatack,2021-07-29 16:52:37,"ACK e4474f66d91228b8ddcc8ce4fb5ebdb447ecede5 rebased and debug-built to current master to check for silent merge conflicts, reviewed code, removed the code behind each behavior change and verified the relevant test failed where expected, and passed with the code re-inserted\n\nPossible additional to-do: manually reproduce and verify the issues outlined in https://github.com/bitcoin/bitcoin/issue",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-889305628,889305628,
vasild,2021-08-20 11:31:38,`e4474f66d9...812deb7470`: rebase due to conflicts,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-902628603,902628603,
sipa,2021-08-20 21:39:57,utACK 812deb7470d1d60ee6756b2cbec72bb32999312e. Agree with the concept and code changes. I've only superficially reviewed the new test.,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-902972112,902972112,
jonatack,2021-08-20 21:50:00,Code review re-ACK 812deb7470d1d60ee6756b2cbec72bb32999312e per `git range-diff f8b837 e4474f6 812deb7` rebase-only since my last review,https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-902975593,902975593,
vasild,2021-09-29 13:44:28,"`812deb7470...cb86c1fd20`: rebase due to conflicts\n\nInvalidates ACKs from @sipa, @jonatack.",https://github.com/bitcoin/bitcoin/pull/20196#issuecomment-930190064,930190064,
MarcoFalke,2020-10-21 14:40:21,"I believe this can be written shorter\n\n```suggestion\n            local = next(l for l in self.nodes[i].getnetworkinfo()['localaddresses'] if l['address'] == '2.2.2.2')\n            assert_equal(local['port'], expected_port)\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r509346608,509346608,test/functional/feature_bind_port_externalip.py
MarcoFalke,2020-10-21 14:45:00,Does this need to be overwritten? You can use `skip_test_if_missing_module`,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r509350641,509350641,test/functional/feature_bind_port_externalip.py
MarcoFalke,2020-10-21 14:45:16,uppercase constants,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r509350836,509350836,test/functional/feature_bind_port_externalip.py
MarcoFalke,2020-10-21 14:46:18,"```suggestion\n        static_cast<uint16_t>(args.GetArg(""-port"", Params().GetDefaultPort()));\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r509351706,509351706,src/init.cpp
MarcoFalke,2020-10-21 14:48:49,"would be good to remove the global here, but that can be done in a follow-up",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r509353895,509353895,src/test/net_tests.cpp
MarcoFalke,2020-10-21 14:51:02,"Can be written shorter\n\n```suggestion\n    generatetoaddress(m_node, ADDRESS_BCRT1_UNSPENDABLE);\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r509355760,509355760,src/test/net_tests.cpp
vasild,2020-10-22 09:09:43,"`raise SkipTest()` is not the main reason to override `setup_nodes()`. It is necessary to specify the command line arguments for each bitcoind node. The current test does that by `self.add_nodes(..., extra_args=my_variable_here)` in `setup_nodes()`. Other tests do that either in `setup_nodes()` or `setup_network()`.\n\nIs there a better way?",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510003013,510003013,test/functional/feature_bind_port_externalip.py
vasild,2020-10-22 09:13:22,"To me that is less readable. Maybe my python level is poor, but then maybe other readers of this are also poor pythoners. I prefer to keep it simple stupid:\n```\nfor ...\n    if ...\n        break\n```\nthat is nearly the same in any programming language.",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510005534,510005534,test/functional/feature_bind_port_externalip.py
vasild,2020-10-22 10:19:39,"`CChainState::IsInitialBlockDownload()` still returns `true` :/\n\n(it was necessary to `s/TestingSetup/RegTestingSetup/` in `BOOST_FIXTURE_TEST_SUITE()` in order to get `generatetoaddress()` to accept `ADDRESS_BCRT1_UNSPENDABLE`)",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510047632,510047632,src/test/net_tests.cpp
MarcoFalke,2020-10-22 10:51:21,Set `self.extra_args = ...`?,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510065599,510065599,test/functional/feature_bind_port_externalip.py
vasild,2020-10-22 11:21:51,"Indeed! Changed, thanks for the suggestion!",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510081932,510081932,test/functional/feature_bind_port_externalip.py
vasild,2020-10-22 11:22:11,Changed,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510082073,510082073,test/functional/feature_bind_port_externalip.py
vasild,2020-10-22 11:22:22,Changed,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510082162,510082162,src/init.cpp
vasild,2020-10-22 11:23:10,"Changed to `m_node.args->ForceSetArg(""-bind"", """");`",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510082566,510082566,src/test/net_tests.cpp
MarcoFalke,2020-10-22 11:37:39,"Oh, sorry my bad. The mined block will have the timestamp of genesis (plus one), so the time is still too far back.\n\nAn alternative would be to use mocktime, also ugly, but less LOC.\n\n```diff\ndiff --git a/src/test/net_tests.cpp b/src/test/net_tests.cpp\nindex 9519f3fd0c..7e77b758b2 100644\n--- a/src/test/net_tests.cpp\n+++ b/src/test/net_tests.cpp\n@@ -88,7 +88,7 @@ static CDataStrea",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510090395,510090395,src/test/net_tests.cpp
MarcoFalke,2020-10-22 11:43:54,same feedback here ;),https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510093818,510093818,test/functional/feature_bind_port_discover.py
vasild,2020-10-22 12:33:40,Changed,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510123145,510123145,test/functional/feature_bind_port_discover.py
vasild,2020-10-22 12:34:20,"Changed, less LOC. Thanks!",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510123549,510123549,src/test/net_tests.cpp
vasild,2020-10-23 13:37:10,The ports used better not be hardcoded but derived from `p2p_port()` in order not to clash with other tests that may be running on the system at the same time.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510889053,510889053,test/functional/feature_bind_port_externalip.py
MarcoFalke,2020-10-23 14:06:31,Or you could start in a fresh range (ports that are not used by p2p or rpc in other tests),https://github.com/bitcoin/bitcoin/pull/20196#discussion_r510908676,510908676,test/functional/feature_bind_port_externalip.py
vasild,2020-12-17 17:33:41,Changed to start in a fresh range from 30000 as that is the easiest (maximum that can be returned by `p2p_port()` or `rpc_port()` is `PORT_MIN + 2 * PORT_RANGE` which his `21000` :eyes:).,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r545272234,545272234,test/functional/feature_bind_port_externalip.py
MarcoFalke,2021-01-13 10:52:22,"nit: Might be possible to write, shorter, and to abstract away the inner workings of IsIbd\n\n```suggestion\nTestChainState& chainstate = *(TestChainState*)&m_node.chainman->ActiveChainstate();\nchainstate.JumpOutOfIbd();\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r556430946,556430946,src/test/net_tests.cpp
vasild,2021-01-14 13:05:53,Done. This cast to a class which it actually is not looks quite hackish.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r557380409,557380409,src/test/net_tests.cpp
MarcoFalke,2021-01-17 13:21:04,I presume this line will make appveyor etc fail if the test process isn't restarted in between test cases.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r559180800,559180800,src/test/net_tests.cpp
MarcoFalke,2021-01-17 13:22:58,"See\n\n```\nTest cases order is shuffled using seed: 193951562\n```\n\nhttps://cirrus-ci.com/task/5953114714931200?command=ci#L3792\n\nWhich should make it reproducible ",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r559181011,559181011,src/test/net_tests.cpp
vasild,2021-01-18 13:47:35,"Thanks, that helped a lot nailing the issue down. Fixed now.",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r559577818,559577818,src/test/net_tests.cpp
MarcoFalke,2021-01-18 16:37:54,in 9d8bb13b1dfc5103e2678ba803ecd3220dce052d: Shouldn't the reset be before the check equal?,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r559688046,559688046,src/test/timedata_tests.cpp
MarcoFalke,2021-01-18 16:38:23,Could rename this to `TestOnlyResetTimeData`?,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r559688334,559688334,src/timedata.cpp
vasild,2021-01-19 10:46:06,"I don't think so. The `BOOST_CHECK_EQUAL(GetTimeOffset(), 0)` check is to ensure that the net result from all the previous calls is 0. This is still true and better keep that check to ensure it remains so. Surely the check will also pass after `ResetTimeData()` not because the net result is 0, but because the reset obliterated the entire state.",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r560083361,560083361,src/test/timedata_tests.cpp
vasild,2021-01-19 10:56:37,Renamed. I would have preferred to surround it in `#ifdef UNIT_TESTS_ARE_ENABLED` but couldn't find such a macro.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r560089965,560089965,src/timedata.cpp
jonatack,2021-03-17 20:11:10,"950c9f6 ~0 on updating these names, as it is done only partially, the header file isn't updated, nor is `nTimeOffset`, and there are omissions: 2 occurrences of `vTimeOffsets` in the comments were not updated (a scripted diff should catch this)",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596347332,596347332,src/timedata.cpp
jonatack,2021-03-17 20:25:04,"39b4a0c can replace all the `.format()` commands in the 2 new functional test files with the more compact, cleaner f-strings",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596355935,596355935,test/functional/feature_bind_port_externalip.py
jonatack,2021-03-17 20:41:23,"39b4a0c309c5f63bd here and 2 other places in the `get_local_addr_for_peer_port` test above\n```diff\n-               0,\n-               0,\n+               /* nKeyedNetGroupIn = */ 0,\n+               /* nLocalHostNonceIn = */ 0,\n                CAddress{},\n                std::string{},\n                ConnectionType::OUTBOUND_FULL_RELAY,\n-               false};\n+               /*",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596366771,596366771,src/test/net_tests.cpp
jonatack,2021-03-17 20:53:23,"39b4a0c309c5f63bdf0bdbde0d76ee3edce3ac19\n```suggestion\n    TestChainState& chainstate = *static_cast<TestChainState*>(&m_node.chainman->ActiveChainstate());\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596374373,596374373,src/test/net_tests.cpp
jonatack,2021-03-17 21:01:40,"39b4a0c309c5f\n```suggestion\n                    // above, as this is an outbound connection and the peer cannot\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596379551,596379551,src/net_processing.cpp
jonatack,2021-03-17 21:06:46,"39b4a0c309 a few ideas\n```diff\n         if (pnode->IsInboundConn()) {\n-            // For inbound connections assume both the address and the port\n+            // For inbound connections, assume both the address and the port\n             // as seen from the peer.\n-            addrLocal = CAddress(pnode->GetAddrLocal(), addrLocal.nServices);\n+            addrLocal = CAddress{pnode->Ge",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596382600,596382600,src/net.cpp
jonatack,2021-03-17 21:29:12,"0c24971f nits: ""lookup"" is a noun, ""look up"" is the verb; s/for/to/\n```diff\n- * Lookup IP addresses from all interfaces on the machine and add them to the\n- * list of local addresses for self-advertise.\n+ * Look up IP addresses from all interfaces on the machine and add them to the\n+ * list of local addresses to self-advertise.\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596395788,596395788,src/net.h
jonatack,2021-03-17 21:42:37,"0c24971f97d5e6b03aef4911a s/a routable/routable/, or...\n```suggestion\n                ""To run this test make sure that routable addresses {} and {} are assigned ""\n```\n",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596402934,596402934,test/functional/feature_bind_port_discover.py
jonatack,2021-03-17 21:44:22,"0c24971f97d5e6b03aef4911a1f772b6\n```suggestion\nTest that -discover does not add all interfaces' addresses if we listen on only some of them.\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596403782,596403782,test/functional/feature_bind_port_discover.py
jonatack,2021-03-17 21:46:32,"0c24971f97d5e6b0\n```suggestion\n# To set these routable addresses on the machine, use:\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596405070,596405070,test/functional/feature_bind_port_discover.py
jonatack,2021-03-17 21:50:21,"0c24971f97d5e6b03a\n```suggestion\n        self.log.info(""Test if -bind= is not passed, all addresses are added to localaddresses"")\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596407087,596407087,test/functional/feature_bind_port_discover.py
jonatack,2021-03-17 21:50:54,"0c24971f97d5e6b03a\n```suggestion\n        self.log.info(""Test if -bind= is passed, only that address is added to localaddresses"")\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596407395,596407395,test/functional/feature_bind_port_discover.py
jonatack,2021-03-17 21:57:27,"A few micro-optimisations\n```diff\n+LEN_EXPECTED = len(EXPECTED)\n \n class BindPortExternalIPTest(BitcoinTestFramework):\n     def set_test_params(self):\n         # Avoid any -bind= on the command line. Force the framework to avoid adding -bind=127.0.0.1.\n         self.setup_clean_chain = True\n         self.bind_to_localhost_only = False\n-        self.num_nodes = len(EXPECTED)\n+  ",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596410851,596410851,test/functional/feature_bind_port_externalip.py
jonatack,2021-03-18 18:17:32,"39b4a0c309c5f63bdf0bdbde0d76ee3edce3ac19 ""for self-advertisement"" or ""to self-advertise""",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r597130602,597130602,src/test/net_tests.cpp
vasild,2021-03-26 11:29:14,"> as it is done only partially\n\nThe commit does not claim to rename all variables, just the 3 ones mentioned in the commit message.\n\n> the header file isn't updated\n\nWhat do you think needs to be updated in the header file (I assume `timedata.h`)? The variables that were renamed are `static` in `timedata.cpp`.\n\n> 2 occurrences of `vTimeOffsets` in the comments were not updated\n\",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602206794,602206794,src/timedata.cpp
vasild,2021-03-26 11:45:30,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602217428,602217428,test/functional/feature_bind_port_externalip.py
vasild,2021-03-26 12:12:36,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602232488,602232488,src/test/net_tests.cpp
vasild,2021-03-26 12:14:25,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602233546,602233546,src/test/net_tests.cpp
vasild,2021-03-26 12:15:47,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602234375,602234375,src/net_processing.cpp
vasild,2021-03-26 12:17:21,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602235298,602235298,src/net.cpp
vasild,2021-03-26 12:19:47,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602236869,602236869,src/net.h
vasild,2021-03-26 12:23:23,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602239036,602239036,test/functional/feature_bind_port_discover.py
vasild,2021-03-26 12:25:41,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602240514,602240514,test/functional/feature_bind_port_discover.py
vasild,2021-03-26 12:26:35,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602241006,602241006,test/functional/feature_bind_port_discover.py
vasild,2021-03-26 12:30:23,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602243277,602243277,test/functional/feature_bind_port_discover.py
vasild,2021-03-26 12:30:31,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602243355,602243355,test/functional/feature_bind_port_discover.py
vasild,2021-03-26 13:11:58,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r602278513,602278513,src/test/net_tests.cpp
jonatack,2021-03-29 21:37:32,"```suggestion\n    // Test that GetLocalAddrForPeer() properly selects the address to self-advertise:\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r603630473,603630473,src/test/net_tests.cpp
jonatack,2021-03-29 21:38:54,"```suggestion\nTest that -discover does not add all interfaces' addresses if we listen on only some of them\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r603631261,603631261,test/functional/feature_bind_port_discover.py
jonatack,2021-03-30 08:39:42,"would be good to add the missing logging suggested in https://github.com/bitcoin/bitcoin/pull/20196#discussion_r596410851\n```diff\n     def run_test(self):\n+        self.log.info(""Test the proper port is used for -externalip="")\n         for i in range(len(EXPECTED)):\n             if EXPECTED[i][1] == 'default_p2p_port':\n                 expected_port = p2p_port(i)\n@@ -69,7 +70,8 @@ cl",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r603897791,603897791,test/functional/feature_bind_port_externalip.py
vasild,2021-04-09 13:09:06,Fixed.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r610612311,610612311,src/test/net_tests.cpp
vasild,2021-04-09 13:12:13,Changed.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r610614554,610614554,test/functional/feature_bind_port_discover.py
vasild,2021-04-09 13:18:19,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r610618854,610618854,test/functional/feature_bind_port_externalip.py
jonatack,2021-04-09 16:45:06,"7d06e0b4c09d0faed2673cf18b51a77201a91222 `PF_NOBAN` is a multi-flag, so this will return false for both the ""noban"" and the ""download"" statuses. If you want it to be false only for noban, use `HasFlag()`\n\n```suggestion\n            if (!NetPermissions::HasFlag(whitebind.m_flags, NetPermissionFlags::PF_NOBAN)) {\n```\n\n(and if you want it to be false for both ""noban"" and ""download"" the fol",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r610770148,610770148,src/net.cpp
vasild,2021-04-13 16:28:51,"Good catch!\n\nPreviously, if `-whitebind=download@1.1.1.1:8765` was specified we would not have returned `8765` from `GetListenPort()` but we should have.",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r612601895,612601895,src/net.cpp
jonatack,2021-04-13 18:16:19,"Yes, I've been working on this issue with #21644 that fixes the same issue and #21506 that would eliminate this form of `NetPermissionFlags` bug.\n\nCan you please use the `NetPermissionFlags::` scope as suggested in https://github.com/bitcoin/bitcoin/pull/20196#discussion_r610770148? This is already the case in other places and it would avoid an unnecessary future commit (or rebase of #21506).",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r612676028,612676028,src/net.cpp
jonatack,2021-05-19 14:20:53,"nit, while updating here could be consistent with 7075f604e8d0b21 (and sorry for causing the rebase)\n ```suggestion\n    // Otherwise, if -whitebind= without NetPermissionFlags::NoBan permission is provided, use that\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r635287348,635287348,src/net.cpp
vasild,2021-05-19 16:30:33,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r635404933,635404933,src/net.cpp
jonatack,2021-07-27 13:27:43,"c8034d4 suggest passing the `Span` param here, line 3116 above, in `src/net.h` and in `src/test/net_tests.cpp` by value, as these are lightweight, and previous feedback elsewhere suggested the codebase should move toward passing them by value. (Have a look at `git grep ""Span<unsigned char>""`)",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r677448859,677448859,src/net.cpp
jonatack,2021-07-27 13:31:28,"47606db1d721c45cbd053a9a7651b674e2bd4bb1 pico-suggestion while touching this line\n```suggestion\n            if (Lookup(bind_arg, bind_addr, default_bind_port, /* allow_lookup */ false)) {\n```",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r677452191,677452191,src/init.cpp
jonatack,2021-07-27 13:35:52,"1882599\n```diff\n@@ -39,7 +39,7 @@ int64_t GetAdjustedTime()\n #define BITCOIN_TIMEDATA_MAX_SAMPLES 200\n \n static std::set<CNetAddr> g_sources;\n-static CMedianFilter<int64_t> g_time_offsets(BITCOIN_TIMEDATA_MAX_SAMPLES, 0);\n+static CMedianFilter<int64_t> g_time_offsets{BITCOIN_TIMEDATA_MAX_SAMPLES, 0};\n static bool g_warning_emitted;\n \n void AddTimeData(const CNetAddr& ip, int64_",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r677456155,677456155,src/timedata.cpp
jonatack,2021-07-27 14:17:09,"47606db verified that without this change, this assertion of the new test fails\n```\ntest/net_tests.cpp(836): error: in ""net_tests/get_local_addr_for_peer_port"": check *chosen_local_addr == peer_us has failed\n```\n",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r677494923,677494923,src/net.cpp
jonatack,2021-07-27 14:26:16,"47606db verified that without this new section, the following asserts in this commit fail:\n```\ntest/net_tests.cpp(815): error: in ""net_tests/get_local_addr_for_peer_port"": check *chosen_local_addr == expected has failed\ntest/net_tests.cpp(1007): error: in ""net_tests/initial_advertise_from_version_message"": check sent has failed\n```\n\nAvoiding an unneeded declaration seems clearer to me:",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r677503975,677503975,src/net.cpp
jonatack,2021-07-27 14:28:54,"47606db removing this new section causes no failure in the `net_tests` added in this commit, but it does raise in the added functional test:\n\n```\nFile ""~/bitcoin/test/functional/feature_bind_port_externalip.py"", line 69, in run_test\n    assert_equal(local['port'], expected_port)\n    raise AssertionError(""not(%s)"" % "" == "".join(str(arg) for arg in (thing1, thing2) + args))\nAssertionErro",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r677506617,677506617,src/net.cpp
jonatack,2021-07-27 15:53:46,"2aee1b92 verified that without the change in this commit, the accompanying functional test fails at the expected assertion\n```\nFile ""~/bitcoin/test/functional/feature_bind_port_discover.py"", line 74, in run_test\n    assert local['address'] != ADDR2\nAssertionError\n```\n",https://github.com/bitcoin/bitcoin/pull/20196#discussion_r677585956,677585956,src/init.cpp
vasild,2021-07-29 16:04:53,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r679289444,679289444,src/net.cpp
vasild,2021-07-29 16:05:07,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r679289633,679289633,src/init.cpp
vasild,2021-07-29 16:05:19,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r679289756,679289756,src/timedata.cpp
vasild,2021-07-29 16:05:31,Done.,https://github.com/bitcoin/bitcoin/pull/20196#discussion_r679289908,679289908,src/net.cpp
