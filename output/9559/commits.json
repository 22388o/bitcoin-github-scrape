[
  {
    "sha": "17536711fc38818301d8dc22af30430b311baf80",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzUzNjcxMWZjMzg4MTgzMDFkOGRjMjJhZjMwNDMwYjMxMWJhZjgw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-01-14T22:14:01Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-01-14T22:24:57Z"
      },
      "message": "[net] Avoid possibility of NULL pointer dereference in ProcessMessage(...)\n\nPrior to this commit there was an implicit assumption that the\nCBlockIndex pindexWalk (+ pindexLast and pindexWalk->pprev) being\nnon-NULL. (If that was guaranteed pindexWalk would not be needed in\n\"while (pindexWalk && ...)\" on line 2233).\n\npindexWalk is being used in the check ...\n\n    if (!chainActive.Contains(pindexWalk)) {\n\nCChain.Contains(...) is defined as:\n\n    bool Contains(const CBlockIndex *pindex) const {\n        return (*this)[pindex->nHeight] == pindex;\n    }\n\nHence, a NULL pointer dereference in the case of a non-NULL argument\nto Contains(...).\n\nThis commit adds two assertion which make the mentioned assumptions\nexplicit, and removes the possibility of a NULL pointer dereference.",
      "tree": {
        "sha": "4d238a6e445912602e53ce671175f2fd34972d39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d238a6e445912602e53ce671175f2fd34972d39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17536711fc38818301d8dc22af30430b311baf80",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17536711fc38818301d8dc22af30430b311baf80",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17536711fc38818301d8dc22af30430b311baf80",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17536711fc38818301d8dc22af30430b311baf80/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "23281a4dc3afc42a001346caec4dbb8193f0bb53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23281a4dc3afc42a001346caec4dbb8193f0bb53",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/23281a4dc3afc42a001346caec4dbb8193f0bb53"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "18c16f7c0e02dff53de377b003c40d93e3bb1ecf",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17536711fc38818301d8dc22af30430b311baf80/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17536711fc38818301d8dc22af30430b311baf80/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=17536711fc38818301d8dc22af30430b311baf80",
        "patch": "@@ -2228,6 +2228,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         // much work as our tip, download as much as possible.\n         if (fCanDirectFetch && pindexLast->IsValid(BLOCK_VALID_TREE) && chainActive.Tip()->nChainWork <= pindexLast->nChainWork) {\n             vector<const CBlockIndex *> vToFetch;\n+            assert(pindexLast);\n             const CBlockIndex *pindexWalk = pindexLast;\n             // Calculate all the blocks we'd need to switch to pindexLast, up to a limit.\n             while (pindexWalk && !chainActive.Contains(pindexWalk) && vToFetch.size() <= MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n@@ -2237,6 +2238,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n                     // We don't have this block, and it's not yet in flight.\n                     vToFetch.push_back(pindexWalk);\n                 }\n+                assert(pindexWalk->pprev);\n                 pindexWalk = pindexWalk->pprev;\n             }\n             // If pindexWalk still isn't on our main chain, we're looking at a"
      }
    ]
  }
]