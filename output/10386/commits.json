[
  {
    "sha": "ccd5326d3be392d76baaf900d6ea8d986c8e694d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2Q1MzI2ZDNiZTM5MmQ3NmJhYWY5MDBkNmVhOGQ5ODZjOGU2OTRk",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-05-10T11:03:57Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-25T06:05:46Z"
      },
      "message": "[wallet] Set 'dirty' DestData for used addresses",
      "tree": {
        "sha": "ab683a78f8c38474a30e6d268a0c91887c73008c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab683a78f8c38474a30e6d268a0c91887c73008c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccd5326d3be392d76baaf900d6ea8d986c8e694d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAltYEzoACgkQV692LbM1\nMyIKCw//cQcQ4jv8mUDxB+miDgr0ESuWEgcMMdrBTKnagTJrysoUoiiKZBI+T8nD\naBFXY0TFIYXB9/skHI35AYPxsY8JesECED9L9HWilyVCByBpTdSS1MgUdu4OJ+2c\nV7jblPL5HuHzWwjVHUEYHPKa9zchUzjxR5PZ2oDTDEACOqxJMcMq6ukWHDowyN04\nubOVB+3R37ZBXGbrIcbcM4/j8LcksOmD/xcR/Ow6c2pYrPuZvyRY8g+LYmEWVGlD\nnNQS9ei4h4JiTW/L6xcBZau+J3XrdqpT1j9MBZ4izkSsB1MLkcuu2jUPuARUL+EA\nFPOO2XKMVj0kYLgmpXFdAKLiWTiZkg+6tYy3SH6St0HUa/JGrk8t2hDZSdI0BeRF\nFFwon3kMR+ra/P6s/VTVe3GEKolykCd9TsKYa0MT9Dvc40p3XHc8gVtlAKPKUO83\nT6G0LJb/18nw0ZqwkwgktAb0eH1oIjBm87+aUVSMgRk87SK15bgKcNEP8wI+uTwc\nMwqKkU5940dLH3++AZ9+9xRgfy5RL6cUqKzuLyd1qGKebo8ckX92Z3rmMEjonG+/\nEYWtRj57C9Rj7LHtJrf4eJxEJdoCVccDCXbWGnfCNb9rNSNCTg8M2PnNtm2yZ3JM\niwCI9rv30vqqFjEfWEFDfDakwY4qVxiac35v/POH3y2AgXyRKek=\n=+End\n-----END PGP SIGNATURE-----",
        "payload": "tree ab683a78f8c38474a30e6d268a0c91887c73008c\nparent 1211b15bf6c0b2904d90b96a9b3834c5cb9e7b4e\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1494414237 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532498746 +0900\n\n[wallet] Set 'dirty' DestData for used addresses\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccd5326d3be392d76baaf900d6ea8d986c8e694d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ccd5326d3be392d76baaf900d6ea8d986c8e694d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccd5326d3be392d76baaf900d6ea8d986c8e694d/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1211b15bf6c0b2904d90b96a9b3834c5cb9e7b4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1211b15bf6c0b2904d90b96a9b3834c5cb9e7b4e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1211b15bf6c0b2904d90b96a9b3834c5cb9e7b4e"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7a04446fb9648cddfcedda0e2e7c664d6d5449d9",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccd5326d3be392d76baaf900d6ea8d986c8e694d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccd5326d3be392d76baaf900d6ea8d986c8e694d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ccd5326d3be392d76baaf900d6ea8d986c8e694d",
        "patch": "@@ -930,6 +930,20 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n \n     uint256 hash = wtxIn.GetHash();\n \n+    // Mark used destinations as dirty\n+    for (const CTxIn& txin : wtxIn.tx->vin) {\n+        const COutPoint& op = txin.prevout;\n+        const CWalletTx* srctx = GetWalletTx(op.hash);\n+        if (srctx) {\n+            CTxDestination dst;\n+            if (ExtractDestination(srctx->tx->vout[op.n].scriptPubKey, dst)) {\n+                if (::IsMine(*this, dst) && !GetDestData(dst, \"dirty\", NULL)) {\n+                    AddDestData(dst, \"dirty\", \"1\");\n+                }\n+            }\n+        }\n+    }\n+\n     // Inserts only if not already there, returns tx inserted or tx found\n     std::pair<std::map<uint256, CWalletTx>::iterator, bool> ret = mapWallet.insert(std::make_pair(hash, wtxIn));\n     CWalletTx& wtx = (*ret.first).second;"
      }
    ]
  },
  {
    "sha": "b032f70473b78c27b9941435d9ffc700498269dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDMyZjcwNDczYjc4YzI3Yjk5NDE0MzVkOWZmYzcwMDQ5ODI2OWRj",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-05-10T11:23:18Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-25T06:08:42Z"
      },
      "message": "[wallet] Exclude dirty coins in AvailableCoins results",
      "tree": {
        "sha": "43a02174677ab21dd00c3968b48fb7dd575b588e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43a02174677ab21dd00c3968b48fb7dd575b588e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b032f70473b78c27b9941435d9ffc700498269dc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAltYE+oACgkQV692LbM1\nMyIW/RAAjYtX6H+wI67cEsVb+6/rmLxBXYLmyYSJyQzQoZIL3Q+RkUEKMg9iZaMC\nfxZiGByaAdmG7bJHZWR6l5YDt7F1ZRDwAJYq7LrMOCK4gXrbba+TINRVpc9cIM6u\nzM9A7TH98cUa0I+VeroQMo98UecI2jw57TTkDE3yJy2KZaE9gCyBYg/VPKllsJ4R\nQK8MtFZn+B+u0vr4ltdLYh0AH8ViYDjvu3XmEpJwKLkKvKiAAaqxRGqM4Y8W0vO2\nfw6zA9Cg+EGt4kobl1ND82BM+AnRjKnZlqWpm86oX5KT4RpM+fsSoxUGlePiuGij\nlWRQ6XxCMZE4HnruuAfFr6+AfplAUXKjHIxN+QrlRmtEKI4TQ3biVXEHC+5laIJt\nAzwDMJhqPo5tkAytY4o5d83FaE65QPsLxCJOvi3ByoT/NJHSYlNi7E/NZdcrgPnW\nuyGLPxx3pypQtJiKmJyD/gI/2tDGDCmL9ZQfjTNfUlUHcVmWiLfFvVPyAQIMEdmb\nT76uXzylccMraa9olCWfYWWQgI+CA3vxjLxUIxycVpDm9c4jD42+gEasdJHyrRZA\nWwvEMqmeLP5XxWVLCGg3wniQmZoBftc+SilUOZb5oKzrAoDnUzGEea5Yw/7y83Pd\nIwRhCiJweFDDRTCyTVzS3MB1D7jG5veSVSVBMOo7scNIcXNOgeg=\n=lS2m\n-----END PGP SIGNATURE-----",
        "payload": "tree 43a02174677ab21dd00c3968b48fb7dd575b588e\nparent ccd5326d3be392d76baaf900d6ea8d986c8e694d\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1494415398 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532498922 +0900\n\n[wallet] Exclude dirty coins in AvailableCoins results\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b032f70473b78c27b9941435d9ffc700498269dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b032f70473b78c27b9941435d9ffc700498269dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b032f70473b78c27b9941435d9ffc700498269dc/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ccd5326d3be392d76baaf900d6ea8d986c8e694d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccd5326d3be392d76baaf900d6ea8d986c8e694d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ccd5326d3be392d76baaf900d6ea8d986c8e694d"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 37,
      "deletions": 9
    },
    "files": [
      {
        "sha": "06e67205bdd8f963abc59afdcd9249cb20eb99cd",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 34,
        "deletions": 9,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b032f70473b78c27b9941435d9ffc700498269dc/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b032f70473b78c27b9941435d9ffc700498269dc/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b032f70473b78c27b9941435d9ffc700498269dc",
        "patch": "@@ -922,6 +922,35 @@ bool CWallet::MarkReplaced(const uint256& originalHash, const uint256& newHash)\n     return success;\n }\n \n+void CWallet::SetDirtyState(const uint256& hash, unsigned int n, bool dirty)\n+{\n+    const CWalletTx* srctx = GetWalletTx(hash);\n+    if (srctx) {\n+        CTxDestination dst;\n+        if (ExtractDestination(srctx->tx->vout[n].scriptPubKey, dst)) {\n+            if (::IsMine(*this, dst)) {\n+                if (dirty && !GetDestData(dst, \"dirty\", NULL)) {\n+                    AddDestData(dst, \"dirty\", \"p\"); // p for \"present\", opposite of absent (null)\n+                } else if (!dirty && GetDestData(dst, \"dirty\", NULL)) {\n+                    EraseDestData(dst, \"dirty\");\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+bool CWallet::IsDirty(const uint256& hash, unsigned int n) const\n+{\n+    const CWalletTx* srctx = GetWalletTx(hash);\n+    if (srctx) {\n+        CTxDestination dst;\n+        if (ExtractDestination(srctx->tx->vout[n].scriptPubKey, dst)) {\n+            return ::IsMine(*this, dst) && GetDestData(dst, \"dirty\", NULL);\n+        }\n+    }\n+    return false;\n+}\n+\n bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n {\n     LOCK(cs_wallet);\n@@ -933,15 +962,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     // Mark used destinations as dirty\n     for (const CTxIn& txin : wtxIn.tx->vin) {\n         const COutPoint& op = txin.prevout;\n-        const CWalletTx* srctx = GetWalletTx(op.hash);\n-        if (srctx) {\n-            CTxDestination dst;\n-            if (ExtractDestination(srctx->tx->vout[op.n].scriptPubKey, dst)) {\n-                if (::IsMine(*this, dst) && !GetDestData(dst, \"dirty\", NULL)) {\n-                    AddDestData(dst, \"dirty\", \"1\");\n-                }\n-            }\n-        }\n+        SetDirtyState(op.hash, op.n, true);\n     }\n \n     // Inserts only if not already there, returns tx inserted or tx found\n@@ -2344,6 +2365,10 @@ void CWallet::AvailableCoins(std::vector<COutput> &vCoins, bool fOnlySafe, const\n                 continue;\n             }\n \n+            if (IsDirty(wtxid, i)) {\n+                continue;\n+            }\n+\n             bool solvable = IsSolvable(*this, pcoin->tx->vout[i].scriptPubKey);\n             bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n "
      },
      {
        "sha": "430517ea9fe93d102b3cb960103b671fa4eec614",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b032f70473b78c27b9941435d9ffc700498269dc/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b032f70473b78c27b9941435d9ffc700498269dc/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=b032f70473b78c27b9941435d9ffc700498269dc",
        "patch": "@@ -861,6 +861,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n         std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CoinSelectionParams& coin_selection_params, bool& bnb_used) const;\n \n     bool IsSpent(const uint256& hash, unsigned int n) const;\n+    bool IsDirty(const uint256& hash, unsigned int n) const;\n+    void SetDirtyState(const uint256& hash, unsigned int n, bool dirty);\n+\n     std::vector<OutputGroup> GroupOutputs(const std::vector<COutput>& outputs, bool single_coin) const;\n \n     bool IsLockedCoin(uint256 hash, unsigned int n) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);"
      }
    ]
  },
  {
    "sha": "cab7197213fa925d54ac5585ff298a103946be8d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYWI3MTk3MjEzZmE5MjVkNTRhYzU1ODVmZjI5OGExMDM5NDZiZThk",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-01-11T07:28:08Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-25T06:11:57Z"
      },
      "message": "[wallet] Add allow_dirty_addresses to CCoinControl and adhere to this in AvailableCoins",
      "tree": {
        "sha": "6f3228d021adf59a57d786048a9e64fba69dff92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f3228d021adf59a57d786048a9e64fba69dff92"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cab7197213fa925d54ac5585ff298a103946be8d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAltYFK0ACgkQV692LbM1\nMyJ8fA/9Gz1Y7GhVjmJ68nGaSJVmwwWsGZyLreZdhgAXPpto1GdkoAwShURfC5VN\n0KdlkgwyGcCAT4bU/5ad45bhd0/18T0TxufbSer2GU53Q7Dzcflh+PAffl/uMXN0\nO+/igL3+CtQfQC1BapNdf4hQZFDufcUQLvWD5PMLSLVP6FL0a6Cu64kUaF6dDYXE\niVISPXBsPLjL9Dl8CrrXxJ8rMXGG2LtDW3rexyRavpPlYjape2WO8zPkxFU6U271\nZGmvGoK2Ixp4F3TV7wmN4Rb5B4Bhp+7vZ64ogcV1hLsV5hDC+4gf4CQL3p9GLiDA\nYTwS8mu1Y+r10psHVqi0Npy3grUzak4RNuvCHCzG4j8KYqU8tCFmVnRjrYw9xgL5\nBnqZlnGuI1AwrcpPq/cSQcg0DndwKR+6ShKkAoCf0IlSKKBmPbEdx6FaAu2eL+xe\nl9Z+j5EOQZxqitKVBx375TOqunnJ5LuQKVoO/MeONe2XaLaPl29Us3atZ8iSjRSF\nndu2yKuFUSXS9SY5hQFUhkIi1aNMJCYnbL86MyTbAxVmF0AMFzdHkyD0f1Ky7Oge\n5M5yjF6Yd65TdLkF/wLbeiP4Xlk1sId/2R7Jwl5G5rXhaxq0lW+je2DLzOIzKUV8\nKmjcK2JTp5pngJ1KeOIUUms8WubF72hRxpA7l0XRpDxqpLcl57s=\n=WhMA\n-----END PGP SIGNATURE-----",
        "payload": "tree 6f3228d021adf59a57d786048a9e64fba69dff92\nparent b032f70473b78c27b9941435d9ffc700498269dc\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1515655688 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532499117 +0900\n\n[wallet] Add allow_dirty_addresses to CCoinControl and adhere to this in AvailableCoins\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cab7197213fa925d54ac5585ff298a103946be8d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cab7197213fa925d54ac5585ff298a103946be8d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cab7197213fa925d54ac5585ff298a103946be8d/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b032f70473b78c27b9941435d9ffc700498269dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b032f70473b78c27b9941435d9ffc700498269dc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b032f70473b78c27b9941435d9ffc700498269dc"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3bde6a94dad4d81eae746a3f542fa1163e1ddb69",
        "filename": "src/wallet/coincontrol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cab7197213fa925d54ac5585ff298a103946be8d/src/wallet/coincontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cab7197213fa925d54ac5585ff298a103946be8d/src/wallet/coincontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coincontrol.cpp?ref=cab7197213fa925d54ac5585ff298a103946be8d",
        "patch": "@@ -13,6 +13,7 @@ void CCoinControl::SetNull()\n     fAllowOtherInputs = false;\n     fAllowWatchOnly = false;\n     m_avoid_partial_spends = gArgs.GetBoolArg(\"-avoidpartialspends\", DEFAULT_AVOIDPARTIALSPENDS);\n+    m_allow_dirty_addresses = false;\n     setSelected.clear();\n     m_feerate.reset();\n     fOverrideFeeRate = false;"
      },
      {
        "sha": "6c04a1f3172d82414e6e6834916d6b3795a3a9b8",
        "filename": "src/wallet/coincontrol.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cab7197213fa925d54ac5585ff298a103946be8d/src/wallet/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cab7197213fa925d54ac5585ff298a103946be8d/src/wallet/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coincontrol.h?ref=cab7197213fa925d54ac5585ff298a103946be8d",
        "patch": "@@ -34,6 +34,8 @@ class CCoinControl\n     boost::optional<bool> m_signal_bip125_rbf;\n     //! Avoid partial use of funds sent to a given address\n     bool m_avoid_partial_spends;\n+    //! Allows inclusion of dirty (previously used) addresses\n+    bool m_allow_dirty_addresses;\n     //! Fee estimation mode to control arguments to estimateSmartFee\n     FeeEstimateMode m_fee_mode;\n "
      },
      {
        "sha": "b74881be6488be5431e1d2d0c81a98296bb7ce58",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cab7197213fa925d54ac5585ff298a103946be8d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cab7197213fa925d54ac5585ff298a103946be8d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=cab7197213fa925d54ac5585ff298a103946be8d",
        "patch": "@@ -2365,7 +2365,7 @@ void CWallet::AvailableCoins(std::vector<COutput> &vCoins, bool fOnlySafe, const\n                 continue;\n             }\n \n-            if (IsDirty(wtxid, i)) {\n+            if ((!coinControl || !coinControl->allow_dirty_addresses) && IsDirty(wtxid, i)) {\n                 continue;\n             }\n "
      }
    ]
  },
  {
    "sha": "8297ae16110242f5ef9251aad37da8176dc62105",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Mjk3YWUxNjExMDI0MmY1ZWY5MjUxYWFkMzdkYTgxNzZkYzYyMTA1",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-01-11T07:32:34Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-25T06:18:50Z"
      },
      "message": "[wallet] [rpc] Add allowdirty option to sendtoaddress RPC and make dirty tracking optional as -avoidreuse flag",
      "tree": {
        "sha": "4b35b3b1e047e4bbd9e06054b8c7a0f8d974baf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b35b3b1e047e4bbd9e06054b8c7a0f8d974baf4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8297ae16110242f5ef9251aad37da8176dc62105",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAltYFkoACgkQV692LbM1\nMyJIoQ/+LqYlWmbs+3Ur0sqD9vEfnlIuC2gaNybrBl20zQyj/OU7wqgz1XptZVdu\nlVw0HYN2UVzaNJBZay7FqSG0Jgw6ze2UHaAdd3kUJ8JdOCA08XggCJfdhd0/Hj2t\ntGnXxl0jxoFAGe60puY7TGED79BQZNADFkGwCq6wk22BNOL72zZHQfUJScYyIm0m\nXG75tpYlejjhbkuSlq4vxWIIcJEI4u83E7Grc3/Hj7JdOp9XH771M6ieJIBAFXg+\nRO74aQmt37No6Yq+a7Md5DST4nBuZ2JTetcT+Tkhw9LXpqfxrxX9OsQ3MxT67eAP\nsr9D+9+oj/fcHW89HUePco/lv31ly2v8ddJbqv7cUipOjmrdJ/ep6+KBlirGK5RW\nZNHn/saGokyLZgT2fKGX9P5/bf1wa61pFbKoDi0yWbsNcSFKaaMqcIr3EM4roeBM\n921PSC5LC3bMlMjdEuTWJ3gHCwqtKkuZcXMKS7tyFo9l0q098rlomBng+9viX3WT\nwSTWVufE92H4l4BM/RIwMde/4l7NQgr1HgJRBS4K5PeTzLBlSla5QLTsVYoFt0W4\nbBmB2uV+7BeloLfKYUgu+VLxjymO2Y6Sq866PeRdV6ALbB3oavDIDsAvfISZQH+1\n1CrH92K4D0AsHj69ftFf1lJKWDl5s4udJ8KUvIwsvo9Npey9I/o=\n=ESux\n-----END PGP SIGNATURE-----",
        "payload": "tree 4b35b3b1e047e4bbd9e06054b8c7a0f8d974baf4\nparent cab7197213fa925d54ac5585ff298a103946be8d\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1515655954 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532499530 +0900\n\n[wallet] [rpc] Add allowdirty option to sendtoaddress RPC and make dirty tracking optional as -avoidreuse flag\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8297ae16110242f5ef9251aad37da8176dc62105",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8297ae16110242f5ef9251aad37da8176dc62105",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8297ae16110242f5ef9251aad37da8176dc62105/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cab7197213fa925d54ac5585ff298a103946be8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cab7197213fa925d54ac5585ff298a103946be8d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cab7197213fa925d54ac5585ff298a103946be8d"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 24,
      "deletions": 8
    },
    "files": [
      {
        "sha": "42480681434ae2b7d561d7cde8663ce2207c0e62",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8297ae16110242f5ef9251aad37da8176dc62105/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8297ae16110242f5ef9251aad37da8176dc62105/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=8297ae16110242f5ef9251aad37da8176dc62105",
        "patch": "@@ -37,6 +37,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"sendtoaddress\", 4, \"subtractfeefromamount\" },\n     { \"sendtoaddress\", 5 , \"replaceable\" },\n     { \"sendtoaddress\", 6 , \"conf_target\" },\n+    { \"sendtoaddress\", 8, \"allowdirty\" },\n     { \"settxfee\", 0, \"amount\" },\n     { \"sethdseed\", 0, \"newkeypool\" },\n     { \"getreceivedbyaddress\", 1, \"minconf\" },"
      },
      {
        "sha": "98ffdf42b97e7629b186c4028f7633df2421b006",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8297ae16110242f5ef9251aad37da8176dc62105/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8297ae16110242f5ef9251aad37da8176dc62105/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=8297ae16110242f5ef9251aad37da8176dc62105",
        "patch": "@@ -511,9 +511,10 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 2 || request.params.size() > 8)\n+    if (request.fHelp || request.params.size() < 2 || request.params.size() > 9)\n         throw std::runtime_error(\n-            \"sendtoaddress \\\"address\\\" amount ( \\\"comment\\\" \\\"comment_to\\\" subtractfeefromamount replaceable conf_target \\\"estimate_mode\\\")\\n\"\n+            std::string() +\n+            \"sendtoaddress \\\"address\\\" amount ( \\\"comment\\\" \\\"comment_to\\\" subtractfeefromamount replaceable conf_target \\\"estimate_mode\\\" allowdirty )\\n\"\n             \"\\nSend an amount to a given address.\\n\"\n             + HelpRequiringPassphrase(pwallet) +\n             \"\\nArguments:\\n\"\n@@ -532,12 +533,15 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n             \"       \\\"UNSET\\\"\\n\"\n             \"       \\\"ECONOMICAL\\\"\\n\"\n             \"       \\\"CONSERVATIVE\\\"\\n\"\n+            \"9. allowdirty             (boolean, optional, \" + (gArgs.GetBoolArg(\"-avoidreuse\", DEFAULT_AVOIDREUSE) ? std::string(\"default=\") + (DEFAULT_AVOIDREUSE ? \"true\" : \"false\") : \"unavailable\") + \") Allows spending from dirty addresses; addresses are considered\\n\"\n+            \"                             dirty if they have previously been used in a transaction.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"txid\\\"                  (string) The transaction id.\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1\")\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n             + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"\\\" \\\"\\\" false true\")\n             + HelpExampleRpc(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n@@ -584,6 +588,9 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n         }\n     }\n \n+    coin_control.allow_dirty_addresses = request.params[8].isNull()\n+        ? gArgs.GetBoolArg(\"-avoidreuse\", DEFAULT_AVOIDREUSE)\n+        : request.params[8].get_bool();\n \n     EnsureWalletIsUnlocked(pwallet);\n \n@@ -4805,7 +4812,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"loadwallet\",                       &loadwallet,                    {\"filename\"} },\n     { \"wallet\",             \"lockunspent\",                      &lockunspent,                   {\"unlock\",\"transactions\"} },\n     { \"wallet\",             \"sendmany\",                         &sendmany,                      {\"fromaccount|dummy\",\"amounts\",\"minconf\",\"comment\",\"subtractfeefrom\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n-    { \"wallet\",             \"sendtoaddress\",                    &sendtoaddress,                 {\"address\",\"amount\",\"comment\",\"comment_to\",\"subtractfeefromamount\",\"replaceable\",\"conf_target\",\"estimate_mode\"} },\n+    { \"wallet\",             \"sendtoaddress\",                    &sendtoaddress,                 {\"address\",\"amount\",\"comment\",\"comment_to\",\"subtractfeefromamount\",\"replaceable\",\"conf_target\",\"estimate_mode\",\"allowdirty\"} },\n     { \"wallet\",             \"settxfee\",                         &settxfee,                      {\"amount\"} },\n     { \"wallet\",             \"signmessage\",                      &signmessage,                   {\"address\",\"message\"} },\n     { \"wallet\",             \"signrawtransactionwithwallet\",     &signrawtransactionwithwallet,  {\"hexstring\",\"prevtxs\",\"sighashtype\"} },"
      },
      {
        "sha": "9c675bcd210acd8608faf39c6c643b572b2a69f7",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8297ae16110242f5ef9251aad37da8176dc62105/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8297ae16110242f5ef9251aad37da8176dc62105/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=8297ae16110242f5ef9251aad37da8176dc62105",
        "patch": "@@ -928,6 +928,7 @@ void CWallet::SetDirtyState(const uint256& hash, unsigned int n, bool dirty)\n     if (srctx) {\n         CTxDestination dst;\n         if (ExtractDestination(srctx->tx->vout[n].scriptPubKey, dst)) {\n+            AssertLockHeld(cs_wallet);\n             if (::IsMine(*this, dst)) {\n                 if (dirty && !GetDestData(dst, \"dirty\", NULL)) {\n                     AddDestData(dst, \"dirty\", \"p\"); // p for \"present\", opposite of absent (null)\n@@ -945,6 +946,7 @@ bool CWallet::IsDirty(const uint256& hash, unsigned int n) const\n     if (srctx) {\n         CTxDestination dst;\n         if (ExtractDestination(srctx->tx->vout[n].scriptPubKey, dst)) {\n+            AssertLockHeld(cs_wallet);\n             return ::IsMine(*this, dst) && GetDestData(dst, \"dirty\", NULL);\n         }\n     }\n@@ -959,10 +961,12 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n \n     uint256 hash = wtxIn.GetHash();\n \n-    // Mark used destinations as dirty\n-    for (const CTxIn& txin : wtxIn.tx->vin) {\n-        const COutPoint& op = txin.prevout;\n-        SetDirtyState(op.hash, op.n, true);\n+    if (gArgs.GetBoolArg(\"-avoidreuse\", DEFAULT_AVOIDREUSE)) {\n+        // Mark used destinations as dirty\n+        for (const CTxIn& txin : wtxIn.tx->vin) {\n+            const COutPoint& op = txin.prevout;\n+            SetDirtyState(op.hash, op.n, true);\n+        }\n     }\n \n     // Inserts only if not already there, returns tx inserted or tx found\n@@ -2285,6 +2289,7 @@ void CWallet::AvailableCoins(std::vector<COutput> &vCoins, bool fOnlySafe, const\n \n     vCoins.clear();\n     CAmount nTotal = 0;\n+    bool allow_dirty_addresses = !gArgs.GetBoolArg(\"-avoidreuse\", DEFAULT_AVOIDREUSE) || (coinControl && coinControl->m_allow_dirty_addresses);\n \n     for (const auto& entry : mapWallet)\n     {\n@@ -2365,7 +2370,7 @@ void CWallet::AvailableCoins(std::vector<COutput> &vCoins, bool fOnlySafe, const\n                 continue;\n             }\n \n-            if ((!coinControl || !coinControl->allow_dirty_addresses) && IsDirty(wtxid, i)) {\n+            if (!allow_dirty_addresses && IsDirty(wtxid, i)) {\n                 continue;\n             }\n "
      },
      {
        "sha": "53af2c60fa6e9e1cf7c44d99052167e418476ae9",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8297ae16110242f5ef9251aad37da8176dc62105/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8297ae16110242f5ef9251aad37da8176dc62105/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=8297ae16110242f5ef9251aad37da8176dc62105",
        "patch": "@@ -64,6 +64,9 @@ static const bool DEFAULT_WALLET_RBF = false;\n static const bool DEFAULT_WALLETBROADCAST = true;\n static const bool DEFAULT_DISABLE_WALLET = false;\n \n+//! if set, addresses will be marked dirty once spent from, and will be excluded from future coin selects\n+static const bool DEFAULT_AVOIDREUSE = false;\n+\n static const int64_t TIMESTAMP_MIN = 0;\n \n class CBlockIndex;"
      }
    ]
  },
  {
    "sha": "fd910c614135a75b4542d6bd5d66d99ceab5cabe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDkxMGM2MTQxMzVhNzViNDU0MmQ2YmQ1ZDY2ZDk5Y2VhYjVjYWJl",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-05-11T03:44:33Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-25T06:22:46Z"
      },
      "message": "[doc] Add -avoidreuse documentation to -help and manpages",
      "tree": {
        "sha": "73e15034affbb92b335c1e621b4eea9883cacc08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73e15034affbb92b335c1e621b4eea9883cacc08"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd910c614135a75b4542d6bd5d66d99ceab5cabe",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAltYFzYACgkQV692LbM1\nMyLpew//Y+v5vnD8foXx0xnYgxMxZQLWE1ZSEwMQH+kei8+3y7csgrY8sSOxmozv\nBv2ed6Ptim3++kMHgKg9WGiv6p49z7SG9xG3FapKkrxn1pmgd0jxIwQd+jeb0wNV\nLTfb+LtUCIM4/O6mza4loFEaUf80zeHFgJDRW3JYZQcxdfw2fJKRhs3M822g0V3F\nbPVOqTyN0R3Bc0fAsxfS38FUskXbB5me7c0zF4YdZSu+FRbknkbOXsL6YD/2PEqM\nhCEOESeQEsVdwYAnqAiK+6VR7EW42PpHxo9z0DVmTSSWfPKqdhIGuQKyvYNUf77W\nHyPZKyklNqvkbXKc4ekbcpjpmT7ZqnVn5EzW/JrECoajiw/UHN/oM1B6ifUo4Wny\ndW/TbAlsKDLTLqauHsWQTeU1dDuTCNW2JcVVFgxP8xWV2/oXrPuRbWEubPXRAnOm\nOu6qYSvn0j9w3t8oKThN8iSz8G0lA3vW/BATAQC7WGT500MapUnmmYehFn2KhE2D\n2NXJYVSbenvx7uAgwFxyeNrI4lp0s2rdOUg8nExrCMzPA1HqCGPJFgDI/wqF3geq\n/4oeRwR+NZ1ppoHNMEPCIrJgB4T2eSQoqTTKQTCHQ5HFtcoDTqlvY+S+WG5iSTv7\nY0GSpjOtJm73V9ibZsBCmuYcl27qYddDTYu2CjfL+2eu1JxG+9I=\n=Dl82\n-----END PGP SIGNATURE-----",
        "payload": "tree 73e15034affbb92b335c1e621b4eea9883cacc08\nparent 8297ae16110242f5ef9251aad37da8176dc62105\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1494474273 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532499766 +0900\n\n[doc] Add -avoidreuse documentation to -help and manpages\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd910c614135a75b4542d6bd5d66d99ceab5cabe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd910c614135a75b4542d6bd5d66d99ceab5cabe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd910c614135a75b4542d6bd5d66d99ceab5cabe/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8297ae16110242f5ef9251aad37da8176dc62105",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8297ae16110242f5ef9251aad37da8176dc62105",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8297ae16110242f5ef9251aad37da8176dc62105"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d8cd07dcdf0c31e97e4049edd167c064c51962e0",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd910c614135a75b4542d6bd5d66d99ceab5cabe/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd910c614135a75b4542d6bd5d66d99ceab5cabe/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=fd910c614135a75b4542d6bd5d66d99ceab5cabe",
        "patch": "@@ -356,6 +356,12 @@ Delete all wallet transactions and only recover those parts of the\n blockchain through \\fB\\-rescan\\fR on startup (1 = keep tx meta data e.g.\n account owner and payment request information, 2 = drop tx meta\n data)\n+.HP\n+\\fB\\-avoidreuse\\fR\n+.IP\n+Mark addresses which have been used to fund transactions in the past,\n+and avoid reusing these in future funding, except when explicitly\n+requested (default: 0)\n .PP\n ZeroMQ notification options:\n .HP"
      },
      {
        "sha": "46bc2a687c13428bb97e0047fae3182ae913877b",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd910c614135a75b4542d6bd5d66d99ceab5cabe/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd910c614135a75b4542d6bd5d66d99ceab5cabe/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=fd910c614135a75b4542d6bd5d66d99ceab5cabe",
        "patch": "@@ -361,6 +361,12 @@ Delete all wallet transactions and only recover those parts of the\n blockchain through \\fB\\-rescan\\fR on startup (1 = keep tx meta data e.g.\n account owner and payment request information, 2 = drop tx meta\n data)\n+.HP\n+\\fB\\-avoidreuse\\fR\n+.IP\n+Mark addresses which have been used to fund transactions in the past,\n+and avoid reusing these in future funding, except when explicitly\n+requested (default: 0)\n .PP\n ZeroMQ notification options:\n .HP"
      },
      {
        "sha": "6dfe10bac12a5b475d375f23096814a9d77aa621",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd910c614135a75b4542d6bd5d66d99ceab5cabe/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd910c614135a75b4542d6bd5d66d99ceab5cabe/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=fd910c614135a75b4542d6bd5d66d99ceab5cabe",
        "patch": "@@ -27,6 +27,15 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"keypool. Please use -upgradewallet=169900 or -upgradewallet with no version \"\n \"specified.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Delete all wallet transactions and only recover those parts of the \"\n+\"blockchain through -rescan on startup\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Mark addresses which have been used to fund transactions in the past, \"\n+\"and avoid reusing these in future funding, except when explicitly requested\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Discover own IP addresses (default: 1 when listening and no -externalip or -\"\n+\"proxy)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Distributed under the MIT software license, see the accompanying file %s or \"\n \"%s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\""
      },
      {
        "sha": "493568263947c1ab6dda5f33b514196b33331f7a",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd910c614135a75b4542d6bd5d66d99ceab5cabe/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd910c614135a75b4542d6bd5d66d99ceab5cabe/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=fd910c614135a75b4542d6bd5d66d99ceab5cabe",
        "patch": "@@ -55,6 +55,7 @@ void WalletInit::AddWalletOptions() const\n {\n     gArgs.AddArg(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(DEFAULT_ADDRESS_TYPE)), false, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-avoidpartialspends\", strprintf(_(\"Group outputs by address, selecting all or none, instead of selecting on a per-output basis. Privacy is improved as an address is only used once (unless someone sends to it after spending from it), but may result in slightly higher fees as suboptimal coin selection may result due to the added limitation (default: %u)\"), DEFAULT_AVOIDPARTIALSPENDS), false, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-avoidreuse\", \"Mark addresses which have been used to fund transactions in the past, and avoid reusing these in future funding, except when explicitly requested \" + strprintf(_(\"(default: %u)\"), DEFAULT_AVOIDREUSE), false, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-changetype\", \"What type of change to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\"). Default is same as -addresstype, except when -addresstype=p2sh-segwit a native segwit output is used when sending to a native segwit address)\", false, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-disablewallet\", \"Do not load the wallet and disable wallet RPC calls\", false, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-discardfee=<amt>\", strprintf(\"The fee rate (in %s/kB) that indicates your tolerance for discarding change by adding it to the fee (default: %s). \""
      }
    ]
  },
  {
    "sha": "6c178d090835c82c1e135f97adeeb3bbac58499e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YzE3OGQwOTA4MzVjODJjMWUxMzVmOTdhZGVlYjNiYmFjNTg0OTll",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-01-11T07:31:39Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-25T06:23:54Z"
      },
      "message": "[wallet] Make GetAvailableCredit (and thus getbalance RPC) adhere to dirty state",
      "tree": {
        "sha": "35250ec98176efba206cf18914eb1d74b534ab40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35250ec98176efba206cf18914eb1d74b534ab40"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c178d090835c82c1e135f97adeeb3bbac58499e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAltYF3oACgkQV692LbM1\nMyJoDA//UYsDDG03jQftO9bgpjKzKaCAYZtINk+EqKcbqATtYNECWqVFvblKAVfx\ng6RX6yiOSM01rB22l54p/tUmpzx4xUXHoAoQgFJJQSe1eZHkEzZXdhwyZ/BejaeW\nuB2m8lU908EqoS+dcZ/dk3CBVjY16WXQuWB1VIRnn4mCCPKNsZeCRy3hn/vk3sX+\nF7qFwrTG5MqpC0MaNwBlBRkyezvxBQPzsDlXvzjFDWN8OqplUKfcuY+1xuRpAz6a\nJbOXTeGj7PVYTnXh2MWmfEivWX4z2zIn/4UnTR9UdQfxn2q/tAUuwJnE1Sn7CxMw\nQBqfVz4dzgztfIwPB51vZxrY5mm+ccD+UIari1U8gtvwOU83P3E7/OeJwjovflq0\nbP6MajcCv8UiCHI8aqgKGz2vykhDk8f056MUKUItai6CCf1gaQh5P4bivDp4ZJBS\nZuxZLamFaWYUCWpGwUzg5cHzmWje7lWVrba95TorFVX1+KyZw3yZH0aTwyDWfuj2\nxIPoLpKyadDJ78+P/p+FznjYXNwC002AF+oRxSDvPR2xkPg6V8xcFSRocfwWkKVH\ntui1snSW2jB3Nt3JgLz0fA/VROffSwqachNvmCUATEIeI6xLPizoFsmhi7iCfY3c\nqUh5Ht8j8htqedZHUaCwDXCAvczkm/WGuuyLTZPzMBUlCFIwQCM=\n=uH4B\n-----END PGP SIGNATURE-----",
        "payload": "tree 35250ec98176efba206cf18914eb1d74b534ab40\nparent fd910c614135a75b4542d6bd5d66d99ceab5cabe\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1515655899 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532499834 +0900\n\n[wallet] Make GetAvailableCredit (and thus getbalance RPC) adhere to dirty state\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c178d090835c82c1e135f97adeeb3bbac58499e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c178d090835c82c1e135f97adeeb3bbac58499e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c178d090835c82c1e135f97adeeb3bbac58499e/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd910c614135a75b4542d6bd5d66d99ceab5cabe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd910c614135a75b4542d6bd5d66d99ceab5cabe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd910c614135a75b4542d6bd5d66d99ceab5cabe"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7d2e0c9bfc2767332754497be6fe3d0b3494e914",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c178d090835c82c1e135f97adeeb3bbac58499e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c178d090835c82c1e135f97adeeb3bbac58499e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=6c178d090835c82c1e135f97adeeb3bbac58499e",
        "patch": "@@ -1979,6 +1979,7 @@ CAmount CWalletTx::GetImmatureCredit(bool fUseCache) const\n \n CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter) const\n {\n+    bool allow_dirty_addresses = !gArgs.GetBoolArg(\"-avoidreuse\", DEFAULT_AVOIDREUSE);\n     if (pwallet == nullptr)\n         return 0;\n \n@@ -2005,7 +2006,7 @@ CAmount CWalletTx::GetAvailableCredit(bool fUseCache, const isminefilter& filter\n     uint256 hashTx = GetHash();\n     for (unsigned int i = 0; i < tx->vout.size(); i++)\n     {\n-        if (!pwallet->IsSpent(hashTx, i))\n+        if (!pwallet->IsSpent(hashTx, i) && (allow_dirty_addresses || !pwallet->IsDirty(hashTx, i)))\n         {\n             const CTxOut &txout = tx->vout[i];\n             nCredit += pwallet->GetCredit(txout, filter);"
      }
    ]
  },
  {
    "sha": "c353877abd3b0080432d116af87f05a00a2f59a9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzUzODc3YWJkM2IwMDgwNDMyZDExNmFmODdmMDVhMDBhMmY1OWE5",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-05-11T04:09:41Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-07-25T06:24:28Z"
      },
      "message": "[test] Add test for avoidreuse feature",
      "tree": {
        "sha": "c90ba5972f660e03ee09ac13909527b93b9ec93a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c90ba5972f660e03ee09ac13909527b93b9ec93a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c353877abd3b0080432d116af87f05a00a2f59a9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAltYF5wACgkQV692LbM1\nMyJVAg//UrQhSbYFyTLe9UnD6pCuG1chf9dLM1plsR24+0gWANkTxueyydKTMDgz\n7+z+4GPAxXpV/QEFbkGaXdCu5KhqS2MKA7jv18cdQc7gb31HeRm5131y1f/Se+IE\nzD2NvwcG3UVkGgDVmk92+hVZihEBTibIuKpJJ6qDSrrB3Tab3SJI+1FrntZFU4IF\nusYjwY9ne8KfsUoiQgST8VPqv/e6REx7j79OfqTm4khZ4DJeKfHiAg1glW5/uyJr\n+adBSlrwlZXeb2vPtRFoggZrRXWQKmKxJVfBnDtUKmqmsFVjDGcq7GG3qL9kNLR6\n7nVaL7t9ooDdC24eOgMJ2vSXbMrVGZKpVRwSs3UV/70LtWO5OFk45fegUjTkygxF\nfFb93dZLXTGmxKk7vKf9NxwZHVmeqxM1PLUK9p0hyUDxlMSYrwOPvY/p0DO1THuh\nJejdQtRkPwUKqPoHuzm8T9UWji+yS9B2lyAT1z1Zvl7T9Yj7jxpW06bbPi61nFvN\n8D/Sx+ibLo0YIbQFsN2Zy9bJjAEeO7lhdIeTWFdGYj43tr0USOyKTwd8THl6wE+Y\n4vv9It09LqV30OwylsITlVkCtwsg8HRrh7e6/ffBsgeSIPGaKB6JC0NMNBD0y+hs\ncw4NBC8Vz5GLy7BE0vemLfOLgico1JwrilgovvwntbwoYvFEHrQ=\n=X5z7\n-----END PGP SIGNATURE-----",
        "payload": "tree c90ba5972f660e03ee09ac13909527b93b9ec93a\nparent 6c178d090835c82c1e135f97adeeb3bbac58499e\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1494475781 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1532499868 +0900\n\n[test] Add test for avoidreuse feature\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c353877abd3b0080432d116af87f05a00a2f59a9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c353877abd3b0080432d116af87f05a00a2f59a9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c353877abd3b0080432d116af87f05a00a2f59a9/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c178d090835c82c1e135f97adeeb3bbac58499e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c178d090835c82c1e135f97adeeb3bbac58499e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c178d090835c82c1e135f97adeeb3bbac58499e"
      }
    ],
    "stats": {
      "total": 93,
      "additions": 93,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5993f8e47192bf5d1bb96a3950fe963057ea9e69",
        "filename": "test/functional/avoidreuse.py",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c353877abd3b0080432d116af87f05a00a2f59a9/test/functional/avoidreuse.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c353877abd3b0080432d116af87f05a00a2f59a9/test/functional/avoidreuse.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/avoidreuse.py?ref=c353877abd3b0080432d116af87f05a00a2f59a9",
        "patch": "@@ -0,0 +1,92 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the -avoidreuse config option.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_rpc_error\n+from decimal import Decimal\n+\n+class AvoidReuseTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-avoidreuse=1']]\n+\n+    def reset_balance(self, node, discardaddr):\n+        '''\n+        Throw away all owned coins by the node so it gets a balance of 0.\n+        '''\n+        balance = node.getbalance()\n+        if balance > 0.5:\n+            tosend = '%.5f' % (balance - Decimal(0.01))\n+            node.sendtoaddress(address=discardaddr, amount=tosend, allowdirty=True)\n+\n+    def run_test(self):\n+        '''\n+        Set up initial chain and run tests defined below\n+        '''\n+\n+        self.nodes[0].generate(110)\n+        self.sync_all()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_send()\n+        self.reset_balance(self.nodes[1], self.nodes[0].getnewaddress())\n+        self.test_fund_send_fund_senddirty()\n+\n+    def test_fund_send_fund_send(self):\n+        '''\n+        Test the simple case where [1] generates a new address A, then\n+        [0] sends 10 BTC to A.\n+        [1] spends 5 BTC from A. (leaving roughly 4 BTC useable)\n+        [0] sends 10 BTC to A again.\n+        [1] tries to spend 10 BTC (fails; dirty).\n+        [1] tries to spend 4 BTC (succeeds; change address sufficient)\n+        '''\n+\n+        fundaddr = self.nodes[1].getnewaddress()\n+        retaddr = self.nodes[0].getnewaddress()\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[1].sendtoaddress(retaddr, 5)\n+        self.sync_all()\n+        self.nodes[0].generate(1)\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.sync_all()\n+        self.nodes[0].generate(1)\n+\n+        assert_raises_rpc_error(-6, \"Insufficient funds\", self.nodes[1].sendtoaddress, retaddr, 10)\n+\n+        self.nodes[1].sendtoaddress(retaddr, 4)\n+\n+    def test_fund_send_fund_senddirty(self):\n+        '''\n+        Test the same as above, except send the 10 BTC with the allowdirty flag\n+        set. This means the 10 BTC send should succeed, where it fails above.\n+        '''\n+\n+        fundaddr = self.nodes[1].getnewaddress()\n+        retaddr = self.nodes[0].getnewaddress()\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+\n+        self.nodes[1].sendtoaddress(retaddr, 5)\n+        self.sync_all()\n+        self.nodes[0].generate(1)\n+\n+        self.nodes[0].sendtoaddress(fundaddr, 10)\n+        self.sync_all()\n+        self.nodes[0].generate(1)\n+\n+        self.nodes[1].sendtoaddress(address=retaddr, amount=10, allowdirty=True)\n+\n+if __name__ == '__main__':\n+    AvoidReuseTest().main()"
      },
      {
        "sha": "7ecb167bd12dcd5cd6b73dcc0326b3e1bb9205ae",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c353877abd3b0080432d116af87f05a00a2f59a9/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c353877abd3b0080432d116af87f05a00a2f59a9/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=c353877abd3b0080432d116af87f05a00a2f59a9",
        "patch": "@@ -94,6 +94,7 @@\n     'rpc_getchaintips.py',\n     'interface_rest.py',\n     'mempool_spend_coinbase.py',\n+    'avoidreuse.py',\n     'mempool_reorg.py',\n     'mempool_persist.py',\n     'wallet_multiwallet.py',"
      }
    ]
  }
]