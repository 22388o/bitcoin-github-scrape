[
  {
    "sha": "a3ad6459b77e9b7156e486a9e4a37dbfdc35e324",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphM2FkNjQ1OWI3N2U5YjcxNTZlNDg2YTllNGEzN2RiZmRjMzVlMzI0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-03-18T07:33:43Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-03-18T20:54:01Z"
      },
      "message": "Simplify bn2vch using int.to_bytes",
      "tree": {
        "sha": "0220a1e462f4b9da0c3458433d58d24e2b8c4851",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0220a1e462f4b9da0c3458433d58d24e2b8c4851"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3ad6459b77e9b7156e486a9e4a37dbfdc35e324",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3ad6459b77e9b7156e486a9e4a37dbfdc35e324",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a3ad6459b77e9b7156e486a9e4a37dbfdc35e324",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3ad6459b77e9b7156e486a9e4a37dbfdc35e324/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a421e0a22f1230abd69b4661a019bed39b72205f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a421e0a22f1230abd69b4661a019bed39b72205f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a421e0a22f1230abd69b4661a019bed39b72205f"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 8,
      "deletions": 32
    },
    "files": [
      {
        "sha": "92725dfcf4559a674a713322840925c8827d3cc4",
        "filename": "test/functional/test_framework/script.py",
        "status": "modified",
        "additions": 8,
        "deletions": 32,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3ad6459b77e9b7156e486a9e4a37dbfdc35e324/test/functional/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3ad6459b77e9b7156e486a9e4a37dbfdc35e324/test/functional/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script.py?ref=a3ad6459b77e9b7156e486a9e4a37dbfdc35e324",
        "patch": "@@ -27,38 +27,14 @@ def hash160(s):\n \n def bn2vch(v):\n     \"\"\"Convert number to bitcoin-specific little endian format.\"\"\"\n-    # The top bit is used to indicate the sign of the number. If there\n-    # isn't a spare bit in the bit length, add an extension byte.\n-    have_ext = False\n-    ext = bytearray()\n-    if v.bit_length() > 0:\n-        have_ext = (v.bit_length() & 0x07) == 0\n-        ext.append(0)\n-\n-    # Is the number negative?\n-    neg = False\n-    if v < 0:\n-        neg = True\n-        v = -v\n-\n-    # Convert the int to bytes\n-    v_bin = bytearray()\n-    bytes_len = (v.bit_length() + 7) // 8\n-    for i in range(bytes_len, 0, -1):\n-        v_bin.append((v >> ((i - 1) * 8)) & 0xff)\n-\n-    # Add the sign bit if necessary\n-    if neg:\n-        if have_ext:\n-            ext[0] |= 0x80\n-        else:\n-            v_bin[0] |= 0x80\n-\n-    v_bytes = ext + v_bin\n-    # Reverse bytes ordering for LE\n-    v_bytes.reverse()\n-\n-    return bytes(v_bytes)\n+    # We need v.bit_length() bits, plus a sign bit for every nonzero number.\n+    n_bits = v.bit_length() + (v != 0)\n+    # The number of bytes for that is:\n+    n_bytes = (n_bits + 7) // 8\n+    # Convert number to absolute value + sign in top bit.\n+    encoded_v = 0 if v == 0 else abs(v) | ((v < 0) << (n_bytes * 8 - 1))\n+    # Serialize to bytes\n+    return encoded_v.to_bytes(n_bytes, 'little')\n \n _opcode_instances = []\n class CScriptOp(int):"
      }
    ]
  },
  {
    "sha": "a733ad514a172a77309b84cbc6c81562bdf12e28",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzMzYWQ1MTRhMTcyYTc3MzA5Yjg0Y2JjNmM4MTU2MmJkZjEyZTI4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2020-03-18T17:16:53Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-03-18T20:54:01Z"
      },
      "message": "Add bn2vch test to functional tests",
      "tree": {
        "sha": "944e45f31b296c5cd0c439cd7d59a12f9241302a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/944e45f31b296c5cd0c439cd7d59a12f9241302a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a733ad514a172a77309b84cbc6c81562bdf12e28",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a733ad514a172a77309b84cbc6c81562bdf12e28",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a733ad514a172a77309b84cbc6c81562bdf12e28",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a733ad514a172a77309b84cbc6c81562bdf12e28/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a3ad6459b77e9b7156e486a9e4a37dbfdc35e324",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3ad6459b77e9b7156e486a9e4a37dbfdc35e324",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a3ad6459b77e9b7156e486a9e4a37dbfdc35e324"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 46,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9d916c00226e6648992993c81baf8e1738d9caa6",
        "filename": "test/functional/framework_test_script.py",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a733ad514a172a77309b84cbc6c81562bdf12e28/test/functional/framework_test_script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a733ad514a172a77309b84cbc6c81562bdf12e28/test/functional/framework_test_script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/framework_test_script.py?ref=a733ad514a172a77309b84cbc6c81562bdf12e28",
        "patch": "@@ -0,0 +1,44 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Tests for test_framework.script.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.script import bn2vch\n+from test_framework.util import assert_equal\n+\n+def test_bn2vch():\n+    assert_equal(bn2vch(0), bytes([]))\n+    assert_equal(bn2vch(1), bytes([0x01]))\n+    assert_equal(bn2vch(-1), bytes([0x81]))\n+    assert_equal(bn2vch(0x7F), bytes([0x7F]))\n+    assert_equal(bn2vch(-0x7F), bytes([0xFF]))\n+    assert_equal(bn2vch(0x80), bytes([0x80, 0x00]))\n+    assert_equal(bn2vch(-0x80), bytes([0x80, 0x80]))\n+    assert_equal(bn2vch(0xFF), bytes([0xFF, 0x00]))\n+    assert_equal(bn2vch(-0xFF), bytes([0xFF, 0x80]))\n+    assert_equal(bn2vch(0x100), bytes([0x00, 0x01]))\n+    assert_equal(bn2vch(-0x100), bytes([0x00, 0x81]))\n+    assert_equal(bn2vch(0x7FFF), bytes([0xFF, 0x7F]))\n+    assert_equal(bn2vch(-0x8000), bytes([0x00, 0x80, 0x80]))\n+    assert_equal(bn2vch(-0x7FFFFF), bytes([0xFF, 0xFF, 0xFF]))\n+    assert_equal(bn2vch(0x80000000), bytes([0x00, 0x00, 0x00, 0x80, 0x00]))\n+    assert_equal(bn2vch(-0x80000000), bytes([0x00, 0x00, 0x00, 0x80, 0x80]))\n+    assert_equal(bn2vch(0xFFFFFFFF), bytes([0xFF, 0xFF, 0xFF, 0xFF, 0x00]))\n+\n+    assert_equal(bn2vch(123456789), bytes([0x15, 0xCD, 0x5B, 0x07]))\n+    assert_equal(bn2vch(-54321), bytes([0x31, 0xD4, 0x80]))\n+\n+class FrameworkTestScript(BitcoinTestFramework):\n+    def setup_network(self):\n+        pass\n+\n+    def set_test_params(self):\n+        self.num_nodes = 0\n+\n+    def run_test(self):\n+        test_bn2vch()\n+\n+if __name__ == '__main__':\n+    FrameworkTestScript().main()"
      },
      {
        "sha": "3bac8d5d95198ffebc0fe1444d32d7adc61fd685",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a733ad514a172a77309b84cbc6c81562bdf12e28/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a733ad514a172a77309b84cbc6c81562bdf12e28/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=a733ad514a172a77309b84cbc6c81562bdf12e28",
        "patch": "@@ -222,6 +222,7 @@\n     'rpc_help.py',\n     'feature_help.py',\n     'feature_shutdown.py',\n+    'framework_test_script.py',\n     # Don't append tests at the end to avoid merge conflicts\n     # Put them in a random line within the section that fits their approximate run-time\n ]\n@@ -614,7 +615,7 @@ def was_successful(self):\n def check_script_prefixes():\n     \"\"\"Check that test scripts start with one of the allowed name prefixes.\"\"\"\n \n-    good_prefixes_re = re.compile(\"(example|feature|interface|mempool|mining|p2p|rpc|wallet|tool)_\")\n+    good_prefixes_re = re.compile(\"^(example|feature|interface|mempool|mining|p2p|rpc|wallet|tool|framework_test)_\")\n     bad_script_names = [script for script in ALL_SCRIPTS if good_prefixes_re.match(script) is None]\n \n     if bad_script_names:"
      }
    ]
  }
]