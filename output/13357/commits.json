[
  {
    "sha": "283b96b7c23049168262eb15be1e0e75140004af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODNiOTZiN2MyMzA0OTE2ODI2MmViMTViZTFlMGU3NTE0MDAwNGFm",
    "commit": {
      "author": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2018-05-31T11:07:26Z"
      },
      "committer": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2018-05-31T11:07:26Z"
      },
      "message": "Accurately determine the use of SIGHASH_SINGLE in signing",
      "tree": {
        "sha": "48b5c5c20ba79c69ae9d4de75d9904a59ae7becb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48b5c5c20ba79c69ae9d4de75d9904a59ae7becb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/283b96b7c23049168262eb15be1e0e75140004af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/283b96b7c23049168262eb15be1e0e75140004af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/283b96b7c23049168262eb15be1e0e75140004af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/283b96b7c23049168262eb15be1e0e75140004af/comments",
    "author": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87a9d03c0c1ea2340a6463b600a02b6bb145abbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87a9d03c0c1ea2340a6463b600a02b6bb145abbe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87a9d03c0c1ea2340a6463b600a02b6bb145abbe"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "80beb142767012138c0cd71bcde6413b62cca5cb",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/283b96b7c23049168262eb15be1e0e75140004af/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/283b96b7c23049168262eb15be1e0e75140004af/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=283b96b7c23049168262eb15be1e0e75140004af",
        "patch": "@@ -633,7 +633,7 @@ static void MutateTxSign(CMutableTransaction& tx, const std::string& flagStr)\n \n     const CKeyStore& keystore = tempKeystore;\n \n-    bool fHashSingle = ((nHashType & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);\n+    bool fHashSingle = ((nHashType & 0x1f) == SIGHASH_SINGLE);\n \n     // Sign what we can:\n     for (unsigned int i = 0; i < mergedTx.vin.size(); i++) {"
      },
      {
        "sha": "44282ed688594813ea32a424743f4d19a1ef0fe4",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/283b96b7c23049168262eb15be1e0e75140004af/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/283b96b7c23049168262eb15be1e0e75140004af/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=283b96b7c23049168262eb15be1e0e75140004af",
        "patch": "@@ -856,7 +856,7 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n         }\n     }\n \n-    bool fHashSingle = ((nHashType & ~SIGHASH_ANYONECANPAY) == SIGHASH_SINGLE);\n+    bool fHashSingle = ((nHashType & 0x1f) == SIGHASH_SINGLE);\n \n     // Script verification errors\n     UniValue vErrors(UniValue::VARR);"
      }
    ]
  },
  {
    "sha": "b84c353216173515ac1f64658dd21f89b4282d9d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiODRjMzUzMjE2MTczNTE1YWMxZjY0NjU4ZGQyMWY4OWI0MjgyZDlk",
    "commit": {
      "author": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2018-06-07T02:24:05Z"
      },
      "committer": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2018-06-07T02:24:05Z"
      },
      "message": "Define SIGHASH_MASK",
      "tree": {
        "sha": "2da5821c1e0ccb5d77237ded37067b430927a09c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2da5821c1e0ccb5d77237ded37067b430927a09c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b84c353216173515ac1f64658dd21f89b4282d9d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b84c353216173515ac1f64658dd21f89b4282d9d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b84c353216173515ac1f64658dd21f89b4282d9d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b84c353216173515ac1f64658dd21f89b4282d9d/comments",
    "author": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "283b96b7c23049168262eb15be1e0e75140004af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/283b96b7c23049168262eb15be1e0e75140004af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/283b96b7c23049168262eb15be1e0e75140004af"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 18,
      "deletions": 16
    },
    "files": [
      {
        "sha": "f5369049dc7b45e05cf5e625aba0764edbebf52f",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b84c353216173515ac1f64658dd21f89b4282d9d/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b84c353216173515ac1f64658dd21f89b4282d9d/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=b84c353216173515ac1f64658dd21f89b4282d9d",
        "patch": "@@ -633,7 +633,7 @@ static void MutateTxSign(CMutableTransaction& tx, const std::string& flagStr)\n \n     const CKeyStore& keystore = tempKeystore;\n \n-    bool fHashSingle = ((nHashType & 0x1f) == SIGHASH_SINGLE);\n+    bool fHashSingle = ((nHashType & SIGHASH_MASK) == SIGHASH_SINGLE);\n \n     // Sign what we can:\n     for (unsigned int i = 0; i < mergedTx.vin.size(); i++) {"
      },
      {
        "sha": "123f453de5ba3304adc44948607c05cacb398354",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b84c353216173515ac1f64658dd21f89b4282d9d/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b84c353216173515ac1f64658dd21f89b4282d9d/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=b84c353216173515ac1f64658dd21f89b4282d9d",
        "patch": "@@ -856,7 +856,7 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n         }\n     }\n \n-    bool fHashSingle = ((nHashType & 0x1f) == SIGHASH_SINGLE);\n+    bool fHashSingle = ((nHashType & SIGHASH_MASK) == SIGHASH_SINGLE);\n \n     // Script verification errors\n     UniValue vErrors(UniValue::VARR);"
      },
      {
        "sha": "76efdb69b15a841b9b5676f85542880af0d59372",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b84c353216173515ac1f64658dd21f89b4282d9d/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b84c353216173515ac1f64658dd21f89b4282d9d/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=b84c353216173515ac1f64658dd21f89b4282d9d",
        "patch": "@@ -1104,8 +1104,8 @@ class CTransactionSignatureSerializer\n     CTransactionSignatureSerializer(const T& txToIn, const CScript& scriptCodeIn, unsigned int nInIn, int nHashTypeIn) :\n         txTo(txToIn), scriptCode(scriptCodeIn), nIn(nInIn),\n         fAnyoneCanPay(!!(nHashTypeIn & SIGHASH_ANYONECANPAY)),\n-        fHashSingle((nHashTypeIn & 0x1f) == SIGHASH_SINGLE),\n-        fHashNone((nHashTypeIn & 0x1f) == SIGHASH_NONE) {}\n+        fHashSingle((nHashTypeIn & SIGHASH_MASK) == SIGHASH_SINGLE),\n+        fHashNone((nHashTypeIn & SIGHASH_MASK) == SIGHASH_NONE) {}\n \n     /** Serialize the passed scriptCode, skipping OP_CODESEPARATORs */\n     template<typename S>\n@@ -1245,14 +1245,14 @@ uint256 SignatureHash(const CScript& scriptCode, const T& txTo, unsigned int nIn\n             hashPrevouts = cacheready ? cache->hashPrevouts : GetPrevoutHash(txTo);\n         }\n \n-        if (!(nHashType & SIGHASH_ANYONECANPAY) && (nHashType & 0x1f) != SIGHASH_SINGLE && (nHashType & 0x1f) != SIGHASH_NONE) {\n+        if (!(nHashType & SIGHASH_ANYONECANPAY) && (nHashType & SIGHASH_MASK) != SIGHASH_SINGLE && (nHashType & SIGHASH_MASK) != SIGHASH_NONE) {\n             hashSequence = cacheready ? cache->hashSequence : GetSequenceHash(txTo);\n         }\n \n \n-        if ((nHashType & 0x1f) != SIGHASH_SINGLE && (nHashType & 0x1f) != SIGHASH_NONE) {\n+        if ((nHashType & SIGHASH_MASK) != SIGHASH_SINGLE && (nHashType & SIGHASH_MASK) != SIGHASH_NONE) {\n             hashOutputs = cacheready ? cache->hashOutputs : GetOutputsHash(txTo);\n-        } else if ((nHashType & 0x1f) == SIGHASH_SINGLE && nIn < txTo.vout.size()) {\n+        } else if ((nHashType & SIGHASH_MASK) == SIGHASH_SINGLE && nIn < txTo.vout.size()) {\n             CHashWriter ss(SER_GETHASH, 0);\n             ss << txTo.vout[nIn];\n             hashOutputs = ss.GetHash();\n@@ -1284,7 +1284,7 @@ uint256 SignatureHash(const CScript& scriptCode, const T& txTo, unsigned int nIn\n     static const uint256 one(uint256S(\"0000000000000000000000000000000000000000000000000000000000000001\"));\n \n     // Check for invalid use of SIGHASH_SINGLE\n-    if ((nHashType & 0x1f) == SIGHASH_SINGLE) {\n+    if ((nHashType & SIGHASH_MASK) == SIGHASH_SINGLE) {\n         if (nIn >= txTo.vout.size()) {\n             //  nOut out of range\n             return one;"
      },
      {
        "sha": "f6bc7cb1db28bf6bf861766229ebd2856c9fd7a3",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b84c353216173515ac1f64658dd21f89b4282d9d/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b84c353216173515ac1f64658dd21f89b4282d9d/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=b84c353216173515ac1f64658dd21f89b4282d9d",
        "patch": "@@ -25,6 +25,7 @@ enum\n     SIGHASH_NONE = 2,\n     SIGHASH_SINGLE = 3,\n     SIGHASH_ANYONECANPAY = 0x80,\n+    SIGHASH_MASK = 0x1f, // not an actual type, but a mask to distinguish ALL/NONE/SINGLE\n };\n \n /** Script verification flags."
      },
      {
        "sha": "812ee099ef7eb1c3288ee9701432bbfa2a760c47",
        "filename": "src/test/sighash_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b84c353216173515ac1f64658dd21f89b4282d9d/src/test/sighash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b84c353216173515ac1f64658dd21f89b4282d9d/src/test/sighash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sighash_tests.cpp?ref=b84c353216173515ac1f64658dd21f89b4282d9d",
        "patch": "@@ -43,7 +43,7 @@ uint256 static SignatureHashOld(CScript scriptCode, const CTransaction& txTo, un\n     txTmp.vin[nIn].scriptSig = scriptCode;\n \n     // Blank out some of the outputs\n-    if ((nHashType & 0x1f) == SIGHASH_NONE)\n+    if ((nHashType & SIGHASH_MASK) == SIGHASH_NONE)\n     {\n         // Wildcard payee\n         txTmp.vout.clear();\n@@ -53,7 +53,7 @@ uint256 static SignatureHashOld(CScript scriptCode, const CTransaction& txTo, un\n             if (i != nIn)\n                 txTmp.vin[i].nSequence = 0;\n     }\n-    else if ((nHashType & 0x1f) == SIGHASH_SINGLE)\n+    else if ((nHashType & SIGHASH_MASK) == SIGHASH_SINGLE)\n     {\n         // Only lock-in the txout payee at same index as txin\n         unsigned int nOut = nIn;\n@@ -131,7 +131,7 @@ BOOST_AUTO_TEST_CASE(sighash_test)\n     for (int i=0; i<nRandomTests; i++) {\n         int nHashType = InsecureRand32();\n         CMutableTransaction txTo;\n-        RandomTransaction(txTo, (nHashType & 0x1f) == SIGHASH_SINGLE);\n+        RandomTransaction(txTo, (nHashType & SIGHASH_MASK) == SIGHASH_SINGLE);\n         CScript scriptCode;\n         RandomScript(scriptCode);\n         int nIn = InsecureRandRange(txTo.vin.size());"
      },
      {
        "sha": "f76c7b0a9a44b211a5640862e1a2217a57cda2ac",
        "filename": "test/functional/test_framework/script.py",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b84c353216173515ac1f64658dd21f89b4282d9d/test/functional/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b84c353216173515ac1f64658dd21f89b4282d9d/test/functional/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script.py?ref=b84c353216173515ac1f64658dd21f89b4282d9d",
        "patch": "@@ -568,6 +568,7 @@ def GetSigOpCount(self, fAccurate):\n SIGHASH_NONE = 2\n SIGHASH_SINGLE = 3\n SIGHASH_ANYONECANPAY = 0x80\n+SIGHASH_MASK = 0x1f\n \n def FindAndDelete(script, sig):\n     \"\"\"Consensus critical, see FindAndDelete() in Satoshi codebase\"\"\"\n@@ -603,14 +604,14 @@ def SignatureHash(script, txTo, inIdx, hashtype):\n         txin.scriptSig = b''\n     txtmp.vin[inIdx].scriptSig = FindAndDelete(script, CScript([OP_CODESEPARATOR]))\n \n-    if (hashtype & 0x1f) == SIGHASH_NONE:\n+    if (hashtype & SIGHASH_MASK) == SIGHASH_NONE:\n         txtmp.vout = []\n \n         for i in range(len(txtmp.vin)):\n             if i != inIdx:\n                 txtmp.vin[i].nSequence = 0\n \n-    elif (hashtype & 0x1f) == SIGHASH_SINGLE:\n+    elif (hashtype & SIGHASH_MASK) == SIGHASH_SINGLE:\n         outIdx = inIdx\n         if outIdx >= len(txtmp.vout):\n             return (HASH_ONE, \"outIdx %d out of range (%d)\" % (outIdx, len(txtmp.vout)))\n@@ -653,18 +654,18 @@ def SegwitVersion1SignatureHash(script, txTo, inIdx, hashtype, amount):\n             serialize_prevouts += i.prevout.serialize()\n         hashPrevouts = uint256_from_str(hash256(serialize_prevouts))\n \n-    if (not (hashtype & SIGHASH_ANYONECANPAY) and (hashtype & 0x1f) != SIGHASH_SINGLE and (hashtype & 0x1f) != SIGHASH_NONE):\n+    if (not (hashtype & SIGHASH_ANYONECANPAY) and (hashtype & SIGHASH_MASK) != SIGHASH_SINGLE and (hashtype & SIGHASH_MASK) != SIGHASH_NONE):\n         serialize_sequence = bytes()\n         for i in txTo.vin:\n             serialize_sequence += struct.pack(\"<I\", i.nSequence)\n         hashSequence = uint256_from_str(hash256(serialize_sequence))\n \n-    if ((hashtype & 0x1f) != SIGHASH_SINGLE and (hashtype & 0x1f) != SIGHASH_NONE):\n+    if ((hashtype & SIGHASH_MASK) != SIGHASH_SINGLE and (hashtype & SIGHASH_MASK) != SIGHASH_NONE):\n         serialize_outputs = bytes()\n         for o in txTo.vout:\n             serialize_outputs += o.serialize()\n         hashOutputs = uint256_from_str(hash256(serialize_outputs))\n-    elif ((hashtype & 0x1f) == SIGHASH_SINGLE and inIdx < len(txTo.vout)):\n+    elif ((hashtype & SIGHASH_MASK) == SIGHASH_SINGLE and inIdx < len(txTo.vout)):\n         serialize_outputs = txTo.vout[inIdx].serialize()\n         hashOutputs = uint256_from_str(hash256(serialize_outputs))\n "
      }
    ]
  }
]