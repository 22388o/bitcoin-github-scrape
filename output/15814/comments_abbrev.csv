gwillen,2019-04-15T02:51:08Z,"I'm not sure how I feel about this PR.\n\nI like the idea of removing code that is untested and unreferenced, since it at risk of bitrotting, or being buggy and unnoticed.\n\nThat said, I would say that PartiallySignedTransaction::IsNull and CBlock::ToString are both (1) essentially trivial methods with a negligible possibility of error, and (2) seem like they are fulfilling some part of the i",https://github.com/bitcoin/bitcoin/pull/15814#issuecomment-483090405,483090405,
promag,2019-04-15T07:19:49Z,"> * Add trivial test for `bitcoinconsensus_version()` to make it both technically in use and technically tested :-)\n\nYou could separate this to a different and non controversial pull.\n\nHow did you find the remaining changes?",https://github.com/bitcoin/bitcoin/pull/15814#issuecomment-483136275,483136275,
practicalswift,2019-04-15T07:25:23Z,@gwillen Thanks for reviewing! For the cases where the consensus is that YAGNI does not hold I'll simply add tests (like `bitcoinconsensus_version()`).,https://github.com/bitcoin/bitcoin/pull/15814#issuecomment-483137879,483137879,
gwillen,2019-04-15T07:50:35Z,"@practicalswift If you're writing the tests, I 100% cannot complain about this solution! :-)",https://github.com/bitcoin/bitcoin/pull/15814#issuecomment-483145411,483145411,
practicalswift,2019-04-15T09:31:41Z,"@gwillen The updated version adds some basic tests for the unused methods instead of removing. Now they are at least used from the tests :-) Please review!\n\nStill removing the unused `BlockFilter` ctor and `CBloomFilter::reset` since YAGNI likely holds for them. Looks OK? :-) ",https://github.com/bitcoin/bitcoin/pull/15814#issuecomment-483179316,483179316,
laanwj,2019-04-15T11:47:58Z,"> That said, I would say that PartiallySignedTransaction::IsNull and CBlock::ToString are both (1) essentially trivial methods with a negligible possibility of error, and (2) seem like they are fulfilling some part of the interface contract of their respective classes.\n\nYes. I've argued this before, and I felt exactly the same when seeing this PR title. Sometimes there's an unwritten assumptio",https://github.com/bitcoin/bitcoin/pull/15814#issuecomment-483219260,483219260,
practicalswift,2019-04-15T12:04:02Z,"@laanwj Yes, adding tests is the right thing to do in the cases you describe. The resulting removals look OK?",https://github.com/bitcoin/bitcoin/pull/15814#issuecomment-483223810,483223810,
laanwj,2019-04-15T12:53:01Z,"These are only:\n- `BlockFilter::BlockFilter(BlockFilterType filter_type, const uint256& block_hash,                         std::vector<unsigned char> filter)`\n- `CBloomFilter::reset(const unsigned int nNewTweak)`\n\nAs for the first one, this was recently added in #14172 by @jimpo. It looks like it was added as a lead-up to #14121 which is open and still unmerged. I would (unless Jim commen",https://github.com/bitcoin/bitcoin/pull/15814#issuecomment-483238982,483238982,
practicalswift,2019-04-15T14:51:03Z,@laanwj Thanks for reviewing the patch! Feedback now addressed. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/15814#issuecomment-483284499,483284499,
gwillen,2019-04-15T23:01:31Z,"Thanks, I like that much better! utACK as to the addition of the PSBT tests; I don't feel comfortable speaking to anything outside that.",https://github.com/bitcoin/bitcoin/pull/15814#issuecomment-483450013,483450013,
practicalswift,2019-06-11T21:20:32Z,@MarcoFalke Can we move forward with this one? The updated version adding basic unit tests should hopefully be non-controversial :-),https://github.com/bitcoin/bitcoin/pull/15814#issuecomment-501027461,501027461,
practicalswift,2019-06-29T14:07:11Z,"Closing this ""ham-handed"" PR :-)\n\nContext (from date of PR submission):\n\n```\n[wumpus] lool another day another ham-handed pracicalswift PR\n```",https://github.com/bitcoin/bitcoin/pull/15814#issuecomment-506959457,506959457,
fanquake,2019-04-15T02:19:32Z,I'm pretty sure all of the `PSBT` related `isNull()` methods are used. cc @gwillen.,https://github.com/bitcoin/bitcoin/pull/15814#discussion_r275190893,275190893,src/psbt.cpp
gwillen,2019-04-15T02:40:22Z,"I would believe that they're not. The refactor of PSBT methods went through several iterations and there was definitely dead code at least at one point.\n\nAlso, the fact that I can build and run tests with no complaint with the methods removed, suggests they are indeed unused.\n\nMore comments below, though.",https://github.com/bitcoin/bitcoin/pull/15814#discussion_r275192872,275192872,src/psbt.cpp
merland,2019-04-15T08:24:17Z,"The comment does not convey the ""root why"", which I guess is ""to avoid the risk of it becoming flagged as unused"" or something along those lines. (Maybe overkill for most people, but why not be as clear as possible... )",https://github.com/bitcoin/bitcoin/pull/15814#discussion_r275251688,275251688,src/test/script_tests.cpp
practicalswift,2019-04-15T09:21:38Z,Thanks for reviewing! Fixed!,https://github.com/bitcoin/bitcoin/pull/15814#discussion_r275273446,275273446,src/test/script_tests.cpp
practicalswift,2019-04-15T09:29:31Z,"`PartiallySignedTransaction::IsNull()`, `PSBTInput::IsNull()` and `PSBTOutput::IsNull()` were all globally unreferenced, unused and untested prior to this PR. In the updated PR they are tested and thus used from the tests at least :-)",https://github.com/bitcoin/bitcoin/pull/15814#discussion_r275276700,275276700,src/psbt.cpp
fanquake,2019-06-14T08:38:19Z,@achow101 did you want to take a look here?,https://github.com/bitcoin/bitcoin/pull/15814#discussion_r293711186,293711186,src/wallet/test/psbt_wallet_tests.cpp
