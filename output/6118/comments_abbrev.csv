jonasschnelli,2015-05-08T18:10:58Z,utACK.\nPlans to test this soon.\nLittle indentation/tabs nit chain.h L88:90.\n,https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-100316572,100316572,
sdaftuar,2015-05-08T18:16:08Z,"Nit fixed, thanks!\n",https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-100318671,100318671,
jonasschnelli,2015-05-10T08:36:39Z,Added this PR on top of master and left my pruned bitcoind mainnet node running over night. No issues.\nJust copied blocks/chainstate from a full-node to a fresh node and pruned to target 550MB. Worked as expected.\n\nTested ACK.\n,https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-100601489,100601489,
sipa,2015-05-10T21:44:52Z,Untested ACK. I don't understand the Travis failure.\n,https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-100704566,100704566,
sdaftuar,2015-05-13T18:57:52Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-101777592,101777592,
laanwj,2015-05-15T10:50:38Z,What is your reasoning behind this? From a conceptual point of view I like the flags to specify what they do now: does the block HAVE data or undo data.\n,https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-102367972,102367972,
sdaftuar,2015-05-15T13:41:30Z,"I was trying to eliminate the need to iterate the entire mapBlockIndex whenever a file is pruned (since we currently lack a map from block files to blocks, we check each block to see if it's in a blockfile being deleted).  That seems like something that needs to be fixed at some point.\n\nOne idea for addressing that would be to just maintain a (memory-only) map from block files to blockindex entr",https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-102400700,102400700,
laanwj,2015-05-15T15:31:12Z,Is the overhead to have to iterate over the (in-memory) block index when a file is pruned significant?\n\nMuddying the database semantics to make a rare action slightly faster would be unfortunate. But I don't feel strongly about it either.\n\nAlso: this makes the 'block has data' check more involved and that is performed very often.\n,https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-102433113,102433113,
sdaftuar,2015-05-15T16:28:15Z,"@laanwj I believe it's ~20ms to iterate mapBlockIndex. Arguably that is insignificant the way pruning works now, since it can only happen when we're calling `FlushStateToDisk()` which is already an expensive operation.\n\nRegarding the efficiency of `HaveBlockData()`, I think that this implementation is very fast if there's no lock contention and that seems to be the case presently; it's unclear t",https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-102453217,102453217,
morcos,2015-05-15T18:12:38Z,"I think @sdaftuar has a point that if we're ever going to implement lazy updating, the time to do it is now.  But personally I think some sort of reverse lookup is eventually going to be needed.  I implemented it to try it out and it's fine, but I also think the simple 20ms iteration every time you delete a blockfile is good enough for now and we should just do the reverse lookup in whatever way m",https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-102475719,102475719,
sdaftuar,2015-05-15T23:57:29Z,Updated a few comments and tried to make it clearer that `HaveBlockData()` can change state when pruning is enabled.\n,https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-102551244,102551244,
sdaftuar,2015-06-05T20:21:11Z,"Closing.  This apparently need to be rebased, and it's probably not worth it as I don't think we're going to merge for 0.11, and given the backwards compatibility issues this pull would generate if this were accepted later (see description above and https://github.com/bitcoin/bitcoin/pull/6148#issuecomment-103860722), I think it'd be better for us to wait until a sharding solution is on the table ",https://github.com/bitcoin/bitcoin/pull/6118#issuecomment-109429302,109429302,
theuni,2015-05-15T16:25:05Z,This comment points out that the HaveBlockData() name is very misleading. Could you change the name to indicate that it also updates the state?\n,https://github.com/bitcoin/bitcoin/pull/6118#discussion_r30423169,30423169,src/main.cpp
sdaftuar,2015-05-15T21:01:22Z,"Happy to change it, any suggestions?  The function only changes state if in pruning mode, so I don't want to go overboard with the description, and nothing concise is jumping out at me.\n\nI did notice the comment for the function doesn't really emphasize the potentially state-changing behavior, I'll start by rewording that for now to make it more obvious.\n",https://github.com/bitcoin/bitcoin/pull/6118#discussion_r30445842,30445842,src/main.cpp
