MarcoFalke,2021-05-12 15:05:50,"Concept ACK. I guess it should be clear from the context that those are compile-time constants. Also, IIRC it is not possible to name a enum value `ERROR`, because this conflicts with some windows macro in our cross build. `Error` might work.",https://github.com/bitcoin/bitcoin/pull/21930#issuecomment-839848143,839848143,
hebasto,2021-05-12 19:49:39,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/21930#issuecomment-840052726,840052726,
ryanofsky,2021-05-12 21:33:34,"Mildly disagree with this change. I think it's nice to be able to declare variables that change at runtime as `variable`, and declare variables that don't change as `CONSTANT`, and just use the choice to try to make code more understandable. It's possible a constant could conflict with a preprocessor macro, though, and this could be bad. I don't check for preprocessor macros under my bed every nig",https://github.com/bitcoin/bitcoin/pull/21930#issuecomment-840111444,840111444,
DrahtBot,2021-05-13 03:01:54,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/21930#issuecomment-840254955,840254955,
laanwj,2021-05-13 12:00:12,"ACK if this better matches what is in actual use in the project.\n\n""clashes with macros"" wouldn't be so much of an issue of C++ namespaced the things, but it doesn't, and as @ryanofsky already jokes they can just pop up from the kernel headers or libc headers out of nothing.\n",https://github.com/bitcoin/bitcoin/pull/21930#issuecomment-840509929,840509929,
jonatack,2021-05-13 14:05:56,"Checked the books/literature (Stroustrup, Meyers, Lippman, Moo, etc.) and they mostly use lowercase_underscore (snake_case) with a couple of the C++98 era ones using PascalCase (UpperCamelCase).\n\nThe Google style guide (https://google.github.io/styleguide/cppguide.html#Enumerator_Names) is a bit different but ""use kEnumName not ENUM_NAME"" for new code since 2009 for the same reasons.\n\nCurr",https://github.com/bitcoin/bitcoin/pull/21930#issuecomment-840585061,840585061,
ryanofsky,2021-05-13 15:21:56,"> I don't have a strong opinion (on my own I'd probably use lowercase_underscore (snake_case) with scoped enums as AFAICT it's widely used nowadays) but I think the important thing is to say which naming to use and to clarify if our choice is different from the CPP Core Guidelines so people aren't confused on which style to use.\n\nAgain just an opinion to throw in the mix, but I like `CONSTANT<",https://github.com/bitcoin/bitcoin/pull/21930#issuecomment-840634798,840634798,
jonatack,2021-05-14 08:31:10,"> guidelines that say there is no rule, and please do what seems appropriate.\n\nYes, that could be a helpful clarification too.\n",https://github.com/bitcoin/bitcoin/pull/21930#issuecomment-841099263,841099263,
MarcoFalke,2021-05-14 09:19:54,"If there is no rule, we shouldn't be mentioning it",https://github.com/bitcoin/bitcoin/pull/21930#issuecomment-841124521,841124521,
jonatack,2021-05-14 09:30:56,"Per the current doc, the general rule is we follow the CPP Core Guidelines, but our examples are contradictory to it (and perhaps to common usage). I found this confusing.\n\nRe-pushed an update that combines @ryanofsky's suggestion, open to feedback.\n",https://github.com/bitcoin/bitcoin/pull/21930#issuecomment-841130259,841130259,
jonatack,2021-07-13 19:26:40,Updated per @ryanofsky feedback (thanks!) and rebased for #18568.,https://github.com/bitcoin/bitcoin/pull/21930#issuecomment-879342357,879342357,
practicalswift,2021-07-24 20:28:52,"cr ACK 77f37f58ad2f349cecb2eda28b415267d3d7d76e\n\nAgree with @ryanofsky regarding:\n\n> [â€¦] it seems nice to move closer to cpp core guidelines and link to them even if not adopting them wholly.",https://github.com/bitcoin/bitcoin/pull/21930#issuecomment-886107670,886107670,
ryanofsky,2021-07-13 16:22:22,"In commit ""doc: update enum naming in developer notes"" (2d813c42ed5573d3afd80d677e2ded41e8d5b7e8)\n\nSuggestion to s/Enumerators/Enumerator constants/ to be clear this is referring to enum constant names not enum type names (maybe this is clear to others, but I had to look it up)",https://github.com/bitcoin/bitcoin/pull/21930#discussion_r668921643,668921643,doc/developer-notes.md
ryanofsky,2021-07-13 16:23:47,"In commit ""doc: update enum naming in developer notes"" (2d813c42ed5573d3afd80d677e2ded41e8d5b7e8)\n\nSuggest using backtick quotes around `snake_case`, `PascalCase`, or `ALL_CAPS`",https://github.com/bitcoin/bitcoin/pull/21930#discussion_r668922747,668922747,doc/developer-notes.md
ryanofsky,2021-07-13 16:26:54,"In commit ""doc: update enum naming in developer notes"" (2d813c42ed5573d3afd80d677e2ded41e8d5b7e8)\n\nWould be nice to add\n\n> , which recommend using `snake_case`\n\nto the end of this sentence to save the trouble of having to click the link to see what is suggested",https://github.com/bitcoin/bitcoin/pull/21930#discussion_r668925142,668925142,doc/developer-notes.md
ryanofsky,2021-07-13 16:34:52,"In commit ""doc: update enum naming in developer notes"" (2d813c42ed5573d3afd80d677e2ded41e8d5b7e8)\n\nI'd probably insert the new bullet point one line up so the two constant guidelines are next to each other:\n\n- Variable and namespace names\n- Constant names\n- Enumerator constant names\n- Class names, method names, and function names\n- Test names\n\n(This might require rebasing after",https://github.com/bitcoin/bitcoin/pull/21930#discussion_r668931260,668931260,doc/developer-notes.md
jonatack,2021-07-13 19:19:29,done,https://github.com/bitcoin/bitcoin/pull/21930#discussion_r669044156,669044156,doc/developer-notes.md
jonatack,2021-07-13 19:19:38,done,https://github.com/bitcoin/bitcoin/pull/21930#discussion_r669044233,669044233,doc/developer-notes.md
jonatack,2021-07-13 19:19:50,done,https://github.com/bitcoin/bitcoin/pull/21930#discussion_r669044358,669044358,doc/developer-notes.md
jonatack,2021-07-13 19:25:19,Thanks for the heads up on rebasing. Done.,https://github.com/bitcoin/bitcoin/pull/21930#discussion_r669047819,669047819,doc/developer-notes.md
