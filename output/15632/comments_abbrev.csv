jnewbery,2019-03-20T22:18:08Z,Depends on #10973 ,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-475050493,475050493,
jnewbery,2019-03-20T22:22:38Z,"Obviously requires careful testing. We don't currently have any automated testing for wallet rebroadcasts (`wallet_resendwallettransactions.py()` basically only tests the `resendwallettransactions` rpc method, and doesn't test whether:\n- `ResendWalletTransactions()` is called on a timer\n- `ResendWalletTransactions()` actually causes txs to be rebroadcast",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-475051852,475051852,
jnewbery,2019-03-20T22:23:31Z,Marking WIP until automated tests are written,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-475052118,475052118,
DrahtBot,2019-03-20T23:00:04Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15719](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15719.html) (Drop Chain::requestMempoolTransactions meth",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-475061267,475061267,
gmaxwell,2019-03-21T06:21:57Z,This seems to add a lot of lines of code for something intended to be a simplification?,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-475123638,475123638,
ryanofsky,2019-03-21T07:10:49Z,"> This seems to add a lot of lines of code for something intended to be a simplification?\n\nOnly the last 3 commits are relevant here. The first 4 commits come from #10973 which would conflict with this PR, so John chose it as a base, but is actually independent. This PR could just as easily be based on master.",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-475130852,475130852,
jnewbery,2019-03-21T14:35:43Z,"> The first 4 commits come from #10973 which would conflict with this PR\n\nIndeed. It didn't make sense to make or review changes in the node<->wallet interface while Russ's PR was open. It's merged now so I've rebased on master.\n\nChanges are now +28/-35",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-475254797,475254797,
jnewbery,2019-03-22T19:16:15Z,Tests added. See #15646 . Removing WIP tag.,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-475747660,475747660,
jnewbery,2019-03-26T15:26:27Z,Rebased on the updated #15646 (please leave review comments for the test in that PR),https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-476701816,476701816,
jnewbery,2019-03-26T15:55:27Z,The test is currently unreliable for me. I think there's a bad interaction between using mocktime and the scheduler thread scheduling tasks.,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-476716580,476716580,
promag,2019-03-27T16:13:38Z,"Could add `UpdateBlockTip` to `interfaces::Chain::Notifications` to avoid scheduler timer, maybe follow up?",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477232181,477232181,
jnewbery,2019-03-27T16:16:21Z,"> Could add UpdateBlockTip to interfaces::Chain::Notifications to avoid scheduler timer, maybe follow up?\n\nI don't understand this. How would this avoid using the schedule timer?",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477233485,477233485,
promag,2019-03-27T16:41:12Z,"@jnewbery untested, but see https://github.com/promag/bitcoin/commit/afc7ac58e9ee14d72467ae442256cf342f29ccfa.",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477245402,477245402,
jnewbery,2019-03-27T17:12:36Z,"Thanks @promag . Your change is definitely a simplification, but I think it makes the already bad privacy of rebroadcasts even worse.\n\nCurrently, wallet rebroadcasts are pretty bad for privacy: If you connect to a peer and they send you the same broadcast repeatedly, then it's their tx. Furthermore, they'll send _all_ of their txs together, so it's even easier to identify which txs are rebroad",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477260710,477260710,
promag,2019-03-27T17:28:53Z,I think I don't change the behavior?,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477268193,477268193,
jnewbery,2019-03-27T17:32:21Z,"> I think I don't change the behavior?\n\nYour change would mean that wallet txs are only ever rebroadcast immediately after a block is received. In the existing code, and in this PR, wallet txs are rebroadcast at random times.",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477269742,477269742,
promag,2019-03-27T18:21:05Z,"@jnewbery I think you are missing this check:\n```cpp\n    // Only do it if there's been a new block since last time\n    if (best_block_time < nLastResend)\n        return;\n    nLastResend = GetTime();\n```\nso in the existing behavior (your change too) txs are broadcast only once shortly after a new block.",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477290929,477290929,
MarcoFalke,2019-03-27T18:25:35Z,"@promag , the `nNextResend` will be pushed into the future if there was not block ",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477292471,477292471,
promag,2019-03-27T18:32:19Z,"@MarcoFalke right, but then if `best_block_time` is the same from the last `ResendWalletTransactions` then nothing happens.",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477294970,477294970,
promag,2019-03-27T18:48:56Z,"Sorry guys ðŸ˜•it resends if ""some random time passed AND there was a new block"".",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477300868,477300868,
jnewbery,2019-03-27T21:23:45Z,"I intend to update this PR to make use of the `UpdateBlockTip`. As @MarcoFalke pointed out (https://github.com/bitcoin/bitcoin/pull/15632#discussion_r269639165), we should use the local time of the tip updated to maintain existing behaviour. To do that, the wallet should receive an UpdateBlockTip notification and store the local time (currently `nTimeBestReceived ` is stored in validation, and sho",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477353148,477353148,
jnewbery,2019-03-27T21:31:06Z,Rebased on master. I still intend to update this PR to use `UpdateBlockTip` (https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477353148) and add comments (https://github.com/bitcoin/bitcoin/pull/15632#discussion_r269754733),https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477355403,477355403,
jnewbery,2019-03-28T19:06:18Z,"New branch pushed. Changes:\n\n- don't change to using tip block time. Continue using the local time of the tip being updated (plug wallet into UpdatedBlockTip notification and track with in the wallet)\n- add comment\n- add short sleep to test to make it run reliably (previously 10% of runs were failing because the block would be mined before the first time ResendWalletTransactions and so `nN",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477731422,477731422,
MarcoFalke,2019-03-28T22:00:38Z,"nit in commit 94344f23ac2f914866f3f440e56dd4840344ff17:\n\nShould also remove `nTimeBestReceived` in here, since the other changes make it unused? That way it is easier to see that they are the same value, just passed around differently.\n\nSame goes for the next commit 82b2f8c5cf8bce0202c8911f6a57b97b87dc35a1:\n\nThe hunks that are removed in later commits should maybe already be removed in",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477787253,477787253,
jnewbery,2019-03-28T23:58:47Z,Thanks @MarcoFalke . I'll rearrange commits tomorrow to aid review.,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-477813850,477813850,
jnewbery,2019-03-29T19:04:13Z,Commits updated as requested by @MarcoFalke and @ryanofsky.,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-478114686,478114686,
jnewbery,2019-04-01T20:48:15Z,rebased,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-478741805,478741805,
jnewbery,2019-04-02T15:20:42Z,rebased,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-479047381,479047381,
MarcoFalke,2019-04-02T16:10:54Z,utACK f7790b3ad4c0cd5318841e30224c0d3dea0a3dca,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-479072426,479072426,
jnewbery,2019-04-02T16:16:33Z,Fixed @MarcoFalke's review comments.,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-479075106,479075106,
jnewbery,2019-04-02T16:28:43Z,"> some typos\n\nSorry. Now fixed.",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-479080792,479080792,
MarcoFalke,2019-04-02T21:04:09Z,re-utACK 4aa062760e,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-479201550,479201550,
jnewbery,2019-04-02T21:45:05Z,@ryanofsky's comments addressed. Sorry for the churn here!,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-479217427,479217427,
MarcoFalke,2019-04-02T22:28:32Z,"re-utACK 28c75c0b5e\n\nOnly change is in a comment",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-479233487,479233487,
jnewbery,2019-04-03T14:36:37Z,Thanks @promag . Comments addressed.,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-479517288,479517288,
promag,2019-04-03T14:46:12Z,"utACK 4a0d1d5, ty @jnewbery.",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-479521399,479521399,
MarcoFalke,2019-04-03T21:07:45Z,"re-utACK 10569b1067\n",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-479659368,479659368,
jnewbery,2019-04-05T14:21:47Z,Removed extraneous `;`.,https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-480293689,480293689,
promag,2019-04-08T18:13:04Z,"utACK fe82f31, only change is `;` removal.",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-480944416,480944416,
meshcollider,2019-04-09T12:47:47Z,"Apologies for forcing another rebase, LGTM though https://github.com/bitcoin/bitcoin/pull/15632/commits/fe82f317fad35fbe45caf84e224ec722e4cbd5ab",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-481236575,481236575,
jnewbery,2019-04-09T14:40:51Z,"> Apologies for forcing another rebase\n\nDon't apologise. This is what we all signed up for! Thanks for the review.\n\nRebased on master.",https://github.com/bitcoin/bitcoin/pull/15632#issuecomment-481280835,481280835,
MarcoFalke,2019-03-27T13:54:37Z,"```suggestion\n// Resend wallet transactions that haven't gotten in a block yet;\n```",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r269573120,269573120,src/wallet/wallet.cpp
MarcoFalke,2019-03-27T13:55:08Z,"```suggestion\n// transactions become unconfirmed and spam other nodes.\n```",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r269573381,269573381,src/wallet/wallet.cpp
MarcoFalke,2019-03-27T15:57:44Z,"On further thoughts on this, it seems brittle to use the time the miner decided to put in the block header as opposed to our local time, which at least can be assumed to be monotonic. ",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r269639165,269639165,src/wallet/wallet.cpp
jnewbery,2019-03-27T16:06:28Z,"I'd just moved this comment from net_processing, but you're right that I should also improve it. Done!",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r269643592,269643592,src/wallet/wallet.cpp
jnewbery,2019-03-27T16:06:34Z,see above,https://github.com/bitcoin/bitcoin/pull/15632#discussion_r269643649,269643649,src/wallet/wallet.cpp
jnewbery,2019-03-27T16:15:19Z,"I think you're right that we should use the local time of the block received, but only in order to maintain existing behaviour.\n\nCan you explain how using block time would be brittle?",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r269648151,269648151,src/wallet/wallet.cpp
MarcoFalke,2019-03-27T18:23:19Z,"It will hurt privacy even for tx that have a sufficient fee to get into the next block (+5 min). They will be rebroadcast regardless because a miner might have set the the block time to at least 5 minutes into the future.\n\nSimilarly, if the block time is set into the past, you might not rebroadcast transactions for quite some time, even if a block has been mined without your txs in the meantim",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r269707372,269707372,src/wallet/wallet.cpp
ryanofsky,2019-03-27T20:27:03Z,"Greg's comments about this in IRC were very non-obvious to me. It would be good if the information could be added as a code comment:\n\nhttp://www.erisian.com.au/bitcoin-core-dev/log-2019-03-27.html#l-219\n\n> \<gmaxwell> jnewbery: the idea behind the current rebroadcast behavior is that unless the tip has changed we don't have any reason to expect our transaction to have been mined, so the re",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r269754733,269754733,src/wallet/wallet.cpp
jnewbery,2019-03-28T19:09:09Z,"I'm not really following how this is any worse for privacy, but I've reverted to using the local time of the tip being updated.",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r270158554,270158554,src/wallet/wallet.cpp
MarcoFalke,2019-03-28T21:04:20Z,"Not consistently worse, but in some race-conditions, one of which is enough to give an attacker useful observations\n\n* Attacker opens a bunch of new connections to you\n* You create tx with fee target of next block\n* tx is broadcast (attacker sees it)\n* less than 5 minutes pass, enough to mine a new block, but not enough to propagate the tx to miners\n* A block is mined with a timestamp ",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r270198547,270198547,src/wallet/wallet.cpp
ryanofsky,2019-03-29T17:30:50Z,This is accessed from two different threads so it might be better if this were atomic or accessed with the cs_wallet lock.,https://github.com/bitcoin/bitcoin/pull/15632#discussion_r270508337,270508337,src/wallet/wallet.h
ryanofsky,2019-03-29T17:39:24Z,I don't get why you'd need to sleep before a wait_until statement. Isn't wait_until going to wait longer than 1.1 seconds for the condition to be true? It would be helpful to update this comment saying where the failure is and what happens if the sleep is not long enough.,https://github.com/bitcoin/bitcoin/pull/15632#discussion_r270511484,270511484,test/functional/wallet_resendwallettransactions.py
jnewbery,2019-03-29T18:29:51Z,Good catch! I'll make this atomic.,https://github.com/bitcoin/bitcoin/pull/15632#discussion_r270528961,270528961,src/wallet/wallet.h
jnewbery,2019-03-29T19:03:51Z,"The `wait_until()` below can return in less than one second. If that happens then the rebroadcast timer won't have popped for the first time, and so `nNextResend` won't have been set. We then setmocktime, and when the rebroadcast timer does pop, `nNextResend` is still zero and `ResendWalletTransactions()` exits early.",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r270539747,270539747,test/functional/wallet_resendwallettransactions.py
MarcoFalke,2019-03-29T19:10:20Z,"In commit b53a127ec02fa42e87cb4151e0529fbf3226187a: \n\nWould have to adjust `boost::signals2::signal<void (int64_t nBestBlockTime, CConnman* connman)> Broadcast;` a few lines up as well",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r270541611,270541611,src/validationinterface.cpp
jnewbery,2019-03-29T19:58:38Z,Thanks. Fixed.,https://github.com/bitcoin/bitcoin/pull/15632#discussion_r270555186,270555186,src/validationinterface.cpp
MarcoFalke,2019-04-02T16:01:05Z,"style-nit in f7790b3ad4c0cd5318841e30224c0d3dea0a3dca:\n\nany reason to scope cs_wallet, but not cs_main?",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r271380535,271380535,src/wallet/wallet.cpp
MarcoFalke,2019-04-02T16:10:32Z,"style-nit in commit 9ad047d936c5601ca3841303595368e3c23e50b9:\n\n```suggestion\n        # warmed up (see nNextResend in ResendWalletTransactions(), which is called first scheduled 1sec after startup)\n```",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r271384635,271384635,test/functional/wallet_resendwallettransactions.py
jnewbery,2019-04-02T16:16:07Z,fixed,https://github.com/bitcoin/bitcoin/pull/15632#discussion_r271386890,271386890,src/wallet/wallet.cpp
jnewbery,2019-04-02T16:16:13Z,fixed,https://github.com/bitcoin/bitcoin/pull/15632#discussion_r271386951,271386951,test/functional/wallet_resendwallettransactions.py
MarcoFalke,2019-04-02T16:23:08Z,"```suggestion\n        # The rebroadcast is first scheduled 1 sec after startup\n```",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r271389840,271389840,test/functional/wallet_resendwallettransactions.py
MarcoFalke,2019-04-02T16:23:22Z,"```suggestion\n        # (see nNextResend in ResendWalletTransactions()). Sleep for just over\n```",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r271389931,271389931,test/functional/wallet_resendwallettransactions.py
ryanofsky,2019-04-02T20:58:28Z,"re: https://github.com/bitcoin/bitcoin/pull/15632#discussion_r270539747\n\nMaybe add ""to be certain that it has been called _before the first setmocktime call below_"".\n\nNormally when you see a sleep in a test, it's inserted right before the thing that needs to be delayed, but in this case, the thing that needs to be delayed is further down, so it would be helpful to point out.",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r271493191,271493191,test/functional/wallet_resendwallettransactions.py
ryanofsky,2019-04-02T21:10:17Z,"In commit ""[wallet] Remove unnecessary Chain::Lock parameter from ResendWalletTransactions"" (4aa062760e5b6d91e3528833eff81d6a6cf96ff5)\n\nComment change should go in the previous commit which adds the comment and the sleep: ""[wallet] Schedule tx rebroadcasts in wallet."" (b1d1c414889aa2573806fe2d925651be66335bc4), since this isn't related to removing chain_lock.\n\n",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r271497241,271497241,test/functional/wallet_resendwallettransactions.py
promag,2019-04-03T13:55:38Z," nits, space after `*`, snake case, and unused symbols.",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r271754603,271754603,src/interfaces/chain.cpp
promag,2019-04-03T13:58:50Z,"nit, could have a comment.",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r271756207,271756207,src/wallet/wallet.h
promag,2019-04-03T14:05:21Z,"nit, `if (wtx.RelayWalletTransaction(*locked_chain)) relayed_tx_count++;` ðŸŽ‰ ",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r271759199,271759199,src/wallet/wallet.cpp
promag,2019-04-03T14:07:47Z,"Drop comment here and in L2145 (my preference), or update here.",https://github.com/bitcoin/bitcoin/pull/15632#discussion_r271760285,271760285,src/wallet/wallet.cpp
