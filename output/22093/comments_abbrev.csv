hebasto,2021-05-28 07:31:01,cc @dongcarl @jarolrod ,https://github.com/bitcoin/bitcoin/pull/22093#issuecomment-850213096,850213096,
DrahtBot,2021-05-28 15:16:38,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22380](https://github.com/bitcoin/bitcoin/pull/22380) (build: add and use C_STANDARD and CXX_STANDARD in depends by fanq",https://github.com/bitcoin/bitcoin/pull/22093#issuecomment-850490844,850490844,
hebasto,2021-06-02 15:08:08,Rebased 6f44c42e77c3dddd51a6f113163a168f60be9206 -> 2fda0c785188ae94fba921c1b8f6f2c005faf1d4 ([pr22093.01](https://github.com/hebasto/bitcoin/commits/pr22093.01) -> [pr22093.02](https://github.com/hebasto/bitcoin/commits/pr22093.02)) due to the conflict with #22088.,https://github.com/bitcoin/bitcoin/pull/22093#issuecomment-853108563,853108563,
DrahtBot,2021-06-02 23:27:07,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 7e83e74e7fca7e1adee2174fee447a86af9bc68d<br>(master) | commit 82c7038faadece44a596dc4afbf03e853150f9b5<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`3657abadb1a2ab5c...`](https://drahtbot.space/gitian/bitcoin/bitcoin/7e83e74e7fca7e1adee2174fee447a86af9bc68d/bitcoin-7e83e74e7fca-aarch64-l,https://github.com/bitcoin/bitcoin/pull/22093#issuecomment-853446806,853446806,
DrahtBot,2021-06-04 21:41:17,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 8837f1ebde0537b0fdfa1353d06ae8e61a259982<br>(master) | commit f073168efc654ebfc3c93cc2295b56301b68a33a<br>(master and this pull) |\n|--|--|--|\n| SKIPATTEST.TAG | [`e3b0c44298fc1c14...`](https://drahtbot.space/guix/bitcoin/bitcoin/8837f1ebde0537b0fdfa1353d06ae8e61a259982/SKIPATTEST.TAG) | [`e3b0c44298fc1c14...`](https://dr,https://github.com/bitcoin/bitcoin/pull/22093#issuecomment-855014939,855014939,
DrahtBot,2021-06-06 04:20:31,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 346e52afd6d5e317c96fc506bb54cde13e87c8b2<br>(master) | commit 267048ce988822e775e6b465e2ed4562bcdeeceb<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`438c3423dfc3ae3e...`](https://drahtbot.space/gitian/bitcoin/bitcoin/346e52afd6d5e317c96fc506bb54cde13e87c8b2/bitcoin-346e52afd6d5-aarch64-l,https://github.com/bitcoin/bitcoin/pull/22093#issuecomment-855334862,855334862,
laanwj,2021-08-02 11:57:22,"I wonder if the mingw developers plan on supporting the C++ threading stuff in the `-win32` variant (this is the only reason we require `-posix`). There is no inherent reason not to, for example MSVC can do C++ threading without explicit POSIX compatibility. But it might be a lot of work for some other reason.\n\nThat said, this makes sense for now. Concept ACK.",https://github.com/bitcoin/bitcoin/pull/22093#issuecomment-890965756,890965756,
dongcarl,2021-05-28 21:01:52,Do we need `:=` here? Can we just do `=`?,https://github.com/bitcoin/bitcoin/pull/22093#discussion_r641813408,641813408,depends/hosts/mingw32.mk
hebasto,2021-05-29 09:47:15,"> Do we need `:=` here?\n\nNo, we don't.\n\n> Can we just do `=`?\n\nYes, we can.\n\nBut I do prefer simply expanded `make` variables to recursively expanded ones. They make debugging and reasoning about `Makefile`s much easier. Actually, I think the choice of a simply expanded variable is the default, while the usage of a recursively expanded variable requires justification.\n\nIn this ",https://github.com/bitcoin/bitcoin/pull/22093#discussion_r641917223,641917223,depends/hosts/mingw32.mk
laanwj,2021-08-02 11:59:00,This always installs both variants?,https://github.com/bitcoin/bitcoin/pull/22093#discussion_r680910324,680910324,doc/build-windows.md
laanwj,2021-08-02 12:01:04,"Apparently yes: https://packages.ubuntu.com/hirsute/g++-mingw-w64-x86-64\n\n`g++-mingw-w64-x86-64` is an umbrella package that depends on `g++-mingw-w64-x86-64-posix` and `g++-mingw-w64-x86-64-win32`. It does not contain any compiler itself, just some documentation files.\n",https://github.com/bitcoin/bitcoin/pull/22093#discussion_r680911586,680911586,doc/build-windows.md
laanwj,2021-08-02 12:02:24,I do not know enough of the make assignment semantics to weigh in here.,https://github.com/bitcoin/bitcoin/pull/22093#discussion_r680912315,680912315,depends/hosts/mingw32.mk
