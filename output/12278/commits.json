[
  {
    "sha": "ee1112122932151cee06b28ef724e0726849391b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTExMTIxMjI5MzIxNTFjZWUwNmIyOGVmNzI0ZTA3MjY4NDkzOTFi",
    "commit": {
      "author": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2018-01-27T07:10:56Z"
      },
      "committer": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2018-01-29T22:36:25Z"
      },
      "message": "Add special error for genesis coinbase to gettransaction",
      "tree": {
        "sha": "a124dac2f863b4ac4f768cdceb8a83f7a6efd967",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a124dac2f863b4ac4f768cdceb8a83f7a6efd967"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee1112122932151cee06b28ef724e0726849391b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee1112122932151cee06b28ef724e0726849391b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee1112122932151cee06b28ef724e0726849391b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee1112122932151cee06b28ef724e0726849391b/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ae7cf8ef5be67e085abc1b1dc71bc44865a71b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ae7cf8ef5be67e085abc1b1dc71bc44865a71b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ae7cf8ef5be67e085abc1b1dc71bc44865a71b3"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "00e73675b4771fe3374c1cdcca144e5825a5ba59",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee1112122932151cee06b28ef724e0726849391b/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee1112122932151cee06b28ef724e0726849391b/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=ee1112122932151cee06b28ef724e0726849391b",
        "patch": "@@ -147,6 +147,11 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n     CBlockIndex* blockindex = nullptr;\n \n+    if (hash == Params().GenesisBlock().hashMerkleRoot) {\n+        // Special exception for the genesis block coinbase transaction\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"The genesis block coinbase is not considered an ordinary transaction and cannot be retrieved\");\n+    }\n+\n     // Accept either a bool (true) or a num (>=1) to indicate verbose output.\n     bool fVerbose = false;\n     if (!request.params[1].isNull()) {"
      },
      {
        "sha": "c2ca7c70b82958989fb266b7c80cb56b1b2f6dd8",
        "filename": "test/functional/rpc_rawtransaction.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee1112122932151cee06b28ef724e0726849391b/test/functional/rpc_rawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee1112122932151cee06b28ef724e0726849391b/test/functional/rpc_rawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_rawtransaction.py?ref=ee1112122932151cee06b28ef724e0726849391b",
        "patch": "@@ -59,6 +59,10 @@ def run_test(self):\n         self.nodes[0].generate(5)\n         self.sync_all()\n \n+        # Test getrawtransaction on genesis block coinbase returns an error\n+        block = self.nodes[0].getblock(self.nodes[0].getblockhash(0))\n+        assert_raises_rpc_error(-5, \"The genesis block coinbase is not considered an ordinary transaction\", self.nodes[0].getrawtransaction, block['merkleroot'])\n+\n         # Test `createrawtransaction` required parameters\n         assert_raises_rpc_error(-1, \"createrawtransaction\", self.nodes[0].createrawtransaction)\n         assert_raises_rpc_error(-1, \"createrawtransaction\", self.nodes[0].createrawtransaction, [])"
      }
    ]
  }
]