[
  {
    "sha": "f5809d5b135c7f9de5217d3cda76638fe7eed58a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNTgwOWQ1YjEzNWM3ZjlkZTUyMTdkM2NkYTc2NjM4ZmU3ZWVkNThh",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-03-29T18:09:00Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-09-17T13:45:38Z"
      },
      "message": "doc: fix CChainState::ActivateBestChain doc",
      "tree": {
        "sha": "c2712ff20096a3bf923532bc30e6d42e6cb6d64b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c2712ff20096a3bf923532bc30e6d42e6cb6d64b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5809d5b135c7f9de5217d3cda76638fe7eed58a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5809d5b135c7f9de5217d3cda76638fe7eed58a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f5809d5b135c7f9de5217d3cda76638fe7eed58a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5809d5b135c7f9de5217d3cda76638fe7eed58a/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f18a9065e91163b0238fc005d693b0d961116855",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f18a9065e91163b0238fc005d693b0d961116855",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f18a9065e91163b0238fc005d693b0d961116855"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e3ef0511153deeb45ac8d3e6fc9c952a7cb2ec6e",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5809d5b135c7f9de5217d3cda76638fe7eed58a/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5809d5b135c7f9de5217d3cda76638fe7eed58a/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=f5809d5b135c7f9de5217d3cda76638fe7eed58a",
        "patch": "@@ -678,9 +678,13 @@ class CChainState {\n      * we avoid holding cs_main for an extended period of time; the length of this\n      * call may be quite long during reindexing or a substantial reorg.\n      *\n+     * May not be called with cs_main held. May not be called in a\n+     * validationinterface callback.\n+     *\n      * @returns true unless a system error occurred\n      */\n-    bool ActivateBestChain(CValidationState& state,\n+    bool ActivateBestChain(\n+        CValidationState& state,\n         const CChainParams& chainparams,\n         std::shared_ptr<const CBlock> pblock) LOCKS_EXCLUDED(cs_main);\n "
      }
    ]
  },
  {
    "sha": "bcf73d3b84649c8786f0cccc6862dd1bbdb9950b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiY2Y3M2QzYjg0NjQ5Yzg3ODZmMGNjY2M2ODYyZGQxYmJkYjk5NTBi",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-03-29T18:09:55Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-09-17T13:45:38Z"
      },
      "message": "refactoring: move LoadChainTip to CChainState method",
      "tree": {
        "sha": "03052fdd42629f875f9f4deccac13885f10c443e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03052fdd42629f875f9f4deccac13885f10c443e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bcf73d3b84649c8786f0cccc6862dd1bbdb9950b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcf73d3b84649c8786f0cccc6862dd1bbdb9950b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bcf73d3b84649c8786f0cccc6862dd1bbdb9950b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcf73d3b84649c8786f0cccc6862dd1bbdb9950b/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f5809d5b135c7f9de5217d3cda76638fe7eed58a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5809d5b135c7f9de5217d3cda76638fe7eed58a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f5809d5b135c7f9de5217d3cda76638fe7eed58a"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 18,
      "deletions": 14
    },
    "files": [
      {
        "sha": "d7b09b5e46f7f54c05f085dd032d6264a985525b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bcf73d3b84649c8786f0cccc6862dd1bbdb9950b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bcf73d3b84649c8786f0cccc6862dd1bbdb9950b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=bcf73d3b84649c8786f0cccc6862dd1bbdb9950b",
        "patch": "@@ -1557,8 +1557,8 @@ bool AppInitMain(InitInterfaces& interfaces)\n                 is_coinsview_empty = fReset || fReindexChainState ||\n                     ::ChainstateActive().CoinsTip().GetBestBlock().IsNull();\n                 if (!is_coinsview_empty) {\n-                    // LoadChainTip sets ::ChainActive() based on CoinsTip()'s best block\n-                    if (!LoadChainTip(chainparams)) {\n+                    // LoadChainTip initializes the chain based on CoinsTip()'s best block\n+                    if (!::ChainstateActive().LoadChainTip(chainparams)) {\n                         strLoadError = _(\"Error initializing block database\").translated;\n                         break;\n                     }"
      },
      {
        "sha": "60baebccfdb480f4b20ee391e5bf280095f46d50",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 10,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bcf73d3b84649c8786f0cccc6862dd1bbdb9950b/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bcf73d3b84649c8786f0cccc6862dd1bbdb9950b/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=bcf73d3b84649c8786f0cccc6862dd1bbdb9950b",
        "patch": "@@ -3932,28 +3932,31 @@ bool static LoadBlockIndexDB(const CChainParams& chainparams) EXCLUSIVE_LOCKS_RE\n     return true;\n }\n \n-bool LoadChainTip(const CChainParams& chainparams)\n+bool CChainState::LoadChainTip(const CChainParams& chainparams)\n {\n     AssertLockHeld(cs_main);\n-    const CCoinsViewCache& coins_cache = ::ChainstateActive().CoinsTip();\n+    const CCoinsViewCache& coins_cache = CoinsTip();\n     assert(!coins_cache.GetBestBlock().IsNull()); // Never called when the coins view is empty\n+    const CBlockIndex* tip = m_chain.Tip();\n \n-    if (::ChainActive().Tip() &&\n-        ::ChainActive().Tip()->GetBlockHash() == coins_cache.GetBestBlock()) return true;\n+    if (tip && tip->GetBlockHash() == coins_cache.GetBestBlock()) {\n+        return true;\n+    }\n \n     // Load pointer to end of best chain\n     CBlockIndex* pindex = LookupBlockIndex(coins_cache.GetBestBlock());\n     if (!pindex) {\n         return false;\n     }\n-    ::ChainActive().SetTip(pindex);\n-\n-    ::ChainstateActive().PruneBlockIndexCandidates();\n+    m_chain.SetTip(pindex);\n+    PruneBlockIndexCandidates();\n \n+    tip = m_chain.Tip();\n     LogPrintf(\"Loaded best chain: hashBestChain=%s height=%d date=%s progress=%f\\n\",\n-        ::ChainActive().Tip()->GetBlockHash().ToString(), ::ChainActive().Height(),\n-        FormatISO8601DateTime(::ChainActive().Tip()->GetBlockTime()),\n-        GuessVerificationProgress(chainparams.TxData(), ::ChainActive().Tip()));\n+        tip->GetBlockHash().ToString(),\n+        m_chain.Height(),\n+        FormatISO8601DateTime(tip->GetBlockTime()),\n+        GuessVerificationProgress(chainparams.TxData(), tip));\n     return true;\n }\n "
      },
      {
        "sha": "a6decf9a99136fd173967068afcdb57a57a0f1ac",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bcf73d3b84649c8786f0cccc6862dd1bbdb9950b/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bcf73d3b84649c8786f0cccc6862dd1bbdb9950b/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=bcf73d3b84649c8786f0cccc6862dd1bbdb9950b",
        "patch": "@@ -240,8 +240,6 @@ bool LoadGenesisBlock(const CChainParams& chainparams);\n /** Load the block tree and coins database from disk,\n  * initializing state if we're running with -reindex. */\n bool LoadBlockIndex(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n-/** Update the chain tip based on database information. */\n-bool LoadChainTip(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n /** Unload database information */\n void UnloadBlockIndex();\n /** Run an instance of the script checking thread */\n@@ -721,6 +719,9 @@ class CChainState {\n      */\n     void CheckBlockIndex(const Consensus::Params& consensusParams);\n \n+    /** Update the chain tip based on database information, i.e. CoinsTip()'s best block. */\n+    bool LoadChainTip(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n private:\n     bool ActivateBestChainStep(CValidationState& state, const CChainParams& chainparams, CBlockIndex* pindexMostWork, const std::shared_ptr<const CBlock>& pblock, bool& fInvalidFound, ConnectTrace& connectTrace) EXCLUSIVE_LOCKS_REQUIRED(cs_main, ::mempool.cs);\n     bool ConnectTip(CValidationState& state, const CChainParams& chainparams, CBlockIndex* pindexNew, const std::shared_ptr<const CBlock>& pblock, ConnectTrace& connectTrace, DisconnectedBlockTransactions& disconnectpool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, ::mempool.cs);"
      }
    ]
  },
  {
    "sha": "3cf36736e540cf06250701f0934a7946836d000d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozY2YzNjczNmU1NDBjZjA2MjUwNzAxZjA5MzRhNzk0NjgzNmQwMDBk",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-03-29T20:43:59Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-09-17T13:45:38Z"
      },
      "message": "refactoring: move ReplayBlocks under CChainState",
      "tree": {
        "sha": "28a1cd25fa20c38938df353962ed39f1fee51701",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28a1cd25fa20c38938df353962ed39f1fee51701"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3cf36736e540cf06250701f0934a7946836d000d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cf36736e540cf06250701f0934a7946836d000d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3cf36736e540cf06250701f0934a7946836d000d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cf36736e540cf06250701f0934a7946836d000d/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bcf73d3b84649c8786f0cccc6862dd1bbdb9950b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcf73d3b84649c8786f0cccc6862dd1bbdb9950b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bcf73d3b84649c8786f0cccc6862dd1bbdb9950b"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 7,
      "deletions": 12
    },
    "files": [
      {
        "sha": "7c752d615a727e6af2fe726614660ae86d52021d",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cf36736e540cf06250701f0934a7946836d000d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cf36736e540cf06250701f0934a7946836d000d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=3cf36736e540cf06250701f0934a7946836d000d",
        "patch": "@@ -1545,7 +1545,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n                 }\n \n                 // ReplayBlocks is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\n-                if (!ReplayBlocks(chainparams, &::ChainstateActive().CoinsDB())) {\n+                if (!::ChainstateActive().ReplayBlocks(chainparams)) {\n                     strLoadError = _(\"Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.\").translated;\n                     break;\n                 }"
      },
      {
        "sha": "3a35fd510a6b4d357a9d02d02bb9d4a74255ee75",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cf36736e540cf06250701f0934a7946836d000d/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cf36736e540cf06250701f0934a7946836d000d/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3cf36736e540cf06250701f0934a7946836d000d",
        "patch": "@@ -4091,13 +4091,14 @@ bool CChainState::RollforwardBlock(const CBlockIndex* pindex, CCoinsViewCache& i\n     return true;\n }\n \n-bool CChainState::ReplayBlocks(const CChainParams& params, CCoinsView* view)\n+bool CChainState::ReplayBlocks(const CChainParams& params)\n {\n     LOCK(cs_main);\n \n-    CCoinsViewCache cache(view);\n+    CCoinsView& db = this->CoinsDB();\n+    CCoinsViewCache cache(&db);\n \n-    std::vector<uint256> hashHeads = view->GetHeadBlocks();\n+    std::vector<uint256> hashHeads = db.GetHeadBlocks();\n     if (hashHeads.empty()) return true; // We're already in a consistent state.\n     if (hashHeads.size() != 2) return error(\"ReplayBlocks(): unknown inconsistent state\");\n \n@@ -4157,10 +4158,6 @@ bool CChainState::ReplayBlocks(const CChainParams& params, CCoinsView* view)\n     return true;\n }\n \n-bool ReplayBlocks(const CChainParams& params, CCoinsView* view) {\n-    return ::ChainstateActive().ReplayBlocks(params, view);\n-}\n-\n //! Helper for CChainState::RewindBlockIndex\n void CChainState::EraseBlockData(CBlockIndex* index)\n {"
      },
      {
        "sha": "615b83f028f5a9022c6e3ff273a39e565df48dc8",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cf36736e540cf06250701f0934a7946836d000d/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cf36736e540cf06250701f0934a7946836d000d/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=3cf36736e540cf06250701f0934a7946836d000d",
        "patch": "@@ -398,9 +398,6 @@ class CVerifyDB {\n     bool VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth);\n };\n \n-/** Replay blocks that aren't fully applied to the database. */\n-bool ReplayBlocks(const CChainParams& params, CCoinsView* view);\n-\n CBlockIndex* LookupBlockIndex(const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n /** Find the last common block between the parameter chain and a locator. */\n@@ -701,7 +698,8 @@ class CChainState {\n     bool InvalidateBlock(CValidationState& state, const CChainParams& chainparams, CBlockIndex* pindex) LOCKS_EXCLUDED(cs_main);\n     void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool ReplayBlocks(const CChainParams& params, CCoinsView* view);\n+    /** Replay blocks that aren't fully applied to the database. */\n+    bool ReplayBlocks(const CChainParams& params);\n     bool RewindBlockIndex(const CChainParams& params) LOCKS_EXCLUDED(cs_main);\n     bool LoadGenesisBlock(const CChainParams& chainparams);\n "
      }
    ]
  }
]