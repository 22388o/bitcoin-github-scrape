[
  {
    "sha": "50e647210d513dab8f40ded61fe439ecaa9a67c3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MGU2NDcyMTBkNTEzZGFiOGY0MGRlZDYxZmU0MzllY2FhOWE2N2Mz",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-02-08T20:29:45Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-02-08T20:29:45Z"
      },
      "message": "Move ParseConfirmTarget from rpc/mining to rpc/util\n\nUtil is a better home since it's called both by wallet and mining code.\n\nSuggested https://github.com/bitcoin/bitcoin/pull/15288#discussion_r254449444",
      "tree": {
        "sha": "35ff7860a0fc640c6ead14dcb1aca9d05c9da556",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35ff7860a0fc640c6ead14dcb1aca9d05c9da556"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50e647210d513dab8f40ded61fe439ecaa9a67c3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50e647210d513dab8f40ded61fe439ecaa9a67c3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50e647210d513dab8f40ded61fe439ecaa9a67c3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50e647210d513dab8f40ded61fe439ecaa9a67c3/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2945492424934fa360f86b116184ee8e34f19d0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2945492424934fa360f86b116184ee8e34f19d0a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2945492424934fa360f86b116184ee8e34f19d0a"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 15,
      "deletions": 13
    },
    "files": [
      {
        "sha": "35f55b01418e89d565aebceaa702badf09a32ab9",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50e647210d513dab8f40ded61fe439ecaa9a67c3/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50e647210d513dab8f40ded61fe439ecaa9a67c3/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=50e647210d513dab8f40ded61fe439ecaa9a67c3",
        "patch": "@@ -31,16 +31,6 @@\n #include <memory>\n #include <stdint.h>\n \n-unsigned int ParseConfirmTarget(const UniValue& value)\n-{\n-    int target = value.get_int();\n-    unsigned int max_target = ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE);\n-    if (target < 1 || (unsigned int)target > max_target) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid conf_target, must be between %u - %u\", 1, max_target));\n-    }\n-    return (unsigned int)target;\n-}\n-\n /**\n  * Return average network hashes per second based on the last 'lookup' blocks,\n  * or from the last difficulty change if 'lookup' is nonpositive."
      },
      {
        "sha": "be9a9733159171cdf6019cfae6040b88fcc2c864",
        "filename": "src/rpc/mining.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50e647210d513dab8f40ded61fe439ecaa9a67c3/src/rpc/mining.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50e647210d513dab8f40ded61fe439ecaa9a67c3/src/rpc/mining.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.h?ref=50e647210d513dab8f40ded61fe439ecaa9a67c3",
        "patch": "@@ -12,7 +12,4 @@\n /** Generate blocks (mine) */\n UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript);\n \n-/** Check bounds on a command line confirm target */\n-unsigned int ParseConfirmTarget(const UniValue& value);\n-\n #endif"
      },
      {
        "sha": "aa5076cd8e77ceec8fc4badb6e099d1bccf322e7",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50e647210d513dab8f40ded61fe439ecaa9a67c3/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50e647210d513dab8f40ded61fe439ecaa9a67c3/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=50e647210d513dab8f40ded61fe439ecaa9a67c3",
        "patch": "@@ -4,10 +4,12 @@\n \n #include <key_io.h>\n #include <keystore.h>\n+#include <policy/fees.h>\n #include <rpc/protocol.h>\n #include <rpc/util.h>\n #include <tinyformat.h>\n #include <util/strencodings.h>\n+#include <validation.h>\n \n InitInterfaces* g_rpc_interfaces = nullptr;\n \n@@ -129,6 +131,16 @@ UniValue DescribeAddress(const CTxDestination& dest)\n     return boost::apply_visitor(DescribeAddressVisitor(), dest);\n }\n \n+unsigned int ParseConfirmTarget(const UniValue& value)\n+{\n+    int target = value.get_int();\n+    unsigned int max_target = ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE);\n+    if (target < 1 || (unsigned int)target > max_target) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid conf_target, must be between %u - %u\", 1, max_target));\n+    }\n+    return (unsigned int)target;\n+}\n+\n struct Section {\n     Section(const std::string& left, const std::string& right)\n         : m_left{left}, m_right{right} {}"
      },
      {
        "sha": "d34c9cfdbbbad8acc62e6bbe25ff3728d2f199cb",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50e647210d513dab8f40ded61fe439ecaa9a67c3/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50e647210d513dab8f40ded61fe439ecaa9a67c3/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=50e647210d513dab8f40ded61fe439ecaa9a67c3",
        "patch": "@@ -28,6 +28,9 @@ CScript CreateMultisigRedeemscript(const int required, const std::vector<CPubKey\n \n UniValue DescribeAddress(const CTxDestination& dest);\n \n+//! Parse a confirm target option and raise an RPC error if it is invalid.\n+unsigned int ParseConfirmTarget(const UniValue& value);\n+\n struct RPCArg {\n     enum class Type {\n         OBJ,"
      }
    ]
  }
]