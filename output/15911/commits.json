[
  {
    "sha": "4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZmNiNjk4YmMyYmI3NDE3MWNkM2ExNGI5NGY5ODgyZDhlMTllOWZi",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-04-27T17:44:38Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-07-27T17:24:56Z"
      },
      "message": "[rpc] walletcreatefundedpsbt: use wallet default RBF",
      "tree": {
        "sha": "1a9ca9d6cf1c98cde3b3b16908a6c93096d74666",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a9ca9d6cf1c98cde3b3b16908a6c93096d74666"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl08iOgACgkQV/+b28ww\nEAnJzQ/5AUgikxRbE6vJA9vcMjQQWMmTqnd43pOUeujWKEct8bd0Gls85G6m9Udf\n0X+ysxEmmanA49jXvLgys6wXyQa20zTw1rt1UbJ+3784pCTjnGK4esv50wbq94Ff\niQN+IZMhGQ+SuVNQrH9YZY/xfeCM/btF/xWkccaGy8DYn7/6B7QNSfxYiCBZIrW9\nEeL6Z7DY0ghm+Lp/jcsUa22jGy3Aj23Ai0xsiQaK+B7RnmV5/rPT49JijPA7d55k\nnOXt+5XPd8MGQXor0jfxlLB/UaR/OlNHE4WVCx9VcF0bHWnGofMktdEIK2WGzvB8\nXoDwpKUglamYZg7gEXMrPimqP5uoW/TGv1D+sRGonjFmdfYaSqQqsviGLvuKV7g5\ne+9lu6+vO6qSCB1M3UgPrBCIHgN0NwBm134NMuhG+aMJAD1uLvRpc+CAQJ89D6YO\nb+Z1zUvkEd+BobAHnp9i1bkE+CnqRI8KxtOYdUuf8sGhsY3gXaEZ6tneHXIz9i3K\ncpVGJwzv+c8/6bdJaDAwcuP4jAKzGBY7x/84Nyb6fyGf+Za6FEP6teZ+FXA7SLbn\ncWhFzvNrf3xNn9e+mL0q2/5BumRjVbtlZ6ymA0q0myGp27Os62drNjy4Ou8YBRIY\nHrlb38M8eY/J8vVixNLNsbjH2eYxgvm11rJlSShrUzzzYvTCyZI=\n=hPcQ\n-----END PGP SIGNATURE-----",
        "payload": "tree 1a9ca9d6cf1c98cde3b3b16908a6c93096d74666\nparent febf3a856bcfb8fef2cb4ddcb8d1e0cab8a22580\nauthor Sjors Provoost <sjors@sprovoost.nl> 1556387078 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1564248296 +0200\n\n[rpc] walletcreatefundedpsbt: use wallet default RBF\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "febf3a856bcfb8fef2cb4ddcb8d1e0cab8a22580",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/febf3a856bcfb8fef2cb4ddcb8d1e0cab8a22580",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/febf3a856bcfb8fef2cb4ddcb8d1e0cab8a22580"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 33,
      "deletions": 16
    },
    "files": [
      {
        "sha": "f9e5c436f02cd51261a7f2d5eb683539be52fa5e",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb",
        "patch": "@@ -406,7 +406,11 @@ static UniValue createrawtransaction(const JSONRPCRequest& request)\n         }, true\n     );\n \n-    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], request.params[3]);\n+    bool rbf = false;\n+    if (!request.params[3].isNull()) {\n+        rbf = request.params[3].isTrue();\n+    }\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n \n     return EncodeHexTx(CTransaction(rawTx));\n }\n@@ -1362,7 +1366,11 @@ UniValue createpsbt(const JSONRPCRequest& request)\n         }, true\n     );\n \n-    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], request.params[3]);\n+    bool rbf = false;\n+    if (!request.params[3].isNull()) {\n+        rbf = request.params[3].isTrue();\n+    }\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n \n     // Make a blank psbt\n     PartiallySignedTransaction psbtx;"
      },
      {
        "sha": "55425cca35c02e95a5373b05c0d26ca361867cf5",
        "filename": "src/rpc/rawtransaction_util.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb/src/rpc/rawtransaction_util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb/src/rpc/rawtransaction_util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.cpp?ref=4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb",
        "patch": "@@ -19,7 +19,7 @@\n #include <util/rbf.h>\n #include <util/strencodings.h>\n \n-CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, const UniValue& rbf)\n+CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, bool rbf)\n {\n     if (inputs_in.isNull() || outputs_in.isNull())\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, arguments 1 and 2 must be non-null\");\n@@ -37,8 +37,6 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n         rawTx.nLockTime = nLockTime;\n     }\n \n-    bool rbfOptIn = rbf.isTrue();\n-\n     for (unsigned int idx = 0; idx < inputs.size(); idx++) {\n         const UniValue& input = inputs[idx];\n         const UniValue& o = input.get_obj();\n@@ -53,7 +51,7 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter, vout must be positive\");\n \n         uint32_t nSequence;\n-        if (rbfOptIn) {\n+        if (rbf) {\n             nSequence = MAX_BIP125_RBF_SEQUENCE; /* CTxIn::SEQUENCE_FINAL - 2 */\n         } else if (rawTx.nLockTime) {\n             nSequence = CTxIn::SEQUENCE_FINAL - 1;\n@@ -125,7 +123,7 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n         }\n     }\n \n-    if (!rbf.isNull() && rawTx.vin.size() > 0 && rbfOptIn != SignalsOptInRBF(CTransaction(rawTx))) {\n+    if (rbf && rawTx.vin.size() > 0 && !SignalsOptInRBF(CTransaction(rawTx))) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter combination: Sequence number(s) contradict replaceable option\");\n     }\n "
      },
      {
        "sha": "c85593e71e88fdaf775b0467ddd12bd672c08d00",
        "filename": "src/rpc/rawtransaction_util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb/src/rpc/rawtransaction_util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb/src/rpc/rawtransaction_util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.h?ref=4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb",
        "patch": "@@ -27,6 +27,6 @@ class COutPoint;\n UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxs, FillableSigningProvider* keystore, std::map<COutPoint, Coin>& coins, bool tempKeystore, const UniValue& hashType);\n \n /** Create a transaction from univalue parameters */\n-CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, const UniValue& rbf);\n+CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniValue& outputs_in, const UniValue& locktime, bool rbf);\n \n #endif // BITCOIN_RPC_RAWTRANSACTION_UTIL_H"
      },
      {
        "sha": "7c78d485b8b779cd578683bda149122b8b983267",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb",
        "patch": "@@ -4055,7 +4055,7 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n                                     {\"vout_index\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED, \"The zero-based output index, before a change output is added.\"},\n                                 },\n                             },\n-                            {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"false\", \"Marks this transaction as BIP125 replaceable.\\n\"\n+                            {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Marks this transaction as BIP125 replaceable.\\n\"\n                             \"                              Allows this transaction to be replaced by a transaction with higher fees\"},\n                             {\"conf_target\", RPCArg::Type::NUM, /* default */ \"Fallback to wallet's confirmation target\", \"Confirmation target (in blocks)\"},\n                             {\"estimate_mode\", RPCArg::Type::STR, /* default */ \"UNSET\", \"The fee estimate mode, must be one of:\\n\"\n@@ -4090,7 +4090,13 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n \n     CAmount fee;\n     int change_position;\n-    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], request.params[3][\"replaceable\"]);\n+    bool rbf = pwallet->m_signal_rbf;\n+    const UniValue &replaceable_arg = request.params[3][\"replaceable\"];\n+    if (!replaceable_arg.isNull()) {\n+        RPCTypeCheckArgument(replaceable_arg, UniValue::VBOOL);\n+        rbf = replaceable_arg.isTrue();\n+    }\n+    CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], rbf);\n     FundTransaction(pwallet, rawTx, fee, change_position, request.params[3]);\n \n     // Make a blank psbt"
      },
      {
        "sha": "6efb415c5437b2ebaa499e7f87e1c8720d0436ac",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb",
        "patch": "@@ -27,6 +27,11 @@ class PSBTTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = False\n         self.num_nodes = 3\n+        self.extra_args = [\n+            [\"-walletrbf=1\"],\n+            [],\n+            []\n+        ]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n@@ -207,26 +212,26 @@ def run_test(self):\n         # replaceable arg\n         block_height = self.nodes[0].getblockcount()\n         unspent = self.nodes[0].listunspent()[0]\n-        psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height+2, {\"replaceable\":True}, False)\n+        psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height+2, {\"replaceable\": False}, False)\n         decoded_psbt = self.nodes[0].decodepsbt(psbtx_info[\"psbt\"])\n         for tx_in, psbt_in in zip(decoded_psbt[\"tx\"][\"vin\"], decoded_psbt[\"inputs\"]):\n-            assert_equal(tx_in[\"sequence\"], MAX_BIP125_RBF_SEQUENCE)\n+            assert tx_in[\"sequence\"] > MAX_BIP125_RBF_SEQUENCE\n             assert \"bip32_derivs\" not in psbt_in\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], block_height+2)\n \n-        # Same construction with only locktime set\n-        psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height, {}, True)\n+        # Same construction with only locktime set and RBF explicitly enabled\n+        psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height, {\"replaceable\": True}, True)\n         decoded_psbt = self.nodes[0].decodepsbt(psbtx_info[\"psbt\"])\n         for tx_in, psbt_in in zip(decoded_psbt[\"tx\"][\"vin\"], decoded_psbt[\"inputs\"]):\n-            assert tx_in[\"sequence\"] > MAX_BIP125_RBF_SEQUENCE\n+            assert_equal(tx_in[\"sequence\"], MAX_BIP125_RBF_SEQUENCE)\n             assert \"bip32_derivs\" in psbt_in\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], block_height)\n \n         # Same construction without optional arguments\n         psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}])\n         decoded_psbt = self.nodes[0].decodepsbt(psbtx_info[\"psbt\"])\n         for tx_in in decoded_psbt[\"tx\"][\"vin\"]:\n-            assert tx_in[\"sequence\"] > MAX_BIP125_RBF_SEQUENCE\n+            assert_equal(tx_in[\"sequence\"], MAX_BIP125_RBF_SEQUENCE)\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], 0)\n \n         # Make sure change address wallet does not have P2SH innerscript access to results in success"
      }
    ]
  },
  {
    "sha": "9ed062b5685eb6227d694572cb0f7bfbcc151b36",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZWQwNjJiNTY4NWViNjIyN2Q2OTQ1NzJjYjBmN2JmYmNjMTUxYjM2",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-05-12T13:42:15Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-07-27T17:28:39Z"
      },
      "message": "[doc] rpc: remove \"fallback to\" from RBF default help",
      "tree": {
        "sha": "ed3604f1781f958d0268744869a4558507f4b9b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed3604f1781f958d0268744869a4558507f4b9b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ed062b5685eb6227d694572cb0f7bfbcc151b36",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl08iccACgkQV/+b28ww\nEAnzOhAAk94bFB+6HfwFrqJ5I4HOmp0QZabxZFi+pdy2reU0szg33wtCOJ9fcjBW\nhOZPRFBmkDKfSlv+LWO9XyJxEqnhp2Zked6dosGro1VSHZ4wQIVjHGmngbDJi7m1\nKB/CFhkpDcd9rUPfwEfFKPhFiBHbgTbi53DEMAc2YfRRaU/Ft+EgSIuM67alQShN\nBo8zezF4YnoUhxcS3OxMJALKZAYfjdf3kPcL4GaxinSgcxDRmgmqT+x9zz2HFYPC\nWhR4H/rBb0odJrosE3QEifZfX97LXXhWKmdRhE/xnySkeLqcpSsjqQxY8a4kKp9f\nYq+Zb6IwbFcP6vJJs7fNkl8h+uq8qliTNZxKbykkNHsUN+3SljucpmNG/1yqmSbO\nc1ENFVYTqS0SkiKfy0WXYZalh9fsyRAquXuDKMlRuFVdMi0R/lMnTOc2C2ooCxN0\ng5K4HKNy/jZudGUhmyMKV2kYkkQEBd0EAs3sJfYGeeIsl0IoeJNClbJ88KMdgYea\nzj14Oo5QL5geih5krTipVUbig6qLI0Eo/IadttrHtpnr8h2Wpwhosg/JD5j/BOeS\n5djJ35juAKuaZ+rDlxY0UtGr6sWlLBt4Yqj1F/wrBAJGrq4IOAU/22HZWbEEtJnC\n6nhHcAgO9vfLq2dKu1bYzFYzb7PTFXaX8CSlgWj19CNg1OZBPT8=\n=dmAl\n-----END PGP SIGNATURE-----",
        "payload": "tree ed3604f1781f958d0268744869a4558507f4b9b9\nparent 4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb\nauthor Sjors Provoost <sjors@sprovoost.nl> 1557668535 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1564248519 +0200\n\n[doc] rpc: remove \"fallback to\" from RBF default help\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ed062b5685eb6227d694572cb0f7bfbcc151b36",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9ed062b5685eb6227d694572cb0f7bfbcc151b36",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ed062b5685eb6227d694572cb0f7bfbcc151b36/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4fcb698bc2bb74171cd3a14b94f9882d8e19e9fb"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "8978adf1811963fc1b7449b61385053ecb692e45",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ed062b5685eb6227d694572cb0f7bfbcc151b36/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ed062b5685eb6227d694572cb0f7bfbcc151b36/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=9ed062b5685eb6227d694572cb0f7bfbcc151b36",
        "patch": "@@ -359,8 +359,8 @@ static UniValue sendtoaddress(const JSONRPCRequest& request)\n             \"                             transaction, just kept in your wallet.\"},\n                     {\"subtractfeefromamount\", RPCArg::Type::BOOL, /* default */ \"false\", \"The fee will be deducted from the amount being sent.\\n\"\n             \"                             The recipient will receive less bitcoins than you enter in the amount field.\"},\n-                    {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"fallback to wallet's default\", \"Allow this transaction to be replaced by a transaction with higher fees via BIP 125\"},\n-                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"fallback to wallet's default\", \"Confirmation target (in blocks)\"},\n+                    {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Allow this transaction to be replaced by a transaction with higher fees via BIP 125\"},\n+                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet default\", \"Confirmation target (in blocks)\"},\n                     {\"estimate_mode\", RPCArg::Type::STR, /* default */ \"UNSET\", \"The fee estimate mode, must be one of:\\n\"\n             \"       \\\"UNSET\\\"\\n\"\n             \"       \\\"ECONOMICAL\\\"\\n\"\n@@ -815,8 +815,8 @@ static UniValue sendmany(const JSONRPCRequest& request)\n                             {\"address\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"Subtract fee from this address\"},\n                         },\n                     },\n-                    {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"fallback to wallet's default\", \"Allow this transaction to be replaced by a transaction with higher fees via BIP 125\"},\n-                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"fallback to wallet's default\", \"Confirmation target (in blocks)\"},\n+                    {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Allow this transaction to be replaced by a transaction with higher fees via BIP 125\"},\n+                    {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet default\", \"Confirmation target (in blocks)\"},\n                     {\"estimate_mode\", RPCArg::Type::STR, /* default */ \"UNSET\", \"The fee estimate mode, must be one of:\\n\"\n             \"       \\\"UNSET\\\"\\n\"\n             \"       \\\"ECONOMICAL\\\"\\n\"\n@@ -3110,9 +3110,9 @@ static UniValue fundrawtransaction(const JSONRPCRequest& request)\n                                     {\"vout_index\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED, \"The zero-based output index, before a change output is added.\"},\n                                 },\n                             },\n-                            {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"fallback to wallet's default\", \"Marks this transaction as BIP125 replaceable.\\n\"\n+                            {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Marks this transaction as BIP125 replaceable.\\n\"\n                             \"                              Allows this transaction to be replaced by a transaction with higher fees\"},\n-                            {\"conf_target\", RPCArg::Type::NUM, /* default */ \"fallback to wallet's default\", \"Confirmation target (in blocks)\"},\n+                            {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet default\", \"Confirmation target (in blocks)\"},\n                             {\"estimate_mode\", RPCArg::Type::STR, /* default */ \"UNSET\", \"The fee estimate mode, must be one of:\\n\"\n                             \"         \\\"UNSET\\\"\\n\"\n                             \"         \\\"ECONOMICAL\\\"\\n\"\n@@ -3275,7 +3275,7 @@ static UniValue bumpfee(const JSONRPCRequest& request)\n                     {\"txid\", RPCArg::Type::STR_HEX, RPCArg::Optional::NO, \"The txid to be bumped\"},\n                     {\"options\", RPCArg::Type::OBJ, RPCArg::Optional::OMITTED_NAMED_ARG, \"\",\n                         {\n-                            {\"confTarget\", RPCArg::Type::NUM, /* default */ \"fallback to wallet's default\", \"Confirmation target (in blocks)\"},\n+                            {\"confTarget\", RPCArg::Type::NUM, /* default */ \"wallet default\", \"Confirmation target (in blocks)\"},\n                             {\"totalFee\", RPCArg::Type::NUM, /* default */ \"fallback to 'confTarget'\", \"Total fee (NOT feerate) to pay, in satoshis. (DEPRECATED)\\n\"\n             \"                         In rare cases, the actual fee paid might be slightly higher than the specified\\n\"\n             \"                         totalFee if the tx change output has to be removed because it is too close to\\n\""
      }
    ]
  },
  {
    "sha": "d6b3640ac732f6f66a8cb6761084d1beecc8a876",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNmIzNjQwYWM3MzJmNmY2NmE4Y2I2NzYxMDg0ZDFiZWVjYzhhODc2",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-07-27T17:35:07Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-07-27T17:35:07Z"
      },
      "message": "[test] walletcreatefundedpsbt: check RBF is disabled when -walletrbf=0",
      "tree": {
        "sha": "fdd6feb31e77bce90cb357c3070ff10be2383aeb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fdd6feb31e77bce90cb357c3070ff10be2383aeb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6b3640ac732f6f66a8cb6761084d1beecc8a876",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl08i1AACgkQV/+b28ww\nEAlujA/5ASn+yxYuG2X7ccoxbNpXWWoMHD8OIKr20LeN3CilbwWFw8mZhawvLwbm\n+jed/IYa2+dXfJKJ0zPCY1WspcbWOKJPkzstSDi0bts06L7mxgf+DUdVpr75TB6f\nYQXLmCGbR/E6Aqdud2HH3i1hmlAz81hlLyauTWZhqQSaBfUsSwtrAMKiP5qbvSM/\nuD0SLMh2squpWIRTjc/PPtxmJ7MwNMU4tLlSvITSgX6idjULAHZi61B5Ufh+KqGF\nZcMZYKaDuBbKUjMqc2BNih6mhlp2DjFKEoVlYsLIfp1+yMYLzJZiuRDadtVgT83z\nK+oUaJH2KMlphxId2l0MbUTQ7G4WNlf3DIlb9Gcw9v5I3lSk1ndAH/nRZlxG0dGc\nstz2vs7W8WzUMoc/WGpY4z0YQSoe+jtmQYbcIShiF649HXVhD8Nm6OsLqu3ZXF2m\nefz+IOIgcVXJxHOp2yGLVTuS4xaq99NkLyD5WGpkZWYkslPxkVGwfhtqkJm18HAG\nDimvgnVYgMIrEPFAfAOHH3ztcFf/5z4Lk3aQHAgKt+knhQswdd30kxod80i5TlDD\n9Lax03Er1eu5vFGGVi9iC3BkQf2rOHeGoXeYsvvikEsJRtmqaM27Jg+Z/Rh2xIH/\n3T3/3/w9phjhI2ZBvCCvmsse9KIClXSbJbLvzFE4awdrrh6+XKI=\n=yHMF\n-----END PGP SIGNATURE-----",
        "payload": "tree fdd6feb31e77bce90cb357c3070ff10be2383aeb\nparent 9ed062b5685eb6227d694572cb0f7bfbcc151b36\nauthor Sjors Provoost <sjors@sprovoost.nl> 1564248907 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1564248907 +0200\n\n[test] walletcreatefundedpsbt: check RBF is disabled when -walletrbf=0\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6b3640ac732f6f66a8cb6761084d1beecc8a876",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6b3640ac732f6f66a8cb6761084d1beecc8a876",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6b3640ac732f6f66a8cb6761084d1beecc8a876/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ed062b5685eb6227d694572cb0f7bfbcc151b36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ed062b5685eb6227d694572cb0f7bfbcc151b36",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ed062b5685eb6227d694572cb0f7bfbcc151b36"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5a04e0c8d8a9ea6077a1148a58ae28df98af9be6",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6b3640ac732f6f66a8cb6761084d1beecc8a876/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6b3640ac732f6f66a8cb6761084d1beecc8a876/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=d6b3640ac732f6f66a8cb6761084d1beecc8a876",
        "patch": "@@ -29,7 +29,7 @@ def set_test_params(self):\n         self.num_nodes = 3\n         self.extra_args = [\n             [\"-walletrbf=1\"],\n-            [],\n+            [\"-walletrbf=0\"],\n             []\n         ]\n \n@@ -215,7 +215,7 @@ def run_test(self):\n         psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height+2, {\"replaceable\": False}, False)\n         decoded_psbt = self.nodes[0].decodepsbt(psbtx_info[\"psbt\"])\n         for tx_in, psbt_in in zip(decoded_psbt[\"tx\"][\"vin\"], decoded_psbt[\"inputs\"]):\n-            assert tx_in[\"sequence\"] > MAX_BIP125_RBF_SEQUENCE\n+            assert_greater_than(tx_in[\"sequence\"], MAX_BIP125_RBF_SEQUENCE)\n             assert \"bip32_derivs\" not in psbt_in\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], block_height+2)\n \n@@ -234,6 +234,13 @@ def run_test(self):\n             assert_equal(tx_in[\"sequence\"], MAX_BIP125_RBF_SEQUENCE)\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], 0)\n \n+        # Same construction without optional arguments, for a node with -walletrbf=0\n+        unspent1 = self.nodes[1].listunspent()[0]\n+        psbtx_info = self.nodes[1].walletcreatefundedpsbt([{\"txid\":unspent1[\"txid\"], \"vout\":unspent1[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent1[\"amount\"]+1}], block_height)\n+        decoded_psbt = self.nodes[1].decodepsbt(psbtx_info[\"psbt\"])\n+        for tx_in in decoded_psbt[\"tx\"][\"vin\"]:\n+            assert_greater_than(tx_in[\"sequence\"], MAX_BIP125_RBF_SEQUENCE)\n+\n         # Make sure change address wallet does not have P2SH innerscript access to results in success\n         # when attempting BnB coin selection\n         self.nodes[0].walletcreatefundedpsbt([], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}], block_height+2, {\"changeAddress\":self.nodes[1].getnewaddress()}, False)"
      }
    ]
  }
]