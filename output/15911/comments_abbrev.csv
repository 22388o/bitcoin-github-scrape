Sjors,2019-04-27 18:16:30,_(my initial attempt  ddfce96d79809112d8253a8a82cc9bf11c3a1beb used `Optional<Bool>`)_ Given that `wallet->m_signal_rbf` is a `boolean` I think we should just stop treating `replaceable` as an optional parameter. In that case `ConstructTransaction` can take a boolean parameter and be simplified a bit.,https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-487308342,487308342,
DrahtBot,2019-04-27 20:55:09,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16378](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16378.html) ([WIP] The ultimate send RPC by Sjors)\n* [#",https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-487319002,487319002,
MarcoFalke,2019-05-23 19:34:24,utACK 9b1b9cf5632be18f3ad1bf2e10ebd004fceb2368,https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-495355310,495355310,
MarcoFalke,2019-05-25 16:59:11,"@Sjors Please squash the first and third commit, as they don't compile:\n\n```\n  CXX      wallet/libbitcoin_wallet_a-rpcwallet.o\nwallet/rpcwallet.cpp: In function ‘UniValue walletcreatefundedpsbt(const JSONRPCRequest&)’:\nwallet/rpcwallet.cpp:4137:143: error: cannot convert ‘const UniValue’ to ‘bool’\n 4137 |     CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.p",https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-495933095,495933095,
MarcoFalke,2019-06-21 12:20:14,@Sjors ^ :eyes: ,https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-504405602,504405602,
Sjors,2019-06-21 14:28:45,"Soon (TM), sorry for the delay.",https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-504446404,504446404,
Sjors,2019-06-26 00:34:56,Rebased and squashed first and last commit. @MarcoFalke hopefully good to go.,https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-505671683,505671683,
Sjors,2019-06-26 20:07:50,"Fixed the typo. You can see the diff with:\n```sh\nPREV=f847fa9 N=2 && git range-diff `git merge-base --all HEAD $PREV`...$PREV HEAD~$N...HEAD\n```",https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-506025569,506025569,
MarcoFalke,2019-07-18 19:34:33,Moved to 0.18.2,https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-512956441,512956441,
Sjors,2019-07-27 17:40:51,Rebased and addressed nits.,https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-515701496,515701496,
achow101,2019-07-30 20:35:08,Code Review ACK d6b3640ac732f6f66a8cb6761084d1beecc8a876,https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-516585177,516585177,
Sjors,2019-08-01 16:30:50,@MarcoFalke @l2a5b1 @meshcollider can you re-ACK?,https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-517362491,517362491,
l2a5b1,2019-08-02 11:49:25,re-ACK d6b3640,https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-517671495,517671495,
MarcoFalke,2019-08-02 12:50:52,"ACK d6b3640ac732f6f66a8cb6761084d1beecc8a876\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK d6b3640ac732f6f66a8cb6761084d1beecc8a876\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjtHQwAlvgQph2uP/hqvyh4EGclSdMka8jVYUY56nEWpMuESGsZdo+OecyPia",https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-517687914,517687914,
fanquake,2019-08-14 08:20:18,@Sjors Are you interested in backporting this?,https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-521150377,521150377,
Sjors,2019-08-14 11:44:44,@fanquake backporting to 0.18 in #16608,https://github.com/bitcoin/bitcoin/pull/15911#issuecomment-521212524,521212524,
luke-jr,2019-05-01 06:38:40,"""fallback to"" seems unnecessary here.",https://github.com/bitcoin/bitcoin/pull/15911#discussion_r280013263,280013263,src/wallet/rpcwallet.cpp
luke-jr,2019-05-01 06:38:57,Probably ought to throw an error if it's not a boolean here.,https://github.com/bitcoin/bitcoin/pull/15911#discussion_r280013281,280013281,src/wallet/rpcwallet.cpp
MarcoFalke,2019-05-01 13:36:56,"Would need a scripted diff to change that?\n\n```\n$ git grep --count  ""fallback to wallet's default"" \nsrc/wallet/rpcwallet.cpp:7\n",https://github.com/bitcoin/bitcoin/pull/15911#discussion_r280073217,280073217,src/wallet/rpcwallet.cpp
Sjors,2019-05-01 15:42:53,"I used the same wording as elsewhere, so could indeed do a replace-all.",https://github.com/bitcoin/bitcoin/pull/15911#discussion_r280112661,280112661,src/wallet/rpcwallet.cpp
Sjors,2019-05-12 13:50:30,"Done, but not scripted.",https://github.com/bitcoin/bitcoin/pull/15911#discussion_r283137835,283137835,src/wallet/rpcwallet.cpp
Sjors,2019-05-12 13:50:43,Added a check.,https://github.com/bitcoin/bitcoin/pull/15911#discussion_r283137839,283137839,src/wallet/rpcwallet.cpp
meshcollider,2019-06-26 10:57:27,nit: typo in `explictly`,https://github.com/bitcoin/bitcoin/pull/15911#discussion_r297605129,297605129,test/functional/rpc_psbt.py
l2a5b1,2019-07-10 20:06:20,"Will `ConstructTransaction` be moved out of the RPC module?\n\nWithout this change the issue could probably have been addressed with a small update in `walletcreatefundedpsbt`.\n\nIf `ConstructTransaction` stays in the RPC codebase forever then this change has also introduced duplicate code at two call sites for no reason.\n\n ",https://github.com/bitcoin/bitcoin/pull/15911#discussion_r302248543,302248543,src/rpc/rawtransaction_util.cpp
l2a5b1,2019-07-10 20:06:39,"Perhaps test the `walletrbf=0` case `assert tx_in[""sequence""] > MAX_BIP125_RBF_SEQUENCE` on `nodes[1]`?",https://github.com/bitcoin/bitcoin/pull/15911#discussion_r302248637,302248637,test/functional/rpc_psbt.py
Sjors,2019-07-11 09:14:31,"I expect more stuff to be moved out of the RPC over time, but for now this was the simplest fix, also easiest to backport.",https://github.com/bitcoin/bitcoin/pull/15911#discussion_r302441991,302441991,src/rpc/rawtransaction_util.cpp
Sjors,2019-07-11 09:38:07,Added a commit with that test (it shouldn't break existing ACKs),https://github.com/bitcoin/bitcoin/pull/15911#discussion_r302452223,302452223,test/functional/rpc_psbt.py
l2a5b1,2019-07-11 13:40:47,"No need to `zip` here.\n\n```\nfor tx_in in decoded_psbt[""tx""][""vin""]:\n    assert tx_in[""sequence""] > MAX_BIP125_RBF_SEQUENCE\n```",https://github.com/bitcoin/bitcoin/pull/15911#discussion_r302548322,302548322,test/functional/rpc_psbt.py
promag,2019-07-14 22:58:24,"17f0cb0f792883c791954472a3173bf46356ce09\n\nAgree, same as L223 is enough.",https://github.com/bitcoin/bitcoin/pull/15911#discussion_r303265197,303265197,test/functional/rpc_psbt.py
promag,2019-07-14 22:58:53,"17f0cb0f792883c791954472a3173bf46356ce09\n\nUse `assert_greater_than`.",https://github.com/bitcoin/bitcoin/pull/15911#discussion_r303265219,303265219,test/functional/rpc_psbt.py
promag,2019-07-14 23:00:17,"43483889cfa7cb0aa95ba6bb298c9d644e4f21d0\n\nUse `assert_greater_than`.",https://github.com/bitcoin/bitcoin/pull/15911#discussion_r303265271,303265271,test/functional/rpc_psbt.py
