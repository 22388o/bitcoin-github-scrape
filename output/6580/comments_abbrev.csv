laanwj,2015-08-21T08:22:53Z,"Agree on the concept, but this diff is huge. I'd rather postpone it a bit to make sure other pulls don't suffer.\n",https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-133327944,133327944,
jonasschnelli,2015-08-21T08:26:29Z,"Merging this would produce trivial rebases because the change is very simple `s/find_value(<obj>, <key>)/<obj>.findValue(<key>)/`. Even if new code in PRs use `find_value()`, it's very trivial.\n\nBut also no rush in merging this, i can keep this rebased until there is a point in time where not much is going on.\n",https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-133328491,133328491,
jgarzik,2015-08-21T13:42:39Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-133427801,133427801,
dcousens,2015-08-22T02:43:41Z,"utACK, LGTM. \n",https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-133628351,133628351,
jonasschnelli,2015-08-24T11:26:28Z,Removed the `VOBJ` check; only trivial changes now.\n,https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-134158446,134158446,
dcousens,2015-08-24T11:34:37Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-134161692,134161692,
jonasschnelli,2015-09-14T18:33:55Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-140168885,140168885,
dcousens,2015-09-14T21:54:28Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-140216064,140216064,
jonasschnelli,2015-09-24T15:07:25Z,"Rebased.\nThis should be easy to review.\n\nThe function itself is move-only.\n\nThe rest of the code just follows search and replace of `s/find_value(<obj>, <key>)/<obj>.findValue(<key>)`.\n",https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-142956819,142956819,
MarcoFalke,2015-09-25T13:35:59Z,"@jonasschnelli travis complains in case you didn't notice:\n\n```\nhttprpc.cpp: In function ‘void JSONErrorReply(HTTPRequest*, const UniValue&, const UniValue&)’:\n\nhttprpc.cpp:62:43: error: ‘find_value’ was not declared in this scope\n```\n",https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-143225871,143225871,
jonasschnelli,2015-09-25T13:50:11Z,@MarcoFalke: Thanks!\nIt was a rebase issue. Just fixed.\n,https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-143229510,143229510,
jgarzik,2015-10-01T10:06:13Z,"Strongly in favor of this, but due to size of diff, this should go in at a scheduled point when other ""tree stirring"" occurs:\n- right after univalue subtree merge\n- during a lot of libconsensus refactor merges\n  etc.\n",https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-144685593,144685593,
jonasschnelli,2015-10-01T14:46:16Z,This needs to go upstream now. Might come down again when we upgrade UniValue in this repo.\nClosing.\n,https://github.com/bitcoin/bitcoin/pull/6580#issuecomment-144749795,144749795,
dcousens,2015-08-22T02:45:06Z,"This is the only real non-trivial change,  it now defines the behaviour more specifically for non-`VOBJ`.\nWouldn't this have worked already as `keys` would be empty?\n",https://github.com/bitcoin/bitcoin/pull/6580#discussion_r37691536,37691536,src/univalue/univalue.cpp
jonasschnelli,2015-08-23T12:35:39Z,Agreed. This check (`if (typ != VOBJ)`) is not really necessary... \n,https://github.com/bitcoin/bitcoin/pull/6580#discussion_r37705419,37705419,src/univalue/univalue.cpp
laanwj,2015-08-24T10:10:42Z,Is it a bug if this happens? I'd say `findValue` shouldn't be called for non-VOBJ in the first place. This is similar to calling get_bool on a non-VBOOL. So maybe it should also raise a std::runtime_error.\n,https://github.com/bitcoin/bitcoin/pull/6580#discussion_r37736859,37736859,src/univalue/univalue.cpp
laanwj,2015-08-24T10:11:16Z,(but separating this from the trivial change makes sense)\n,https://github.com/bitcoin/bitcoin/pull/6580#discussion_r37736888,37736888,src/univalue/univalue.cpp
dcousens,2015-08-24T10:48:15Z,"I'd say throwing `std::runtime_error` would be fine,  but agreed,  separation from the trivial change should allow for merge.\n",https://github.com/bitcoin/bitcoin/pull/6580#discussion_r37739198,37739198,src/univalue/univalue.cpp
dcousens,2015-08-24T11:34:26Z,is this comment out of date now?\n,https://github.com/bitcoin/bitcoin/pull/6580#discussion_r37742015,37742015,src/univalue/univalue.h
jonasschnelli,2015-08-24T11:39:29Z,I would say this comment is appropriate. The keys vector is only >0 for VOBJ objects.\n,https://github.com/bitcoin/bitcoin/pull/6580#discussion_r37742255,37742255,src/univalue/univalue.h
dcousens,2015-08-24T12:37:23Z,"I feel like the appropriate comment would be `only useful for VOBJ types`,  as technically the function is still ""supported"", and the behaviour is well defined.\nA nit.\n",https://github.com/bitcoin/bitcoin/pull/6580#discussion_r37745905,37745905,src/univalue/univalue.h
