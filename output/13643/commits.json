[
  {
    "sha": "921c372d62149ca91d5abcc92dedd0a95df94648",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MjFjMzcyZDYyMTQ5Y2E5MWQ1YWJjYzkyZGVkZDBhOTVkZjk0NjQ4",
    "commit": {
      "author": {
        "name": "wilsonmeier",
        "email": "wilson.meier@gmail.com",
        "date": "2018-04-27T21:35:56Z"
      },
      "committer": {
        "name": "h4x3rotab",
        "email": "h4x3rotab@gmail.com",
        "date": "2018-07-12T14:09:54Z"
      },
      "message": "Switch to NSIS 3.03 to avoid DLL hijacking\n\nEarly version of NSIS searches its DLL from the same directory of\nthe executable. If a hacker can place some DLL files in the same\ndirectory of the bitcoin installer, the installer will load and\nrun it with admin permission.\n\nGitian is still in trusty. It shipped with NSIS 2.46, which is\nvulnerable to this issue. So in this fix, we instead build the\nlatest NSIS by Gitian.\n\nThanks to @wilson from Bitcoin Gold team for the fix. Borrowed some\ncode from TOR project.\n\nDetails: https://trac.torproject.org/projects/tor/ticket/17895",
      "tree": {
        "sha": "77561a4158c0361e5f2d996f9050cbcbc4aa8879",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77561a4158c0361e5f2d996f9050cbcbc4aa8879"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/921c372d62149ca91d5abcc92dedd0a95df94648",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEAuzX8hq+qItCcMsqOO4S61l7T8AFAltHYToACgkQOO4S61l7\nT8D4Yw//SgMNJIANbWAh6fepc+hHeDks3TV663lavhIEK/DP5lcLIaoN7u2qR/2I\nGJ43eLGicRxAB65dwfusz5G4xIxXBs3m2/buxvA413L2MjXGf4ceE3ODx5KHPl13\nzqmJt03AqXKHNkI0BQJcZb/OMEYSJqwZnNGoU/CnE+iVw/2WBRMpVkH0SOZyVZUQ\nwmxHFnVy53Fi367xEQDJ1/x73tTcMue+IJ2mYEQG4P4zl0IymdVakRpW+P1ZNgrJ\n3eJuk1GBz57Xa/apZ/5NuXhzHLC+WO6zIvl2JfZMmz+GK18rXRBJtuPUp4bhHfNZ\nG8crW3UH65lKVrVxLfodiulTS7Pa7HrWOTFrrtSA49PP4uJVdqGdZ1TEF6XkoYoK\nYejeUdwx8Z+MVPw2pc4bHRsuRKXFugSl7YzFR3lPAG6SBNHPyqjTyL9PQHy7a3cz\noIL75MZc+gNM4E4XGNu9eKNyl6D/O70/ikydQOihWpvVhMpDEydWcTJ4dTygg/qN\nLNsh7j7wnk+S9CtO2WBrDTQ9l7GkhiqBTc63KToQqLewyfsSvHkTMCK6J1nSiLj8\nxubmDU6ytnvvAOEku7BGVkAZG+GouuMIeZ3mpqp77W5Y/zNvH4coUUwN+MaU9ZVR\nfOwakW84tSHD8+St0L15QF72qn9BxT0sYUN3NeVEG+zrxqxMfx8=\n=feTM\n-----END PGP SIGNATURE-----",
        "payload": "tree 77561a4158c0361e5f2d996f9050cbcbc4aa8879\nparent fad42e8c4a9d625146f82bab9a038d945d40ac4f\nauthor wilsonmeier <wilson.meier@gmail.com> 1524864956 +0200\ncommitter h4x3rotab <h4x3rotab@gmail.com> 1531404594 +0800\n\nSwitch to NSIS 3.03 to avoid DLL hijacking\n\nEarly version of NSIS searches its DLL from the same directory of\nthe executable. If a hacker can place some DLL files in the same\ndirectory of the bitcoin installer, the installer will load and\nrun it with admin permission.\n\nGitian is still in trusty. It shipped with NSIS 2.46, which is\nvulnerable to this issue. So in this fix, we instead build the\nlatest NSIS by Gitian.\n\nThanks to @wilson from Bitcoin Gold team for the fix. Borrowed some\ncode from TOR project.\n\nDetails: https://trac.torproject.org/projects/tor/ticket/17895\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/921c372d62149ca91d5abcc92dedd0a95df94648",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/921c372d62149ca91d5abcc92dedd0a95df94648",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/921c372d62149ca91d5abcc92dedd0a95df94648/comments",
    "author": {
      "login": "wilsonmeier",
      "id": 4547688,
      "node_id": "MDQ6VXNlcjQ1NDc2ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4547688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilsonmeier",
      "html_url": "https://github.com/wilsonmeier",
      "followers_url": "https://api.github.com/users/wilsonmeier/followers",
      "following_url": "https://api.github.com/users/wilsonmeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilsonmeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilsonmeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilsonmeier/subscriptions",
      "organizations_url": "https://api.github.com/users/wilsonmeier/orgs",
      "repos_url": "https://api.github.com/users/wilsonmeier/repos",
      "events_url": "https://api.github.com/users/wilsonmeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilsonmeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "h4x3rotab",
      "id": 1343470,
      "node_id": "MDQ6VXNlcjEzNDM0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1343470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h4x3rotab",
      "html_url": "https://github.com/h4x3rotab",
      "followers_url": "https://api.github.com/users/h4x3rotab/followers",
      "following_url": "https://api.github.com/users/h4x3rotab/following{/other_user}",
      "gists_url": "https://api.github.com/users/h4x3rotab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h4x3rotab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h4x3rotab/subscriptions",
      "organizations_url": "https://api.github.com/users/h4x3rotab/orgs",
      "repos_url": "https://api.github.com/users/h4x3rotab/repos",
      "events_url": "https://api.github.com/users/h4x3rotab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h4x3rotab/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad42e8c4a9d625146f82bab9a038d945d40ac4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad42e8c4a9d625146f82bab9a038d945d40ac4f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad42e8c4a9d625146f82bab9a038d945d40ac4f"
      }
    ],
    "stats": {
      "total": 496,
      "additions": 308,
      "deletions": 188
    },
    "files": [
      {
        "sha": "f2a3ad7e9531631095c7b1bd7e37dca7a5380120",
        "filename": "contrib/gitian-build.sh",
        "status": "modified",
        "additions": 204,
        "deletions": 186,
        "changes": 390,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/921c372d62149ca91d5abcc92dedd0a95df94648/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/921c372d62149ca91d5abcc92dedd0a95df94648/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=921c372d62149ca91d5abcc92dedd0a95df94648",
        "patch": "@@ -36,123 +36,123 @@ Run this script from the directory containing the bitcoin, gitian-builder, gitia\n \n Arguments:\n signer          GPG signer to sign each build assert file\n-version\t\tVersion number, commit, or branch to build. If building a commit or branch, the -c option must be specified\n+version        Version number, commit, or branch to build. If building a commit or branch, the -c option must be specified\n \n Options:\n--c|--commit\tIndicate that the version argument is for a commit or branch\n--u|--url\tSpecify the URL of the repository. Default is https://github.com/bitcoin/bitcoin\n--v|--verify \tVerify the Gitian build\n--b|--build\tDo a Gitian build\n--s|--sign\tMake signed binaries for Windows and Mac OSX\n--B|--buildsign\tBuild both signed and unsigned binaries\n--o|--os\t\tSpecify which Operating Systems the build is for. Default is lwx. l for linux, w for windows, x for osx\n--j\t\tNumber of processes to use. Default 2\n--m\t\tMemory to allocate in MiB. Default 2000\n+-c|--commit     Indicate that the version argument is for a commit or branch\n+-u|--url        Specify the URL of the repository. Default is https://github.com/bitcoin/bitcoin\n+-v|--verify     Verify the Gitian build\n+-b|--build      Do a Gitian build\n+-s|--sign       Make signed binaries for Windows and Mac OSX\n+-B|--buildsign  Build both signed and unsigned binaries\n+-o|--os         Specify which Operating Systems the build is for. Default is lwx. l for linux, w for windows, x for osx\n+-j        Number of processes to use. Default 2\n+-m        Memory to allocate in MiB. Default 2000\n --kvm           Use KVM instead of LXC\n --setup         Set up the Gitian building environment. Uses LXC. If you want to use KVM, use the --kvm option. Only works on Debian-based systems (Ubuntu, Debian)\n --detach-sign   Create the assert file for detached signing. Will not commit anything.\n --no-commit     Do not commit anything to git\n--h|--help\tPrint this help message\n+-h|--help       Print this help message\n EOF\n \n # Get options and arguments\n while :; do\n     case $1 in\n         # Verify\n         -v|--verify)\n-\t    verify=true\n+        verify=true\n             ;;\n         # Build\n         -b|--build)\n-\t    build=true\n+        build=true\n             ;;\n         # Sign binaries\n         -s|--sign)\n-\t    sign=true\n+        sign=true\n             ;;\n         # Build then Sign\n         -B|--buildsign)\n-\t    sign=true\n-\t    build=true\n+        sign=true\n+        build=true\n             ;;\n         # PGP Signer\n         -S|--signer)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tSIGNER=\"$2\"\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"--signer\" requires a non-empty argument.'\n-\t\texit 1\n-\t    fi\n+        if [ -n \"$2\" ]\n+        then\n+        SIGNER=\"$2\"\n+        shift\n+        else\n+        echo 'Error: \"--signer\" requires a non-empty argument.'\n+        exit 1\n+        fi\n            ;;\n         # Operating Systems\n         -o|--os)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tlinux=false\n-\t\twindows=false\n-\t\tosx=false\n-\t\tif [[ \"$2\" = *\"l\"* ]]\n-\t\tthen\n-\t\t    linux=true\n-\t\tfi\n-\t\tif [[ \"$2\" = *\"w\"* ]]\n-\t\tthen\n-\t\t    windows=true\n-\t\tfi\n-\t\tif [[ \"$2\" = *\"x\"* ]]\n-\t\tthen\n-\t\t    osx=true\n-\t\tfi\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"--os\" requires an argument containing an l (for linux), w (for windows), or x (for Mac OSX)'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# Help message\n-\t-h|--help)\n-\t    echo \"$usage\"\n-\t    exit 0\n-\t    ;;\n-\t# Commit or branch\n-\t-c|--commit)\n-\t    commit=true\n-\t    ;;\n-\t# Number of Processes\n-\t-j)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tproc=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-j\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# Memory to allocate\n-\t-m)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\tmem=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-m\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n-\t# URL\n-\t-u)\n-\t    if [ -n \"$2\" ]\n-\t    then\n-\t\turl=$2\n-\t\tshift\n-\t    else\n-\t\techo 'Error: \"-u\" requires an argument'\n-\t\texit 1\n-\t    fi\n-\t    ;;\n+        if [ -n \"$2\" ]\n+        then\n+        linux=false\n+        windows=false\n+        osx=false\n+        if [[ \"$2\" = *\"l\"* ]]\n+        then\n+            linux=true\n+        fi\n+        if [[ \"$2\" = *\"w\"* ]]\n+        then\n+            windows=true\n+        fi\n+        if [[ \"$2\" = *\"x\"* ]]\n+        then\n+            osx=true\n+        fi\n+        shift\n+        else\n+        echo 'Error: \"--os\" requires an argument containing an l (for linux), w (for windows), or x (for Mac OSX)'\n+        exit 1\n+        fi\n+        ;;\n+    # Help message\n+    -h|--help)\n+        echo \"$usage\"\n+        exit 0\n+        ;;\n+    # Commit or branch\n+    -c|--commit)\n+        commit=true\n+        ;;\n+    # Number of Processes\n+    -j)\n+        if [ -n \"$2\" ]\n+        then\n+        proc=$2\n+        shift\n+        else\n+        echo 'Error: \"-j\" requires an argument'\n+        exit 1\n+        fi\n+        ;;\n+    # Memory to allocate\n+    -m)\n+        if [ -n \"$2\" ]\n+        then\n+        mem=$2\n+        shift\n+        else\n+        echo 'Error: \"-m\" requires an argument'\n+        exit 1\n+        fi\n+        ;;\n+    # URL\n+    -u)\n+        if [ -n \"$2\" ]\n+        then\n+        url=$2\n+        shift\n+        else\n+        echo 'Error: \"-u\" requires an argument'\n+        exit 1\n+        fi\n+        ;;\n         # kvm\n         --kvm)\n             lxc=false\n@@ -170,7 +170,7 @@ while :; do\n         --setup)\n             setup=true\n             ;;\n-\t*)               # Default case: If no more options then break out of the loop.\n+    *)               # Default case: If no more options then break out of the loop.\n              break\n     esac\n     shift\n@@ -223,7 +223,7 @@ fi\n # Add a \"v\" if no -c\n if [[ $commit = false ]]\n then\n-\tCOMMIT=\"v${VERSION}\"\n+    COMMIT=\"v${VERSION}\"\n fi\n echo ${COMMIT}\n \n@@ -254,56 +254,74 @@ popd\n # Build\n if [[ $build = true ]]\n then\n-\t# Make output folder\n-\tmkdir -p ./bitcoin-binaries/${VERSION}\n-\t\n-\t# Build Dependencies\n-\techo \"\"\n-\techo \"Building Dependencies\"\n-\techo \"\"\n-\tpushd ./gitian-builder\t\n-\tmkdir -p inputs\n-\twget -N -P inputs $osslPatchUrl\n-\twget -N -P inputs $osslTarUrl\n-\tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n+    # Make output folder\n+    mkdir -p ./bitcoin-binaries/${VERSION}\n+    \n+    # Build Dependencies\n+    echo \"\"\n+    echo \"Building Dependencies\"\n+    echo \"\"\n+    pushd ./gitian-builder    \n+    mkdir -p inputs\n+    wget -N -P inputs $osslPatchUrl\n+    wget -N -P inputs $osslTarUrl\n+    make -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n \n-\t# Linux\n-\tif [[ $linux = true ]]\n-\tthen\n+    # Linux\n+    if [[ $linux = true ]]\n+    then\n+        echo \"\"\n+        echo \"Compiling ${VERSION} Linux\"\n+        echo \"\"\n+        ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+        ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+        mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/${VERSION}\n+    fi\n+    # Windows\n+    if [[ $windows = true ]]\n+    then\n+        if [ ! -f inputs/nsis-win32-utils.zip ];\n+        then\n+            echo \"\"\n+            echo \"Starting Utilities build for Windows\"\n             echo \"\"\n-\t    echo \"Compiling ${VERSION} Linux\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Windows\n-\tif [[ $windows = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Compiling ${VERSION} Windows\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Mac OSX\n-\tif [[ $osx = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Compiling ${VERSION} Mac OSX\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../bitcoin-binaries/${VERSION}\n-\tfi\n-\tpopd\n+            ./bin/gbuild -j ${proc} -m ${mem} --allow-sudo ../bitcoin/contrib/gitian-descriptors/gitian-win-utils.yml\n+            if [ $? -ne 0 ];\n+            then\n+                echo \"\"\n+                echo \"FAILED to build Utilities for Windows\"\n+                echo \"\"\n+                exit 1\n+            fi\n+            pushd inputs\n+            cp -a ../build/out/*-utils.zip .\n+            mv nsis-*-win32-utils.zip nsis-win32-utils.zip\n+            popd ..\n+        fi\n+        echo \"\"\n+        echo \"Compiling ${VERSION} Windows\"\n+        echo \"\"\n+        ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+        ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+        mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n+        mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../bitcoin-binaries/${VERSION}\n+    fi\n+    # Mac OSX\n+    if [[ $osx = true ]]\n+    then\n+        echo \"\"\n+        echo \"Compiling ${VERSION} Mac OSX\"\n+        echo \"\"\n+        ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+        ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+        mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n+        mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../bitcoin-binaries/${VERSION}\n+    fi\n+    popd\n \n         if [[ $commitFiles = true ]]\n         then\n-\t    # Commit to gitian.sigs repo\n+        # Commit to gitian.sigs repo\n             echo \"\"\n             echo \"Committing ${VERSION} Unsigned Sigs\"\n             echo \"\"\n@@ -319,62 +337,62 @@ fi\n # Verify the build\n if [[ $verify = true ]]\n then\n-\t# Linux\n-\tpushd ./gitian-builder\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Linux\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t# Windows\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Windows\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t# Mac OSX\t\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Mac OSX\"\n-\techo \"\"\t\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t# Signed Windows\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Signed Windows\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t# Signed Mac OSX\n-\techo \"\"\n-\techo \"Verifying v${VERSION} Signed Mac OSX\"\n-\techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\t\n-\tpopd\n+    # Linux\n+    pushd ./gitian-builder\n+    echo \"\"\n+    echo \"Verifying v${VERSION} Linux\"\n+    echo \"\"\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+    # Windows\n+    echo \"\"\n+    echo \"Verifying v${VERSION} Windows\"\n+    echo \"\"\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+    # Mac OSX    \n+    echo \"\"\n+    echo \"Verifying v${VERSION} Mac OSX\"\n+    echo \"\"    \n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+    # Signed Windows\n+    echo \"\"\n+    echo \"Verifying v${VERSION} Signed Windows\"\n+    echo \"\"\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    # Signed Mac OSX\n+    echo \"\"\n+    echo \"Verifying v${VERSION} Signed Mac OSX\"\n+    echo \"\"\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml    \n+    popd\n fi\n \n # Sign binaries\n if [[ $sign = true ]]\n then\n-\t\n+    \n         pushd ./gitian-builder\n-\t# Sign Windows\n-\tif [[ $windows = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Signing ${VERSION} Windows\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/${VERSION}\n-\t    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-binaries/${VERSION}\n-\tfi\n-\t# Sign Mac OSX\n-\tif [[ $osx = true ]]\n-\tthen\n-\t    echo \"\"\n-\t    echo \"Signing ${VERSION} Mac OSX\"\n-\t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/${VERSION}/bitcoin-${VERSION}-osx.dmg\n-\tfi\n-\tpopd\n+    # Sign Windows\n+    if [[ $windows = true ]]\n+    then\n+        echo \"\"\n+        echo \"Signing ${VERSION} Windows\"\n+        echo \"\"\n+        ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+        ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+        mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/${VERSION}\n+        mv build/out/bitcoin-*win32-setup.exe ../bitcoin-binaries/${VERSION}\n+    fi\n+    # Sign Mac OSX\n+    if [[ $osx = true ]]\n+    then\n+        echo \"\"\n+        echo \"Signing ${VERSION} Mac OSX\"\n+        echo \"\"\n+        ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+        ./bin/gsign -p \"$signProg\" --signer \"$SIGNER\" --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+        mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/${VERSION}/bitcoin-${VERSION}-osx.dmg\n+    fi\n+    popd\n \n         if [[ $commitFiles = true ]]\n         then"
      },
      {
        "sha": "e934587346726fc080b1f6f07e5dd08d73f92cf1",
        "filename": "contrib/gitian-descriptors/gitian-win-utils.yml",
        "status": "added",
        "additions": 97,
        "deletions": 0,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/921c372d62149ca91d5abcc92dedd0a95df94648/contrib/gitian-descriptors/gitian-win-utils.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/921c372d62149ca91d5abcc92dedd0a95df94648/contrib/gitian-descriptors/gitian-win-utils.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-utils.yml?ref=921c372d62149ca91d5abcc92dedd0a95df94648",
        "patch": "@@ -0,0 +1,97 @@\n+---\n+name: \"utils-windows\"\n+sudo: true\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"libtool\"\n+- \"automake\"\n+- \"libfaketime\"\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"zip\"\n+- \"unzip\"\n+# Needed for compiling nsis.\n+- \"scons\"\n+- \"libcppunit-dev\"\n+- \"zlib1g\"\n+- \"zlib1g-dev\"\n+reference_datetime: \"2016-01-01 00:00:00\"\n+remotes: []\n+files: []\n+script: |\n+  WRAP_DIR=\"$HOME/wrapped\"\n+  INSTDIR=\"$HOME/install\"\n+\n+  NSIS_VER=3.03\n+  NSIS_PACKAGE=nsis-${NSIS_VER}-src.tar.bz2\n+  NSIS_DEBIAN_PACKAGE=nsis_${NSIS_VER}-2.debian.tar.xz\n+  NSIS_HASH=abae7f4488bc6de7a4dd760d5f0e7cd3aad7747d4d7cd85786697c8991695eaa\n+  NSIS_DEBIAN_HASH=b12956c561d7ad2e078561684a8a06c95c583c14c4d904ec93d252e2d2c2d75c\n+  NSIS_URL=http://downloads.sourceforge.net/nsis/${NSIS_PACKAGE}\n+  NSIS_DEBIAN_URL=http://http.debian.net/debian/pool/main/n/nsis/${NSIS_DEBIAN_PACKAGE}\n+\n+  echo \"${REFERENCE_DATETIME}\" | sudo tee --append /etc/faketimerc\n+  echo \"/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1\" | sudo tee --append /etc/ld.so.preload\n+\n+  export GZIP=\"-9n\"\n+  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=`pwd`\n+  mkdir -p ${WRAP_DIR}\n+\n+  get() {\n+    local file=\"$1\"; shift\n+    local url=\"$1\"; shift\n+\n+    if ! wget --no-check-certificate -U \"\" -N \"$url\"; then\n+      echo >&2 \"Error: Cannot download $url\"\n+      mv \"${file}\" \"${file}.DLFAILED\"\n+      exit 1\n+    fi\n+  }\n+\n+  dzip() {\n+    export LC_ALL=C\n+    \n+    ZIPFILE=${1:?}\n+    shift\n+    \n+    if [ -n \"$REFERENCE_DATETIME\" ]; then\n+      find \"$@\" -exec touch --date=\"$REFERENCE_DATETIME\" -- {} +\n+    fi\n+    find \"$@\"   -executable -exec chmod 700 {} +\n+    find \"$@\" ! -executable -exec chmod 600 {} +\n+    find \"$@\" | sort | zip $ZIPOPTS -X -@ \"$ZIPFILE\"\n+  }\n+\n+  for i in NSIS NSIS_DEBIAN\n+  do\n+    URL=\"${i}_URL\"\n+    PACKAGE=\"${i}_PACKAGE\"\n+    get \"${!PACKAGE}\" \"${!URL}\"\n+\n+    HASH=\"${i}_HASH\"\n+    if ! echo \"${!HASH}  ${!PACKAGE}\" | sha256sum -c -; then\n+      echo \"Package hash for ${!PACKAGE} differs from our locally stored sha256!\"\n+      exit 1\n+    fi\n+  done\n+  \n+  get Zlib-1.2.7-win32-x86.zip http://nsis.sourceforge.net/mediawiki/images/c/ca/Zlib-1.2.7-win32-x86.zip\n+  unzip -d Zlib-1.2.7 Zlib-1.2.7-win32-x86.zip\n+\n+  # Building nsis\n+  tar xf $NSIS_PACKAGE\n+  cd nsis-${NSIS_VER}-src\n+  tar xf ../$NSIS_DEBIAN_PACKAGE\n+  scons VERSION=${NSIS_VER} SKIPUTILS='NSIS Menu' XGCC_W32_PREFIX=i686-w64-mingw32- ZLIB_W32=${HOME}/build/Zlib-1.2.7 PREFIX=$INSTDIR/nsis\n+  scons VERSION=${NSIS_VER} SKIPUTILS='NSIS Menu' XGCC_W32_PREFIX=i686-w64-mingw32- ZLIB_W32=${HOME}/build/Zlib-1.2.7 PREFIX=$INSTDIR/nsis install\n+  cd ..\n+\n+  # Grabbing the remaining results\n+  cd $INSTDIR\n+  dzip nsis-$NSIS_VER-win32-utils.zip nsis\n+  cp nsis-$NSIS_VER-win32-utils.zip $OUTDIR/"
      },
      {
        "sha": "c5c6b6f186202465383331691433152b22848745",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/921c372d62149ca91d5abcc92dedd0a95df94648/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/921c372d62149ca91d5abcc92dedd0a95df94648/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=921c372d62149ca91d5abcc92dedd0a95df94648",
        "patch": "@@ -17,14 +17,15 @@ packages:\n - \"bsdmainutils\"\n - \"mingw-w64\"\n - \"g++-mingw-w64\"\n-- \"nsis\"\n - \"zip\"\n+- \"unzip\"\n - \"ca-certificates\"\n - \"python\"\n remotes:\n - \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n   \"dir\": \"bitcoin\"\n-files: []\n+files:\n+- \"nsis-win32-utils.zip\"\n script: |\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"i686-w64-mingw32 x86_64-w64-mingw32\"\n@@ -94,6 +95,10 @@ script: |\n   done\n   }\n \n+  # Extract nsis\n+  unzip -d $HOME/install ${BUILD_DIR}/nsis-win32-utils.zip\n+  export PATH=$HOME/install/nsis/bin:$PATH\n+\n   # Faketime for depends so intermediate results are comparable\n   export PATH_orig=${PATH}\n   create_global_faketime_wrappers \"2000-01-01 12:00:00\""
      }
    ]
  },
  {
    "sha": "59c243fbf03a09eab0a3c64b5057aabf0bff904a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OWMyNDNmYmYwM2EwOWVhYjBhM2M2NGI1MDU3YWFiZjBiZmY5MDRh",
    "commit": {
      "author": {
        "name": "h4x3rotab",
        "email": "h4x3rotab@gmail.com",
        "date": "2018-07-12T14:18:52Z"
      },
      "committer": {
        "name": "h4x3rotab",
        "email": "h4x3rotab@gmail.com",
        "date": "2018-07-12T14:22:46Z"
      },
      "message": "Fix whitespace",
      "tree": {
        "sha": "f780e80cfd7b14ba4b370877125ee50b121a5401",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f780e80cfd7b14ba4b370877125ee50b121a5401"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/59c243fbf03a09eab0a3c64b5057aabf0bff904a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEAuzX8hq+qItCcMsqOO4S61l7T8AFAltHZDcACgkQOO4S61l7\nT8AWtQ//f4HR5crN8TJ8fHqMrpn0TBcDEeTx033grT6ODnyFlY/E19rwauVD2fzw\n6Ldu0TgkABtCwsoKVF138ea4r4CpnHDwnZxtaxVMI7tQTSyijh0mFA3KfG2NDGfL\nCSMZJrcp6LO7H+2ZZt21YYypDRW+u4TvFOAAK/wBSlScmB6QvPw0KkT9b9/fRDFf\nuPR5TfZI4gO63yoxuHAc0HlfOEH5bH+u4M54YHvXTym8LT6z1TSBNcgozjkMxUgl\n9ZZbJ7qdhXpFb1zGGSHcb/l/u2+o6ammZVVbJmpNoeNzhND1te0PKYrPOkEjOzX3\nYme59qI16wpTWwD9V6mKc/tBf4V1FdBB87M2UcHMe4xsHlfcgrOof3TDRq4XMTUk\n3WkFgDZDwWw37wkRaOhzt+EwPM+/wuZZbv62FBzAuAQgOItkxxOn5u/TH/nktkh9\nqLPv7m3P52Ixf0++icXYwQ3QuPwnkc6eEdSD4x8H5DJQx9gjyAREbCF8mhb+I1/n\ncz++LfHU/7han+fx0W/CKM+OcchluhVeE2nRjl0dBvijJbmO8ePoEVB40VurfJlR\naaPt0oTTeSRDOs9dM3nnbAV6NFzwg5zE/rOFsPwpp9cEl632qI4M8SuBRNM8VBwT\n6KGk0VN2z1+roBaAq86qkXJJgwzSCbrwJbMr1HP16iEhjdBtyaQ=\n=BIzD\n-----END PGP SIGNATURE-----",
        "payload": "tree f780e80cfd7b14ba4b370877125ee50b121a5401\nparent 921c372d62149ca91d5abcc92dedd0a95df94648\nauthor h4x3rotab <h4x3rotab@gmail.com> 1531405132 +0800\ncommitter h4x3rotab <h4x3rotab@gmail.com> 1531405366 +0800\n\nFix whitespace\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59c243fbf03a09eab0a3c64b5057aabf0bff904a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/59c243fbf03a09eab0a3c64b5057aabf0bff904a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/59c243fbf03a09eab0a3c64b5057aabf0bff904a/comments",
    "author": {
      "login": "h4x3rotab",
      "id": 1343470,
      "node_id": "MDQ6VXNlcjEzNDM0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1343470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h4x3rotab",
      "html_url": "https://github.com/h4x3rotab",
      "followers_url": "https://api.github.com/users/h4x3rotab/followers",
      "following_url": "https://api.github.com/users/h4x3rotab/following{/other_user}",
      "gists_url": "https://api.github.com/users/h4x3rotab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h4x3rotab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h4x3rotab/subscriptions",
      "organizations_url": "https://api.github.com/users/h4x3rotab/orgs",
      "repos_url": "https://api.github.com/users/h4x3rotab/repos",
      "events_url": "https://api.github.com/users/h4x3rotab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h4x3rotab/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "h4x3rotab",
      "id": 1343470,
      "node_id": "MDQ6VXNlcjEzNDM0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1343470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h4x3rotab",
      "html_url": "https://github.com/h4x3rotab",
      "followers_url": "https://api.github.com/users/h4x3rotab/followers",
      "following_url": "https://api.github.com/users/h4x3rotab/following{/other_user}",
      "gists_url": "https://api.github.com/users/h4x3rotab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h4x3rotab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h4x3rotab/subscriptions",
      "organizations_url": "https://api.github.com/users/h4x3rotab/orgs",
      "repos_url": "https://api.github.com/users/h4x3rotab/repos",
      "events_url": "https://api.github.com/users/h4x3rotab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h4x3rotab/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "921c372d62149ca91d5abcc92dedd0a95df94648",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/921c372d62149ca91d5abcc92dedd0a95df94648",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/921c372d62149ca91d5abcc92dedd0a95df94648"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 11,
      "deletions": 12
    },
    "files": [
      {
        "sha": "c6e9c37573ef1d39432f1e17382a5d3e39dcf038",
        "filename": "contrib/gitian-build.sh",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59c243fbf03a09eab0a3c64b5057aabf0bff904a/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59c243fbf03a09eab0a3c64b5057aabf0bff904a/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=59c243fbf03a09eab0a3c64b5057aabf0bff904a",
        "patch": "@@ -256,12 +256,12 @@ if [[ $build = true ]]\n then\n     # Make output folder\n     mkdir -p ./bitcoin-binaries/${VERSION}\n-    \n+\n     # Build Dependencies\n     echo \"\"\n     echo \"Building Dependencies\"\n     echo \"\"\n-    pushd ./gitian-builder    \n+    pushd ./gitian-builder\n     mkdir -p inputs\n     wget -N -P inputs $osslPatchUrl\n     wget -N -P inputs $osslTarUrl\n@@ -348,10 +348,10 @@ then\n     echo \"Verifying v${VERSION} Windows\"\n     echo \"\"\n     ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    # Mac OSX    \n+    # Mac OSX\n     echo \"\"\n     echo \"Verifying v${VERSION} Mac OSX\"\n-    echo \"\"    \n+    echo \"\"\n     ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n     # Signed Windows\n     echo \"\"\n@@ -362,15 +362,14 @@ then\n     echo \"\"\n     echo \"Verifying v${VERSION} Signed Mac OSX\"\n     echo \"\"\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml    \n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n     popd\n fi\n \n # Sign binaries\n if [[ $sign = true ]]\n then\n-    \n-        pushd ./gitian-builder\n+    pushd ./gitian-builder\n     # Sign Windows\n     if [[ $windows = true ]]\n     then\n@@ -406,4 +405,4 @@ then\n             git commit -a -m \"Add ${VERSION} signed binary sigs for ${SIGNER}\"\n             popd\n         fi\n-fi\n+fi\n\\ No newline at end of file"
      },
      {
        "sha": "ddee0a81607bf0c5cecc0651eabfb11b47e8d1a5",
        "filename": "contrib/gitian-descriptors/gitian-win-utils.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/59c243fbf03a09eab0a3c64b5057aabf0bff904a/contrib/gitian-descriptors/gitian-win-utils.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/59c243fbf03a09eab0a3c64b5057aabf0bff904a/contrib/gitian-descriptors/gitian-win-utils.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-utils.yml?ref=59c243fbf03a09eab0a3c64b5057aabf0bff904a",
        "patch": "@@ -55,10 +55,10 @@ script: |\n \n   dzip() {\n     export LC_ALL=C\n-    \n+\n     ZIPFILE=${1:?}\n     shift\n-    \n+\n     if [ -n \"$REFERENCE_DATETIME\" ]; then\n       find \"$@\" -exec touch --date=\"$REFERENCE_DATETIME\" -- {} +\n     fi\n@@ -79,7 +79,7 @@ script: |\n       exit 1\n     fi\n   done\n-  \n+\n   get Zlib-1.2.7-win32-x86.zip http://nsis.sourceforge.net/mediawiki/images/c/ca/Zlib-1.2.7-win32-x86.zip\n   unzip -d Zlib-1.2.7 Zlib-1.2.7-win32-x86.zip\n \n@@ -94,4 +94,4 @@ script: |\n   # Grabbing the remaining results\n   cd $INSTDIR\n   dzip nsis-$NSIS_VER-win32-utils.zip nsis\n-  cp nsis-$NSIS_VER-win32-utils.zip $OUTDIR/\n+  cp nsis-$NSIS_VER-win32-utils.zip $OUTDIR/\n\\ No newline at end of file"
      }
    ]
  }
]