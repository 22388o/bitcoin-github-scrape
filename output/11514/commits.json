[
  {
    "sha": "2964710164afa87e182daca136dc77046e76a21d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTY0NzEwMTY0YWZhODdlMTgyZGFjYTEzNmRjNzcwNDZlNzZhMjFk",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-10-17T14:02:20Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2017-10-17T14:06:09Z"
      },
      "message": "Iterate and remove nodes without container copy",
      "tree": {
        "sha": "8a042171ebad9b37e1e384463c6a673d39fc5afd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a042171ebad9b37e1e384463c6a673d39fc5afd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2964710164afa87e182daca136dc77046e76a21d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2964710164afa87e182daca136dc77046e76a21d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2964710164afa87e182daca136dc77046e76a21d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2964710164afa87e182daca136dc77046e76a21d/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2c66cea2d18682de1eef544fc3b74a1487a1741c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c66cea2d18682de1eef544fc3b74a1487a1741c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2c66cea2d18682de1eef544fc3b74a1487a1741c"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 11,
      "deletions": 10
    },
    "files": [
      {
        "sha": "d083a647590d17c3d88c9603d02e93d2eeaff616",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2964710164afa87e182daca136dc77046e76a21d/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2964710164afa87e182daca136dc77046e76a21d/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=2964710164afa87e182daca136dc77046e76a21d",
        "patch": "@@ -1154,13 +1154,11 @@ void CConnman::ThreadSocketHandler()\n         {\n             LOCK(cs_vNodes);\n             // Disconnect unused nodes\n-            std::vector<CNode*> vNodesCopy = vNodes;\n-            for (CNode* pnode : vNodesCopy)\n-            {\n-                if (pnode->fDisconnect)\n-                {\n+            for (auto it = vNodes.begin(); it != vNodes.end();) {\n+                CNode* const pnode = *it;\n+                if (pnode->fDisconnect) {\n                     // remove from vNodes\n-                    vNodes.erase(remove(vNodes.begin(), vNodes.end(), pnode), vNodes.end());\n+                    it = vNodes.erase(it);\n \n                     // release outbound grant (if any)\n                     pnode->grantOutbound.Release();\n@@ -1171,14 +1169,15 @@ void CConnman::ThreadSocketHandler()\n                     // hold in disconnected pool until all refs are released\n                     pnode->Release();\n                     vNodesDisconnected.push_back(pnode);\n+                    continue;\n                 }\n+                it++;\n             }\n         }\n         {\n             // Delete disconnected nodes\n-            std::list<CNode*> vNodesDisconnectedCopy = vNodesDisconnected;\n-            for (CNode* pnode : vNodesDisconnectedCopy)\n-            {\n+            for (auto it = vNodesDisconnected.begin(); it != vNodesDisconnected.end();) {\n+                CNode* const pnode = *it;\n                 // wait until threads are done using it\n                 if (pnode->GetRefCount() <= 0) {\n                     bool fDelete = false;\n@@ -1192,10 +1191,12 @@ void CConnman::ThreadSocketHandler()\n                         }\n                     }\n                     if (fDelete) {\n-                        vNodesDisconnected.remove(pnode);\n+                        it = vNodesDisconnected.erase(it);\n                         DeleteNode(pnode);\n+                        continue;\n                     }\n                 }\n+                it++;\n             }\n         }\n         size_t vNodesSize;"
      }
    ]
  }
]