[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513442866",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-513442866",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 513442866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzQ0Mjg2Ng==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-20T06:53:23Z",
    "updated_at": "2020-05-01T15:16:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18699 (wallet: Avoid translating RPC errors by MarcoFalke)\n* #18698 (Make g_chainman internal to validation by MarcoFalke)\n* #18592 (rpc: replace raw pointers with shared_ptrs by brakmic)\n* #18554 (wallet: ensure wallet files are not reused across chains by mrwhythat)\n* #18531 (rpc: Assert that RPCArg names are equal to CRPCCommand ones by MarcoFalke)\n* #18354 (Protect wallet by using shared pointers by bvbfan)\n* #18244 (rpc: fundrawtransaction and walletcreatefundedpsbt respect locks even with manual coin selection by Sjors)\n* #18202 (refactor: consolidate sendmany and sendtoaddress code by Sjors)\n* #16549 ([WIP] UI external signer support (e.g. hardware wallet) by Sjors)\n* #16546 (External signer support - Wallet Box edition by Sjors)\n* #16224 (gui: Bilingual GUI error messages by hebasto)\n* #15719 (Drop Chain::requestMempoolTransactions method by ryanofsky)\n* #14707 ([RPC] Include coinbase transactions in receivedby RPCs by andrewtoth)\n* #14582 (wallet: always do avoid partial spends if fees are within a specified range by kallewoof)\n* #10102 ([experimental] Multiprocess bitcoin by ryanofsky)\n* #9381 (Remove CWalletTx merging logic from AddToWallet by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513442866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513459089",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-513459089",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 513459089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzQ1OTA4OQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-20T11:17:38Z",
    "updated_at": "2019-07-20T11:20:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great work! I'd suggest changing the PR title to something like \"Reverse cs_main, cs_wallet lock order and reduce cs_main locking\" to motivate it better and describe the change.\r\n\r\nThe current title \"Remove Chain::Lock interface\" and starting sentence \"Follow-up in the set of Chain interface refactoring\" make this sound mostly like a refactoring. But this is more of a locking change, and a change to make the wallet more asynchronous and event driven than a refactoring change.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513459089/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513745160",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-513745160",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 513745160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzc0NTE2MA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-22T11:00:58Z",
    "updated_at": "2019-07-22T11:00:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nExcellent work!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513745160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513946565",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-513946565",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 513946565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzk0NjU2NQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-22T20:43:47Z",
    "updated_at": "2019-07-22T20:43:47Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. This might help IBD, because `cs_main` had to be acquired due to the lock order requirement. If it doesn't help IBD, the change will hopefully still speed up the `msghand` thread because the wallets take the main lock less.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513946565/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513963292",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-513963292",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 513963292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzk2MzI5Mg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-22T21:32:58Z",
    "updated_at": "2019-07-22T21:32:58Z",
    "author_association": "MEMBER",
    "body": "Big concept ACK! Thanks @ariard ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/513963292/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514875510",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-514875510",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 514875510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDg3NTUxMA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-25T02:58:15Z",
    "updated_at": "2019-07-25T02:58:15Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, mother of god, not locking `cs_main`!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514875510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552582365",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-552582365",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 552582365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjU4MjM2NQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T19:33:32Z",
    "updated_at": "2019-11-11T19:33:32Z",
    "author_association": "MEMBER",
    "body": "Finally rebased after merge of #15931, PR should be ready for review. \r\n\r\nApart of 3efe38d which use the new `m_last_block_processed_height` to avoid querying the chainstate and introduce some modifications, other commits are pretty straight-forward. It's just taking `cs_main` inside the `Chain` implementation instead of using `Chain::lock`. Lock order is reversed only in last commit f057aed to avoid any deadlock issue.\r\n\r\nIf you still feel PR is hard to review, I can subsplit easily in another PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552582365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552606573",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-552606573",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 552606573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjYwNjU3Mw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T20:41:37Z",
    "updated_at": "2019-11-11T20:41:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Approach ACK. Code changes here are very simple after #15931.\r\n\r\nAll the changes before the last commit f057aedf80d8bd6083c2227e42d4887be4c2933b seem straightforward and don't change behavior other than locking `cs_main` in new places recursively, so all the new locks are no-ops.\r\n\r\nOnly the last commit f057aedf80d8bd6083c2227e42d4887be4c2933b is the big scary change that removes `cs_main` locks all over the wallet, leaving us to hope that remaining locking is sufficient and that stretches of wallet code that used to run under `cs_main` aren't making assumptions about the tip not changing and other wallet threads not running.\r\n\r\n---\r\n\r\nI'll review this PR more closely this week. It might be nice to simplify the PR description now that #15931 is merged. I think the description just basically needs to say that `interfaces::Chain::Lock` is a wrapper around around `cs_main`, and that this PR changes wallet code to not lock and unlock `cs_main` directly anymore, and not keep `cs_main` locked while it locks `cs_wallet` and does other work. Instead, after this PR, wallet code only locks `cs_main` indirectly and intermittently when it needs to look up bits of chain information, and never holds onto `cs_main` while it does other work.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552606573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552613910",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-552613910",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 552613910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjYxMzkxMA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T21:01:13Z",
    "updated_at": "2019-11-11T21:01:13Z",
    "author_association": "MEMBER",
    "body": "Restating my concept ACK. I plan to review this fully soon.\r\n\r\nThanks for rebasing this so quickly",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552613910/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552637188",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-552637188",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 552637188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjYzNzE4OA==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-11T22:03:16Z",
    "updated_at": "2019-11-11T22:03:16Z",
    "author_association": "MEMBER",
    "body": "> Only the last commit f057aed is the big scary change that removes cs_main locks all over the wallet, leaving us to hope that remaining locking is sufficient and that stretches of wallet code that used to run under cs_main aren't making assumptions about the tip not changing and other wallet threads not running.\r\n\r\nMost of the code making assumptions about the tip is confined in the rescan logic, so I think this one should get the focus, you can grep for all methods fetching tip like `getHeight`, `getBlockHeight` `getX` and check no decision is made on return value of 2 different calls of them. Concerning other wallet threads, it should be cover by wallet lock in itself.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/552637188/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557672181",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-557672181",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 557672181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzY3MjE4MQ==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-22T19:56:50Z",
    "updated_at": "2019-11-22T19:56:50Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/557672181/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561713099",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561713099",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561713099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTcxMzA5OQ==",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T16:07:25Z",
    "updated_at": "2019-12-04T16:07:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "When compiling with these changes, I get a new compilation warning related to holding `cs_wallet`:\r\n\r\n```\r\n  CXX      bitcoin_wallet-bitcoin-wallet.o\r\nwallet/wallet.cpp:2528:61: warning: reading variable 'm_last_block_processed_height' requires holding mutex\r\n      'cs_wallet' [-Wthread-safety-analysis]\r\n    txNew.nLockTime = GetLocktimeForNewTransaction(chain(), m_last_block_processed_height);\r\n                                                            ^\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561713099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561725952",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561725952",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561725952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTcyNTk1Mg==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T16:35:46Z",
    "updated_at": "2019-12-04T16:35:46Z",
    "author_association": "MEMBER",
    "body": "@jkczyz, what platform, compiler, and configure flags did you use so I can try to reproduce? My build (Debian, gcc 8.3, --enable-debug, --enable-bench) didn't show that warning. Perhaps I should use clang -c -Wthread-safety.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561725952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561734875",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561734875",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561734875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTczNDg3NQ==",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T16:55:51Z",
    "updated_at": "2019-12-04T16:55:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @jkczyz, what platform, compiler, and configure flags did you use so I can try to reproduce? My build (Debian, gcc 8.3, --enable-debug, --enable-bench) didn't show that warning. Perhaps I should use clang -c -Wthread-safety.\r\n\r\n@jonatack Built on MacOS using clang-1001.0.46.4. No special configuration flags. I performed `make clean && make` at a7aec7ad9 followed by `make` at 24f40fc1a to confirm the warning only appeared at the latter commit. I haven't tried building on my Linux box yet.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561734875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561740382",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561740382",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561740382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTc0MDM4Mg==",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T17:09:03Z",
    "updated_at": "2019-12-04T17:09:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > @jkczyz, what platform, compiler, and configure flags did you use so I can try to reproduce? My build (Debian, gcc 8.3, --enable-debug, --enable-bench) didn't show that warning. Perhaps I should use clang -c -Wthread-safety.\r\n> \r\n> @jonatack Built on MacOS using clang-1001.0.46.4. No special configuration flags. I performed `make clean && make` at [a7aec7a](https://github.com/bitcoin/bitcoin/commit/a7aec7ad97949a82f870c033d8fd8b65d772eacb) followed by `make` at [24f40fc](https://github.com/bitcoin/bitcoin/commit/24f40fc1afa9d25e5032ba4f8d1c0161e81dce3f) to confirm the warning only appeared at the latter commit. I haven't tried building on my Linux box yet.\r\n\r\nConfirmed no warning on Ubuntu:\r\n\r\n```\r\n$ gcc --version\r\ngcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561740382/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561743673",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561743673",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561743673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTc0MzY3Mw==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T17:17:22Z",
    "updated_at": "2019-12-04T17:17:22Z",
    "author_association": "MEMBER",
    "body": "Thanks for reviews,\r\n\r\n@jkczyz it should be good now on df508be, following Russ remark I switchted `GetLocktimeForNewTransaction` to use `m_last_block_processed_height` but without remembering the reason I avoid to do it at first, which was to avoid tweaking lock order issue. I just changed `GetLocktimeForNewTransaction` after lock taking in `CreateTransaction`, it shouldn't change anything.\r\n\r\n>  Can LockAssertion in sync.h be removed? \r\n\r\n@jonatack I would prefer to let it like this. We may need again this thread assertion helper in the future. IIRC clang thread safety detection only works on Mac for now",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561743673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561743874",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561743874",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561743874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTc0Mzg3NA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T17:17:50Z",
    "updated_at": "2019-12-04T17:17:50Z",
    "author_association": "MEMBER",
    "body": "> @jonatack Built on MacOS using clang-1001.0.46.4. No special configuration flags. I performed `make clean && make` at [a7aec7a](https://github.com/bitcoin/bitcoin/commit/a7aec7ad97949a82f870c033d8fd8b65d772eacb) followed by `make` at [24f40fc](https://github.com/bitcoin/bitcoin/commit/24f40fc1afa9d25e5032ba4f8d1c0161e81dce3f) to confirm the warning only appeared at the latter commit. I haven't tried building on my Linux box yet.\r\n\r\n@jkczyz Thanks! Found this warning with Debian/clang version 7.0.1-8:\r\n```\r\n  CXX      libbitcoin_common_a-merkleblock.o\r\nwallet/wallet.cpp:2528:61: warning: reading variable 'm_last_block_processed_height' requires holding mutex 'cs_wallet' [-Wthread-safety-analysis]\r\n    txNew.nLockTime = GetLocktimeForNewTransaction(chain(), m_last_block_processed_height);\r\n                                                            ^\r\n1 warning generated.\r\n```\r\n```\r\n  CC            = /usr/bin/ccache clang\r\n  CFLAGS        = -g -O2\r\n  CPPFLAGS      =  -DDEBUG -DDEBUG_LOCKORDER  -Qunused-arguments\r\n                   -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\r\n  CXX           = /usr/bin/ccache clang++ -std=c++11\r\n  CXXFLAGS      =  -O0 -g3 -ftrapv  -Wstack-protector -fstack-protector-all  -Wall -Wextra\r\n                   -Wformat -Wvla -Wswitch -Wformat-security -Wthread-safety-analysis\r\n                   -Wrange-loop-analysis -Wredundant-decls  -Wno-unused-parameter\r\n                   -Wno-self-assign -Wno-unused-local-typedef -Wno-deprecated-register\r\n                   -Wno-implicit-fallthrough\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561743874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561758337",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561758337",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561758337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTc1ODMzNw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T17:37:31Z",
    "updated_at": "2019-12-04T17:41:56Z",
    "author_association": "MEMBER",
    "body": "> it should be good now on [df508be](https://github.com/bitcoin/bitcoin/commit/df508be1368e72a77b9ad50280a5a1c5d2e983b1)\r\n> \r\n> IIRC clang thread safety detection only works on Mac for now\r\n\r\nYes, rebuilt and the warning is now gone in df508be. As commented just above, I reproduced the warning on 24f40fc with Debian and Clang (passing --enable-debug).\r\n\r\n```\r\n~/projects/bitcoin/bitcoin/src ((HEAD detached at origin/pr/16426))$ bitcoind\r\n2019-12-04T17:41:08Z Bitcoin Core version v0.19.99.0-df508be136 (debug build)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561758337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561758447",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561758447",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561758447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTc1ODQ0Nw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T17:37:48Z",
    "updated_at": "2019-12-04T17:37:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would be interesting to see the impact (if any) on IBD :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561758447/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561812904",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561812904",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561812904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTgxMjkwNA==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T19:54:49Z",
    "updated_at": "2019-12-04T19:54:49Z",
    "author_association": "MEMBER",
    "body": "@jonatack that's a compiler warning and `--enable-debug` is about turning on our deadlock detection with conditional compilation they are not related.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561812904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561841975",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561841975",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561841975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTg0MTk3NQ==",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T21:15:46Z",
    "updated_at": "2019-12-04T21:15:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm getting the warning at df508be on MacOS using clang as before.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561841975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561849240",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561849240",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561849240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTg0OTI0MA==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T21:34:25Z",
    "updated_at": "2019-12-04T21:35:51Z",
    "author_association": "MEMBER",
    "body": "@jkczyz  at 3773b41, add a `AssertLockHeld` in `CreateTransaction` after taking `cs_wallet`, it should avoid clang false positive warning according to documentation \"utility class for indicating to compiler thread analysis that a mutex is locked (when it couldn't be determined otherwise)\"",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561849240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561862498",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561862498",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561862498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTg2MjQ5OA==",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T22:10:56Z",
    "updated_at": "2019-12-04T22:10:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @jkczyz at [3773b41](https://github.com/bitcoin/bitcoin/commit/3773b4159c37db993b9bb7c3f5d7dd7a51a39b09), add a `AssertLockHeld` in `CreateTransaction` after taking `cs_wallet`, it should avoid clang false positive warning according to documentation \"utility class for indicating to compiler thread analysis that a mutex is locked (when it couldn't be determined otherwise)\"\r\n\r\nLooks like I had a problem on my end. I don't get the warning with df508be after all. Sorry about the confusion!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561862498/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561872913",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561872913",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561872913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTg3MjkxMw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T22:40:52Z",
    "updated_at": "2019-12-04T22:40:52Z",
    "author_association": "MEMBER",
    "body": "> @jonatack that's a compiler warning and `--enable-debug` is about turning on our deadlock detection with conditional compilation they are not related.\r\n\r\nThanks. Agreed. Verified locally: warning present on 24f40fc with Debian+Clang without passing --enable-debug.\r\n```\r\n  CC            = /usr/bin/ccache clang\r\n  CFLAGS        = -g -O2\r\n  CPPFLAGS      =   -U_FORTIFY_SOURCE  -D_FORTIFY_SOURCE=2  -Qunused-arguments\r\n                    -DHAVE_BUILD_INFO  -D__STDC_FORMAT_MACROS\r\n  CXX           = /usr/bin/ccache clang++ -std=c++11\r\n  CXXFLAGS      =   -Wstack-protector -fstack-protector-all  -Wall -Wextra -Wformat\r\n                    -Wvla -Wswitch -Wformat-security -Wthread-safety-analysis\r\n                    -Wrange-loop-analysis -Wredundant-decls  -Wno-unused-parameter\r\n                    -Wno-self-assign -Wno-unused-local-typedef -Wno-deprecated-register\r\n                    -Wno-implicit-fallthrough   -g -O2\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561872913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561873798",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561873798",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561873798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTg3Mzc5OA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T22:43:28Z",
    "updated_at": "2019-12-04T22:47:29Z",
    "author_association": "MEMBER",
    "body": "@ariard what changed from df508be to df17e36 to 3773b41?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561873798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561892216",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-561892216",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 561892216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTg5MjIxNg==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-04T23:36:12Z",
    "updated_at": "2019-12-04T23:36:12Z",
    "author_association": "MEMBER",
    "body": "@jonatack Adding the `AssertLockHeld` to be sure to not raise false positive warning from the compiler.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/561892216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562277913",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-562277913",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 562277913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjI3NzkxMw==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-05T19:27:50Z",
    "updated_at": "2019-12-05T19:27:50Z",
    "author_association": "MEMBER",
    "body": "@jonatack src/wallet/wallet.cpp L2553 on head commit. But you should really recompile latest git to get `git range-diff` it changes your life!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562277913/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562281219",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-562281219",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 562281219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjI4MTIxOQ==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-05T19:33:05Z",
    "updated_at": "2019-12-05T19:33:05Z",
    "author_association": "MEMBER",
    "body": "could you update the OP? It's slightly outdated due to dependent PRs being merged",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562281219/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562645739",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-562645739",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 562645739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjY0NTczOQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-06T16:38:32Z",
    "updated_at": "2019-12-06T16:38:32Z",
    "author_association": "MEMBER",
    "body": "OP updated, see also for more context https://bitcoincore.reviews/16426.html",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/562645739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564311349",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-564311349",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 564311349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDMxMTM0OQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-10T23:46:11Z",
    "updated_at": "2019-12-10T23:46:11Z",
    "author_association": "MEMBER",
    "body": "Thanks for review @promag, corrected some nits on f87558b.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/564311349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565148815",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-565148815",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 565148815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTE0ODgxNQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-12T19:25:54Z",
    "updated_at": "2019-12-12T19:25:54Z",
    "author_association": "MEMBER",
    "body": "@practicalswift after a run on bitcoinperf, there is no seen performance change on IBD. It still may be an improvement with a heavy workload on wallet RPCs (but harder to simulate).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/565148815/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/566727654",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-566727654",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 566727654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjcyNzY1NA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-17T20:06:27Z",
    "updated_at": "2019-12-17T20:06:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was reading the review club discussion, and it sounded like there was some confusion about what motivated the PR. I think it would help to simplify the PR description. If I were describing this PR, I would write something like:\r\n\r\n<dl><dd><p>This change is intended to make the bitcoin node and its rpc, network, and gui interfaces more responsive while the wallet is in use. Currently, because the node's <code>cs_main</code> mutex is always locked before the wallet's <code>cs_wallet</code> mutex (to prevent deadlocks), <code>cs_main</code> currently stays locked while the wallet does relatively slow things like creating and listing transactions.</p>\r\n\r\n<p>Switching the lock order so <code>cs_main</code> is acquired after <code>cs_wallet</code> allows <code>cs_main</code> to be only locked intermittently while the wallet is doing slow operations, so the node is not blocked waiting for the wallet.</p></dd></dl>\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/16426#issue-299541584\r\n\r\n> `Chain::Lock` reason was mostly a temporary interface to help separation of Wallet from Node (#10973) without modifying behavior of legacy wallet code relying on chain state. It was a relief of review burden in the aforementioned separation PR, at the cost of keeping synchronicity between Wallet and Node execution.\r\n> \r\n> Caching more state in CWallet (#15931), let us remove the more used calls like `getBlockDepth` and move toward a more asynchronous interface. The current PR 1) move all remaining Chain::Lock methods to simple one and ensure `cs_main` lock is taken inside the interface 2) remove locking of `cs_main` inside any wallet code, which is another asynchronicity gain.\r\n> Lock order has to be swapped atomically at once to avoid potential deadlock issues raised by thread sync verification stuff.\r\n\r\nEspecially now that #15931 is merged, this mostly feels like historical information that doesn't help make the PR description more understandable. I would probably drop these paragraphs from the PR description or maybe move them to footnotes.\r\n\r\n> Some future works which would enhance Chain interface:\r\n> \r\n> * move `ScanForWalletTransactions` and most we can of rescanning logic on the node side,  would let us remove directly methods like `guessVerificationProgress` or `getBlockHeight`, meanwhile relieving of the the hardship of multiple simultaneous rescanning processing\r\n> * split `listsinceblock` into a wallet part and node one, #15931 caching block height in tx, I think that's possible\r\n> * move fee estimation queries to a notification interface and let the wallet cache it, fee estimation being driven by node mempool, wallet should be the consumer\r\n> * obviously remove the RPC specific methods by letting the wallet processing RPC requests without going through the node, need to add `--server`  and `--rpcserver` options\r\n\r\nI'm also not sure so much detail about future todos belongs in the PR description here. I've been trying to keep a list of cleanup todos at the top of src/interfaces/chain.h, so you could definitely merge this list into that list, and keep discussion of followup changes in the PR description more brief and basic.\r\n\r\n> To review the present PR, most of getting right the move is ensuring any `LockAssertion` in `Chain::Lock` method is amended as a `LOCK(cs_main)`. And in final commit, check that any wallet code which was previously locking the chain is now calling a method, enforcing the lock taking job. So far the only exception I found is `handleNotifications`, which should be corrected.\r\n\r\nThis paragraph is helpful and seems useful to keep, except I'm not clear about the `handleNotifications` comment. Would that be addressed by following up to https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355227118?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/566727654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/567145477",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-567145477",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 567145477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzE0NTQ3Nw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-18T18:05:56Z",
    "updated_at": "2019-12-18T18:05:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "A suggestion for other reviewers might be to review last commit first: \"Remove locked_chain from CWallet, its RPCs and tests\" (f87558b49bc63922a70c9ff02c33c0b1ed1f44b1), since this is the commit that actually changes behavior, while other commits are moving and refactoring code.\r\n\r\nNote to Antoine: If it would make it easier to update the PR, I think it'd be fine to squash it into just one or two commits. Personally I'm mostly reviewing this PR by looking at the overall diff, because it's less work to focus on the end result when reviewing parts of the code that are changing more than once.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/567145477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/567284634",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-567284634",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 567284634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzI4NDYzNA==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-19T01:13:54Z",
    "updated_at": "2019-12-19T01:13:54Z",
    "author_association": "MEMBER",
    "body": "Thanks one thousands times @ryanofsky for review and advices. Implemented most of them, including updating OP and tracking TODO in `interfaces/chain.h`. Also squash a bunch of commits, only non-squashed are the ones doing refactor. \r\n\r\nI'm still looking for low-hanging fruits to dry-up the interface like dropping `checkFinalTx` to ease review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/567284634/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570737229",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-570737229",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 570737229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDczNzIyOQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-04T00:20:50Z",
    "updated_at": "2020-01-04T00:21:25Z",
    "author_association": "MEMBER",
    "body": "Updated e4da874. Picked up Russ's last review suggestions/findings, thanks.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570737229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/571897200",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-571897200",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 571897200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTg5NzIwMA==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-08T05:28:53Z",
    "updated_at": "2020-01-08T05:28:53Z",
    "author_association": "MEMBER",
    "body": "Thanks @kallewoof for review, took most of the suggestions on ac05c8b, some of them were already fixed in latter commits anyway, I can squash commits more if it suits more (not my feeling but if it fits reviewers better let's go for it)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/571897200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575771590",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-575771590",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 575771590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTc3MTU5MA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-17T19:53:42Z",
    "updated_at": "2020-01-17T19:53:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "re: https://github.com/bitcoin/bitcoin/pull/16426#pullrequestreview-343566228\r\n\r\n> I think I can break some pieces out of that commit to smaller PRs that remove `Chain::Lock` usages\r\n\r\nI started doing this in draft PR #17954. Will continue to update",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/575771590/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591522854",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-591522854",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 591522854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTUyMjg1NA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-26T16:40:02Z",
    "updated_at": "2020-02-26T16:40:02Z",
    "author_association": "MEMBER",
    "body": "This needs rebase and addressing @ryanofsky's comments.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591522854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592070721",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-592070721",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 592070721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjA3MDcyMQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-27T17:07:28Z",
    "updated_at": "2020-02-27T17:07:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "> This needs rebase and addressing @ryanofsky's comments.\r\n\r\nThis is basically just blocked on #17954.\r\n\r\nAntoine has a rebased version of this PR on top of #17954 and #17443, which both simplify this PR in a working branch https://github.com/bitcoin/bitcoin/compare/master...ariard:2020-02-wallet-standalone\r\n\r\nThe relevant commits in that branch make a smaller version of this PR:\r\n\r\n- 23c478e0515571ef8291a337d9c351d487b059e3 Move getBlockHeight from Chain::Lock interface to simple Chain\r\n- 7a17b679aad171b67426d74b445cec3ac16c0043 Move getBlockHash from Chain::Lock interface to simple Chain\r\n- 08c90335510c95f845c840407058699385abf93c Move multiple methods from Chain::Lock interface to simple Chain\r\n- d2fa1e1ad3bad97436142262964707ab87f395f1 Remove locked_chain from CWallet, its RPCs and tests\r\n\r\n(Later commits on that branch have to do with implementing rescan logic outside of the wallet so it is cleaner and can allow txindex, blockfilterindex, and multiple wallet rescans to all happen in parallel without each wallet and index having to loop and reread the same blocks. The nonwallet parts are in another branch: https://github.com/bitcoin/bitcoin/compare/master...ariard:2019-08-rescan-index-refactor)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592070721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592730559",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-592730559",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 592730559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjczMDU1OQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-28T21:12:23Z",
    "updated_at": "2020-02-28T21:12:23Z",
    "author_association": "MEMBER",
    "body": "@laanwj Thanks for the push-up, we agreed with Russ to get #17954 first, almost of all of his comments are related in way #17954 do it better if rebased on top. Also it would let me remove few commits. Updated PR description. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/592730559/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614174529",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-614174529",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 614174529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDE3NDUyOQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-15T17:28:53Z",
    "updated_at": "2020-04-15T17:28:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ariard, it would be great to rebase this now that #17954 is merged. It should be simpler now, but good to merge early in the release cycle since it changes wallet locking in a big way",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614174529/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614978409",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-614978409",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 614978409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDk3ODQwOQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-17T01:09:01Z",
    "updated_at": "2020-04-17T01:09:19Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky Thanks for the push-up after #17954, it simplifies this PR so much. Let me know if you think I should split/aggregate commits.\r\n\r\nNote, I removed `findPruned` and `findFork` as they were useless after your PR.  ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614978409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/615203738",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-615203738",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 615203738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTIwMzczOA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-17T11:54:44Z",
    "updated_at": "2020-04-17T11:54:44Z",
    "author_association": "MEMBER",
    "body": "https://travis-ci.org/github/bitcoin/bitcoin/jobs/676012190#L7078\r\n\r\n```\r\n2020-04-17T04:31:03.393017Z POTENTIAL DEADLOCK DETECTED\r\n\r\n2020-04-17T04:31:03.393067Z Previous lock order was:\r\n\r\n2020-04-17T04:31:03.393091Z  (1) cs_wallet wallet/wallet.cpp:1667 (in thread )\r\n\r\n2020-04-17T04:31:03.393138Z  (2) cs_main interfaces/chain.cpp:218 (in thread )\r\n\r\n2020-04-17T04:31:03.393211Z Current lock order is:\r\n\r\n2020-04-17T04:31:03.393233Z  (2) ::cs_main wallet/test/wallet_tests.cpp:464 (in thread )\r\n\r\n2020-04-17T04:31:03.393275Z  (1) wallet->cs_wallet wallet/test/wallet_tests.cpp:464 (in thread )\r\n\r\nAssertion failed: detected inconsistent lock order at sync.cpp:124, details in debug log.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/615203738/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/618116319",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-618116319",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 618116319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODExNjMxOQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-23T01:01:09Z",
    "updated_at": "2020-04-23T01:01:09Z",
    "author_association": "MEMBER",
    "body": "Rebased at d6d6632, with some Russ suggestions. Test failure was due to deadlock in test framework introduced by a new `LOCK2` and not cached at last rebae.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/618116319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/618333788",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-618333788",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 618333788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODMzMzc4OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-23T10:56:34Z",
    "updated_at": "2020-04-23T10:56:34Z",
    "author_association": "MEMBER",
    "body": "Tests are still failing",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/618333788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620071947",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-620071947",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 620071947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDA3MTk0Nw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T15:50:42Z",
    "updated_at": "2020-04-27T15:50:42Z",
    "author_association": "MEMBER",
    "body": "needs rebase",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620071947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620095471",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-620095471",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 620095471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDA5NTQ3MQ==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T16:32:22Z",
    "updated_at": "2020-04-27T16:32:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "re-ACK 0716c9cb68de74cd6e3f791dbe2aec103f70e292\r\n\r\nDid another full review of the code and built and ran tests locally.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620095471/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620380397",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-620380397",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 620380397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDM4MDM5Nw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T04:56:05Z",
    "updated_at": "2020-04-28T04:56:05Z",
    "author_association": "MEMBER",
    "body": "Typo in commit 4509c05eab82dda405b4265838a61ed7ca302bf7 message: `chain acces` \u2192 `chain access`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620380397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620405959",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-620405959",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 620405959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDQwNTk1OQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T06:23:52Z",
    "updated_at": "2020-04-28T06:23:52Z",
    "author_association": "MEMBER",
    "body": "Rebased 49ecec4. Thanks a lot @promag @fjahr @kallewoof for reviews! If you can re-ACK there should be no change apart of dropping locks added in `importdescripotrs` in the meanwhile.\r\n\r\n> So loading an old wallet (that needs rescan) still freezes the node until the wallet catches up. Maybe it could try to register as late as possible? Like before the last rescanned block?\r\n\r\nIt's planned in future works, see https://github.com/bitcoin/bitcoin/pull/15719 by Russ. I've also a branch doing it in an alternative way.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620405959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620615847",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-620615847",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 620615847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDYxNTg0Nw==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T13:41:54Z",
    "updated_at": "2020-04-28T13:41:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "re: https://github.com/bitcoin/bitcoin/pull/16426#pullrequestreview-400824121\r\n\r\n> So loading an old wallet (that needs rescan) still freezes the node until the wallet catches up.\r\n\r\n@promag is this comment saying the PR is introducing a new freeze which is not in master, or is this talking about an existing freeze? Either way I think #15719 may address it, but it would be good to know what the exact issue is (steps to reproduce and observed behavior)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620615847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620885747",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-620885747",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 620885747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDg4NTc0Nw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-28T22:21:14Z",
    "updated_at": "2020-04-28T22:21:14Z",
    "author_association": "MEMBER",
    "body": "Finishing up review of Signet PR, I'll try to review this tomorrow @ariard",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620885747/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621265861",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-621265861",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 621265861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTI2NTg2MQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T14:57:09Z",
    "updated_at": "2020-04-29T14:57:09Z",
    "author_association": "MEMBER",
    "body": "Approach ACK 49ecec42ea \ud83d\uded2\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nApproach ACK 49ecec42ea \ud83d\uded2\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUgcNgwAp3x7yEnzet/P74Z6x4BR0H3RIBb2n+oW1iOR8i1kkCEMviMketbAha8S\r\nvziSxJJ45p7uQBEvetTRb3jlErpB6/tNkp7PAEVep204RTpQX03IlIrfVNg6s6Am\r\nI5YF/m3DYJ2HQ5lyiTwk0+mQ5wgOKPYszYHRrxcV+x/qfxTwNN9WZnRp6TbEpiuV\r\ns3B87BMz8olNUCjawcG4Y0jVahetsgH90e2wFUD0I1ERWfktHSNQ9CQaBOVWFU9L\r\nnY1KtYxKE0KHPnctojN1tOeltcUUa5jQB+ezks6FACOKOs53yzG28QXzviiWD5gx\r\nEThUTcn6DB/H4i7Z3QriaYsF7DCECvO+WDaHBZY+kMoCbpP6c3kCkPPD9axv9kZY\r\nkA+gyIlzTqdJ7H2w2s/wsGffjiviYaowXd2R4bEuIqTlAdzt6xy+7hjMCbb5kjou\r\nfB1r8eg3o6O2IM1mbWkZdH0tNK/itkxitMdvOICDk6bPAIk1zlEw6jQKa51hr61l\r\naUnAG1/b\r\n=RG4E\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `9b0f6482a573980d5bcd1e554e17ef16e67861b355c26c79f7accca02eb8219b  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e8929401089b0f6482a573980d5bcd1e554e17ef16e67861b355c26c79f7accca02eb8219bf01074813f231661294df7dcb66f2cc0354908fff01043a0a03a7b18c02dde2c90d64a64432e08f1045ea995b3f008e61eb2e4634c30430083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff010a40f9d28f4d65285d396111c9d5a98f708f1045ea995b3f00844c2cc1bcbfa06050083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010d035d812b3ce46463f6dfa4334d1cfee08f1045ea995b3f008cd71f4c5ab8d33c60083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6df010e7578ce2ae28abe11bb022cbcfce079c08f1045ea995b6f008b7578b9f92b373450083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621265861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621421348",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-621421348",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 621421348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTQyMTM0OA==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T19:40:08Z",
    "updated_at": "2020-04-29T19:40:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re-ACK 49ecec42ea81e9cbf3970416ead79e18863dea87 but agree with https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417374233 and https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417555069 as worthwhile updates before merging.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621421348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621425538",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-621425538",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 621425538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTQyNTUzOA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T19:48:57Z",
    "updated_at": "2020-04-30T12:01:32Z",
    "author_association": "MEMBER",
    "body": "Handy to have #18727 merged in. Concept ACK, agree with @fjahr above, will re-look after rebase.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621425538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621512598",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-621512598",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 621512598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTUxMjU5OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-29T23:00:35Z",
    "updated_at": "2020-04-29T23:00:35Z",
    "author_association": "MEMBER",
    "body": "Tests fail. Needs rebase",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621512598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621658749",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-621658749",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 621658749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTY1ODc0OQ==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T07:18:02Z",
    "updated_at": "2020-04-30T07:18:02Z",
    "author_association": "MEMBER",
    "body": "Re-ACK based on the diff below (derived by rebasing the old commit on master and the git diffing this against the resulting state):\r\n\r\n```diff\r\ndiff --git a/src/interfaces/chain.h b/src/interfaces/chain.h\r\nindex ec256d7b2..e33fe54ac 100644\r\n--- a/src/interfaces/chain.h\r\n+++ b/src/interfaces/chain.h\r\n@@ -72,7 +72,7 @@ public:\r\n //!   wallet cache it, fee estimation being driven by node mempool, wallet\r\n //!   should be the consumer.\r\n //!\r\n-//! * The `guesVerificationProgress`, `getBlockHeight`, `getBlockHash`, etc\r\n+//! * The `guessVerificationProgress`, `getBlockHeight`, `getBlockHash`, etc\r\n //!   methods can go away if rescan logic is moved on the node side, and wallet\r\n //!   only register rescan request.\r\n class Chain\r\ndiff --git a/src/wallet/rpcdump.cpp b/src/wallet/rpcdump.cpp\r\nindex 7e46cb0c9..c863d2253 100644\r\n--- a/src/wallet/rpcdump.cpp\r\n+++ b/src/wallet/rpcdump.cpp\r\n@@ -1664,7 +1664,6 @@ UniValue importdescriptors(const JSONRPCRequest& main_request) {\r\n     bool rescan = false;\r\n     UniValue response(UniValue::VARR);\r\n     {\r\n-        auto locked_chain = pwallet->chain().lock();\r\n         LOCK(pwallet->cs_wallet);\r\n         EnsureWalletIsUnlocked(pwallet);\r\n\r\n@@ -1693,7 +1692,6 @@ UniValue importdescriptors(const JSONRPCRequest& main_request) {\r\n     if (rescan) {\r\n         int64_t scanned_time = pwallet->RescanFromTime(lowest_timestamp, reserver, true /* update */);\r\n         {\r\n-            auto locked_chain = pwallet->chain().lock();\r\n             LOCK(pwallet->cs_wallet);\r\n             pwallet->ReacceptWalletTransactions();\r\n         }\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621658749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621878031",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-621878031",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 621878031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTg3ODAzMQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T14:11:33Z",
    "updated_at": "2020-04-30T14:11:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note: after #18727 the last commit here will cause https://github.com/bitcoin/bitcoin/blob/a66ba6d029b3948dec0cf092bb844f70c16b07dc/src/wallet/test/wallet_tests.cpp#L729 to fail.\r\n\r\nBut I previously posted a version of that test which works with this PR in 25651aad58b1f6e543f1ad565d821de46268e724 ([branch](https://github.com/ryanofsky/bitcoin/commits/review.16426.5-edit)) in https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412461100, so there should be no new code to write if you paste the test code from that commit:\r\n\r\nhttps://github.com/ryanofsky/bitcoin/blob/25651aad58b1f6e543f1ad565d821de46268e724/src/wallet/test/wallet_tests.cpp#L669-L771\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621878031/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621893911",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-621893911",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 621893911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTg5MzkxMQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T14:36:11Z",
    "updated_at": "2020-04-30T14:36:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased 49ecec42ea81e9cbf3970416ead79e18863dea87 -> c524664df16057763eaf2e5805af9bf8975ac3f8 ([`pr/rev.1`](https://github.com/ryanofsky/bitcoin/commits/pr/rev.1) -> [`pr/rev.2`](https://github.com/ryanofsky/bitcoin/commits/pr/rev.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/rev.1-rebase..pr/rev.2)). No conflicts and no changes other than adding back getBlockHash assert to resolve https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417366808 and adding test code which was previously posted https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412461100 so the new test from #18727 passes",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621893911/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621896030",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-621896030",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 621896030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTg5NjAzMA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T14:39:50Z",
    "updated_at": "2020-04-30T14:39:50Z",
    "author_association": "MEMBER",
    "body": "Thanks @ryanofsky ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/621896030/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622043477",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-622043477",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 622043477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjA0MzQ3Nw==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T19:03:38Z",
    "updated_at": "2020-04-30T19:03:38Z",
    "author_association": "MEMBER",
    "body": "Whaao thanks @ryanofsky for rebase! Took your branch at 6a72f26 while fixing @MarcoFalke 's https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417374233.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622043477/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622156632",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-622156632",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 622156632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjE1NjYzMg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T22:43:22Z",
    "updated_at": "2020-04-30T22:43:22Z",
    "author_association": "MEMBER",
    "body": "re-ACK 6a72f26968 \ud83d\udd0f\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nre-ACK 6a72f26968 \ud83d\udd0f\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUhtVAwAprBpnjBnEpN+ACT69Dfo+rp5Gz1Ew6sRxvJr88Zkc/GSfZ9rCTlcrKIH\r\nTXRD5CR4ba8Cj9zQSF4wo/LmlqwqJlgEZnhil5qRi+Cpo/nqJEoJaajmFQBjDOJW\r\n7E68hxIxb9r9YF1G81gx71dLSHwUgx8RZp3POdZXInUigXk+XJJRwIlUckheMgXH\r\nvF+als8TE+Fwv2gNyu03ggEAbNtFBi20yB/xLCApBcI6Ec3HDuj76JjhnqYQEetF\r\nnxowDiw4EfUqwyD/XUek/OKQaXelynRoMhC4Xr+n1DNaWePoNune3qD/AGi2IF0v\r\nVYleEGI01uPSryujDjo+o6HwWliKv7ooYjqSq4MAO387rE+hpVh368hfLqTwaPps\r\nAeH12GMpgeALphIsqKzhd62PdeDUHxApvglj1zUQsuhSukx5ojX8oGNokWfA0slj\r\nE+QKUT67kbM+2/s4kIJC3PLeMd97iYZfSanWrKTByjoecn42xf6hn15dldSsiqGM\r\nKV4l6ZuH\r\n=FnnV\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `e9607093f00416bfc4093550ccd6a4d573cc579bde37edf8d5b8a119a0b88ea9  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108e9607093f00416bfc4093550ccd6a4d573cc579bde37edf8d5b8a119a0b88ea9f010cc7087f2fed326092658ba67a0a8923708fff010478a4de1c9c74ad2fa6cb52f209c0d2e08f1045eab547cf008b35f11db7aa706260083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff01048e3ca588fd3bc1060ce1e166511522c08f1045eab547cf008371ab94985f2aeb20083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff01048e5ac49237812f2fab148658f104d0b08f1045eab547cf008781d4b0444b47c9c0083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6df01053c8d6d5619c7e708373e0243f3b34a508f1045eab547cf008ccdd970ed5951fa40083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6d)\r\n\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622156632/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622162463",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-622162463",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 622162463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjE2MjQ2Mw==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T22:58:16Z",
    "updated_at": "2020-04-30T22:58:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "re-ACK 6a72f26968cf931c985d8d4797b6264274cabd06\r\n\r\nReviewed latest changes, built and ran tests locally.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622162463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622166085",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-622166085",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 622166085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjE2NjA4NQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-30T23:08:36Z",
    "updated_at": "2020-04-30T23:08:36Z",
    "author_association": "MEMBER",
    "body": "There is a stale test on some disk I/O issue, other are valid. If you can relaunch.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622166085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622378297",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-622378297",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 622378297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjM3ODI5Nw==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-01T13:00:07Z",
    "updated_at": "2020-05-01T13:00:07Z",
    "author_association": "MEMBER",
    "body": "Congrats on the merge @ariard! Sorry, I was still reviewing the BIP324 PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622378297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622386121",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-622386121",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 622386121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjM4NjEyMQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-01T13:23:16Z",
    "updated_at": "2020-05-01T13:23:16Z",
    "author_association": "MEMBER",
    "body": "Review still welcome :) \r\n\r\nThis had three explicit ACKs, one implicit re-ACK and a bunch of Concept ACKs. So beside being ready for merge, and also in light of the rebase hell this went through in the past, with the risk of (silent) merge conflicts putting it back in there, I went ahead and merged it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622386121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622395135",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-622395135",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 622395135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjM5NTEzNQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-01T13:46:36Z",
    "updated_at": "2020-05-01T13:46:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Review still welcome :)\r\n\r\nTesting is useful too because all the wallet code that was originally written assuming cs_main was locked and state couldn't change in the background is now in an a more asynchronous world.\r\n\r\nI'm also still curious about @promag's comment in https://github.com/bitcoin/bitcoin/pull/16426#pullrequestreview-400824121 and possible effects on the GUI. (Unclear if the comment is saying there's a new GUI freeze.)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622395135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622538885",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-622538885",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 622538885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjUzODg4NQ==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-01T19:54:02Z",
    "updated_at": "2020-05-01T19:54:02Z",
    "author_association": "MEMBER",
    "body": "All good, I agree!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/622538885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623205314",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-623205314",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 623205314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzIwNTMxNA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-03T23:59:31Z",
    "updated_at": "2020-05-03T23:59:31Z",
    "author_association": "MEMBER",
    "body": "> I'm also still curious about @promag's comment in #16426 (review) and possible effects on the GUI.\r\n\r\n@ryanofsky missed this, AFAICT this doesn't add new issues to the GUI.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/623205314/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695357573",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#issuecomment-695357573",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
    "id": 695357573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTM1NzU3Mw==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-19T21:25:10Z",
    "updated_at": "2020-09-19T21:25:10Z",
    "author_association": "MEMBER",
    "body": "FWIW, this PR causes the issue #19049.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695357573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342719832",
    "pull_request_review_id": 311940772,
    "id": 342719832,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0MjcxOTgzMg==",
    "diff_hunk": "@@ -2274,13 +2252,13 @@ bool CWalletTx::InMempool() const\n     return fInMempool;\n }\n \n-bool CWalletTx::IsTrusted(interfaces::Chain::Lock& locked_chain) const\n+bool CWalletTx::IsTrusted() const\n {\n     // Quick answer in most cases\n-    if (!locked_chain.checkFinalTx(*tx)) {\n+    if (!pwallet->chain().checkFinalTx(*tx)) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 452,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "a052c3748b6551137c4477a87293f231e707578d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Instead of adding an `interfaces::Chain::checkFinalTx` method, it might be better to call [`IsFinalTx`](https://github.com/bitcoin/bitcoin/blob/50591f6ec61b802cf4193cdbefcc85ad75716e8d/src/consensus/tx_verify.cpp#L17-L28) directly with the wallet's height and time, avoiding going through [`CheckFinalTx`](https://github.com/bitcoin/bitcoin/blob/50591f6ec61b802cf4193cdbefcc85ad75716e8d/src/validation.cpp#L189-L219).\r\n\r\nThis could perform better since it wouldn't require locking cs_main, and could make wallet calls return more internally consistent information when the wallet is catching up to the chain.",
    "created_at": "2019-11-05T18:18:14Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r342719832",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342719832"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r342719832"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/342719832/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2258,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/352868751",
    "pull_request_review_id": 325756305,
    "id": 352868751,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Mjg2ODc1MQ==",
    "diff_hunk": "@@ -565,7 +565,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        Optional<int> tip_height = pwallet->chain().getHeight();",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "be2651fd8931b6317bd68e652f58755413abf906",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why use chain height instead of wallet height here and other places? Anywhere the wallet is locked and the chain isn't locked it would seem safer to use the wallet height.",
    "created_at": "2019-12-02T21:31:03Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r352868751",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/352868751"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r352868751"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/352868751/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 559,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353369610",
    "pull_request_review_id": 326383097,
    "id": 353369610,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MzM2OTYxMA==",
    "diff_hunk": "@@ -565,7 +565,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        Optional<int> tip_height = pwallet->chain().getHeight();",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "be2651fd8931b6317bd68e652f58755413abf906",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think I can switch for the one in `CreateTransaction`, all left are tied to the rescan logic which doesn't call `BlockConnected` and so doesn't update `m_last_block_processed` accurately. I can rework a bit the rescan logic to make it work on m_last_block_processed_height but I felt it was a bit of scope and an increased burden for reviewers.\r\n\r\nAs you know I plan to rework the rescan logic after this PR. At term it would remove all `getHeight` callsites`.",
    "created_at": "2019-12-03T19:13:01Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r353369610",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353369610"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r353369610"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353369610/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 559,
    "side": "RIGHT",
    "in_reply_to_id": 352868751
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353376692",
    "pull_request_review_id": 326391993,
    "id": 353376692,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MzM3NjY5Mg==",
    "diff_hunk": "@@ -565,7 +565,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        Optional<int> tip_height = pwallet->chain().getHeight();",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "be2651fd8931b6317bd68e652f58755413abf906",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, chain height seems fine for rescan logic, and is what I'd expect there. I think the other places should use wallet height if there isn't an explicit reason not to.",
    "created_at": "2019-12-03T19:27:13Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r353376692",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353376692"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r353376692"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353376692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 559,
    "side": "RIGHT",
    "in_reply_to_id": 352868751
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353391359",
    "pull_request_review_id": 326409878,
    "id": 353391359,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1MzM5MTM1OQ==",
    "diff_hunk": "@@ -565,7 +565,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        Optional<int> tip_height = pwallet->chain().getHeight();",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "be2651fd8931b6317bd68e652f58755413abf906",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Corrected on 24f40fc, there was only one occurrence in `CreateTransaction`. All others are tied to rescan logic, including ones in `rpcdump`/`rpcwallet`.",
    "created_at": "2019-12-03T19:57:05Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r353391359",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353391359"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r353391359"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/353391359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 559,
    "side": "RIGHT",
    "in_reply_to_id": 352868751
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355223947",
    "pull_request_review_id": 328641294,
    "id": 355223947,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIyMzk0Nw==",
    "diff_hunk": "@@ -3403,16 +3403,14 @@ void CWallet::GetKeyBirthTimes(interfaces::Chain::Lock& locked_chain, std::map<C\n     for (const auto& entry : mapWallet) {\n         // iterate over all wallet transactions...\n         const CWalletTx &wtx = entry.second;\n-        if (Optional<int> height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock)) {\n-            // ... which are already in a block\n-            for (const CTxOut &txout : wtx.tx->vout) {\n-                // iterate over all their outputs\n-                for (const auto &keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n-                    // ... and all their affected keys\n-                    std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n-                    if (rit != mapKeyFirstBlock.end() && *height < rit->second)\n-                        rit->second = *height;\n-                }\n+        // ... which are already in a block",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "b844282ba6539954e6ad9ba899497e28fed60d91",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "b844282ba6539954e6ad9ba899497e28fed60d91\r\n\r\nIMO drop this comment, or adjust and move to L3412.",
    "created_at": "2019-12-08T23:29:58Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355223947",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355223947"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355223947"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355223947/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3406,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355223993",
    "pull_request_review_id": 328641294,
    "id": 355223993,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIyMzk5Mw==",
    "diff_hunk": "@@ -758,6 +758,9 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n     /** Interface to assert chain access and if successful lock it */\n     std::unique_ptr<interfaces::Chain::Lock> LockChain() { return m_chain ? m_chain->lock() : nullptr; }\n \n+    /** Interface to assert chain access */\n+    bool HaveChain() { return m_chain ? true : false; }",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 5,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "b844282ba6539954e6ad9ba899497e28fed60d91",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "b844282ba6539954e6ad9ba899497e28fed60d91\r\n\r\nnit, const?",
    "created_at": "2019-12-08T23:30:44Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355223993",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355223993"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355223993"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355223993/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 762,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355224044",
    "pull_request_review_id": 328641294,
    "id": 355224044,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIyNDA0NA==",
    "diff_hunk": "@@ -3403,16 +3403,14 @@ void CWallet::GetKeyBirthTimes(interfaces::Chain::Lock& locked_chain, std::map<C\n     for (const auto& entry : mapWallet) {\n         // iterate over all wallet transactions...\n         const CWalletTx &wtx = entry.second;\n-        if (Optional<int> height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock)) {\n-            // ... which are already in a block\n-            for (const CTxOut &txout : wtx.tx->vout) {\n-                // iterate over all their outputs\n-                for (const auto &keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n-                    // ... and all their affected keys\n-                    std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n-                    if (rit != mapKeyFirstBlock.end() && *height < rit->second)\n-                        rit->second = *height;\n-                }\n+        // ... which are already in a block\n+        for (const CTxOut& txout : wtx.tx->vout) {\n+            // iterate over all their outputs\n+            for (const auto& keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n+                // ... and all their affected keys\n+                std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n+                if (rit != mapKeyFirstBlock.end() && wtx.m_confirm.block_height < rit->second)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "b844282ba6539954e6ad9ba899497e28fed60d91",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "b844282ba6539954e6ad9ba899497e28fed60d91\r\n\r\nnit, since this line is no longer different add braces?",
    "created_at": "2019-12-08T23:31:37Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355224044",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355224044"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355224044"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355224044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3386,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355224375",
    "pull_request_review_id": 328641294,
    "id": 355224375,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIyNDM3NQ==",
    "diff_hunk": "@@ -2445,13 +2445,14 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nC\n     return true;\n }\n \n-static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, interfaces::Chain::Lock& locked_chain)\n+static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, int block_height)\n {\n     if (chain.isInitialBlockDownload()) {\n         return false;\n     }\n     constexpr int64_t MAX_ANTI_FEE_SNIPING_TIP_AGE = 8 * 60 * 60; // in seconds\n-    if (locked_chain.getBlockTime(*locked_chain.getHeight()) < (GetTime() - MAX_ANTI_FEE_SNIPING_TIP_AGE)) {\n+    auto locked_chain = chain.lock();",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 48,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "e64f0909c66e39896c1e41df77576cccc3001088",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "e64f0909c66e39896c1e41df77576cccc3001088\r\n\r\nnit, I'm aware this goes away later in 6b4d68ec25f024f009efc79b99816fa9ff6d89de but maybe the `interfaces::Chain::Lock& locked_chain` arg should be dropped later instead - so this commit would keep `locked_chain` and just adde `block_height`.",
    "created_at": "2019-12-08T23:36:40Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355224375",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355224375"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355224375"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355224375/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2454,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355227118",
    "pull_request_review_id": 328641294,
    "id": 355227118,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NTIyNzExOA==",
    "diff_hunk": "@@ -344,6 +331,7 @@ class ChainImpl : public Chain\n     }\n     std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n     {\n+        LOCK(::cs_main);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "3773b4159c37db993b9bb7c3f5d7dd7a51a39b09",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "3773b4159c37db993b9bb7c3f5d7dd7a51a39b09\r\n\r\nIs this going to change in a follow up? Maybe add a comment explaining this lock?",
    "created_at": "2019-12-09T00:17:34Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355227118",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355227118"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r355227118"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/355227118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 334,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356336742",
    "pull_request_review_id": 330218377,
    "id": 356336742,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjMzNjc0Mg==",
    "diff_hunk": "@@ -3403,16 +3403,14 @@ void CWallet::GetKeyBirthTimes(interfaces::Chain::Lock& locked_chain, std::map<C\n     for (const auto& entry : mapWallet) {\n         // iterate over all wallet transactions...\n         const CWalletTx &wtx = entry.second;\n-        if (Optional<int> height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock)) {\n-            // ... which are already in a block\n-            for (const CTxOut &txout : wtx.tx->vout) {\n-                // iterate over all their outputs\n-                for (const auto &keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n-                    // ... and all their affected keys\n-                    std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n-                    if (rit != mapKeyFirstBlock.end() && *height < rit->second)\n-                        rit->second = *height;\n-                }\n+        // ... which are already in a block\n+        for (const CTxOut& txout : wtx.tx->vout) {\n+            // iterate over all their outputs\n+            for (const auto& keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n+                // ... and all their affected keys\n+                std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n+                if (rit != mapKeyFirstBlock.end() && wtx.m_confirm.block_height < rit->second)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "b844282ba6539954e6ad9ba899497e28fed60d91",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is this a style requirement? IMO don't find code easier to read doing so.",
    "created_at": "2019-12-10T23:38:52Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356336742",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356336742"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356336742"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356336742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3386,
    "side": "RIGHT",
    "in_reply_to_id": 355224044
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356337755",
    "pull_request_review_id": 330219515,
    "id": 356337755,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjMzNzc1NQ==",
    "diff_hunk": "@@ -2445,13 +2445,14 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nC\n     return true;\n }\n \n-static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, interfaces::Chain::Lock& locked_chain)\n+static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, int block_height)\n {\n     if (chain.isInitialBlockDownload()) {\n         return false;\n     }\n     constexpr int64_t MAX_ANTI_FEE_SNIPING_TIP_AGE = 8 * 60 * 60; // in seconds\n-    if (locked_chain.getBlockTime(*locked_chain.getHeight()) < (GetTime() - MAX_ANTI_FEE_SNIPING_TIP_AGE)) {\n+    auto locked_chain = chain.lock();",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 48,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "e64f0909c66e39896c1e41df77576cccc3001088",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Going to let it like this, one of both commits have to clean it anyway unless adding a temporary one line is really gross..",
    "created_at": "2019-12-10T23:42:15Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356337755",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356337755"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356337755"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356337755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2454,
    "side": "RIGHT",
    "in_reply_to_id": 355224375
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356338388",
    "pull_request_review_id": 330220242,
    "id": 356338388,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NjMzODM4OA==",
    "diff_hunk": "@@ -344,6 +331,7 @@ class ChainImpl : public Chain\n     }\n     std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n     {\n+        LOCK(::cs_main);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "3773b4159c37db993b9bb7c3f5d7dd7a51a39b09",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Adding a comment only for this method would seem obscure compare to other methods for future reviewers after refactoring, that's why it's in commit message \"Lock cs_main in handleNotifications as it was relaying on its caller to do  so before\", or do you have a different opinion ?",
    "created_at": "2019-12-10T23:44:24Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356338388",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356338388"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356338388"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/356338388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 334,
    "side": "RIGHT",
    "in_reply_to_id": 355227118
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357761094",
    "pull_request_review_id": 332022429,
    "id": 357761094,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Nzc2MTA5NA==",
    "diff_hunk": "@@ -56,74 +51,59 @@ class Chain\n public:\n     virtual ~Chain() {}\n \n-    //! Interface for querying locked chain state, used by legacy code that\n-    //! assumes state won't change between calls. New code should avoid using\n-    //! the Lock interface and instead call higher-level Chain methods\n-    //! that return more information so the chain doesn't need to stay locked\n-    //! between calls.\n-    class Lock\n-    {\n-    public:\n-        virtual ~Lock() {}\n-\n-        //! Get current chain height, not including genesis block (returns 0 if\n-        //! chain only contains genesis block, nullopt if chain does not contain\n-        //! any blocks).\n-        virtual Optional<int> getHeight() = 0;\n-\n-        //! Get block height above genesis block. Returns 0 for genesis block,\n-        //! 1 for following block, and so on. Returns nullopt for a block not\n-        //! included in the current chain.\n-        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n-\n-        //! Get block hash. Height must be valid or this function will abort.\n-        virtual uint256 getBlockHash(int height) = 0;\n-\n-        //! Get block time. Height must be valid or this function will abort.\n-        virtual int64_t getBlockTime(int height) = 0;\n-\n-        //! Get block median time past. Height must be valid or this function\n-        //! will abort.\n-        virtual int64_t getBlockMedianTimePast(int height) = 0;\n-\n-        //! Check that the block is available on disk (i.e. has not been\n-        //! pruned), and contains transactions.\n-        virtual bool haveBlockOnDisk(int height) = 0;\n-\n-        //! Return height of the first block in the chain with timestamp equal\n-        //! or greater than the given time and height equal or greater than the\n-        //! given height, or nullopt if there is no block with a high enough\n-        //! timestamp and height. Also return the block hash as an optional output parameter\n-        //! (to avoid the cost of a second lookup in case this information is needed.)\n-        virtual Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height, uint256* hash) = 0;\n-\n-        //! Return height of last block in the specified range which is pruned, or\n-        //! nullopt if no block in the range is pruned. Range is inclusive.\n-        virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n-\n-        //! Return height of the specified block if it is on the chain, otherwise\n-        //! return the height of the highest block on chain that's an ancestor\n-        //! of the specified block, or nullopt if there is no common ancestor.\n-        //! Also return the height of the specified block as an optional output\n-        //! parameter (to avoid the cost of a second hash lookup in case this\n-        //! information is desired).\n-        virtual Optional<int> findFork(const uint256& hash, Optional<int>* height) = 0;\n-\n-        //! Get locator for the current chain tip.\n-        virtual CBlockLocator getTipLocator() = 0;\n-\n-        //! Return height of the highest block on chain in common with the locator,\n-        //! which will either be the original block used to create the locator,\n-        //! or one of its ancestors.\n-        virtual Optional<int> findLocatorFork(const CBlockLocator& locator) = 0;\n-\n-        //! Check if transaction will be final given chain height current time.\n-        virtual bool checkFinalTx(const CTransaction& tx) = 0;\n-    };\n-\n-    //! Return Lock interface. Chain is locked when this is called, and\n-    //! unlocked when the returned interface is freed.\n-    virtual std::unique_ptr<Lock> lock(bool try_lock = false) = 0;\n+    //! Get current chain height, not including genesis block (returns 0 if\n+    //! chain only contains genesis block, nullopt if chain does not contain\n+    //! any blocks)\n+    virtual Optional<int> getHeight() = 0;\n+\n+    //! Get block height above genesis block. Returns 0 for genesis block,\n+    //! 1 for following block, and so on. Returns nullopt for a block not\n+    //! included in the current chain.\n+    virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+    //! Get block hash. Height must be valid or this function will abort.",
    "path": "src/interfaces/chain.h",
    "position": 94,
    "original_position": 94,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "For getBlockHash, getBlockTime, and getBlockMedianTimePast, I don't think it safe anymore for these methods to abort when an invalid height is passed. Previously it was possible to guarantee that an invalid height would never be passed because `cs_main` would be held before calling these (and if an invalid height was passed it indicated a bug). But now that cs_main isn't held, there could be a race condition where `invalidateblock` is called, or there is a reorg to a shorter chain that would cause aborts now.\r\n\r\nA possible fix would be to implement error handling for race conditions in the places where these methods are called, maybe changing these methods to throw an exception or return `Optional<>` values or success `bools` to indicate failure instead of aborting.\r\n\r\nAnother solution would be to drop these methods, and replace them with a more general method similar to [`findBlock`](https://github.com/bitcoin/bitcoin/blob/ddecb671f0a41eaa8e6198f7e55172c1256bd978/src/interfaces/chain.h#L128-L137) that is capable of returning multiple pieces of information atomically so there aren't new race conditions the wallet has to handle now because it isn't holding `cs_main`.",
    "created_at": "2019-12-13T17:52:49Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357761094",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357761094"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357761094"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357761094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 93,
    "original_line": 93,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357762993",
    "pull_request_review_id": 332024993,
    "id": 357762993,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1Nzc2Mjk5Mw==",
    "diff_hunk": "@@ -60,16 +60,16 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n }\n \n //! Construct wallet tx status struct.\n-WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n+WalletTxStatus MakeWalletTxStatus(CWallet& wallet, const CWalletTx& wtx)\n {\n     WalletTxStatus result;\n-    result.block_height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock).get_value_or(std::numeric_limits<int>::max());\n+    result.block_height = wtx.m_confirm.block_height;",
    "path": "src/interfaces/wallet.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is behavior changing here? Does this need need to be changed to continue returning `std::numeric_limits<int>::max()` in the case of an abandoned or unconfirmed transaction, or does it not matter?",
    "created_at": "2019-12-13T17:58:00Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357762993",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357762993"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357762993"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357762993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 66,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357829493",
    "pull_request_review_id": 332112453,
    "id": 357829493,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzgyOTQ5Mw==",
    "diff_hunk": "@@ -344,6 +331,7 @@ class ChainImpl : public Chain\n     }\n     std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n     {\n+        LOCK(::cs_main);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "3773b4159c37db993b9bb7c3f5d7dd7a51a39b09",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/16426#discussion_r356338388\r\n\r\n> Adding a comment only for this method would seem obscure compare to other methods for future reviewers after refactoring\r\n\r\nI think this lock is a little different than the locks in the other Chain methods because it is not obvious why locking is needed for something that appears to just be a memory allocation. If this lock really is necessary, having a comment in the code would be helpful to me at least. Or if it is possible to drop the lock or move it closer to where it might be needed in the [`NotificationsHandlerImpl` constructor](https://github.com/bitcoin/bitcoin/blob/3773b4159c37db993b9bb7c3f5d7dd7a51a39b09/src/interfaces/chain.cpp#L44-L48)  that would be even better.",
    "created_at": "2019-12-13T20:56:15Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357829493",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357829493"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357829493"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357829493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 334,
    "side": "RIGHT",
    "in_reply_to_id": 355227118
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357836647",
    "pull_request_review_id": 332122016,
    "id": 357836647,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NzgzNjY0Nw==",
    "diff_hunk": "@@ -330,14 +316,13 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        if (num_blocks >= 0) {\n+            block_time = m_wallet->chain().getBlockTime(num_blocks);",
    "path": "src/interfaces/wallet.cpp",
    "position": null,
    "original_position": 118,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think to avoid the race condition mentioned https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357761094, where there is a block reorg between the `CWallet::GetLastBlockHeight` and `Chain::getBlockTime` calls, it would be safer to avoid triggering asserts by getting the time by hash rather than height. You could tweak `GetLastBlock` to optionally return the block hash:\r\n\r\n```c++\r\nint GetLastBlock(uint256* block_hash = nullptr);\r\n```\r\n\r\nfor\r\n\r\n```c++\r\nuint256 block_hash;\r\nnum_blocks = m_wallet->GetLastBlock(&block_hash);\r\nif (num_blocks < 0 || !m_wallet.chain().findBlock(block_hash, nullptr, &block_time)) {\r\n    block_time = -1;\r\n}\r\n```\r\n\r\nThere are probably other places in this PR where similar changes would be appropriate.",
    "created_at": "2019-12-13T21:18:25Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357836647",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357836647"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357836647"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/357836647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 319,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 321,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358357704",
    "pull_request_review_id": 332728592,
    "id": 358357704,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1ODM1NzcwNA==",
    "diff_hunk": "@@ -2274,13 +2252,13 @@ bool CWalletTx::InMempool() const\n     return fInMempool;\n }\n \n-bool CWalletTx::IsTrusted(interfaces::Chain::Lock& locked_chain) const\n+bool CWalletTx::IsTrusted() const\n {\n     // Quick answer in most cases\n-    if (!locked_chain.checkFinalTx(*tx)) {\n+    if (!pwallet->chain().checkFinalTx(*tx)) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 452,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "a052c3748b6551137c4477a87293f231e707578d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/16426#discussion_r342719832\r\n\r\n> Instead of adding an `interfaces::Chain::checkFinalTx` method, it might be better to call [`IsFinalTx`](https://github.com/bitcoin/bitcoin/blob/50591f6ec61b802cf4193cdbefcc85ad75716e8d/src/consensus/tx_verify.cpp#L17-L28)\r\n\r\n#17443 is a step in this direction (https://github.com/bitcoin/bitcoin/pull/17443#pullrequestreview-332692782)\r\n",
    "created_at": "2019-12-16T17:12:46Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r358357704",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358357704"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r358357704"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358357704/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2258,
    "side": "RIGHT",
    "in_reply_to_id": 342719832
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358990449",
    "pull_request_review_id": 333531297,
    "id": 358990449,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1ODk5MDQ0OQ==",
    "diff_hunk": "@@ -358,8 +355,7 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Something wrong with merkleblock\");\n     }\n \n-    auto locked_chain = pwallet->chain().lock();\n-    Optional<int> height = locked_chain->getBlockHeight(merkleBlock.header.GetHash());\n+    Optional<int> height = pwallet->chain().getBlockHeight(merkleBlock.header.GetHash());",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think the `LOCK(pwallet->cs_wallet);` line below should move above this `getBlockHeight()` call. Otherwise there could be a race condition if there is a reorg and the transaction is no longer confirmed by the time AddToWallet is called below, but the wallet considers it confirmed anyway.\r\n\r\nI'm not sure if it would be a good idea, but perhaps the `CWallet::chain()` method should be annotated `EXCLUSIVE_LOCKS_REQUIRED(cs_wallet)` to catch other cases like this.",
    "created_at": "2019-12-17T19:40:08Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r358990449",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358990449"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r358990449"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/358990449/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 359,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359289852",
    "pull_request_review_id": 333900028,
    "id": 359289852,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTI4OTg1Mg==",
    "diff_hunk": "@@ -330,11 +330,10 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        if (num_blocks >= 0) {",
    "path": "src/interfaces/wallet.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "e64f0909c66e39896c1e41df77576cccc3001088",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: This is already asserted in `GetLastBlockHeight`, so this check could be removed",
    "created_at": "2019-12-18T11:19:08Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359289852",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359289852"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359289852"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359289852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 334,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359292213",
    "pull_request_review_id": 333900028,
    "id": 359292213,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTI5MjIxMw==",
    "diff_hunk": "@@ -1601,8 +1601,8 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n \n     bool include_removed = (request.params[3].isNull() || request.params[3].get_bool());\n \n-    const Optional<int> tip_height = locked_chain->getHeight();\n-    int depth = tip_height && height ? (1 + *tip_height - *height) : -1;\n+    int tip_height = pwallet->GetLastBlockHeight();\n+    int depth = tip_height >= 0 && height ? (1 + tip_height - *height) : -1;",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "e64f0909c66e39896c1e41df77576cccc3001088",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: check not needed; see above",
    "created_at": "2019-12-18T11:25:05Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359292213",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359292213"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359292213"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359292213/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1605,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359292259",
    "pull_request_review_id": 333900028,
    "id": 359292259,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTI5MjI1OQ==",
    "diff_hunk": "@@ -1634,7 +1634,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n         --*altheight;\n     }\n \n-    int last_height = tip_height ? *tip_height + 1 - target_confirms : -1;\n+    int last_height = tip_height >= 0 ? tip_height + 1 - target_confirms : -1;",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 52,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "e64f0909c66e39896c1e41df77576cccc3001088",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: check not needed; see above",
    "created_at": "2019-12-18T11:25:13Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359292259",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359292259"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359292259"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359292259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1637,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359307787",
    "pull_request_review_id": 333900028,
    "id": 359307787,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTMwNzc4Nw==",
    "diff_hunk": "@@ -790,9 +780,9 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     // produce output\n     file << strprintf(\"# Wallet dump created by Bitcoin %s\\n\", CLIENT_BUILD);\n     file << strprintf(\"# * Created on %s\\n\", FormatISO8601DateTime(GetTime()));\n-    const Optional<int> tip_height = locked_chain->getHeight();\n-    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height.get_value_or(-1), tip_height ? locked_chain->getBlockHash(*tip_height).ToString() : \"(missing block hash)\");\n-    file << strprintf(\"#   mined on %s\\n\", tip_height ? FormatISO8601DateTime(locked_chain->getBlockTime(*tip_height)) : \"(missing block time)\");\n+    int tip_height = pwallet->GetLastBlockHeight();\n+    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height, tip_height >= 0 ? pwallet->chain().getBlockHash(tip_height).ToString() : \"(missing block hash)\");\n+    file << strprintf(\"#   mined on %s\\n\", tip_height >= 0 ? FormatISO8601DateTime(pwallet->chain().getBlockTime(tip_height)) : \"(missing block hash)\");",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 111,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: `tip_height` checks not needed here, see above",
    "created_at": "2019-12-18T12:04:16Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359307787",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359307787"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359307787"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359307787/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 785,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359538719",
    "pull_request_review_id": 334224164,
    "id": 359538719,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTUzODcxOQ==",
    "diff_hunk": "@@ -60,16 +60,16 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n }\n \n //! Construct wallet tx status struct.\n-WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n+WalletTxStatus MakeWalletTxStatus(CWallet& wallet, const CWalletTx& wtx)\n {\n     WalletTxStatus result;\n-    result.block_height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock).get_value_or(std::numeric_limits<int>::max());\n+    result.block_height = wtx.m_confirm.block_height;",
    "path": "src/interfaces/wallet.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it doesn't matter, and maybe even confusing to display `std::numeric_limit<int>::max()` as block height. An abandoned one will have `is_abandoned` sets to true. An unconfirmed one will have `depth_in_main_chain` sets to 0. It seems to me meaningful enough for end user but I can still do a ternary and if `hashBlock` is null set it to fallback value if you think so.",
    "created_at": "2019-12-18T19:53:36Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359538719",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359538719"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359538719"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359538719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 66,
    "side": "RIGHT",
    "in_reply_to_id": 357762993
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359545876",
    "pull_request_review_id": 334233443,
    "id": 359545876,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTU0NTg3Ng==",
    "diff_hunk": "@@ -60,16 +60,16 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n }\n \n //! Construct wallet tx status struct.\n-WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n+WalletTxStatus MakeWalletTxStatus(CWallet& wallet, const CWalletTx& wtx)\n {\n     WalletTxStatus result;\n-    result.block_height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock).get_value_or(std::numeric_limits<int>::max());\n+    result.block_height = wtx.m_confirm.block_height;",
    "path": "src/interfaces/wallet.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> I think it doesn't matter, and maybe even confusing to display `std::numeric_limit<int>::max()` as block height. An abandoned one will have `is_abandoned` sets to true. An unconfirmed one will have `depth_in_main_chain` sets to 0. It seems to me meaningful enough for end user but I can still do a ternary and if `hashBlock` is null set it to fallback value if you think so.\r\n\r\nI think anything that doesn't break the GUI is fine. If GUI treats 0x7FFFFFFFF and 0xFFFFFFFFF the same, the current code is fine. If GUI treats them differently, that should just be addressed somehow. I'm just asking because I'm not sure if this is a real change or not.",
    "created_at": "2019-12-18T20:09:37Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359545876",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359545876"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359545876"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359545876/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 66,
    "side": "RIGHT",
    "in_reply_to_id": 357762993
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359643234",
    "pull_request_review_id": 334355730,
    "id": 359643234,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTY0MzIzNA==",
    "diff_hunk": "@@ -344,6 +331,7 @@ class ChainImpl : public Chain\n     }\n     std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n     {\n+        LOCK(::cs_main);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "3773b4159c37db993b9bb7c3f5d7dd7a51a39b09",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Okay after thinking about this, by removing lock, we may miss block connections between end of rescan and registering with validation interface. That was the meaning of the comment I think, which is about consistency of chain viewed by the wallet. To avoid that I moved `handleNotifications` before rescan and after `cs_wallet` lock taking. That's way block connections notifications are going to be pending until rescan is done. We may have block processing duplicata but at least we should guarantee wallet consistency. \r\n\r\nLong-term solution is to unify both rescan and Chain::Notifications under same interface.",
    "created_at": "2019-12-19T01:00:13Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359643234",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359643234"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359643234"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359643234/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 334,
    "side": "RIGHT",
    "in_reply_to_id": 355227118
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359644487",
    "pull_request_review_id": 334357159,
    "id": 359644487,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTY0NDQ4Nw==",
    "diff_hunk": "@@ -56,74 +51,59 @@ class Chain\n public:\n     virtual ~Chain() {}\n \n-    //! Interface for querying locked chain state, used by legacy code that\n-    //! assumes state won't change between calls. New code should avoid using\n-    //! the Lock interface and instead call higher-level Chain methods\n-    //! that return more information so the chain doesn't need to stay locked\n-    //! between calls.\n-    class Lock\n-    {\n-    public:\n-        virtual ~Lock() {}\n-\n-        //! Get current chain height, not including genesis block (returns 0 if\n-        //! chain only contains genesis block, nullopt if chain does not contain\n-        //! any blocks).\n-        virtual Optional<int> getHeight() = 0;\n-\n-        //! Get block height above genesis block. Returns 0 for genesis block,\n-        //! 1 for following block, and so on. Returns nullopt for a block not\n-        //! included in the current chain.\n-        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n-\n-        //! Get block hash. Height must be valid or this function will abort.\n-        virtual uint256 getBlockHash(int height) = 0;\n-\n-        //! Get block time. Height must be valid or this function will abort.\n-        virtual int64_t getBlockTime(int height) = 0;\n-\n-        //! Get block median time past. Height must be valid or this function\n-        //! will abort.\n-        virtual int64_t getBlockMedianTimePast(int height) = 0;\n-\n-        //! Check that the block is available on disk (i.e. has not been\n-        //! pruned), and contains transactions.\n-        virtual bool haveBlockOnDisk(int height) = 0;\n-\n-        //! Return height of the first block in the chain with timestamp equal\n-        //! or greater than the given time and height equal or greater than the\n-        //! given height, or nullopt if there is no block with a high enough\n-        //! timestamp and height. Also return the block hash as an optional output parameter\n-        //! (to avoid the cost of a second lookup in case this information is needed.)\n-        virtual Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height, uint256* hash) = 0;\n-\n-        //! Return height of last block in the specified range which is pruned, or\n-        //! nullopt if no block in the range is pruned. Range is inclusive.\n-        virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n-\n-        //! Return height of the specified block if it is on the chain, otherwise\n-        //! return the height of the highest block on chain that's an ancestor\n-        //! of the specified block, or nullopt if there is no common ancestor.\n-        //! Also return the height of the specified block as an optional output\n-        //! parameter (to avoid the cost of a second hash lookup in case this\n-        //! information is desired).\n-        virtual Optional<int> findFork(const uint256& hash, Optional<int>* height) = 0;\n-\n-        //! Get locator for the current chain tip.\n-        virtual CBlockLocator getTipLocator() = 0;\n-\n-        //! Return height of the highest block on chain in common with the locator,\n-        //! which will either be the original block used to create the locator,\n-        //! or one of its ancestors.\n-        virtual Optional<int> findLocatorFork(const CBlockLocator& locator) = 0;\n-\n-        //! Check if transaction will be final given chain height current time.\n-        virtual bool checkFinalTx(const CTransaction& tx) = 0;\n-    };\n-\n-    //! Return Lock interface. Chain is locked when this is called, and\n-    //! unlocked when the returned interface is freed.\n-    virtual std::unique_ptr<Lock> lock(bool try_lock = false) = 0;\n+    //! Get current chain height, not including genesis block (returns 0 if\n+    //! chain only contains genesis block, nullopt if chain does not contain\n+    //! any blocks)\n+    virtual Optional<int> getHeight() = 0;\n+\n+    //! Get block height above genesis block. Returns 0 for genesis block,\n+    //! 1 for following block, and so on. Returns nullopt for a block not\n+    //! included in the current chain.\n+    virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+    //! Get block hash. Height must be valid or this function will abort.",
    "path": "src/interfaces/chain.h",
    "position": 94,
    "original_position": 94,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You're right, even if you need bad-timed reorgs to trigger them. After thinking about this, I picked the option to return `Optional<>` because that's one giving us more control. Throwing exception don't fit everywhere where an absent block isn't fatal. Return boolean would mean to pass pointer to values which is a bit different than other interface methods (like `getHeight`). \r\n\r\nOn dropping these methods, I think `getBlockTime` would be the easiest one if we can store block time in confirmation struct of transactions but we're going to be limited by not being able to serialize them. `getBlockMedianTimePast` and `getBlockHash` can go by refactoring rescan logic. Most of the further dry-ing up refactoring is going to be stuck between serialization/rescan..",
    "created_at": "2019-12-19T01:05:21Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359644487",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359644487"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359644487"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359644487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 93,
    "original_line": 93,
    "side": "RIGHT",
    "in_reply_to_id": 357761094
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359645093",
    "pull_request_review_id": 334357955,
    "id": 359645093,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTY0NTA5Mw==",
    "diff_hunk": "@@ -358,8 +355,7 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Something wrong with merkleblock\");\n     }\n \n-    auto locked_chain = pwallet->chain().lock();\n-    Optional<int> height = locked_chain->getBlockHeight(merkleBlock.header.GetHash());\n+    Optional<int> height = pwallet->chain().getBlockHeight(merkleBlock.header.GetHash());",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 30,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, I've modified it, but didn't add `EXCLUSIVE_LOCKS_REQUIRED` to the `CWallet::chain()` as it would change lock assumptions for RPC calls like `bumpfee` or `fundtransaction`..",
    "created_at": "2019-12-19T01:08:18Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359645093",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359645093"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359645093"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359645093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 359,
    "side": "RIGHT",
    "in_reply_to_id": 358990449
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359645574",
    "pull_request_review_id": 334358579,
    "id": 359645574,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1OTY0NTU3NA==",
    "diff_hunk": "@@ -330,14 +316,13 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        if (num_blocks >= 0) {\n+            block_time = m_wallet->chain().getBlockTime(num_blocks);",
    "path": "src/interfaces/wallet.cpp",
    "position": null,
    "original_position": 118,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed it in cbd2c1a, covered with other reorg mitigations.",
    "created_at": "2019-12-19T01:10:50Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359645574",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359645574"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r359645574"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/359645574/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 319,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 321,
    "side": "RIGHT",
    "in_reply_to_id": 357836647
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361515468",
    "pull_request_review_id": 336594946,
    "id": 361515468,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTUxNTQ2OA==",
    "diff_hunk": "@@ -56,74 +51,59 @@ class Chain\n public:\n     virtual ~Chain() {}\n \n-    //! Interface for querying locked chain state, used by legacy code that\n-    //! assumes state won't change between calls. New code should avoid using\n-    //! the Lock interface and instead call higher-level Chain methods\n-    //! that return more information so the chain doesn't need to stay locked\n-    //! between calls.\n-    class Lock\n-    {\n-    public:\n-        virtual ~Lock() {}\n-\n-        //! Get current chain height, not including genesis block (returns 0 if\n-        //! chain only contains genesis block, nullopt if chain does not contain\n-        //! any blocks).\n-        virtual Optional<int> getHeight() = 0;\n-\n-        //! Get block height above genesis block. Returns 0 for genesis block,\n-        //! 1 for following block, and so on. Returns nullopt for a block not\n-        //! included in the current chain.\n-        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n-\n-        //! Get block hash. Height must be valid or this function will abort.\n-        virtual uint256 getBlockHash(int height) = 0;\n-\n-        //! Get block time. Height must be valid or this function will abort.\n-        virtual int64_t getBlockTime(int height) = 0;\n-\n-        //! Get block median time past. Height must be valid or this function\n-        //! will abort.\n-        virtual int64_t getBlockMedianTimePast(int height) = 0;\n-\n-        //! Check that the block is available on disk (i.e. has not been\n-        //! pruned), and contains transactions.\n-        virtual bool haveBlockOnDisk(int height) = 0;\n-\n-        //! Return height of the first block in the chain with timestamp equal\n-        //! or greater than the given time and height equal or greater than the\n-        //! given height, or nullopt if there is no block with a high enough\n-        //! timestamp and height. Also return the block hash as an optional output parameter\n-        //! (to avoid the cost of a second lookup in case this information is needed.)\n-        virtual Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height, uint256* hash) = 0;\n-\n-        //! Return height of last block in the specified range which is pruned, or\n-        //! nullopt if no block in the range is pruned. Range is inclusive.\n-        virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n-\n-        //! Return height of the specified block if it is on the chain, otherwise\n-        //! return the height of the highest block on chain that's an ancestor\n-        //! of the specified block, or nullopt if there is no common ancestor.\n-        //! Also return the height of the specified block as an optional output\n-        //! parameter (to avoid the cost of a second hash lookup in case this\n-        //! information is desired).\n-        virtual Optional<int> findFork(const uint256& hash, Optional<int>* height) = 0;\n-\n-        //! Get locator for the current chain tip.\n-        virtual CBlockLocator getTipLocator() = 0;\n-\n-        //! Return height of the highest block on chain in common with the locator,\n-        //! which will either be the original block used to create the locator,\n-        //! or one of its ancestors.\n-        virtual Optional<int> findLocatorFork(const CBlockLocator& locator) = 0;\n-\n-        //! Check if transaction will be final given chain height current time.\n-        virtual bool checkFinalTx(const CTransaction& tx) = 0;\n-    };\n-\n-    //! Return Lock interface. Chain is locked when this is called, and\n-    //! unlocked when the returned interface is freed.\n-    virtual std::unique_ptr<Lock> lock(bool try_lock = false) = 0;\n+    //! Get current chain height, not including genesis block (returns 0 if\n+    //! chain only contains genesis block, nullopt if chain does not contain\n+    //! any blocks)\n+    virtual Optional<int> getHeight() = 0;\n+\n+    //! Get block height above genesis block. Returns 0 for genesis block,\n+    //! 1 for following block, and so on. Returns nullopt for a block not\n+    //! included in the current chain.\n+    virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+    //! Get block hash. Height must be valid or this function will abort.",
    "path": "src/interfaces/chain.h",
    "position": 94,
    "original_position": 94,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"this function will abort\" comments are out of date now and could be updated\r\n\r\nJust to clarify my earlier suggestion about dropping these methods, I wasn't trying to suggest caching more block information in the wallet (though this could be nice). I was just trying to suggest looking up block information by hash instead of height, because heights aren't a stable way of identifying blocks if `cs_main` isn't locked, but hashes are.",
    "created_at": "2019-12-26T19:09:47Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r361515468",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361515468"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r361515468"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361515468/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 93,
    "original_line": 93,
    "side": "RIGHT",
    "in_reply_to_id": 357761094
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361516436",
    "pull_request_review_id": 336594946,
    "id": 361516436,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTUxNjQzNg==",
    "diff_hunk": "@@ -234,13 +124,104 @@ class ChainImpl : public Chain\n {\n public:\n     explicit ChainImpl(NodeContext& node) : m_node(node) {}\n-    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    Optional<int> getHeight() override\n+    {\n+        LOCK(cs_main);\n+        int height = ::ChainActive().Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = LookupBlockIndex(hash);\n+        if (block && ::ChainActive().Contains(block)) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<uint256> getBlockHash(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        if (block != nullptr) {\n+            return block->GetBlockHash();\n+        }\n+        return nullopt;\n+    }\n+    Optional<int64_t> getBlockTime(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        assert(block != nullptr);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 153,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "88b41a7c887844968724dbffc7f96c9395d61787",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It looks like getBlockTime and getBlockMedianTimePast are still aborting instead of returning nullopt if the block isn't found. Unintended change?",
    "created_at": "2019-12-26T19:16:24Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r361516436",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361516436"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r361516436"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361516436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 170,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361517278",
    "pull_request_review_id": 336594946,
    "id": 361517278,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTUxNzI3OA==",
    "diff_hunk": "@@ -60,16 +60,16 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n }\n \n //! Construct wallet tx status struct.\n-WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n+WalletTxStatus MakeWalletTxStatus(CWallet& wallet, const CWalletTx& wtx)\n {\n     WalletTxStatus result;\n-    result.block_height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock).get_value_or(std::numeric_limits<int>::max());\n+    result.block_height = wtx.m_confirm.block_height;",
    "path": "src/interfaces/wallet.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Haven't tested, but it looks like this change might cause unconfirmed transaction to sort to the bottom instead of the top:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1dbf3350c683f93d7fc9b861400724f6fd2b2f1d/src/qt/transactionrecord.cpp#L169-L174\r\n\r\nCould fix by updating qt code to handle block height -1, or preserving max int behavior here.\r\n",
    "created_at": "2019-12-26T19:22:03Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r361517278",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361517278"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r361517278"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361517278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 66,
    "side": "RIGHT",
    "in_reply_to_id": 357762993
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362999187",
    "pull_request_review_id": 338321616,
    "id": 362999187,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk5OTE4Nw==",
    "diff_hunk": "@@ -234,13 +124,104 @@ class ChainImpl : public Chain\n {\n public:\n     explicit ChainImpl(NodeContext& node) : m_node(node) {}\n-    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    Optional<int> getHeight() override\n+    {\n+        LOCK(cs_main);\n+        int height = ::ChainActive().Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = LookupBlockIndex(hash);\n+        if (block && ::ChainActive().Contains(block)) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<uint256> getBlockHash(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        if (block != nullptr) {\n+            return block->GetBlockHash();\n+        }\n+        return nullopt;\n+    }\n+    Optional<int64_t> getBlockTime(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        assert(block != nullptr);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 153,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "88b41a7c887844968724dbffc7f96c9395d61787",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ooops, my bad, thanks should be corrected on latest tip.",
    "created_at": "2020-01-04T00:09:20Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r362999187",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362999187"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r362999187"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362999187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 170,
    "side": "RIGHT",
    "in_reply_to_id": 361516436
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362999615",
    "pull_request_review_id": 338322079,
    "id": 362999615,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk5OTYxNQ==",
    "diff_hunk": "@@ -60,16 +60,16 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n }\n \n //! Construct wallet tx status struct.\n-WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n+WalletTxStatus MakeWalletTxStatus(CWallet& wallet, const CWalletTx& wtx)\n {\n     WalletTxStatus result;\n-    result.block_height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock).get_value_or(std::numeric_limits<int>::max());\n+    result.block_height = wtx.m_confirm.block_height;",
    "path": "src/interfaces/wallet.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Back to `result.block_height = wtx.m_confirm.block_height > 0 ? wtx.m_confirm.block_height std::numeric_limits<int>::max();`\r\n\r\nShould avoid to break qt code, without further digging into it.",
    "created_at": "2020-01-04T00:12:56Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r362999615",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362999615"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r362999615"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/362999615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 66,
    "side": "RIGHT",
    "in_reply_to_id": 357762993
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363000179",
    "pull_request_review_id": 338322701,
    "id": 363000179,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzAwMDE3OQ==",
    "diff_hunk": "@@ -56,74 +51,59 @@ class Chain\n public:\n     virtual ~Chain() {}\n \n-    //! Interface for querying locked chain state, used by legacy code that\n-    //! assumes state won't change between calls. New code should avoid using\n-    //! the Lock interface and instead call higher-level Chain methods\n-    //! that return more information so the chain doesn't need to stay locked\n-    //! between calls.\n-    class Lock\n-    {\n-    public:\n-        virtual ~Lock() {}\n-\n-        //! Get current chain height, not including genesis block (returns 0 if\n-        //! chain only contains genesis block, nullopt if chain does not contain\n-        //! any blocks).\n-        virtual Optional<int> getHeight() = 0;\n-\n-        //! Get block height above genesis block. Returns 0 for genesis block,\n-        //! 1 for following block, and so on. Returns nullopt for a block not\n-        //! included in the current chain.\n-        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n-\n-        //! Get block hash. Height must be valid or this function will abort.\n-        virtual uint256 getBlockHash(int height) = 0;\n-\n-        //! Get block time. Height must be valid or this function will abort.\n-        virtual int64_t getBlockTime(int height) = 0;\n-\n-        //! Get block median time past. Height must be valid or this function\n-        //! will abort.\n-        virtual int64_t getBlockMedianTimePast(int height) = 0;\n-\n-        //! Check that the block is available on disk (i.e. has not been\n-        //! pruned), and contains transactions.\n-        virtual bool haveBlockOnDisk(int height) = 0;\n-\n-        //! Return height of the first block in the chain with timestamp equal\n-        //! or greater than the given time and height equal or greater than the\n-        //! given height, or nullopt if there is no block with a high enough\n-        //! timestamp and height. Also return the block hash as an optional output parameter\n-        //! (to avoid the cost of a second lookup in case this information is needed.)\n-        virtual Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height, uint256* hash) = 0;\n-\n-        //! Return height of last block in the specified range which is pruned, or\n-        //! nullopt if no block in the range is pruned. Range is inclusive.\n-        virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n-\n-        //! Return height of the specified block if it is on the chain, otherwise\n-        //! return the height of the highest block on chain that's an ancestor\n-        //! of the specified block, or nullopt if there is no common ancestor.\n-        //! Also return the height of the specified block as an optional output\n-        //! parameter (to avoid the cost of a second hash lookup in case this\n-        //! information is desired).\n-        virtual Optional<int> findFork(const uint256& hash, Optional<int>* height) = 0;\n-\n-        //! Get locator for the current chain tip.\n-        virtual CBlockLocator getTipLocator() = 0;\n-\n-        //! Return height of the highest block on chain in common with the locator,\n-        //! which will either be the original block used to create the locator,\n-        //! or one of its ancestors.\n-        virtual Optional<int> findLocatorFork(const CBlockLocator& locator) = 0;\n-\n-        //! Check if transaction will be final given chain height current time.\n-        virtual bool checkFinalTx(const CTransaction& tx) = 0;\n-    };\n-\n-    //! Return Lock interface. Chain is locked when this is called, and\n-    //! unlocked when the returned interface is freed.\n-    virtual std::unique_ptr<Lock> lock(bool try_lock = false) = 0;\n+    //! Get current chain height, not including genesis block (returns 0 if\n+    //! chain only contains genesis block, nullopt if chain does not contain\n+    //! any blocks)\n+    virtual Optional<int> getHeight() = 0;\n+\n+    //! Get block height above genesis block. Returns 0 for genesis block,\n+    //! 1 for following block, and so on. Returns nullopt for a block not\n+    //! included in the current chain.\n+    virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+    //! Get block hash. Height must be valid or this function will abort.",
    "path": "src/interfaces/chain.h",
    "position": 94,
    "original_position": 94,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "f87558b49bc63922a70c9ff02c33c0b1ed1f44b1",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've been through function triplet callsites again and I think using hash instead of height wouldn't make code safer that much. \r\n\r\n`getBlockHash` is always called by rescan code which making the assumption of chain lock not being held.\r\n\r\n`getBlockTime`/`getBlockMedianTimePast`, given than block time must always be higher than parent MTP and not to be more than 2h in the future by consensus rules and than wallet code is using time range to take decision it doesn't matter than height match with block hash A or block hash B. ",
    "created_at": "2020-01-04T00:17:36Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r363000179",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363000179"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r363000179"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363000179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 93,
    "original_line": 93,
    "side": "RIGHT",
    "in_reply_to_id": 357761094
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363064572",
    "pull_request_review_id": 338377216,
    "id": 363064572,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2NDU3Mg==",
    "diff_hunk": "@@ -790,9 +790,9 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     // produce output\n     file << strprintf(\"# Wallet dump created by Bitcoin %s\\n\", CLIENT_BUILD);\n     file << strprintf(\"# * Created on %s\\n\", FormatISO8601DateTime(GetTime()));\n-    const Optional<int> tip_height = locked_chain->getHeight();\n-    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height.get_value_or(-1), tip_height ? locked_chain->getBlockHash(*tip_height).ToString() : \"(missing block hash)\");\n-    file << strprintf(\"#   mined on %s\\n\", tip_height ? FormatISO8601DateTime(locked_chain->getBlockTime(*tip_height)) : \"(missing block time)\");\n+    int tip_height = pwallet->GetLastBlockHeight();\n+    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height, locked_chain->getBlockHash(tip_height).ToString());\n+    file << strprintf(\"#   mined on %s\\n\", tip_height >= 0 ? FormatISO8601DateTime(locked_chain->getBlockTime(tip_height)) : \"(missing block hash)\");",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "1533b075aa61bfb0c371f3028821c088e512138e",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If `tip_height < 0` ever occurs, `locked_chain->getBlockHash(tip_height)` above will crash. `pwallet->GetLastBlockHeight()` will also never return a value `< 0`, so not sure why the `tip_height >= 0 ?` part is necessary.",
    "created_at": "2020-01-05T01:51:51Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r363064572",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363064572"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r363064572"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363064572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 795,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363064606",
    "pull_request_review_id": 338377216,
    "id": 363064606,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2NDYwNg==",
    "diff_hunk": "@@ -1365,7 +1365,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n         EnsureWalletIsUnlocked(pwallet);\n \n         // Verify all timestamps are present before importing any keys.\n-        const Optional<int> tip_height = locked_chain->getHeight();\n+        const Optional<int> tip_height = pwallet->chain().getHeight();\n         now = tip_height ? locked_chain->getBlockMedianTimePast(*tip_height) : 0;",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "1533b075aa61bfb0c371f3028821c088e512138e",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Behavior change as `tip_height` can now be `0` for a chain with only the genesis block, which before would give truth here but now will give false. I would just remove the ternary part as it makes no sense anymore (I think?).",
    "created_at": "2020-01-05T01:53:21Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r363064606",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363064606"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r363064606"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363064606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1369,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363064790",
    "pull_request_review_id": 338377216,
    "id": 363064790,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2NDc5MA==",
    "diff_hunk": "@@ -1634,8 +1634,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n         --*altheight;\n     }\n \n-    int last_height = tip_height ? *tip_height + 1 - target_confirms : -1;\n-    uint256 lastblock = last_height >= 0 ? locked_chain->getBlockHash(last_height) : uint256();\n+    uint256 lastblock = tip_height + 1 - target_confirms >= 0 ? locked_chain->getBlockHash(tip_height + 1 - target_confirms) : uint256();",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "1533b075aa61bfb0c371f3028821c088e512138e",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Slightly prefer the two line version here:\r\n```C++\r\nint lastheight = tip_height + 1 - target_confirms;\r\nuint256 lastblock = lastheight >= 0 ? locked_chain->getBlockHash(lastheight) : uint256();\r\n```",
    "created_at": "2020-01-05T01:59:39Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r363064790",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363064790"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r363064790"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363064790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1637,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363065195",
    "pull_request_review_id": 338377216,
    "id": 363065195,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2NTE5NQ==",
    "diff_hunk": "@@ -3403,16 +3403,14 @@ void CWallet::GetKeyBirthTimes(interfaces::Chain::Lock& locked_chain, std::map<C\n     for (const auto& entry : mapWallet) {\n         // iterate over all wallet transactions...\n         const CWalletTx &wtx = entry.second;\n-        if (Optional<int> height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock)) {\n-            // ... which are already in a block\n-            for (const CTxOut &txout : wtx.tx->vout) {\n-                // iterate over all their outputs\n-                for (const auto &keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n-                    // ... and all their affected keys\n-                    std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n-                    if (rit != mapKeyFirstBlock.end() && *height < rit->second)\n-                        rit->second = *height;\n-                }\n+        // ... which are already in a block\n+        for (const CTxOut& txout : wtx.tx->vout) {\n+            // iterate over all their outputs\n+            for (const auto& keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n+                // ... and all their affected keys\n+                std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n+                if (rit != mapKeyFirstBlock.end() && wtx.m_confirm.block_height < rit->second)",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "b844282ba6539954e6ad9ba899497e28fed60d91",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, it is a style requirement. Same line or add `{}`.\r\n\r\nFrom https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c\r\n> If an `if` only has a single-statement `then`-clause, it can appear on the same line as the `if`, without braces. In every other case, braces are required, and the `then` and `else` clauses must appear correctly indented on a new line.\r\n",
    "created_at": "2020-01-05T02:14:29Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r363065195",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363065195"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r363065195"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363065195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3386,
    "side": "RIGHT",
    "in_reply_to_id": 355224044
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363125902",
    "pull_request_review_id": 338429520,
    "id": 363125902,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyNTkwMg==",
    "diff_hunk": "@@ -2914,9 +2888,8 @@ static UniValue listunspent(const JSONRPCRequest& request)\n         cctl.m_avoid_address_reuse = false;\n         cctl.m_min_depth = nMinDepth;\n         cctl.m_max_depth = nMaxDepth;\n-        auto locked_chain = pwallet->chain().lock();\n         LOCK(pwallet->cs_wallet);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 391,
    "original_position": 413,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "e4da8745643e69ccabce2f77c5e810dd09421c01",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Move this up and remove the lock in L2922.",
    "created_at": "2020-01-05T23:43:14Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r363125902",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363125902"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r363125902"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/363125902/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2917,
    "original_line": 2917,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364069290",
    "pull_request_review_id": 339652948,
    "id": 364069290,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2OTI5MA==",
    "diff_hunk": "@@ -2914,9 +2888,8 @@ static UniValue listunspent(const JSONRPCRequest& request)\n         cctl.m_avoid_address_reuse = false;\n         cctl.m_min_depth = nMinDepth;\n         cctl.m_max_depth = nMaxDepth;\n-        auto locked_chain = pwallet->chain().lock();\n         LOCK(pwallet->cs_wallet);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 391,
    "original_position": 413,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "e4da8745643e69ccabce2f77c5e810dd09421c01",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You mean the main wallet lock just after ? I think some other wallet locks can also be removed in other places and that would be better to do it in a follow-up PR with dedicated thinking.",
    "created_at": "2020-01-08T05:30:47Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r364069290",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364069290"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r364069290"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/364069290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2917,
    "original_line": 2917,
    "side": "RIGHT",
    "in_reply_to_id": 363125902
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366620870",
    "pull_request_review_id": 342899684,
    "id": 366620870,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYyMDg3MA==",
    "diff_hunk": "@@ -51,79 +46,74 @@ class Wallet;\n //! * The handleRpc, registerRpcs, rpcEnableDeprecated methods and other RPC\n //!   methods can go away if wallets listen for HTTP requests on their own\n //!   ports instead of registering to handle requests on the node HTTP port.\n+//!\n+//! * Move fee estimation queries to an asynchronous interface and let the\n+//!   wallet cache it, fee estimation being driven by node mempool, wallet\n+//!   should be the consumer.\n+//!\n+//! * The `guesVerificationProgress`, `getBlockHeight`, `getBlockHash`, etc",
    "path": "src/interfaces/chain.h",
    "position": null,
    "original_position": 21,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "ac05c8b8119e4f0a055a26a98d69e4b6cbfdd2c1",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "s/guesVerificationProgress/guessVerificationProgress",
    "created_at": "2020-01-14T23:09:01Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r366620870",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366620870"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r366620870"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366620870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366621805",
    "pull_request_review_id": 342899684,
    "id": 366621805,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYyMTgwNQ==",
    "diff_hunk": "@@ -2412,11 +2403,10 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nC\n \n     // Acquire the locks to prevent races to the new locked unspents between the",
    "path": "src/wallet/wallet.cpp",
    "position": 202,
    "original_position": 259,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "ac05c8b8119e4f0a055a26a98d69e4b6cbfdd2c1",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "S/Acquire the locks/Acquire the wallet lock",
    "created_at": "2020-01-14T23:11:39Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r366621805",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366621805"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r366621805"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366621805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2540,
    "original_line": 2540,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366625752",
    "pull_request_review_id": 342899684,
    "id": 366625752,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYyNTc1Mg==",
    "diff_hunk": "@@ -3800,24 +3776,34 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n-    auto locked_chain = chain.lock();\n     LOCK(walletInstance->cs_wallet);\n \n+    // Register wallet with validationinterface. It's done before rescan to avoid",
    "path": "src/wallet/wallet.cpp",
    "position": 313,
    "original_position": 475,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "ac05c8b8119e4f0a055a26a98d69e4b6cbfdd2c1",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This comment is a bit difficult to parse. My suggested wording:\r\n\r\n> Register wallet with validationinterface. We do this before rescan so there isn't a window between the end of the rescan and subscribing to the validation interface where the wallet could miss block connections.\r\n> \r\n> Because the wallet lock is held, block connection notifications will be queued in the validation interface until the lock is released. It's possible that some of the blocks in the rescan will also be recieved over the validation interface, but we guarantee that wallet state is correct after the block connected notifications.\r\n\r\nI suggest you drop the \"This is temporary until rescan and notifications delivery are unified under same interface.\" part. It's better to avoid adding code comments which say what you want to do in future work.",
    "created_at": "2020-01-14T23:24:22Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r366625752",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366625752"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r366625752"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/366625752/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3906,
    "original_line": 3906,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/367141600",
    "pull_request_review_id": 343566228,
    "id": 367141600,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE0MTYwMA==",
    "diff_hunk": "@@ -3800,24 +3776,34 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n-    auto locked_chain = chain.lock();\n     LOCK(walletInstance->cs_wallet);\n \n+    // Register wallet with validationinterface. It's done before rescan to avoid",
    "path": "src/wallet/wallet.cpp",
    "position": 313,
    "original_position": 475,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "ac05c8b8119e4f0a055a26a98d69e4b6cbfdd2c1",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> It's better to avoid adding code comments which say what you want to do in future work.\r\n\r\nI kind of have the opposite reaction, but maybe a compromise would be to phrase it more like \"here is a limitation of the current code, and how it could be overcome\" instead of \"this is temporary and will be fixed later\"\r\n\r\n",
    "created_at": "2020-01-15T22:29:34Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r367141600",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/367141600"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r367141600"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/367141600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3906,
    "original_line": 3906,
    "side": "RIGHT",
    "in_reply_to_id": 366625752
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375503980",
    "pull_request_review_id": 354035487,
    "id": 375503980,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUwMzk4MA==",
    "diff_hunk": "@@ -330,13 +330,8 @@ class WalletImpl : public Wallet\n         if (mi == m_wallet->mapWallet.end()) {\n             return false;\n         }\n-        if (Optional<int> height = locked_chain->getHeight()) {\n-            num_blocks = *height;\n-            block_time = locked_chain->getBlockTime(*height);\n-        } else {\n-            num_blocks = -1;\n-            block_time = -1;\n-        }\n+        num_blocks = m_wallet->GetLastBlockHeight();\n+        block_time = locked_chain->getBlockTime(num_blocks);",
    "path": "src/interfaces/wallet.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "45703bee7e368f4d32676b8b22541c9fdf962181",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getHeight from Chain::Lock interface to simple Chain\" (45703bee7e368f4d32676b8b22541c9fdf962181):\r\n\r\nNote #17954 takes a different approach, returning the actual block time of the last wallet block processed instead of trying to call `locked_chain->getBlockTime` which could return a different block time or even assert false if the height is too big.",
    "created_at": "2020-02-05T20:58:29Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375503980",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375503980"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375503980"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375503980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 334,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375505616",
    "pull_request_review_id": 354035487,
    "id": 375505616,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUwNTYxNg==",
    "diff_hunk": "@@ -565,8 +565,8 @@ UniValue importwallet(const JSONRPCRequest& request)\n         if (!file.is_open()) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot open wallet dump file\");\n         }\n-        Optional<int> tip_height = locked_chain->getHeight();\n-        nTimeBegin = tip_height ? locked_chain->getBlockTime(*tip_height) : 0;\n+        Optional<int> tip_height = pwallet->chain().getHeight();\n+        nTimeBegin = locked_chain->getBlockTime(*tip_height);",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "45703bee7e368f4d32676b8b22541c9fdf962181",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getHeight from Chain::Lock interface to simple Chain\" (45703bee7e368f4d32676b8b22541c9fdf962181):\r\n\r\nNote #17954 takes a different approach, using block time of the last wallet block processed, which should give a more correct rescan time",
    "created_at": "2020-02-05T21:02:01Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375505616",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375505616"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375505616"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375505616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 568,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 569,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375507428",
    "pull_request_review_id": 354035487,
    "id": 375507428,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUwNzQyOA==",
    "diff_hunk": "@@ -790,9 +790,9 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     // produce output\n     file << strprintf(\"# Wallet dump created by Bitcoin %s\\n\", CLIENT_BUILD);\n     file << strprintf(\"# * Created on %s\\n\", FormatISO8601DateTime(GetTime()));\n-    const Optional<int> tip_height = locked_chain->getHeight();\n-    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height.get_value_or(-1), tip_height ? locked_chain->getBlockHash(*tip_height).ToString() : \"(missing block hash)\");\n-    file << strprintf(\"#   mined on %s\\n\", tip_height ? FormatISO8601DateTime(locked_chain->getBlockTime(*tip_height)) : \"(missing block time)\");\n+    int tip_height = pwallet->GetLastBlockHeight();\n+    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height, locked_chain->getBlockHash(tip_height).ToString());\n+    file << strprintf(\"#   mined on %s\\n\", FormatISO8601DateTime(locked_chain->getBlockTime(tip_height)));",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "45703bee7e368f4d32676b8b22541c9fdf962181",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getHeight from Chain::Lock interface to simple Chain\" (45703bee7e368f4d32676b8b22541c9fdf962181):\r\n\r\nNote #17954 takes a different approach, using block hash and time of the last wallet block processed, which gives more correct information and avoids possibility of getBlockHash and getBlockTime asserting false",
    "created_at": "2020-02-05T21:05:59Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375507428",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375507428"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375507428"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375507428/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 793,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 795,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375509194",
    "pull_request_review_id": 354035487,
    "id": 375509194,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUwOTE5NA==",
    "diff_hunk": "@@ -1365,8 +1365,8 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n         EnsureWalletIsUnlocked(pwallet);\n \n         // Verify all timestamps are present before importing any keys.\n-        const Optional<int> tip_height = locked_chain->getHeight();\n-        now = tip_height ? locked_chain->getBlockMedianTimePast(*tip_height) : 0;\n+        const Optional<int> tip_height = pwallet->chain().getHeight();\n+        now = locked_chain->getBlockMedianTimePast(*tip_height);",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "45703bee7e368f4d32676b8b22541c9fdf962181",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getHeight from Chain::Lock interface to simple Chain\" (45703bee7e368f4d32676b8b22541c9fdf962181):\r\n\r\nNote #17954 takes a different approach, using block hash and time of the last wallet block processed, which should choose a better rescan time and avoid possibility of getBlockMedianTimePast asserting false",
    "created_at": "2020-02-05T21:10:02Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375509194",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375509194"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375509194"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375509194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1368,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1369,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375512368",
    "pull_request_review_id": 354035487,
    "id": 375512368,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUxMjM2OA==",
    "diff_hunk": "@@ -1634,8 +1634,8 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n         --*altheight;\n     }\n \n-    int last_height = tip_height ? *tip_height + 1 - target_confirms : -1;\n-    uint256 lastblock = last_height >= 0 ? locked_chain->getBlockHash(last_height) : uint256();\n+    int lastheight = tip_height + 1 - target_confirms;\n+    uint256 lastblock = lastheight >= 0 ? locked_chain->getBlockHash(lastheight) : uint256();",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 54,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "45703bee7e368f4d32676b8b22541c9fdf962181",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getHeight from Chain::Lock interface to simple Chain\" (45703bee7e368f4d32676b8b22541c9fdf962181):\r\n\r\nNote: #17954 takes a different approach here, setting lastblock to the ancestor block of the last wallet block processed, which should be more correct and avoid the possibility of getBlockHash asserting false",
    "created_at": "2020-02-05T21:17:12Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375512368",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375512368"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375512368"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375512368/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 1637,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 1638,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375514397",
    "pull_request_review_id": 354035487,
    "id": 375514397,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUxNDM5Nw==",
    "diff_hunk": "@@ -3527,7 +3527,7 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n     uint256 start_block, stop_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        Optional<int> tip_height = locked_chain->getHeight();\n+        Optional<int> tip_height = pwallet->chain().getHeight();",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 63,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "45703bee7e368f4d32676b8b22541c9fdf962181",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getHeight from Chain::Lock interface to simple Chain\" (45703bee7e368f4d32676b8b22541c9fdf962181):\r\n\r\nNote: #17954 takes a different approach here, using the height of the last wallet block processed, which gives better error feedback if the wallet sync is behind and avoids the possibility of getBlockHash asserting false below",
    "created_at": "2020-02-05T21:21:41Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375514397",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375514397"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375514397"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375514397/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3530,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375517384",
    "pull_request_review_id": 354035487,
    "id": 375517384,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUxNzM4NA==",
    "diff_hunk": "@@ -152,6 +152,10 @@ BOOST_FIXTURE_TEST_CASE(importmulti_rescan, TestChain100Setup)\n     // after.\n     {\n         std::shared_ptr<CWallet> wallet = std::make_shared<CWallet>(chain.get(), WalletLocation(), WalletDatabase::CreateDummy());\n+        {\n+            LOCK(wallet->cs_wallet);\n+            wallet->SetLastBlockProcessed(::ChainActive().Height(), ::ChainActive().Tip()->GetBlockHash());\n+        }",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 7,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "45703bee7e368f4d32676b8b22541c9fdf962181",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getHeight from Chain::Lock interface to simple Chain\" (45703bee7e368f4d32676b8b22541c9fdf962181):\r\n\r\nNote: #17954 is pretty similar but adds SetLastBlockProcessed in slightly different places and uses `WITH_LOCK` shorthand",
    "created_at": "2020-02-05T21:27:43Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375517384",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375517384"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375517384"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375517384/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 155,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 158,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375521230",
    "pull_request_review_id": 354035487,
    "id": 375521230,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUyMTIzMA==",
    "diff_hunk": "@@ -1551,7 +1551,7 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n     {\n         auto locked_chain = chain().lock();\n         const Optional<int> start_height = locked_chain->findFirstBlockWithTimeAndHeight(startTime - TIMESTAMP_WINDOW, 0, &start_block);\n-        const Optional<int> tip_height = locked_chain->getHeight();\n+        const Optional<int> tip_height = chain().getHeight();",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "45703bee7e368f4d32676b8b22541c9fdf962181",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getHeight from Chain::Lock interface to simple Chain\" (45703bee7e368f4d32676b8b22541c9fdf962181):\r\n\r\nNote: #17954 takes a different approach here, using the last wallet processed height as the tip height which I think makes the log statement more technically correct (even though it's kind of a weird number to print since the eventual number of blocks scanned could be different).",
    "created_at": "2020-02-05T21:36:04Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375521230",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375521230"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375521230"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375521230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1554,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375526935",
    "pull_request_review_id": 354035487,
    "id": 375526935,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUyNjkzNQ==",
    "diff_hunk": "@@ -2444,13 +2444,14 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nC\n     return true;\n }\n \n-static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, interfaces::Chain::Lock& locked_chain)\n+static bool IsCurrentForAntiFeeSniping(interfaces::Chain& chain, int block_height)\n {\n     if (chain.isInitialBlockDownload()) {\n         return false;\n     }\n     constexpr int64_t MAX_ANTI_FEE_SNIPING_TIP_AGE = 8 * 60 * 60; // in seconds\n-    if (locked_chain.getBlockTime(*locked_chain.getHeight()) < (GetTime() - MAX_ANTI_FEE_SNIPING_TIP_AGE)) {\n+    auto locked_chain = chain.lock();\n+    if (locked_chain->getBlockTime(block_height) < (GetTime() - MAX_ANTI_FEE_SNIPING_TIP_AGE)) {",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 49,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "45703bee7e368f4d32676b8b22541c9fdf962181",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getHeight from Chain::Lock interface to simple Chain\" (45703bee7e368f4d32676b8b22541c9fdf962181):\r\n\r\nNote: #17954 takes a different approach here, using the block time of the last wallet processed block, instead of calling getBlockTime with an out of sync height number which potentially return a strange value or assert false",
    "created_at": "2020-02-05T21:48:08Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375526935",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375526935"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375526935"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375526935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2454,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375530001",
    "pull_request_review_id": 354035487,
    "id": 375530001,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUzMDAwMQ==",
    "diff_hunk": "@@ -359,7 +359,8 @@ UniValue importprunedfunds(const JSONRPCRequest& request)\n     }\n \n     auto locked_chain = pwallet->chain().lock();\n-    Optional<int> height = locked_chain->getBlockHeight(merkleBlock.header.GetHash());\n+    LOCK(pwallet->cs_wallet);\n+    Optional<int> height = pwallet->chain().getBlockHeight(merkleBlock.header.GetHash());",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "4ac9330ad5d61e63983e2cf749e365389cef15c9",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getBlockHeight from Chain::Lock interface to simple Chain\" (4ac9330ad5d61e63983e2cf749e365389cef15c9)\r\n\r\nNote: #17954 takes a slightly different approach and is a little more strict, raising an error if merkle block is not an ancestor of the wallet last processed block (even if it is an ancestor of the node tip)",
    "created_at": "2020-02-05T21:54:52Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375530001",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375530001"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r375530001"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375530001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 363,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376048912",
    "pull_request_review_id": 354035487,
    "id": 376048912,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0ODkxMg==",
    "diff_hunk": "@@ -3392,17 +3392,15 @@ void CWallet::GetKeyBirthTimes(interfaces::Chain::Lock& locked_chain, std::map<C\n \n     // find first block that affects those keys, if there are any left\n     for (const auto& entry : mapWallet) {\n-        // iterate over all wallet transactions...\n+        // iterate over all wallet transactions which are already in a block\n         const CWalletTx &wtx = entry.second;\n-        if (Optional<int> height = locked_chain.getBlockHeight(wtx.m_confirm.hashBlock)) {\n-            // ... which are already in a block\n-            for (const CTxOut &txout : wtx.tx->vout) {\n-                // iterate over all their outputs\n-                for (const auto &keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n-                    // ... and all their affected keys\n-                    std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n-                    if (rit != mapKeyFirstBlock.end() && *height < rit->second)\n-                        rit->second = *height;\n+        for (const CTxOut& txout : wtx.tx->vout) {\n+            // iterate over all their outputs\n+            for (const auto& keyid : GetAffectedKeys(txout.scriptPubKey, *spk_man)) {\n+                // ... and all their affected keys\n+                std::map<CKeyID, int>::iterator rit = mapKeyFirstBlock.find(keyid);\n+                if (rit != mapKeyFirstBlock.end() && wtx.m_confirm.block_height < rit->second) {\n+                    rit->second = wtx.m_confirm.block_height;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 73,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "4ac9330ad5d61e63983e2cf749e365389cef15c9",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getBlockHeight from Chain::Lock interface to simple Chain\" (4ac9330ad5d61e63983e2cf749e365389cef15c9)\r\n\r\nThere doesn't seem to be anything here excluding conflicted transactions now that getBlockHeight is called. Also it seems like getBlockTime call below could assert false if the wallet is behind sync and height is out of bounds. #17954 takes a different approach here just sticking with confirmation data in the wallet and not complicating things by involving the current node tip & active chain",
    "created_at": "2020-02-06T19:54:31Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376048912",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376048912"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376048912"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376048912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3403,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376050681",
    "pull_request_review_id": 354035487,
    "id": 376050681,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA1MDY4MQ==",
    "diff_hunk": "@@ -125,6 +122,10 @@ class Chain\n     //! included in the current chain.\n     virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n \n+    //! Get block hash. Returns nullopt for a block not included in the\n+    //! current chain.\n+    virtual Optional<uint256> getBlockHash(int height) = 0;",
    "path": "src/interfaces/chain.h",
    "position": null,
    "original_position": 16,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "51addd56eccda4dd91843920ae7a929af4ba8d60",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getBlockHash from Chain::Lock interface to simple Chain\" (51addd56eccda4dd91843920ae7a929af4ba8d60)\r\n\r\nWould prefer not to have to add this method. It just seems inherently racy to be looking up a block based on height with no lock held. #17954 avoids the need to add this by changing more wallet code to use hashes instead of heights",
    "created_at": "2020-02-06T19:58:11Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376050681",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376050681"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376050681"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376050681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 125,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 127,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376052137",
    "pull_request_review_id": 354035487,
    "id": 376052137,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA1MjEzNw==",
    "diff_hunk": "@@ -790,7 +790,8 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     file << strprintf(\"# Wallet dump created by Bitcoin %s\\n\", CLIENT_BUILD);\n     file << strprintf(\"# * Created on %s\\n\", FormatISO8601DateTime(GetTime()));\n     int tip_height = pwallet->GetLastBlockHeight();\n-    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height, locked_chain->getBlockHash(tip_height).ToString());\n+    Optional<uint256> block_hash = pwallet->chain().getBlockHash(tip_height);\n+    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height, block_hash ? (*block_hash).ToString() : \"(missing block hash)\");",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "51addd56eccda4dd91843920ae7a929af4ba8d60",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getBlockHash from Chain::Lock interface to simple Chain\" (51addd56eccda4dd91843920ae7a929af4ba8d60)\r\n\r\nCould write `block_hash->` instead of `(*block_hash).` #17954 also takes a different approach of using wallet last processed block hash, which I think is more consistent",
    "created_at": "2020-02-06T20:01:15Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376052137",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376052137"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376052137"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376052137/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 794,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376054419",
    "pull_request_review_id": 354035487,
    "id": 376054419,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA1NDQxOQ==",
    "diff_hunk": "@@ -1634,8 +1634,8 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n         --*altheight;\n     }\n \n-    int lastheight = tip_height + 1 - target_confirms;\n-    uint256 lastblock = lastheight >= 0 ? locked_chain->getBlockHash(lastheight) : uint256();\n+    Optional<uint256> lastblock_hash = pwallet->chain().getBlockHash(tip_height + 1 - target_confirms);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "51addd56eccda4dd91843920ae7a929af4ba8d60",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getBlockHash from Chain::Lock interface to simple Chain\" (51addd56eccda4dd91843920ae7a929af4ba8d60)\r\n\r\nI don't think this is going to do the right thing after Chain::Lock is removed from the code. This is going to return last black hash relative to the node tip, which can vary while this code is running, instead of relative to the wallet last block processed tip, which should be fixed. #17954 uses a more consistent approach ignoring the node tip.",
    "created_at": "2020-02-06T20:05:52Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376054419",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376054419"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376054419"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376054419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1637,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376055297",
    "pull_request_review_id": 354035487,
    "id": 376055297,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA1NTI5Nw==",
    "diff_hunk": "@@ -3553,14 +3552,24 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         }\n \n         if (tip_height) {\n-            start_block = locked_chain->getBlockHash(start_height);\n+            Optional<uint256> block_hash = pwallet->chain().getBlockHash(start_height);\n+            if (block_hash) {\n+                start_block = *block_hash;\n+            } else {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"start_block has been reorged out of main chain\");\n+            }\n             // If called with a stop_height, set the stop_height here to\n             // trigger a rescan to that height.\n             // If called without a stop height, leave stop_height as null here\n             // so rescan continues to the tip (even if the tip advances during\n             // rescan).\n-            if (stop_height) {\n-                stop_block = locked_chain->getBlockHash(*stop_height);\n+            if (stop_height >= 0) {\n+                Optional<uint256> block_hash = pwallet->chain().getBlockHash(stop_height);\n+                if (block_hash) {\n+                    stop_block = *block_hash;\n+                } else {\n+                    throw JSONRPCError(RPC_MISC_ERROR, \"stop_block has been reorged out of main chain\");",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 51,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "51addd56eccda4dd91843920ae7a929af4ba8d60",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getBlockHash from Chain::Lock interface to simple Chain\" (51addd56eccda4dd91843920ae7a929af4ba8d60)\r\n\r\nIMO would be better to just continuing using the height value passed, rather than throwing an error if the node tip changes in the background. Implementing this actually makes things simpler since it doesn't require these extra checks. This is done in #17954",
    "created_at": "2020-02-06T20:07:50Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376055297",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376055297"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376055297"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376055297/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3571,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376069677",
    "pull_request_review_id": 354035487,
    "id": 376069677,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA2OTY3Nw==",
    "diff_hunk": "@@ -1666,12 +1662,21 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n             }\n \n             // increment block and verification progress\n-            block_hash = locked_chain->getBlockHash(++*block_height);\n+            Optional<uint256> optional_block_hash = chain().getBlockHash(++*block_height);\n+            if (!optional_block_hash) {\n+                break;\n+            }\n+            block_hash = *optional_block_hash;\n+            auto locked_chain = chain().lock();\n             progress_current = chain().guessVerificationProgress(block_hash);\n \n             // handle updated tip hash\n             const uint256 prev_tip_hash = tip_hash;\n-            tip_hash = locked_chain->getBlockHash(*tip_height);\n+            Optional<uint256> optional_tip_hash = chain().getBlockHash(*tip_height);\n+            if (!optional_tip_hash) {\n+                break;",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 40,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "51addd56eccda4dd91843920ae7a929af4ba8d60",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getBlockHash from Chain::Lock interface to simple Chain\" (51addd56eccda4dd91843920ae7a929af4ba8d60)\r\n\r\nIt's not right to completely stop scanning the entire chain just because the tip block happened to be reorged away, and returning success as if the scan completed. I'm pretty sure rescan code is already somewhat broken and returning success in cases where it should return failure, but this change could making it a lot more fragile by essentially skipping the entire scan. #17954 does better here by just trying to rescan to the wallet last block processed instead of the node tip",
    "created_at": "2020-02-06T20:39:44Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376069677",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376069677"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376069677"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376069677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1677,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376070928",
    "pull_request_review_id": 354035487,
    "id": 376070928,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA3MDkyOA==",
    "diff_hunk": "@@ -244,6 +237,15 @@ class ChainImpl : public Chain\n         }\n         return nullopt;\n     }\n+    Optional<int64_t> getBlockTime(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        if (block != nullptr) {\n+            return block->GetBlockTime();\n+        }\n+        return nullopt;\n+    }",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 26,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "998597bfc4ca8fd0e205f261e79509fa999565a0",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getBlockTime from Chain::Lock interface to simple Chain\" (998597bfc4ca8fd0e205f261e79509fa999565a0)\r\n\r\nAgain would prefer not to add this method, because it seems inherently racy to look up block data by height when no lock is held and the active chain can change at any time. #17954 avoids the need for this by using findBlock and looking up blocks by hash. It makes all the getBlockTime calls sites in this commit more robust when there are reorgs",
    "created_at": "2020-02-06T20:42:38Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376070928",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376070928"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376070928"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376070928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 240,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 206,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376073059",
    "pull_request_review_id": 354035487,
    "id": 376073059,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA3MzA1OQ==",
    "diff_hunk": "@@ -3412,8 +3412,10 @@ void CWallet::GetKeyBirthTimes(interfaces::Chain::Lock& locked_chain, std::map<C\n     }\n \n     // Extract block timestamps for those keys\n-    for (const auto& entry : mapKeyFirstBlock)\n-        mapKeyBirth[entry.first] = locked_chain.getBlockTime(entry.second) - TIMESTAMP_WINDOW; // block times can be 2h off\n+    for (const auto& entry : mapKeyFirstBlock) {\n+        Optional<int64_t> block_time = chain().getBlockTime(entry.second);\n+        mapKeyBirth[entry.first] = !block_time ? 0 : *block_time - TIMESTAMP_WINDOW; // block times can be 2h off",
    "path": "src/wallet/wallet.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "998597bfc4ca8fd0e205f261e79509fa999565a0",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getBlockTime from Chain::Lock interface to simple Chain\" (998597bfc4ca8fd0e205f261e79509fa999565a0)\r\n\r\n#17954 handles this differently by looking up blocks by hash and not setting 0 times when there is a reorg",
    "created_at": "2020-02-06T20:47:14Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376073059",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376073059"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376073059"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376073059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3417,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376076085",
    "pull_request_review_id": 354035487,
    "id": 376076085,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA3NjA4NQ==",
    "diff_hunk": "@@ -1369,8 +1369,11 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n         EnsureWalletIsUnlocked(pwallet);\n \n         // Verify all timestamps are present before importing any keys.\n-        const Optional<int> tip_height = pwallet->chain().getHeight();\n-        now = locked_chain->getBlockMedianTimePast(*tip_height);\n+        Optional<int> tip_height = pwallet->chain().getHeight();\n+        if (tip_height) {\n+            const Optional<int64_t> tip_mtp = pwallet->chain().getBlockMedianTimePast(*tip_height);\n+            now = tip_mtp ? *tip_mtp : 0;",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "b61867bd11bf797555c486223b6d4ce7dd290152",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move getBlockMedianTimePast from Chain::Lock interface to simple Chain\" (b61867bd11bf797555c486223b6d4ce7dd290152)\r\n\r\nThis seems like it could result in rescanning the entire chain if there's a reorg between get height and get time calls. It's be really unlikely, but this just seems unnecessarily fragile. #17954 avoids this using block hashes",
    "created_at": "2020-02-06T20:53:54Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376076085",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376076085"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376076085"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376076085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1375,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376078404",
    "pull_request_review_id": 354035487,
    "id": 376078404,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA3ODQwNA==",
    "diff_hunk": "@@ -127,6 +93,40 @@ class Chain\n     //! in the current chain.\n     virtual Optional<int64_t> getBlockMedianTimePast(int height) = 0;\n \n+    //! Check that the block is available on disk (i.e. has not been\n+    //! pruned), and contains transactions.\n+    virtual bool haveBlockOnDisk(int height) = 0;\n+\n+    //! Return height of the first block in the chain with timestamp equal\n+    //! or greater than the given time and height equal or greater than the\n+    //! given height, or nullopt if there is no block with a high enough\n+    //! timestamp and height. Also return the block hash as an optional output parameter\n+    //! (to avoid the cost of a second lookup in case this information is needed.)\n+    virtual Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height, uint256* hash) = 0;\n+\n+    //! Return height of last block in the specified range which is pruned, or\n+    //! nullopt if no block in the range is pruned. Range is inclusive.\n+    virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n+\n+    //! Return height of the specified block if it is on the chain, otherwise\n+    //! return the height of the highest block on chain that's an ancestor\n+    //! of the specified block, or nullopt if there is no common ancestor.\n+    //! Also return the height of the specified block as an optional output\n+    //! parameter (to avoid the cost of a second hash lookup in case this\n+    //! information is desired).\n+    virtual Optional<int> findFork(const uint256& hash, Optional<int>* height) = 0;\n+\n+    //! Get locator for the current chain tip.\n+    virtual CBlockLocator getTipLocator() = 0;\n+\n+    //! Return height of the highest block on chain in common with the locator,\n+    //! which will either be the original block used to create the locator,\n+    //! or one of its ancestors.\n+    virtual Optional<int> findLocatorFork(const CBlockLocator& locator) = 0;",
    "path": "src/interfaces/chain.h",
    "position": null,
    "original_position": 74,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "afa43f9560b57ae2b45b725ba80bd68f191bd690",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move multiple methods from Chain::Lock interface to simple Chain\" (afa43f9560b57ae2b45b725ba80bd68f191bd690)\r\n\r\nWould prefer not to add these methods returning only heights instead of hashes. With the locks removed in the next commit \"Remove locked_chain from CWallet\", the heights returned by these methods will not uniquely identify blocks and code will be inherently racy. #17954 does a better job here eliminiating these or changing them to return hashes",
    "created_at": "2020-02-06T20:58:42Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376078404",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376078404"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r376078404"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376078404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 96,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 113,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412461100",
    "pull_request_review_id": 397641925,
    "id": 412461100,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ2MTEwMA==",
    "diff_hunk": "@@ -3998,9 +3973,18 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n-    auto locked_chain = chain.lock();\n     LOCK(walletInstance->cs_wallet);\n \n+    // Register wallet with validationinterface. It's done before rescan to avoid\n+    // missing block connections between end of rescan and validation subscribing.\n+    // Because of wallet lock being hold, block connection notifications are going to\n+    // be pending on the validation-side until lock release. It's likely to have\n+    // block processing duplicata (if rescan block range overlaps with notification one)\n+    // but we guarantee at least than wallet state is correct after notifications delivery.\n+    // This is temporary until rescan and notifications delivery are unified under same\n+    // interface.\n+    walletInstance->m_chain_notifications_handler = walletInstance->chain().handleNotifications(walletInstance);",
    "path": "src/wallet/wallet.cpp",
    "position": 321,
    "original_position": 188,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "ef8c6ca60767cac589d98ca57ee33179608ccda8",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[wallet] Remove locked_chain from CWallet, its RPCs and tests\" (ef8c6ca60767cac589d98ca57ee33179608ccda8)\r\n\r\nNote I wrote a test to detect the race condition this early `handleNotifications` call prevents: 25651aad58b1f6e543f1ad565d821de46268e724 ([branch](https://github.com/ryanofsky/bitcoin/commits/review.16426.5-edit)). Most of the test works on master so I made a separate PR #18727 for it. There's just a few lines in 25651aad58b1f6e543f1ad565d821de46268e724 not in that PR, helping the test work with this PR",
    "created_at": "2020-04-21T20:15:32Z",
    "updated_at": "2020-04-30T19:01:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412461100",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412461100"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412461100"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412461100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3914,
    "original_line": 3914,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412473216",
    "pull_request_review_id": 397655474,
    "id": 412473216,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ3MzIxNg==",
    "diff_hunk": "@@ -135,6 +130,11 @@ class Chain\n     //! unlocked when the returned interface is freed.\n     virtual std::unique_ptr<Lock> lock(bool try_lock = false) = 0;\n \n+    //! Get current chain height, not including genesis block (returns 0 if\n+    //! chain only contains genesis block, nullopt if chain does not contain\n+    //! any blocks)\n+    virtual Optional<int> getHeight() = 0;",
    "path": "src/interfaces/chain.h",
    "position": 87,
    "original_position": 19,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "b4eb6aee0d259c3586894694a67928759503c823",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[wallet] Move getHeight from Chain::Lock interface to simple Chain\" (b4eb6aee0d259c3586894694a67928759503c823)\r\n\r\nNote: After this commit there's just a single Chain::getHeight() call remaining in CreateWalletFromFile, which #15719 then removes. I expect this PR will get merged before #15719, so just making a note about that.",
    "created_at": "2020-04-21T20:35:43Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412473216",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412473216"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412473216"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412473216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 86,
    "original_line": 86,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412481261",
    "pull_request_review_id": 397655474,
    "id": 412481261,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ4MTI2MQ==",
    "diff_hunk": "@@ -335,7 +335,7 @@ class WalletImpl : public Wallet\n         LOCK(m_wallet->cs_wallet);\n         auto mi = m_wallet->mapWallet.find(txid);\n         if (mi != m_wallet->mapWallet.end()) {\n-            num_blocks = locked_chain->getHeight().get_value_or(-1);\n+            num_blocks = m_wallet->GetLastBlockHeight();",
    "path": "src/interfaces/wallet.cpp",
    "position": 126,
    "original_position": 14,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "b4eb6aee0d259c3586894694a67928759503c823",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[wallet] Move getHeight from Chain::Lock interface to simple Chain\" (b4eb6aee0d259c3586894694a67928759503c823)\r\n\r\nNote: This change should just cause a very minor change behavior. Even more minor than other num_blocks changes previously discussed. The GUI isn't using the num_blocks value for polling, just for display in transaction html status",
    "created_at": "2020-04-21T20:49:00Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412481261",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412481261"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412481261"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412481261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 323,
    "original_line": 323,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412487403",
    "pull_request_review_id": 397655474,
    "id": 412487403,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ4NzQwMw==",
    "diff_hunk": "@@ -135,6 +130,11 @@ class Chain\n     //! any blocks)\n     virtual Optional<int> getHeight() = 0;\n \n+    //! Get block height above genesis block. Returns 0 for genesis block,\n+    //! 1 for following block, and so on. Returns nullopt for a block not\n+    //! included in the current chain.\n+    virtual Optional<int> getBlockHeight(const uint256& hash) = 0;",
    "path": "src/interfaces/chain.h",
    "position": 92,
    "original_position": 19,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "58f0deef83d82b8f132bab80999e60af6adde55f",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[wallet] Move getBlockHeight from Chain::Lock interface to simple Chain\" (58f0deef83d82b8f132bab80999e60af6adde55f)\r\n\r\nFeel free to ignore this suggestion, but instead of adding a new getBlockHeight method, code could call the existing `Chain::findBlock` method, and the returned `FoundBlock` could have a new `inChain(bool& in_chain)` output slot. This should save a little code, maybe make the in-chain restriction more obvious, reduce the number of Chain methods, and increase usefulness of other Chain methods which return FoundBlock",
    "created_at": "2020-04-21T20:59:41Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412487403",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412487403"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412487403"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412487403/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 91,
    "original_line": 91,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412493917",
    "pull_request_review_id": 397655474,
    "id": 412493917,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5MzkxNw==",
    "diff_hunk": "@@ -234,13 +124,104 @@ class ChainImpl : public Chain\n {\n public:\n     explicit ChainImpl(NodeContext& node) : m_node(node) {}\n-    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    Optional<int> getHeight() override\n+    {\n+        LOCK(cs_main);\n+        int height = ::ChainActive().Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = LookupBlockIndex(hash);\n+        if (block && ::ChainActive().Contains(block)) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<uint256> getBlockHash(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        if (block != nullptr) {\n+            return block->GetBlockHash();\n+        }\n+        return nullopt;\n+    }\n+    Optional<int64_t> getBlockTime(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        assert(block != nullptr);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 153,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "88b41a7c887844968724dbffc7f96c9395d61787",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[wallet] Move getBlockHash from Chain::Lock interface to simple Chain\" (c6fa030ca8a282a7906260186e93d8c8902aa5a4)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/16426#discussion_r362999187\r\n\r\n> Ooops, my bad, thanks should be corrected on latest tip.\r\n\r\nAssert is still present (maybe added back again)",
    "created_at": "2020-04-21T21:10:31Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412493917",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412493917"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412493917"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412493917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 170,
    "side": "RIGHT",
    "in_reply_to_id": 361516436
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412494509",
    "pull_request_review_id": 397655474,
    "id": 412494509,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5NDUwOQ==",
    "diff_hunk": "@@ -135,6 +132,9 @@ class Chain\n     //! included in the current chain.\n     virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n \n+    //! Get block hash. Height must be valid or this function will abort.\n+    virtual uint256 getBlockHash(int height) = 0;",
    "path": "src/interfaces/chain.h",
    "position": 95,
    "original_position": 15,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "c6fa030ca8a282a7906260186e93d8c8902aa5a4",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[wallet] Move getBlockHash from Chain::Lock interface to simple Chain\" (c6fa030ca8a282a7906260186e93d8c8902aa5a4)\r\n\r\nNote: After this commit, the only remaining Chain::getBlockHash() calls are in CreateWalletFromFile and are removed in #15719. I expect this PR will get merged before #15719, so just making a note about this.\r\n",
    "created_at": "2020-04-21T21:11:20Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412494509",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412494509"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412494509"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412494509/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 94,
    "original_line": 94,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412497779",
    "pull_request_review_id": 397655474,
    "id": 412497779,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ5Nzc3OQ==",
    "diff_hunk": "@@ -234,6 +225,15 @@ class ChainImpl : public Chain\n         std::unique_ptr<Chain::Lock> result = std::move(lock); // Temporary to avoid CWG 1579\n         return result;\n     }\n+    Optional<int> getHeight() override\n+    {\n+        WAIT_LOCK(cs_main, lock);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "b4eb6aee0d259c3586894694a67928759503c823",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[wallet] Move getHeight from Chain::Lock interface to simple Chain\" (b4eb6aee0d259c3586894694a67928759503c823)\r\n\r\nThis is fine, but in this commit and other commits throughout this PR could simplify `WAIT_LOCK(cs_main, lock)` to just `LOCK(cs_main)` since `lock` object is unused",
    "created_at": "2020-04-21T21:17:03Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412497779",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412497779"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412497779"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412497779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 230,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412502556",
    "pull_request_review_id": 397655474,
    "id": 412502556,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwMjU1Ng==",
    "diff_hunk": "@@ -135,6 +105,28 @@ class Chain\n     //! Get block hash. Height must be valid or this function will abort.\n     virtual uint256 getBlockHash(int height) = 0;\n \n+    //! Check that the block is available on disk (i.e. has not been\n+    //! pruned), and contains transactions.\n+    virtual bool haveBlockOnDisk(int height) = 0;",
    "path": "src/interfaces/chain.h",
    "position": 99,
    "original_position": 43,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "22d0fb127e99d6cdcaa003785a7278f58038b465",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[wallet] Move methods from Chain::Lock interface to simple Chain\" (22d0fb127e99d6cdcaa003785a7278f58038b465)\r\n\r\nNote: After this commit, the only remaining Chain::haveBlockOnDisk, findFirstBlockWithTimeAndHeight, getTipLocator, and findLocatorFork calls are in CreateWalletFromFile and are removed in #15719. I expect this PR will get merged before #15719, so just making a note about this.\r\n\r\nSimilarly, the Chain::checkFinalTx method can go away after #17443, which removes all those calls\r\n",
    "created_at": "2020-04-21T21:25:12Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412502556",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412502556"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412502556"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/412502556/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 98,
    "original_line": 98,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413422671",
    "pull_request_review_id": 398680271,
    "id": 413422671,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyMjY3MQ==",
    "diff_hunk": "@@ -135,6 +130,11 @@ class Chain\n     //! unlocked when the returned interface is freed.\n     virtual std::unique_ptr<Lock> lock(bool try_lock = false) = 0;\n \n+    //! Get current chain height, not including genesis block (returns 0 if\n+    //! chain only contains genesis block, nullopt if chain does not contain\n+    //! any blocks)\n+    virtual Optional<int> getHeight() = 0;",
    "path": "src/interfaces/chain.h",
    "position": 87,
    "original_position": 19,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "b4eb6aee0d259c3586894694a67928759503c823",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Okay looking through #15719, this solve the issue by doing wallet rescan on the server-side so you don't need to get current tip.",
    "created_at": "2020-04-23T00:26:54Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r413422671",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413422671"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r413422671"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413422671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 86,
    "original_line": 86,
    "side": "RIGHT",
    "in_reply_to_id": 412473216
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413423393",
    "pull_request_review_id": 398680948,
    "id": 413423393,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyMzM5Mw==",
    "diff_hunk": "@@ -335,7 +335,7 @@ class WalletImpl : public Wallet\n         LOCK(m_wallet->cs_wallet);\n         auto mi = m_wallet->mapWallet.find(txid);\n         if (mi != m_wallet->mapWallet.end()) {\n-            num_blocks = locked_chain->getHeight().get_value_or(-1);\n+            num_blocks = m_wallet->GetLastBlockHeight();",
    "path": "src/interfaces/wallet.cpp",
    "position": 126,
    "original_position": 14,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "b4eb6aee0d259c3586894694a67928759503c823",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`m_last_block_processed_height` is already initialized at `-1`, so behavior change is in case wallet isn't at tip right ? If yes, it should be more accurate.",
    "created_at": "2020-04-23T00:29:11Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r413423393",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413423393"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r413423393"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413423393/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 323,
    "original_line": 323,
    "side": "RIGHT",
    "in_reply_to_id": 412481261
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413425853",
    "pull_request_review_id": 398683287,
    "id": 413425853,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyNTg1Mw==",
    "diff_hunk": "@@ -234,13 +124,104 @@ class ChainImpl : public Chain\n {\n public:\n     explicit ChainImpl(NodeContext& node) : m_node(node) {}\n-    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    Optional<int> getHeight() override\n+    {\n+        LOCK(cs_main);\n+        int height = ::ChainActive().Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = LookupBlockIndex(hash);\n+        if (block && ::ChainActive().Contains(block)) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<uint256> getBlockHash(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        if (block != nullptr) {\n+            return block->GetBlockHash();\n+        }\n+        return nullopt;\n+    }\n+    Optional<int64_t> getBlockTime(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        assert(block != nullptr);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 153,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "88b41a7c887844968724dbffc7f96c9395d61787",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Corrected, effectively that's a rebase error. It's still present on master but removing `locked_chain` means you may have a reorg while calling `getBlockHash` in wallet creation rescan.",
    "created_at": "2020-04-23T00:36:34Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r413425853",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413425853"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r413425853"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413425853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 170,
    "side": "RIGHT",
    "in_reply_to_id": 361516436
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413426579",
    "pull_request_review_id": 398683952,
    "id": 413426579,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyNjU3OQ==",
    "diff_hunk": "@@ -135,6 +132,9 @@ class Chain\n     //! included in the current chain.\n     virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n \n+    //! Get block hash. Height must be valid or this function will abort.\n+    virtual uint256 getBlockHash(int height) = 0;",
    "path": "src/interfaces/chain.h",
    "position": 95,
    "original_position": 15,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "c6fa030ca8a282a7906260186e93d8c8902aa5a4",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes I have also #17484, #17443 which remove more interface methods to skim in after.",
    "created_at": "2020-04-23T00:38:57Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r413426579",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413426579"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r413426579"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413426579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 94,
    "original_line": 94,
    "side": "RIGHT",
    "in_reply_to_id": 412494509
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413428872",
    "pull_request_review_id": 398685972,
    "id": 413428872,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyODg3Mg==",
    "diff_hunk": "@@ -234,6 +225,15 @@ class ChainImpl : public Chain\n         std::unique_ptr<Chain::Lock> result = std::move(lock); // Temporary to avoid CWG 1579\n         return result;\n     }\n+    Optional<int> getHeight() override\n+    {\n+        WAIT_LOCK(cs_main, lock);",
    "path": "src/interfaces/chain.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "b4eb6aee0d259c3586894694a67928759503c823",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right, only difference between them is what is logged for debug, attributing a name for the lock for `WAIT_LOCK(cs_main, lock)`? They both declare `DebugLock<decltype>`. Updating",
    "created_at": "2020-04-23T00:45:52Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r413428872",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413428872"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r413428872"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413428872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 230,
    "side": "RIGHT",
    "in_reply_to_id": 412497779
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413433156",
    "pull_request_review_id": 398689746,
    "id": 413433156,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzMzE1Ng==",
    "diff_hunk": "@@ -135,6 +130,11 @@ class Chain\n     //! any blocks)\n     virtual Optional<int> getHeight() = 0;\n \n+    //! Get block height above genesis block. Returns 0 for genesis block,\n+    //! 1 for following block, and so on. Returns nullopt for a block not\n+    //! included in the current chain.\n+    virtual Optional<int> getBlockHeight(const uint256& hash) = 0;",
    "path": "src/interfaces/chain.h",
    "position": 92,
    "original_position": 19,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "58f0deef83d82b8f132bab80999e60af6adde55f",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Okay going to let it as it is, given it would need an extension of FoundBlock, and this being gauged by other reviewers. Let's keep diff straight.",
    "created_at": "2020-04-23T00:58:31Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r413433156",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413433156"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r413433156"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/413433156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 91,
    "original_line": 91,
    "side": "RIGHT",
    "in_reply_to_id": 412487403
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416327356",
    "pull_request_review_id": 401498020,
    "id": 416327356,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMyNzM1Ng==",
    "diff_hunk": "@@ -240,6 +240,10 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n         std::shared_ptr<CWallet> wallet = std::make_shared<CWallet>(chain.get(), WalletLocation(), WalletDatabase::CreateDummy());\n         LOCK(wallet->cs_wallet);\n         wallet->SetupLegacyScriptPubKeyMan();\n+        {",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "ac543129b33c0812efa56dea000a29bf96a15ea8",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is added here and then removed 2 commits later, and looks like a rebase error. I would love to have a comment pointing out that this is temporary to fix tests in between commits (assuming that's what it is). If you end up rebasing, adding would be great.",
    "created_at": "2020-04-28T04:59:28Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r416327356",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416327356"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r416327356"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416327356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 243,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416330331",
    "pull_request_review_id": 401498020,
    "id": 416330331,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMzMDMzMQ==",
    "diff_hunk": "@@ -51,79 +46,74 @@ class Wallet;\n //! * The handleRpc, registerRpcs, rpcEnableDeprecated methods and other RPC\n //!   methods can go away if wallets listen for HTTP requests on their own\n //!   ports instead of registering to handle requests on the node HTTP port.\n+//!\n+//! * Move fee estimation queries to an asynchronous interface and let the\n+//!   wallet cache it, fee estimation being driven by node mempool, wallet\n+//!   should be the consumer.\n+//!\n+//! * The `guesVerificationProgress`, `getBlockHeight`, `getBlockHash`, etc",
    "path": "src/interfaces/chain.h",
    "position": null,
    "original_position": 21,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "ac05c8b8119e4f0a055a26a98d69e4b6cbfdd2c1",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This typo is still present in current code.",
    "created_at": "2020-04-28T05:08:45Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r416330331",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416330331"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r416330331"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416330331/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 75,
    "side": "RIGHT",
    "in_reply_to_id": 366620870
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416358377",
    "pull_request_review_id": 401529500,
    "id": 416358377,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM1ODM3Nw==",
    "diff_hunk": "@@ -240,6 +240,10 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n         std::shared_ptr<CWallet> wallet = std::make_shared<CWallet>(chain.get(), WalletLocation(), WalletDatabase::CreateDummy());\n         LOCK(wallet->cs_wallet);\n         wallet->SetupLegacyScriptPubKeyMan();\n+        {",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "ac543129b33c0812efa56dea000a29bf96a15ea8",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah was a rebase error due to lock being added in between in another PR. Fixed, thanks!",
    "created_at": "2020-04-28T06:23:46Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r416358377",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416358377"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r416358377"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/416358377/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 243,
    "side": "RIGHT",
    "in_reply_to_id": 416327356
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417366808",
    "pull_request_review_id": 402733009,
    "id": 417366808,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM2NjgwOA==",
    "diff_hunk": "@@ -234,6 +227,12 @@ class ChainImpl : public Chain\n         }\n         return nullopt;\n     }\n+    uint256 getBlockHash(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        return block->GetBlockHash();",
    "path": "src/interfaces/chain.cpp",
    "position": 117,
    "original_position": 22,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "27b1af965ed9272496787663ea2869f05c2e5342",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "why remove the assert and make it undefined behavior?\r\n\r\n27b1af965e",
    "created_at": "2020-04-29T14:37:42Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417366808",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417366808"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417366808"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417366808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 171,
    "original_line": 171,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417374233",
    "pull_request_review_id": 402742265,
    "id": 417374233,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM3NDIzMw==",
    "diff_hunk": "@@ -586,6 +586,11 @@ BOOST_FIXTURE_TEST_CASE(wallet_disableprivkeys, TestChain100Setup)\n     auto chain = interfaces::MakeChain(node);\n     std::shared_ptr<CWallet> wallet = std::make_shared<CWallet>(chain.get(), WalletLocation(), WalletDatabase::CreateDummy());\n     wallet->SetupLegacyScriptPubKeyMan();\n+    {\n+        auto locked_chain = chain->lock();\n+        LOCK(wallet->cs_wallet);\n+        wallet->SetLastBlockProcessed(::ChainActive().Height(), ::ChainActive().Tip()->GetBlockHash());\n+    }",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "7c73c4888f5c4c3f24a180f2841429318463db7d",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why is this needed? 7c73c4888f",
    "created_at": "2020-04-29T14:46:48Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417374233",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417374233"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417374233"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417374233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 593,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417376070",
    "pull_request_review_id": 402744639,
    "id": 417376070,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM3NjA3MA==",
    "diff_hunk": "@@ -60,16 +60,16 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n }\n \n //! Construct wallet tx status struct.\n-WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n+WalletTxStatus MakeWalletTxStatus(CWallet& wallet, const CWalletTx& wtx)\n {\n     WalletTxStatus result;\n     result.block_height = wtx.m_confirm.block_height > 0 ? wtx.m_confirm.block_height : std::numeric_limits<int>::max();\n     result.blocks_to_maturity = wtx.GetBlocksToMaturity();\n     result.depth_in_main_chain = wtx.GetDepthInMainChain();\n     result.time_received = wtx.nTimeReceived;\n     result.lock_time = wtx.tx->nLockTime;\n-    result.is_final = locked_chain.checkFinalTx(*wtx.tx);\n-    result.is_trusted = wtx.IsTrusted(locked_chain);\n+    result.is_final = wallet.chain().checkFinalTx(*wtx.tx);",
    "path": "src/interfaces/wallet.cpp",
    "position": 15,
    "original_position": 15,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "9229faa752cdd7bc778a67a638effb273ad7de19",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "what is the risk of this getting out-of-sync with `result.block_height` or other members like `result.is_trusted`? 9229faa752",
    "created_at": "2020-04-29T14:49:12Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417376070",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417376070"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417376070"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417376070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 71,
    "original_line": 71,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417510374",
    "pull_request_review_id": 402912912,
    "id": 417510374,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUxMDM3NA==",
    "diff_hunk": "@@ -234,6 +227,12 @@ class ChainImpl : public Chain\n         }\n         return nullopt;\n     }\n+    uint256 getBlockHash(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        return block->GetBlockHash();",
    "path": "src/interfaces/chain.cpp",
    "position": 117,
    "original_position": 22,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "27b1af965ed9272496787663ea2869f05c2e5342",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417366808\r\n\r\n> why remove the assert and make it undefined behavior?\r\n> \r\n> [27b1af9](https://github.com/bitcoin/bitcoin/commit/27b1af965ed9272496787663ea2869f05c2e5342)\r\n\r\nI think it came from a suggestion I made https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412493917 that wasn't clear  about a desire not to crash :smile:. But this is only called one place where it's extremely unlikely to trigger (there'd have to be a very specific thread pre-emption at the same time as a reorg at the same time as loading a wallet)\r\n\r\nhttps://github.com/ariard/bitcoin/blob/49ecec42ea81e9cbf3970416ead79e18863dea87/src/wallet/wallet.cpp#L3927-L3929\r\n\r\nAlso this method should be removed with #15719\r\n\r\n",
    "created_at": "2020-04-29T18:05:20Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417510374",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417510374"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417510374"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417510374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 171,
    "original_line": 171,
    "side": "RIGHT",
    "in_reply_to_id": 417366808
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417510422",
    "pull_request_review_id": 402912912,
    "id": 417510422,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUxMDQyMg==",
    "diff_hunk": "@@ -60,16 +60,16 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n }\n \n //! Construct wallet tx status struct.\n-WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n+WalletTxStatus MakeWalletTxStatus(CWallet& wallet, const CWalletTx& wtx)\n {\n     WalletTxStatus result;\n     result.block_height = wtx.m_confirm.block_height > 0 ? wtx.m_confirm.block_height : std::numeric_limits<int>::max();\n     result.blocks_to_maturity = wtx.GetBlocksToMaturity();\n     result.depth_in_main_chain = wtx.GetDepthInMainChain();\n     result.time_received = wtx.nTimeReceived;\n     result.lock_time = wtx.tx->nLockTime;\n-    result.is_final = locked_chain.checkFinalTx(*wtx.tx);\n-    result.is_trusted = wtx.IsTrusted(locked_chain);\n+    result.is_final = wallet.chain().checkFinalTx(*wtx.tx);",
    "path": "src/interfaces/wallet.cpp",
    "position": 15,
    "original_position": 15,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "9229faa752cdd7bc778a67a638effb273ad7de19",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417376070\r\n\r\n> what is the risk of this getting out-of-sync with `result.block_height` or other members like `result.is_trusted`? [9229faa](https://github.com/bitcoin/bitcoin/commit/9229faa752cdd7bc778a67a638effb273ad7de19)\r\n\r\nI think only risk is gui briefly displaying transaction as final in the transaction HTML description before wallet processing catches up and other fields in the HTML description reflect that. This is probably a minor concern but #17443 should fix it",
    "created_at": "2020-04-29T18:05:26Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417510422",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417510422"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417510422"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417510422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 71,
    "original_line": 71,
    "side": "RIGHT",
    "in_reply_to_id": 417376070
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417511169",
    "pull_request_review_id": 402912912,
    "id": 417511169,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzUxMTE2OQ==",
    "diff_hunk": "@@ -586,6 +586,11 @@ BOOST_FIXTURE_TEST_CASE(wallet_disableprivkeys, TestChain100Setup)\n     auto chain = interfaces::MakeChain(node);\n     std::shared_ptr<CWallet> wallet = std::make_shared<CWallet>(chain.get(), WalletLocation(), WalletDatabase::CreateDummy());\n     wallet->SetupLegacyScriptPubKeyMan();\n+    {\n+        auto locked_chain = chain->lock();\n+        LOCK(wallet->cs_wallet);\n+        wallet->SetLastBlockProcessed(::ChainActive().Height(), ::ChainActive().Tip()->GetBlockHash());\n+    }",
    "path": "src/wallet/test/wallet_tests.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "7c73c4888f5c4c3f24a180f2841429318463db7d",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417374233\r\n\r\n> Why is this needed? [7c73c48](https://github.com/bitcoin/bitcoin/commit/7c73c4888f5c4c3f24a180f2841429318463db7d)\r\n\r\nIt does seem not to be needed anymore. Test passes for me with it commented out.",
    "created_at": "2020-04-29T18:06:48Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417511169",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417511169"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417511169"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417511169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 593,
    "side": "RIGHT",
    "in_reply_to_id": 417374233
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417555069",
    "pull_request_review_id": 402968590,
    "id": 417555069,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU1NTA2OQ==",
    "diff_hunk": "@@ -234,6 +227,12 @@ class ChainImpl : public Chain\n         }\n         return nullopt;\n     }\n+    uint256 getBlockHash(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        return block->GetBlockHash();",
    "path": "src/interfaces/chain.cpp",
    "position": 117,
    "original_position": 22,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "27b1af965ed9272496787663ea2869f05c2e5342",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> But this is only called one place where it's extremely unlikely to trigger\r\n\r\nSounds like an excellent use-case for `assert` instead of extremely unlikely undefined behavior. Especially given that the assert was there in the fist place.\r\n\r\nI don't see why removing the assert can simply wait until #15719 ",
    "created_at": "2020-04-29T19:22:48Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417555069",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417555069"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417555069"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417555069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 171,
    "original_line": 171,
    "side": "RIGHT",
    "in_reply_to_id": 417366808
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417560272",
    "pull_request_review_id": 402974798,
    "id": 417560272,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MDI3Mg==",
    "diff_hunk": "@@ -234,6 +227,12 @@ class ChainImpl : public Chain\n         }\n         return nullopt;\n     }\n+    uint256 getBlockHash(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        return block->GetBlockHash();",
    "path": "src/interfaces/chain.cpp",
    "position": 117,
    "original_position": 22,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "27b1af965ed9272496787663ea2869f05c2e5342",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree with @MarcoFalke here.",
    "created_at": "2020-04-29T19:32:01Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417560272",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417560272"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417560272"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417560272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 171,
    "original_line": 171,
    "side": "RIGHT",
    "in_reply_to_id": 417366808
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417584250",
    "pull_request_review_id": 403004764,
    "id": 417584250,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU4NDI1MA==",
    "diff_hunk": "@@ -234,6 +227,12 @@ class ChainImpl : public Chain\n         }\n         return nullopt;\n     }\n+    uint256 getBlockHash(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        return block->GetBlockHash();",
    "path": "src/interfaces/chain.cpp",
    "position": 117,
    "original_position": 22,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "27b1af965ed9272496787663ea2869f05c2e5342",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re: https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417555069\r\n\r\n> I don't see why removing the assert can simply wait until #15719\r\n\r\nOf course. My suggestion was never to remove the assert by segfaulting instead. Originally the suggestion was to return Optional https://github.com/bitcoin/bitcoin/pull/16426#discussion_r357761094. Just pointing out what's done here isn't too important because it's basically impossible to hit this condition and there's already a PR deleting the method",
    "created_at": "2020-04-29T20:15:41Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417584250",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417584250"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r417584250"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/417584250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 171,
    "original_line": 171,
    "side": "RIGHT",
    "in_reply_to_id": 417366808
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418060885",
    "pull_request_review_id": 403586189,
    "id": 418060885,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA2MDg4NQ==",
    "diff_hunk": "@@ -60,16 +60,16 @@ WalletTx MakeWalletTx(CWallet& wallet, const CWalletTx& wtx)\n }\n \n //! Construct wallet tx status struct.\n-WalletTxStatus MakeWalletTxStatus(interfaces::Chain::Lock& locked_chain, const CWalletTx& wtx)\n+WalletTxStatus MakeWalletTxStatus(CWallet& wallet, const CWalletTx& wtx)\n {\n     WalletTxStatus result;\n     result.block_height = wtx.m_confirm.block_height > 0 ? wtx.m_confirm.block_height : std::numeric_limits<int>::max();\n     result.blocks_to_maturity = wtx.GetBlocksToMaturity();\n     result.depth_in_main_chain = wtx.GetDepthInMainChain();\n     result.time_received = wtx.nTimeReceived;\n     result.lock_time = wtx.tx->nLockTime;\n-    result.is_final = locked_chain.checkFinalTx(*wtx.tx);\n-    result.is_trusted = wtx.IsTrusted(locked_chain);\n+    result.is_final = wallet.chain().checkFinalTx(*wtx.tx);",
    "path": "src/interfaces/wallet.cpp",
    "position": 15,
    "original_position": 15,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "9229faa752cdd7bc778a67a638effb273ad7de19",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh, I wasn't aware this is only used for the gui",
    "created_at": "2020-04-30T14:39:32Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r418060885",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418060885"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r418060885"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418060885/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 71,
    "original_line": 71,
    "side": "RIGHT",
    "in_reply_to_id": 417376070
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418206922",
    "pull_request_review_id": 403773108,
    "id": 418206922,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIwNjkyMg==",
    "diff_hunk": "@@ -234,6 +227,12 @@ class ChainImpl : public Chain\n         }\n         return nullopt;\n     }\n+    uint256 getBlockHash(int height) override\n+    {\n+        LOCK(::cs_main);\n+        CBlockIndex* block = ::ChainActive()[height];\n+        return block->GetBlockHash();",
    "path": "src/interfaces/chain.cpp",
    "position": 117,
    "original_position": 22,
    "commit_id": "6a72f26968cf931c985d8d4797b6264274cabd06",
    "original_commit_id": "27b1af965ed9272496787663ea2869f05c2e5342",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "By removing `cs_main` lock taking you may have now a block nullptr in the case where between `getHeight`/`findFirstBlockWithTimeAndHeight` and `getBlockHash` calls you have a thread taking `cs_main` lock, a reorg happening while at same time wallet loading. It's really unlikely but glad #15719 is cleaning this as a follow-up.",
    "created_at": "2020-04-30T18:28:06Z",
    "updated_at": "2020-04-30T19:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r418206922",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418206922"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16426#discussion_r418206922"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/418206922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 171,
    "original_line": 171,
    "side": "RIGHT",
    "in_reply_to_id": 417366808
  }
]