jgarzik,2012-07-04T04:23:39Z,"ACK on longpolling support in general.  Long polling turns out to be a useful way to avoid http callbacks, with all the authentication that that entails.\n\n1) it is ugly and fragile to unlock, cv, then relock.  Disappointing and would be nice if there were a better solution (note: that is not a NAK)\n\n2) does not pay attention to fShutdown\n\n3) ""BIP22 compliance"" smells more like self-promotion",https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-6752332,6752332,
jgarzik,2012-08-01T16:10:37Z,ACK longpolling support\n\nChange appears mostly ACK-worthy.  I worry about adding a new lock deep inside SetBestChain though.\n,https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-7431691,7431691,
BitcoinPullTester,2012-08-10T07:33:59Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/f1d42a05fe27d14f258ec5e1b15774dad583d458 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-7636048,7636048,
BitcoinPullTester,2012-08-13T11:11:01Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/650ea32bbd60ac149809333131bd887537afa477 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-7688951,7688951,
luke-jr,2012-08-13T17:50:50Z,Rebased\n,https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-7700110,7700110,
jgarzik,2012-09-04T16:11:28Z,"Re-rebase requested, now that BIP 22 is merged\n",https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-8268875,8268875,
luke-jr,2012-09-04T20:33:03Z,done\n,https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-8277735,8277735,
jgarzik,2012-09-05T01:08:02Z,"1) It accesses hashBestChain outside of locks.\n\n2) pointless wrapping inside do..while(0) block\n\n3) BIP 22 just says ""longpollid"" is a unique identifier.  This code treats it as a block hash, not a job id.  Thus, this change seems to hardcode unspoken assumptions about the longpollid.\n\n4) The code does not seem to notice TCP disconnections.  Surely you do not want the thread to continue wait",https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-8284609,8284609,
luke-jr,2012-09-05T01:58:13Z,"1) Where?\n\n2) That exists so it can be break'd out of. I suppose it could probably work just as well with yet another nested if, though.\n\n3) ""longpollid"" is unique per long poll event; bitcoind only has such events when a new block is found, so the previous block hash is a fair fit. Clarified BIP 22 on the nature of ""longpollid""'s uniqueness.\n\n4) Good idea, but I'm not sure how practical it ",https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-8285420,8285420,
BitcoinPullTester,2012-09-07T20:35:43Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/01e0e197ebb96cb14971c672b5704306e3ad0f1f for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-8378016,8378016,
luke-jr,2012-11-14T18:46:12Z,"Rebased without the while(0). I still don't see any hashBestChain accessing outside of locks, after looking over it again. With regard to TCP disconnects, I did look into this, but it seems not worth the effort considering:\n1) boost has no way to detect the socket being closed without reading\n2) it would violate the current layer abstraction we have in the RPC implementation\n3) while this is a ",https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-10378286,10378286,
jgarzik,2013-05-30T17:02:55Z,"No code objections.\n\nThe main question remaining on this, our oldest pullreq:  do we want/need it?\n",https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-18694165,18694165,
jeremysawicki,2013-06-04T08:48:34Z,"I tested this a while ago and did not find it suitable for deployment as is.\n1. The long polling only returns when a new block is found.  Ideally it should also return periodically to update the set of transactions.  (Do we really want to encourage mining without including a reasonably up-to-date set of transactions?)\n2. It doesn't handle application shutdown, so an open long polling request can",https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-18896443,18896443,
luke-jr,2013-07-17T00:09:35Z,"Err, no I didn't :(\n",https://github.com/bitcoin/bitcoin/pull/1355#issuecomment-21083503,21083503,
