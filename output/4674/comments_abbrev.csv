jgarzik,2014-08-11T01:32:07Z,"Several of the local includes are quite obviously used in script, such as crypto.  NAK as-is.\n",https://github.com/bitcoin/bitcoin/pull/4674#issuecomment-51734533,51734533,
BitcoinPullTester,2014-08-11T01:43:11Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4674_54f048158b1b9864b5119c5f7dc3f126182288c0/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4674#issuecomment-51735002,51735002,
jtimon,2014-08-11T03:03:36Z,"Those are included in hash, which is included in key, which is included in keystore.\nOtherwise the build would fail, no? \n",https://github.com/bitcoin/bitcoin/pull/4674#issuecomment-51738083,51738083,
sipa,2014-08-11T05:47:56Z,"You always want to include all _direct_ dependencies of a file. Doing so\nmakes it 1) clear which code you're depending on and 2) makes the codebase\nrobust against refactoring (for example, A depends on B, A and B both\ndepend on C; B is changed to no longer need C... if A didn't include C\ndirectly, this would cause build failures).\n\nAs a general rule, an indirect dependency should not hide a ",https://github.com/bitcoin/bitcoin/pull/4674#issuecomment-51743939,51743939,
jgarzik,2014-08-11T06:03:49Z,"Using an #include says ""I am using this API""   It does not matter if other headers also use that API; you cannot depend on that fact, as indirect dependencies may change.\n\nThis change makes the build more fragile and misunderstands how standard C/C++ header inclusion works.\n",https://github.com/bitcoin/bitcoin/pull/4674#issuecomment-51744659,51744659,
