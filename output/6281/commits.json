[
  {
    "sha": "f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMGQwZmM0YmU1MDU1MWQ4YmNiY2FjOTllZTBjMDhmZTUxMDdlMjRj",
    "commit": {
      "author": {
        "name": "pstratem",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-06-13T23:30:22Z"
      },
      "committer": {
        "name": "pstratem",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-07-08T17:59:38Z"
      },
      "message": "Trim txmempool to MAX_MEMPOOL_SIZE according to feerate",
      "tree": {
        "sha": "f79d855f2df5871505992650fc563c2e076333db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f79d855f2df5871505992650fc563c2e076333db"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "11576a57d2ee37aa421e0fce69e70751b5af9a61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11576a57d2ee37aa421e0fce69e70751b5af9a61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/11576a57d2ee37aa421e0fce69e70751b5af9a61"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 59,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b5f175558c57db00e155fb3ad933937fbfc2f528",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c",
        "patch": "@@ -283,6 +283,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-dbcache=<n>\", strprintf(_(\"Set database cache size in megabytes (%d to %d, default: %d)\"), nMinDbCache, nMaxDbCache, nDefaultDbCache));\n     strUsage += HelpMessageOpt(\"-loadblock=<file>\", _(\"Imports blocks from external blk000??.dat file\") + \" \" + _(\"on startup\"));\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n+    strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep at most <n> bytes of transactions in memory (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-par=<n>\", strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"),\n         -GetNumCores(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS));\n #ifndef WIN32"
      },
      {
        "sha": "e6d186ba114d9a864ec32fb64be3b1b7a5f283cc",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c",
        "patch": "@@ -923,6 +923,11 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, !IsInitialBlockDownload());\n+\n+        pool.removeOldTransactions(GetTime());\n+        pool.trimToMaxSize(chainActive.Height());\n+        if (!pool.exists(hash))\n+            return error(\"AcceptToMemoryPool: fee too small\");\n     }\n \n     SyncWithWallets(tx, NULL);"
      },
      {
        "sha": "3c949458cab67c06fbbf742f416465a6e5ab0ae8",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c",
        "patch": "@@ -13,6 +13,7 @@\n #include \"amount.h\"\n #include \"chain.h\"\n #include \"chainparams.h\"\n+#include \"consensus/consensus.h\"\n #include \"coins.h\"\n #include \"net.h\"\n #include \"primitives/block.h\"\n@@ -50,6 +51,8 @@ struct CNodeStateStats;\n static const bool DEFAULT_ALERTS = true;\n /** Default for -maxorphantx, maximum number of orphan transactions kept in memory */\n static const unsigned int DEFAULT_MAX_ORPHAN_TRANSACTIONS = 100;\n+/** Default for -maxmempool, maximum bytes of transactions kept in memory */\n+static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 288 * MAX_BLOCK_SIZE; // 48 hours worth of blocks\n /** The maximum size of a blk?????.dat file (since 0.8) */\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n /** The pre-allocation chunk size for blk?????.dat files (since 0.8) */"
      },
      {
        "sha": "7a23c30d0d48315b18505717a177b3c7e5cad0da",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 1,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c",
        "patch": "@@ -48,7 +48,7 @@ CTxMemPoolEntry::GetPriority(unsigned int currentHeight) const\n }\n \n CTxMemPool::CTxMemPool(const CFeeRate& _minRelayFee) :\n-    nTransactionsUpdated(0)\n+    nTransactionsUpdated(0), totalTxSize(0)\n {\n     // Sanity checks off by default for performance, because otherwise\n     // accepting transactions becomes O(N^2) where N is the number\n@@ -101,6 +101,7 @@ bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry,\n         mapNextTx[tx.vin[i].prevout] = CInPoint(&tx, i);\n     nTransactionsUpdated++;\n     totalTxSize += entry.GetTxSize();\n+\n     minerPolicyEstimator->processTransaction(entry, fCurrentEstimate);\n \n     return true;\n@@ -402,6 +403,51 @@ bool CTxMemPool::HasNoInputsOf(const CTransaction &tx) const\n     return true;\n }\n \n+void CTxMemPool::removeOldTransactions(int64_t nTime)\n+{\n+    std::list<uint256> removalQueue;\n+\n+    uint64_t nMaxMempoolSize = std::max((int64_t)0, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE));\n+    int64_t nCutOff = nTime - (nMaxMempoolSize / MAX_BLOCK_SIZE * 600);\n+\n+    BOOST_FOREACH(const PAIRTYPE(uint256, CTxMemPoolEntry)& entry, mempool.mapTx) {\n+        const uint256& hash = entry.first;\n+        const CTxMemPoolEntry& e = entry.second;\n+\n+        if (e.GetTime() < nCutOff) {\n+            removalQueue.push_back(hash);\n+        }\n+    }\n+\n+    BOOST_FOREACH(const uint256& hash, removalQueue) {\n+        std::list<CTransaction> removed;\n+        remove(mapTx[hash].GetTx(), removed, true);\n+    }\n+}\n+\n+void CTxMemPool::trimToMaxSize(unsigned int currentHeight) {\n+    uint64_t nMaxMempoolSize = std::max((int64_t)0, GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE));\n+    while (GetTotalTxSize() >= nMaxMempoolSize) {\n+        uint256 lowestFeeRateTransaction;\n+        CFeeRate lowestFeeRate(std::numeric_limits<int64_t>::max());\n+        std::list<uint256> removalQueue;\n+\n+        BOOST_FOREACH(const PAIRTYPE(uint256, CTxMemPoolEntry)& entry, mempool.mapTx) {\n+            const uint256& hash = entry.first;\n+            const CTxMemPoolEntry& e = entry.second;\n+            CFeeRate feeRate = CFeeRate(e.GetFee(), e.GetTxSize());\n+\n+            if (feeRate < lowestFeeRate) {\n+                lowestFeeRateTransaction = hash;\n+                lowestFeeRate = feeRate;\n+            }\n+        }\n+\n+        std::list<CTransaction> removed;\n+        remove(mapTx[lowestFeeRateTransaction].GetTx(), removed, true);\n+    }\n+}\n+\n CCoinsViewMemPool::CCoinsViewMemPool(CCoinsView *baseIn, CTxMemPool &mempoolIn) : CCoinsViewBacked(baseIn), mempool(mempoolIn) { }\n \n bool CCoinsViewMemPool::GetCoins(const uint256 &txid, CCoins &coins) const {"
      },
      {
        "sha": "fb64ab41b5ec168ce2b99681624d967b9decd9dc",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=f0d0fc4be50551d8bcbcac99ee0c08fe5107e24c",
        "patch": "@@ -162,6 +162,9 @@ class CTxMemPool\n     /** Write/Read estimates to disk */\n     bool WriteFeeEstimates(CAutoFile& fileout) const;\n     bool ReadFeeEstimates(CAutoFile& filein);\n+\n+    void removeOldTransactions(int64_t nTime);\n+    void trimToMaxSize(unsigned int currentHeight);\n };\n \n /** "
      }
    ]
  }
]