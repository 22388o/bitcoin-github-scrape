MarcoFalke,2019-10-15 19:25:20,"Slightly tend to NACK. What is this needed for?\n\nEffectively, a gui user will send the transaction twice (spending different coins), losing all their funds.",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-542366872,542366872,
jnewbery,2019-10-15 19:47:11,"@MarcoFalke \n> Slightly tend to NACK. What is this needed for?\n\nCurrently the function returns a bool, which is always `true`, but the callers have logic that depends on the return value.\n\n`CommitTransaction()` did previously return `true`/`false` based on success. That was removed in #9302 so that the `send___` RPC methods would return the txid even if the transaction failed to broadcas",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-542375108,542375108,
MarcoFalke,2019-10-15 20:45:00,"> From reading the PR, it looks to me like that change was unintentional.\n\nI am pretty sure it was intentional. At least that was my understanding, see https://github.com/bitcoin/bitcoin/pull/9302#issuecomment-266284389\n\nTo sum up, the wallet is only allowed to do one of the following:\n* Create a tx, sign it and add it to the wallet, so that it can be rebroadcast immediately or later, th",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-542396757,542396757,
DrahtBot,2019-10-15 20:47:37,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16966](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16966.html) (ui: make send a wizard by Sjors)\n* [#16411",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-542397716,542397716,
jnewbery,2019-10-15 20:59:29,"In that case, `CommitTransaction` should not return anything, and all the dead code in `if (!CommitTransaction())` blocks should be removed.",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-542402331,542402331,
MarcoFalke,2019-10-15 22:04:33,Fine with me,https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-542424765,542424765,
jnewbery,2019-10-16 15:19:48,"This PR now just changes `CommitTransaction` to return `void`, and deletes all dead code.\n\nAlso rebased on master.",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-542753869,542753869,
jnewbery,2019-10-16 20:48:11,Addressed @achow101 's review comment (thanks!),https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-542885044,542885044,
achow101,2019-10-16 21:19:18,ACK 1f490c9a5f8767477f6ffe382b4a0578dbac5e3e,https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-542896187,542896187,
promag,2019-10-17 13:12:08,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-543168024,543168024,
MarcoFalke,2019-10-18 14:03:29,Concept ACK,https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-543762034,543762034,
laanwj,2019-10-23 11:37:22,ACK 9e95931865186d7a9a6dc54b64bd96507e9fea4b,https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-545401758,545401758,
JeremyRubin,2019-11-24 06:17:21,"Hmmm -- sorry for a posthumous comment here, but this patch confuses me a little.\n\nIt seems the better change would be to continue to have CommitTransaction return a success value/reject reason.\n\nWhat's the recommended pattern following this change for checking the status of a committed transaction? What if a transaction is rejected for consensus reasons, and won't be in the wallet? As a w",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-557861414,557861414,
jnewbery,2019-11-24 15:46:13,"This PR didn't change any behaviour. It removed a return value that was not used by any calling code.\n\nSee #9302 for why the RPC code was changed.",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-557900761,557900761,
MarcoFalke,2019-11-24 16:21:28,"And the TODO that this should, is still in the code:\n\n```cpp\n     // TODO: if we expect the failure to be long term or permanent, instead delete wtx from the wallet and return failure. ",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-557903850,557903850,
JeremyRubin,2019-11-24 19:58:50,"Yeah I read those; my point is that it seems that the patched behavior of the function is buggy since #9302, and then in #17154 we just enforce the buggy behavior rather than addressing the TODO and returning an error code, which users of the function may prefer to have...",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-557922266,557922266,
jnewbery,2019-11-24 21:49:58,"Contributions are welcome. If you want to suggest a PR to return failure information from `CommitTransaction()`, please go ahead.",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-557931575,557931575,
MarcoFalke,2019-11-24 23:17:07,"Instead of creating a transaction that is consensus-invalid and then returning a failure and removing the tx again, I'd prefer if the consensus-invalid transaction was not created by the wallet in the first place. Or if that is not possible, the wallet should have checked consensus-validity before storing it in the wallet.dat",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-557939244,557939244,
JeremyRubin,2019-11-25 06:01:05,"@MarcoFalke well I don't disagree it's better to never be wrong in the first place! But the committransaction also seems to be able to fail for mere policy reasons too, right?\n\n\n@jnewbery My original question was, in light of this patch, if there is actually a recommended handling for transactions which may err, what's the ""proper handling"" to recover the relevant information here?\n\nI'd ",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-558003863,558003863,
MarcoFalke,2019-11-25 18:03:47,"> also seems to be able to fail for mere policy reasons too, right\n\nYes.\nIf the policy fail is expected to be short term, the wallet should continue as usual and commit the tx to the `wallet.dat`. If the policy fail is expected to be long term or permanent, the wallet shouldn't commit the tx in the first place.\n\nI think you are arguing that the functionality to check the tx should happen",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-558272027,558272027,
jnewbery,2019-11-25 18:47:59,"I think the most critical thing in `CommitTransaction()` is that the transaction is added to the wallet and old coins are marked spent _before_ the transaction is broadcast. It would be a problem if the transaction was broadcast and then failed to be added to the wallet.\n\nI think adding a call to ATMP with `test_accept` before calling `AddToWallet()` and then returning any error could be an im",https://github.com/bitcoin/bitcoin/pull/17154#issuecomment-558289075,558289075,
MarcoFalke,2019-10-16 15:36:53,"```suggestion\n    void CommitTransaction(CTransactionRef tx, mapValue_t mapValue, std::vector<std::pair<std::string, std::string>> orderForm, CValidationState& state);\n```\n\n:eyes: ",https://github.com/bitcoin/bitcoin/pull/17154#discussion_r335553407,335553407,src/wallet/wallet.h
jnewbery,2019-10-16 16:03:09,fixed,https://github.com/bitcoin/bitcoin/pull/17154#discussion_r335567982,335567982,src/wallet/wallet.h
achow101,2019-10-16 20:31:30,`reserveKey` is not an argument for this function.,https://github.com/bitcoin/bitcoin/pull/17154#discussion_r335694008,335694008,src/wallet/wallet.h
jnewbery,2019-10-16 20:47:56,fixed,https://github.com/bitcoin/bitcoin/pull/17154#discussion_r335701059,335701059,src/wallet/wallet.h
MarcoFalke,2019-10-17 18:55:00,"in commit c7397e074996086578d9ac3db78d654fdbbf58a5:\n\nthis is not a return parameter. The tx is consumed (`std::move`)",https://github.com/bitcoin/bitcoin/pull/17154#discussion_r336172731,336172731,src/wallet/wallet.h
MarcoFalke,2019-10-17 18:56:00,I think this should just be `[out]`?,https://github.com/bitcoin/bitcoin/pull/17154#discussion_r336173230,336173230,src/wallet/wallet.h
MarcoFalke,2019-10-17 19:01:06,"in commit 1f490c9a5f8767477f6ffe382b4a0578dbac5e3e you claim that the return value is removed, but you still return `state`, which is used in a single place (`feebumper`). Haven't thought too much about this, but it seems fine to use there because it can't lead to loss of funds?\n\nAlso, that code path shouldn't be hit unless there is a sudden massive fee spike or a logic error.",https://github.com/bitcoin/bitcoin/pull/17154#discussion_r336175380,336175380,src/wallet/wallet.h
jnewbery,2019-10-18 13:39:09,This actually isn't set any more (since commit 611291c198). I've removed it in a new commit.,https://github.com/bitcoin/bitcoin/pull/17154#discussion_r336495286,336495286,src/wallet/wallet.h
jnewbery,2019-10-18 13:39:14,Thanks. Fixed.,https://github.com/bitcoin/bitcoin/pull/17154#discussion_r336495326,336495326,src/wallet/wallet.h
jnewbery,2019-10-18 13:39:26,"I've removed `state`, since it's never actually set.",https://github.com/bitcoin/bitcoin/pull/17154#discussion_r336495398,336495398,src/wallet/wallet.h
MarcoFalke,2019-10-18 14:02:04,ouch. Good catch :grimacing: ,https://github.com/bitcoin/bitcoin/pull/17154#discussion_r336506374,336506374,src/wallet/wallet.h
