[
  {
    "sha": "c32f3564dbaa98bec8c84b1023b90549d66dd200",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzJmMzU2NGRiYWE5OGJlYzhjODRiMTAyM2I5MDU0OWQ2NmRkMjAw",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-07-11T14:42:49Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-07-13T15:18:42Z"
      },
      "message": "wallet: Add GetBalances to calculate all balances\n\nThe new method `CWallet::GetBalances` computes all balances in one iteration.\nIt also avoids repetitive lock/unlock for each wallet transaction.",
      "tree": {
        "sha": "9affd44eb713553de6b0d00ef22fc0858f083953",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9affd44eb713553de6b0d00ef22fc0858f083953"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c32f3564dbaa98bec8c84b1023b90549d66dd200",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c32f3564dbaa98bec8c84b1023b90549d66dd200",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c32f3564dbaa98bec8c84b1023b90549d66dd200",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c32f3564dbaa98bec8c84b1023b90549d66dd200/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ea7eb62b21affeb56fcea7433cfff9e5bc4742c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ea7eb62b21affeb56fcea7433cfff9e5bc4742c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ea7eb62b21affeb56fcea7433cfff9e5bc4742c"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 42,
      "deletions": 9
    },
    "files": [
      {
        "sha": "52c430e3b9af8cd3f8525807fecdc2af45dcc208",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c32f3564dbaa98bec8c84b1023b90549d66dd200/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c32f3564dbaa98bec8c84b1023b90549d66dd200/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=c32f3564dbaa98bec8c84b1023b90549d66dd200",
        "patch": "@@ -333,15 +333,14 @@ class WalletImpl : public Wallet\n     WalletBalances getBalances() override\n     {\n         WalletBalances result;\n-        result.balance = m_wallet.GetBalance();\n-        result.unconfirmed_balance = m_wallet.GetUnconfirmedBalance();\n-        result.immature_balance = m_wallet.GetImmatureBalance();\n-        result.have_watch_only = m_wallet.HaveWatchOnly();\n-        if (result.have_watch_only) {\n-            result.watch_only_balance = m_wallet.GetWatchOnlyBalance();\n-            result.unconfirmed_watch_only_balance = m_wallet.GetUnconfirmedWatchOnlyBalance();\n-            result.immature_watch_only_balance = m_wallet.GetImmatureWatchOnlyBalance();\n-        }\n+        m_wallet.GetBalances(\n+          result.balance,\n+          result.unconfirmed_balance,\n+          result.immature_balance,\n+          result.have_watch_only,\n+          result.watch_only_balance,\n+          result.unconfirmed_watch_only_balance,\n+          result.immature_watch_only_balance);\n         return result;\n     }\n     bool tryGetBalances(WalletBalances& balances, int& num_blocks) override"
      },
      {
        "sha": "9edd4f64b306572df79c3b41a762f7a7744a82fd",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c32f3564dbaa98bec8c84b1023b90549d66dd200/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c32f3564dbaa98bec8c84b1023b90549d66dd200/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=c32f3564dbaa98bec8c84b1023b90549d66dd200",
        "patch": "@@ -2114,6 +2114,39 @@ void CWallet::ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman\n  * @{\n  */\n \n+void CWallet::GetBalances(CAmount& balance, CAmount& unconfirmed_balance, CAmount& immature_balance, bool& have_watch_only, CAmount& watch_only_balance, CAmount& unconfirmed_watch_only_balance, CAmount& immature_watch_only_balance) const\n+{\n+    LOCK2(cs_main, cs_wallet);\n+\n+    balance = 0;\n+    unconfirmed_balance = 0;\n+    immature_balance = 0;\n+    have_watch_only = HaveWatchOnly();\n+    watch_only_balance = 0;\n+    unconfirmed_watch_only_balance = 0;\n+    immature_watch_only_balance = 0;\n+\n+    for (const auto& entry : mapWallet) {\n+        const CWalletTx* pcoin = &entry.second;\n+        if (pcoin->IsTrusted()) {\n+            balance += pcoin->GetAvailableCredit();\n+            if (have_watch_only) {\n+                watch_only_balance += pcoin->GetAvailableWatchOnlyCredit();\n+            }\n+        } else {\n+            if (pcoin->GetDepthInMainChain() == 0 && pcoin->InMempool()) {\n+                unconfirmed_balance += pcoin->GetAvailableCredit();\n+                if (have_watch_only) {\n+                    unconfirmed_watch_only_balance += pcoin->GetAvailableWatchOnlyCredit();\n+                }\n+            }\n+        }\n+        immature_balance += pcoin->GetImmatureCredit();\n+        if (have_watch_only) {\n+            immature_watch_only_balance += pcoin->GetImmatureWatchOnlyCredit();\n+        }\n+    }\n+}\n \n CAmount CWallet::GetBalance() const\n {"
      },
      {
        "sha": "834822784e8b66a68625ad40eceff5850c2fc2ee",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c32f3564dbaa98bec8c84b1023b90549d66dd200/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c32f3564dbaa98bec8c84b1023b90549d66dd200/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=c32f3564dbaa98bec8c84b1023b90549d66dd200",
        "patch": "@@ -942,6 +942,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) override;\n     // ResendWalletTransactionsBefore may only be called if fBroadcastTransactions!\n     std::vector<uint256> ResendWalletTransactionsBefore(int64_t nTime, CConnman* connman);\n+    void GetBalances(CAmount& balance, CAmount& unconfirmed_balance, CAmount& immature_balance, bool& have_watch_only, CAmount& watch_only_balance, CAmount& unconfirmed_watch_only_balance, CAmount& immature_watch_only_balance) const;\n     CAmount GetBalance() const;\n     CAmount GetUnconfirmedBalance() const;\n     CAmount GetImmatureBalance() const;"
      }
    ]
  }
]