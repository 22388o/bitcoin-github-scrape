[
  {
    "sha": "686013337339cbcfe0966e662c59fcdb3c22c108",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ODYwMTMzMzczMzljYmNmZTA5NjZlNjYyYzU5ZmNkYjNjMjJjMTA4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-05T02:04:38Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-05-06T21:37:45Z"
      },
      "message": "Prevent stuck download: correct solution\n\nPull request #948 introduced a fix for nodes stuck on a long side branch\nof the main chain. The fix was non-functional however, as the additional\ngetdata request was created in a first step of processing, but dropped\nin a second step as it was considered redundant. This commits fixes it\nby sending the request directly.",
      "tree": {
        "sha": "624a928ff3281aa54b38fd287374403224cdc6bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/624a928ff3281aa54b38fd287374403224cdc6bb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/686013337339cbcfe0966e662c59fcdb3c22c108",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/686013337339cbcfe0966e662c59fcdb3c22c108",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/686013337339cbcfe0966e662c59fcdb3c22c108",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/686013337339cbcfe0966e662c59fcdb3c22c108/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e69fc6e84fb07ec3f911310455fe6520893e1d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e69fc6e84fb07ec3f911310455fe6520893e1d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e69fc6e84fb07ec3f911310455fe6520893e1d8"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 14,
      "deletions": 2
    },
    "files": [
      {
        "sha": "821bfbb47665e472ae30ca820536ff8dfd1e9725",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/686013337339cbcfe0966e662c59fcdb3c22c108/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/686013337339cbcfe0966e662c59fcdb3c22c108/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=686013337339cbcfe0966e662c59fcdb3c22c108",
        "patch": "@@ -2391,6 +2391,12 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             return error(\"message inv size() = %d\", vInv.size());\n         }\n \n+        // find last block in inv vector\n+        unsigned int nLastBlock = (unsigned int)(-1);\n+        for (unsigned int nInv = 0; nInv < vInv.size(); nInv++) {\n+            if (vInv[vInv.size() - 1 - nInv].type == MSG_BLOCK)\n+                nLastBlock = vInv.size() - 1 - nInv;\n+        }\n         CTxDB txdb(\"r\");\n         for (unsigned int nInv = 0; nInv < vInv.size(); nInv++)\n         {\n@@ -2407,9 +2413,15 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             // Always request the last block in an inv bundle (even if we already have it), as it is the\n             // trigger for the other side to send further invs. If we are stuck on a (very long) side chain,\n             // this is necessary to connect earlier received orphan blocks to the chain again.\n-            if (!fAlreadyHave || (inv.type == MSG_BLOCK && nInv==vInv.size()-1))\n+            if (fAlreadyHave && nInv == nLastBlock) {\n+                // bypass mapAskFor, and send request directly; it must go through.\n+                std::vector<CInv> vGetData(1,inv);\n+                pfrom->PushMessage(\"getdata\", vGetData);\n+            }\n+\n+            if (!fAlreadyHave)\n                 pfrom->AskFor(inv);\n-            if (inv.type == MSG_BLOCK && mapOrphanBlocks.count(inv.hash))\n+            else if (inv.type == MSG_BLOCK && mapOrphanBlocks.count(inv.hash))\n                 pfrom->PushGetBlocks(pindexBest, GetOrphanRoot(mapOrphanBlocks[inv.hash]));\n \n             // Track requests for our stuff"
      }
    ]
  }
]